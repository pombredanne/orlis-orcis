android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.ActionBarDrawerToggle:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> IMPL
    float TOGGLE_DRAWABLE_OFFSET -> TOGGLE_DRAWABLE_OFFSET
    int ID_HOME -> ID_HOME
    android.app.Activity mActivity -> mActivity
    android.support.v4.app.ActionBarDrawerToggle$Delegate mActivityImpl -> mActivityImpl
    android.support.v4.widget.DrawerLayout mDrawerLayout -> mDrawerLayout
    boolean mDrawerIndicatorEnabled -> mDrawerIndicatorEnabled
    boolean mHasCustomUpIndicator -> mHasCustomUpIndicator
    android.graphics.drawable.Drawable mHomeAsUpIndicator -> mHomeAsUpIndicator
    android.graphics.drawable.Drawable mDrawerImage -> mDrawerImage
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> mSlider
    int mDrawerImageResource -> mDrawerImageResource
    int mOpenDrawerContentDescRes -> mOpenDrawerContentDescRes
    int mCloseDrawerContentDescRes -> mCloseDrawerContentDescRes
    java.lang.Object mSetIndicatorInfo -> mSetIndicatorInfo
    boolean assumeMaterial(android.content.Context) -> assumeMaterial
    void syncState() -> syncState
    void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
    android.app.Activity access$400(android.support.v4.app.ActionBarDrawerToggle) -> access$400
android.support.v4.app.ActionBarDrawerToggle$1 -> android.support.v4.app.ActionBarDrawerToggle$1:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2 -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$Delegate -> android.support.v4.app.ActionBarDrawerToggle$Delegate:
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$DelegateProvider -> android.support.v4.app.ActionBarDrawerToggle$DelegateProvider:
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.ActionBarDrawerToggle$SlideDrawable:
    boolean mHasMirroring -> mHasMirroring
    android.graphics.Rect mTmpRect -> mTmpRect
    float mPosition -> mPosition
    float mOffset -> mOffset
    android.support.v4.app.ActionBarDrawerToggle this$0 -> this$0
    void setPosition(float) -> setPosition
    float getPosition() -> getPosition
    void setOffset(float) -> setOffset
    void draw(android.graphics.Canvas) -> draw
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.ActionBarDrawerToggleHoneycomb:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    java.lang.reflect.Method setHomeAsUpIndicator -> setHomeAsUpIndicator
    java.lang.reflect.Method setHomeActionContentDescription -> setHomeActionContentDescription
    android.widget.ImageView upIndicatorView -> upIndicatorView
android.support.v4.app.ActionBarDrawerToggleJellybeanMR2 -> android.support.v4.app.ActionBarDrawerToggleJellybeanMR2:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void startActivity(android.app.Activity,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
    void finishAfterTransition(android.app.Activity) -> finishAfterTransition
    void setEnterSharedElementCallback(android.app.Activity,android.support.v4.app.SharedElementCallback) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.app.Activity,android.support.v4.app.SharedElementCallback) -> setExitSharedElementCallback
    void postponeEnterTransition(android.app.Activity) -> postponeEnterTransition
    void startPostponedEnterTransition(android.app.Activity) -> startPostponedEnterTransition
    android.support.v4.app.ActivityCompat21$SharedElementCallback21 createCallback(android.support.v4.app.SharedElementCallback) -> createCallback
android.support.v4.app.ActivityCompat$SharedElementCallback21Impl -> android.support.v4.app.ActivityCompat$SharedElementCallback21Impl:
    android.support.v4.app.SharedElementCallback mCallback -> mCallback
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
android.support.v4.app.ActivityCompat21 -> android.support.v4.app.ActivityCompat21:
    void finishAfterTransition(android.app.Activity) -> finishAfterTransition
    void setEnterSharedElementCallback(android.app.Activity,android.support.v4.app.ActivityCompat21$SharedElementCallback21) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.app.Activity,android.support.v4.app.ActivityCompat21$SharedElementCallback21) -> setExitSharedElementCallback
    void postponeEnterTransition(android.app.Activity) -> postponeEnterTransition
    void startPostponedEnterTransition(android.app.Activity) -> startPostponedEnterTransition
    android.app.SharedElementCallback createCallback(android.support.v4.app.ActivityCompat21$SharedElementCallback21) -> createCallback
android.support.v4.app.ActivityCompat21$SharedElementCallback21 -> android.support.v4.app.ActivityCompat21$SharedElementCallback21:
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
android.support.v4.app.ActivityCompat21$SharedElementCallbackImpl -> android.support.v4.app.ActivityCompat21$SharedElementCallbackImpl:
    android.support.v4.app.ActivityCompat21$SharedElementCallback21 mCallback -> mCallback
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.ActivityCompatJB -> android.support.v4.app.ActivityCompatJB:
    void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityManagerCompat -> android.support.v4.app.ActivityManagerCompat:
    boolean isLowRamDevice(android.app.ActivityManager) -> isLowRamDevice
android.support.v4.app.ActivityManagerCompatKitKat -> android.support.v4.app.ActivityManagerCompatKitKat:
    boolean isLowRamDevice(android.app.ActivityManager) -> isLowRamDevice
android.support.v4.app.ActivityOptionsCompat -> android.support.v4.app.ActivityOptionsCompat:
    android.support.v4.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String) -> makeSceneTransitionAnimation
    android.support.v4.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,android.support.v4.util.Pair[]) -> makeSceneTransitionAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImpl21 -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImpl21:
    android.support.v4.app.ActivityOptionsCompat21 mImpl -> mImpl
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB:
    android.support.v4.app.ActivityOptionsCompatJB mImpl -> mImpl
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat21 -> android.support.v4.app.ActivityOptionsCompat21:
    android.app.ActivityOptions mActivityOptions -> mActivityOptions
    android.support.v4.app.ActivityOptionsCompat21 makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String) -> makeSceneTransitionAnimation
    android.support.v4.app.ActivityOptionsCompat21 makeSceneTransitionAnimation(android.app.Activity,android.view.View[],java.lang.String[]) -> makeSceneTransitionAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat21) -> update
android.support.v4.app.ActivityOptionsCompatJB -> android.support.v4.app.ActivityOptionsCompatJB:
    android.app.ActivityOptions mActivityOptions -> mActivityOptions
    android.support.v4.app.ActivityOptionsCompatJB makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompatJB) -> update
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    java.lang.String TAG -> TAG
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    int OP_NULL -> OP_NULL
    int OP_ADD -> OP_ADD
    int OP_REPLACE -> OP_REPLACE
    int OP_REMOVE -> OP_REMOVE
    int OP_HIDE -> OP_HIDE
    int OP_SHOW -> OP_SHOW
    int OP_DETACH -> OP_DETACH
    int OP_ATTACH -> OP_ATTACH
    android.support.v4.app.BackStackRecord$Op mHead -> mHead
    android.support.v4.app.BackStackRecord$Op mTail -> mTail
    int mNumOp -> mNumOp
    int mEnterAnim -> mEnterAnim
    int mExitAnim -> mExitAnim
    int mPopEnterAnim -> mPopEnterAnim
    int mPopExitAnim -> mPopExitAnim
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    boolean mAddToBackStack -> mAddToBackStack
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    java.lang.String mName -> mName
    boolean mCommitted -> mCommitted
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.util.ArrayList mSharedElementSourceNames -> mSharedElementSourceNames
    java.util.ArrayList mSharedElementTargetNames -> mSharedElementTargetNames
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String) -> addSharedElement
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> commitInternal
    void run() -> run
    void setFirstOut(android.util.SparseArray,android.support.v4.app.Fragment) -> setFirstOut
    void setLastIn(android.util.SparseArray,android.support.v4.app.Fragment) -> setLastIn
    void calculateFragments(android.util.SparseArray,android.util.SparseArray) -> calculateFragments
    void calculateBackFragments(android.util.SparseArray,android.util.SparseArray) -> calculateBackFragments
    android.support.v4.app.BackStackRecord$TransitionState popFromBackStack(boolean,android.support.v4.app.BackStackRecord$TransitionState,android.util.SparseArray,android.util.SparseArray) -> popFromBackStack
    java.lang.String getName() -> getName
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    boolean isEmpty() -> isEmpty
    android.support.v4.app.BackStackRecord$TransitionState beginTransition(android.util.SparseArray,android.util.SparseArray,boolean) -> beginTransition
    java.lang.Object getEnterTransition(android.support.v4.app.Fragment,boolean) -> getEnterTransition
    java.lang.Object getExitTransition(android.support.v4.app.Fragment,boolean) -> getExitTransition
    java.lang.Object getSharedElementTransition(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean) -> getSharedElementTransition
    java.lang.Object captureExitingViews(java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList,android.support.v4.util.ArrayMap) -> captureExitingViews
    android.support.v4.util.ArrayMap remapSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean) -> remapSharedElements
    boolean configureTransitions(int,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.util.SparseArray,android.util.SparseArray) -> configureTransitions
    void prepareSharedElementTransition(android.support.v4.app.BackStackRecord$TransitionState,android.view.View,java.lang.Object,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,java.util.ArrayList) -> prepareSharedElementTransition
    void callSharedElementEnd(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap) -> callSharedElementEnd
    void setEpicenterIn(android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState) -> setEpicenterIn
    android.support.v4.util.ArrayMap mapSharedElementsIn(android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment) -> mapSharedElementsIn
    android.support.v4.util.ArrayMap remapNames(java.util.ArrayList,java.util.ArrayList,android.support.v4.util.ArrayMap) -> remapNames
    android.support.v4.util.ArrayMap mapEnteringSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean) -> mapEnteringSharedElements
    void excludeHiddenFragmentsAfterEnter(android.view.View,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> excludeHiddenFragmentsAfterEnter
    void excludeHiddenFragments(android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> excludeHiddenFragments
    void setNameOverride(android.support.v4.util.ArrayMap,java.lang.String,java.lang.String) -> setNameOverride
    void setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,java.util.ArrayList,java.util.ArrayList) -> setNameOverrides
    void setBackNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean) -> setBackNameOverrides
    void setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean) -> setNameOverrides
    android.support.v4.util.ArrayMap access$000(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment) -> access$000
    void access$100(android.support.v4.app.BackStackRecord,android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState) -> access$100
    void access$200(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap) -> access$200
    void access$300(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> access$300
android.support.v4.app.BackStackRecord$1 -> android.support.v4.app.BackStackRecord$1:
    android.support.v4.app.Fragment val$inFragment -> val$inFragment
    android.support.v4.app.BackStackRecord this$0 -> this$0
    android.view.View getView() -> getView
android.support.v4.app.BackStackRecord$2 -> android.support.v4.app.BackStackRecord$2:
    android.view.View val$sceneRoot -> val$sceneRoot
    java.lang.Object val$sharedElementTransition -> val$sharedElementTransition
    java.util.ArrayList val$sharedElementTargets -> val$sharedElementTargets
    android.support.v4.app.BackStackRecord$TransitionState val$state -> val$state
    boolean val$isBack -> val$isBack
    android.support.v4.app.Fragment val$inFragment -> val$inFragment
    android.support.v4.app.Fragment val$outFragment -> val$outFragment
    android.support.v4.app.BackStackRecord this$0 -> this$0
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.BackStackRecord$3 -> android.support.v4.app.BackStackRecord$3:
    android.view.View val$sceneRoot -> val$sceneRoot
    android.support.v4.app.BackStackRecord$TransitionState val$state -> val$state
    int val$containerId -> val$containerId
    java.lang.Object val$transition -> val$transition
    android.support.v4.app.BackStackRecord this$0 -> this$0
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> next
    android.support.v4.app.BackStackRecord$Op prev -> prev
    int cmd -> cmd
    android.support.v4.app.Fragment fragment -> fragment
    int enterAnim -> enterAnim
    int exitAnim -> exitAnim
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    java.util.ArrayList removed -> removed
android.support.v4.app.BackStackRecord$TransitionState -> android.support.v4.app.BackStackRecord$TransitionState:
    android.support.v4.util.ArrayMap nameOverrides -> nameOverrides
    java.util.ArrayList hiddenFragmentViews -> hiddenFragmentViews
    android.support.v4.app.FragmentTransitionCompat21$EpicenterView enteringEpicenterView -> enteringEpicenterView
    android.view.View nonExistentView -> nonExistentView
    android.support.v4.app.BackStackRecord this$0 -> this$0
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> mOps
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    java.lang.String mName -> mName
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.util.ArrayList mSharedElementSourceNames -> mSharedElementSourceNames
    java.util.ArrayList mSharedElementTargetNames -> mSharedElementTargetNames
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.BundleUtil -> android.support.v4.app.BundleUtil:
    android.os.Bundle[] getBundleArrayFromBundle(android.os.Bundle,java.lang.String) -> getBundleArrayFromBundle
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mViewDestroyed -> mViewDestroyed
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.DialogFragment$DialogStyle -> android.support.v4.app.DialogFragment$DialogStyle:
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> sClassMap
    java.lang.Object USE_DEFAULT_TRANSITION -> USE_DEFAULT_TRANSITION
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    java.lang.Object mEnterTransition -> mEnterTransition
    java.lang.Object mReturnTransition -> mReturnTransition
    java.lang.Object mExitTransition -> mExitTransition
    java.lang.Object mReenterTransition -> mReenterTransition
    java.lang.Object mSharedElementEnterTransition -> mSharedElementEnterTransition
    java.lang.Object mSharedElementReturnTransition -> mSharedElementReturnTransition
    java.lang.Boolean mAllowReturnTransitionOverlap -> mAllowReturnTransitionOverlap
    java.lang.Boolean mAllowEnterTransitionOverlap -> mAllowEnterTransitionOverlap
    android.support.v4.app.SharedElementCallback mEnterTransitionCallback -> mEnterTransitionCallback
    android.support.v4.app.SharedElementCallback mExitTransitionCallback -> mExitTransitionCallback
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> isSupportFragmentClass
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    boolean hasOptionsMenu() -> hasOptionsMenu
    boolean isMenuVisible() -> isMenuVisible
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void setEnterSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setExitSharedElementCallback
    void setEnterTransition(java.lang.Object) -> setEnterTransition
    java.lang.Object getEnterTransition() -> getEnterTransition
    void setReturnTransition(java.lang.Object) -> setReturnTransition
    java.lang.Object getReturnTransition() -> getReturnTransition
    void setExitTransition(java.lang.Object) -> setExitTransition
    java.lang.Object getExitTransition() -> getExitTransition
    void setReenterTransition(java.lang.Object) -> setReenterTransition
    java.lang.Object getReenterTransition() -> getReenterTransition
    void setSharedElementEnterTransition(java.lang.Object) -> setSharedElementEnterTransition
    java.lang.Object getSharedElementEnterTransition() -> getSharedElementEnterTransition
    void setSharedElementReturnTransition(java.lang.Object) -> setSharedElementReturnTransition
    java.lang.Object getSharedElementReturnTransition() -> getSharedElementReturnTransition
    void setAllowEnterTransitionOverlap(boolean) -> setAllowEnterTransitionOverlap
    boolean getAllowEnterTransitionOverlap() -> getAllowEnterTransitionOverlap
    void setAllowReturnTransitionOverlap(boolean) -> setAllowReturnTransitionOverlap
    boolean getAllowReturnTransitionOverlap() -> getAllowReturnTransitionOverlap
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
    boolean hasView() -> hasView
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> mState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void supportFinishAfterTransition() -> supportFinishAfterTransition
    void setEnterSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setExitSharedElementCallback
    void supportPostponeEnterTransition() -> supportPostponeEnterTransition
    void supportStartPostponedEnterTransition() -> supportStartPostponedEnterTransition
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.FragmentActivity$2:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
    boolean hasView() -> hasView
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object activity -> activity
    java.lang.Object custom -> custom
    android.support.v4.util.SimpleArrayMap children -> children
    java.util.ArrayList fragments -> fragments
    android.support.v4.util.SimpleArrayMap loaders -> loaders
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    android.view.View findViewById(int) -> findViewById
    boolean hasView() -> hasView
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean HONEYCOMB -> HONEYCOMB
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> TARGET_REQUEST_CODE_STATE_TAG
    java.lang.String TARGET_STATE_TAG -> TARGET_STATE_TAG
    java.lang.String VIEW_STATE_TAG -> VIEW_STATE_TAG
    java.lang.String USER_VISIBLE_HINT_TAG -> USER_VISIBLE_HINT_TAG
    java.util.ArrayList mPendingActions -> mPendingActions
    java.lang.Runnable[] mTmpActions -> mTmpActions
    boolean mExecutingActions -> mExecutingActions
    java.util.ArrayList mActive -> mActive
    java.util.ArrayList mAdded -> mAdded
    java.util.ArrayList mAvailIndices -> mAvailIndices
    java.util.ArrayList mBackStack -> mBackStack
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    int mCurState -> mCurState
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    android.support.v4.app.Fragment mParent -> mParent
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    boolean mStateSaved -> mStateSaved
    boolean mDestroyed -> mDestroyed
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    android.os.Bundle mStateBundle -> mStateBundle
    android.util.SparseArray mStateArray -> mStateArray
    java.lang.Runnable mExecCommit -> mExecCommit
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    int ANIM_DUR -> ANIM_DUR
    int ANIM_STYLE_OPEN_ENTER -> ANIM_STYLE_OPEN_ENTER
    int ANIM_STYLE_OPEN_EXIT -> ANIM_STYLE_OPEN_EXIT
    int ANIM_STYLE_CLOSE_ENTER -> ANIM_STYLE_CLOSE_ENTER
    int ANIM_STYLE_CLOSE_EXIT -> ANIM_STYLE_CLOSE_EXIT
    int ANIM_STYLE_FADE_ENTER -> ANIM_STYLE_FADE_ENTER
    int ANIM_STYLE_FADE_EXIT -> ANIM_STYLE_FADE_EXIT
    void throwException(java.lang.RuntimeException) -> throwException
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void moveToState(int,boolean) -> moveToState
    void moveToState(int,int,int,boolean) -> moveToState
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void checkStateLoss() -> checkStateLoss
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> reportBackStackChanged
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> popBackStackState
    java.util.ArrayList retainNonConfig() -> retainNonConfig
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> restoreAllState
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    android.view.LayoutInflater$Factory getLayoutInflaterFactory() -> getLayoutInflaterFactory
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    java.lang.String val$name -> val$name
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> val$id
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerImpl$FragmentTag -> android.support.v4.app.FragmentManagerImpl$FragmentTag:
    int[] Fragment -> Fragment
    int Fragment_id -> Fragment_id
    int Fragment_name -> Fragment_name
    int Fragment_tag -> Fragment_tag
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> mActive
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> mClassName
    int mIndex -> mIndex
    boolean mFromLayout -> mFromLayout
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mRetainInstance -> mRetainInstance
    boolean mDetached -> mDetached
    android.os.Bundle mArguments -> mArguments
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.support.v4.app.Fragment mInstance -> mInstance
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    java.util.ArrayList mSavedState -> mSavedState
    java.util.ArrayList mFragments -> mFragments
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> mTabs
    android.widget.FrameLayout mRealTabContent -> mRealTabContent
    android.content.Context mContext -> mContext
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    int mContainerId -> mContainerId
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    boolean mAttached -> mAttached
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    void ensureHierarchy(android.content.Context) -> ensureHierarchy
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> ensureContent
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> doTabChanged
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> mContext
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> curTab
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    java.lang.String tag -> tag
    java.lang.Class clss -> clss
    android.os.Bundle args -> args
    android.support.v4.app.Fragment fragment -> fragment
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> access$102
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> access$100
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> access$200
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> access$300
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> access$400
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String) -> addSharedElement
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.FragmentTransaction$Transit -> android.support.v4.app.FragmentTransaction$Transit:
android.support.v4.app.FragmentTransitionCompat21 -> android.support.v4.app.FragmentTransitionCompat21:
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    java.lang.Object captureExitingViews(java.lang.Object,android.view.View,java.util.ArrayList,java.util.Map) -> captureExitingViews
    void excludeTarget(java.lang.Object,android.view.View,boolean) -> excludeTarget
    void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    void addTransitionTargets(java.lang.Object,java.lang.Object,android.view.View,android.support.v4.app.FragmentTransitionCompat21$ViewRetriever,android.view.View,android.support.v4.app.FragmentTransitionCompat21$EpicenterView,java.util.Map,java.util.ArrayList,java.util.Map,java.util.ArrayList) -> addTransitionTargets
    java.lang.Object mergeTransitions(java.lang.Object,java.lang.Object,java.lang.Object,boolean) -> mergeTransitions
    void setSharedElementEpicenter(android.transition.Transition,android.support.v4.app.FragmentTransitionCompat21$EpicenterView) -> setSharedElementEpicenter
    android.graphics.Rect getBoundsOnScreen(android.view.View) -> getBoundsOnScreen
    void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    void cleanupTransitions(android.view.View,android.view.View,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.util.Map) -> cleanupTransitions
    void removeTargets(java.lang.Object,java.util.ArrayList) -> removeTargets
    void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    void access$000(java.util.ArrayList,android.view.View) -> access$000
    android.graphics.Rect access$100(android.view.View) -> access$100
android.support.v4.app.FragmentTransitionCompat21$1 -> android.support.v4.app.FragmentTransitionCompat21$1:
    android.graphics.Rect val$epicenter -> val$epicenter
    android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
android.support.v4.app.FragmentTransitionCompat21$2 -> android.support.v4.app.FragmentTransitionCompat21$2:
    android.view.View val$container -> val$container
    android.support.v4.app.FragmentTransitionCompat21$ViewRetriever val$inFragment -> val$inFragment
    java.util.Map val$nameOverrides -> val$nameOverrides
    java.util.Map val$renamedViews -> val$renamedViews
    android.transition.Transition val$enterTransition -> val$enterTransition
    java.util.ArrayList val$enteringViews -> val$enteringViews
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.FragmentTransitionCompat21$3 -> android.support.v4.app.FragmentTransitionCompat21$3:
    android.graphics.Rect mEpicenter -> mEpicenter
    android.support.v4.app.FragmentTransitionCompat21$EpicenterView val$epicenterView -> val$epicenterView
    android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
android.support.v4.app.FragmentTransitionCompat21$4 -> android.support.v4.app.FragmentTransitionCompat21$4:
    android.view.View val$sceneRoot -> val$sceneRoot
    android.transition.Transition val$enterTransition -> val$enterTransition
    android.view.View val$nonExistentView -> val$nonExistentView
    java.util.ArrayList val$enteringViews -> val$enteringViews
    android.transition.Transition val$exitTransition -> val$exitTransition
    java.util.ArrayList val$exitingViews -> val$exitingViews
    android.transition.Transition val$sharedElementTransition -> val$sharedElementTransition
    java.util.ArrayList val$sharedElementTargets -> val$sharedElementTargets
    java.util.Map val$renamedViews -> val$renamedViews
    java.util.ArrayList val$hiddenViews -> val$hiddenViews
    android.transition.Transition val$overallTransition -> val$overallTransition
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.FragmentTransitionCompat21$EpicenterView -> android.support.v4.app.FragmentTransitionCompat21$EpicenterView:
    android.view.View epicenter -> epicenter
android.support.v4.app.FragmentTransitionCompat21$ViewRetriever -> android.support.v4.app.FragmentTransitionCompat21$ViewRetriever:
    android.view.View getView() -> getView
android.support.v4.app.INotificationSideChannel -> android.support.v4.app.INotificationSideChannel:
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.INotificationSideChannel$Stub -> android.support.v4.app.INotificationSideChannel$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_notify -> TRANSACTION_notify
    int TRANSACTION_cancel -> TRANSACTION_cancel
    int TRANSACTION_cancelAll -> TRANSACTION_cancelAll
    android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.app.INotificationSideChannel$Stub$Proxy -> android.support.v4.app.INotificationSideChannel$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> setListShown
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> this$0
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.util.SparseArrayCompat mLoaders -> mLoaders
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> mInactiveLoaders
    java.lang.String mWho -> mWho
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mCreatingLoader -> mCreatingLoader
    void updateActivity(android.support.v4.app.FragmentActivity) -> updateActivity
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createLoader
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createAndInstallLoader
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> installLoader
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> doStart
    void doStop() -> doStop
    void doRetain() -> doRetain
    void finishRetain() -> finishRetain
    void doReportNextStart() -> doReportNextStart
    void doReportStart() -> doReportStart
    void doDestroy() -> doDestroy
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> mId
    android.os.Bundle mArgs -> mArgs
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    android.support.v4.content.Loader mLoader -> mLoader
    boolean mHaveData -> mHaveData
    boolean mDeliveredData -> mDeliveredData
    java.lang.Object mData -> mData
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mReportNextStart -> mReportNextStart
    boolean mDestroyed -> mDestroyed
    boolean mListenerRegistered -> mListenerRegistered
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    void start() -> start
    void retain() -> retain
    void finishRetain() -> finishRetain
    void reportStart() -> reportStart
    void stop() -> stop
    void destroy() -> destroy
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String TAG -> TAG
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> IMPL
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.NavUtils$NavUtilsImpl:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.NavUtils$NavUtilsImplBase:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.NavUtils$NavUtilsImplJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> superGetParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtilsJB -> android.support.v4.app.NavUtilsJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> wrap
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationBuilderWithActions -> android.support.v4.app.NotificationBuilderWithActions:
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
android.support.v4.app.NotificationBuilderWithBuilderAccessor -> android.support.v4.app.NotificationBuilderWithBuilderAccessor:
    android.app.Notification$Builder getBuilder() -> getBuilder
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int DEFAULT_ALL -> DEFAULT_ALL
    int DEFAULT_SOUND -> DEFAULT_SOUND
    int DEFAULT_VIBRATE -> DEFAULT_VIBRATE
    int DEFAULT_LIGHTS -> DEFAULT_LIGHTS
    int STREAM_DEFAULT -> STREAM_DEFAULT
    int FLAG_SHOW_LIGHTS -> FLAG_SHOW_LIGHTS
    int FLAG_ONGOING_EVENT -> FLAG_ONGOING_EVENT
    int FLAG_INSISTENT -> FLAG_INSISTENT
    int FLAG_ONLY_ALERT_ONCE -> FLAG_ONLY_ALERT_ONCE
    int FLAG_AUTO_CANCEL -> FLAG_AUTO_CANCEL
    int FLAG_NO_CLEAR -> FLAG_NO_CLEAR
    int FLAG_FOREGROUND_SERVICE -> FLAG_FOREGROUND_SERVICE
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int FLAG_LOCAL_ONLY -> FLAG_LOCAL_ONLY
    int FLAG_GROUP_SUMMARY -> FLAG_GROUP_SUMMARY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    java.lang.String EXTRA_TITLE -> EXTRA_TITLE
    java.lang.String EXTRA_TITLE_BIG -> EXTRA_TITLE_BIG
    java.lang.String EXTRA_TEXT -> EXTRA_TEXT
    java.lang.String EXTRA_SUB_TEXT -> EXTRA_SUB_TEXT
    java.lang.String EXTRA_INFO_TEXT -> EXTRA_INFO_TEXT
    java.lang.String EXTRA_SUMMARY_TEXT -> EXTRA_SUMMARY_TEXT
    java.lang.String EXTRA_BIG_TEXT -> EXTRA_BIG_TEXT
    java.lang.String EXTRA_SMALL_ICON -> EXTRA_SMALL_ICON
    java.lang.String EXTRA_LARGE_ICON -> EXTRA_LARGE_ICON
    java.lang.String EXTRA_LARGE_ICON_BIG -> EXTRA_LARGE_ICON_BIG
    java.lang.String EXTRA_PROGRESS -> EXTRA_PROGRESS
    java.lang.String EXTRA_PROGRESS_MAX -> EXTRA_PROGRESS_MAX
    java.lang.String EXTRA_PROGRESS_INDETERMINATE -> EXTRA_PROGRESS_INDETERMINATE
    java.lang.String EXTRA_SHOW_CHRONOMETER -> EXTRA_SHOW_CHRONOMETER
    java.lang.String EXTRA_SHOW_WHEN -> EXTRA_SHOW_WHEN
    java.lang.String EXTRA_PICTURE -> EXTRA_PICTURE
    java.lang.String EXTRA_TEXT_LINES -> EXTRA_TEXT_LINES
    java.lang.String EXTRA_TEMPLATE -> EXTRA_TEMPLATE
    java.lang.String EXTRA_PEOPLE -> EXTRA_PEOPLE
    java.lang.String EXTRA_BACKGROUND_IMAGE_URI -> EXTRA_BACKGROUND_IMAGE_URI
    java.lang.String EXTRA_MEDIA_SESSION -> EXTRA_MEDIA_SESSION
    java.lang.String EXTRA_COMPACT_ACTIONS -> EXTRA_COMPACT_ACTIONS
    int COLOR_DEFAULT -> COLOR_DEFAULT
    int VISIBILITY_PUBLIC -> VISIBILITY_PUBLIC
    int VISIBILITY_PRIVATE -> VISIBILITY_PRIVATE
    int VISIBILITY_SECRET -> VISIBILITY_SECRET
    java.lang.String CATEGORY_CALL -> CATEGORY_CALL
    java.lang.String CATEGORY_MESSAGE -> CATEGORY_MESSAGE
    java.lang.String CATEGORY_EMAIL -> CATEGORY_EMAIL
    java.lang.String CATEGORY_EVENT -> CATEGORY_EVENT
    java.lang.String CATEGORY_PROMO -> CATEGORY_PROMO
    java.lang.String CATEGORY_ALARM -> CATEGORY_ALARM
    java.lang.String CATEGORY_PROGRESS -> CATEGORY_PROGRESS
    java.lang.String CATEGORY_SOCIAL -> CATEGORY_SOCIAL
    java.lang.String CATEGORY_ERROR -> CATEGORY_ERROR
    java.lang.String CATEGORY_TRANSPORT -> CATEGORY_TRANSPORT
    java.lang.String CATEGORY_SYSTEM -> CATEGORY_SYSTEM
    java.lang.String CATEGORY_SERVICE -> CATEGORY_SERVICE
    java.lang.String CATEGORY_RECOMMENDATION -> CATEGORY_RECOMMENDATION
    java.lang.String CATEGORY_STATUS -> CATEGORY_STATUS
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    void addActionsToBuilder(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> addActionsToBuilder
    void addStyleToBuilderJellybean(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> addStyleToBuilderJellybean
    android.app.Notification[] getNotificationArrayFromBundle(android.os.Bundle,java.lang.String) -> getNotificationArrayFromBundle
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    java.lang.String getCategory(android.app.Notification) -> getCategory
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
    void access$000(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> access$000
    void access$100(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> access$100
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$200() -> access$200
    android.app.Notification[] access$500(android.os.Bundle,java.lang.String) -> access$500
android.support.v4.app.NotificationCompat$1 -> android.support.v4.app.NotificationCompat$1:
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    android.os.Bundle mExtras -> mExtras
    android.support.v4.app.RemoteInput[] mRemoteInputs -> mRemoteInputs
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
    android.support.v4.app.NotificationCompatBase$Action$Factory FACTORY -> FACTORY
    int getIcon() -> getIcon
    java.lang.CharSequence getTitle() -> getTitle
    android.app.PendingIntent getActionIntent() -> getActionIntent
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInput[] getRemoteInputs() -> getRemoteInputs
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> getRemoteInputs
    android.os.Bundle access$300(android.support.v4.app.NotificationCompat$Action) -> access$300
android.support.v4.app.NotificationCompat$Action$1 -> android.support.v4.app.NotificationCompat$Action$1:
    android.support.v4.app.NotificationCompat$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
    android.support.v4.app.NotificationCompat$Action[] newArray(int) -> newArray
    android.support.v4.app.NotificationCompatBase$Action[] newArray(int) -> newArray
    android.support.v4.app.NotificationCompatBase$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
android.support.v4.app.NotificationCompat$Action$Builder -> android.support.v4.app.NotificationCompat$Action$Builder:
    int mIcon -> mIcon
    java.lang.CharSequence mTitle -> mTitle
    android.app.PendingIntent mIntent -> mIntent
    android.os.Bundle mExtras -> mExtras
    java.util.ArrayList mRemoteInputs -> mRemoteInputs
    android.support.v4.app.NotificationCompat$Action$Builder addExtras(android.os.Bundle) -> addExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.NotificationCompat$Action$Builder addRemoteInput(android.support.v4.app.RemoteInput) -> addRemoteInput
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Extender) -> extend
    android.support.v4.app.NotificationCompat$Action build() -> build
android.support.v4.app.NotificationCompat$Action$Extender -> android.support.v4.app.NotificationCompat$Action$Extender:
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Builder) -> extend
android.support.v4.app.NotificationCompat$Action$WearableExtender -> android.support.v4.app.NotificationCompat$Action$WearableExtender:
    java.lang.String EXTRA_WEARABLE_EXTENSIONS -> EXTRA_WEARABLE_EXTENSIONS
    java.lang.String KEY_FLAGS -> KEY_FLAGS
    java.lang.String KEY_IN_PROGRESS_LABEL -> KEY_IN_PROGRESS_LABEL
    java.lang.String KEY_CONFIRM_LABEL -> KEY_CONFIRM_LABEL
    java.lang.String KEY_CANCEL_LABEL -> KEY_CANCEL_LABEL
    int FLAG_AVAILABLE_OFFLINE -> FLAG_AVAILABLE_OFFLINE
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    int mFlags -> mFlags
    java.lang.CharSequence mInProgressLabel -> mInProgressLabel
    java.lang.CharSequence mConfirmLabel -> mConfirmLabel
    java.lang.CharSequence mCancelLabel -> mCancelLabel
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Builder) -> extend
    android.support.v4.app.NotificationCompat$Action$WearableExtender clone() -> clone
    android.support.v4.app.NotificationCompat$Action$WearableExtender setAvailableOffline(boolean) -> setAvailableOffline
    boolean isAvailableOffline() -> isAvailableOffline
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Action$WearableExtender setInProgressLabel(java.lang.CharSequence) -> setInProgressLabel
    java.lang.CharSequence getInProgressLabel() -> getInProgressLabel
    android.support.v4.app.NotificationCompat$Action$WearableExtender setConfirmLabel(java.lang.CharSequence) -> setConfirmLabel
    java.lang.CharSequence getConfirmLabel() -> getConfirmLabel
    android.support.v4.app.NotificationCompat$Action$WearableExtender setCancelLabel(java.lang.CharSequence) -> setCancelLabel
    java.lang.CharSequence getCancelLabel() -> getCancelLabel
    java.lang.Object clone() -> clone
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.graphics.Bitmap mBigLargeIcon -> mBigLargeIcon
    boolean mBigLargeIconSet -> mBigLargeIconSet
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    int MAX_CHARSEQUENCE_LENGTH -> MAX_CHARSEQUENCE_LENGTH
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mShowWhen -> mShowWhen
    boolean mUseChronometer -> mUseChronometer
    android.support.v4.app.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.lang.String mGroupKey -> mGroupKey
    boolean mGroupSummary -> mGroupSummary
    java.lang.String mSortKey -> mSortKey
    java.util.ArrayList mActions -> mActions
    boolean mLocalOnly -> mLocalOnly
    java.lang.String mCategory -> mCategory
    android.os.Bundle mExtras -> mExtras
    int mColor -> mColor
    int mVisibility -> mVisibility
    android.app.Notification mPublicVersion -> mPublicVersion
    android.app.Notification mNotification -> mNotification
    java.util.ArrayList mPeople -> mPeople
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setShowWhen(boolean) -> setShowWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setLocalOnly(boolean) -> setLocalOnly
    android.support.v4.app.NotificationCompat$Builder setCategory(java.lang.String) -> setCategory
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder addPerson(java.lang.String) -> addPerson
    android.support.v4.app.NotificationCompat$Builder setGroup(java.lang.String) -> setGroup
    android.support.v4.app.NotificationCompat$Builder setGroupSummary(boolean) -> setGroupSummary
    android.support.v4.app.NotificationCompat$Builder setSortKey(java.lang.String) -> setSortKey
    android.support.v4.app.NotificationCompat$Builder addExtras(android.os.Bundle) -> addExtras
    android.support.v4.app.NotificationCompat$Builder setExtras(android.os.Bundle) -> setExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder addAction(android.support.v4.app.NotificationCompat$Action) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.support.v4.app.NotificationCompat$Builder setColor(int) -> setColor
    android.support.v4.app.NotificationCompat$Builder setVisibility(int) -> setVisibility
    android.support.v4.app.NotificationCompat$Builder setPublicVersion(android.app.Notification) -> setPublicVersion
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Extender) -> extend
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
    java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence) -> limitCharSequenceLength
android.support.v4.app.NotificationCompat$Extender -> android.support.v4.app.NotificationCompat$Extender:
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    java.lang.String getCategory(android.app.Notification) -> getCategory
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplApi20 -> android.support.v4.app.NotificationCompat$NotificationCompatImplApi20:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplApi21 -> android.support.v4.app.NotificationCompat$NotificationCompatImplApi21:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    java.lang.String getCategory(android.app.Notification) -> getCategory
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    java.lang.String getCategory(android.app.Notification) -> getCategory
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread -> android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat -> android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$WearableExtender -> android.support.v4.app.NotificationCompat$WearableExtender:
    int UNSET_ACTION_INDEX -> UNSET_ACTION_INDEX
    int SIZE_DEFAULT -> SIZE_DEFAULT
    int SIZE_XSMALL -> SIZE_XSMALL
    int SIZE_SMALL -> SIZE_SMALL
    int SIZE_MEDIUM -> SIZE_MEDIUM
    int SIZE_LARGE -> SIZE_LARGE
    int SIZE_FULL_SCREEN -> SIZE_FULL_SCREEN
    java.lang.String EXTRA_WEARABLE_EXTENSIONS -> EXTRA_WEARABLE_EXTENSIONS
    java.lang.String KEY_ACTIONS -> KEY_ACTIONS
    java.lang.String KEY_FLAGS -> KEY_FLAGS
    java.lang.String KEY_DISPLAY_INTENT -> KEY_DISPLAY_INTENT
    java.lang.String KEY_PAGES -> KEY_PAGES
    java.lang.String KEY_BACKGROUND -> KEY_BACKGROUND
    java.lang.String KEY_CONTENT_ICON -> KEY_CONTENT_ICON
    java.lang.String KEY_CONTENT_ICON_GRAVITY -> KEY_CONTENT_ICON_GRAVITY
    java.lang.String KEY_CONTENT_ACTION_INDEX -> KEY_CONTENT_ACTION_INDEX
    java.lang.String KEY_CUSTOM_SIZE_PRESET -> KEY_CUSTOM_SIZE_PRESET
    java.lang.String KEY_CUSTOM_CONTENT_HEIGHT -> KEY_CUSTOM_CONTENT_HEIGHT
    java.lang.String KEY_GRAVITY -> KEY_GRAVITY
    int FLAG_CONTENT_INTENT_AVAILABLE_OFFLINE -> FLAG_CONTENT_INTENT_AVAILABLE_OFFLINE
    int FLAG_HINT_HIDE_ICON -> FLAG_HINT_HIDE_ICON
    int FLAG_HINT_SHOW_BACKGROUND_ONLY -> FLAG_HINT_SHOW_BACKGROUND_ONLY
    int FLAG_START_SCROLL_BOTTOM -> FLAG_START_SCROLL_BOTTOM
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    int DEFAULT_CONTENT_ICON_GRAVITY -> DEFAULT_CONTENT_ICON_GRAVITY
    int DEFAULT_GRAVITY -> DEFAULT_GRAVITY
    java.util.ArrayList mActions -> mActions
    int mFlags -> mFlags
    android.app.PendingIntent mDisplayIntent -> mDisplayIntent
    java.util.ArrayList mPages -> mPages
    android.graphics.Bitmap mBackground -> mBackground
    int mContentIcon -> mContentIcon
    int mContentIconGravity -> mContentIconGravity
    int mContentActionIndex -> mContentActionIndex
    int mCustomSizePreset -> mCustomSizePreset
    int mCustomContentHeight -> mCustomContentHeight
    int mGravity -> mGravity
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
    android.support.v4.app.NotificationCompat$WearableExtender clone() -> clone
    android.support.v4.app.NotificationCompat$WearableExtender addAction(android.support.v4.app.NotificationCompat$Action) -> addAction
    android.support.v4.app.NotificationCompat$WearableExtender addActions(java.util.List) -> addActions
    android.support.v4.app.NotificationCompat$WearableExtender clearActions() -> clearActions
    java.util.List getActions() -> getActions
    android.support.v4.app.NotificationCompat$WearableExtender setDisplayIntent(android.app.PendingIntent) -> setDisplayIntent
    android.app.PendingIntent getDisplayIntent() -> getDisplayIntent
    android.support.v4.app.NotificationCompat$WearableExtender addPage(android.app.Notification) -> addPage
    android.support.v4.app.NotificationCompat$WearableExtender addPages(java.util.List) -> addPages
    android.support.v4.app.NotificationCompat$WearableExtender clearPages() -> clearPages
    java.util.List getPages() -> getPages
    android.support.v4.app.NotificationCompat$WearableExtender setBackground(android.graphics.Bitmap) -> setBackground
    android.graphics.Bitmap getBackground() -> getBackground
    android.support.v4.app.NotificationCompat$WearableExtender setContentIcon(int) -> setContentIcon
    int getContentIcon() -> getContentIcon
    android.support.v4.app.NotificationCompat$WearableExtender setContentIconGravity(int) -> setContentIconGravity
    int getContentIconGravity() -> getContentIconGravity
    android.support.v4.app.NotificationCompat$WearableExtender setContentAction(int) -> setContentAction
    int getContentAction() -> getContentAction
    android.support.v4.app.NotificationCompat$WearableExtender setGravity(int) -> setGravity
    int getGravity() -> getGravity
    android.support.v4.app.NotificationCompat$WearableExtender setCustomSizePreset(int) -> setCustomSizePreset
    int getCustomSizePreset() -> getCustomSizePreset
    android.support.v4.app.NotificationCompat$WearableExtender setCustomContentHeight(int) -> setCustomContentHeight
    int getCustomContentHeight() -> getCustomContentHeight
    android.support.v4.app.NotificationCompat$WearableExtender setStartScrollBottom(boolean) -> setStartScrollBottom
    boolean getStartScrollBottom() -> getStartScrollBottom
    android.support.v4.app.NotificationCompat$WearableExtender setContentIntentAvailableOffline(boolean) -> setContentIntentAvailableOffline
    boolean getContentIntentAvailableOffline() -> getContentIntentAvailableOffline
    android.support.v4.app.NotificationCompat$WearableExtender setHintHideIcon(boolean) -> setHintHideIcon
    boolean getHintHideIcon() -> getHintHideIcon
    android.support.v4.app.NotificationCompat$WearableExtender setHintShowBackgroundOnly(boolean) -> setHintShowBackgroundOnly
    boolean getHintShowBackgroundOnly() -> getHintShowBackgroundOnly
    void setFlag(int,boolean) -> setFlag
    java.lang.Object clone() -> clone
android.support.v4.app.NotificationCompatApi20 -> android.support.v4.app.NotificationCompatApi20:
    void addAction(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    android.support.v4.app.NotificationCompatBase$Action getActionCompatFromAction(android.app.Notification$Action,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionCompatFromAction
    android.app.Notification$Action getActionFromActionCompat(android.support.v4.app.NotificationCompatBase$Action) -> getActionFromActionCompat
    android.support.v4.app.NotificationCompatBase$Action[] getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatApi20$Builder -> android.support.v4.app.NotificationCompatApi20$Builder:
    android.app.Notification$Builder b -> b
    android.os.Bundle mExtras -> mExtras
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatApi21 -> android.support.v4.app.NotificationCompatApi21:
    java.lang.String CATEGORY_CALL -> CATEGORY_CALL
    java.lang.String CATEGORY_MESSAGE -> CATEGORY_MESSAGE
    java.lang.String CATEGORY_EMAIL -> CATEGORY_EMAIL
    java.lang.String CATEGORY_EVENT -> CATEGORY_EVENT
    java.lang.String CATEGORY_PROMO -> CATEGORY_PROMO
    java.lang.String CATEGORY_ALARM -> CATEGORY_ALARM
    java.lang.String CATEGORY_PROGRESS -> CATEGORY_PROGRESS
    java.lang.String CATEGORY_SOCIAL -> CATEGORY_SOCIAL
    java.lang.String CATEGORY_ERROR -> CATEGORY_ERROR
    java.lang.String CATEGORY_TRANSPORT -> CATEGORY_TRANSPORT
    java.lang.String CATEGORY_SYSTEM -> CATEGORY_SYSTEM
    java.lang.String CATEGORY_SERVICE -> CATEGORY_SERVICE
    java.lang.String CATEGORY_RECOMMENDATION -> CATEGORY_RECOMMENDATION
    java.lang.String CATEGORY_STATUS -> CATEGORY_STATUS
    java.lang.String getCategory(android.app.Notification) -> getCategory
android.support.v4.app.NotificationCompatApi21$Builder -> android.support.v4.app.NotificationCompatApi21$Builder:
    android.app.Notification$Builder b -> b
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatBase -> android.support.v4.app.NotificationCompatBase:
android.support.v4.app.NotificationCompatBase$Action -> android.support.v4.app.NotificationCompatBase$Action:
    int getIcon() -> getIcon
    java.lang.CharSequence getTitle() -> getTitle
    android.app.PendingIntent getActionIntent() -> getActionIntent
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> getRemoteInputs
android.support.v4.app.NotificationCompatBase$Action$Factory -> android.support.v4.app.NotificationCompatBase$Action$Factory:
    android.support.v4.app.NotificationCompatBase$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
    android.support.v4.app.NotificationCompatBase$Action[] newArray(int) -> newArray
android.support.v4.app.NotificationCompatExtras -> android.support.v4.app.NotificationCompatExtras:
    java.lang.String EXTRA_LOCAL_ONLY -> EXTRA_LOCAL_ONLY
    java.lang.String EXTRA_GROUP_KEY -> EXTRA_GROUP_KEY
    java.lang.String EXTRA_GROUP_SUMMARY -> EXTRA_GROUP_SUMMARY
    java.lang.String EXTRA_SORT_KEY -> EXTRA_SORT_KEY
    java.lang.String EXTRA_ACTION_EXTRAS -> EXTRA_ACTION_EXTRAS
    java.lang.String EXTRA_REMOTE_INPUTS -> EXTRA_REMOTE_INPUTS
android.support.v4.app.NotificationCompatGingerbread -> android.support.v4.app.NotificationCompatGingerbread:
    android.app.Notification add(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,android.app.PendingIntent) -> add
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.NotificationCompatIceCreamSandwich:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> add
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    java.lang.String TAG -> TAG
    java.lang.String EXTRA_LOCAL_ONLY -> EXTRA_LOCAL_ONLY
    java.lang.String EXTRA_ACTION_EXTRAS -> EXTRA_ACTION_EXTRAS
    java.lang.String EXTRA_REMOTE_INPUTS -> EXTRA_REMOTE_INPUTS
    java.lang.String EXTRA_GROUP_KEY -> EXTRA_GROUP_KEY
    java.lang.String EXTRA_GROUP_SUMMARY -> EXTRA_GROUP_SUMMARY
    java.lang.String EXTRA_SORT_KEY -> EXTRA_SORT_KEY
    java.lang.String EXTRA_USE_SIDE_CHANNEL -> EXTRA_USE_SIDE_CHANNEL
    java.lang.String KEY_ICON -> KEY_ICON
    java.lang.String KEY_TITLE -> KEY_TITLE
    java.lang.String KEY_ACTION_INTENT -> KEY_ACTION_INTENT
    java.lang.String KEY_EXTRAS -> KEY_EXTRAS
    java.lang.String KEY_REMOTE_INPUTS -> KEY_REMOTE_INPUTS
    java.lang.Object sExtrasLock -> sExtrasLock
    java.lang.reflect.Field sExtrasField -> sExtrasField
    boolean sExtrasFieldAccessFailed -> sExtrasFieldAccessFailed
    java.lang.Object sActionsLock -> sActionsLock
    java.lang.Class sActionClass -> sActionClass
    java.lang.reflect.Field sActionsField -> sActionsField
    java.lang.reflect.Field sActionIconField -> sActionIconField
    java.lang.reflect.Field sActionTitleField -> sActionTitleField
    java.lang.reflect.Field sActionIntentField -> sActionIntentField
    boolean sActionsAccessFailed -> sActionsAccessFailed
    void addBigTextStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> addBigPictureStyle
    void addInboxStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.util.SparseArray buildActionExtrasMap(java.util.List) -> buildActionExtrasMap
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    android.support.v4.app.NotificationCompatBase$Action readAction(android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory,int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle) -> readAction
    android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> writeActionAndGetExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    java.lang.Object[] getActionObjectsLocked(android.app.Notification) -> getActionObjectsLocked
    boolean ensureActionReflectionReadyLocked() -> ensureActionReflectionReadyLocked
    android.support.v4.app.NotificationCompatBase$Action[] getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionsFromParcelableArrayList
    android.support.v4.app.NotificationCompatBase$Action getActionFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionFromBundle
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[]) -> getParcelableArrayListForActions
    android.os.Bundle getBundleForAction(android.support.v4.app.NotificationCompatBase$Action) -> getBundleForAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatJellybean$Builder -> android.support.v4.app.NotificationCompatJellybean$Builder:
    android.app.Notification$Builder b -> b
    android.os.Bundle mExtras -> mExtras
    java.util.List mActionExtrasList -> mActionExtrasList
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatKitKat -> android.support.v4.app.NotificationCompatKitKat:
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatKitKat$Builder -> android.support.v4.app.NotificationCompatKitKat$Builder:
    android.app.Notification$Builder b -> b
    android.os.Bundle mExtras -> mExtras
    java.util.List mActionExtrasList -> mActionExtrasList
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatSideChannelService -> android.support.v4.app.NotificationCompatSideChannelService:
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
    void checkPermission(int,java.lang.String) -> checkPermission
    void access$100(android.support.v4.app.NotificationCompatSideChannelService,int,java.lang.String) -> access$100
android.support.v4.app.NotificationCompatSideChannelService$1 -> android.support.v4.app.NotificationCompatSideChannelService$1:
android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub -> android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub:
    android.support.v4.app.NotificationCompatSideChannelService this$0 -> this$0
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.NotificationManagerCompat -> android.support.v4.app.NotificationManagerCompat:
    java.lang.String TAG -> TAG
    java.lang.String EXTRA_USE_SIDE_CHANNEL -> EXTRA_USE_SIDE_CHANNEL
    java.lang.String ACTION_BIND_SIDE_CHANNEL -> ACTION_BIND_SIDE_CHANNEL
    int MAX_SIDE_CHANNEL_SDK_VERSION -> MAX_SIDE_CHANNEL_SDK_VERSION
    int SIDE_CHANNEL_RETRY_BASE_INTERVAL_MS -> SIDE_CHANNEL_RETRY_BASE_INTERVAL_MS
    int SIDE_CHANNEL_RETRY_MAX_COUNT -> SIDE_CHANNEL_RETRY_MAX_COUNT
    java.lang.String SETTING_ENABLED_NOTIFICATION_LISTENERS -> SETTING_ENABLED_NOTIFICATION_LISTENERS
    int SIDE_CHANNEL_BIND_FLAGS -> SIDE_CHANNEL_BIND_FLAGS
    java.lang.Object sEnabledNotificationListenersLock -> sEnabledNotificationListenersLock
    java.lang.String sEnabledNotificationListeners -> sEnabledNotificationListeners
    java.util.Set sEnabledNotificationListenerPackages -> sEnabledNotificationListenerPackages
    android.content.Context mContext -> mContext
    android.app.NotificationManager mNotificationManager -> mNotificationManager
    java.lang.Object sLock -> sLock
    android.support.v4.app.NotificationManagerCompat$SideChannelManager sSideChannelManager -> sSideChannelManager
    android.support.v4.app.NotificationManagerCompat$Impl IMPL -> IMPL
    android.support.v4.app.NotificationManagerCompat from(android.content.Context) -> from
    void cancel(int) -> cancel
    void cancel(java.lang.String,int) -> cancel
    void cancelAll() -> cancelAll
    void notify(int,android.app.Notification) -> notify
    void notify(java.lang.String,int,android.app.Notification) -> notify
    java.util.Set getEnabledListenerPackages(android.content.Context) -> getEnabledListenerPackages
    boolean useSideChannelForNotification(android.app.Notification) -> useSideChannelForNotification
    void pushSideChannelQueue(android.support.v4.app.NotificationManagerCompat$Task) -> pushSideChannelQueue
    int access$000() -> access$000
android.support.v4.app.NotificationManagerCompat$CancelTask -> android.support.v4.app.NotificationManagerCompat$CancelTask:
    java.lang.String packageName -> packageName
    int id -> id
    java.lang.String tag -> tag
    boolean all -> all
    void send(android.support.v4.app.INotificationSideChannel) -> send
    java.lang.String toString() -> toString
android.support.v4.app.NotificationManagerCompat$Impl -> android.support.v4.app.NotificationManagerCompat$Impl:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$ImplBase -> android.support.v4.app.NotificationManagerCompat$ImplBase:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$ImplEclair -> android.support.v4.app.NotificationManagerCompat$ImplEclair:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich -> android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich:
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$NotifyTask -> android.support.v4.app.NotificationManagerCompat$NotifyTask:
    java.lang.String packageName -> packageName
    int id -> id
    java.lang.String tag -> tag
    android.app.Notification notif -> notif
    void send(android.support.v4.app.INotificationSideChannel) -> send
    java.lang.String toString() -> toString
android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent -> android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent:
    android.content.ComponentName componentName -> componentName
    android.os.IBinder iBinder -> iBinder
android.support.v4.app.NotificationManagerCompat$SideChannelManager -> android.support.v4.app.NotificationManagerCompat$SideChannelManager:
    int MSG_QUEUE_TASK -> MSG_QUEUE_TASK
    int MSG_SERVICE_CONNECTED -> MSG_SERVICE_CONNECTED
    int MSG_SERVICE_DISCONNECTED -> MSG_SERVICE_DISCONNECTED
    int MSG_RETRY_LISTENER_QUEUE -> MSG_RETRY_LISTENER_QUEUE
    java.lang.String KEY_BINDER -> KEY_BINDER
    android.content.Context mContext -> mContext
    android.os.HandlerThread mHandlerThread -> mHandlerThread
    android.os.Handler mHandler -> mHandler
    java.util.Map mRecordMap -> mRecordMap
    java.util.Set mCachedEnabledPackages -> mCachedEnabledPackages
    void queueTask(android.support.v4.app.NotificationManagerCompat$Task) -> queueTask
    boolean handleMessage(android.os.Message) -> handleMessage
    void handleQueueTask(android.support.v4.app.NotificationManagerCompat$Task) -> handleQueueTask
    void handleServiceConnected(android.content.ComponentName,android.os.IBinder) -> handleServiceConnected
    void handleServiceDisconnected(android.content.ComponentName) -> handleServiceDisconnected
    void handleRetryListenerQueue(android.content.ComponentName) -> handleRetryListenerQueue
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void updateListenerMap() -> updateListenerMap
    boolean ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceBound
    void ensureServiceUnbound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceUnbound
    void scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> scheduleListenerRetry
    void processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> processListenerQueue
android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord -> android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord:
    android.content.ComponentName componentName -> componentName
    boolean bound -> bound
    android.support.v4.app.INotificationSideChannel service -> service
    java.util.LinkedList taskQueue -> taskQueue
    int retryCount -> retryCount
android.support.v4.app.NotificationManagerCompat$Task -> android.support.v4.app.NotificationManagerCompat$Task:
    void send(android.support.v4.app.INotificationSideChannel) -> send
android.support.v4.app.NotificationManagerCompatEclair -> android.support.v4.app.NotificationManagerCompatEclair:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
android.support.v4.app.NotificationManagerCompatIceCreamSandwich -> android.support.v4.app.NotificationManagerCompatIceCreamSandwich:
    int SIDE_CHANNEL_BIND_FLAGS -> SIDE_CHANNEL_BIND_FLAGS
android.support.v4.app.RemoteInput -> android.support.v4.app.RemoteInput:
    java.lang.String TAG -> TAG
    java.lang.String RESULTS_CLIP_LABEL -> RESULTS_CLIP_LABEL
    java.lang.String EXTRA_RESULTS_DATA -> EXTRA_RESULTS_DATA
    java.lang.String mResultKey -> mResultKey
    java.lang.CharSequence mLabel -> mLabel
    java.lang.CharSequence[] mChoices -> mChoices
    boolean mAllowFreeFormInput -> mAllowFreeFormInput
    android.os.Bundle mExtras -> mExtras
    android.support.v4.app.RemoteInput$Impl IMPL -> IMPL
    android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory FACTORY -> FACTORY
    java.lang.String getResultKey() -> getResultKey
    java.lang.CharSequence getLabel() -> getLabel
    java.lang.CharSequence[] getChoices() -> getChoices
    boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    android.os.Bundle getExtras() -> getExtras
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$1 -> android.support.v4.app.RemoteInput$1:
    android.support.v4.app.RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
    android.support.v4.app.RemoteInput[] newArray(int) -> newArray
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] newArray(int) -> newArray
    android.support.v4.app.RemoteInputCompatBase$RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
android.support.v4.app.RemoteInput$Builder -> android.support.v4.app.RemoteInput$Builder:
    java.lang.String mResultKey -> mResultKey
    java.lang.CharSequence mLabel -> mLabel
    java.lang.CharSequence[] mChoices -> mChoices
    boolean mAllowFreeFormInput -> mAllowFreeFormInput
    android.os.Bundle mExtras -> mExtras
    android.support.v4.app.RemoteInput$Builder setLabel(java.lang.CharSequence) -> setLabel
    android.support.v4.app.RemoteInput$Builder setChoices(java.lang.CharSequence[]) -> setChoices
    android.support.v4.app.RemoteInput$Builder setAllowFreeFormInput(boolean) -> setAllowFreeFormInput
    android.support.v4.app.RemoteInput$Builder addExtras(android.os.Bundle) -> addExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInput build() -> build
android.support.v4.app.RemoteInput$Impl -> android.support.v4.app.RemoteInput$Impl:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplApi20 -> android.support.v4.app.RemoteInput$ImplApi20:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplBase -> android.support.v4.app.RemoteInput$ImplBase:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplJellybean -> android.support.v4.app.RemoteInput$ImplJellybean:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInputCompatApi20 -> android.support.v4.app.RemoteInputCompatApi20:
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] toCompat(android.app.RemoteInput[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> toCompat
    android.app.RemoteInput[] fromCompat(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> fromCompat
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInputCompatBase -> android.support.v4.app.RemoteInputCompatBase:
android.support.v4.app.RemoteInputCompatBase$RemoteInput -> android.support.v4.app.RemoteInputCompatBase$RemoteInput:
    java.lang.String getResultKey() -> getResultKey
    java.lang.CharSequence getLabel() -> getLabel
    java.lang.CharSequence[] getChoices() -> getChoices
    boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    android.os.Bundle getExtras() -> getExtras
android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory -> android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory:
    android.support.v4.app.RemoteInputCompatBase$RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] newArray(int) -> newArray
android.support.v4.app.RemoteInputCompatJellybean -> android.support.v4.app.RemoteInputCompatJellybean:
    java.lang.String RESULTS_CLIP_LABEL -> RESULTS_CLIP_LABEL
    java.lang.String EXTRA_RESULTS_DATA -> EXTRA_RESULTS_DATA
    java.lang.String KEY_RESULT_KEY -> KEY_RESULT_KEY
    java.lang.String KEY_LABEL -> KEY_LABEL
    java.lang.String KEY_CHOICES -> KEY_CHOICES
    java.lang.String KEY_ALLOW_FREE_FORM_INPUT -> KEY_ALLOW_FREE_FORM_INPUT
    java.lang.String KEY_EXTRAS -> KEY_EXTRAS
    android.support.v4.app.RemoteInputCompatBase$RemoteInput fromBundle(android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> fromBundle
    android.os.Bundle toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput) -> toBundle
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] fromBundleArray(android.os.Bundle[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> fromBundleArray
    android.os.Bundle[] toBundleArray(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> toBundleArray
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> IMPL
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> access$000
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    java.util.ArrayList mToAddresses -> mToAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> getActivity
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.ShareCompat$ShareCompatImplJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    java.lang.String HISTORY_FILENAME_PREFIX -> HISTORY_FILENAME_PREFIX
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.ShareCompatJB -> android.support.v4.app.ShareCompatJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.SharedElementCallback -> android.support.v4.app.SharedElementCallback:
    android.graphics.Matrix mTempMatrix -> mTempMatrix
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    java.lang.String TAG -> TAG
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> IMPL
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
android.support.v4.app.TaskStackBuilder$SupportParentable -> android.support.v4.app.TaskStackBuilder$SupportParentable:
    android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.TaskStackBuilderJellybean:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> getActivitiesPendingIntent
android.support.v4.app.Watson -> android.support.v4.app.Watson:
    java.lang.String TAG -> TAG
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
android.support.v4.app.Watson$OnCreateOptionsMenuListener -> android.support.v4.app.Watson$OnCreateOptionsMenuListener:
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> onCreateOptionsMenu
android.support.v4.app.Watson$OnOptionsItemSelectedListener -> android.support.v4.app.Watson$OnOptionsItemSelectedListener:
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
android.support.v4.app.Watson$OnPrepareOptionsMenuListener -> android.support.v4.app.Watson$OnPrepareOptionsMenuListener:
    void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.a:
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> a
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> b
    long mUpdateThrottle -> c
    long mLastLoadCompleteTime -> d
    android.os.Handler mHandler -> e
    void onForceLoad() -> onForceLoad
    boolean cancelLoad() -> a
    void onCanceled(java.lang.Object) -> a
    void executePendingTask() -> b
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> a
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> b
    java.lang.Object loadInBackground() -> c
    java.lang.Object onLoadInBackground() -> d
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.b:
    java.lang.Object result -> a
    boolean waiting -> b
    java.util.concurrent.CountDownLatch done -> e
    android.support.v4.content.AsyncTaskLoader this$0 -> c
    java.lang.Object doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Object) -> a
    void onCancelled() -> a
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> a
android.support.v4.content.ContextCompat -> android.support.v4.content.c:
    java.lang.String TAG -> TAG
    java.lang.String DIR_ANDROID -> DIR_ANDROID
    java.lang.String DIR_DATA -> DIR_DATA
    java.lang.String DIR_OBB -> DIR_OBB
    java.lang.String DIR_FILES -> DIR_FILES
    java.lang.String DIR_CACHE -> DIR_CACHE
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    java.io.File getNoBackupFilesDir(android.content.Context) -> getNoBackupFilesDir
    java.io.File getCodeCacheDir(android.content.Context) -> getCodeCacheDir
    java.io.File createFilesDir(java.io.File) -> createFilesDir
android.support.v4.content.ContextCompatApi21 -> android.support.v4.content.d:
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> a
    java.io.File getNoBackupFilesDir(android.content.Context) -> a
    java.io.File getCodeCacheDir(android.content.Context) -> b
android.support.v4.content.ContextCompatFroyo -> android.support.v4.content.e:
    java.io.File getExternalCacheDir(android.content.Context) -> a
    java.io.File getExternalFilesDir(android.content.Context,java.lang.String) -> a
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.f:
    void startActivities(android.content.Context,android.content.Intent[]) -> a
    java.io.File getObbDir(android.content.Context) -> a
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.g:
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> a
android.support.v4.content.ContextCompatKitKat -> android.support.v4.content.h:
    java.io.File[] getExternalCacheDirs(android.content.Context) -> a
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> a
    java.io.File[] getObbDirs(android.content.Context) -> b
android.support.v4.content.CursorLoader -> android.support.v4.content.i:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> f
    android.net.Uri mUri -> g
    java.lang.String[] mProjection -> h
    java.lang.String mSelection -> i
    java.lang.String[] mSelectionArgs -> j
    java.lang.String mSortOrder -> k
    android.database.Cursor mCursor -> l
    android.database.Cursor loadInBackground() -> e
    void deliverResult(android.database.Cursor) -> a
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> b
    void onReset() -> onReset
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object loadInBackground() -> c
    void onCanceled(java.lang.Object) -> a
    void deliverResult(java.lang.Object) -> deliverResult
android.support.v4.content.IntentCompat -> android.support.v4.content.j:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> a
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.k:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.l:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.m:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.n:
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.o:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> mId
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> mListener
    android.content.Context mContext -> mContext
    boolean mStarted -> mStarted
    boolean mAbandoned -> mAbandoned
    boolean mReset -> mReset
    boolean mContentChanged -> mContentChanged
    boolean mProcessingChange -> mProcessingChange
    void deliverResult(java.lang.Object) -> deliverResult
    android.content.Context getContext() -> getContext
    int getId() -> getId
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    boolean isStarted() -> isStarted
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    void startLoading() -> startLoading
    void onStartLoading() -> onStartLoading
    void forceLoad() -> forceLoad
    void onForceLoad() -> onForceLoad
    void stopLoading() -> stopLoading
    void onStopLoading() -> onStopLoading
    void abandon() -> abandon
    void onAbandon() -> onAbandon
    void reset() -> reset
    void onReset() -> onReset
    boolean takeContentChanged() -> takeContentChanged
    void commitContentChanged() -> commitContentChanged
    void rollbackContentChanged() -> rollbackContentChanged
    void onContentChanged() -> onContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.p:
    android.support.v4.content.Loader this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.q:
    android.content.Context mAppContext -> a
    java.util.HashMap mReceivers -> b
    java.util.HashMap mActions -> c
    java.util.ArrayList mPendingBroadcasts -> d
    android.os.Handler mHandler -> e
    java.lang.Object mLock -> f
    android.support.v4.content.LocalBroadcastManager mInstance -> g
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> a
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> a
    void unregisterReceiver(android.content.BroadcastReceiver) -> a
    boolean sendBroadcast(android.content.Intent) -> a
    void executePendingBroadcasts() -> a
    void access$000(android.support.v4.content.LocalBroadcastManager) -> a
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.r:
    android.support.v4.content.LocalBroadcastManager this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.s:
    android.content.Intent intent -> a
    java.util.ArrayList receivers -> b
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.t:
    android.content.IntentFilter filter -> a
    android.content.BroadcastReceiver receiver -> b
    boolean broadcasting -> c
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.u:
    java.util.concurrent.ThreadFactory sThreadFactory -> a
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> b
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> d
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> c
    java.util.concurrent.Executor sDefaultExecutor -> e
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> f
    java.util.concurrent.FutureTask mFuture -> g
    android.support.v4.content.ModernAsyncTask$Status mStatus -> h
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> i
    void postResultIfNotInvoked(java.lang.Object) -> c
    java.lang.Object postResult(java.lang.Object) -> d
    java.lang.Object doInBackground(java.lang.Object[]) -> a
    void onPreExecute() -> b
    void onPostExecute(java.lang.Object) -> a
    void onProgressUpdate(java.lang.Object[]) -> b
    void onCancelled(java.lang.Object) -> b
    void onCancelled() -> a
    boolean isCancelled() -> c
    boolean cancel(boolean) -> a
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> a
    void finish(java.lang.Object) -> e
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> a
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> a
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> b
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> c
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.v:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.w:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.x:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.content.y:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> a
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.z:
    android.support.v4.content.ModernAsyncTask mTask -> a
    java.lang.Object[] mData -> b
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.aa:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ab:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> a
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> b
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> c
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> d
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.ac:
    java.lang.Object[] mParams -> b
android.support.v4.media.MediaMetadataCompat -> android.support.v4.media.MediaMetadataCompat:
    android.support.v4.util.ArrayMap METADATA_KEYS_TYPE -> a
    android.os.Bundle mBundle -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaMetadataCompat$1 -> android.support.v4.media.a:
    android.support.v4.media.MediaMetadataCompat createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.MediaMetadataCompat[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.RatingCompat -> android.support.v4.media.RatingCompat:
    int mRatingStyle -> a
    float mRatingValue -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.RatingCompat$1 -> android.support.v4.media.b:
    android.support.v4.media.RatingCompat createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.RatingCompat[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.MediaSessionCompat -> android.support.v4.media.session.MediaSessionCompat:
android.support.v4.media.session.MediaSessionCompat$Token -> android.support.v4.media.session.MediaSessionCompat$Token:
    android.os.Parcelable mInner -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$Token$1 -> android.support.v4.media.session.a:
    android.support.v4.media.session.MediaSessionCompat$Token createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.session.MediaSessionCompat$Token[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.PlaybackStateCompat -> android.support.v4.media.session.PlaybackStateCompat:
    int mState -> a
    long mPosition -> b
    long mBufferedPosition -> c
    float mSpeed -> d
    long mActions -> e
    java.lang.CharSequence mErrorMessage -> f
    long mUpdateTime -> g
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.PlaybackStateCompat$1 -> android.support.v4.media.session.b:
    android.support.v4.media.session.PlaybackStateCompat createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.session.PlaybackStateCompat[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.os.ParcelableCompat -> android.support.v4.a.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.a.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.a.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.a.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.a.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.ArrayMap -> android.support.v4.b.a:
    android.support.v4.util.MapCollections mCollections -> a
    android.support.v4.util.MapCollections getCollection() -> b
    void putAll(java.util.Map) -> putAll
    boolean retainAll(java.util.Collection) -> a
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.b.b:
    android.support.v4.util.ArrayMap this$0 -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.ContainerHelpers -> android.support.v4.b.c:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    int idealIntArraySize(int) -> a
    int idealByteArraySize(int) -> b
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int binarySearch(int[],int,int) -> a
android.support.v4.util.DebugUtils -> android.support.v4.b.d:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.b.e:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.MapCollections -> android.support.v4.b.f:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> b
    android.support.v4.util.MapCollections$KeySet mKeySet -> c
    android.support.v4.util.MapCollections$ValuesCollection mValues -> d
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> a
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> b
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> c
    java.lang.Object[] toArrayHelper(int) -> b
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    java.util.Set getEntrySet() -> d
    java.util.Set getKeySet() -> e
    java.util.Collection getValues() -> f
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.b.g:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.b.h:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.util.Map$Entry) -> a
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.b.i:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.b.j:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> a
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.b.k:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.Pair -> android.support.v4.b.l:
    java.lang.Object first -> a
    java.lang.Object second -> b
    boolean equals(java.lang.Object) -> equals
    boolean objectsEqual(java.lang.Object,java.lang.Object) -> a
    int hashCode() -> hashCode
android.support.v4.util.SimpleArrayMap -> android.support.v4.b.m:
    java.lang.Object[] mBaseCache -> b
    int mBaseCacheSize -> c
    java.lang.Object[] mTwiceBaseCache -> d
    int mTwiceBaseCacheSize -> e
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> e
    void freeArrays(int[],java.lang.Object[],int) -> a
    void clear() -> clear
    void ensureCapacity(int) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfKey(java.lang.Object) -> a
    int indexOfValue(java.lang.Object) -> b
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> b
    java.lang.Object valueAt(int) -> c
    java.lang.Object setValueAt(int,java.lang.Object) -> a
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> d
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.b.n:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.SparseArrayCompat clone() -> a
    java.lang.Object get(int) -> a
    java.lang.Object get(int,java.lang.Object) -> a
    void delete(int) -> b
    void remove(int) -> c
    void removeAt(int) -> d
    void gc() -> d
    void put(int,java.lang.Object) -> b
    int size() -> b
    int keyAt(int) -> e
    java.lang.Object valueAt(int) -> f
    int indexOfKey(int) -> g
    void clear() -> c
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.TimeUtils -> android.support.v4.b.o:
    java.lang.Object sFormatSync -> a
    char[] sFormatStr -> b
    int accumField(int,int,boolean,int) -> a
    int printField(char[],int,char,int,boolean,int) -> a
    int formatDurationLocked(long,int) -> a
    void formatDuration(long,java.io.PrintWriter,int) -> a
    void formatDuration(long,java.io.PrintWriter) -> a
    void formatDuration(long,long,java.io.PrintWriter) -> a
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.c:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.e:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.f:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.g:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.h:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.i:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.j:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.k:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.l:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.m:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.GravityCompat -> android.support.v4.view.n:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.o:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.p:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.q:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.r:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.s:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.t:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.u:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.v:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.w:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.x:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.y:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.z:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.aa:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.ab:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.ac:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.ad:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.ae:
    android.database.DataSetObservable mObservable -> mObservable
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.af:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.ag:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.ah:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.ai:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.aj:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.ak:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
    boolean getFitsSystemWindows(android.view.View) -> h
android.support.v4.view.ViewCompat$Api21ViewCompatImpl -> android.support.v4.view.al:
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.am:
    java.util.WeakHashMap mViewPropertyAnimatorCompatMap -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
    boolean getFitsSystemWindows(android.view.View) -> h
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.an:
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ao:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ap:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.aq:
    boolean accessibilityDelegateCheckFailed -> b
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ar:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean getFitsSystemWindows(android.view.View) -> h
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.as:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.at:
    void setImportantForAccessibility(android.view.View,int) -> b
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.au:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
    boolean getFitsSystemWindows(android.view.View) -> h
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.av:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.aw:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ax:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ay:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.az:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> b
    void setImportantForAccessibility(android.view.View,int) -> a
    android.view.ViewParent getParentForAccessibility(android.view.View) -> c
    boolean getFitsSystemWindows(android.view.View) -> d
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.ba:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.bb:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.bc:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.bd:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$HoneycombViewConfigurationVersionImpl -> android.support.v4.view.be:
android.support.v4.view.ViewConfigurationCompat$IcsViewConfigurationVersionImpl -> android.support.v4.view.bf:
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.bg:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.bh:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.bi:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> a
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatApi21Impl -> android.support.v4.view.bj:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.bk:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.bl:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.bm:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> android.support.v4.view.bn:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.bo:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.bp:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void initViewPager() -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> g
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> b
    void populate() -> c
    void populate(int) -> a
    void sortChildDrawingOrder() -> h
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> c
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> i
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> j
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> d
    boolean pageRight() -> e
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> a
    int access$300(android.support.v4.view.ViewPager) -> b
    int[] access$400() -> f
android.support.v4.view.ViewPager$1 -> android.support.v4.view.bq:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.br:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.bs:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.bt:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.bu:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.bv:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.bw:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    boolean canScroll() -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.bx:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.by:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.bz:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ca:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.cb:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.cc:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.cd:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> a
    java.lang.Object getInfo() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void setSource(android.view.View) -> a
    void addChild(android.view.View) -> b
    int getActions() -> b
    void addAction(int) -> a
    void setParent(android.view.View) -> c
    void getBoundsInParent(android.graphics.Rect) -> a
    void setBoundsInParent(android.graphics.Rect) -> b
    void getBoundsInScreen(android.graphics.Rect) -> c
    void setBoundsInScreen(android.graphics.Rect) -> d
    boolean isCheckable() -> c
    boolean isChecked() -> d
    boolean isFocusable() -> e
    void setFocusable(boolean) -> a
    boolean isFocused() -> f
    void setFocused(boolean) -> b
    boolean isVisibleToUser() -> g
    void setVisibleToUser(boolean) -> c
    boolean isAccessibilityFocused() -> h
    void setAccessibilityFocused(boolean) -> d
    boolean isSelected() -> i
    void setSelected(boolean) -> e
    boolean isClickable() -> j
    void setClickable(boolean) -> f
    boolean isLongClickable() -> k
    void setLongClickable(boolean) -> g
    boolean isEnabled() -> l
    void setEnabled(boolean) -> h
    boolean isPassword() -> m
    boolean isScrollable() -> n
    void setScrollable(boolean) -> i
    java.lang.CharSequence getPackageName() -> o
    void setPackageName(java.lang.CharSequence) -> a
    java.lang.CharSequence getClassName() -> p
    void setClassName(java.lang.CharSequence) -> b
    java.lang.CharSequence getText() -> q
    java.lang.CharSequence getContentDescription() -> r
    void setContentDescription(java.lang.CharSequence) -> c
    void recycle() -> s
    java.lang.String getViewIdResourceName() -> t
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi21Impl -> android.support.v4.view.a.b:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.c:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.d:
    java.lang.Object obtain(java.lang.Object) -> a
    void setSource(java.lang.Object,android.view.View) -> c
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void addAction(java.lang.Object,int) -> a
    void setParent(java.lang.Object,android.view.View) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isFocusable(java.lang.Object) -> k
    void setFocusable(java.lang.Object,boolean) -> c
    boolean isFocused(java.lang.Object) -> l
    void setFocused(java.lang.Object,boolean) -> d
    boolean isVisibleToUser(java.lang.Object) -> r
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> s
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    boolean isSelected(java.lang.Object) -> p
    void setSelected(java.lang.Object,boolean) -> g
    boolean isClickable(java.lang.Object) -> i
    void setClickable(java.lang.Object,boolean) -> a
    boolean isLongClickable(java.lang.Object) -> m
    void setLongClickable(java.lang.Object,boolean) -> e
    boolean isEnabled(java.lang.Object) -> j
    void setEnabled(java.lang.Object,boolean) -> b
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    void setScrollable(java.lang.Object,boolean) -> f
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getText(java.lang.Object) -> f
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> t
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.e:
    boolean isVisibleToUser(java.lang.Object) -> r
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> s
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.a.f:
    java.lang.String getViewIdResourceName(java.lang.Object) -> t
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.a.g:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.h:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isVisibleToUser(java.lang.Object) -> r
    boolean isAccessibilityFocused(java.lang.Object) -> s
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setVisibleToUser(java.lang.Object,boolean) -> h
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> t
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.a.i:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.a.j:
    boolean isVisibleToUser(java.lang.Object) -> a
    void setVisibleToUser(java.lang.Object,boolean) -> a
    boolean isAccessibilityFocused(java.lang.Object) -> b
    void setAccesibilityFocused(java.lang.Object,boolean) -> b
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.a.k:
    java.lang.String getViewIdResourceName(java.lang.Object) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.a.l:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.a.m:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.a.n:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.a.o:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.a.p:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.a.q:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.a.r:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.a.s:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.a.t:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.a.u:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.a.v:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.a.w:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.a.x:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.a.y:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> a
    void setScrollable(boolean) -> a
    void setItemCount(int) -> a
    void setFromIndex(int) -> b
    void setToIndex(int) -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.a.z:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.a.aa:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.a.ab:
    java.lang.Object obtain() -> a
    void setScrollable(java.lang.Object,boolean) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setFromIndex(java.lang.Object,int) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.a.ac:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.a.ad:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.a.ae:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    boolean mDataValid -> mDataValid
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    android.content.Context mContext -> mContext
    int mRowIDColumn -> mRowIDColumn
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    void init(android.content.Context,android.database.Cursor,boolean) -> init
    void init(android.content.Context,android.database.Cursor,int) -> init
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> onContentChanged
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.a:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.b:
    android.support.v4.widget.CursorAdapter this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.c:
    android.support.v4.widget.CursorAdapter this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.d:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> a
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.e:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> b
    android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate -> c
    int mMinDrawerMargin -> d
    int mScrimColor -> e
    float mScrimOpacity -> f
    android.graphics.Paint mScrimPaint -> g
    android.support.v4.widget.ViewDragHelper mLeftDragger -> h
    android.support.v4.widget.ViewDragHelper mRightDragger -> i
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> j
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> k
    int mDrawerState -> l
    boolean mInLayout -> m
    boolean mFirstLayout -> n
    int mLockModeLeft -> o
    int mLockModeRight -> p
    boolean mDisallowInterceptRequested -> q
    boolean mChildrenCanceledTouch -> r
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> s
    float mInitialMotionX -> t
    float mInitialMotionY -> u
    android.graphics.drawable.Drawable mShadowLeft -> v
    android.graphics.drawable.Drawable mShadowRight -> w
    android.graphics.drawable.Drawable mStatusBarBackground -> x
    java.lang.CharSequence mTitleLeft -> y
    java.lang.CharSequence mTitleRight -> z
    java.lang.Object mLastInsets -> A
    boolean mDrawStatusBarBackground -> B
    android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl IMPL -> a
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> a
    void setDrawerShadow(int,int) -> a
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> b
    int getDrawerLockMode(android.view.View) -> a
    java.lang.CharSequence getDrawerTitle(int) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewAbsoluteGravity(android.view.View) -> e
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> b
    java.lang.String gravityToString(int) -> c
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> m
    void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    void setStatusBarBackground(int) -> setStatusBarBackground
    void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void openDrawer(int) -> d
    void closeDrawer(android.view.View) -> i
    void closeDrawer(int) -> e
    boolean isDrawerOpen(android.view.View) -> j
    boolean isDrawerOpen(int) -> f
    boolean isDrawerVisible(android.view.View) -> k
    boolean isDrawerVisible(int) -> g
    boolean hasPeekingDrawer() -> e
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> f
    android.view.View findVisibleDrawer() -> g
    void cancelChildViewTouch() -> c
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    boolean includeChildForAccessibility(android.view.View) -> n
    int[] access$100() -> d
    android.view.View access$200(android.support.v4.widget.DrawerLayout) -> a
    boolean access$300(android.view.View) -> l
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.f:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.DrawerLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate -> android.support.v4.widget.g:
    android.support.v4.widget.DrawerLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl -> android.support.v4.widget.h:
    void configureApplyInsets(android.view.View) -> a
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> a
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> a
    int getTopInset(java.lang.Object) -> a
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplApi21 -> android.support.v4.widget.i:
    void configureApplyInsets(android.view.View) -> a
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> a
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> a
    int getTopInset(java.lang.Object) -> a
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplBase -> android.support.v4.widget.j:
    void configureApplyInsets(android.view.View) -> a
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> a
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> a
    int getTopInset(java.lang.Object) -> a
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.k:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.l:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.m:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.n:
    int mAbsGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void setDragger(android.support.v4.widget.ViewDragHelper) -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    void peekDrawer() -> c
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> a
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.o:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> a
    void run() -> run
android.support.v4.widget.DrawerLayoutCompatApi21 -> android.support.v4.widget.p:
    void configureApplyInsets(android.view.View) -> a
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> a
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> a
    int getTopInset(java.lang.Object) -> a
android.support.v4.widget.DrawerLayoutCompatApi21$InsetsListener -> android.support.v4.widget.q:
android.support.v4.widget.DrawerLayoutImpl -> android.support.v4.widget.r:
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.s:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.t:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.u:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.v:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.w:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.x:
    int mLayout -> mLayout
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.y:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl mImpl -> b
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> a
    int getCurrX() -> a
    int getCurrY() -> b
    int getFinalX() -> c
    int getFinalY() -> d
    boolean computeScrollOffset() -> e
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> f
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.z:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    int getCurrX(java.lang.Object) -> a
    int getCurrY(java.lang.Object) -> b
    boolean computeScrollOffset(java.lang.Object) -> c
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> d
    int getFinalX(java.lang.Object) -> e
    int getFinalY(java.lang.Object) -> f
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.aa:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    int getCurrX(java.lang.Object) -> a
    int getCurrY(java.lang.Object) -> b
    boolean computeScrollOffset(java.lang.Object) -> c
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> d
    int getFinalX(java.lang.Object) -> e
    int getFinalY(java.lang.Object) -> f
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.ab:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    int getCurrX(java.lang.Object) -> a
    int getCurrY(java.lang.Object) -> b
    boolean computeScrollOffset(java.lang.Object) -> c
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> d
    int getFinalX(java.lang.Object) -> e
    int getFinalY(java.lang.Object) -> f
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.ac:
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.ad:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    int getCurrX(java.lang.Object) -> a
    int getCurrY(java.lang.Object) -> b
    boolean computeScrollOffset(java.lang.Object) -> c
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> d
    int getFinalX(java.lang.Object) -> e
    int getFinalY(java.lang.Object) -> f
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawableLeft -> d
    android.graphics.drawable.Drawable mShadowDrawableRight -> e
    int mOverhangSize -> f
    boolean mCanSlide -> g
    android.view.View mSlideableView -> h
    float mSlideOffset -> i
    float mParallaxOffset -> j
    int mSlideRange -> k
    boolean mIsUnableToDrag -> l
    int mParallaxBy -> m
    float mInitialMotionX -> n
    float mInitialMotionY -> o
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> p
    android.support.v4.widget.ViewDragHelper mDragHelper -> q
    boolean mPreservedOpenState -> r
    boolean mFirstLayout -> s
    android.graphics.Rect mTmpRect -> t
    java.util.ArrayList mPostedRunnables -> u
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void updateObscuredViewsVisibility(android.view.View) -> a
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> d
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowDrawableLeft(android.graphics.drawable.Drawable) -> setShadowDrawableLeft
    void setShadowDrawableRight(android.graphics.drawable.Drawable) -> setShadowDrawableRight
    void setShadowResource(int) -> setShadowResource
    void setShadowResourceLeft(int) -> setShadowResourceLeft
    void setShadowResourceRight(int) -> setShadowResourceRight
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean isLayoutRtlSupport() -> f
    void access$1000(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1100(android.support.v4.widget.SlidingPaneLayout) -> a
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.ae:
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.af:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.ag:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.ah:
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.ai:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.aj:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.ak:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.al:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.am:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.an:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> a
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> a
    void setMinVelocity(float) -> a
    int getViewDragState() -> a
    void setEdgeTrackingEnabled(int) -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> b
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> e
    void ensureMotionHistorySizeForId(int) -> f
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> b
    void setDragState(int) -> c
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> d
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ao:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.ap:
    android.support.v4.widget.ViewDragHelper this$0 -> a
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.aq:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
ca.rmen.android.scrumchatter.about.AboutActivity -> ca.rmen.android.scrumchatter.about.AboutActivity:
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
ca.rmen.android.scrumchatter.dialog.ChoiceDialogFragment -> ca.rmen.android.scrumchatter.a.a:
    java.lang.String TAG -> a
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    java.lang.String access$000() -> a
ca.rmen.android.scrumchatter.dialog.ChoiceDialogFragment$1 -> ca.rmen.android.scrumchatter.a.b:
    int val$actionId -> a
    java.lang.CharSequence[] val$choices -> b
    ca.rmen.android.scrumchatter.dialog.ChoiceDialogFragment this$0 -> c
    void onClick(android.content.DialogInterface,int) -> onClick
ca.rmen.android.scrumchatter.dialog.ChoiceDialogFragment$DialogItemListener -> ca.rmen.android.scrumchatter.a.c:
    void onItemSelected(int,java.lang.CharSequence[],int) -> a
ca.rmen.android.scrumchatter.dialog.ConfirmDialogFragment -> ca.rmen.android.scrumchatter.a.d:
    java.lang.String TAG -> a
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    java.lang.String access$000() -> a
ca.rmen.android.scrumchatter.dialog.ConfirmDialogFragment$1 -> ca.rmen.android.scrumchatter.a.e:
    int val$actionId -> a
    android.os.Bundle val$extras -> b
    ca.rmen.android.scrumchatter.dialog.ConfirmDialogFragment this$0 -> c
    void onClick(android.content.DialogInterface,int) -> onClick
ca.rmen.android.scrumchatter.dialog.ConfirmDialogFragment$DialogButtonListener -> ca.rmen.android.scrumchatter.a.f:
    void onOkClicked(int,android.os.Bundle) -> a
ca.rmen.android.scrumchatter.dialog.DialogFragmentFactory -> ca.rmen.android.scrumchatter.a.g:
    java.lang.String TAG -> a
    ca.rmen.android.scrumchatter.dialog.InputDialogFragment showInputDialog(android.support.v4.app.FragmentActivity,java.lang.String,java.lang.String,java.lang.String,java.lang.Class,int,android.os.Bundle) -> a
    ca.rmen.android.scrumchatter.dialog.InfoDialogFragment showInfoDialog(android.support.v4.app.FragmentActivity,int,int) -> a
    ca.rmen.android.scrumchatter.dialog.ConfirmDialogFragment showConfirmDialog(android.support.v4.app.FragmentActivity,java.lang.String,java.lang.String,int,android.os.Bundle) -> a
    ca.rmen.android.scrumchatter.dialog.ChoiceDialogFragment showChoiceDialog(android.support.v4.app.FragmentActivity,java.lang.String,java.lang.CharSequence[],int,int) -> a
    ca.rmen.android.scrumchatter.dialog.ProgressDialogFragment showProgressDialog(android.support.v4.app.FragmentActivity,java.lang.String,java.lang.String) -> a
ca.rmen.android.scrumchatter.dialog.DialogStyleHacks -> ca.rmen.android.scrumchatter.a.h:
    java.lang.String TAG -> a
    int sHoloBlueLightColorId -> b
    int sHoloBlueDarkColorId -> c
    int sHoloPurpleColorId -> d
    java.lang.reflect.Field sNinePatchSourceField -> e
    java.lang.reflect.Field sNinePatchField -> f
    void styleDialog(android.content.Context,android.app.AlertDialog) -> a
    void uglyHackReplaceBlueHoloBackground(android.content.Context,android.view.ViewGroup,android.app.AlertDialog) -> a
    boolean isHoloBlueNinePatch(android.graphics.drawable.NinePatchDrawable) -> a
    boolean isHoloBlueColor(android.content.Context,android.graphics.drawable.ColorDrawable) -> a
    void lazyInitHoloColors(android.content.Context) -> a
    void lazyInitCrazyReflectionCrap() -> a
ca.rmen.android.scrumchatter.dialog.DialogStyleHacks$1 -> ca.rmen.android.scrumchatter.a.i:
    android.app.AlertDialog val$dialog -> a
    android.content.Context val$context -> b
    void onShow(android.content.DialogInterface) -> onShow
ca.rmen.android.scrumchatter.dialog.InfoDialogFragment -> ca.rmen.android.scrumchatter.a.j:
    java.lang.String TAG -> a
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
ca.rmen.android.scrumchatter.dialog.InputDialogFragment -> ca.rmen.android.scrumchatter.a.k:
    java.lang.String TAG -> a
    java.lang.String mEnteredText -> b
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void validateText(android.content.Context,android.app.AlertDialog,android.widget.EditText,ca.rmen.android.scrumchatter.dialog.InputDialogFragment$InputValidator,int,android.os.Bundle) -> b
    java.lang.String access$000() -> a
    java.lang.String access$102(ca.rmen.android.scrumchatter.dialog.InputDialogFragment,java.lang.String) -> a
    void access$200(android.content.Context,android.app.AlertDialog,android.widget.EditText,ca.rmen.android.scrumchatter.dialog.InputDialogFragment$InputValidator,int,android.os.Bundle) -> a
ca.rmen.android.scrumchatter.dialog.InputDialogFragment$1 -> ca.rmen.android.scrumchatter.a.l:
    int val$actionId -> a
    android.widget.EditText val$input -> b
    android.os.Bundle val$extras -> c
    ca.rmen.android.scrumchatter.dialog.InputDialogFragment this$0 -> d
    void onClick(android.content.DialogInterface,int) -> onClick
ca.rmen.android.scrumchatter.dialog.InputDialogFragment$2 -> ca.rmen.android.scrumchatter.a.m:
    android.app.AlertDialog val$dialog -> a
    ca.rmen.android.scrumchatter.dialog.InputDialogFragment this$0 -> b
    void onFocusChange(android.view.View,boolean) -> onFocusChange
ca.rmen.android.scrumchatter.dialog.InputDialogFragment$3 -> ca.rmen.android.scrumchatter.a.n:
    android.widget.EditText val$input -> a
    ca.rmen.android.scrumchatter.dialog.InputDialogFragment$InputValidator val$validator -> b
    android.content.Context val$context -> c
    android.app.AlertDialog val$dialog -> d
    int val$actionId -> e
    android.os.Bundle val$extras -> f
    ca.rmen.android.scrumchatter.dialog.InputDialogFragment this$0 -> g
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
ca.rmen.android.scrumchatter.dialog.InputDialogFragment$4 -> ca.rmen.android.scrumchatter.a.o:
    android.app.AlertDialog val$dialog -> a
    android.content.Context val$context -> b
    android.widget.EditText val$input -> c
    ca.rmen.android.scrumchatter.dialog.InputDialogFragment$InputValidator val$validator -> d
    int val$actionId -> e
    android.os.Bundle val$extras -> f
    ca.rmen.android.scrumchatter.dialog.InputDialogFragment this$0 -> g
    void onShow(android.content.DialogInterface) -> onShow
ca.rmen.android.scrumchatter.dialog.InputDialogFragment$5 -> ca.rmen.android.scrumchatter.a.p:
    ca.rmen.android.scrumchatter.dialog.InputDialogFragment$InputValidator val$validator -> a
    android.content.Context val$context -> b
    android.widget.EditText val$editText -> c
    android.os.Bundle val$extras -> d
    android.widget.Button val$okButton -> e
    java.lang.String doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
ca.rmen.android.scrumchatter.dialog.InputDialogFragment$DialogInputListener -> ca.rmen.android.scrumchatter.a.q:
    void onInputEntered(int,java.lang.String,android.os.Bundle) -> a
ca.rmen.android.scrumchatter.dialog.InputDialogFragment$InputValidator -> ca.rmen.android.scrumchatter.a.r:
    java.lang.String getError(android.content.Context,java.lang.CharSequence,android.os.Bundle) -> a
ca.rmen.android.scrumchatter.dialog.ProgressDialogFragment -> ca.rmen.android.scrumchatter.a.s:
    java.lang.String TAG -> a
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
ca.rmen.android.scrumchatter.export.DBExport -> ca.rmen.android.scrumchatter.b.a:
    java.io.File createFile() -> a
ca.rmen.android.scrumchatter.export.FileExport -> ca.rmen.android.scrumchatter.b.b:
    java.lang.String TAG -> b
    android.content.Context mContext -> a
    java.lang.String mMimeType -> c
    java.io.File createFile() -> a
    boolean export() -> b
    void showChooser(java.io.File) -> a
ca.rmen.android.scrumchatter.export.MeetingExport -> ca.rmen.android.scrumchatter.b.c:
    java.lang.String TAG -> a
    android.content.Context mContext -> b
    boolean exportMeeting(long) -> a
    void showChooser(java.lang.String,java.lang.String) -> a
ca.rmen.android.scrumchatter.export.MeetingsExport -> ca.rmen.android.scrumchatter.b.d:
    java.lang.String TAG -> b
    jxl.write.WritableWorkbook mWorkbook -> c
    jxl.write.WritableSheet mSheet -> d
    jxl.write.WritableCellFormat mDefaultFormat -> e
    jxl.write.WritableCellFormat mBoldFormat -> f
    jxl.write.WritableCellFormat mLongDurationFormat -> g
    jxl.write.WritableCellFormat mShortDurationFormat -> h
    jxl.write.WritableCellFormat mDateFormat -> i
    java.io.File createFile() -> a
    void export(int,java.lang.String) -> a
    void writeHeader(java.lang.String,java.util.List) -> a
    void writeFooter(int,java.util.List,java.util.Map,java.util.Map,long) -> a
    void insertCell(java.lang.String,int,int,jxl.format.CellFormat) -> a
    void insertDurationCell(long,int,int,jxl.format.CellFormat) -> a
    void insertDateCell(long,int,int) -> a
    void createCellFormats() -> c
ca.rmen.android.scrumchatter.main.MainActivity -> ca.rmen.android.scrumchatter.main.MainActivity:
    java.lang.String TAG -> a
    ca.rmen.android.scrumchatter.main.MainActivity$SectionsPagerAdapter mSectionsPagerAdapter -> b
    android.support.v4.view.ViewPager mViewPager -> c
    android.support.v4.widget.DrawerLayout mDrawerLayout -> d
    android.support.v4.app.ActionBarDrawerToggle mDrawerToggle -> e
    android.widget.ListView mDrawerList -> f
    ca.rmen.android.scrumchatter.team.TeamArrayAdapter mTeamsAdapter -> g
    ca.rmen.android.scrumchatter.team.Teams mTeams -> h
    ca.rmen.android.scrumchatter.meeting.Meetings mMeetings -> i
    ca.rmen.android.scrumchatter.member.list.Members mMembers -> j
    ca.rmen.android.scrumchatter.team.Teams$Team mTeam -> k
    int mTeamCount -> l
    android.database.ContentObserver mContentObserver -> m
    android.content.SharedPreferences$OnSharedPreferenceChangeListener mSharedPrefsListener -> n
    android.content.BroadcastReceiver mBroadcastReceiver -> o
    android.widget.AdapterView$OnItemClickListener mOnItemClickListener -> p
    android.database.DataSetObserver mTeamsObserver -> q
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onResumeFragments() -> onResumeFragments
    void onDestroy() -> onDestroy
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void onTabSelected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> onTabSelected
    void onTabUnselected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> onTabUnselected
    void onTabReselected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> onTabReselected
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void importDB(android.net.Uri) -> a
    void shareFile(ca.rmen.android.scrumchatter.export.FileExport) -> a
    void onTeamChanged() -> b
    void onOkClicked(int,android.os.Bundle) -> a
    void onItemSelected(int,java.lang.CharSequence[],int) -> a
    void onInputEntered(int,java.lang.String,android.os.Bundle) -> a
    ca.rmen.android.scrumchatter.team.Teams$Team access$000(ca.rmen.android.scrumchatter.main.MainActivity) -> a
    ca.rmen.android.scrumchatter.team.TeamArrayAdapter access$100(ca.rmen.android.scrumchatter.main.MainActivity) -> b
    android.widget.ListView access$200(ca.rmen.android.scrumchatter.main.MainActivity) -> c
    java.lang.String access$300() -> a
    ca.rmen.android.scrumchatter.team.Teams$Team access$002(ca.rmen.android.scrumchatter.main.MainActivity,ca.rmen.android.scrumchatter.team.Teams$Team) -> a
    ca.rmen.android.scrumchatter.team.Teams access$400(ca.rmen.android.scrumchatter.main.MainActivity) -> d
    int access$502(ca.rmen.android.scrumchatter.main.MainActivity,int) -> a
    int access$500(ca.rmen.android.scrumchatter.main.MainActivity) -> e
    void access$600(ca.rmen.android.scrumchatter.main.MainActivity) -> f
    android.support.v4.widget.DrawerLayout access$700(ca.rmen.android.scrumchatter.main.MainActivity) -> g
ca.rmen.android.scrumchatter.main.MainActivity$1 -> ca.rmen.android.scrumchatter.main.a:
    ca.rmen.android.scrumchatter.main.MainActivity this$0 -> a
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerOpened(android.view.View) -> onDrawerOpened
ca.rmen.android.scrumchatter.main.MainActivity$10 -> ca.rmen.android.scrumchatter.main.b:
    ca.rmen.android.scrumchatter.main.MainActivity this$0 -> a
    void onChanged() -> onChanged
ca.rmen.android.scrumchatter.main.MainActivity$2 -> ca.rmen.android.scrumchatter.main.c:
    com.actionbarsherlock.app.ActionBar val$actionBar -> a
    ca.rmen.android.scrumchatter.main.MainActivity this$0 -> b
    void onPageSelected(int) -> a
ca.rmen.android.scrumchatter.main.MainActivity$3 -> ca.rmen.android.scrumchatter.main.d:
    ca.rmen.android.scrumchatter.export.FileExport val$fileExport -> a
    ca.rmen.android.scrumchatter.main.MainActivity this$0 -> b
    void onPreExecute() -> onPreExecute
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
ca.rmen.android.scrumchatter.main.MainActivity$4 -> ca.rmen.android.scrumchatter.main.e:
    ca.rmen.android.scrumchatter.main.MainActivity this$0 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
ca.rmen.android.scrumchatter.main.MainActivity$5 -> ca.rmen.android.scrumchatter.main.f:
    android.net.Uri val$uri -> a
    ca.rmen.android.scrumchatter.main.MainActivity this$0 -> b
    void onPreExecute() -> onPreExecute
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
ca.rmen.android.scrumchatter.main.MainActivity$6 -> ca.rmen.android.scrumchatter.main.g:
    ca.rmen.android.scrumchatter.main.MainActivity this$0 -> a
    void onChange(boolean) -> onChange
ca.rmen.android.scrumchatter.main.MainActivity$7 -> ca.rmen.android.scrumchatter.main.h:
    ca.rmen.android.scrumchatter.main.MainActivity this$0 -> a
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
ca.rmen.android.scrumchatter.main.MainActivity$8 -> ca.rmen.android.scrumchatter.main.i:
    ca.rmen.android.scrumchatter.main.MainActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
ca.rmen.android.scrumchatter.main.MainActivity$9 -> ca.rmen.android.scrumchatter.main.j:
    ca.rmen.android.scrumchatter.main.MainActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
ca.rmen.android.scrumchatter.main.MainActivity$SectionsPagerAdapter -> ca.rmen.android.scrumchatter.main.k:
    ca.rmen.android.scrumchatter.main.MainActivity this$0 -> a
    android.support.v4.app.Fragment getItem(int) -> getItem
    int getCount() -> getCount
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
ca.rmen.android.scrumchatter.meeting.Meetings -> ca.rmen.android.scrumchatter.meeting.a:
    java.lang.String TAG -> a
    android.support.v4.app.FragmentActivity mActivity -> b
    void createMeeting(int) -> a
    void confirmDelete(ca.rmen.android.scrumchatter.meeting.detail.Meeting) -> a
    void delete(long) -> a
    void export(long) -> b
    android.support.v4.app.FragmentActivity access$000(ca.rmen.android.scrumchatter.meeting.Meetings) -> a
    java.lang.String access$100() -> a
ca.rmen.android.scrumchatter.meeting.Meetings$1 -> ca.rmen.android.scrumchatter.meeting.b:
    int val$teamId -> a
    ca.rmen.android.scrumchatter.meeting.Meetings this$0 -> b
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
ca.rmen.android.scrumchatter.meeting.Meetings$2 -> ca.rmen.android.scrumchatter.meeting.c:
    long val$meetingId -> a
    ca.rmen.android.scrumchatter.meeting.Meetings this$0 -> b
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
ca.rmen.android.scrumchatter.meeting.Meetings$3 -> ca.rmen.android.scrumchatter.meeting.d:
    ca.rmen.android.scrumchatter.meeting.Meetings this$0 -> a
    java.lang.Boolean doInBackground(java.lang.Long[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
ca.rmen.android.scrumchatter.meeting.detail.Meeting -> ca.rmen.android.scrumchatter.meeting.detail.a:
    java.lang.String TAG -> a
    android.content.Context mContext -> b
    long mId -> c
    android.net.Uri mUri -> d
    long mStartDate -> e
    ca.rmen.android.scrumchatter.provider.MeetingColumns$State mState -> f
    long mDuration -> g
    ca.rmen.android.scrumchatter.meeting.detail.Meeting read(android.content.Context,long) -> a
    ca.rmen.android.scrumchatter.meeting.detail.Meeting read(android.content.Context,ca.rmen.android.scrumchatter.provider.MeetingCursorWrapper) -> a
    ca.rmen.android.scrumchatter.meeting.detail.Meeting createNewMeeting(android.content.Context) -> a
    long getId() -> a
    long getStartDate() -> b
    ca.rmen.android.scrumchatter.provider.MeetingColumns$State getState() -> c
    long getDuration() -> d
    void start() -> e
    void stop() -> f
    void shutEverybodyUp() -> h
    void toggleTalkingMember(long) -> a
    void delete() -> g
    void save() -> i
    java.lang.String toString() -> toString
ca.rmen.android.scrumchatter.meeting.detail.MeetingActivity -> ca.rmen.android.scrumchatter.meeting.detail.MeetingActivity:
    java.lang.String TAG -> a
    ca.rmen.android.scrumchatter.meeting.detail.MeetingPagerAdapter mMeetingPagerAdapter -> b
    android.support.v4.view.ViewPager mViewPager -> c
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onOkClicked(int,android.os.Bundle) -> a
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    ca.rmen.android.scrumchatter.meeting.detail.MeetingPagerAdapter access$002(ca.rmen.android.scrumchatter.meeting.detail.MeetingActivity,ca.rmen.android.scrumchatter.meeting.detail.MeetingPagerAdapter) -> a
    ca.rmen.android.scrumchatter.meeting.detail.MeetingPagerAdapter access$000(ca.rmen.android.scrumchatter.meeting.detail.MeetingActivity) -> a
    android.support.v4.view.ViewPager access$100(ca.rmen.android.scrumchatter.meeting.detail.MeetingActivity) -> b
    java.lang.String access$200(ca.rmen.android.scrumchatter.meeting.detail.MeetingActivity) -> c
    void access$301(ca.rmen.android.scrumchatter.meeting.detail.MeetingActivity) -> d
ca.rmen.android.scrumchatter.meeting.detail.MeetingActivity$1 -> ca.rmen.android.scrumchatter.meeting.detail.b:
    long mMeetingId -> c
    long val$meetingId -> a
    ca.rmen.android.scrumchatter.meeting.detail.MeetingActivity this$0 -> b
    ca.rmen.android.scrumchatter.meeting.detail.MeetingPagerAdapter doInBackground(java.lang.Void[]) -> a
    void onPostExecute(ca.rmen.android.scrumchatter.meeting.detail.MeetingPagerAdapter) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
ca.rmen.android.scrumchatter.meeting.detail.MeetingActivity$2 -> ca.rmen.android.scrumchatter.meeting.detail.c:
    ca.rmen.android.scrumchatter.meeting.detail.MeetingActivity this$0 -> a
    void run() -> run
ca.rmen.android.scrumchatter.meeting.detail.MeetingActivity$3 -> ca.rmen.android.scrumchatter.meeting.detail.d:
    ca.rmen.android.scrumchatter.meeting.detail.MeetingActivity this$0 -> a
    void onPageSelected(int) -> a
    void onPageScrolled(int,float,int) -> a
    void onPageScrollStateChanged(int) -> b
ca.rmen.android.scrumchatter.meeting.detail.MeetingCursorAdapter -> ca.rmen.android.scrumchatter.meeting.detail.e:
    java.lang.String TAG -> a
    android.view.View$OnClickListener mOnClickListener -> b
    int mColorChronoActive -> c
    int mColorChronoInactive -> d
    int mColorChronoNotStarted -> e
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void startAnimation(android.widget.ImageView) -> a
    void stopAnimation(android.widget.ImageView) -> b
ca.rmen.android.scrumchatter.meeting.detail.MeetingCursorAdapter$1 -> ca.rmen.android.scrumchatter.meeting.detail.f:
    android.graphics.drawable.AnimationDrawable val$animationDrawable -> a
    android.widget.ImageView val$imageView -> b
    ca.rmen.android.scrumchatter.meeting.detail.MeetingCursorAdapter this$0 -> c
    void onGlobalLayout() -> onGlobalLayout
ca.rmen.android.scrumchatter.meeting.detail.MeetingCursorAdapter$1$1 -> ca.rmen.android.scrumchatter.meeting.detail.g:
    ca.rmen.android.scrumchatter.meeting.detail.MeetingCursorAdapter$1 this$1 -> a
    void run() -> run
ca.rmen.android.scrumchatter.meeting.detail.MeetingFragment -> ca.rmen.android.scrumchatter.meeting.detail.h:
    java.lang.String TAG -> a
    ca.rmen.android.scrumchatter.meeting.detail.MeetingCursorAdapter mAdapter -> b
    ca.rmen.android.scrumchatter.meeting.detail.MeetingFragment$MeetingObserver mMeetingObserver -> c
    android.view.View mBtnStopMeeting -> d
    android.view.View mProgressBarHeader -> e
    android.widget.Chronometer mMeetingChronometer -> f
    ca.rmen.android.scrumchatter.meeting.detail.Meeting mMeeting -> g
    long mMeetingId -> h
    ca.rmen.android.scrumchatter.meeting.Meetings mMeetings -> i
    android.support.v4.app.LoaderManager$LoaderCallbacks mLoaderCallbacks -> j
    android.view.View$OnClickListener mOnClickListener -> k
    void onAttach(android.app.Activity) -> onAttach
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onDestroyView() -> onDestroyView
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    void loadMeeting() -> c
    void stopMeeting() -> a
    void deleteMeeting() -> b
    java.lang.String access$000(ca.rmen.android.scrumchatter.meeting.detail.MeetingFragment) -> a
    ca.rmen.android.scrumchatter.meeting.detail.MeetingFragment$MeetingObserver access$100(ca.rmen.android.scrumchatter.meeting.detail.MeetingFragment) -> b
    ca.rmen.android.scrumchatter.meeting.detail.Meeting access$200(ca.rmen.android.scrumchatter.meeting.detail.MeetingFragment) -> c
    ca.rmen.android.scrumchatter.meeting.detail.Meeting access$202(ca.rmen.android.scrumchatter.meeting.detail.MeetingFragment,ca.rmen.android.scrumchatter.meeting.detail.Meeting) -> a
    android.view.View access$300(ca.rmen.android.scrumchatter.meeting.detail.MeetingFragment) -> d
    android.view.View access$400(ca.rmen.android.scrumchatter.meeting.detail.MeetingFragment) -> e
    android.widget.Chronometer access$500(ca.rmen.android.scrumchatter.meeting.detail.MeetingFragment) -> f
    ca.rmen.android.scrumchatter.meeting.detail.MeetingCursorAdapter access$600(ca.rmen.android.scrumchatter.meeting.detail.MeetingFragment) -> g
    long access$700(ca.rmen.android.scrumchatter.meeting.detail.MeetingFragment) -> h
    void access$800(ca.rmen.android.scrumchatter.meeting.detail.MeetingFragment) -> i
ca.rmen.android.scrumchatter.meeting.detail.MeetingFragment$1 -> ca.rmen.android.scrumchatter.meeting.detail.i:
    ca.rmen.android.scrumchatter.meeting.detail.MeetingFragment this$0 -> a
    ca.rmen.android.scrumchatter.meeting.detail.Meeting doInBackground(java.lang.Long[]) -> a
    void onPostExecute(ca.rmen.android.scrumchatter.meeting.detail.Meeting) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
ca.rmen.android.scrumchatter.meeting.detail.MeetingFragment$2 -> ca.rmen.android.scrumchatter.meeting.detail.j:
    ca.rmen.android.scrumchatter.meeting.detail.MeetingFragment this$0 -> a
    java.lang.Void doInBackground(ca.rmen.android.scrumchatter.meeting.detail.Meeting[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
ca.rmen.android.scrumchatter.meeting.detail.MeetingFragment$3 -> ca.rmen.android.scrumchatter.meeting.detail.k:
    ca.rmen.android.scrumchatter.meeting.detail.MeetingFragment this$0 -> a
    void onPreExecute() -> onPreExecute
    java.lang.Void doInBackground(ca.rmen.android.scrumchatter.meeting.detail.Meeting[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
ca.rmen.android.scrumchatter.meeting.detail.MeetingFragment$4 -> ca.rmen.android.scrumchatter.meeting.detail.l:
    ca.rmen.android.scrumchatter.meeting.detail.MeetingFragment this$0 -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
ca.rmen.android.scrumchatter.meeting.detail.MeetingFragment$5 -> ca.rmen.android.scrumchatter.meeting.detail.m:
    ca.rmen.android.scrumchatter.meeting.detail.MeetingFragment this$0 -> a
    void toggleTalkingMember(long) -> a
    void onClick(android.view.View) -> onClick
ca.rmen.android.scrumchatter.meeting.detail.MeetingFragment$5$1 -> ca.rmen.android.scrumchatter.meeting.detail.n:
    long val$memberId -> a
    ca.rmen.android.scrumchatter.meeting.detail.MeetingFragment$5 this$1 -> b
    java.lang.Void doInBackground(ca.rmen.android.scrumchatter.meeting.detail.Meeting[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
ca.rmen.android.scrumchatter.meeting.detail.MeetingFragment$MeetingObserver -> ca.rmen.android.scrumchatter.meeting.detail.o:
    java.lang.String TAG -> b
    ca.rmen.android.scrumchatter.meeting.detail.MeetingFragment this$0 -> a
    void onChange(boolean) -> onChange
ca.rmen.android.scrumchatter.meeting.detail.MeetingPagerAdapter -> ca.rmen.android.scrumchatter.meeting.detail.p:
    java.lang.String TAG -> a
    ca.rmen.android.scrumchatter.provider.MeetingCursorWrapper mCursor -> b
    android.content.Context mContext -> c
    ca.rmen.android.scrumchatter.meeting.detail.MeetingPagerAdapter$MeetingObserver mMeetingObserver -> d
    int mTeamId -> e
    android.support.v4.app.Fragment getItem(int) -> getItem
    int getCount() -> getCount
    int getPositionForMeetingId(long) -> a
    ca.rmen.android.scrumchatter.meeting.detail.Meeting getMeetingAt(int) -> a
    void destroy() -> a
    java.lang.String access$000() -> b
    int access$100(ca.rmen.android.scrumchatter.meeting.detail.MeetingPagerAdapter) -> a
    android.content.Context access$200(ca.rmen.android.scrumchatter.meeting.detail.MeetingPagerAdapter) -> b
    ca.rmen.android.scrumchatter.meeting.detail.MeetingPagerAdapter$MeetingObserver access$300(ca.rmen.android.scrumchatter.meeting.detail.MeetingPagerAdapter) -> c
    ca.rmen.android.scrumchatter.provider.MeetingCursorWrapper access$400(ca.rmen.android.scrumchatter.meeting.detail.MeetingPagerAdapter) -> d
    ca.rmen.android.scrumchatter.provider.MeetingCursorWrapper access$402(ca.rmen.android.scrumchatter.meeting.detail.MeetingPagerAdapter,ca.rmen.android.scrumchatter.provider.MeetingCursorWrapper) -> a
ca.rmen.android.scrumchatter.meeting.detail.MeetingPagerAdapter$MeetingObserver -> ca.rmen.android.scrumchatter.meeting.detail.q:
    java.lang.String TAG -> b
    ca.rmen.android.scrumchatter.meeting.detail.MeetingPagerAdapter this$0 -> a
    void onChange(boolean) -> onChange
ca.rmen.android.scrumchatter.meeting.detail.MeetingPagerAdapter$MeetingObserver$1 -> ca.rmen.android.scrumchatter.meeting.detail.r:
    ca.rmen.android.scrumchatter.meeting.detail.MeetingPagerAdapter$MeetingObserver this$1 -> a
    ca.rmen.android.scrumchatter.provider.MeetingCursorWrapper doInBackground(java.lang.Void[]) -> a
    void onPostExecute(ca.rmen.android.scrumchatter.provider.MeetingCursorWrapper) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
ca.rmen.android.scrumchatter.meeting.list.MeetingsCursorAdapter -> ca.rmen.android.scrumchatter.meeting.a.a:
    android.view.View$OnClickListener mOnClickListener -> a
    int mColorStateInProgress -> b
    int mColorStateDefault -> c
    java.lang.String[] mMeetingStateNames -> d
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
ca.rmen.android.scrumchatter.meeting.list.MeetingsListFragment -> ca.rmen.android.scrumchatter.meeting.a.b:
    java.lang.String TAG -> a
    ca.rmen.android.scrumchatter.meeting.list.MeetingsCursorAdapter mAdapter -> b
    android.content.SharedPreferences mPrefs -> c
    ca.rmen.android.scrumchatter.meeting.Meetings mMeetings -> d
    int mTeamId -> e
    android.support.v4.app.LoaderManager$LoaderCallbacks mLoaderCallbacks -> f
    android.view.View$OnClickListener mOnClickListener -> g
    android.content.SharedPreferences$OnSharedPreferenceChangeListener mPrefsListener -> h
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    java.lang.String access$000() -> a
    int access$100(ca.rmen.android.scrumchatter.meeting.list.MeetingsListFragment) -> a
    ca.rmen.android.scrumchatter.meeting.list.MeetingsCursorAdapter access$200(ca.rmen.android.scrumchatter.meeting.list.MeetingsListFragment) -> b
    ca.rmen.android.scrumchatter.meeting.list.MeetingsCursorAdapter access$202(ca.rmen.android.scrumchatter.meeting.list.MeetingsListFragment,ca.rmen.android.scrumchatter.meeting.list.MeetingsCursorAdapter) -> a
    android.view.View$OnClickListener access$300(ca.rmen.android.scrumchatter.meeting.list.MeetingsListFragment) -> c
    ca.rmen.android.scrumchatter.meeting.Meetings access$400(ca.rmen.android.scrumchatter.meeting.list.MeetingsListFragment) -> d
    int access$102(ca.rmen.android.scrumchatter.meeting.list.MeetingsListFragment,int) -> a
    android.support.v4.app.LoaderManager$LoaderCallbacks access$500(ca.rmen.android.scrumchatter.meeting.list.MeetingsListFragment) -> e
ca.rmen.android.scrumchatter.meeting.list.MeetingsListFragment$1 -> ca.rmen.android.scrumchatter.meeting.a.c:
    ca.rmen.android.scrumchatter.meeting.list.MeetingsListFragment this$0 -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
ca.rmen.android.scrumchatter.meeting.list.MeetingsListFragment$2 -> ca.rmen.android.scrumchatter.meeting.a.d:
    ca.rmen.android.scrumchatter.meeting.list.MeetingsListFragment this$0 -> a
    void onClick(android.view.View) -> onClick
ca.rmen.android.scrumchatter.meeting.list.MeetingsListFragment$3 -> ca.rmen.android.scrumchatter.meeting.a.e:
    ca.rmen.android.scrumchatter.meeting.list.MeetingsListFragment this$0 -> a
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
ca.rmen.android.scrumchatter.member.list.Members -> ca.rmen.android.scrumchatter.c.a.a:
    java.lang.String TAG -> a
    android.support.v4.app.FragmentActivity mActivity -> b
    void promptCreateMember(int) -> a
    void createMember(long,java.lang.String) -> a
    void confirmDeleteMember(ca.rmen.android.scrumchatter.member.list.Members$Member) -> a
    void deleteMember(long) -> a
    android.support.v4.app.FragmentActivity access$000(ca.rmen.android.scrumchatter.member.list.Members) -> a
ca.rmen.android.scrumchatter.member.list.Members$1 -> ca.rmen.android.scrumchatter.c.a.b:
    java.lang.String val$memberName -> a
    long val$teamId -> b
    ca.rmen.android.scrumchatter.member.list.Members this$0 -> c
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
ca.rmen.android.scrumchatter.member.list.Members$2 -> ca.rmen.android.scrumchatter.c.a.c:
    long val$memberId -> a
    ca.rmen.android.scrumchatter.member.list.Members this$0 -> b
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
ca.rmen.android.scrumchatter.member.list.Members$Member -> ca.rmen.android.scrumchatter.c.a.d:
    long id -> a
    java.lang.String name -> b
    long access$100(ca.rmen.android.scrumchatter.member.list.Members$Member) -> a
    java.lang.String access$200(ca.rmen.android.scrumchatter.member.list.Members$Member) -> b
ca.rmen.android.scrumchatter.member.list.Members$MemberNameValidator -> ca.rmen.android.scrumchatter.c.a.e:
    java.lang.String getError(android.content.Context,java.lang.CharSequence,android.os.Bundle) -> a
ca.rmen.android.scrumchatter.member.list.MembersCursorAdapter -> ca.rmen.android.scrumchatter.c.a.f:
    android.view.View$OnClickListener mOnClickListener -> a
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
ca.rmen.android.scrumchatter.member.list.MembersListFragment -> ca.rmen.android.scrumchatter.c.a.g:
    java.lang.String TAG -> a
    java.lang.String mOrderByField -> b
    android.widget.TextView mTextViewName -> c
    android.widget.TextView mTextViewAvgDuration -> d
    android.widget.TextView mTextViewSumDuration -> e
    ca.rmen.android.scrumchatter.member.list.MembersCursorAdapter mAdapter -> f
    android.content.SharedPreferences mPrefs -> g
    int mTeamId -> h
    ca.rmen.android.scrumchatter.member.list.Members mMembers -> i
    android.support.v4.app.LoaderManager$LoaderCallbacks mLoaderCallbacks -> j
    android.view.View$OnClickListener mOnClickListener -> k
    android.content.SharedPreferences$OnSharedPreferenceChangeListener mPrefsListener -> l
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    java.lang.String access$000() -> a
    java.lang.String access$100(ca.rmen.android.scrumchatter.member.list.MembersListFragment) -> a
    int access$200(ca.rmen.android.scrumchatter.member.list.MembersListFragment) -> b
    ca.rmen.android.scrumchatter.member.list.MembersCursorAdapter access$300(ca.rmen.android.scrumchatter.member.list.MembersListFragment) -> c
    ca.rmen.android.scrumchatter.member.list.MembersCursorAdapter access$302(ca.rmen.android.scrumchatter.member.list.MembersListFragment,ca.rmen.android.scrumchatter.member.list.MembersCursorAdapter) -> a
    android.view.View$OnClickListener access$400(ca.rmen.android.scrumchatter.member.list.MembersListFragment) -> d
    ca.rmen.android.scrumchatter.member.list.Members access$500(ca.rmen.android.scrumchatter.member.list.MembersListFragment) -> e
    android.widget.TextView access$600(ca.rmen.android.scrumchatter.member.list.MembersListFragment) -> f
    android.widget.TextView access$700(ca.rmen.android.scrumchatter.member.list.MembersListFragment) -> g
    android.widget.TextView access$800(ca.rmen.android.scrumchatter.member.list.MembersListFragment) -> h
    java.lang.String access$102(ca.rmen.android.scrumchatter.member.list.MembersListFragment,java.lang.String) -> a
    android.support.v4.app.LoaderManager$LoaderCallbacks access$900(ca.rmen.android.scrumchatter.member.list.MembersListFragment) -> i
    int access$202(ca.rmen.android.scrumchatter.member.list.MembersListFragment,int) -> a
ca.rmen.android.scrumchatter.member.list.MembersListFragment$1 -> ca.rmen.android.scrumchatter.c.a.h:
    ca.rmen.android.scrumchatter.member.list.MembersListFragment this$0 -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
ca.rmen.android.scrumchatter.member.list.MembersListFragment$2 -> ca.rmen.android.scrumchatter.c.a.i:
    ca.rmen.android.scrumchatter.member.list.MembersListFragment this$0 -> a
    void onClick(android.view.View) -> onClick
    void setSortField(int) -> a
ca.rmen.android.scrumchatter.member.list.MembersListFragment$3 -> ca.rmen.android.scrumchatter.c.a.j:
    ca.rmen.android.scrumchatter.member.list.MembersListFragment this$0 -> a
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
ca.rmen.android.scrumchatter.provider.DBImport -> ca.rmen.android.scrumchatter.provider.a:
    java.lang.String TAG -> a
    void importDB(android.content.Context,android.net.Uri) -> a
    void importDB(android.content.Context,java.io.File) -> a
    void buildInsertOperations(android.database.sqlite.SQLiteDatabase,android.net.Uri,java.lang.String,java.util.ArrayList) -> a
ca.rmen.android.scrumchatter.provider.MeetingColumns -> ca.rmen.android.scrumchatter.provider.b:
    android.net.Uri CONTENT_URI -> a
ca.rmen.android.scrumchatter.provider.MeetingColumns$State -> ca.rmen.android.scrumchatter.provider.c:
    ca.rmen.android.scrumchatter.provider.MeetingColumns$State NOT_STARTED -> a
    ca.rmen.android.scrumchatter.provider.MeetingColumns$State IN_PROGRESS -> b
    ca.rmen.android.scrumchatter.provider.MeetingColumns$State FINISHED -> c
    ca.rmen.android.scrumchatter.provider.MeetingColumns$State[] $VALUES -> d
    ca.rmen.android.scrumchatter.provider.MeetingColumns$State[] values() -> values
    ca.rmen.android.scrumchatter.provider.MeetingColumns$State valueOf(java.lang.String) -> valueOf
ca.rmen.android.scrumchatter.provider.MeetingCursorWrapper -> ca.rmen.android.scrumchatter.provider.d:
    java.util.HashMap mColumnIndexes -> a
    java.lang.Long getId() -> a
    java.lang.Long getMeetingDate() -> b
    java.lang.Long getTotalDuration() -> c
    ca.rmen.android.scrumchatter.provider.MeetingColumns$State getState() -> d
    java.lang.Integer getIndex(java.lang.String) -> a
ca.rmen.android.scrumchatter.provider.MeetingMemberColumns -> ca.rmen.android.scrumchatter.provider.e:
    android.net.Uri CONTENT_URI -> a
ca.rmen.android.scrumchatter.provider.MeetingMemberCursorWrapper -> ca.rmen.android.scrumchatter.provider.f:
    java.util.HashMap mColumnIndexes -> a
    long getMeetingId() -> a
    long getMemberId() -> b
    java.lang.String getMemberName() -> c
    long getDuration() -> d
    long getTotalDuration() -> e
    long getTalkStartTime() -> f
    long getMeetingDate() -> g
    ca.rmen.android.scrumchatter.provider.MeetingColumns$State getMeetingState() -> h
    long getLongField(java.lang.String) -> a
    java.lang.Integer getIndex(java.lang.String) -> b
ca.rmen.android.scrumchatter.provider.MemberColumns -> ca.rmen.android.scrumchatter.provider.g:
    android.net.Uri CONTENT_URI -> a
ca.rmen.android.scrumchatter.provider.MemberCursorWrapper -> ca.rmen.android.scrumchatter.provider.h:
    java.util.HashMap mColumnIndexes -> a
    java.lang.Long getId() -> a
    java.lang.String getName() -> b
    java.lang.Integer getAverageDuration() -> c
    java.lang.Integer getSumDuration() -> d
    java.lang.Integer getIndex(java.lang.String) -> a
ca.rmen.android.scrumchatter.provider.MemberStatsColumns -> ca.rmen.android.scrumchatter.provider.i:
    android.net.Uri CONTENT_URI -> a
ca.rmen.android.scrumchatter.provider.ScrumChatterDatabase -> ca.rmen.android.scrumchatter.provider.j:
    java.lang.String TAG -> a
    java.lang.String SQL_CREATE_TABLE_MEETING -> b
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void insertDefaultTeam(android.database.sqlite.SQLiteDatabase) -> a
    void execSQL(android.database.sqlite.SQLiteDatabase,java.lang.String) -> a
ca.rmen.android.scrumchatter.provider.ScrumChatterProvider -> ca.rmen.android.scrumchatter.provider.ScrumChatterProvider:
    java.lang.String TAG -> a
    android.content.UriMatcher URI_MATCHER -> b
    ca.rmen.android.scrumchatter.provider.ScrumChatterDatabase mScrumChatterDatabase -> c
    boolean onCreate() -> onCreate
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int bulkInsert(android.net.Uri,android.content.ContentValues[]) -> bulkInsert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    android.content.ContentProviderResult[] applyBatch(java.util.ArrayList) -> applyBatch
    void logCursor(android.database.Cursor,java.lang.String[]) -> a
    void notifyChange(android.net.Uri) -> a
    ca.rmen.android.scrumchatter.provider.ScrumChatterProvider$StatementParams getStatementParams(android.net.Uri,java.lang.String) -> a
    ca.rmen.android.scrumchatter.provider.ScrumChatterProvider$QueryParams getQueryParams(android.net.Uri,java.lang.String,java.lang.String[]) -> a
ca.rmen.android.scrumchatter.provider.ScrumChatterProvider$1 -> ca.rmen.android.scrumchatter.provider.k:
ca.rmen.android.scrumchatter.provider.ScrumChatterProvider$QueryParams -> ca.rmen.android.scrumchatter.provider.l:
    java.lang.String orderBy -> a
ca.rmen.android.scrumchatter.provider.ScrumChatterProvider$StatementParams -> ca.rmen.android.scrumchatter.provider.m:
    java.lang.String table -> b
    java.lang.String selection -> c
ca.rmen.android.scrumchatter.provider.TeamColumns -> ca.rmen.android.scrumchatter.provider.n:
    android.net.Uri CONTENT_URI -> a
ca.rmen.android.scrumchatter.team.TeamArrayAdapter -> ca.rmen.android.scrumchatter.d.a:
    java.lang.String TAG -> a
    android.content.Context mContext -> b
    void reload() -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.String access$000() -> b
    android.content.Context access$100(ca.rmen.android.scrumchatter.team.TeamArrayAdapter) -> a
ca.rmen.android.scrumchatter.team.TeamArrayAdapter$1 -> ca.rmen.android.scrumchatter.d.b:
    ca.rmen.android.scrumchatter.team.TeamArrayAdapter this$0 -> a
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
ca.rmen.android.scrumchatter.team.Teams -> ca.rmen.android.scrumchatter.d.c:
    java.lang.String TAG -> a
    android.support.v4.app.FragmentActivity mActivity -> b
    void switchTeam(java.lang.CharSequence) -> a
    void promptCreateTeam() -> a
    void createTeam(java.lang.String) -> a
    void promptRenameTeam(ca.rmen.android.scrumchatter.team.Teams$Team) -> a
    void renameTeam(android.net.Uri,java.lang.String) -> a
    void confirmDeleteTeam(ca.rmen.android.scrumchatter.team.Teams$Team) -> b
    void deleteTeam(android.net.Uri) -> a
    void selectFirstTeam() -> b
    ca.rmen.android.scrumchatter.team.Teams$Team getCurrentTeam() -> c
    int getTeamCount() -> d
    android.support.v4.app.FragmentActivity access$000(ca.rmen.android.scrumchatter.team.Teams) -> a
    java.lang.String access$100() -> e
ca.rmen.android.scrumchatter.team.Teams$1 -> ca.rmen.android.scrumchatter.d.d:
    java.lang.CharSequence val$teamName -> a
    ca.rmen.android.scrumchatter.team.Teams this$0 -> b
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
ca.rmen.android.scrumchatter.team.Teams$2 -> ca.rmen.android.scrumchatter.d.e:
    java.lang.String val$teamName -> a
    ca.rmen.android.scrumchatter.team.Teams this$0 -> b
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
ca.rmen.android.scrumchatter.team.Teams$3 -> ca.rmen.android.scrumchatter.d.f:
    java.lang.String val$teamName -> a
    android.net.Uri val$teamUri -> b
    ca.rmen.android.scrumchatter.team.Teams this$0 -> c
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
ca.rmen.android.scrumchatter.team.Teams$4 -> ca.rmen.android.scrumchatter.d.g:
    ca.rmen.android.scrumchatter.team.Teams$Team val$team -> a
    ca.rmen.android.scrumchatter.team.Teams this$0 -> b
    java.lang.Integer doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Integer) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
ca.rmen.android.scrumchatter.team.Teams$5 -> ca.rmen.android.scrumchatter.d.h:
    android.net.Uri val$teamUri -> a
    ca.rmen.android.scrumchatter.team.Teams this$0 -> b
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
ca.rmen.android.scrumchatter.team.Teams$Team -> ca.rmen.android.scrumchatter.d.i:
    android.net.Uri teamUri -> b
    java.lang.String teamName -> a
    java.lang.String toString() -> toString
    android.net.Uri access$200(ca.rmen.android.scrumchatter.team.Teams$Team) -> a
ca.rmen.android.scrumchatter.team.Teams$TeamNameValidator -> ca.rmen.android.scrumchatter.d.j:
    java.lang.String getError(android.content.Context,java.lang.CharSequence,android.os.Bundle) -> a
ca.rmen.android.scrumchatter.util.IOUtils -> ca.rmen.android.scrumchatter.e.a:
    java.lang.String TAG -> a
    boolean copy(java.io.File,java.io.File) -> a
    boolean copy(java.io.InputStream,java.io.OutputStream) -> a
ca.rmen.android.scrumchatter.util.TextUtils -> ca.rmen.android.scrumchatter.e.b:
    java.lang.String formatDateTime(android.content.Context,long) -> a
ca.rmen.android.scrumchatter.util.ViewHolder -> ca.rmen.android.scrumchatter.e.c:
    android.view.View get(android.view.View,int) -> a
com.actionbarsherlock.ActionBarSherlock -> com.actionbarsherlock.ActionBarSherlock:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    java.lang.Class[] CONSTRUCTOR_ARGS -> CONSTRUCTOR_ARGS
    java.util.HashMap IMPLEMENTATIONS -> IMPLEMENTATIONS
    int FLAG_DELEGATE -> FLAG_DELEGATE
    android.app.Activity mActivity -> mActivity
    boolean mIsDelegate -> mIsDelegate
    com.actionbarsherlock.view.MenuInflater mMenuInflater -> mMenuInflater
    void registerImplementation(java.lang.Class) -> registerImplementation
    boolean unregisterImplementation(java.lang.Class) -> unregisterImplementation
    com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity) -> wrap
    com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity,int) -> wrap
    com.actionbarsherlock.app.ActionBar getActionBar() -> getActionBar
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchPostResume() -> dispatchPostResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchInvalidateOptionsMenu() -> dispatchInvalidateOptionsMenu
    boolean dispatchOpenOptionsMenu() -> dispatchOpenOptionsMenu
    boolean dispatchCloseOptionsMenu() -> dispatchCloseOptionsMenu
    void dispatchPostCreate(android.os.Bundle) -> dispatchPostCreate
    void dispatchTitleChanged(java.lang.CharSequence,int) -> dispatchTitleChanged
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean dispatchCreateOptionsMenu(android.view.Menu) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchMenuOpened(int,android.view.Menu) -> dispatchMenuOpened
    void dispatchPanelClosed(int,android.view.Menu) -> dispatchPanelClosed
    void dispatchDestroy() -> dispatchDestroy
    void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    boolean callbackCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> callbackCreateOptionsMenu
    boolean callbackPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> callbackPrepareOptionsMenu
    boolean callbackOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> callbackOptionsItemSelected
    boolean hasFeature(int) -> hasFeature
    boolean requestFeature(int) -> requestFeature
    void setUiOptions(int) -> setUiOptions
    void setUiOptions(int,int) -> setUiOptions
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setProgressBarVisibility(boolean) -> setProgressBarVisibility
    void setProgressBarIndeterminateVisibility(boolean) -> setProgressBarIndeterminateVisibility
    void setProgressBarIndeterminate(boolean) -> setProgressBarIndeterminate
    void setProgress(int) -> setProgress
    void setSecondaryProgress(int) -> setSecondaryProgress
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> getMenuInflater
    android.content.Context getThemedContext() -> getThemedContext
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void ensureActionBar() -> ensureActionBar
com.actionbarsherlock.ActionBarSherlock$Implementation -> com.actionbarsherlock.ActionBarSherlock$Implementation:
    int DEFAULT_API -> DEFAULT_API
    int DEFAULT_DPI -> DEFAULT_DPI
    int api() -> api
    int dpi() -> dpi
com.actionbarsherlock.ActionBarSherlock$OnActionModeFinishedListener -> com.actionbarsherlock.ActionBarSherlock$OnActionModeFinishedListener:
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
com.actionbarsherlock.ActionBarSherlock$OnActionModeStartedListener -> com.actionbarsherlock.ActionBarSherlock$OnActionModeStartedListener:
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
com.actionbarsherlock.ActionBarSherlock$OnCreateOptionsMenuListener -> com.actionbarsherlock.ActionBarSherlock$OnCreateOptionsMenuListener:
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
com.actionbarsherlock.ActionBarSherlock$OnCreatePanelMenuListener -> com.actionbarsherlock.ActionBarSherlock$OnCreatePanelMenuListener:
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
com.actionbarsherlock.ActionBarSherlock$OnMenuItemSelectedListener -> com.actionbarsherlock.ActionBarSherlock$OnMenuItemSelectedListener:
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
com.actionbarsherlock.ActionBarSherlock$OnOptionsItemSelectedListener -> com.actionbarsherlock.ActionBarSherlock$OnOptionsItemSelectedListener:
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
com.actionbarsherlock.ActionBarSherlock$OnPrepareOptionsMenuListener -> com.actionbarsherlock.ActionBarSherlock$OnPrepareOptionsMenuListener:
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
com.actionbarsherlock.ActionBarSherlock$OnPreparePanelListener -> com.actionbarsherlock.ActionBarSherlock$OnPreparePanelListener:
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
com.actionbarsherlock.R -> com.actionbarsherlock.R:
com.actionbarsherlock.R$attr -> com.actionbarsherlock.R$attr:
    int actionBarDivider -> actionBarDivider
    int actionBarItemBackground -> actionBarItemBackground
    int actionBarSize -> actionBarSize
    int actionBarSplitStyle -> actionBarSplitStyle
    int actionBarStyle -> actionBarStyle
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int actionBarTabStyle -> actionBarTabStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int actionButtonStyle -> actionButtonStyle
    int actionDropDownStyle -> actionDropDownStyle
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int actionMenuTextColor -> actionMenuTextColor
    int actionModeBackground -> actionModeBackground
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int actionModeShareDrawable -> actionModeShareDrawable
    int actionModeSplitBackground -> actionModeSplitBackground
    int actionModeStyle -> actionModeStyle
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int actionSpinnerItemStyle -> actionSpinnerItemStyle
    int activatedBackgroundIndicator -> activatedBackgroundIndicator
    int activityChooserViewStyle -> activityChooserViewStyle
    int background -> background
    int backgroundSplit -> backgroundSplit
    int backgroundStacked -> backgroundStacked
    int buttonStyleSmall -> buttonStyleSmall
    int customNavigationLayout -> customNavigationLayout
    int displayOptions -> displayOptions
    int divider -> divider
    int dividerVertical -> dividerVertical
    int dropDownHintAppearance -> dropDownHintAppearance
    int dropDownListViewStyle -> dropDownListViewStyle
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int headerBackground -> headerBackground
    int height -> height
    int homeAsUpIndicator -> homeAsUpIndicator
    int homeLayout -> homeLayout
    int horizontalDivider -> horizontalDivider
    int icon -> icon
    int iconifiedByDefault -> iconifiedByDefault
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int initialActivityCount -> initialActivityCount
    int itemBackground -> itemBackground
    int itemIconDisabledAlpha -> itemIconDisabledAlpha
    int itemPadding -> itemPadding
    int itemTextAppearance -> itemTextAppearance
    int listPopupWindowStyle -> listPopupWindowStyle
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int logo -> logo
    int navigationMode -> navigationMode
    int popupMenuStyle -> popupMenuStyle
    int preserveIconSpacing -> preserveIconSpacing
    int progressBarPadding -> progressBarPadding
    int progressBarStyle -> progressBarStyle
    int queryHint -> queryHint
    int searchAutoCompleteTextView -> searchAutoCompleteTextView
    int searchDropdownBackground -> searchDropdownBackground
    int searchResultListItemHeight -> searchResultListItemHeight
    int searchViewCloseIcon -> searchViewCloseIcon
    int searchViewEditQuery -> searchViewEditQuery
    int searchViewEditQueryBackground -> searchViewEditQueryBackground
    int searchViewGoIcon -> searchViewGoIcon
    int searchViewSearchIcon -> searchViewSearchIcon
    int searchViewTextField -> searchViewTextField
    int searchViewTextFieldRight -> searchViewTextFieldRight
    int searchViewVoiceIcon -> searchViewVoiceIcon
    int selectableItemBackground -> selectableItemBackground
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int spinnerItemStyle -> spinnerItemStyle
    int subtitle -> subtitle
    int subtitleTextStyle -> subtitleTextStyle
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int textAppearanceSmall -> textAppearanceSmall
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorPrimary -> textColorPrimary
    int textColorPrimaryDisableOnly -> textColorPrimaryDisableOnly
    int textColorPrimaryInverse -> textColorPrimaryInverse
    int textColorSearchUrl -> textColorSearchUrl
    int title -> title
    int titleTextStyle -> titleTextStyle
    int verticalDivider -> verticalDivider
    int windowActionBar -> windowActionBar
    int windowActionBarOverlay -> windowActionBarOverlay
    int windowActionModeOverlay -> windowActionModeOverlay
    int windowAnimationStyle -> windowAnimationStyle
    int windowContentOverlay -> windowContentOverlay
    int windowMinWidthMajor -> windowMinWidthMajor
    int windowMinWidthMinor -> windowMinWidthMinor
    int windowNoTitle -> windowNoTitle
    int windowSplitActionBar -> windowSplitActionBar
com.actionbarsherlock.R$bool -> com.actionbarsherlock.R$bool:
    int abs__action_bar_embed_tabs -> abs__action_bar_embed_tabs
    int abs__action_bar_expanded_action_views_exclusive -> abs__action_bar_expanded_action_views_exclusive
    int abs__config_actionMenuItemAllCaps -> abs__config_actionMenuItemAllCaps
    int abs__config_allowActionMenuItemTextWithIcon -> abs__config_allowActionMenuItemTextWithIcon
    int abs__config_showMenuShortcutsWhenKeyboardPresent -> abs__config_showMenuShortcutsWhenKeyboardPresent
    int abs__split_action_bar_is_narrow -> abs__split_action_bar_is_narrow
com.actionbarsherlock.R$color -> com.actionbarsherlock.R$color:
    int abs__background_holo_dark -> abs__background_holo_dark
    int abs__background_holo_light -> abs__background_holo_light
    int abs__bright_foreground_disabled_holo_dark -> abs__bright_foreground_disabled_holo_dark
    int abs__bright_foreground_disabled_holo_light -> abs__bright_foreground_disabled_holo_light
    int abs__bright_foreground_holo_dark -> abs__bright_foreground_holo_dark
    int abs__bright_foreground_holo_light -> abs__bright_foreground_holo_light
    int abs__primary_text_disable_only_holo_dark -> abs__primary_text_disable_only_holo_dark
    int abs__primary_text_disable_only_holo_light -> abs__primary_text_disable_only_holo_light
    int abs__primary_text_holo_dark -> abs__primary_text_holo_dark
    int abs__primary_text_holo_light -> abs__primary_text_holo_light
com.actionbarsherlock.R$dimen -> com.actionbarsherlock.R$dimen:
    int abs__action_bar_default_height -> abs__action_bar_default_height
    int abs__action_bar_icon_vertical_padding -> abs__action_bar_icon_vertical_padding
    int abs__action_bar_subtitle_bottom_margin -> abs__action_bar_subtitle_bottom_margin
    int abs__action_bar_subtitle_text_size -> abs__action_bar_subtitle_text_size
    int abs__action_bar_subtitle_top_margin -> abs__action_bar_subtitle_top_margin
    int abs__action_bar_title_text_size -> abs__action_bar_title_text_size
    int abs__action_button_min_width -> abs__action_button_min_width
    int abs__config_prefDialogWidth -> abs__config_prefDialogWidth
    int abs__dialog_min_width_major -> abs__dialog_min_width_major
    int abs__dialog_min_width_minor -> abs__dialog_min_width_minor
    int abs__dropdownitem_icon_width -> abs__dropdownitem_icon_width
    int abs__dropdownitem_text_padding_left -> abs__dropdownitem_text_padding_left
    int abs__dropdownitem_text_padding_right -> abs__dropdownitem_text_padding_right
    int abs__search_view_preferred_width -> abs__search_view_preferred_width
    int abs__search_view_text_min_width -> abs__search_view_text_min_width
com.actionbarsherlock.R$drawable -> com.actionbarsherlock.R$drawable:
    int abs__ab_bottom_solid_dark_holo -> abs__ab_bottom_solid_dark_holo
    int abs__ab_bottom_solid_inverse_holo -> abs__ab_bottom_solid_inverse_holo
    int abs__ab_bottom_solid_light_holo -> abs__ab_bottom_solid_light_holo
    int abs__ab_bottom_transparent_dark_holo -> abs__ab_bottom_transparent_dark_holo
    int abs__ab_bottom_transparent_light_holo -> abs__ab_bottom_transparent_light_holo
    int abs__ab_share_pack_holo_dark -> abs__ab_share_pack_holo_dark
    int abs__ab_share_pack_holo_light -> abs__ab_share_pack_holo_light
    int abs__ab_solid_dark_holo -> abs__ab_solid_dark_holo
    int abs__ab_solid_light_holo -> abs__ab_solid_light_holo
    int abs__ab_solid_shadow_holo -> abs__ab_solid_shadow_holo
    int abs__ab_stacked_solid_dark_holo -> abs__ab_stacked_solid_dark_holo
    int abs__ab_stacked_solid_light_holo -> abs__ab_stacked_solid_light_holo
    int abs__ab_stacked_transparent_dark_holo -> abs__ab_stacked_transparent_dark_holo
    int abs__ab_stacked_transparent_light_holo -> abs__ab_stacked_transparent_light_holo
    int abs__ab_transparent_dark_holo -> abs__ab_transparent_dark_holo
    int abs__ab_transparent_light_holo -> abs__ab_transparent_light_holo
    int abs__activated_background_holo_dark -> abs__activated_background_holo_dark
    int abs__activated_background_holo_light -> abs__activated_background_holo_light
    int abs__btn_cab_done_default_holo_dark -> abs__btn_cab_done_default_holo_dark
    int abs__btn_cab_done_default_holo_light -> abs__btn_cab_done_default_holo_light
    int abs__btn_cab_done_focused_holo_dark -> abs__btn_cab_done_focused_holo_dark
    int abs__btn_cab_done_focused_holo_light -> abs__btn_cab_done_focused_holo_light
    int abs__btn_cab_done_holo_dark -> abs__btn_cab_done_holo_dark
    int abs__btn_cab_done_holo_light -> abs__btn_cab_done_holo_light
    int abs__btn_cab_done_pressed_holo_dark -> abs__btn_cab_done_pressed_holo_dark
    int abs__btn_cab_done_pressed_holo_light -> abs__btn_cab_done_pressed_holo_light
    int abs__cab_background_bottom_holo_dark -> abs__cab_background_bottom_holo_dark
    int abs__cab_background_bottom_holo_light -> abs__cab_background_bottom_holo_light
    int abs__cab_background_top_holo_dark -> abs__cab_background_top_holo_dark
    int abs__cab_background_top_holo_light -> abs__cab_background_top_holo_light
    int abs__ic_ab_back_holo_dark -> abs__ic_ab_back_holo_dark
    int abs__ic_ab_back_holo_light -> abs__ic_ab_back_holo_light
    int abs__ic_cab_done_holo_dark -> abs__ic_cab_done_holo_dark
    int abs__ic_cab_done_holo_light -> abs__ic_cab_done_holo_light
    int abs__ic_clear -> abs__ic_clear
    int abs__ic_clear_disabled -> abs__ic_clear_disabled
    int abs__ic_clear_holo_light -> abs__ic_clear_holo_light
    int abs__ic_clear_normal -> abs__ic_clear_normal
    int abs__ic_clear_search_api_disabled_holo_light -> abs__ic_clear_search_api_disabled_holo_light
    int abs__ic_clear_search_api_holo_light -> abs__ic_clear_search_api_holo_light
    int abs__ic_commit_search_api_holo_dark -> abs__ic_commit_search_api_holo_dark
    int abs__ic_commit_search_api_holo_light -> abs__ic_commit_search_api_holo_light
    int abs__ic_go -> abs__ic_go
    int abs__ic_go_search_api_holo_light -> abs__ic_go_search_api_holo_light
    int abs__ic_menu_moreoverflow_holo_dark -> abs__ic_menu_moreoverflow_holo_dark
    int abs__ic_menu_moreoverflow_holo_light -> abs__ic_menu_moreoverflow_holo_light
    int abs__ic_menu_moreoverflow_normal_holo_dark -> abs__ic_menu_moreoverflow_normal_holo_dark
    int abs__ic_menu_moreoverflow_normal_holo_light -> abs__ic_menu_moreoverflow_normal_holo_light
    int abs__ic_menu_share_holo_dark -> abs__ic_menu_share_holo_dark
    int abs__ic_menu_share_holo_light -> abs__ic_menu_share_holo_light
    int abs__ic_search -> abs__ic_search
    int abs__ic_search_api_holo_light -> abs__ic_search_api_holo_light
    int abs__ic_voice_search -> abs__ic_voice_search
    int abs__ic_voice_search_api_holo_light -> abs__ic_voice_search_api_holo_light
    int abs__item_background_holo_dark -> abs__item_background_holo_dark
    int abs__item_background_holo_light -> abs__item_background_holo_light
    int abs__list_activated_holo -> abs__list_activated_holo
    int abs__list_divider_holo_dark -> abs__list_divider_holo_dark
    int abs__list_divider_holo_light -> abs__list_divider_holo_light
    int abs__list_focused_holo -> abs__list_focused_holo
    int abs__list_longpressed_holo -> abs__list_longpressed_holo
    int abs__list_pressed_holo_dark -> abs__list_pressed_holo_dark
    int abs__list_pressed_holo_light -> abs__list_pressed_holo_light
    int abs__list_selector_background_transition_holo_dark -> abs__list_selector_background_transition_holo_dark
    int abs__list_selector_background_transition_holo_light -> abs__list_selector_background_transition_holo_light
    int abs__list_selector_disabled_holo_dark -> abs__list_selector_disabled_holo_dark
    int abs__list_selector_disabled_holo_light -> abs__list_selector_disabled_holo_light
    int abs__list_selector_holo_dark -> abs__list_selector_holo_dark
    int abs__list_selector_holo_light -> abs__list_selector_holo_light
    int abs__menu_dropdown_panel_holo_dark -> abs__menu_dropdown_panel_holo_dark
    int abs__menu_dropdown_panel_holo_light -> abs__menu_dropdown_panel_holo_light
    int abs__progress_bg_holo_dark -> abs__progress_bg_holo_dark
    int abs__progress_bg_holo_light -> abs__progress_bg_holo_light
    int abs__progress_horizontal_holo_dark -> abs__progress_horizontal_holo_dark
    int abs__progress_horizontal_holo_light -> abs__progress_horizontal_holo_light
    int abs__progress_medium_holo -> abs__progress_medium_holo
    int abs__progress_primary_holo_dark -> abs__progress_primary_holo_dark
    int abs__progress_primary_holo_light -> abs__progress_primary_holo_light
    int abs__progress_secondary_holo_dark -> abs__progress_secondary_holo_dark
    int abs__progress_secondary_holo_light -> abs__progress_secondary_holo_light
    int abs__search_dropdown_dark -> abs__search_dropdown_dark
    int abs__search_dropdown_light -> abs__search_dropdown_light
    int abs__spinner_48_inner_holo -> abs__spinner_48_inner_holo
    int abs__spinner_48_outer_holo -> abs__spinner_48_outer_holo
    int abs__spinner_ab_default_holo_dark -> abs__spinner_ab_default_holo_dark
    int abs__spinner_ab_default_holo_light -> abs__spinner_ab_default_holo_light
    int abs__spinner_ab_disabled_holo_dark -> abs__spinner_ab_disabled_holo_dark
    int abs__spinner_ab_disabled_holo_light -> abs__spinner_ab_disabled_holo_light
    int abs__spinner_ab_focused_holo_dark -> abs__spinner_ab_focused_holo_dark
    int abs__spinner_ab_focused_holo_light -> abs__spinner_ab_focused_holo_light
    int abs__spinner_ab_holo_dark -> abs__spinner_ab_holo_dark
    int abs__spinner_ab_holo_light -> abs__spinner_ab_holo_light
    int abs__spinner_ab_pressed_holo_dark -> abs__spinner_ab_pressed_holo_dark
    int abs__spinner_ab_pressed_holo_light -> abs__spinner_ab_pressed_holo_light
    int abs__tab_indicator_ab_holo -> abs__tab_indicator_ab_holo
    int abs__tab_selected_focused_holo -> abs__tab_selected_focused_holo
    int abs__tab_selected_holo -> abs__tab_selected_holo
    int abs__tab_selected_pressed_holo -> abs__tab_selected_pressed_holo
    int abs__tab_unselected_pressed_holo -> abs__tab_unselected_pressed_holo
    int abs__textfield_search_default_holo_dark -> abs__textfield_search_default_holo_dark
    int abs__textfield_search_default_holo_light -> abs__textfield_search_default_holo_light
    int abs__textfield_search_right_default_holo_dark -> abs__textfield_search_right_default_holo_dark
    int abs__textfield_search_right_default_holo_light -> abs__textfield_search_right_default_holo_light
    int abs__textfield_search_right_selected_holo_dark -> abs__textfield_search_right_selected_holo_dark
    int abs__textfield_search_right_selected_holo_light -> abs__textfield_search_right_selected_holo_light
    int abs__textfield_search_selected_holo_dark -> abs__textfield_search_selected_holo_dark
    int abs__textfield_search_selected_holo_light -> abs__textfield_search_selected_holo_light
    int abs__textfield_searchview_holo_dark -> abs__textfield_searchview_holo_dark
    int abs__textfield_searchview_holo_light -> abs__textfield_searchview_holo_light
    int abs__textfield_searchview_right_holo_dark -> abs__textfield_searchview_right_holo_dark
    int abs__textfield_searchview_right_holo_light -> abs__textfield_searchview_right_holo_light
    int abs__toast_frame -> abs__toast_frame
com.actionbarsherlock.R$id -> com.actionbarsherlock.R$id:
    int abs__action_bar -> abs__action_bar
    int abs__action_bar_container -> abs__action_bar_container
    int abs__action_bar_subtitle -> abs__action_bar_subtitle
    int abs__action_bar_title -> abs__action_bar_title
    int abs__action_context_bar -> abs__action_context_bar
    int abs__action_menu_divider -> abs__action_menu_divider
    int abs__action_menu_presenter -> abs__action_menu_presenter
    int abs__action_mode_bar -> abs__action_mode_bar
    int abs__action_mode_bar_stub -> abs__action_mode_bar_stub
    int abs__action_mode_close_button -> abs__action_mode_close_button
    int abs__activity_chooser_view_content -> abs__activity_chooser_view_content
    int abs__checkbox -> abs__checkbox
    int abs__content -> abs__content
    int abs__default_activity_button -> abs__default_activity_button
    int abs__expand_activities_button -> abs__expand_activities_button
    int abs__home -> abs__home
    int abs__icon -> abs__icon
    int abs__image -> abs__image
    int abs__imageButton -> abs__imageButton
    int abs__list_item -> abs__list_item
    int abs__progress_circular -> abs__progress_circular
    int abs__progress_horizontal -> abs__progress_horizontal
    int abs__radio -> abs__radio
    int abs__search_badge -> abs__search_badge
    int abs__search_bar -> abs__search_bar
    int abs__search_button -> abs__search_button
    int abs__search_close_btn -> abs__search_close_btn
    int abs__search_edit_frame -> abs__search_edit_frame
    int abs__search_go_btn -> abs__search_go_btn
    int abs__search_mag_icon -> abs__search_mag_icon
    int abs__search_plate -> abs__search_plate
    int abs__search_src_text -> abs__search_src_text
    int abs__search_voice_btn -> abs__search_voice_btn
    int abs__shortcut -> abs__shortcut
    int abs__split_action_bar -> abs__split_action_bar
    int abs__submit_area -> abs__submit_area
    int abs__textButton -> abs__textButton
    int abs__title -> abs__title
    int abs__up -> abs__up
    int disableHome -> disableHome
    int edit_query -> edit_query
    int homeAsUp -> homeAsUp
    int listMode -> listMode
    int normal -> normal
    int showCustom -> showCustom
    int showHome -> showHome
    int showTitle -> showTitle
    int tabMode -> tabMode
    int useLogo -> useLogo
    int wrap_content -> wrap_content
com.actionbarsherlock.R$integer -> com.actionbarsherlock.R$integer:
    int abs__max_action_buttons -> abs__max_action_buttons
com.actionbarsherlock.R$layout -> com.actionbarsherlock.R$layout:
    int abs__action_bar_home -> abs__action_bar_home
    int abs__action_bar_tab -> abs__action_bar_tab
    int abs__action_bar_tab_bar_view -> abs__action_bar_tab_bar_view
    int abs__action_bar_title_item -> abs__action_bar_title_item
    int abs__action_menu_item_layout -> abs__action_menu_item_layout
    int abs__action_menu_layout -> abs__action_menu_layout
    int abs__action_mode_bar -> abs__action_mode_bar
    int abs__action_mode_close_item -> abs__action_mode_close_item
    int abs__activity_chooser_view -> abs__activity_chooser_view
    int abs__activity_chooser_view_list_item -> abs__activity_chooser_view_list_item
    int abs__list_menu_item_checkbox -> abs__list_menu_item_checkbox
    int abs__list_menu_item_icon -> abs__list_menu_item_icon
    int abs__list_menu_item_radio -> abs__list_menu_item_radio
    int abs__popup_menu_item_layout -> abs__popup_menu_item_layout
    int abs__screen_action_bar -> abs__screen_action_bar
    int abs__screen_action_bar_overlay -> abs__screen_action_bar_overlay
    int abs__screen_simple -> abs__screen_simple
    int abs__screen_simple_overlay_action_mode -> abs__screen_simple_overlay_action_mode
    int abs__search_dropdown_item_icons_2line -> abs__search_dropdown_item_icons_2line
    int abs__search_view -> abs__search_view
    int abs__simple_dropdown_hint -> abs__simple_dropdown_hint
    int sherlock_spinner_dropdown_item -> sherlock_spinner_dropdown_item
    int sherlock_spinner_item -> sherlock_spinner_item
com.actionbarsherlock.R$string -> com.actionbarsherlock.R$string:
    int abs__action_bar_home_description -> abs__action_bar_home_description
    int abs__action_bar_up_description -> abs__action_bar_up_description
    int abs__action_menu_overflow_description -> abs__action_menu_overflow_description
    int abs__action_mode_done -> abs__action_mode_done
    int abs__activity_chooser_view_see_all -> abs__activity_chooser_view_see_all
    int abs__activitychooserview_choose_application -> abs__activitychooserview_choose_application
    int abs__searchview_description_clear -> abs__searchview_description_clear
    int abs__searchview_description_query -> abs__searchview_description_query
    int abs__searchview_description_search -> abs__searchview_description_search
    int abs__searchview_description_submit -> abs__searchview_description_submit
    int abs__searchview_description_voice -> abs__searchview_description_voice
    int abs__shareactionprovider_share_with -> abs__shareactionprovider_share_with
    int abs__shareactionprovider_share_with_application -> abs__shareactionprovider_share_with_application
com.actionbarsherlock.R$style -> com.actionbarsherlock.R$style:
    int Sherlock___TextAppearance_Small -> Sherlock___TextAppearance_Small
    int Sherlock___Theme -> Sherlock___Theme
    int Sherlock___Theme_DarkActionBar -> Sherlock___Theme_DarkActionBar
    int Sherlock___Theme_Light -> Sherlock___Theme_Light
    int Sherlock___Widget_ActionBar -> Sherlock___Widget_ActionBar
    int Sherlock___Widget_ActionMode -> Sherlock___Widget_ActionMode
    int Sherlock___Widget_ActivityChooserView -> Sherlock___Widget_ActivityChooserView
    int Sherlock___Widget_Holo_DropDownItem -> Sherlock___Widget_Holo_DropDownItem
    int Sherlock___Widget_Holo_ListView -> Sherlock___Widget_Holo_ListView
    int Sherlock___Widget_Holo_Spinner -> Sherlock___Widget_Holo_Spinner
    int Sherlock___Widget_SearchAutoCompleteTextView -> Sherlock___Widget_SearchAutoCompleteTextView
    int TextAppearance_Sherlock -> TextAppearance_Sherlock
    int TextAppearance_Sherlock_Light_SearchResult -> TextAppearance_Sherlock_Light_SearchResult
    int TextAppearance_Sherlock_Light_SearchResult_Subtitle -> TextAppearance_Sherlock_Light_SearchResult_Subtitle
    int TextAppearance_Sherlock_Light_SearchResult_Title -> TextAppearance_Sherlock_Light_SearchResult_Title
    int TextAppearance_Sherlock_Light_Small -> TextAppearance_Sherlock_Light_Small
    int TextAppearance_Sherlock_Light_Widget_PopupMenu_Large -> TextAppearance_Sherlock_Light_Widget_PopupMenu_Large
    int TextAppearance_Sherlock_Light_Widget_PopupMenu_Small -> TextAppearance_Sherlock_Light_Widget_PopupMenu_Small
    int TextAppearance_Sherlock_SearchResult -> TextAppearance_Sherlock_SearchResult
    int TextAppearance_Sherlock_SearchResult_Subtitle -> TextAppearance_Sherlock_SearchResult_Subtitle
    int TextAppearance_Sherlock_SearchResult_Title -> TextAppearance_Sherlock_SearchResult_Title
    int TextAppearance_Sherlock_Small -> TextAppearance_Sherlock_Small
    int TextAppearance_Sherlock_Widget_ActionBar_Menu -> TextAppearance_Sherlock_Widget_ActionBar_Menu
    int TextAppearance_Sherlock_Widget_ActionBar_Subtitle -> TextAppearance_Sherlock_Widget_ActionBar_Subtitle
    int TextAppearance_Sherlock_Widget_ActionBar_Subtitle_Inverse -> TextAppearance_Sherlock_Widget_ActionBar_Subtitle_Inverse
    int TextAppearance_Sherlock_Widget_ActionBar_Title -> TextAppearance_Sherlock_Widget_ActionBar_Title
    int TextAppearance_Sherlock_Widget_ActionBar_Title_Inverse -> TextAppearance_Sherlock_Widget_ActionBar_Title_Inverse
    int TextAppearance_Sherlock_Widget_ActionMode_Subtitle -> TextAppearance_Sherlock_Widget_ActionMode_Subtitle
    int TextAppearance_Sherlock_Widget_ActionMode_Subtitle_Inverse -> TextAppearance_Sherlock_Widget_ActionMode_Subtitle_Inverse
    int TextAppearance_Sherlock_Widget_ActionMode_Title -> TextAppearance_Sherlock_Widget_ActionMode_Title
    int TextAppearance_Sherlock_Widget_ActionMode_Title_Inverse -> TextAppearance_Sherlock_Widget_ActionMode_Title_Inverse
    int TextAppearance_Sherlock_Widget_DropDownHint -> TextAppearance_Sherlock_Widget_DropDownHint
    int TextAppearance_Sherlock_Widget_DropDownItem -> TextAppearance_Sherlock_Widget_DropDownItem
    int TextAppearance_Sherlock_Widget_PopupMenu -> TextAppearance_Sherlock_Widget_PopupMenu
    int TextAppearance_Sherlock_Widget_PopupMenu_Large -> TextAppearance_Sherlock_Widget_PopupMenu_Large
    int TextAppearance_Sherlock_Widget_PopupMenu_Small -> TextAppearance_Sherlock_Widget_PopupMenu_Small
    int TextAppearance_Sherlock_Widget_TextView_SpinnerItem -> TextAppearance_Sherlock_Widget_TextView_SpinnerItem
    int Theme_Sherlock -> Theme_Sherlock
    int Theme_Sherlock_Light -> Theme_Sherlock_Light
    int Theme_Sherlock_Light_DarkActionBar -> Theme_Sherlock_Light_DarkActionBar
    int Theme_Sherlock_Light_NoActionBar -> Theme_Sherlock_Light_NoActionBar
    int Theme_Sherlock_NoActionBar -> Theme_Sherlock_NoActionBar
    int Widget -> Widget
    int Widget_Sherlock_ActionBar -> Widget_Sherlock_ActionBar
    int Widget_Sherlock_ActionBar_Solid -> Widget_Sherlock_ActionBar_Solid
    int Widget_Sherlock_ActionBar_TabBar -> Widget_Sherlock_ActionBar_TabBar
    int Widget_Sherlock_ActionBar_TabText -> Widget_Sherlock_ActionBar_TabText
    int Widget_Sherlock_ActionBar_TabView -> Widget_Sherlock_ActionBar_TabView
    int Widget_Sherlock_ActionButton -> Widget_Sherlock_ActionButton
    int Widget_Sherlock_ActionButton_CloseMode -> Widget_Sherlock_ActionButton_CloseMode
    int Widget_Sherlock_ActionButton_Overflow -> Widget_Sherlock_ActionButton_Overflow
    int Widget_Sherlock_ActionMode -> Widget_Sherlock_ActionMode
    int Widget_Sherlock_ActivityChooserView -> Widget_Sherlock_ActivityChooserView
    int Widget_Sherlock_Button_Small -> Widget_Sherlock_Button_Small
    int Widget_Sherlock_DropDownItem_Spinner -> Widget_Sherlock_DropDownItem_Spinner
    int Widget_Sherlock_Light_ActionBar -> Widget_Sherlock_Light_ActionBar
    int Widget_Sherlock_Light_ActionBar_Solid -> Widget_Sherlock_Light_ActionBar_Solid
    int Widget_Sherlock_Light_ActionBar_Solid_Inverse -> Widget_Sherlock_Light_ActionBar_Solid_Inverse
    int Widget_Sherlock_Light_ActionBar_TabBar -> Widget_Sherlock_Light_ActionBar_TabBar
    int Widget_Sherlock_Light_ActionBar_TabBar_Inverse -> Widget_Sherlock_Light_ActionBar_TabBar_Inverse
    int Widget_Sherlock_Light_ActionBar_TabText -> Widget_Sherlock_Light_ActionBar_TabText
    int Widget_Sherlock_Light_ActionBar_TabText_Inverse -> Widget_Sherlock_Light_ActionBar_TabText_Inverse
    int Widget_Sherlock_Light_ActionBar_TabView -> Widget_Sherlock_Light_ActionBar_TabView
    int Widget_Sherlock_Light_ActionBar_TabView_Inverse -> Widget_Sherlock_Light_ActionBar_TabView_Inverse
    int Widget_Sherlock_Light_ActionButton -> Widget_Sherlock_Light_ActionButton
    int Widget_Sherlock_Light_ActionButton_CloseMode -> Widget_Sherlock_Light_ActionButton_CloseMode
    int Widget_Sherlock_Light_ActionButton_Overflow -> Widget_Sherlock_Light_ActionButton_Overflow
    int Widget_Sherlock_Light_ActionMode -> Widget_Sherlock_Light_ActionMode
    int Widget_Sherlock_Light_ActionMode_Inverse -> Widget_Sherlock_Light_ActionMode_Inverse
    int Widget_Sherlock_Light_ActivityChooserView -> Widget_Sherlock_Light_ActivityChooserView
    int Widget_Sherlock_Light_Button_Small -> Widget_Sherlock_Light_Button_Small
    int Widget_Sherlock_Light_DropDownItem_Spinner -> Widget_Sherlock_Light_DropDownItem_Spinner
    int Widget_Sherlock_Light_ListPopupWindow -> Widget_Sherlock_Light_ListPopupWindow
    int Widget_Sherlock_Light_ListView_DropDown -> Widget_Sherlock_Light_ListView_DropDown
    int Widget_Sherlock_Light_PopupMenu -> Widget_Sherlock_Light_PopupMenu
    int Widget_Sherlock_Light_PopupWindow_ActionMode -> Widget_Sherlock_Light_PopupWindow_ActionMode
    int Widget_Sherlock_Light_ProgressBar -> Widget_Sherlock_Light_ProgressBar
    int Widget_Sherlock_Light_ProgressBar_Horizontal -> Widget_Sherlock_Light_ProgressBar_Horizontal
    int Widget_Sherlock_Light_SearchAutoCompleteTextView -> Widget_Sherlock_Light_SearchAutoCompleteTextView
    int Widget_Sherlock_Light_Spinner_DropDown_ActionBar -> Widget_Sherlock_Light_Spinner_DropDown_ActionBar
    int Widget_Sherlock_ListPopupWindow -> Widget_Sherlock_ListPopupWindow
    int Widget_Sherlock_ListView_DropDown -> Widget_Sherlock_ListView_DropDown
    int Widget_Sherlock_PopupMenu -> Widget_Sherlock_PopupMenu
    int Widget_Sherlock_PopupWindow_ActionMode -> Widget_Sherlock_PopupWindow_ActionMode
    int Widget_Sherlock_ProgressBar -> Widget_Sherlock_ProgressBar
    int Widget_Sherlock_ProgressBar_Horizontal -> Widget_Sherlock_ProgressBar_Horizontal
    int Widget_Sherlock_SearchAutoCompleteTextView -> Widget_Sherlock_SearchAutoCompleteTextView
    int Widget_Sherlock_Spinner_DropDown_ActionBar -> Widget_Sherlock_Spinner_DropDown_ActionBar
    int Widget_Sherlock_TextView_SpinnerItem -> Widget_Sherlock_TextView_SpinnerItem
com.actionbarsherlock.R$styleable -> com.actionbarsherlock.R$styleable:
    int[] SherlockActionBar -> SherlockActionBar
    int SherlockActionBar_background -> SherlockActionBar_background
    int SherlockActionBar_backgroundSplit -> SherlockActionBar_backgroundSplit
    int SherlockActionBar_backgroundStacked -> SherlockActionBar_backgroundStacked
    int SherlockActionBar_customNavigationLayout -> SherlockActionBar_customNavigationLayout
    int SherlockActionBar_displayOptions -> SherlockActionBar_displayOptions
    int SherlockActionBar_divider -> SherlockActionBar_divider
    int SherlockActionBar_height -> SherlockActionBar_height
    int SherlockActionBar_homeLayout -> SherlockActionBar_homeLayout
    int SherlockActionBar_icon -> SherlockActionBar_icon
    int SherlockActionBar_indeterminateProgressStyle -> SherlockActionBar_indeterminateProgressStyle
    int SherlockActionBar_itemPadding -> SherlockActionBar_itemPadding
    int SherlockActionBar_logo -> SherlockActionBar_logo
    int SherlockActionBar_navigationMode -> SherlockActionBar_navigationMode
    int SherlockActionBar_progressBarPadding -> SherlockActionBar_progressBarPadding
    int SherlockActionBar_progressBarStyle -> SherlockActionBar_progressBarStyle
    int SherlockActionBar_subtitle -> SherlockActionBar_subtitle
    int SherlockActionBar_subtitleTextStyle -> SherlockActionBar_subtitleTextStyle
    int SherlockActionBar_title -> SherlockActionBar_title
    int SherlockActionBar_titleTextStyle -> SherlockActionBar_titleTextStyle
    int[] SherlockActionMenuItemView -> SherlockActionMenuItemView
    int SherlockActionMenuItemView_android_minWidth -> SherlockActionMenuItemView_android_minWidth
    int[] SherlockActionMode -> SherlockActionMode
    int SherlockActionMode_background -> SherlockActionMode_background
    int SherlockActionMode_backgroundSplit -> SherlockActionMode_backgroundSplit
    int SherlockActionMode_height -> SherlockActionMode_height
    int SherlockActionMode_subtitleTextStyle -> SherlockActionMode_subtitleTextStyle
    int SherlockActionMode_titleTextStyle -> SherlockActionMode_titleTextStyle
    int[] SherlockActivityChooserView -> SherlockActivityChooserView
    int SherlockActivityChooserView_android_background -> SherlockActivityChooserView_android_background
    int SherlockActivityChooserView_expandActivityOverflowButtonDrawable -> SherlockActivityChooserView_expandActivityOverflowButtonDrawable
    int SherlockActivityChooserView_initialActivityCount -> SherlockActivityChooserView_initialActivityCount
    int[] SherlockMenuGroup -> SherlockMenuGroup
    int SherlockMenuGroup_android_checkableBehavior -> SherlockMenuGroup_android_checkableBehavior
    int SherlockMenuGroup_android_enabled -> SherlockMenuGroup_android_enabled
    int SherlockMenuGroup_android_id -> SherlockMenuGroup_android_id
    int SherlockMenuGroup_android_menuCategory -> SherlockMenuGroup_android_menuCategory
    int SherlockMenuGroup_android_orderInCategory -> SherlockMenuGroup_android_orderInCategory
    int SherlockMenuGroup_android_visible -> SherlockMenuGroup_android_visible
    int[] SherlockMenuItem -> SherlockMenuItem
    int SherlockMenuItem_android_actionLayout -> SherlockMenuItem_android_actionLayout
    int SherlockMenuItem_android_actionProviderClass -> SherlockMenuItem_android_actionProviderClass
    int SherlockMenuItem_android_actionViewClass -> SherlockMenuItem_android_actionViewClass
    int SherlockMenuItem_android_alphabeticShortcut -> SherlockMenuItem_android_alphabeticShortcut
    int SherlockMenuItem_android_checkable -> SherlockMenuItem_android_checkable
    int SherlockMenuItem_android_checked -> SherlockMenuItem_android_checked
    int SherlockMenuItem_android_enabled -> SherlockMenuItem_android_enabled
    int SherlockMenuItem_android_icon -> SherlockMenuItem_android_icon
    int SherlockMenuItem_android_id -> SherlockMenuItem_android_id
    int SherlockMenuItem_android_menuCategory -> SherlockMenuItem_android_menuCategory
    int SherlockMenuItem_android_numericShortcut -> SherlockMenuItem_android_numericShortcut
    int SherlockMenuItem_android_onClick -> SherlockMenuItem_android_onClick
    int SherlockMenuItem_android_orderInCategory -> SherlockMenuItem_android_orderInCategory
    int SherlockMenuItem_android_showAsAction -> SherlockMenuItem_android_showAsAction
    int SherlockMenuItem_android_title -> SherlockMenuItem_android_title
    int SherlockMenuItem_android_titleCondensed -> SherlockMenuItem_android_titleCondensed
    int SherlockMenuItem_android_visible -> SherlockMenuItem_android_visible
    int[] SherlockMenuView -> SherlockMenuView
    int SherlockMenuView_headerBackground -> SherlockMenuView_headerBackground
    int SherlockMenuView_horizontalDivider -> SherlockMenuView_horizontalDivider
    int SherlockMenuView_itemBackground -> SherlockMenuView_itemBackground
    int SherlockMenuView_itemIconDisabledAlpha -> SherlockMenuView_itemIconDisabledAlpha
    int SherlockMenuView_itemTextAppearance -> SherlockMenuView_itemTextAppearance
    int SherlockMenuView_preserveIconSpacing -> SherlockMenuView_preserveIconSpacing
    int SherlockMenuView_verticalDivider -> SherlockMenuView_verticalDivider
    int SherlockMenuView_windowAnimationStyle -> SherlockMenuView_windowAnimationStyle
    int[] SherlockSearchView -> SherlockSearchView
    int SherlockSearchView_android_imeOptions -> SherlockSearchView_android_imeOptions
    int SherlockSearchView_android_inputType -> SherlockSearchView_android_inputType
    int SherlockSearchView_android_maxWidth -> SherlockSearchView_android_maxWidth
    int SherlockSearchView_iconifiedByDefault -> SherlockSearchView_iconifiedByDefault
    int SherlockSearchView_queryHint -> SherlockSearchView_queryHint
    int[] SherlockSpinner -> SherlockSpinner
    int SherlockSpinner_android_dropDownHorizontalOffset -> SherlockSpinner_android_dropDownHorizontalOffset
    int SherlockSpinner_android_dropDownSelector -> SherlockSpinner_android_dropDownSelector
    int SherlockSpinner_android_dropDownVerticalOffset -> SherlockSpinner_android_dropDownVerticalOffset
    int SherlockSpinner_android_dropDownWidth -> SherlockSpinner_android_dropDownWidth
    int SherlockSpinner_android_gravity -> SherlockSpinner_android_gravity
    int SherlockSpinner_android_popupBackground -> SherlockSpinner_android_popupBackground
    int SherlockSpinner_android_popupPromptView -> SherlockSpinner_android_popupPromptView
    int SherlockSpinner_android_prompt -> SherlockSpinner_android_prompt
    int[] SherlockTheme -> SherlockTheme
    int SherlockTheme_actionBarDivider -> SherlockTheme_actionBarDivider
    int SherlockTheme_actionBarItemBackground -> SherlockTheme_actionBarItemBackground
    int SherlockTheme_actionBarSize -> SherlockTheme_actionBarSize
    int SherlockTheme_actionBarSplitStyle -> SherlockTheme_actionBarSplitStyle
    int SherlockTheme_actionBarStyle -> SherlockTheme_actionBarStyle
    int SherlockTheme_actionBarTabBarStyle -> SherlockTheme_actionBarTabBarStyle
    int SherlockTheme_actionBarTabStyle -> SherlockTheme_actionBarTabStyle
    int SherlockTheme_actionBarTabTextStyle -> SherlockTheme_actionBarTabTextStyle
    int SherlockTheme_actionBarWidgetTheme -> SherlockTheme_actionBarWidgetTheme
    int SherlockTheme_actionButtonStyle -> SherlockTheme_actionButtonStyle
    int SherlockTheme_actionDropDownStyle -> SherlockTheme_actionDropDownStyle
    int SherlockTheme_actionMenuTextAppearance -> SherlockTheme_actionMenuTextAppearance
    int SherlockTheme_actionMenuTextColor -> SherlockTheme_actionMenuTextColor
    int SherlockTheme_actionModeBackground -> SherlockTheme_actionModeBackground
    int SherlockTheme_actionModeCloseButtonStyle -> SherlockTheme_actionModeCloseButtonStyle
    int SherlockTheme_actionModeCloseDrawable -> SherlockTheme_actionModeCloseDrawable
    int SherlockTheme_actionModePopupWindowStyle -> SherlockTheme_actionModePopupWindowStyle
    int SherlockTheme_actionModeShareDrawable -> SherlockTheme_actionModeShareDrawable
    int SherlockTheme_actionModeSplitBackground -> SherlockTheme_actionModeSplitBackground
    int SherlockTheme_actionModeStyle -> SherlockTheme_actionModeStyle
    int SherlockTheme_actionOverflowButtonStyle -> SherlockTheme_actionOverflowButtonStyle
    int SherlockTheme_actionSpinnerItemStyle -> SherlockTheme_actionSpinnerItemStyle
    int SherlockTheme_activatedBackgroundIndicator -> SherlockTheme_activatedBackgroundIndicator
    int SherlockTheme_activityChooserViewStyle -> SherlockTheme_activityChooserViewStyle
    int SherlockTheme_buttonStyleSmall -> SherlockTheme_buttonStyleSmall
    int SherlockTheme_dividerVertical -> SherlockTheme_dividerVertical
    int SherlockTheme_dropDownHintAppearance -> SherlockTheme_dropDownHintAppearance
    int SherlockTheme_dropDownListViewStyle -> SherlockTheme_dropDownListViewStyle
    int SherlockTheme_dropdownListPreferredItemHeight -> SherlockTheme_dropdownListPreferredItemHeight
    int SherlockTheme_homeAsUpIndicator -> SherlockTheme_homeAsUpIndicator
    int SherlockTheme_listPopupWindowStyle -> SherlockTheme_listPopupWindowStyle
    int SherlockTheme_listPreferredItemHeightSmall -> SherlockTheme_listPreferredItemHeightSmall
    int SherlockTheme_listPreferredItemPaddingLeft -> SherlockTheme_listPreferredItemPaddingLeft
    int SherlockTheme_listPreferredItemPaddingRight -> SherlockTheme_listPreferredItemPaddingRight
    int SherlockTheme_popupMenuStyle -> SherlockTheme_popupMenuStyle
    int SherlockTheme_searchAutoCompleteTextView -> SherlockTheme_searchAutoCompleteTextView
    int SherlockTheme_searchDropdownBackground -> SherlockTheme_searchDropdownBackground
    int SherlockTheme_searchResultListItemHeight -> SherlockTheme_searchResultListItemHeight
    int SherlockTheme_searchViewCloseIcon -> SherlockTheme_searchViewCloseIcon
    int SherlockTheme_searchViewEditQuery -> SherlockTheme_searchViewEditQuery
    int SherlockTheme_searchViewEditQueryBackground -> SherlockTheme_searchViewEditQueryBackground
    int SherlockTheme_searchViewGoIcon -> SherlockTheme_searchViewGoIcon
    int SherlockTheme_searchViewSearchIcon -> SherlockTheme_searchViewSearchIcon
    int SherlockTheme_searchViewTextField -> SherlockTheme_searchViewTextField
    int SherlockTheme_searchViewTextFieldRight -> SherlockTheme_searchViewTextFieldRight
    int SherlockTheme_searchViewVoiceIcon -> SherlockTheme_searchViewVoiceIcon
    int SherlockTheme_selectableItemBackground -> SherlockTheme_selectableItemBackground
    int SherlockTheme_spinnerDropDownItemStyle -> SherlockTheme_spinnerDropDownItemStyle
    int SherlockTheme_spinnerItemStyle -> SherlockTheme_spinnerItemStyle
    int SherlockTheme_textAppearanceLargePopupMenu -> SherlockTheme_textAppearanceLargePopupMenu
    int SherlockTheme_textAppearanceListItemSmall -> SherlockTheme_textAppearanceListItemSmall
    int SherlockTheme_textAppearanceSearchResultSubtitle -> SherlockTheme_textAppearanceSearchResultSubtitle
    int SherlockTheme_textAppearanceSearchResultTitle -> SherlockTheme_textAppearanceSearchResultTitle
    int SherlockTheme_textAppearanceSmall -> SherlockTheme_textAppearanceSmall
    int SherlockTheme_textAppearanceSmallPopupMenu -> SherlockTheme_textAppearanceSmallPopupMenu
    int SherlockTheme_textColorPrimary -> SherlockTheme_textColorPrimary
    int SherlockTheme_textColorPrimaryDisableOnly -> SherlockTheme_textColorPrimaryDisableOnly
    int SherlockTheme_textColorPrimaryInverse -> SherlockTheme_textColorPrimaryInverse
    int SherlockTheme_textColorSearchUrl -> SherlockTheme_textColorSearchUrl
    int SherlockTheme_windowActionBar -> SherlockTheme_windowActionBar
    int SherlockTheme_windowActionBarOverlay -> SherlockTheme_windowActionBarOverlay
    int SherlockTheme_windowActionModeOverlay -> SherlockTheme_windowActionModeOverlay
    int SherlockTheme_windowContentOverlay -> SherlockTheme_windowContentOverlay
    int SherlockTheme_windowMinWidthMajor -> SherlockTheme_windowMinWidthMajor
    int SherlockTheme_windowMinWidthMinor -> SherlockTheme_windowMinWidthMinor
    int SherlockTheme_windowNoTitle -> SherlockTheme_windowNoTitle
    int SherlockTheme_windowSplitActionBar -> SherlockTheme_windowSplitActionBar
    int[] SherlockView -> SherlockView
    int SherlockView_android_focusable -> SherlockView_android_focusable
com.actionbarsherlock.app.ActionBar -> com.actionbarsherlock.app.ActionBar:
    int NAVIGATION_MODE_STANDARD -> NAVIGATION_MODE_STANDARD
    int NAVIGATION_MODE_LIST -> NAVIGATION_MODE_LIST
    int NAVIGATION_MODE_TABS -> NAVIGATION_MODE_TABS
    int DISPLAY_USE_LOGO -> DISPLAY_USE_LOGO
    int DISPLAY_SHOW_HOME -> DISPLAY_SHOW_HOME
    int DISPLAY_HOME_AS_UP -> DISPLAY_HOME_AS_UP
    int DISPLAY_SHOW_TITLE -> DISPLAY_SHOW_TITLE
    int DISPLAY_SHOW_CUSTOM -> DISPLAY_SHOW_CUSTOM
    void setCustomView(android.view.View) -> setCustomView
    void setCustomView(android.view.View,com.actionbarsherlock.app.ActionBar$LayoutParams) -> setCustomView
    void setCustomView(int) -> setCustomView
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setLogo(int) -> setLogo
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    void setListNavigationCallbacks(android.widget.SpinnerAdapter,com.actionbarsherlock.app.ActionBar$OnNavigationListener) -> setListNavigationCallbacks
    void setSelectedNavigationItem(int) -> setSelectedNavigationItem
    int getSelectedNavigationIndex() -> getSelectedNavigationIndex
    int getNavigationItemCount() -> getNavigationItemCount
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setSubtitle(int) -> setSubtitle
    void setDisplayOptions(int) -> setDisplayOptions
    void setDisplayOptions(int,int) -> setDisplayOptions
    void setDisplayUseLogoEnabled(boolean) -> setDisplayUseLogoEnabled
    void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    void setDisplayShowTitleEnabled(boolean) -> setDisplayShowTitleEnabled
    void setDisplayShowCustomEnabled(boolean) -> setDisplayShowCustomEnabled
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    android.view.View getCustomView() -> getCustomView
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    int getNavigationMode() -> getNavigationMode
    void setNavigationMode(int) -> setNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    com.actionbarsherlock.app.ActionBar$Tab newTab() -> newTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean) -> addTab
    void removeTab(com.actionbarsherlock.app.ActionBar$Tab) -> removeTab
    void removeTabAt(int) -> removeTabAt
    void removeAllTabs() -> removeAllTabs
    void selectTab(com.actionbarsherlock.app.ActionBar$Tab) -> selectTab
    com.actionbarsherlock.app.ActionBar$Tab getSelectedTab() -> getSelectedTab
    com.actionbarsherlock.app.ActionBar$Tab getTabAt(int) -> getTabAt
    int getTabCount() -> getTabCount
    int getHeight() -> getHeight
    void show() -> show
    void hide() -> hide
    boolean isShowing() -> isShowing
    void addOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    void removeOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    android.content.Context getThemedContext() -> getThemedContext
com.actionbarsherlock.app.ActionBar$LayoutParams -> com.actionbarsherlock.app.ActionBar$LayoutParams:
    int[] ATTRS -> ATTRS
    int gravity -> gravity
com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener -> com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener:
    void onMenuVisibilityChanged(boolean) -> onMenuVisibilityChanged
com.actionbarsherlock.app.ActionBar$OnNavigationListener -> com.actionbarsherlock.app.ActionBar$OnNavigationListener:
    boolean onNavigationItemSelected(int,long) -> onNavigationItemSelected
com.actionbarsherlock.app.ActionBar$Tab -> com.actionbarsherlock.app.ActionBar$Tab:
    int INVALID_POSITION -> INVALID_POSITION
    int getPosition() -> getPosition
    android.graphics.drawable.Drawable getIcon() -> getIcon
    java.lang.CharSequence getText() -> getText
    com.actionbarsherlock.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setIcon(int) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setText(java.lang.CharSequence) -> setText
    com.actionbarsherlock.app.ActionBar$Tab setText(int) -> setText
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(android.view.View) -> setCustomView
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(int) -> setCustomView
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.app.ActionBar$Tab setTag(java.lang.Object) -> setTag
    java.lang.Object getTag() -> getTag
    com.actionbarsherlock.app.ActionBar$Tab setTabListener(com.actionbarsherlock.app.ActionBar$TabListener) -> setTabListener
    void select() -> select
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(int) -> setContentDescription
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(java.lang.CharSequence) -> setContentDescription
    java.lang.CharSequence getContentDescription() -> getContentDescription
com.actionbarsherlock.app.ActionBar$TabListener -> com.actionbarsherlock.app.ActionBar$TabListener:
    void onTabSelected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> onTabSelected
    void onTabUnselected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> onTabUnselected
    void onTabReselected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> onTabReselected
com.actionbarsherlock.app.SherlockActivity -> com.actionbarsherlock.app.SherlockActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> mSherlock
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> getSherlock
    com.actionbarsherlock.app.ActionBar getSupportActionBar() -> getSupportActionBar
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void requestWindowFeature(long) -> requestWindowFeature
    android.view.View findViewById(int) -> findViewById
    void setSupportProgress(int) -> setSupportProgress
    void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    void setSupportSecondaryProgress(int) -> setSupportSecondaryProgress
com.actionbarsherlock.app.SherlockDialogFragment -> com.actionbarsherlock.app.SherlockDialogFragment:
    com.actionbarsherlock.app.SherlockFragmentActivity mActivity -> mActivity
    com.actionbarsherlock.app.SherlockFragmentActivity getSherlockActivity() -> getSherlockActivity
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
com.actionbarsherlock.app.SherlockExpandableListActivity -> com.actionbarsherlock.app.SherlockExpandableListActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> mSherlock
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> getSherlock
    com.actionbarsherlock.app.ActionBar getSupportActionBar() -> getSupportActionBar
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void requestWindowFeature(long) -> requestWindowFeature
    android.view.View findViewById(int) -> findViewById
    void setSupportProgress(int) -> setSupportProgress
    void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    void setSupportSecondaryProgress(int) -> setSupportSecondaryProgress
com.actionbarsherlock.app.SherlockFragment -> com.actionbarsherlock.app.SherlockFragment:
    com.actionbarsherlock.app.SherlockFragmentActivity mActivity -> mActivity
    com.actionbarsherlock.app.SherlockFragmentActivity getSherlockActivity() -> getSherlockActivity
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
com.actionbarsherlock.app.SherlockFragmentActivity -> com.actionbarsherlock.app.SherlockFragmentActivity:
    java.lang.String TAG -> TAG
    com.actionbarsherlock.ActionBarSherlock mSherlock -> mSherlock
    boolean mIgnoreNativeCreate -> mIgnoreNativeCreate
    boolean mIgnoreNativePrepare -> mIgnoreNativePrepare
    boolean mIgnoreNativeSelected -> mIgnoreNativeSelected
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> getSherlock
    com.actionbarsherlock.app.ActionBar getSupportActionBar() -> getSupportActionBar
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void requestWindowFeature(long) -> requestWindowFeature
    android.view.View findViewById(int) -> findViewById
    void setSupportProgress(int) -> setSupportProgress
    void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    void setSupportSecondaryProgress(int) -> setSupportSecondaryProgress
com.actionbarsherlock.app.SherlockListActivity -> com.actionbarsherlock.app.SherlockListActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> mSherlock
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> getSherlock
    com.actionbarsherlock.app.ActionBar getSupportActionBar() -> getSupportActionBar
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void requestWindowFeature(long) -> requestWindowFeature
    android.view.View findViewById(int) -> findViewById
    void setSupportProgress(int) -> setSupportProgress
    void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    void setSupportSecondaryProgress(int) -> setSupportSecondaryProgress
com.actionbarsherlock.app.SherlockListFragment -> com.actionbarsherlock.app.SherlockListFragment:
    com.actionbarsherlock.app.SherlockFragmentActivity mActivity -> mActivity
    com.actionbarsherlock.app.SherlockFragmentActivity getSherlockActivity() -> getSherlockActivity
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
com.actionbarsherlock.app.SherlockPreferenceActivity -> com.actionbarsherlock.app.SherlockPreferenceActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> mSherlock
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> getSherlock
    com.actionbarsherlock.app.ActionBar getSupportActionBar() -> getSupportActionBar
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void requestWindowFeature(long) -> requestWindowFeature
    android.view.View findViewById(int) -> findViewById
    void setSupportProgress(int) -> setSupportProgress
    void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    void setSupportSecondaryProgress(int) -> setSupportSecondaryProgress
com.actionbarsherlock.internal.ActionBarSherlockCompat -> com.actionbarsherlock.internal.ActionBarSherlockCompat:
    int DEFAULT_FEATURES -> DEFAULT_FEATURES
    java.lang.String PANELS_TAG -> PANELS_TAG
    boolean mReserveOverflow -> mReserveOverflow
    boolean mReserveOverflowSet -> mReserveOverflowSet
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    java.util.HashMap mNativeItemMap -> mNativeItemMap
    android.view.ViewGroup mDecor -> mDecor
    android.view.ViewGroup mContentParent -> mContentParent
    boolean mIsTitleReady -> mIsTitleReady
    boolean mIsDestroyed -> mIsDestroyed
    boolean mClosingActionMenu -> mClosingActionMenu
    boolean mMenuIsPrepared -> mMenuIsPrepared
    boolean mMenuRefreshContent -> mMenuRefreshContent
    android.os.Bundle mMenuFrozenActionViewState -> mMenuFrozenActionViewState
    com.actionbarsherlock.internal.app.ActionBarImpl aActionBar -> aActionBar
    com.actionbarsherlock.internal.widget.ActionBarView wActionBar -> wActionBar
    int mFeatures -> mFeatures
    int mUiOptions -> mUiOptions
    com.actionbarsherlock.internal.widget.IcsProgressBar mCircularProgressBar -> mCircularProgressBar
    com.actionbarsherlock.internal.widget.IcsProgressBar mHorizontalProgressBar -> mHorizontalProgressBar
    com.actionbarsherlock.view.ActionMode mActionMode -> mActionMode
    com.actionbarsherlock.internal.widget.ActionBarContextView mActionModeView -> mActionModeView
    com.actionbarsherlock.app.ActionBar getActionBar() -> getActionBar
    void initActionBar() -> initActionBar
    android.content.Context getThemedContext() -> getThemedContext
    void setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchPostResume() -> dispatchPostResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchInvalidateOptionsMenu() -> dispatchInvalidateOptionsMenu
    boolean dispatchOpenOptionsMenu() -> dispatchOpenOptionsMenu
    boolean dispatchCloseOptionsMenu() -> dispatchCloseOptionsMenu
    void dispatchPostCreate(android.os.Bundle) -> dispatchPostCreate
    boolean dispatchCreateOptionsMenu(android.view.Menu) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchMenuOpened(int,android.view.Menu) -> dispatchMenuOpened
    void dispatchPanelClosed(int,android.view.Menu) -> dispatchPanelClosed
    void dispatchTitleChanged(java.lang.CharSequence,int) -> dispatchTitleChanged
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void dispatchDestroy() -> dispatchDestroy
    void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    boolean preparePanel() -> preparePanel
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onMenuModeChange
    void reopenMenu(boolean) -> reopenMenu
    boolean initializePanelMenu() -> initializePanelMenu
    void checkCloseActionMenu(com.actionbarsherlock.view.Menu) -> checkCloseActionMenu
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onOpenSubMenu
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    void setProgressBarVisibility(boolean) -> setProgressBarVisibility
    void setProgressBarIndeterminateVisibility(boolean) -> setProgressBarIndeterminateVisibility
    void setProgressBarIndeterminate(boolean) -> setProgressBarIndeterminate
    void setProgress(int) -> setProgress
    void setSecondaryProgress(int) -> setSecondaryProgress
    void setFeatureInt(int,int) -> setFeatureInt
    void updateInt(int,int,boolean) -> updateInt
    void onIntChanged(int,int) -> onIntChanged
    void updateProgressBars(int) -> updateProgressBars
    void showProgressBars(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar) -> showProgressBars
    void hideProgressBars(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar) -> hideProgressBars
    com.actionbarsherlock.internal.widget.IcsProgressBar getCircularProgressBar(boolean) -> getCircularProgressBar
    com.actionbarsherlock.internal.widget.IcsProgressBar getHorizontalProgressBar(boolean) -> getHorizontalProgressBar
    int getFeatures() -> getFeatures
    boolean hasFeature(int) -> hasFeature
    boolean requestFeature(int) -> requestFeature
    void setUiOptions(int) -> setUiOptions
    void setUiOptions(int,int) -> setUiOptions
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void installDecor() -> installDecor
    android.view.ViewGroup generateLayout() -> generateLayout
    boolean isReservingOverflow() -> isReservingOverflow
    int loadUiOptionsFromManifest(android.app.Activity) -> loadUiOptionsFromManifest
    java.lang.String cleanActivityName(java.lang.String,java.lang.String) -> cleanActivityName
    void ensureActionBar() -> ensureActionBar
    boolean access$000(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> access$000
    android.app.Activity access$100(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> access$100
    com.actionbarsherlock.internal.view.menu.MenuBuilder access$200(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> access$200
    com.actionbarsherlock.internal.widget.ActionBarContextView access$300(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> access$300
    android.app.Activity access$400(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> access$400
    com.actionbarsherlock.view.ActionMode access$500(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> access$500
    android.app.Activity access$600(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> access$600
    com.actionbarsherlock.view.ActionMode access$502(com.actionbarsherlock.internal.ActionBarSherlockCompat,com.actionbarsherlock.view.ActionMode) -> access$502
com.actionbarsherlock.internal.ActionBarSherlockCompat$1 -> com.actionbarsherlock.internal.ActionBarSherlockCompat$1:
    com.actionbarsherlock.internal.ActionBarSherlockCompat this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.ActionBarSherlockCompat$ActionModeCallbackWrapper -> com.actionbarsherlock.internal.ActionBarSherlockCompat$ActionModeCallbackWrapper:
    com.actionbarsherlock.view.ActionMode$Callback mWrapped -> mWrapped
    com.actionbarsherlock.internal.ActionBarSherlockCompat this$0 -> this$0
    boolean onCreateActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(com.actionbarsherlock.view.ActionMode) -> onDestroyActionMode
com.actionbarsherlock.internal.ActionBarSherlockNative -> com.actionbarsherlock.internal.ActionBarSherlockNative:
    com.actionbarsherlock.internal.app.ActionBarWrapper mActionBar -> mActionBar
    com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper mActionMode -> mActionMode
    com.actionbarsherlock.internal.view.menu.MenuWrapper mMenu -> mMenu
    com.actionbarsherlock.app.ActionBar getActionBar() -> getActionBar
    void initActionBar() -> initActionBar
    void dispatchInvalidateOptionsMenu() -> dispatchInvalidateOptionsMenu
    boolean dispatchCreateOptionsMenu(android.view.Menu) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean hasFeature(int) -> hasFeature
    boolean requestFeature(int) -> requestFeature
    void setUiOptions(int) -> setUiOptions
    void setUiOptions(int,int) -> setUiOptions
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setProgressBarVisibility(boolean) -> setProgressBarVisibility
    void setProgressBarIndeterminateVisibility(boolean) -> setProgressBarIndeterminateVisibility
    void setProgressBarIndeterminate(boolean) -> setProgressBarIndeterminate
    void setProgress(int) -> setProgress
    void setSecondaryProgress(int) -> setSecondaryProgress
    android.content.Context getThemedContext() -> getThemedContext
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper access$002(com.actionbarsherlock.internal.ActionBarSherlockNative,com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper) -> access$002
    com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper access$000(com.actionbarsherlock.internal.ActionBarSherlockNative) -> access$000
    android.app.Activity access$100(com.actionbarsherlock.internal.ActionBarSherlockNative) -> access$100
    android.app.Activity access$200(com.actionbarsherlock.internal.ActionBarSherlockNative) -> access$200
com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper -> com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper:
    com.actionbarsherlock.view.ActionMode$Callback mCallback -> mCallback
    com.actionbarsherlock.internal.ActionBarSherlockNative this$0 -> this$0
    boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper -> com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper:
    android.view.ActionMode mActionMode -> mActionMode
    com.actionbarsherlock.internal.view.menu.MenuWrapper mMenu -> mMenu
    com.actionbarsherlock.internal.ActionBarSherlockNative this$0 -> this$0
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setSubtitle(int) -> setSubtitle
    void setCustomView(android.view.View) -> setCustomView
    void invalidate() -> invalidate
    void finish() -> finish
    com.actionbarsherlock.internal.view.menu.MenuWrapper getMenu() -> getMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> getMenuInflater
    void setTag(java.lang.Object) -> setTag
    java.lang.Object getTag() -> getTag
    com.actionbarsherlock.view.Menu getMenu() -> getMenu
com.actionbarsherlock.internal.ResourcesCompat -> com.actionbarsherlock.internal.ResourcesCompat:
    java.lang.String TAG -> TAG
    boolean getResources_getBoolean(android.content.Context,int) -> getResources_getBoolean
    int getResources_getInteger(android.content.Context,int) -> getResources_getInteger
    int loadLogoFromManifest(android.app.Activity) -> loadLogoFromManifest
com.actionbarsherlock.internal.app.ActionBarImpl -> com.actionbarsherlock.internal.app.ActionBarImpl:
    android.content.Context mContext -> mContext
    android.content.Context mThemedContext -> mThemedContext
    android.app.Activity mActivity -> mActivity
    com.actionbarsherlock.internal.widget.ActionBarContainer mContainerView -> mContainerView
    com.actionbarsherlock.internal.widget.ActionBarView mActionView -> mActionView
    com.actionbarsherlock.internal.widget.ActionBarContextView mContextView -> mContextView
    com.actionbarsherlock.internal.widget.ActionBarContainer mSplitView -> mSplitView
    com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout mContentView -> mContentView
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView mTabScrollView -> mTabScrollView
    java.util.ArrayList mTabs -> mTabs
    com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl mSelectedTab -> mSelectedTab
    int mSavedTabPosition -> mSavedTabPosition
    com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl mActionMode -> mActionMode
    com.actionbarsherlock.view.ActionMode mDeferredDestroyActionMode -> mDeferredDestroyActionMode
    com.actionbarsherlock.view.ActionMode$Callback mDeferredModeDestroyCallback -> mDeferredModeDestroyCallback
    boolean mLastMenuVisibility -> mLastMenuVisibility
    java.util.ArrayList mMenuVisibilityListeners -> mMenuVisibilityListeners
    int CONTEXT_DISPLAY_NORMAL -> CONTEXT_DISPLAY_NORMAL
    int CONTEXT_DISPLAY_SPLIT -> CONTEXT_DISPLAY_SPLIT
    int INVALID_POSITION -> INVALID_POSITION
    int mContextDisplayMode -> mContextDisplayMode
    boolean mHasEmbeddedTabs -> mHasEmbeddedTabs
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mTabSelector -> mTabSelector
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mCurrentShowAnim -> mCurrentShowAnim
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mCurrentModeAnim -> mCurrentModeAnim
    boolean mShowHideAnimationEnabled -> mShowHideAnimationEnabled
    boolean mWasHiddenBeforeMode -> mWasHiddenBeforeMode
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener mHideListener -> mHideListener
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener mShowListener -> mShowListener
    void init(android.view.View) -> init
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setHasEmbeddedTabs(boolean) -> setHasEmbeddedTabs
    void ensureTabsExist() -> ensureTabsExist
    void completeDeferredDestroyActionMode() -> completeDeferredDestroyActionMode
    void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    void addOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    void removeOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
    void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    void setCustomView(int) -> setCustomView
    void setDisplayUseLogoEnabled(boolean) -> setDisplayUseLogoEnabled
    void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    void setDisplayShowTitleEnabled(boolean) -> setDisplayShowTitleEnabled
    void setDisplayShowCustomEnabled(boolean) -> setDisplayShowCustomEnabled
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    void setTitle(int) -> setTitle
    void setSubtitle(int) -> setSubtitle
    void setSelectedNavigationItem(int) -> setSelectedNavigationItem
    void removeAllTabs() -> removeAllTabs
    void cleanupTabs() -> cleanupTabs
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setDisplayOptions(int) -> setDisplayOptions
    void setDisplayOptions(int,int) -> setDisplayOptions
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    android.view.View getCustomView() -> getCustomView
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    int getNavigationMode() -> getNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void configureTab(com.actionbarsherlock.app.ActionBar$Tab,int) -> configureTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean) -> addTab
    com.actionbarsherlock.app.ActionBar$Tab newTab() -> newTab
    void removeTab(com.actionbarsherlock.app.ActionBar$Tab) -> removeTab
    void removeTabAt(int) -> removeTabAt
    void selectTab(com.actionbarsherlock.app.ActionBar$Tab) -> selectTab
    com.actionbarsherlock.app.ActionBar$Tab getSelectedTab() -> getSelectedTab
    int getHeight() -> getHeight
    void show() -> show
    void show(boolean) -> show
    void hide() -> hide
    boolean isShowing() -> isShowing
    void animateToMode(boolean) -> animateToMode
    android.content.Context getThemedContext() -> getThemedContext
    void setCustomView(android.view.View) -> setCustomView
    void setCustomView(android.view.View,com.actionbarsherlock.app.ActionBar$LayoutParams) -> setCustomView
    void setListNavigationCallbacks(android.widget.SpinnerAdapter,com.actionbarsherlock.app.ActionBar$OnNavigationListener) -> setListNavigationCallbacks
    int getSelectedNavigationIndex() -> getSelectedNavigationIndex
    int getNavigationItemCount() -> getNavigationItemCount
    int getTabCount() -> getTabCount
    void setNavigationMode(int) -> setNavigationMode
    com.actionbarsherlock.app.ActionBar$Tab getTabAt(int) -> getTabAt
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setLogo(int) -> setLogo
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout access$000(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$000
    com.actionbarsherlock.internal.widget.ActionBarContainer access$100(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$100
    com.actionbarsherlock.internal.widget.ActionBarContainer access$200(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$200
    int access$300(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$300
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator access$402(com.actionbarsherlock.internal.app.ActionBarImpl,com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> access$402
    com.actionbarsherlock.internal.widget.ActionBarContextView access$500(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$500
    com.actionbarsherlock.internal.widget.ActionBarView access$600(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$600
    android.content.Context access$700(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$700
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView access$800(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$800
com.actionbarsherlock.internal.app.ActionBarImpl$1 -> com.actionbarsherlock.internal.app.ActionBarImpl$1:
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> this$0
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
com.actionbarsherlock.internal.app.ActionBarImpl$2 -> com.actionbarsherlock.internal.app.ActionBarImpl$2:
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> this$0
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl -> com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl:
    com.actionbarsherlock.view.ActionMode$Callback mCallback -> mCallback
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    java.lang.ref.WeakReference mCustomView -> mCustomView
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> this$0
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> getMenuInflater
    com.actionbarsherlock.view.Menu getMenu() -> getMenu
    void finish() -> finish
    void invalidate() -> invalidate
    boolean dispatchOnCreate() -> dispatchOnCreate
    void setCustomView(android.view.View) -> setCustomView
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(int) -> setSubtitle
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    android.view.View getCustomView() -> getCustomView
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseSubMenu(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onCloseSubMenu
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onMenuModeChange
com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl -> com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl:
    com.actionbarsherlock.app.ActionBar$TabListener mCallback -> mCallback
    java.lang.Object mTag -> mTag
    android.graphics.drawable.Drawable mIcon -> mIcon
    java.lang.CharSequence mText -> mText
    java.lang.CharSequence mContentDesc -> mContentDesc
    int mPosition -> mPosition
    android.view.View mCustomView -> mCustomView
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> this$0
    java.lang.Object getTag() -> getTag
    com.actionbarsherlock.app.ActionBar$Tab setTag(java.lang.Object) -> setTag
    com.actionbarsherlock.app.ActionBar$TabListener getCallback() -> getCallback
    com.actionbarsherlock.app.ActionBar$Tab setTabListener(com.actionbarsherlock.app.ActionBar$TabListener) -> setTabListener
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(android.view.View) -> setCustomView
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(int) -> setCustomView
    android.graphics.drawable.Drawable getIcon() -> getIcon
    int getPosition() -> getPosition
    void setPosition(int) -> setPosition
    java.lang.CharSequence getText() -> getText
    com.actionbarsherlock.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setIcon(int) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setText(java.lang.CharSequence) -> setText
    com.actionbarsherlock.app.ActionBar$Tab setText(int) -> setText
    void select() -> select
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(int) -> setContentDescription
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(java.lang.CharSequence) -> setContentDescription
    java.lang.CharSequence getContentDescription() -> getContentDescription
com.actionbarsherlock.internal.app.ActionBarWrapper -> com.actionbarsherlock.internal.app.ActionBarWrapper:
    android.app.Activity mActivity -> mActivity
    android.app.ActionBar mActionBar -> mActionBar
    com.actionbarsherlock.app.ActionBar$OnNavigationListener mNavigationListener -> mNavigationListener
    java.util.Set mMenuVisibilityListeners -> mMenuVisibilityListeners
    android.support.v4.app.FragmentTransaction mFragmentTransaction -> mFragmentTransaction
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    android.content.Context getThemedContext() -> getThemedContext
    void setCustomView(android.view.View) -> setCustomView
    void setCustomView(android.view.View,com.actionbarsherlock.app.ActionBar$LayoutParams) -> setCustomView
    void setCustomView(int) -> setCustomView
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setLogo(int) -> setLogo
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    void setListNavigationCallbacks(android.widget.SpinnerAdapter,com.actionbarsherlock.app.ActionBar$OnNavigationListener) -> setListNavigationCallbacks
    boolean onNavigationItemSelected(int,long) -> onNavigationItemSelected
    void setSelectedNavigationItem(int) -> setSelectedNavigationItem
    int getSelectedNavigationIndex() -> getSelectedNavigationIndex
    int getNavigationItemCount() -> getNavigationItemCount
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setSubtitle(int) -> setSubtitle
    void setDisplayOptions(int) -> setDisplayOptions
    void setDisplayOptions(int,int) -> setDisplayOptions
    void setDisplayUseLogoEnabled(boolean) -> setDisplayUseLogoEnabled
    void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    void setDisplayShowTitleEnabled(boolean) -> setDisplayShowTitleEnabled
    void setDisplayShowCustomEnabled(boolean) -> setDisplayShowCustomEnabled
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    android.view.View getCustomView() -> getCustomView
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    int getNavigationMode() -> getNavigationMode
    void setNavigationMode(int) -> setNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    com.actionbarsherlock.app.ActionBar$Tab newTab() -> newTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean) -> addTab
    void removeTab(com.actionbarsherlock.app.ActionBar$Tab) -> removeTab
    void removeTabAt(int) -> removeTabAt
    void removeAllTabs() -> removeAllTabs
    void selectTab(com.actionbarsherlock.app.ActionBar$Tab) -> selectTab
    com.actionbarsherlock.app.ActionBar$Tab getSelectedTab() -> getSelectedTab
    com.actionbarsherlock.app.ActionBar$Tab getTabAt(int) -> getTabAt
    int getTabCount() -> getTabCount
    int getHeight() -> getHeight
    void show() -> show
    void hide() -> hide
    boolean isShowing() -> isShowing
    void addOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    void removeOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
    void onMenuVisibilityChanged(boolean) -> onMenuVisibilityChanged
    android.app.Activity access$000(com.actionbarsherlock.internal.app.ActionBarWrapper) -> access$000
    android.support.v4.app.FragmentTransaction access$100(com.actionbarsherlock.internal.app.ActionBarWrapper) -> access$100
    android.support.v4.app.FragmentTransaction access$102(com.actionbarsherlock.internal.app.ActionBarWrapper,android.support.v4.app.FragmentTransaction) -> access$102
com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper -> com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper:
    android.app.ActionBar$Tab mNativeTab -> mNativeTab
    java.lang.Object mTag -> mTag
    com.actionbarsherlock.app.ActionBar$TabListener mListener -> mListener
    com.actionbarsherlock.internal.app.ActionBarWrapper this$0 -> this$0
    int getPosition() -> getPosition
    android.graphics.drawable.Drawable getIcon() -> getIcon
    java.lang.CharSequence getText() -> getText
    com.actionbarsherlock.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setIcon(int) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setText(java.lang.CharSequence) -> setText
    com.actionbarsherlock.app.ActionBar$Tab setText(int) -> setText
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(android.view.View) -> setCustomView
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(int) -> setCustomView
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.app.ActionBar$Tab setTag(java.lang.Object) -> setTag
    java.lang.Object getTag() -> getTag
    com.actionbarsherlock.app.ActionBar$Tab setTabListener(com.actionbarsherlock.app.ActionBar$TabListener) -> setTabListener
    void select() -> select
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(int) -> setContentDescription
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(java.lang.CharSequence) -> setContentDescription
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void onTabReselected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabReselected
    void onTabSelected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabSelected
    void onTabUnselected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabUnselected
com.actionbarsherlock.internal.nineoldandroids.animation.Animator -> com.actionbarsherlock.internal.nineoldandroids.animation.Animator:
    java.util.ArrayList mListeners -> mListeners
    void start() -> start
    void cancel() -> cancel
    void end() -> end
    long getStartDelay() -> getStartDelay
    void setStartDelay(long) -> setStartDelay
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    boolean isRunning() -> isRunning
    boolean isStarted() -> isStarted
    void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener) -> addListener
    void removeListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener) -> removeListener
    java.util.ArrayList getListeners() -> getListeners
    void removeAllListeners() -> removeAllListeners
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone() -> clone
    void setupStartValues() -> setupStartValues
    void setupEndValues() -> setupEndValues
    void setTarget(java.lang.Object) -> setTarget
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener -> com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener:
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorListenerAdapter -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorListenerAdapter:
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet:
    java.util.ArrayList mPlayingSet -> mPlayingSet
    java.util.HashMap mNodeMap -> mNodeMap
    java.util.ArrayList mNodes -> mNodes
    java.util.ArrayList mSortedNodes -> mSortedNodes
    boolean mNeedsSort -> mNeedsSort
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener mSetListener -> mSetListener
    boolean mTerminated -> mTerminated
    boolean mStarted -> mStarted
    long mStartDelay -> mStartDelay
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator mDelayAnim -> mDelayAnim
    long mDuration -> mDuration
    void playTogether(com.actionbarsherlock.internal.nineoldandroids.animation.Animator[]) -> playTogether
    void playTogether(java.util.Collection) -> playTogether
    void playSequentially(com.actionbarsherlock.internal.nineoldandroids.animation.Animator[]) -> playSequentially
    void playSequentially(java.util.List) -> playSequentially
    java.util.ArrayList getChildAnimations() -> getChildAnimations
    void setTarget(java.lang.Object) -> setTarget
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder play(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> play
    void cancel() -> cancel
    void end() -> end
    boolean isRunning() -> isRunning
    boolean isStarted() -> isStarted
    long getStartDelay() -> getStartDelay
    void setStartDelay(long) -> setStartDelay
    long getDuration() -> getDuration
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet setDuration(long) -> setDuration
    void setupStartValues() -> setupStartValues
    void setupEndValues() -> setupEndValues
    void start() -> start
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet clone() -> clone
    void sortNodes() -> sortNodes
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone() -> clone
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    java.lang.Object clone() -> clone
    java.util.ArrayList access$000(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> access$000
    java.util.HashMap access$100(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> access$100
    java.util.ArrayList access$200(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> access$200
    boolean access$302(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet,boolean) -> access$302
    java.util.ArrayList access$400(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> access$400
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$1 -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$1:
    boolean canceled -> canceled
    java.util.ArrayList val$nodesToStart -> val$nodesToStart
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet this$0 -> this$0
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet mAnimatorSet -> mAnimatorSet
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet this$0 -> this$0
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node mCurrentNode -> mCurrentNode
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet this$0 -> this$0
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder with(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> with
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder before(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> before
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder after(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> after
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder after(long) -> after
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency:
    int WITH -> WITH
    int AFTER -> AFTER
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node node -> node
    int rule -> rule
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet mAnimatorSet -> mAnimatorSet
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node mNode -> mNode
    int mRule -> mRule
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
    void startIfReady(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> startIfReady
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node:
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator animation -> animation
    java.util.ArrayList dependencies -> dependencies
    java.util.ArrayList tmpDependencies -> tmpDependencies
    java.util.ArrayList nodeDependencies -> nodeDependencies
    java.util.ArrayList nodeDependents -> nodeDependents
    boolean done -> done
    void addDependency(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency) -> addDependency
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node clone() -> clone
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.FloatEvaluator -> com.actionbarsherlock.internal.nineoldandroids.animation.FloatEvaluator:
    java.lang.Float evaluate(float,java.lang.Number,java.lang.Number) -> evaluate
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet -> com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet:
    float firstValue -> firstValue
    float lastValue -> lastValue
    float deltaValue -> deltaValue
    boolean firstTime -> firstTime
    java.lang.Object getValue(float) -> getValue
    com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet clone() -> clone
    float getFloatValue(float) -> getFloatValue
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone() -> clone
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.IntEvaluator -> com.actionbarsherlock.internal.nineoldandroids.animation.IntEvaluator:
    java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer) -> evaluate
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet -> com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet:
    int firstValue -> firstValue
    int lastValue -> lastValue
    int deltaValue -> deltaValue
    boolean firstTime -> firstTime
    java.lang.Object getValue(float) -> getValue
    com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet clone() -> clone
    int getIntValue(float) -> getIntValue
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone() -> clone
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe -> com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe:
    float mFraction -> mFraction
    java.lang.Class mValueType -> mValueType
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    boolean mHasValue -> mHasValue
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofInt(float,int) -> ofInt
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofInt(float) -> ofInt
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofFloat(float,float) -> ofFloat
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofFloat(float) -> ofFloat
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofObject(float,java.lang.Object) -> ofObject
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofObject(float) -> ofObject
    boolean hasValue() -> hasValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    float getFraction() -> getFraction
    void setFraction(float) -> setFraction
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    java.lang.Class getType() -> getType
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone() -> clone
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe -> com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe:
    float mValue -> mValue
    float getFloatValue() -> getFloatValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe clone() -> clone
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone() -> clone
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe -> com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe:
    int mValue -> mValue
    int getIntValue() -> getIntValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe clone() -> clone
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone() -> clone
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe -> com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe:
    java.lang.Object mValue -> mValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe clone() -> clone
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone() -> clone
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet -> com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet:
    int mNumKeyframes -> mNumKeyframes
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe mFirstKeyframe -> mFirstKeyframe
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe mLastKeyframe -> mLastKeyframe
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    java.util.ArrayList mKeyframes -> mKeyframes
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator mEvaluator -> mEvaluator
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofInt(int[]) -> ofInt
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofFloat(float[]) -> ofFloat
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofKeyframe(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[]) -> ofKeyframe
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofObject(java.lang.Object[]) -> ofObject
    void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator) -> setEvaluator
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone() -> clone
    java.lang.Object getValue(float) -> getValue
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator -> com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator:
    boolean DBG -> DBG
    java.lang.Object mTarget -> mTarget
    java.lang.String mPropertyName -> mPropertyName
    void setPropertyName(java.lang.String) -> setPropertyName
    java.lang.String getPropertyName() -> getPropertyName
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[]) -> ofInt
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[]) -> ofFloat
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[]) -> ofPropertyValuesHolder
    void setIntValues(int[]) -> setIntValues
    void setFloatValues(float[]) -> setFloatValues
    void setObjectValues(java.lang.Object[]) -> setObjectValues
    void start() -> start
    void initAnimation() -> initAnimation
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator setDuration(long) -> setDuration
    java.lang.Object getTarget() -> getTarget
    void setTarget(java.lang.Object) -> setTarget
    void setupStartValues() -> setupStartValues
    void setupEndValues() -> setupEndValues
    void animateValue(float) -> animateValue
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator clone() -> clone
    java.lang.String toString() -> toString
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator clone() -> clone
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator setDuration(long) -> setDuration
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone() -> clone
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder -> com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder:
    java.lang.String mPropertyName -> mPropertyName
    java.lang.reflect.Method mSetter -> mSetter
    java.lang.reflect.Method mGetter -> mGetter
    java.lang.Class mValueType -> mValueType
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet mKeyframeSet -> mKeyframeSet
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator sIntEvaluator -> sIntEvaluator
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator sFloatEvaluator -> sFloatEvaluator
    java.lang.Class[] FLOAT_VARIANTS -> FLOAT_VARIANTS
    java.lang.Class[] INTEGER_VARIANTS -> INTEGER_VARIANTS
    java.lang.Class[] DOUBLE_VARIANTS -> DOUBLE_VARIANTS
    java.util.HashMap sSetterPropertyMap -> sSetterPropertyMap
    java.util.HashMap sGetterPropertyMap -> sGetterPropertyMap
    java.util.concurrent.locks.ReentrantReadWriteLock mPropertyMapLock -> mPropertyMapLock
    java.lang.Object[] mTmpValueArray -> mTmpValueArray
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator mEvaluator -> mEvaluator
    java.lang.Object mAnimatedValue -> mAnimatedValue
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofInt(java.lang.String,int[]) -> ofInt
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofFloat(java.lang.String,float[]) -> ofFloat
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofObject(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofKeyframe(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[]) -> ofKeyframe
    void setIntValues(int[]) -> setIntValues
    void setFloatValues(float[]) -> setFloatValues
    void setKeyframes(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[]) -> setKeyframes
    void setObjectValues(java.lang.Object[]) -> setObjectValues
    java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class) -> getPropertyFunction
    java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class) -> setupSetterOrGetter
    void setupSetter(java.lang.Class) -> setupSetter
    void setupGetter(java.lang.Class) -> setupGetter
    void setupSetterAndGetter(java.lang.Object) -> setupSetterAndGetter
    void setupValue(java.lang.Object,com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe) -> setupValue
    void setupStartValue(java.lang.Object) -> setupStartValue
    void setupEndValue(java.lang.Object) -> setupEndValue
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone() -> clone
    void setAnimatedValue(java.lang.Object) -> setAnimatedValue
    void init() -> init
    void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator) -> setEvaluator
    void calculateValue(float) -> calculateValue
    void setPropertyName(java.lang.String) -> setPropertyName
    java.lang.String getPropertyName() -> getPropertyName
    java.lang.Object getAnimatedValue() -> getAnimatedValue
    java.lang.String toString() -> toString
    java.lang.String getMethodName(java.lang.String,java.lang.String) -> getMethodName
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$1 -> com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$1:
com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder -> com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder:
    com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet mFloatKeyframeSet -> mFloatKeyframeSet
    float mFloatAnimatedValue -> mFloatAnimatedValue
    void setFloatValues(float[]) -> setFloatValues
    void calculateValue(float) -> calculateValue
    java.lang.Object getAnimatedValue() -> getAnimatedValue
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder clone() -> clone
    void setAnimatedValue(java.lang.Object) -> setAnimatedValue
    void setupSetter(java.lang.Class) -> setupSetter
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone() -> clone
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder -> com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder:
    com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet mIntKeyframeSet -> mIntKeyframeSet
    int mIntAnimatedValue -> mIntAnimatedValue
    void setIntValues(int[]) -> setIntValues
    void calculateValue(float) -> calculateValue
    java.lang.Object getAnimatedValue() -> getAnimatedValue
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder clone() -> clone
    void setAnimatedValue(java.lang.Object) -> setAnimatedValue
    void setupSetter(java.lang.Class) -> setupSetter
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone() -> clone
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator -> com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator:
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator:
    long DEFAULT_FRAME_DELAY -> DEFAULT_FRAME_DELAY
    int ANIMATION_START -> ANIMATION_START
    int ANIMATION_FRAME -> ANIMATION_FRAME
    int STOPPED -> STOPPED
    int RUNNING -> RUNNING
    int SEEKED -> SEEKED
    long mStartTime -> mStartTime
    long mSeekTime -> mSeekTime
    java.lang.ThreadLocal sAnimationHandler -> sAnimationHandler
    java.lang.ThreadLocal sAnimations -> sAnimations
    java.lang.ThreadLocal sPendingAnimations -> sPendingAnimations
    java.lang.ThreadLocal sDelayedAnims -> sDelayedAnims
    java.lang.ThreadLocal sEndingAnims -> sEndingAnims
    java.lang.ThreadLocal sReadyAnims -> sReadyAnims
    android.view.animation.Interpolator sDefaultInterpolator -> sDefaultInterpolator
    boolean mPlayingBackwards -> mPlayingBackwards
    int mCurrentIteration -> mCurrentIteration
    float mCurrentFraction -> mCurrentFraction
    boolean mStartedDelay -> mStartedDelay
    long mDelayStartTime -> mDelayStartTime
    int mPlayingState -> mPlayingState
    boolean mRunning -> mRunning
    boolean mStarted -> mStarted
    boolean mInitialized -> mInitialized
    long mDuration -> mDuration
    long mStartDelay -> mStartDelay
    long sFrameDelay -> sFrameDelay
    int mRepeatCount -> mRepeatCount
    int mRepeatMode -> mRepeatMode
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    java.util.ArrayList mUpdateListeners -> mUpdateListeners
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[] mValues -> mValues
    java.util.HashMap mValuesMap -> mValuesMap
    int RESTART -> RESTART
    int REVERSE -> REVERSE
    int INFINITE -> INFINITE
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofInt(int[]) -> ofInt
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofFloat(float[]) -> ofFloat
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofPropertyValuesHolder(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[]) -> ofPropertyValuesHolder
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofObject(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    void setIntValues(int[]) -> setIntValues
    void setFloatValues(float[]) -> setFloatValues
    void setObjectValues(java.lang.Object[]) -> setObjectValues
    void setValues(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[]) -> setValues
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[] getValues() -> getValues
    void initAnimation() -> initAnimation
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    void setCurrentPlayTime(long) -> setCurrentPlayTime
    long getCurrentPlayTime() -> getCurrentPlayTime
    long getStartDelay() -> getStartDelay
    void setStartDelay(long) -> setStartDelay
    long getFrameDelay() -> getFrameDelay
    void setFrameDelay(long) -> setFrameDelay
    java.lang.Object getAnimatedValue() -> getAnimatedValue
    java.lang.Object getAnimatedValue(java.lang.String) -> getAnimatedValue
    void setRepeatCount(int) -> setRepeatCount
    int getRepeatCount() -> getRepeatCount
    void setRepeatMode(int) -> setRepeatMode
    int getRepeatMode() -> getRepeatMode
    void addUpdateListener(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener) -> addUpdateListener
    void removeAllUpdateListeners() -> removeAllUpdateListeners
    void removeUpdateListener(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener) -> removeUpdateListener
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator) -> setEvaluator
    void start(boolean) -> start
    void start() -> start
    void cancel() -> cancel
    void end() -> end
    boolean isRunning() -> isRunning
    boolean isStarted() -> isStarted
    void reverse() -> reverse
    void endAnimation() -> endAnimation
    void startAnimation() -> startAnimation
    boolean delayedAnimationFrame(long) -> delayedAnimationFrame
    boolean animationFrame(long) -> animationFrame
    float getAnimatedFraction() -> getAnimatedFraction
    void animateValue(float) -> animateValue
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator clone() -> clone
    int getCurrentAnimationsCount() -> getCurrentAnimationsCount
    void clearAllAnimations() -> clearAllAnimations
    java.lang.String toString() -> toString
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone() -> clone
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    java.lang.Object clone() -> clone
    java.lang.ThreadLocal access$000() -> access$000
    java.lang.ThreadLocal access$100() -> access$100
    java.lang.ThreadLocal access$200() -> access$200
    long access$300(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> access$300
    void access$400(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> access$400
    java.lang.ThreadLocal access$500() -> access$500
    java.lang.ThreadLocal access$600() -> access$600
    boolean access$700(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator,long) -> access$700
    boolean access$802(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator,boolean) -> access$802
    void access$900(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> access$900
    long access$1000() -> access$1000
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$1 -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$1:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$2 -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$2:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$3 -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$3:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$4 -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$4:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$5 -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$5:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler:
    void handleMessage(android.os.Message) -> handleMessage
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener:
    void onAnimationUpdate(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> onAnimationUpdate
com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup -> com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> mProxy
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getTranslationX() -> getTranslationX
    void setTranslationX(float) -> setTranslationX
    float getTranslationY() -> getTranslationY
    void setTranslationY(float) -> setTranslationY
com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy -> com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy:
    boolean NEEDS_PROXY -> NEEDS_PROXY
    java.util.WeakHashMap PROXIES -> PROXIES
    java.lang.ref.WeakReference mView -> mView
    float mAlpha -> mAlpha
    float mScaleX -> mScaleX
    float mScaleY -> mScaleY
    float mTranslationX -> mTranslationX
    float mTranslationY -> mTranslationY
    android.graphics.RectF mBefore -> mBefore
    android.graphics.RectF mAfter -> mAfter
    android.graphics.Matrix mTempMatrix -> mTempMatrix
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View) -> wrap
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getScaleX() -> getScaleX
    void setScaleX(float) -> setScaleX
    float getScaleY() -> getScaleY
    void setScaleY(float) -> setScaleY
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    float getTranslationX() -> getTranslationX
    void setTranslationX(float) -> setTranslationX
    float getTranslationY() -> getTranslationY
    void setTranslationY(float) -> setTranslationY
    void prepareForUpdate() -> prepareForUpdate
    void invalidateAfterUpdate() -> invalidateAfterUpdate
    void computeRect(android.graphics.RectF,android.view.View) -> computeRect
    void transformMatrix(android.graphics.Matrix,android.view.View) -> transformMatrix
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
    void reset() -> reset
com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout -> com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> mProxy
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getTranslationY() -> getTranslationY
    void setTranslationY(float) -> setTranslationY
com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView -> com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> mProxy
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout -> com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> mProxy
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getTranslationX() -> getTranslationX
    void setTranslationX(float) -> setTranslationX
com.actionbarsherlock.internal.view.ActionProviderWrapper -> com.actionbarsherlock.internal.view.ActionProviderWrapper:
    com.actionbarsherlock.view.ActionProvider mProvider -> mProvider
    com.actionbarsherlock.view.ActionProvider unwrap() -> unwrap
    android.view.View onCreateActionView() -> onCreateActionView
    boolean hasSubMenu() -> hasSubMenu
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
com.actionbarsherlock.internal.view.StandaloneActionMode -> com.actionbarsherlock.internal.view.StandaloneActionMode:
    android.content.Context mContext -> mContext
    com.actionbarsherlock.internal.widget.ActionBarContextView mContextView -> mContextView
    com.actionbarsherlock.view.ActionMode$Callback mCallback -> mCallback
    java.lang.ref.WeakReference mCustomView -> mCustomView
    boolean mFinished -> mFinished
    boolean mFocusable -> mFocusable
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setTitle(int) -> setTitle
    void setSubtitle(int) -> setSubtitle
    void setCustomView(android.view.View) -> setCustomView
    void invalidate() -> invalidate
    void finish() -> finish
    com.actionbarsherlock.view.Menu getMenu() -> getMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> getMenuInflater
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseSubMenu(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onCloseSubMenu
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onMenuModeChange
    boolean isUiFocusable() -> isUiFocusable
com.actionbarsherlock.internal.view.View_HasStateListenerSupport -> com.actionbarsherlock.internal.view.View_HasStateListenerSupport:
    void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> addOnAttachStateChangeListener
    void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> removeOnAttachStateChangeListener
com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener -> com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener:
    void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
com.actionbarsherlock.internal.view.menu.ActionMenu -> com.actionbarsherlock.internal.view.menu.ActionMenu:
    android.content.Context mContext -> mContext
    boolean mIsQwerty -> mIsQwerty
    java.util.ArrayList mItems -> mItems
    android.content.Context getContext() -> getContext
    com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,int) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[]) -> addIntentOptions
    com.actionbarsherlock.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    void clear() -> clear
    void close() -> close
    int findItemIndex(int) -> findItemIndex
    com.actionbarsherlock.view.MenuItem findItem(int) -> findItem
    com.actionbarsherlock.view.MenuItem getItem(int) -> getItem
    boolean hasVisibleItems() -> hasVisibleItems
    com.actionbarsherlock.internal.view.menu.ActionMenuItem findItemWithShortcut(int,android.view.KeyEvent) -> findItemWithShortcut
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    void removeGroup(int) -> removeGroup
    void removeItem(int) -> removeItem
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setQwertyMode(boolean) -> setQwertyMode
    int size() -> size
com.actionbarsherlock.internal.view.menu.ActionMenuItem -> com.actionbarsherlock.internal.view.menu.ActionMenuItem:
    int mId -> mId
    int mGroup -> mGroup
    int mOrdering -> mOrdering
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mTitleCondensed -> mTitleCondensed
    android.content.Intent mIntent -> mIntent
    char mShortcutNumericChar -> mShortcutNumericChar
    char mShortcutAlphabeticChar -> mShortcutAlphabeticChar
    android.graphics.drawable.Drawable mIconDrawable -> mIconDrawable
    android.content.Context mContext -> mContext
    com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener mClickListener -> mClickListener
    int mFlags -> mFlags
    int CHECKABLE -> CHECKABLE
    int CHECKED -> CHECKED
    int EXCLUSIVE -> EXCLUSIVE
    int HIDDEN -> HIDDEN
    int ENABLED -> ENABLED
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    int getGroupId() -> getGroupId
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.content.Intent getIntent() -> getIntent
    int getItemId() -> getItemId
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    char getNumericShortcut() -> getNumericShortcut
    int getOrder() -> getOrder
    com.actionbarsherlock.view.SubMenu getSubMenu() -> getSubMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    boolean hasSubMenu() -> hasSubMenu
    boolean isCheckable() -> isCheckable
    boolean isChecked() -> isChecked
    boolean isEnabled() -> isEnabled
    boolean isVisible() -> isVisible
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> setCheckable
    com.actionbarsherlock.internal.view.menu.ActionMenuItem setExclusiveCheckable(boolean) -> setExclusiveCheckable
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> setChecked
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> setEnabled
    com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem setIcon(int) -> setIcon
    com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent) -> setIntent
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    com.actionbarsherlock.view.MenuItem setShortcut(char,char) -> setShortcut
    com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.view.MenuItem setTitle(int) -> setTitle
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> setVisible
    boolean invoke() -> invoke
    void setShowAsAction(int) -> setShowAsAction
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.View getActionView() -> getActionView
    com.actionbarsherlock.view.MenuItem setActionView(int) -> setActionView
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> getActionProvider
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> setActionProvider
    com.actionbarsherlock.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
com.actionbarsherlock.internal.view.menu.ActionMenuItemView -> com.actionbarsherlock.internal.view.menu.ActionMenuItemView:
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mItemData -> mItemData
    java.lang.CharSequence mTitle -> mTitle
    com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker mItemInvoker -> mItemInvoker
    android.widget.ImageButton mImageButton -> mImageButton
    com.actionbarsherlock.internal.widget.CapitalizingButton mTextButton -> mTextButton
    boolean mAllowTextWithIcon -> mAllowTextWithIcon
    boolean mExpandedFormat -> mExpandedFormat
    int mMinWidth -> mMinWidth
    java.util.Set mListeners -> mListeners
    void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> addOnAttachStateChangeListener
    void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> removeOnAttachStateChangeListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onFinishInflate() -> onFinishInflate
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int) -> initialize
    void setEnabled(boolean) -> setEnabled
    void onClick(android.view.View) -> onClick
    void setItemInvoker(com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    boolean prefersCondensedTitle() -> prefersCondensedTitle
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setExpandedFormat(boolean) -> setExpandedFormat
    void updateTextButtonVisibility() -> updateTextButtonVisibility
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean hasText() -> hasText
    void setShortcut(boolean,char) -> setShortcut
    void setTitle(java.lang.CharSequence) -> setTitle
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean showsIcon() -> showsIcon
    boolean needsDividerBefore() -> needsDividerBefore
    boolean needsDividerAfter() -> needsDividerAfter
    boolean onLongClick(android.view.View) -> onLongClick
    void onMeasure(int,int) -> onMeasure
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter:
    android.view.View mOverflowButton -> mOverflowButton
    boolean mReserveOverflow -> mReserveOverflow
    boolean mReserveOverflowSet -> mReserveOverflowSet
    int mWidthLimit -> mWidthLimit
    int mActionItemWidthLimit -> mActionItemWidthLimit
    int mMaxItems -> mMaxItems
    boolean mMaxItemsSet -> mMaxItemsSet
    boolean mStrictWidthLimit -> mStrictWidthLimit
    boolean mWidthLimitSet -> mWidthLimitSet
    boolean mExpandedActionViewsExclusive -> mExpandedActionViewsExclusive
    int mMinCellSize -> mMinCellSize
    android.util.SparseBooleanArray mActionButtonGroups -> mActionButtonGroups
    android.view.View mScrapActionButtonView -> mScrapActionButtonView
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup mOverflowPopup -> mOverflowPopup
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup -> mActionButtonPopup
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable -> mPostedOpenRunnable
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback -> mPopupPresenterCallback
    int mOpenSubMenuId -> mOpenSubMenuId
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initForMenu
    boolean reserveOverflow(android.content.Context) -> reserveOverflow
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setWidthLimit(int,boolean) -> setWidthLimit
    void setReserveOverflow(boolean) -> setReserveOverflow
    void setItemLimit(int) -> setItemLimit
    void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    void bindItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,com.actionbarsherlock.internal.view.menu.MenuView$ItemView) -> bindItemView
    boolean shouldIncludeItem(int,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> shouldIncludeItem
    void updateMenuView(boolean) -> updateMenuView
    boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    android.view.View findViewForItem(com.actionbarsherlock.view.MenuItem) -> findViewForItem
    boolean showOverflowMenu() -> showOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    boolean dismissPopupMenus() -> dismissPopupMenus
    boolean hideSubMenus() -> hideSubMenus
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    boolean isOverflowReserved() -> isOverflowReserved
    boolean flagActionItems() -> flagActionItems
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup access$100(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter) -> access$100
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup access$102(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup) -> access$102
    android.view.View access$200(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter) -> access$200
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu access$302(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu) -> access$302
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable access$402(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable) -> access$402
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$1 -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$1:
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> this$0
    void onDismiss() -> onDismiss
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$HasPermanentMenuKey -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$HasPermanentMenuKey:
    boolean get(android.content.Context) -> get
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup mPopup -> mPopup
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowMenuButton -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowMenuButton:
    java.util.Set mListeners -> mListeners
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> this$0
    boolean performClick() -> performClick
    boolean needsDividerBefore() -> needsDividerBefore
    boolean needsDividerAfter() -> needsDividerAfter
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> addOnAttachStateChangeListener
    void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> removeOnAttachStateChangeListener
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> this$0
    void onDismiss() -> onDismiss
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> this$0
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onOpenSubMenu
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState:
    int openSubMenuId -> openSubMenuId
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState$1 -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState$1:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.actionbarsherlock.internal.view.menu.ActionMenuView -> com.actionbarsherlock.internal.view.menu.ActionMenuView:
    boolean IS_FROYO -> IS_FROYO
    int MIN_CELL_SIZE -> MIN_CELL_SIZE
    int GENERATED_ITEM_PADDING -> GENERATED_ITEM_PADDING
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    boolean mReserveOverflow -> mReserveOverflow
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter mPresenter -> mPresenter
    boolean mFormatItems -> mFormatItems
    int mFormatItemsWidth -> mFormatItemsWidth
    int mMinCellSize -> mMinCellSize
    int mGeneratedItemPadding -> mGeneratedItemPadding
    boolean mFirst -> mFirst
    void setPresenter(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter) -> setPresenter
    boolean isExpandedFormat() -> isExpandedFormat
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onMeasureExactFormat(int,int) -> onMeasureExactFormat
    int measureChildForCells(android.view.View,int,int,int,int) -> measureChildForCells
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean isOverflowReserved() -> isOverflowReserved
    void setOverflowReserved(boolean) -> setOverflowReserved
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> generateOverflowButtonLayoutParams
    boolean invokeItem(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> invokeItem
    int getWindowAnimations() -> getWindowAnimations
    void initialize(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initialize
    boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
com.actionbarsherlock.internal.view.menu.ActionMenuView$ActionMenuChildView -> com.actionbarsherlock.internal.view.menu.ActionMenuView$ActionMenuChildView:
    boolean needsDividerBefore() -> needsDividerBefore
    boolean needsDividerAfter() -> needsDividerAfter
com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams -> com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams:
    boolean isOverflowButton -> isOverflowButton
    int cellsUsed -> cellsUsed
    int extraPixels -> extraPixels
    boolean expandable -> expandable
    boolean preventEdgeOffset -> preventEdgeOffset
    boolean expanded -> expanded
com.actionbarsherlock.internal.view.menu.BaseMenuPresenter -> com.actionbarsherlock.internal.view.menu.BaseMenuPresenter:
    boolean IS_HONEYCOMB -> IS_HONEYCOMB
    android.content.Context mSystemContext -> mSystemContext
    android.content.Context mContext -> mContext
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    android.view.LayoutInflater mSystemInflater -> mSystemInflater
    android.view.LayoutInflater mInflater -> mInflater
    com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback mCallback -> mCallback
    int mMenuLayoutRes -> mMenuLayoutRes
    int mItemLayoutRes -> mItemLayoutRes
    com.actionbarsherlock.internal.view.menu.MenuView mMenuView -> mMenuView
    int mId -> mId
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initForMenu
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    void updateMenuView(boolean) -> updateMenuView
    void addItemView(android.view.View,int) -> addItemView
    boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> setCallback
    com.actionbarsherlock.internal.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> createItemView
    android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    void bindItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,com.actionbarsherlock.internal.view.menu.MenuView$ItemView) -> bindItemView
    boolean shouldIncludeItem(int,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> shouldIncludeItem
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    boolean flagActionItems() -> flagActionItems
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    int getId() -> getId
    void setId(int) -> setId
com.actionbarsherlock.internal.view.menu.ListMenuItemView -> com.actionbarsherlock.internal.view.menu.ListMenuItemView:
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mItemData -> mItemData
    android.widget.ImageView mIconView -> mIconView
    android.widget.RadioButton mRadioButton -> mRadioButton
    android.widget.TextView mTitleView -> mTitleView
    android.widget.CheckBox mCheckBox -> mCheckBox
    android.widget.TextView mShortcutView -> mShortcutView
    android.graphics.drawable.Drawable mBackground -> mBackground
    int mTextAppearance -> mTextAppearance
    android.content.Context mTextAppearanceContext -> mTextAppearanceContext
    boolean mPreserveIconSpacing -> mPreserveIconSpacing
    android.view.LayoutInflater mInflater -> mInflater
    boolean mForceShowIcon -> mForceShowIcon
    android.content.Context mContext -> mContext
    void onFinishInflate() -> onFinishInflate
    void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int) -> initialize
    void setForceShowIcon(boolean) -> setForceShowIcon
    void setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setShortcut(boolean,char) -> setShortcut
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void onMeasure(int,int) -> onMeasure
    void insertIconView() -> insertIconView
    void insertRadioButton() -> insertRadioButton
    void insertCheckBox() -> insertCheckBox
    boolean prefersCondensedTitle() -> prefersCondensedTitle
    boolean showsIcon() -> showsIcon
    android.view.LayoutInflater getInflater() -> getInflater
com.actionbarsherlock.internal.view.menu.MenuBuilder -> com.actionbarsherlock.internal.view.menu.MenuBuilder:
    java.lang.String PRESENTER_KEY -> PRESENTER_KEY
    java.lang.String ACTION_VIEW_STATES_KEY -> ACTION_VIEW_STATES_KEY
    java.lang.String EXPANDED_ACTION_VIEW_ID -> EXPANDED_ACTION_VIEW_ID
    int[] sCategoryToOrder -> sCategoryToOrder
    android.content.Context mContext -> mContext
    android.content.res.Resources mResources -> mResources
    boolean mQwertyMode -> mQwertyMode
    boolean mShortcutsVisible -> mShortcutsVisible
    com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback mCallback -> mCallback
    java.util.ArrayList mItems -> mItems
    java.util.ArrayList mVisibleItems -> mVisibleItems
    boolean mIsVisibleItemsStale -> mIsVisibleItemsStale
    java.util.ArrayList mActionItems -> mActionItems
    java.util.ArrayList mNonActionItems -> mNonActionItems
    boolean mIsActionItemsStale -> mIsActionItemsStale
    int mDefaultShowAsAction -> mDefaultShowAsAction
    android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo -> mCurrentMenuInfo
    java.lang.CharSequence mHeaderTitle -> mHeaderTitle
    android.graphics.drawable.Drawable mHeaderIcon -> mHeaderIcon
    android.view.View mHeaderView -> mHeaderView
    boolean mPreventDispatchingItemsChanged -> mPreventDispatchingItemsChanged
    boolean mItemsChangedWhileDispatchPrevented -> mItemsChangedWhileDispatchPrevented
    boolean mOptionalIconsVisible -> mOptionalIconsVisible
    boolean mIsClosing -> mIsClosing
    java.util.ArrayList mTempShortcutItemList -> mTempShortcutItemList
    java.util.concurrent.CopyOnWriteArrayList mPresenters -> mPresenters
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mExpandedItem -> mExpandedItem
    com.actionbarsherlock.internal.view.menu.MenuBuilder setDefaultShowAsAction(int) -> setDefaultShowAsAction
    void addMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter) -> addMenuPresenter
    void removeMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter) -> removeMenuPresenter
    void dispatchPresenterUpdate(boolean) -> dispatchPresenterUpdate
    boolean dispatchSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> dispatchSubMenuSelected
    void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    void savePresenterStates(android.os.Bundle) -> savePresenterStates
    void restorePresenterStates(android.os.Bundle) -> restorePresenterStates
    void saveActionViewStates(android.os.Bundle) -> saveActionViewStates
    void restoreActionViewStates(android.os.Bundle) -> restoreActionViewStates
    java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback) -> setCallback
    com.actionbarsherlock.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> addInternal
    com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,int) -> add
    com.actionbarsherlock.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void removeItemAtInt(int,boolean) -> removeItemAtInt
    void removeItemAt(int) -> removeItemAt
    void clearAll() -> clearAll
    void clear() -> clear
    void setExclusiveItemChecked(com.actionbarsherlock.view.MenuItem) -> setExclusiveItemChecked
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    com.actionbarsherlock.view.MenuItem findItem(int) -> findItem
    int findItemIndex(int) -> findItemIndex
    int findGroupIndex(int) -> findGroupIndex
    int findGroupIndex(int,int) -> findGroupIndex
    int size() -> size
    com.actionbarsherlock.view.MenuItem getItem(int) -> getItem
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    void setQwertyMode(boolean) -> setQwertyMode
    int getOrdering(int) -> getOrdering
    boolean isQwertyMode() -> isQwertyMode
    void setShortcutsVisible(boolean) -> setShortcutsVisible
    void setShortcutsVisibleInner(boolean) -> setShortcutsVisibleInner
    boolean isShortcutsVisible() -> isShortcutsVisible
    android.content.res.Resources getResources() -> getResources
    android.content.Context getContext() -> getContext
    boolean dispatchMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> dispatchMenuItemSelected
    void changeMenuMode() -> changeMenuMode
    int findInsertIndex(java.util.ArrayList,int) -> findInsertIndex
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> findItemsWithShortcutForKey
    com.actionbarsherlock.internal.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> findItemWithShortcutForKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    boolean performItemAction(com.actionbarsherlock.view.MenuItem,int) -> performItemAction
    void close(boolean) -> close
    void close() -> close
    void onItemsChanged(boolean) -> onItemsChanged
    void stopDispatchingItemsChanged() -> stopDispatchingItemsChanged
    void startDispatchingItemsChanged() -> startDispatchingItemsChanged
    void onItemVisibleChanged(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> onItemVisibleChanged
    void onItemActionRequestChanged(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> onItemActionRequestChanged
    java.util.ArrayList getVisibleItems() -> getVisibleItems
    void flagActionItems() -> flagActionItems
    java.util.ArrayList getActionItems() -> getActionItems
    java.util.ArrayList getNonActionItems() -> getNonActionItems
    void clearHeader() -> clearHeader
    void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> setHeaderInternal
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> setHeaderTitleInt
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderTitleInt(int) -> setHeaderTitleInt
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> setHeaderIconInt
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderIconInt(int) -> setHeaderIconInt
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> setHeaderViewInt
    java.lang.CharSequence getHeaderTitle() -> getHeaderTitle
    android.graphics.drawable.Drawable getHeaderIcon() -> getHeaderIcon
    android.view.View getHeaderView() -> getHeaderView
    com.actionbarsherlock.internal.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    void setCurrentMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setCurrentMenuInfo
    void setOptionalIconsVisible(boolean) -> setOptionalIconsVisible
    boolean getOptionalIconsVisible() -> getOptionalIconsVisible
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getExpandedItem() -> getExpandedItem
    boolean bindNativeOverflow(android.view.Menu,android.view.MenuItem$OnMenuItemClickListener,java.util.HashMap) -> bindNativeOverflow
com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback -> com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback:
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onMenuModeChange
com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker -> com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker:
    boolean invokeItem(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> invokeItem
com.actionbarsherlock.internal.view.menu.MenuItemImpl -> com.actionbarsherlock.internal.view.menu.MenuItemImpl:
    java.lang.String TAG -> TAG
    int SHOW_AS_ACTION_MASK -> SHOW_AS_ACTION_MASK
    int mId -> mId
    int mGroup -> mGroup
    int mCategoryOrder -> mCategoryOrder
    int mOrdering -> mOrdering
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mTitleCondensed -> mTitleCondensed
    android.content.Intent mIntent -> mIntent
    char mShortcutNumericChar -> mShortcutNumericChar
    char mShortcutAlphabeticChar -> mShortcutAlphabeticChar
    android.graphics.drawable.Drawable mIconDrawable -> mIconDrawable
    int mIconResId -> mIconResId
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    com.actionbarsherlock.internal.view.menu.SubMenuBuilder mSubMenu -> mSubMenu
    java.lang.Runnable mItemCallback -> mItemCallback
    com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener mClickListener -> mClickListener
    int mFlags -> mFlags
    int CHECKABLE -> CHECKABLE
    int CHECKED -> CHECKED
    int EXCLUSIVE -> EXCLUSIVE
    int HIDDEN -> HIDDEN
    int ENABLED -> ENABLED
    int IS_ACTION -> IS_ACTION
    int mShowAsAction -> mShowAsAction
    android.view.View mActionView -> mActionView
    com.actionbarsherlock.view.ActionProvider mActionProvider -> mActionProvider
    com.actionbarsherlock.view.MenuItem$OnActionExpandListener mOnActionExpandListener -> mOnActionExpandListener
    boolean mIsActionViewExpanded -> mIsActionViewExpanded
    int NO_ICON -> NO_ICON
    android.view.ContextMenu$ContextMenuInfo mMenuInfo -> mMenuInfo
    java.lang.String sPrependShortcutLabel -> sPrependShortcutLabel
    java.lang.String sEnterShortcutLabel -> sEnterShortcutLabel
    java.lang.String sDeleteShortcutLabel -> sDeleteShortcutLabel
    java.lang.String sSpaceShortcutLabel -> sSpaceShortcutLabel
    boolean invoke() -> invoke
    boolean isEnabled() -> isEnabled
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> setEnabled
    int getGroupId() -> getGroupId
    int getItemId() -> getItemId
    int getOrder() -> getOrder
    int getOrdering() -> getOrdering
    android.content.Intent getIntent() -> getIntent
    com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent) -> setIntent
    java.lang.Runnable getCallback() -> getCallback
    com.actionbarsherlock.view.MenuItem setCallback(java.lang.Runnable) -> setCallback
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getNumericShortcut() -> getNumericShortcut
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    com.actionbarsherlock.view.MenuItem setShortcut(char,char) -> setShortcut
    char getShortcut() -> getShortcut
    java.lang.String getShortcutLabel() -> getShortcutLabel
    boolean shouldShowShortcut() -> shouldShowShortcut
    com.actionbarsherlock.view.SubMenu getSubMenu() -> getSubMenu
    boolean hasSubMenu() -> hasSubMenu
    void setSubMenu(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> setSubMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleForItemView(com.actionbarsherlock.internal.view.menu.MenuView$ItemView) -> getTitleForItemView
    com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    android.graphics.drawable.Drawable getIcon() -> getIcon
    com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem setIcon(int) -> setIcon
    boolean isCheckable() -> isCheckable
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> setCheckable
    void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    boolean isExclusiveCheckable() -> isExclusiveCheckable
    boolean isChecked() -> isChecked
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> setChecked
    void setCheckedInt(boolean) -> setCheckedInt
    boolean isVisible() -> isVisible
    boolean setVisibleInt(boolean) -> setVisibleInt
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> setVisible
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    java.lang.String toString() -> toString
    void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setMenuInfo
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void actionFormatChanged() -> actionFormatChanged
    boolean shouldShowIcon() -> shouldShowIcon
    boolean isActionButton() -> isActionButton
    boolean requestsActionButton() -> requestsActionButton
    boolean requiresActionButton() -> requiresActionButton
    void setIsActionButton(boolean) -> setIsActionButton
    boolean showsTextAsAction() -> showsTextAsAction
    void setShowAsAction(int) -> setShowAsAction
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> setActionView
    com.actionbarsherlock.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> getActionProvider
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> setActionProvider
    com.actionbarsherlock.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    boolean hasCollapsibleActionView() -> hasCollapsibleActionView
    void setActionViewExpanded(boolean) -> setActionViewExpanded
    boolean isActionViewExpanded() -> isActionViewExpanded
com.actionbarsherlock.internal.view.menu.MenuItemWrapper -> com.actionbarsherlock.internal.view.menu.MenuItemWrapper:
    android.view.MenuItem mNativeItem -> mNativeItem
    com.actionbarsherlock.view.SubMenu mSubMenu -> mSubMenu
    com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener mMenuItemClickListener -> mMenuItemClickListener
    com.actionbarsherlock.view.MenuItem$OnActionExpandListener mActionExpandListener -> mActionExpandListener
    android.view.MenuItem$OnActionExpandListener mNativeActionExpandListener -> mNativeActionExpandListener
    int getItemId() -> getItemId
    int getGroupId() -> getGroupId
    int getOrder() -> getOrder
    com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitle() -> getTitle
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem setIcon(int) -> setIcon
    android.graphics.drawable.Drawable getIcon() -> getIcon
    com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.content.Intent getIntent() -> getIntent
    com.actionbarsherlock.view.MenuItem setShortcut(char,char) -> setShortcut
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    char getNumericShortcut() -> getNumericShortcut
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> setCheckable
    boolean isCheckable() -> isCheckable
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> setChecked
    boolean isChecked() -> isChecked
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    boolean hasSubMenu() -> hasSubMenu
    com.actionbarsherlock.view.SubMenu getSubMenu() -> getSubMenu
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void setShowAsAction(int) -> setShowAsAction
    com.actionbarsherlock.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> setActionView
    com.actionbarsherlock.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> setActionProvider
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> getActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    com.actionbarsherlock.view.MenuItem$OnActionExpandListener access$000(com.actionbarsherlock.internal.view.menu.MenuItemWrapper) -> access$000
com.actionbarsherlock.internal.view.menu.MenuItemWrapper$1 -> com.actionbarsherlock.internal.view.menu.MenuItemWrapper$1:
    com.actionbarsherlock.internal.view.menu.MenuItemWrapper this$0 -> this$0
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
com.actionbarsherlock.internal.view.menu.MenuPopupHelper -> com.actionbarsherlock.internal.view.menu.MenuPopupHelper:
    int ITEM_LAYOUT -> ITEM_LAYOUT
    android.content.Context mContext -> mContext
    android.view.LayoutInflater mInflater -> mInflater
    com.actionbarsherlock.internal.widget.IcsListPopupWindow mPopup -> mPopup
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    int mPopupMaxWidth -> mPopupMaxWidth
    android.view.View mAnchorView -> mAnchorView
    boolean mOverflowOnly -> mOverflowOnly
    android.view.ViewTreeObserver mTreeObserver -> mTreeObserver
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter mAdapter -> mAdapter
    com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback mPresenterCallback -> mPresenterCallback
    boolean mForceShowIcon -> mForceShowIcon
    android.view.ViewGroup mMeasureParent -> mMeasureParent
    void setAnchorView(android.view.View) -> setAnchorView
    void setForceShowIcon(boolean) -> setForceShowIcon
    void show() -> show
    boolean tryShow() -> tryShow
    void dismiss() -> dismiss
    void onDismiss() -> onDismiss
    boolean isShowing() -> isShowing
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    int measureContentWidth(android.widget.ListAdapter) -> measureContentWidth
    void onGlobalLayout() -> onGlobalLayout
    void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initForMenu
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    void updateMenuView(boolean) -> updateMenuView
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> setCallback
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean flagActionItems() -> flagActionItems
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    int getId() -> getId
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean access$200(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> access$200
    android.view.LayoutInflater access$300(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> access$300
    com.actionbarsherlock.internal.view.menu.MenuBuilder access$400(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> access$400
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter access$500(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> access$500
com.actionbarsherlock.internal.view.menu.MenuPopupHelper$1 -> com.actionbarsherlock.internal.view.menu.MenuPopupHelper$1:
com.actionbarsherlock.internal.view.menu.MenuPopupHelper$ExpandedIndexObserver -> com.actionbarsherlock.internal.view.menu.MenuPopupHelper$ExpandedIndexObserver:
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper this$0 -> this$0
    void onChanged() -> onChanged
com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter -> com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter:
    com.actionbarsherlock.internal.view.menu.MenuBuilder mAdapterMenu -> mAdapterMenu
    int mExpandedIndex -> mExpandedIndex
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper this$0 -> this$0
    int getCount() -> getCount
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void findExpandedIndex() -> findExpandedIndex
    java.lang.Object getItem(int) -> getItem
    com.actionbarsherlock.internal.view.menu.MenuBuilder access$000(com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter) -> access$000
com.actionbarsherlock.internal.view.menu.MenuPresenter -> com.actionbarsherlock.internal.view.menu.MenuPresenter:
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initForMenu
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    void updateMenuView(boolean) -> updateMenuView
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> setCallback
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean flagActionItems() -> flagActionItems
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    int getId() -> getId
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback -> com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback:
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onOpenSubMenu
com.actionbarsherlock.internal.view.menu.MenuView -> com.actionbarsherlock.internal.view.menu.MenuView:
    void initialize(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initialize
    int getWindowAnimations() -> getWindowAnimations
com.actionbarsherlock.internal.view.menu.MenuView$ItemView -> com.actionbarsherlock.internal.view.menu.MenuView$ItemView:
    void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int) -> initialize
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void setTitle(java.lang.CharSequence) -> setTitle
    void setEnabled(boolean) -> setEnabled
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setShortcut(boolean,char) -> setShortcut
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean prefersCondensedTitle() -> prefersCondensedTitle
    boolean showsIcon() -> showsIcon
com.actionbarsherlock.internal.view.menu.MenuWrapper -> com.actionbarsherlock.internal.view.menu.MenuWrapper:
    android.view.Menu mNativeMenu -> mNativeMenu
    java.util.WeakHashMap mNativeMap -> mNativeMap
    android.view.Menu unwrap() -> unwrap
    com.actionbarsherlock.view.MenuItem addInternal(android.view.MenuItem) -> addInternal
    com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,int) -> add
    com.actionbarsherlock.view.SubMenu addInternal(android.view.SubMenu) -> addInternal
    com.actionbarsherlock.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void clear() -> clear
    void invalidate() -> invalidate
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    com.actionbarsherlock.view.MenuItem findItem(int) -> findItem
    com.actionbarsherlock.view.MenuItem findItem(android.view.MenuItem) -> findItem
    int size() -> size
    com.actionbarsherlock.view.MenuItem getItem(int) -> getItem
    void close() -> close
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    void setQwertyMode(boolean) -> setQwertyMode
com.actionbarsherlock.internal.view.menu.SubMenuBuilder -> com.actionbarsherlock.internal.view.menu.SubMenuBuilder:
    com.actionbarsherlock.internal.view.menu.MenuBuilder mParentMenu -> mParentMenu
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mItem -> mItem
    void setQwertyMode(boolean) -> setQwertyMode
    boolean isQwertyMode() -> isQwertyMode
    void setShortcutsVisible(boolean) -> setShortcutsVisible
    boolean isShortcutsVisible() -> isShortcutsVisible
    com.actionbarsherlock.view.Menu getParentMenu() -> getParentMenu
    com.actionbarsherlock.view.MenuItem getItem() -> getItem
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback) -> setCallback
    com.actionbarsherlock.internal.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    boolean dispatchMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> dispatchMenuItemSelected
    com.actionbarsherlock.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.SubMenu setIcon(int) -> setIcon
    com.actionbarsherlock.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
com.actionbarsherlock.internal.view.menu.SubMenuWrapper -> com.actionbarsherlock.internal.view.menu.SubMenuWrapper:
    android.view.SubMenu mNativeSubMenu -> mNativeSubMenu
    com.actionbarsherlock.view.MenuItem mItem -> mItem
    com.actionbarsherlock.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    void clearHeader() -> clearHeader
    com.actionbarsherlock.view.SubMenu setIcon(int) -> setIcon
    com.actionbarsherlock.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem getItem() -> getItem
com.actionbarsherlock.internal.widget.AbsActionBarView -> com.actionbarsherlock.internal.widget.AbsActionBarView:
    com.actionbarsherlock.internal.view.menu.ActionMenuView mMenuView -> mMenuView
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter mActionMenuPresenter -> mActionMenuPresenter
    com.actionbarsherlock.internal.widget.ActionBarContainer mSplitView -> mSplitView
    boolean mSplitActionBar -> mSplitActionBar
    boolean mSplitWhenNarrow -> mSplitWhenNarrow
    int mContentHeight -> mContentHeight
    android.content.Context mContext -> mContext
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mVisibilityAnim -> mVisibilityAnim
    com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener -> mVisAnimListener
    android.view.animation.Interpolator sAlphaInterpolator -> sAlphaInterpolator
    int FADE_DURATION -> FADE_DURATION
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setSplitActionBar(boolean) -> setSplitActionBar
    void setSplitWhenNarrow(boolean) -> setSplitWhenNarrow
    void setContentHeight(int) -> setContentHeight
    int getContentHeight() -> getContentHeight
    void setSplitView(com.actionbarsherlock.internal.widget.ActionBarContainer) -> setSplitView
    int getAnimatedVisibility() -> getAnimatedVisibility
    void animateToVisibility(int) -> animateToVisibility
    void setVisibility(int) -> setVisibility
    boolean showOverflowMenu() -> showOverflowMenu
    void postShowOverflowMenu() -> postShowOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    boolean isOverflowReserved() -> isOverflowReserved
    void dismissPopupMenus() -> dismissPopupMenus
    int measureChildView(android.view.View,int,int,int) -> measureChildView
    int positionChild(android.view.View,int,int,int) -> positionChild
    int positionChildInverse(android.view.View,int,int,int) -> positionChildInverse
com.actionbarsherlock.internal.widget.AbsActionBarView$1 -> com.actionbarsherlock.internal.widget.AbsActionBarView$1:
    com.actionbarsherlock.internal.widget.AbsActionBarView this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener -> com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener:
    boolean mCanceled -> mCanceled
    int mFinalVisibility -> mFinalVisibility
    com.actionbarsherlock.internal.widget.AbsActionBarView this$0 -> this$0
    com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(int) -> withFinalVisibility
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
com.actionbarsherlock.internal.widget.ActionBarContainer -> com.actionbarsherlock.internal.widget.ActionBarContainer:
    boolean mIsTransitioning -> mIsTransitioning
    android.view.View mTabContainer -> mTabContainer
    com.actionbarsherlock.internal.widget.ActionBarView mActionBarView -> mActionBarView
    android.graphics.drawable.Drawable mBackground -> mBackground
    android.graphics.drawable.Drawable mStackedBackground -> mStackedBackground
    android.graphics.drawable.Drawable mSplitBackground -> mSplitBackground
    boolean mIsSplit -> mIsSplit
    boolean mIsStacked -> mIsStacked
    void onFinishInflate() -> onFinishInflate
    void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    void setTransitioning(boolean) -> setTransitioning
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    void setTabContainer(com.actionbarsherlock.internal.widget.ScrollingTabContainerView) -> setTabContainer
    android.view.View getTabContainer() -> getTabContainer
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
com.actionbarsherlock.internal.widget.ActionBarContextView -> com.actionbarsherlock.internal.widget.ActionBarContextView:
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mSubtitle -> mSubtitle
    com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout mClose -> mClose
    android.view.View mCustomView -> mCustomView
    android.widget.LinearLayout mTitleLayout -> mTitleLayout
    android.widget.TextView mTitleView -> mTitleView
    android.widget.TextView mSubtitleView -> mSubtitleView
    int mTitleStyleRes -> mTitleStyleRes
    int mSubtitleStyleRes -> mSubtitleStyleRes
    android.graphics.drawable.Drawable mSplitBackground -> mSplitBackground
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mCurrentAnimation -> mCurrentAnimation
    boolean mAnimateInOnLayout -> mAnimateInOnLayout
    int mAnimationMode -> mAnimationMode
    int ANIMATE_IDLE -> ANIMATE_IDLE
    int ANIMATE_IN -> ANIMATE_IN
    int ANIMATE_OUT -> ANIMATE_OUT
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setSplitActionBar(boolean) -> setSplitActionBar
    void setContentHeight(int) -> setContentHeight
    void setCustomView(android.view.View) -> setCustomView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void initTitle() -> initTitle
    void initForMode(com.actionbarsherlock.view.ActionMode) -> initForMode
    void closeMode() -> closeMode
    void finishAnimation() -> finishAnimation
    void killMode() -> killMode
    boolean showOverflowMenu() -> showOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void onMeasure(int,int) -> onMeasure
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeInAnimation() -> makeInAnimation
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeOutAnimation() -> makeOutAnimation
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
com.actionbarsherlock.internal.widget.ActionBarContextView$1 -> com.actionbarsherlock.internal.widget.ActionBarContextView$1:
    com.actionbarsherlock.view.ActionMode val$mode -> val$mode
    com.actionbarsherlock.internal.widget.ActionBarContextView this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ActionBarView -> com.actionbarsherlock.internal.widget.ActionBarView:
    java.lang.String TAG -> TAG
    int DISPLAY_DEFAULT -> DISPLAY_DEFAULT
    int DISPLAY_RELAYOUT_MASK -> DISPLAY_RELAYOUT_MASK
    int DEFAULT_CUSTOM_GRAVITY -> DEFAULT_CUSTOM_GRAVITY
    int mNavigationMode -> mNavigationMode
    int mDisplayOptions -> mDisplayOptions
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mSubtitle -> mSubtitle
    android.graphics.drawable.Drawable mIcon -> mIcon
    android.graphics.drawable.Drawable mLogo -> mLogo
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView mHomeLayout -> mHomeLayout
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView mExpandedHomeLayout -> mExpandedHomeLayout
    android.widget.LinearLayout mTitleLayout -> mTitleLayout
    android.widget.TextView mTitleView -> mTitleView
    android.widget.TextView mSubtitleView -> mSubtitleView
    android.view.View mTitleUpView -> mTitleUpView
    com.actionbarsherlock.internal.widget.IcsSpinner mSpinner -> mSpinner
    com.actionbarsherlock.internal.widget.IcsLinearLayout mListNavLayout -> mListNavLayout
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView mTabScrollView -> mTabScrollView
    android.view.View mCustomNavView -> mCustomNavView
    com.actionbarsherlock.internal.widget.IcsProgressBar mProgressView -> mProgressView
    com.actionbarsherlock.internal.widget.IcsProgressBar mIndeterminateProgressView -> mIndeterminateProgressView
    int mProgressBarPadding -> mProgressBarPadding
    int mItemPadding -> mItemPadding
    int mTitleStyleRes -> mTitleStyleRes
    int mSubtitleStyleRes -> mSubtitleStyleRes
    int mProgressStyle -> mProgressStyle
    int mIndeterminateProgressStyle -> mIndeterminateProgressStyle
    boolean mUserTitle -> mUserTitle
    boolean mIncludeTabs -> mIncludeTabs
    boolean mIsCollapsable -> mIsCollapsable
    boolean mIsCollapsed -> mIsCollapsed
    com.actionbarsherlock.internal.view.menu.MenuBuilder mOptionsMenu -> mOptionsMenu
    com.actionbarsherlock.internal.widget.ActionBarContextView mContextView -> mContextView
    com.actionbarsherlock.internal.view.menu.ActionMenuItem mLogoNavItem -> mLogoNavItem
    android.widget.SpinnerAdapter mSpinnerAdapter -> mSpinnerAdapter
    com.actionbarsherlock.app.ActionBar$OnNavigationListener mCallback -> mCallback
    com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter mExpandedMenuPresenter -> mExpandedMenuPresenter
    android.view.View mExpandedActionView -> mExpandedActionView
    com.actionbarsherlock.view.Window$Callback mWindowCallback -> mWindowCallback
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener mNavItemSelectedListener -> mNavItemSelectedListener
    android.view.View$OnClickListener mExpandedActionViewUpListener -> mExpandedActionViewUpListener
    android.view.View$OnClickListener mUpClickListener -> mUpClickListener
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setWindowCallback(com.actionbarsherlock.view.Window$Callback) -> setWindowCallback
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void initProgress() -> initProgress
    void initIndeterminateProgress() -> initIndeterminateProgress
    void setSplitActionBar(boolean) -> setSplitActionBar
    boolean isSplitActionBar() -> isSplitActionBar
    boolean hasEmbeddedTabs() -> hasEmbeddedTabs
    void setEmbeddedTabView(com.actionbarsherlock.internal.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    void setCallback(com.actionbarsherlock.app.ActionBar$OnNavigationListener) -> setCallback
    void setMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> setMenu
    void configPresenters(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> configPresenters
    boolean hasExpandedActionView() -> hasExpandedActionView
    void collapseActionView() -> collapseActionView
    void setCustomNavigationView(android.view.View) -> setCustomNavigationView
    java.lang.CharSequence getTitle() -> getTitle
    void setTitle(java.lang.CharSequence) -> setTitle
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    void setTitleImpl(java.lang.CharSequence) -> setTitleImpl
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    void setDisplayOptions(int) -> setDisplayOptions
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setIcon(int) -> setIcon
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    void setLogo(int) -> setLogo
    void setNavigationMode(int) -> setNavigationMode
    void setDropdownAdapter(android.widget.SpinnerAdapter) -> setDropdownAdapter
    android.widget.SpinnerAdapter getDropdownAdapter() -> getDropdownAdapter
    void setDropdownSelectedPosition(int) -> setDropdownSelectedPosition
    int getDropdownSelectedPosition() -> getDropdownSelectedPosition
    android.view.View getCustomNavigationView() -> getCustomNavigationView
    int getNavigationMode() -> getNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void onFinishInflate() -> onFinishInflate
    void initTitle() -> initTitle
    void setContextView(com.actionbarsherlock.internal.widget.ActionBarContextView) -> setContextView
    void setCollapsable(boolean) -> setCollapsable
    boolean isCollapsed() -> isCollapsed
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    com.actionbarsherlock.app.ActionBar$OnNavigationListener access$000(com.actionbarsherlock.internal.widget.ActionBarView) -> access$000
    com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter access$100(com.actionbarsherlock.internal.widget.ActionBarView) -> access$100
    com.actionbarsherlock.internal.view.menu.ActionMenuItem access$200(com.actionbarsherlock.internal.widget.ActionBarView) -> access$200
    android.graphics.drawable.Drawable access$500(com.actionbarsherlock.internal.widget.ActionBarView) -> access$500
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView access$600(com.actionbarsherlock.internal.widget.ActionBarView) -> access$600
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView access$700(com.actionbarsherlock.internal.widget.ActionBarView) -> access$700
    android.widget.LinearLayout access$800(com.actionbarsherlock.internal.widget.ActionBarView) -> access$800
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView access$900(com.actionbarsherlock.internal.widget.ActionBarView) -> access$900
    com.actionbarsherlock.internal.widget.IcsSpinner access$1000(com.actionbarsherlock.internal.widget.ActionBarView) -> access$1000
    android.view.View access$1100(com.actionbarsherlock.internal.widget.ActionBarView) -> access$1100
    int access$1200(com.actionbarsherlock.internal.widget.ActionBarView) -> access$1200
    void access$1300(com.actionbarsherlock.internal.widget.ActionBarView) -> access$1300
    int access$1400(com.actionbarsherlock.internal.widget.ActionBarView) -> access$1400
com.actionbarsherlock.internal.widget.ActionBarView$1 -> com.actionbarsherlock.internal.widget.ActionBarView$1:
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> this$0
    void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(com.actionbarsherlock.internal.widget.IcsAdapterView) -> onNothingSelected
com.actionbarsherlock.internal.widget.ActionBarView$2 -> com.actionbarsherlock.internal.widget.ActionBarView$2:
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ActionBarView$3 -> com.actionbarsherlock.internal.widget.ActionBarView$3:
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter -> com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter:
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mCurrentExpandedItem -> mCurrentExpandedItem
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> this$0
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initForMenu
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    void updateMenuView(boolean) -> updateMenuView
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> setCallback
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean flagActionItems() -> flagActionItems
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    int getId() -> getId
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
com.actionbarsherlock.internal.widget.ActionBarView$HomeView -> com.actionbarsherlock.internal.widget.ActionBarView$HomeView:
    android.view.View mUpView -> mUpView
    android.widget.ImageView mIconView -> mIconView
    int mUpWidth -> mUpWidth
    void setUp(boolean) -> setUp
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    void onFinishInflate() -> onFinishInflate
    int getLeftOffset() -> getLeftOffset
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
com.actionbarsherlock.internal.widget.ActionBarView$SavedState -> com.actionbarsherlock.internal.widget.ActionBarView$SavedState:
    int expandedMenuItemId -> expandedMenuItemId
    boolean isOverflowOpen -> isOverflowOpen
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.actionbarsherlock.internal.widget.ActionBarView$SavedState$1 -> com.actionbarsherlock.internal.widget.ActionBarView$SavedState$1:
    com.actionbarsherlock.internal.widget.ActionBarView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.actionbarsherlock.internal.widget.ActionBarView$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.actionbarsherlock.internal.widget.CapitalizingButton -> com.actionbarsherlock.internal.widget.CapitalizingButton:
    boolean SANS_ICE_CREAM -> SANS_ICE_CREAM
    boolean IS_GINGERBREAD -> IS_GINGERBREAD
    int[] R_styleable_Button -> R_styleable_Button
    int R_styleable_Button_textAppearance -> R_styleable_Button_textAppearance
    int[] R_styleable_TextAppearance -> R_styleable_TextAppearance
    int R_styleable_TextAppearance_textAllCaps -> R_styleable_TextAppearance_textAllCaps
    boolean mAllCaps -> mAllCaps
    void setTextCompat(java.lang.CharSequence) -> setTextCompat
com.actionbarsherlock.internal.widget.CapitalizingTextView -> com.actionbarsherlock.internal.widget.CapitalizingTextView:
    boolean SANS_ICE_CREAM -> SANS_ICE_CREAM
    boolean IS_GINGERBREAD -> IS_GINGERBREAD
    int[] R_styleable_TextView -> R_styleable_TextView
    int R_styleable_TextView_textAllCaps -> R_styleable_TextView_textAllCaps
    boolean mAllCaps -> mAllCaps
    void setTextCompat(java.lang.CharSequence) -> setTextCompat
com.actionbarsherlock.internal.widget.CollapsibleActionViewWrapper -> com.actionbarsherlock.internal.widget.CollapsibleActionViewWrapper:
    com.actionbarsherlock.view.CollapsibleActionView child -> child
    void onActionViewExpanded() -> onActionViewExpanded
    void onActionViewCollapsed() -> onActionViewCollapsed
    android.view.View unwrap() -> unwrap
com.actionbarsherlock.internal.widget.IcsAbsSpinner -> com.actionbarsherlock.internal.widget.IcsAbsSpinner:
    boolean IS_HONEYCOMB -> IS_HONEYCOMB
    android.widget.SpinnerAdapter mAdapter -> mAdapter
    int mHeightMeasureSpec -> mHeightMeasureSpec
    int mWidthMeasureSpec -> mWidthMeasureSpec
    boolean mBlockLayoutRequests -> mBlockLayoutRequests
    int mSelectionLeftPadding -> mSelectionLeftPadding
    int mSelectionTopPadding -> mSelectionTopPadding
    int mSelectionRightPadding -> mSelectionRightPadding
    int mSelectionBottomPadding -> mSelectionBottomPadding
    android.graphics.Rect mSpinnerPadding -> mSpinnerPadding
    com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin mRecycler -> mRecycler
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.graphics.Rect mTouchFrame -> mTouchFrame
    void initAbsSpinner() -> initAbsSpinner
    void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    void resetList() -> resetList
    void onMeasure(int,int) -> onMeasure
    int getChildHeight(android.view.View) -> getChildHeight
    int getChildWidth(android.view.View) -> getChildWidth
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void recycleAllViews() -> recycleAllViews
    void setSelection(int,boolean) -> setSelection
    void setSelection(int) -> setSelection
    void setSelectionInt(int,boolean) -> setSelectionInt
    void layout(int,boolean) -> layout
    android.view.View getSelectedView() -> getSelectedView
    void requestLayout() -> requestLayout
    android.widget.SpinnerAdapter getAdapter() -> getAdapter
    int getCount() -> getCount
    int pointToPosition(int,int) -> pointToPosition
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void setAdapter(android.widget.Adapter) -> setAdapter
    android.widget.Adapter getAdapter() -> getAdapter
    void access$100(com.actionbarsherlock.internal.widget.IcsAbsSpinner,android.view.View,boolean) -> access$100
com.actionbarsherlock.internal.widget.IcsAbsSpinner$1 -> com.actionbarsherlock.internal.widget.IcsAbsSpinner$1:
com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin -> com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin:
    android.util.SparseArray mScrapHeap -> mScrapHeap
    com.actionbarsherlock.internal.widget.IcsAbsSpinner this$0 -> this$0
    void put(int,android.view.View) -> put
    android.view.View get(int) -> get
    void clear() -> clear
com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState -> com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState:
    long selectedId -> selectedId
    int position -> position
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState$1 -> com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState$1:
    com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.actionbarsherlock.internal.widget.IcsAdapterView -> com.actionbarsherlock.internal.widget.IcsAdapterView:
    int ITEM_VIEW_TYPE_IGNORE -> ITEM_VIEW_TYPE_IGNORE
    int ITEM_VIEW_TYPE_HEADER_OR_FOOTER -> ITEM_VIEW_TYPE_HEADER_OR_FOOTER
    int mFirstPosition -> mFirstPosition
    int mSpecificTop -> mSpecificTop
    int mSyncPosition -> mSyncPosition
    long mSyncRowId -> mSyncRowId
    long mSyncHeight -> mSyncHeight
    boolean mNeedSync -> mNeedSync
    int mSyncMode -> mSyncMode
    int mLayoutHeight -> mLayoutHeight
    int SYNC_SELECTED_POSITION -> SYNC_SELECTED_POSITION
    int SYNC_FIRST_POSITION -> SYNC_FIRST_POSITION
    int SYNC_MAX_DURATION_MILLIS -> SYNC_MAX_DURATION_MILLIS
    boolean mInLayout -> mInLayout
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener mOnItemSelectedListener -> mOnItemSelectedListener
    android.widget.AdapterView$OnItemClickListener mOnItemClickListener -> mOnItemClickListener
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener mOnItemLongClickListener -> mOnItemLongClickListener
    boolean mDataChanged -> mDataChanged
    int mNextSelectedPosition -> mNextSelectedPosition
    long mNextSelectedRowId -> mNextSelectedRowId
    int mSelectedPosition -> mSelectedPosition
    long mSelectedRowId -> mSelectedRowId
    android.view.View mEmptyView -> mEmptyView
    int mItemCount -> mItemCount
    int mOldItemCount -> mOldItemCount
    int INVALID_POSITION -> INVALID_POSITION
    long INVALID_ROW_ID -> INVALID_ROW_ID
    int mOldSelectedPosition -> mOldSelectedPosition
    long mOldSelectedRowId -> mOldSelectedRowId
    boolean mDesiredFocusableState -> mDesiredFocusableState
    boolean mDesiredFocusableInTouchModeState -> mDesiredFocusableInTouchModeState
    com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier mSelectionNotifier -> mSelectionNotifier
    boolean mBlockLayoutRequests -> mBlockLayoutRequests
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    android.widget.AdapterView$OnItemClickListener getOnItemClickListener() -> getOnItemClickListener
    boolean performItemClick(android.view.View,int,long) -> performItemClick
    void setOnItemLongClickListener(com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener) -> setOnItemLongClickListener
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener getOnItemLongClickListener() -> getOnItemLongClickListener
    void setOnItemSelectedListener(com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener getOnItemSelectedListener() -> getOnItemSelectedListener
    android.widget.Adapter getAdapter() -> getAdapter
    void setAdapter(android.widget.Adapter) -> setAdapter
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    void removeViewAt(int) -> removeViewAt
    void removeAllViews() -> removeAllViews
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.view.View getSelectedView() -> getSelectedView
    java.lang.Object getSelectedItem() -> getSelectedItem
    int getCount() -> getCount
    int getPositionForView(android.view.View) -> getPositionForView
    int getFirstVisiblePosition() -> getFirstVisiblePosition
    int getLastVisiblePosition() -> getLastVisiblePosition
    void setSelection(int) -> setSelection
    void setEmptyView(android.view.View) -> setEmptyView
    android.view.View getEmptyView() -> getEmptyView
    boolean isInFilterMode() -> isInFilterMode
    void setFocusable(boolean) -> setFocusable
    void setFocusableInTouchMode(boolean) -> setFocusableInTouchMode
    void checkFocus() -> checkFocus
    void updateEmptyStatus(boolean) -> updateEmptyStatus
    java.lang.Object getItemAtPosition(int) -> getItemAtPosition
    long getItemIdAtPosition(int) -> getItemIdAtPosition
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    void onDetachedFromWindow() -> onDetachedFromWindow
    void selectionChanged() -> selectionChanged
    void fireOnSelected() -> fireOnSelected
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean isScrollableForAccessibility() -> isScrollableForAccessibility
    boolean canAnimate() -> canAnimate
    void handleDataChanged() -> handleDataChanged
    void checkSelectionChanged() -> checkSelectionChanged
    int findSyncPosition() -> findSyncPosition
    int lookForSelectablePosition(int,boolean) -> lookForSelectablePosition
    void setSelectedPositionInt(int) -> setSelectedPositionInt
    void setNextSelectedPositionInt(int) -> setNextSelectedPositionInt
    void rememberSyncState() -> rememberSyncState
    void access$000(com.actionbarsherlock.internal.widget.IcsAdapterView,android.os.Parcelable) -> access$000
    android.os.Parcelable access$100(com.actionbarsherlock.internal.widget.IcsAdapterView) -> access$100
    void access$200(com.actionbarsherlock.internal.widget.IcsAdapterView) -> access$200
com.actionbarsherlock.internal.widget.IcsAdapterView$1 -> com.actionbarsherlock.internal.widget.IcsAdapterView$1:
com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterContextMenuInfo -> com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterContextMenuInfo:
    android.view.View targetView -> targetView
    int position -> position
    long id -> id
com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterDataSetObserver -> com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterDataSetObserver:
    android.os.Parcelable mInstanceState -> mInstanceState
    com.actionbarsherlock.internal.widget.IcsAdapterView this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
    void clearSavedState() -> clearSavedState
com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener -> com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener:
    boolean onItemLongClick(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> onItemLongClick
com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener -> com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener:
    void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(com.actionbarsherlock.internal.widget.IcsAdapterView) -> onNothingSelected
com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier -> com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier:
    com.actionbarsherlock.internal.widget.IcsAdapterView this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.widget.IcsColorDrawable -> com.actionbarsherlock.internal.widget.IcsColorDrawable:
    int color -> color
    android.graphics.Paint paint -> paint
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
com.actionbarsherlock.internal.widget.IcsLinearLayout -> com.actionbarsherlock.internal.widget.IcsLinearLayout:
    int[] R_styleable_LinearLayout -> R_styleable_LinearLayout
    int LinearLayout_divider -> LinearLayout_divider
    int LinearLayout_showDividers -> LinearLayout_showDividers
    int LinearLayout_dividerPadding -> LinearLayout_dividerPadding
    int SHOW_DIVIDER_NONE -> SHOW_DIVIDER_NONE
    int SHOW_DIVIDER_BEGINNING -> SHOW_DIVIDER_BEGINNING
    int SHOW_DIVIDER_MIDDLE -> SHOW_DIVIDER_MIDDLE
    int SHOW_DIVIDER_END -> SHOW_DIVIDER_END
    android.graphics.drawable.Drawable mDivider -> mDivider
    int mDividerWidth -> mDividerWidth
    int mDividerHeight -> mDividerHeight
    int mShowDividers -> mShowDividers
    int mDividerPadding -> mDividerPadding
    void setShowDividers(int) -> setShowDividers
    int getShowDividers() -> getShowDividers
    void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    void setDividerPadding(int) -> setDividerPadding
    int getDividerPadding() -> getDividerPadding
    int getDividerWidth() -> getDividerWidth
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawDividersVertical(android.graphics.Canvas) -> drawDividersVertical
    void drawDividersHorizontal(android.graphics.Canvas) -> drawDividersHorizontal
    void drawHorizontalDivider(android.graphics.Canvas,int) -> drawHorizontalDivider
    void drawVerticalDivider(android.graphics.Canvas,int) -> drawVerticalDivider
    boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
com.actionbarsherlock.internal.widget.IcsListPopupWindow -> com.actionbarsherlock.internal.widget.IcsListPopupWindow:
    int EXPAND_LIST_TIMEOUT -> EXPAND_LIST_TIMEOUT
    android.content.Context mContext -> mContext
    com.actionbarsherlock.internal.widget.PopupWindowCompat mPopup -> mPopup
    android.widget.ListAdapter mAdapter -> mAdapter
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView mDropDownList -> mDropDownList
    int mDropDownHeight -> mDropDownHeight
    int mDropDownWidth -> mDropDownWidth
    int mDropDownHorizontalOffset -> mDropDownHorizontalOffset
    int mDropDownVerticalOffset -> mDropDownVerticalOffset
    boolean mDropDownVerticalOffsetSet -> mDropDownVerticalOffsetSet
    int mListItemExpandMaximum -> mListItemExpandMaximum
    android.view.View mPromptView -> mPromptView
    int mPromptPosition -> mPromptPosition
    android.database.DataSetObserver mObserver -> mObserver
    android.view.View mDropDownAnchorView -> mDropDownAnchorView
    android.graphics.drawable.Drawable mDropDownListHighlight -> mDropDownListHighlight
    android.widget.AdapterView$OnItemClickListener mItemClickListener -> mItemClickListener
    android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener -> mItemSelectedListener
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable mResizePopupRunnable -> mResizePopupRunnable
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor mTouchInterceptor -> mTouchInterceptor
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener mScrollListener -> mScrollListener
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider mHideSelector -> mHideSelector
    android.os.Handler mHandler -> mHandler
    android.graphics.Rect mTempRect -> mTempRect
    boolean mModal -> mModal
    int POSITION_PROMPT_ABOVE -> POSITION_PROMPT_ABOVE
    int POSITION_PROMPT_BELOW -> POSITION_PROMPT_BELOW
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setPromptPosition(int) -> setPromptPosition
    void setModal(boolean) -> setModal
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setAnchorView(android.view.View) -> setAnchorView
    void setHorizontalOffset(int) -> setHorizontalOffset
    void setVerticalOffset(int) -> setVerticalOffset
    void setContentWidth(int) -> setContentWidth
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void show() -> show
    void dismiss() -> dismiss
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    void setInputMethodMode(int) -> setInputMethodMode
    void setSelection(int) -> setSelection
    void clearListSelection() -> clearListSelection
    boolean isShowing() -> isShowing
    boolean isInputMethodNotNeeded() -> isInputMethodNotNeeded
    android.widget.ListView getListView() -> getListView
    int buildDropDown() -> buildDropDown
    int getMaxAvailableHeight(android.view.View,int,boolean) -> getMaxAvailableHeight
    int measureHeightOfChildren(int,int,int,int,int) -> measureHeightOfChildren
    void measureScrapChild(android.view.View,int,int) -> measureScrapChild
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView access$600(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> access$600
    int access$700(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> access$700
    com.actionbarsherlock.internal.widget.PopupWindowCompat access$800(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> access$800
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable access$900(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> access$900
    android.os.Handler access$1000(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> access$1000
    boolean access$1100(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> access$1100
com.actionbarsherlock.internal.widget.IcsListPopupWindow$1 -> com.actionbarsherlock.internal.widget.IcsListPopupWindow$1:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> this$0
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView -> com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView:
    boolean mListSelectionHidden -> mListSelectionHidden
    boolean mHijackFocus -> mHijackFocus
    boolean isInTouchMode() -> isInTouchMode
    boolean hasWindowFocus() -> hasWindowFocus
    boolean isFocused() -> isFocused
    boolean hasFocus() -> hasFocus
    boolean access$502(com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView,boolean) -> access$502
com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider -> com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupDataSetObserver -> com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupDataSetObserver:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener -> com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> this$0
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor -> com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> this$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable -> com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.widget.IcsProgressBar -> com.actionbarsherlock.internal.widget.IcsProgressBar:
    boolean IS_HONEYCOMB -> IS_HONEYCOMB
    int MAX_LEVEL -> MAX_LEVEL
    int ANIMATION_RESOLUTION -> ANIMATION_RESOLUTION
    int TIMEOUT_SEND_ACCESSIBILITY_EVENT -> TIMEOUT_SEND_ACCESSIBILITY_EVENT
    int[] ProgressBar -> ProgressBar
    int ProgressBar_maxWidth -> ProgressBar_maxWidth
    int ProgressBar_maxHeight -> ProgressBar_maxHeight
    int ProgressBar_max -> ProgressBar_max
    int ProgressBar_progress -> ProgressBar_progress
    int ProgressBar_secondaryProgress -> ProgressBar_secondaryProgress
    int ProgressBar_indeterminate -> ProgressBar_indeterminate
    int ProgressBar_indeterminateOnly -> ProgressBar_indeterminateOnly
    int ProgressBar_indeterminateDrawable -> ProgressBar_indeterminateDrawable
    int ProgressBar_progressDrawable -> ProgressBar_progressDrawable
    int ProgressBar_indeterminateDuration -> ProgressBar_indeterminateDuration
    int ProgressBar_indeterminateBehavior -> ProgressBar_indeterminateBehavior
    int ProgressBar_minWidth -> ProgressBar_minWidth
    int ProgressBar_minHeight -> ProgressBar_minHeight
    int ProgressBar_interpolator -> ProgressBar_interpolator
    int ProgressBar_animationResolution -> ProgressBar_animationResolution
    int mMinWidth -> mMinWidth
    int mMaxWidth -> mMaxWidth
    int mMinHeight -> mMinHeight
    int mMaxHeight -> mMaxHeight
    int mProgress -> mProgress
    int mSecondaryProgress -> mSecondaryProgress
    int mMax -> mMax
    int mBehavior -> mBehavior
    int mDuration -> mDuration
    boolean mIndeterminate -> mIndeterminate
    boolean mOnlyIndeterminate -> mOnlyIndeterminate
    android.view.animation.Transformation mTransformation -> mTransformation
    android.view.animation.AlphaAnimation mAnimation -> mAnimation
    android.graphics.drawable.Drawable mIndeterminateDrawable -> mIndeterminateDrawable
    int mIndeterminateRealLeft -> mIndeterminateRealLeft
    int mIndeterminateRealTop -> mIndeterminateRealTop
    android.graphics.drawable.Drawable mProgressDrawable -> mProgressDrawable
    android.graphics.drawable.Drawable mCurrentDrawable -> mCurrentDrawable
    android.graphics.Bitmap mSampleTile -> mSampleTile
    boolean mNoInvalidate -> mNoInvalidate
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable mRefreshProgressRunnable -> mRefreshProgressRunnable
    long mUiThreadId -> mUiThreadId
    boolean mShouldStartAnimationDrawable -> mShouldStartAnimationDrawable
    long mLastDrawTime -> mLastDrawTime
    boolean mInDrawing -> mInDrawing
    int mAnimationResolution -> mAnimationResolution
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> mAccessibilityManager
    com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender mAccessibilityEventSender -> mAccessibilityEventSender
    android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> tileify
    android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> tileifyIndeterminate
    void initProgressBar() -> initProgressBar
    boolean isIndeterminate() -> isIndeterminate
    void setIndeterminate(boolean) -> setIndeterminate
    android.graphics.drawable.Drawable getIndeterminateDrawable() -> getIndeterminateDrawable
    void setIndeterminateDrawable(android.graphics.drawable.Drawable) -> setIndeterminateDrawable
    android.graphics.drawable.Drawable getProgressDrawable() -> getProgressDrawable
    void setProgressDrawable(android.graphics.drawable.Drawable) -> setProgressDrawable
    android.graphics.drawable.Drawable getCurrentDrawable() -> getCurrentDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void postInvalidate() -> postInvalidate
    void doRefreshProgress(int,int,boolean,boolean) -> doRefreshProgress
    void onProgressRefresh(float,boolean) -> onProgressRefresh
    void refreshProgress(int,int,boolean) -> refreshProgress
    void setProgress(int) -> setProgress
    void setProgress(int,boolean) -> setProgress
    void setSecondaryProgress(int) -> setSecondaryProgress
    int getProgress() -> getProgress
    int getSecondaryProgress() -> getSecondaryProgress
    int getMax() -> getMax
    void setMax(int) -> setMax
    void incrementProgressBy(int) -> incrementProgressBy
    void incrementSecondaryProgressBy(int) -> incrementSecondaryProgressBy
    void startAnimation() -> startAnimation
    void stopAnimation() -> stopAnimation
    void setInterpolator(android.content.Context,int) -> setInterpolator
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setVisibility(int) -> setVisibility
    void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void updateDrawableBounds(int,int) -> updateDrawableBounds
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void drawableStateChanged() -> drawableStateChanged
    void updateDrawableState() -> updateDrawableState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void scheduleAccessibilityEventSender() -> scheduleAccessibilityEventSender
    void access$000(com.actionbarsherlock.internal.widget.IcsProgressBar,int,int,boolean,boolean) -> access$000
    com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable access$102(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable) -> access$102
com.actionbarsherlock.internal.widget.IcsProgressBar$1 -> com.actionbarsherlock.internal.widget.IcsProgressBar$1:
com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender -> com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender:
    com.actionbarsherlock.internal.widget.IcsProgressBar this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable -> com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable:
    int mId -> mId
    int mProgress -> mProgress
    boolean mFromUser -> mFromUser
    com.actionbarsherlock.internal.widget.IcsProgressBar this$0 -> this$0
    void run() -> run
    void setup(int,int,boolean) -> setup
com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState -> com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState:
    int progress -> progress
    int secondaryProgress -> secondaryProgress
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState$1 -> com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState$1:
    com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.actionbarsherlock.internal.widget.IcsSpinner -> com.actionbarsherlock.internal.widget.IcsSpinner:
    int MAX_ITEMS_MEASURED -> MAX_ITEMS_MEASURED
    int MODE_DROPDOWN -> MODE_DROPDOWN
    com.actionbarsherlock.internal.widget.IcsSpinner$SpinnerPopup mPopup -> mPopup
    com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter mTempAdapter -> mTempAdapter
    int mDropDownWidth -> mDropDownWidth
    int mGravity -> mGravity
    boolean mDisableChildrenWhenDisabled -> mDisableChildrenWhenDisabled
    android.graphics.Rect mTempRect -> mTempRect
    void setEnabled(boolean) -> setEnabled
    void setGravity(int) -> setGravity
    void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    int getBaseline() -> getBaseline
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void layout(int,boolean) -> layout
    android.view.View makeAndAddView(int) -> makeAndAddView
    void setUpChild(android.view.View) -> setUpChild
    boolean performClick() -> performClick
    void onClick(android.content.DialogInterface,int) -> onClick
    void setPrompt(java.lang.CharSequence) -> setPrompt
    void setPromptId(int) -> setPromptId
    java.lang.CharSequence getPrompt() -> getPrompt
    int measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> measureContentWidth
    void setAdapter(android.widget.Adapter) -> setAdapter
    android.graphics.Rect access$000(com.actionbarsherlock.internal.widget.IcsSpinner) -> access$000
com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter -> com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter:
    android.widget.SpinnerAdapter mAdapter -> mAdapter
    android.widget.ListAdapter mListAdapter -> mListAdapter
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    boolean hasStableIds() -> hasStableIds
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    boolean isEmpty() -> isEmpty
com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup -> com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup:
    java.lang.CharSequence mHintText -> mHintText
    android.widget.ListAdapter mAdapter -> mAdapter
    com.actionbarsherlock.internal.widget.IcsSpinner this$0 -> this$0
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    java.lang.CharSequence getHintText() -> getHintText
    void setPromptText(java.lang.CharSequence) -> setPromptText
    void show() -> show
com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup$1 -> com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup$1:
    com.actionbarsherlock.internal.widget.IcsSpinner val$this$0 -> val$this$0
    com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup this$1 -> this$1
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.actionbarsherlock.internal.widget.IcsSpinner$SpinnerPopup -> com.actionbarsherlock.internal.widget.IcsSpinner$SpinnerPopup:
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void show() -> show
    void dismiss() -> dismiss
    boolean isShowing() -> isShowing
    void setPromptText(java.lang.CharSequence) -> setPromptText
    java.lang.CharSequence getHintText() -> getHintText
com.actionbarsherlock.internal.widget.IcsToast -> com.actionbarsherlock.internal.widget.IcsToast:
    int LENGTH_LONG -> LENGTH_LONG
    int LENGTH_SHORT -> LENGTH_SHORT
    java.lang.String TAG -> TAG
    android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int) -> makeText
    android.widget.Toast makeText(android.content.Context,int,int) -> makeText
    void setText(java.lang.CharSequence) -> setText
com.actionbarsherlock.internal.widget.IcsView -> com.actionbarsherlock.internal.widget.IcsView:
    int getMeasuredStateInt(android.view.View) -> getMeasuredStateInt
com.actionbarsherlock.internal.widget.PopupWindowCompat -> com.actionbarsherlock.internal.widget.PopupWindowCompat:
    java.lang.reflect.Field superListenerField -> superListenerField
    android.view.ViewTreeObserver$OnScrollChangedListener NOP -> NOP
    android.view.ViewTreeObserver$OnScrollChangedListener mSuperScrollListener -> mSuperScrollListener
    android.view.ViewTreeObserver mViewTreeObserver -> mViewTreeObserver
    void init() -> init
    void unregisterListener() -> unregisterListener
    void registerListener(android.view.View) -> registerListener
    void showAsDropDown(android.view.View,int,int) -> showAsDropDown
    void update(android.view.View,int,int,int,int) -> update
    void update(android.view.View,int,int) -> update
    void showAtLocation(android.view.View,int,int,int) -> showAtLocation
    void dismiss() -> dismiss
com.actionbarsherlock.internal.widget.PopupWindowCompat$1 -> com.actionbarsherlock.internal.widget.PopupWindowCompat$1:
    void onScrollChanged() -> onScrollChanged
com.actionbarsherlock.internal.widget.ScrollingTabContainerView -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView:
    java.lang.Runnable mTabSelector -> mTabSelector
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener mTabClickListener -> mTabClickListener
    com.actionbarsherlock.internal.widget.IcsLinearLayout mTabLayout -> mTabLayout
    com.actionbarsherlock.internal.widget.IcsSpinner mTabSpinner -> mTabSpinner
    boolean mAllowCollapse -> mAllowCollapse
    android.view.LayoutInflater mInflater -> mInflater
    int mMaxTabWidth -> mMaxTabWidth
    int mContentHeight -> mContentHeight
    int mSelectedTabIndex -> mSelectedTabIndex
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mVisibilityAnim -> mVisibilityAnim
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener mVisAnimListener -> mVisAnimListener
    android.view.animation.Interpolator sAlphaInterpolator -> sAlphaInterpolator
    int FADE_DURATION -> FADE_DURATION
    void onMeasure(int,int) -> onMeasure
    boolean isCollapsed() -> isCollapsed
    void setAllowCollapse(boolean) -> setAllowCollapse
    void performCollapse() -> performCollapse
    boolean performExpand() -> performExpand
    void setTabSelected(int) -> setTabSelected
    void setContentHeight(int) -> setContentHeight
    com.actionbarsherlock.internal.widget.IcsLinearLayout createTabLayout() -> createTabLayout
    com.actionbarsherlock.internal.widget.IcsSpinner createSpinner() -> createSpinner
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void animateToVisibility(int) -> animateToVisibility
    void animateToTab(int) -> animateToTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView createTabView(com.actionbarsherlock.app.ActionBar$Tab,boolean) -> createTabView
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean) -> addTab
    void updateTab(int) -> updateTab
    void removeTabAt(int) -> removeTabAt
    void removeAllTabs() -> removeAllTabs
    void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(com.actionbarsherlock.internal.widget.IcsAdapterView) -> onNothingSelected
    com.actionbarsherlock.internal.widget.IcsLinearLayout access$200(com.actionbarsherlock.internal.widget.ScrollingTabContainerView) -> access$200
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView access$300(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.app.ActionBar$Tab,boolean) -> access$300
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$1 -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView$1:
    android.view.View val$tabView -> val$tabView
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> this$0
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView mParent -> mParent
    com.actionbarsherlock.app.ActionBar$Tab mTab -> mTab
    com.actionbarsherlock.internal.widget.CapitalizingTextView mTextView -> mTextView
    android.widget.ImageView mIconView -> mIconView
    android.view.View mCustomView -> mCustomView
    void init(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.app.ActionBar$Tab,boolean) -> init
    void bindTab(com.actionbarsherlock.app.ActionBar$Tab) -> bindTab
    void onMeasure(int,int) -> onMeasure
    void update() -> update
    com.actionbarsherlock.app.ActionBar$Tab getTab() -> getTab
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener:
    boolean mCanceled -> mCanceled
    int mFinalVisibility -> mFinalVisibility
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> this$0
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener withFinalVisibility(int) -> withFinalVisibility
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
com.actionbarsherlock.internal.widget.TabsLinearLayout -> com.actionbarsherlock.internal.widget.TabsLinearLayout:
    int[] R_styleable_LinearLayout -> R_styleable_LinearLayout
    int LinearLayout_measureWithLargestChild -> LinearLayout_measureWithLargestChild
    boolean mUseLargestChild -> mUseLargestChild
    boolean isMeasureWithLargestChildEnabled() -> isMeasureWithLargestChildEnabled
    void setMeasureWithLargestChildEnabled(boolean) -> setMeasureWithLargestChildEnabled
    void onMeasure(int,int) -> onMeasure
    void useLargestChildHorizontal() -> useLargestChildHorizontal
com.actionbarsherlock.view.ActionMode -> com.actionbarsherlock.view.ActionMode:
    java.lang.Object mTag -> mTag
    void setTag(java.lang.Object) -> setTag
    java.lang.Object getTag() -> getTag
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setSubtitle(int) -> setSubtitle
    void setCustomView(android.view.View) -> setCustomView
    void invalidate() -> invalidate
    void finish() -> finish
    com.actionbarsherlock.view.Menu getMenu() -> getMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> getMenuInflater
    boolean isUiFocusable() -> isUiFocusable
com.actionbarsherlock.view.ActionMode$Callback -> com.actionbarsherlock.view.ActionMode$Callback:
    boolean onCreateActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(com.actionbarsherlock.view.ActionMode) -> onDestroyActionMode
com.actionbarsherlock.view.ActionProvider -> com.actionbarsherlock.view.ActionProvider:
    com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> mSubUiVisibilityListener
    android.view.View onCreateActionView() -> onCreateActionView
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(com.actionbarsherlock.view.SubMenu) -> onPrepareSubMenu
    void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
    void setSubUiVisibilityListener(com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener -> com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener:
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
com.actionbarsherlock.view.CollapsibleActionView -> com.actionbarsherlock.view.CollapsibleActionView:
    void onActionViewExpanded() -> onActionViewExpanded
    void onActionViewCollapsed() -> onActionViewCollapsed
com.actionbarsherlock.view.Menu -> com.actionbarsherlock.view.Menu:
    int USER_MASK -> USER_MASK
    int USER_SHIFT -> USER_SHIFT
    int CATEGORY_MASK -> CATEGORY_MASK
    int CATEGORY_SHIFT -> CATEGORY_SHIFT
    int NONE -> NONE
    int FIRST -> FIRST
    int CATEGORY_CONTAINER -> CATEGORY_CONTAINER
    int CATEGORY_SYSTEM -> CATEGORY_SYSTEM
    int CATEGORY_SECONDARY -> CATEGORY_SECONDARY
    int CATEGORY_ALTERNATIVE -> CATEGORY_ALTERNATIVE
    int FLAG_APPEND_TO_GROUP -> FLAG_APPEND_TO_GROUP
    int FLAG_PERFORM_NO_CLOSE -> FLAG_PERFORM_NO_CLOSE
    int FLAG_ALWAYS_PERFORM_CLOSE -> FLAG_ALWAYS_PERFORM_CLOSE
    com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,int) -> add
    com.actionbarsherlock.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void clear() -> clear
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    com.actionbarsherlock.view.MenuItem findItem(int) -> findItem
    int size() -> size
    com.actionbarsherlock.view.MenuItem getItem(int) -> getItem
    void close() -> close
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    void setQwertyMode(boolean) -> setQwertyMode
com.actionbarsherlock.view.MenuInflater -> com.actionbarsherlock.view.MenuInflater:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String XML_MENU -> XML_MENU
    java.lang.String XML_GROUP -> XML_GROUP
    java.lang.String XML_ITEM -> XML_ITEM
    int NO_ID -> NO_ID
    java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE -> ACTION_VIEW_CONSTRUCTOR_SIGNATURE
    java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE -> ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE
    java.lang.Object[] mActionViewConstructorArguments -> mActionViewConstructorArguments
    java.lang.Object[] mActionProviderConstructorArguments -> mActionProviderConstructorArguments
    android.content.Context mContext -> mContext
    java.lang.Object mRealOwner -> mRealOwner
    void inflate(int,com.actionbarsherlock.view.Menu) -> inflate
    void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,com.actionbarsherlock.view.Menu) -> parseMenu
    android.content.Context access$100(com.actionbarsherlock.view.MenuInflater) -> access$100
    java.lang.Class[] access$200() -> access$200
    java.lang.Object[] access$300(com.actionbarsherlock.view.MenuInflater) -> access$300
    java.lang.Object access$400(com.actionbarsherlock.view.MenuInflater) -> access$400
    java.lang.Class[] access$500() -> access$500
    java.lang.Object[] access$600(com.actionbarsherlock.view.MenuInflater) -> access$600
com.actionbarsherlock.view.MenuInflater$InflatedOnMenuItemClickListener -> com.actionbarsherlock.view.MenuInflater$InflatedOnMenuItemClickListener:
    java.lang.Class[] PARAM_TYPES -> PARAM_TYPES
    java.lang.Object mRealOwner -> mRealOwner
    java.lang.reflect.Method mMethod -> mMethod
    boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem) -> onMenuItemClick
com.actionbarsherlock.view.MenuInflater$MenuState -> com.actionbarsherlock.view.MenuInflater$MenuState:
    com.actionbarsherlock.view.Menu menu -> menu
    int groupId -> groupId
    int groupCategory -> groupCategory
    int groupOrder -> groupOrder
    int groupCheckable -> groupCheckable
    boolean groupVisible -> groupVisible
    boolean groupEnabled -> groupEnabled
    boolean itemAdded -> itemAdded
    int itemId -> itemId
    int itemCategoryOrder -> itemCategoryOrder
    java.lang.CharSequence itemTitle -> itemTitle
    java.lang.CharSequence itemTitleCondensed -> itemTitleCondensed
    int itemIconResId -> itemIconResId
    char itemAlphabeticShortcut -> itemAlphabeticShortcut
    char itemNumericShortcut -> itemNumericShortcut
    int itemCheckable -> itemCheckable
    boolean itemChecked -> itemChecked
    boolean itemVisible -> itemVisible
    boolean itemEnabled -> itemEnabled
    int itemShowAsAction -> itemShowAsAction
    int itemActionViewLayout -> itemActionViewLayout
    java.lang.String itemActionViewClassName -> itemActionViewClassName
    java.lang.String itemActionProviderClassName -> itemActionProviderClassName
    java.lang.String itemListenerMethodName -> itemListenerMethodName
    com.actionbarsherlock.view.ActionProvider itemActionProvider -> itemActionProvider
    int defaultGroupId -> defaultGroupId
    int defaultItemId -> defaultItemId
    int defaultItemCategory -> defaultItemCategory
    int defaultItemOrder -> defaultItemOrder
    int defaultItemCheckable -> defaultItemCheckable
    boolean defaultItemChecked -> defaultItemChecked
    boolean defaultItemVisible -> defaultItemVisible
    boolean defaultItemEnabled -> defaultItemEnabled
    com.actionbarsherlock.view.MenuInflater this$0 -> this$0
    void resetGroup() -> resetGroup
    void readGroup(android.util.AttributeSet) -> readGroup
    void readItem(android.util.AttributeSet) -> readItem
    char getShortcut(java.lang.String) -> getShortcut
    void setItem(com.actionbarsherlock.view.MenuItem) -> setItem
    void addItem() -> addItem
    com.actionbarsherlock.view.SubMenu addSubMenuItem() -> addSubMenuItem
    boolean hasAddedItem() -> hasAddedItem
    java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> newInstance
    com.actionbarsherlock.view.ActionProvider access$000(com.actionbarsherlock.view.MenuInflater$MenuState) -> access$000
com.actionbarsherlock.view.MenuItem -> com.actionbarsherlock.view.MenuItem:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    int getItemId() -> getItemId
    int getGroupId() -> getGroupId
    int getOrder() -> getOrder
    com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitle() -> getTitle
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem setIcon(int) -> setIcon
    android.graphics.drawable.Drawable getIcon() -> getIcon
    com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.content.Intent getIntent() -> getIntent
    com.actionbarsherlock.view.MenuItem setShortcut(char,char) -> setShortcut
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    char getNumericShortcut() -> getNumericShortcut
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> setCheckable
    boolean isCheckable() -> isCheckable
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> setChecked
    boolean isChecked() -> isChecked
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    boolean hasSubMenu() -> hasSubMenu
    com.actionbarsherlock.view.SubMenu getSubMenu() -> getSubMenu
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void setShowAsAction(int) -> setShowAsAction
    com.actionbarsherlock.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> setActionView
    com.actionbarsherlock.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> setActionProvider
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> getActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
com.actionbarsherlock.view.MenuItem$OnActionExpandListener -> com.actionbarsherlock.view.MenuItem$OnActionExpandListener:
    boolean onMenuItemActionExpand(com.actionbarsherlock.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(com.actionbarsherlock.view.MenuItem) -> onMenuItemActionCollapse
com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener -> com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener:
    boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem) -> onMenuItemClick
com.actionbarsherlock.view.SubMenu -> com.actionbarsherlock.view.SubMenu:
    com.actionbarsherlock.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    void clearHeader() -> clearHeader
    com.actionbarsherlock.view.SubMenu setIcon(int) -> setIcon
    com.actionbarsherlock.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem getItem() -> getItem
com.actionbarsherlock.view.Window -> com.actionbarsherlock.view.Window:
    long FEATURE_ACTION_BAR -> FEATURE_ACTION_BAR
    long FEATURE_ACTION_BAR_OVERLAY -> FEATURE_ACTION_BAR_OVERLAY
    long FEATURE_ACTION_MODE_OVERLAY -> FEATURE_ACTION_MODE_OVERLAY
    long FEATURE_NO_TITLE -> FEATURE_NO_TITLE
    long FEATURE_PROGRESS -> FEATURE_PROGRESS
    long FEATURE_INDETERMINATE_PROGRESS -> FEATURE_INDETERMINATE_PROGRESS
com.actionbarsherlock.view.Window$Callback -> com.actionbarsherlock.view.Window$Callback:
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
com.actionbarsherlock.widget.ActivityChooserModel -> com.actionbarsherlock.widget.ActivityChooserModel:
    boolean DEBUG -> DEBUG
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String TAG_HISTORICAL_RECORDS -> TAG_HISTORICAL_RECORDS
    java.lang.String TAG_HISTORICAL_RECORD -> TAG_HISTORICAL_RECORD
    java.lang.String ATTRIBUTE_ACTIVITY -> ATTRIBUTE_ACTIVITY
    java.lang.String ATTRIBUTE_TIME -> ATTRIBUTE_TIME
    java.lang.String ATTRIBUTE_WEIGHT -> ATTRIBUTE_WEIGHT
    java.lang.String DEFAULT_HISTORY_FILE_NAME -> DEFAULT_HISTORY_FILE_NAME
    int DEFAULT_HISTORY_MAX_LENGTH -> DEFAULT_HISTORY_MAX_LENGTH
    int DEFAULT_ACTIVITY_INFLATION -> DEFAULT_ACTIVITY_INFLATION
    float DEFAULT_HISTORICAL_RECORD_WEIGHT -> DEFAULT_HISTORICAL_RECORD_WEIGHT
    java.lang.String HISTORY_FILE_EXTENSION -> HISTORY_FILE_EXTENSION
    int INVALID_INDEX -> INVALID_INDEX
    java.lang.Object sRegistryLock -> sRegistryLock
    java.util.Map sDataModelRegistry -> sDataModelRegistry
    java.lang.Object mInstanceLock -> mInstanceLock
    java.util.List mActivites -> mActivites
    java.util.List mHistoricalRecords -> mHistoricalRecords
    android.content.Context mContext -> mContext
    java.lang.String mHistoryFileName -> mHistoryFileName
    android.content.Intent mIntent -> mIntent
    com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter mActivitySorter -> mActivitySorter
    int mHistoryMaxSize -> mHistoryMaxSize
    boolean mCanReadHistoricalData -> mCanReadHistoricalData
    boolean mReadShareHistoryCalled -> mReadShareHistoryCalled
    boolean mHistoricalRecordsChanged -> mHistoricalRecordsChanged
    android.os.Handler mHandler -> mHandler
    com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy -> mActivityChoserModelPolicy
    java.util.concurrent.Executor SERIAL_EXECUTOR -> SERIAL_EXECUTOR
    com.actionbarsherlock.widget.ActivityChooserModel get(android.content.Context,java.lang.String) -> get
    void setIntent(android.content.Intent) -> setIntent
    android.content.Intent getIntent() -> getIntent
    int getActivityCount() -> getActivityCount
    android.content.pm.ResolveInfo getActivity(int) -> getActivity
    int getActivityIndex(android.content.pm.ResolveInfo) -> getActivityIndex
    android.content.Intent chooseActivity(int) -> chooseActivity
    void setOnChooseActivityListener(com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener) -> setOnChooseActivityListener
    android.content.pm.ResolveInfo getDefaultActivity() -> getDefaultActivity
    void setDefaultActivity(int) -> setDefaultActivity
    void readHistoricalData() -> readHistoricalData
    void persistHistoricalData() -> persistHistoricalData
    void setActivitySorter(com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter) -> setActivitySorter
    void sortActivities() -> sortActivities
    void setHistoryMaxSize(int) -> setHistoryMaxSize
    int getHistoryMaxSize() -> getHistoryMaxSize
    int getHistorySize() -> getHistorySize
    boolean addHisoricalRecord(com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord) -> addHisoricalRecord
    void pruneExcessiveHistoricalRecordsLocked() -> pruneExcessiveHistoricalRecordsLocked
    void loadActivitiesLocked() -> loadActivitiesLocked
    java.lang.String access$300(com.actionbarsherlock.widget.ActivityChooserModel) -> access$300
    android.content.Context access$400(com.actionbarsherlock.widget.ActivityChooserModel) -> access$400
    java.lang.Object access$500(com.actionbarsherlock.widget.ActivityChooserModel) -> access$500
    java.util.List access$600(com.actionbarsherlock.widget.ActivityChooserModel) -> access$600
    boolean access$702(com.actionbarsherlock.widget.ActivityChooserModel,boolean) -> access$702
    void access$800(com.actionbarsherlock.widget.ActivityChooserModel) -> access$800
    void access$900(com.actionbarsherlock.widget.ActivityChooserModel) -> access$900
    android.os.Handler access$1000(com.actionbarsherlock.widget.ActivityChooserModel) -> access$1000
    java.lang.String access$1100() -> access$1100
com.actionbarsherlock.widget.ActivityChooserModel$1 -> com.actionbarsherlock.widget.ActivityChooserModel$1:
com.actionbarsherlock.widget.ActivityChooserModel$ActivityChooserModelClient -> com.actionbarsherlock.widget.ActivityChooserModel$ActivityChooserModelClient:
    void setActivityChooserModel(com.actionbarsherlock.widget.ActivityChooserModel) -> setActivityChooserModel
com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo -> com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo:
    android.content.pm.ResolveInfo resolveInfo -> resolveInfo
    float weight -> weight
    com.actionbarsherlock.widget.ActivityChooserModel this$0 -> this$0
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int compareTo(com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo) -> compareTo
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter -> com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter:
    void sort(android.content.Intent,java.util.List,java.util.List) -> sort
com.actionbarsherlock.widget.ActivityChooserModel$DefaultSorter -> com.actionbarsherlock.widget.ActivityChooserModel$DefaultSorter:
    float WEIGHT_DECAY_COEFFICIENT -> WEIGHT_DECAY_COEFFICIENT
    java.util.Map mPackageNameToActivityMap -> mPackageNameToActivityMap
    com.actionbarsherlock.widget.ActivityChooserModel this$0 -> this$0
    void sort(android.content.Intent,java.util.List,java.util.List) -> sort
com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord -> com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord:
    android.content.ComponentName activity -> activity
    long time -> time
    float weight -> weight
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader -> com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader:
    com.actionbarsherlock.widget.ActivityChooserModel this$0 -> this$0
    void run() -> run
com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader$1 -> com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader$1:
    com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader this$1 -> this$1
    void run() -> run
com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister -> com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister:
    com.actionbarsherlock.widget.ActivityChooserModel this$0 -> this$0
    void run() -> run
com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener -> com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener:
    boolean onChooseActivity(com.actionbarsherlock.widget.ActivityChooserModel,android.content.Intent) -> onChooseActivity
com.actionbarsherlock.widget.ActivityChooserView -> com.actionbarsherlock.widget.ActivityChooserView:
    com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter mAdapter -> mAdapter
    com.actionbarsherlock.widget.ActivityChooserView$Callbacks mCallbacks -> mCallbacks
    com.actionbarsherlock.internal.widget.IcsLinearLayout mActivityChooserContent -> mActivityChooserContent
    android.graphics.drawable.Drawable mActivityChooserContentBackground -> mActivityChooserContentBackground
    android.widget.FrameLayout mExpandActivityOverflowButton -> mExpandActivityOverflowButton
    android.widget.ImageView mExpandActivityOverflowButtonImage -> mExpandActivityOverflowButtonImage
    android.widget.FrameLayout mDefaultActivityButton -> mDefaultActivityButton
    android.widget.ImageView mDefaultActivityButtonImage -> mDefaultActivityButtonImage
    int mListPopupMaxWidth -> mListPopupMaxWidth
    com.actionbarsherlock.view.ActionProvider mProvider -> mProvider
    android.database.DataSetObserver mModelDataSetOberver -> mModelDataSetOberver
    android.view.ViewTreeObserver$OnGlobalLayoutListener mOnGlobalLayoutListener -> mOnGlobalLayoutListener
    com.actionbarsherlock.internal.widget.IcsListPopupWindow mListPopupWindow -> mListPopupWindow
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> mOnDismissListener
    boolean mIsSelectingDefaultActivity -> mIsSelectingDefaultActivity
    int mInitialActivityCount -> mInitialActivityCount
    boolean mIsAttachedToWindow -> mIsAttachedToWindow
    int mDefaultActionButtonContentDescription -> mDefaultActionButtonContentDescription
    android.content.Context mContext -> mContext
    boolean IS_HONEYCOMB -> IS_HONEYCOMB
    void setActivityChooserModel(com.actionbarsherlock.widget.ActivityChooserModel) -> setActivityChooserModel
    void setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable) -> setExpandActivityOverflowButtonDrawable
    void setExpandActivityOverflowButtonContentDescription(int) -> setExpandActivityOverflowButtonContentDescription
    void setProvider(com.actionbarsherlock.view.ActionProvider) -> setProvider
    boolean showPopup() -> showPopup
    void showPopupUnchecked(int) -> showPopupUnchecked
    boolean dismissPopup() -> dismissPopup
    boolean isShowingPopup() -> isShowingPopup
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    com.actionbarsherlock.widget.ActivityChooserModel getDataModel() -> getDataModel
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    void setInitialActivityCount(int) -> setInitialActivityCount
    void setDefaultActionButtonContentDescription(int) -> setDefaultActionButtonContentDescription
    com.actionbarsherlock.internal.widget.IcsListPopupWindow getListPopupWindow() -> getListPopupWindow
    void updateAppearance() -> updateAppearance
    com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter access$000(com.actionbarsherlock.widget.ActivityChooserView) -> access$000
    com.actionbarsherlock.internal.widget.IcsListPopupWindow access$100(com.actionbarsherlock.widget.ActivityChooserView) -> access$100
    void access$400(com.actionbarsherlock.widget.ActivityChooserView) -> access$400
    void access$500(com.actionbarsherlock.widget.ActivityChooserView,int) -> access$500
    boolean access$600(com.actionbarsherlock.widget.ActivityChooserView) -> access$600
    android.content.Context access$700(com.actionbarsherlock.widget.ActivityChooserView) -> access$700
    android.widget.FrameLayout access$800(com.actionbarsherlock.widget.ActivityChooserView) -> access$800
    android.widget.FrameLayout access$900(com.actionbarsherlock.widget.ActivityChooserView) -> access$900
    boolean access$602(com.actionbarsherlock.widget.ActivityChooserView,boolean) -> access$602
    int access$1000(com.actionbarsherlock.widget.ActivityChooserView) -> access$1000
    android.widget.PopupWindow$OnDismissListener access$1100(com.actionbarsherlock.widget.ActivityChooserView) -> access$1100
    android.database.DataSetObserver access$1200(com.actionbarsherlock.widget.ActivityChooserView) -> access$1200
    boolean access$1300() -> access$1300
com.actionbarsherlock.widget.ActivityChooserView$1 -> com.actionbarsherlock.widget.ActivityChooserView$1:
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.actionbarsherlock.widget.ActivityChooserView$2 -> com.actionbarsherlock.widget.ActivityChooserView$2:
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> this$0
    void onGlobalLayout() -> onGlobalLayout
com.actionbarsherlock.widget.ActivityChooserView$3 -> com.actionbarsherlock.widget.ActivityChooserView$3:
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> this$0
    void onChanged() -> onChanged
com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter -> com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter:
    int MAX_ACTIVITY_COUNT_UNLIMITED -> MAX_ACTIVITY_COUNT_UNLIMITED
    int MAX_ACTIVITY_COUNT_DEFAULT -> MAX_ACTIVITY_COUNT_DEFAULT
    int ITEM_VIEW_TYPE_ACTIVITY -> ITEM_VIEW_TYPE_ACTIVITY
    int ITEM_VIEW_TYPE_FOOTER -> ITEM_VIEW_TYPE_FOOTER
    int ITEM_VIEW_TYPE_COUNT -> ITEM_VIEW_TYPE_COUNT
    com.actionbarsherlock.widget.ActivityChooserModel mDataModel -> mDataModel
    int mMaxActivityCount -> mMaxActivityCount
    boolean mShowDefaultActivity -> mShowDefaultActivity
    boolean mHighlightDefaultActivity -> mHighlightDefaultActivity
    boolean mShowFooterView -> mShowFooterView
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> this$0
    void setDataModel(com.actionbarsherlock.widget.ActivityChooserModel) -> setDataModel
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int measureContentWidth() -> measureContentWidth
    void setMaxActivityCount(int) -> setMaxActivityCount
    android.content.pm.ResolveInfo getDefaultActivity() -> getDefaultActivity
    void setShowFooterView(boolean) -> setShowFooterView
    int getActivityCount() -> getActivityCount
    int getHistorySize() -> getHistorySize
    int getMaxActivityCount() -> getMaxActivityCount
    com.actionbarsherlock.widget.ActivityChooserModel getDataModel() -> getDataModel
    void setShowDefaultActivity(boolean,boolean) -> setShowDefaultActivity
    boolean getShowDefaultActivity() -> getShowDefaultActivity
com.actionbarsherlock.widget.ActivityChooserView$Callbacks -> com.actionbarsherlock.widget.ActivityChooserView$Callbacks:
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onClick(android.view.View) -> onClick
    boolean onLongClick(android.view.View) -> onLongClick
    void onDismiss() -> onDismiss
    void notifyOnDismissListener() -> notifyOnDismissListener
com.actionbarsherlock.widget.ActivityChooserView$SetActivated -> com.actionbarsherlock.widget.ActivityChooserView$SetActivated:
    void invoke(android.view.View,boolean) -> invoke
com.actionbarsherlock.widget.SearchView -> com.actionbarsherlock.widget.SearchView:
    boolean DBG -> DBG
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String IME_OPTION_NO_MICROPHONE -> IME_OPTION_NO_MICROPHONE
    com.actionbarsherlock.widget.SearchView$OnQueryTextListener mOnQueryChangeListener -> mOnQueryChangeListener
    com.actionbarsherlock.widget.SearchView$OnCloseListener mOnCloseListener -> mOnCloseListener
    android.view.View$OnFocusChangeListener mOnQueryTextFocusChangeListener -> mOnQueryTextFocusChangeListener
    com.actionbarsherlock.widget.SearchView$OnSuggestionListener mOnSuggestionListener -> mOnSuggestionListener
    android.view.View$OnClickListener mOnSearchClickListener -> mOnSearchClickListener
    boolean mIconifiedByDefault -> mIconifiedByDefault
    boolean mIconified -> mIconified
    android.support.v4.widget.CursorAdapter mSuggestionsAdapter -> mSuggestionsAdapter
    android.view.View mSearchButton -> mSearchButton
    android.view.View mSubmitButton -> mSubmitButton
    android.view.View mSearchPlate -> mSearchPlate
    android.view.View mSubmitArea -> mSubmitArea
    android.widget.ImageView mCloseButton -> mCloseButton
    android.view.View mSearchEditFrame -> mSearchEditFrame
    android.view.View mVoiceButton -> mVoiceButton
    com.actionbarsherlock.widget.SearchView$SearchAutoComplete mQueryTextView -> mQueryTextView
    android.view.View mDropDownAnchor -> mDropDownAnchor
    android.widget.ImageView mSearchHintIcon -> mSearchHintIcon
    boolean mSubmitButtonEnabled -> mSubmitButtonEnabled
    java.lang.CharSequence mQueryHint -> mQueryHint
    boolean mQueryRefinement -> mQueryRefinement
    boolean mClearingFocus -> mClearingFocus
    int mMaxWidth -> mMaxWidth
    boolean mVoiceButtonEnabled -> mVoiceButtonEnabled
    java.lang.CharSequence mOldQueryText -> mOldQueryText
    java.lang.CharSequence mUserQuery -> mUserQuery
    boolean mExpandedInActionView -> mExpandedInActionView
    int mCollapsedImeOptions -> mCollapsedImeOptions
    android.app.SearchableInfo mSearchable -> mSearchable
    android.os.Bundle mAppSearchData -> mAppSearchData
    java.lang.Runnable mShowImeRunnable -> mShowImeRunnable
    java.lang.Runnable mUpdateDrawableStateRunnable -> mUpdateDrawableStateRunnable
    java.lang.Runnable mReleaseCursorRunnable -> mReleaseCursorRunnable
    android.content.Intent mVoiceWebSearchIntent -> mVoiceWebSearchIntent
    android.content.Intent mVoiceAppSearchIntent -> mVoiceAppSearchIntent
    java.util.WeakHashMap mOutsideDrawablesCache -> mOutsideDrawablesCache
    android.view.View$OnClickListener mOnClickListener -> mOnClickListener
    android.view.View$OnKeyListener mTextKeyListener -> mTextKeyListener
    android.widget.TextView$OnEditorActionListener mOnEditorActionListener -> mOnEditorActionListener
    android.widget.AdapterView$OnItemClickListener mOnItemClickListener -> mOnItemClickListener
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> mOnItemSelectedListener
    android.text.TextWatcher mTextWatcher -> mTextWatcher
    void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    void setAppSearchData(android.os.Bundle) -> setAppSearchData
    void setImeOptions(int) -> setImeOptions
    int getImeOptions() -> getImeOptions
    void setInputType(int) -> setInputType
    int getInputType() -> getInputType
    boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    void clearFocus() -> clearFocus
    void setOnQueryTextListener(com.actionbarsherlock.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    void setOnCloseListener(com.actionbarsherlock.widget.SearchView$OnCloseListener) -> setOnCloseListener
    void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    void setOnSuggestionListener(com.actionbarsherlock.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    java.lang.CharSequence getQuery() -> getQuery
    void setQuery(java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(java.lang.CharSequence) -> setQueryHint
    java.lang.CharSequence getQueryHint() -> getQueryHint
    void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    boolean isIconfiedByDefault() -> isIconfiedByDefault
    void setIconified(boolean) -> setIconified
    boolean isIconified() -> isIconified
    void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled() -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled() -> isQueryRefinementEnabled
    void setSuggestionsAdapter(android.support.v4.widget.CursorAdapter) -> setSuggestionsAdapter
    android.support.v4.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    void setMaxWidth(int) -> setMaxWidth
    int getMaxWidth() -> getMaxWidth
    void onMeasure(int,int) -> onMeasure
    int getPreferredWidth() -> getPreferredWidth
    void updateViewsVisibility(boolean) -> updateViewsVisibility
    boolean hasVoiceSearch() -> hasVoiceSearch
    boolean isSubmitAreaEnabled() -> isSubmitAreaEnabled
    void updateSubmitButton(boolean) -> updateSubmitButton
    void updateSubmitArea() -> updateSubmitArea
    void updateCloseButton() -> updateCloseButton
    void postUpdateFocusedState() -> postUpdateFocusedState
    void updateFocusedState() -> updateFocusedState
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setImeVisibility(boolean) -> setImeVisibility
    void onQueryRefine(java.lang.CharSequence) -> onQueryRefine
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent) -> onSuggestionsKey
    int getSearchIconId() -> getSearchIconId
    java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> getDecoratedHint
    void updateQueryHint() -> updateQueryHint
    void updateSearchAutoComplete() -> updateSearchAutoComplete
    void updateVoiceButton(boolean) -> updateVoiceButton
    void onTextChanged(java.lang.CharSequence) -> onTextChanged
    void onSubmitQuery() -> onSubmitQuery
    void dismissSuggestions() -> dismissSuggestions
    void onCloseClicked() -> onCloseClicked
    void onSearchClicked() -> onSearchClicked
    void onVoiceClicked() -> onVoiceClicked
    void onTextFocusChanged() -> onTextFocusChanged
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onActionViewCollapsed() -> onActionViewCollapsed
    void onActionViewExpanded() -> onActionViewExpanded
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void adjustDropDownSizeAndPosition() -> adjustDropDownSizeAndPosition
    boolean onItemClicked(int,int,java.lang.String) -> onItemClicked
    boolean onItemSelected(int) -> onItemSelected
    void rewriteQueryFromSuggestion(int) -> rewriteQueryFromSuggestion
    boolean launchSuggestion(int,int,java.lang.String) -> launchSuggestion
    void launchIntent(android.content.Intent) -> launchIntent
    void setQuery(java.lang.CharSequence) -> setQuery
    void launchQuerySearch(int,java.lang.String,java.lang.String) -> launchQuerySearch
    android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> createIntent
    android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceWebSearchIntent
    android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceAppSearchIntent
    android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String) -> createIntentFromSuggestion
    void forceSuggestionQuery() -> forceSuggestionQuery
    boolean isLandscapeMode(android.content.Context) -> isLandscapeMode
    void ensureImeVisible(android.widget.AutoCompleteTextView,boolean) -> ensureImeVisible
    void showSoftInputUnchecked(android.view.View,android.view.inputmethod.InputMethodManager,int) -> showSoftInputUnchecked
    void setText(android.widget.AutoCompleteTextView,java.lang.CharSequence,boolean) -> setText
    void access$000(android.view.View,android.view.inputmethod.InputMethodManager,int) -> access$000
    void access$100(com.actionbarsherlock.widget.SearchView) -> access$100
    android.support.v4.widget.CursorAdapter access$200(com.actionbarsherlock.widget.SearchView) -> access$200
    android.view.View$OnFocusChangeListener access$300(com.actionbarsherlock.widget.SearchView) -> access$300
    void access$400(com.actionbarsherlock.widget.SearchView) -> access$400
    android.view.View access$500(com.actionbarsherlock.widget.SearchView) -> access$500
    void access$600(com.actionbarsherlock.widget.SearchView) -> access$600
    android.widget.ImageView access$700(com.actionbarsherlock.widget.SearchView) -> access$700
    void access$800(com.actionbarsherlock.widget.SearchView) -> access$800
    android.view.View access$900(com.actionbarsherlock.widget.SearchView) -> access$900
    void access$1000(com.actionbarsherlock.widget.SearchView) -> access$1000
    android.view.View access$1100(com.actionbarsherlock.widget.SearchView) -> access$1100
    void access$1200(com.actionbarsherlock.widget.SearchView) -> access$1200
    com.actionbarsherlock.widget.SearchView$SearchAutoComplete access$1300(com.actionbarsherlock.widget.SearchView) -> access$1300
    void access$1400(com.actionbarsherlock.widget.SearchView) -> access$1400
    android.app.SearchableInfo access$1500(com.actionbarsherlock.widget.SearchView) -> access$1500
    boolean access$1600(com.actionbarsherlock.widget.SearchView,android.view.View,int,android.view.KeyEvent) -> access$1600
    void access$1800(com.actionbarsherlock.widget.SearchView,int,java.lang.String,java.lang.String) -> access$1800
    boolean access$1900(com.actionbarsherlock.widget.SearchView,int,int,java.lang.String) -> access$1900
    boolean access$2000(com.actionbarsherlock.widget.SearchView,int) -> access$2000
    void access$2100(com.actionbarsherlock.widget.SearchView,java.lang.CharSequence) -> access$2100
    void access$2200(android.widget.AutoCompleteTextView,boolean) -> access$2200
    void access$2300(com.actionbarsherlock.widget.SearchView,boolean) -> access$2300
com.actionbarsherlock.widget.SearchView$1 -> com.actionbarsherlock.widget.SearchView$1:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void run() -> run
com.actionbarsherlock.widget.SearchView$10 -> com.actionbarsherlock.widget.SearchView$10:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.actionbarsherlock.widget.SearchView$11 -> com.actionbarsherlock.widget.SearchView$11:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.actionbarsherlock.widget.SearchView$12 -> com.actionbarsherlock.widget.SearchView$12:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.actionbarsherlock.widget.SearchView$2 -> com.actionbarsherlock.widget.SearchView$2:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void run() -> run
com.actionbarsherlock.widget.SearchView$3 -> com.actionbarsherlock.widget.SearchView$3:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void run() -> run
com.actionbarsherlock.widget.SearchView$4 -> com.actionbarsherlock.widget.SearchView$4:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.actionbarsherlock.widget.SearchView$5 -> com.actionbarsherlock.widget.SearchView$5:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.actionbarsherlock.widget.SearchView$6 -> com.actionbarsherlock.widget.SearchView$6:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void onGlobalLayout() -> onGlobalLayout
com.actionbarsherlock.widget.SearchView$7 -> com.actionbarsherlock.widget.SearchView$7:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.widget.SearchView$8 -> com.actionbarsherlock.widget.SearchView$8:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.actionbarsherlock.widget.SearchView$9 -> com.actionbarsherlock.widget.SearchView$9:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.actionbarsherlock.widget.SearchView$OnCloseListener -> com.actionbarsherlock.widget.SearchView$OnCloseListener:
    boolean onClose() -> onClose
com.actionbarsherlock.widget.SearchView$OnQueryTextListener -> com.actionbarsherlock.widget.SearchView$OnQueryTextListener:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
com.actionbarsherlock.widget.SearchView$OnSuggestionListener -> com.actionbarsherlock.widget.SearchView$OnSuggestionListener:
    boolean onSuggestionSelect(int) -> onSuggestionSelect
    boolean onSuggestionClick(int) -> onSuggestionClick
com.actionbarsherlock.widget.SearchView$SearchAutoComplete -> com.actionbarsherlock.widget.SearchView$SearchAutoComplete:
    int mThreshold -> mThreshold
    com.actionbarsherlock.widget.SearchView mSearchView -> mSearchView
    void setSearchView(com.actionbarsherlock.widget.SearchView) -> setSearchView
    void setThreshold(int) -> setThreshold
    boolean isEmpty() -> isEmpty
    void replaceText(java.lang.CharSequence) -> replaceText
    void performCompletion() -> performCompletion
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    boolean enoughToFilter() -> enoughToFilter
    boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    boolean access$1700(com.actionbarsherlock.widget.SearchView$SearchAutoComplete) -> access$1700
com.actionbarsherlock.widget.ShareActionProvider -> com.actionbarsherlock.widget.ShareActionProvider:
    int DEFAULT_INITIAL_ACTIVITY_COUNT -> DEFAULT_INITIAL_ACTIVITY_COUNT
    int mMaxShownActivityCount -> mMaxShownActivityCount
    com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener mOnMenuItemClickListener -> mOnMenuItemClickListener
    java.lang.String DEFAULT_SHARE_HISTORY_FILE_NAME -> DEFAULT_SHARE_HISTORY_FILE_NAME
    android.content.Context mContext -> mContext
    java.lang.String mShareHistoryFileName -> mShareHistoryFileName
    com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener mOnShareTargetSelectedListener -> mOnShareTargetSelectedListener
    com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener mOnChooseActivityListener -> mOnChooseActivityListener
    void setOnShareTargetSelectedListener(com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener) -> setOnShareTargetSelectedListener
    android.view.View onCreateActionView() -> onCreateActionView
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(com.actionbarsherlock.view.SubMenu) -> onPrepareSubMenu
    void setShareHistoryFileName(java.lang.String) -> setShareHistoryFileName
    void setShareIntent(android.content.Intent) -> setShareIntent
    void setActivityChooserPolicyIfNeeded() -> setActivityChooserPolicyIfNeeded
    android.content.Context access$100(com.actionbarsherlock.widget.ShareActionProvider) -> access$100
    java.lang.String access$200(com.actionbarsherlock.widget.ShareActionProvider) -> access$200
    com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener access$400(com.actionbarsherlock.widget.ShareActionProvider) -> access$400
com.actionbarsherlock.widget.ShareActionProvider$1 -> com.actionbarsherlock.widget.ShareActionProvider$1:
com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener -> com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener:
    boolean onShareTargetSelected(com.actionbarsherlock.widget.ShareActionProvider,android.content.Intent) -> onShareTargetSelected
com.actionbarsherlock.widget.ShareActionProvider$ShareAcitivityChooserModelPolicy -> com.actionbarsherlock.widget.ShareActionProvider$ShareAcitivityChooserModelPolicy:
    com.actionbarsherlock.widget.ShareActionProvider this$0 -> this$0
    boolean onChooseActivity(com.actionbarsherlock.widget.ActivityChooserModel,android.content.Intent) -> onChooseActivity
com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener -> com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener:
    com.actionbarsherlock.widget.ShareActionProvider this$0 -> this$0
    boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem) -> onMenuItemClick
com.actionbarsherlock.widget.SuggestionsAdapter -> com.actionbarsherlock.widget.SuggestionsAdapter:
    boolean DBG -> DBG
    java.lang.String LOG_TAG -> LOG_TAG
    int QUERY_LIMIT -> QUERY_LIMIT
    int REFINE_NONE -> REFINE_NONE
    int REFINE_BY_ENTRY -> REFINE_BY_ENTRY
    int REFINE_ALL -> REFINE_ALL
    android.app.SearchManager mSearchManager -> mSearchManager
    android.app.SearchableInfo mSearchable -> mSearchable
    com.actionbarsherlock.widget.SearchView mSearchView -> mSearchView
    android.content.Context mProviderContext -> mProviderContext
    java.util.WeakHashMap mOutsideDrawablesCache -> mOutsideDrawablesCache
    boolean mClosed -> mClosed
    int mQueryRefinement -> mQueryRefinement
    android.content.res.ColorStateList mUrlColor -> mUrlColor
    int INVALID_INDEX -> INVALID_INDEX
    int mText1Col -> mText1Col
    int mText2Col -> mText2Col
    int mText2UrlCol -> mText2UrlCol
    int mIconName1Col -> mIconName1Col
    int mIconName2Col -> mIconName2Col
    int mFlagsCol -> mFlagsCol
    void setQueryRefinement(int) -> setQueryRefinement
    int getQueryRefinement() -> getQueryRefinement
    boolean hasStableIds() -> hasStableIds
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getSuggestions(java.lang.String,int) -> getSuggestions
    void close() -> close
    void notifyDataSetChanged() -> notifyDataSetChanged
    void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    void updateSpinnerState(android.database.Cursor) -> updateSpinnerState
    void changeCursor(android.database.Cursor) -> changeCursor
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void onClick(android.view.View) -> onClick
    java.lang.CharSequence formatUrl(java.lang.CharSequence) -> formatUrl
    void setViewText(android.widget.TextView,java.lang.CharSequence) -> setViewText
    android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> getIcon1
    android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> getIcon2
    void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> setViewDrawable
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> getDrawableFromResourceValue
    android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> getDrawable
    android.graphics.drawable.Drawable getTheDrawable(android.net.Uri) -> getTheDrawable
    android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> checkIconCache
    void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> storeInIconCache
    android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor) -> getDefaultIcon1
    android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName) -> getActivityIconWithCache
    android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) -> getActivityIcon
    java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> getColumnString
    java.lang.String getStringOrNull(android.database.Cursor,int) -> getStringOrNull
com.actionbarsherlock.widget.SuggestionsAdapter$ChildViewCache -> com.actionbarsherlock.widget.SuggestionsAdapter$ChildViewCache:
    android.widget.TextView mText1 -> mText1
    android.widget.TextView mText2 -> mText2
    android.widget.ImageView mIcon1 -> mIcon1
    android.widget.ImageView mIcon2 -> mIcon2
    android.widget.ImageView mIconRefine -> mIconRefine
jxl.Cell -> a.a:
    int getRow() -> e_
    int getColumn() -> b
    jxl.CellType getType() -> c
    java.lang.String getContents() -> d
    jxl.format.CellFormat getCellFormat() -> e
    jxl.CellFeatures getCellFeatures() -> f
jxl.CellFeatures -> a.b:
    java.lang.String getComment() -> a
jxl.CellReferenceHelper -> a.c:
    java.lang.String getCellReference(int,int) -> a
    java.lang.String getCellReference(jxl.Cell) -> a
jxl.CellType -> a.d:
    java.lang.String description -> l
    jxl.CellType EMPTY -> a
    jxl.CellType LABEL -> b
    jxl.CellType NUMBER -> c
    jxl.CellType BOOLEAN -> d
    jxl.CellType ERROR -> e
    jxl.CellType NUMBER_FORMULA -> f
    jxl.CellType DATE_FORMULA -> g
    jxl.CellType STRING_FORMULA -> h
    jxl.CellType BOOLEAN_FORMULA -> i
    jxl.CellType FORMULA_ERROR -> j
    jxl.CellType DATE -> k
    java.lang.String toString() -> toString
jxl.CellView -> a.e:
    int dimension -> a
    int size -> b
    boolean depUsed -> c
    boolean hidden -> d
    jxl.format.CellFormat format -> e
    boolean autosize -> f
    void setHidden(boolean) -> a
    boolean isHidden() -> a
    void setDimension(int) -> a
    void setSize(int) -> b
    int getDimension() -> b
    int getSize() -> c
    void setFormat(jxl.format.CellFormat) -> a
    jxl.format.CellFormat getFormat() -> d
    boolean depUsed() -> e
    void setAutosize(boolean) -> b
    boolean isAutosize() -> f
jxl.DateCell -> a.f:
jxl.HeaderFooter -> a.g:
    java.lang.String toString() -> toString
    jxl.biff.HeaderFooter$Contents createContents() -> a
jxl.HeaderFooter$Contents -> a.h:
    boolean empty() -> a
jxl.JXLException -> a.i:
jxl.LabelCell -> a.j:
jxl.NumberCell -> a.k:
jxl.Range -> a.l:
    jxl.Cell getTopLeft() -> a
    jxl.Cell getBottomRight() -> b
jxl.Sheet -> a.m:
    jxl.Cell getCell(int,int) -> a
    int getRows() -> a
    int getColumns() -> b
    java.lang.String getName() -> c
    jxl.SheetSettings getSettings() -> d
    jxl.CellView getColumnView(int) -> a
jxl.SheetSettings -> a.n:
    jxl.format.PageOrientation orientation -> a
    jxl.format.PageOrder pageOrder -> b
    jxl.format.PaperSize paperSize -> c
    boolean sheetProtected -> d
    boolean hidden -> e
    boolean selected -> f
    jxl.HeaderFooter header -> g
    double headerMargin -> h
    jxl.HeaderFooter footer -> i
    double footerMargin -> j
    int scaleFactor -> k
    int zoomFactor -> l
    int pageStart -> m
    int fitWidth -> n
    int fitHeight -> o
    int horizontalPrintResolution -> p
    int verticalPrintResolution -> q
    double leftMargin -> r
    double rightMargin -> s
    double topMargin -> t
    double bottomMargin -> u
    boolean fitToPages -> v
    boolean showGridLines -> w
    boolean printGridLines -> x
    boolean printHeaders -> y
    boolean pageBreakPreviewMode -> z
    boolean displayZeroValues -> A
    java.lang.String password -> B
    int passwordHash -> C
    int defaultColumnWidth -> D
    int defaultRowHeight -> E
    int horizontalFreeze -> F
    int verticalFreeze -> G
    boolean verticalCentre -> H
    boolean horizontalCentre -> I
    int copies -> J
    boolean automaticFormulaCalculation -> K
    boolean recalculateFormulasBeforeSave -> L
    int pageBreakPreviewMagnification -> M
    int normalMagnification -> N
    jxl.Range printArea -> O
    jxl.Range printTitlesRow -> P
    jxl.Range printTitlesCol -> Q
    jxl.Sheet sheet -> R
    jxl.format.PageOrientation DEFAULT_ORIENTATION -> S
    jxl.format.PageOrder DEFAULT_ORDER -> T
    jxl.format.PaperSize DEFAULT_PAPER_SIZE -> U
    jxl.format.PageOrientation getOrientation() -> a
    jxl.format.PageOrder getPageOrder() -> b
    jxl.format.PaperSize getPaperSize() -> c
    boolean isProtected() -> d
    double getHeaderMargin() -> e
    double getFooterMargin() -> f
    boolean isHidden() -> g
    void setSelected(boolean) -> a
    boolean isSelected() -> h
    int getScaleFactor() -> i
    int getPageStart() -> j
    int getFitWidth() -> k
    int getFitHeight() -> l
    int getHorizontalPrintResolution() -> m
    int getVerticalPrintResolution() -> n
    double getRightMargin() -> o
    double getLeftMargin() -> p
    double getTopMargin() -> q
    double getBottomMargin() -> r
    double getDefaultWidthMargin() -> s
    double getDefaultHeightMargin() -> t
    boolean getFitToPages() -> u
    java.lang.String getPassword() -> v
    int getPasswordHash() -> w
    int getDefaultColumnWidth() -> x
    int getDefaultRowHeight() -> y
    int getZoomFactor() -> z
    int getPageBreakPreviewMagnification() -> A
    int getNormalMagnification() -> B
    boolean getDisplayZeroValues() -> C
    boolean getShowGridLines() -> D
    boolean getPageBreakPreviewMode() -> E
    boolean getPrintGridLines() -> F
    boolean getPrintHeaders() -> G
    int getHorizontalFreeze() -> H
    void setHorizontalFreeze(int) -> a
    int getVerticalFreeze() -> I
    void setVerticalFreeze(int) -> b
    int getCopies() -> J
    jxl.HeaderFooter getHeader() -> K
    jxl.HeaderFooter getFooter() -> L
    boolean isHorizontalCentre() -> M
    boolean isVerticalCentre() -> N
    boolean getAutomaticFormulaCalculation() -> O
    boolean getRecalculateFormulasBeforeSave() -> P
    jxl.Range getPrintArea() -> Q
    jxl.Range getPrintTitlesRow() -> R
    jxl.Range getPrintTitlesCol() -> S
jxl.Workbook -> a.o:
    java.lang.String getVersion() -> a
    jxl.write.WritableWorkbook createWorkbook(java.io.File) -> a
    jxl.write.WritableWorkbook createWorkbook(java.io.File,jxl.WorkbookSettings) -> a
jxl.WorkbookSettings -> a.p:
    jxl.common.Logger logger -> a
    int initialFileSize -> b
    int arrayGrowSize -> c
    boolean drawingsDisabled -> d
    boolean namesDisabled -> e
    boolean formulaReferenceAdjustDisabled -> f
    boolean gcDisabled -> g
    boolean rationalizationDisabled -> h
    boolean mergedCellCheckingDisabled -> i
    boolean propertySetsDisabled -> j
    boolean cellValidationDisabled -> k
    boolean ignoreBlankCells -> l
    boolean autoFilterDisabled -> m
    boolean useTemporaryFileDuringWrite -> n
    java.io.File temporaryFileDuringWriteDirectory -> o
    java.util.Locale locale -> p
    jxl.biff.formula.FunctionNames functionNames -> q
    java.lang.String encoding -> r
    java.lang.String excelDisplayLanguage -> s
    java.lang.String excelRegionalSettings -> t
    java.util.HashMap localeFunctionNames -> u
    boolean refreshAll -> v
    boolean template -> w
    boolean excel9file -> x
    boolean windowProtected -> y
    java.lang.String writeAccess -> z
    int hideobj -> A
    int getArrayGrowSize() -> a
    int getInitialFileSize() -> b
    boolean getDrawingsDisabled() -> c
    boolean getGCDisabled() -> d
    boolean getRationalizationDisabled() -> e
    boolean getMergedCellCheckingDisabled() -> f
    void setSuppressWarnings(boolean) -> a
    boolean getFormulaAdjust() -> g
    java.lang.String getEncoding() -> h
    jxl.biff.formula.FunctionNames getFunctionNames() -> i
    java.lang.String getExcelDisplayLanguage() -> j
    java.lang.String getExcelRegionalSettings() -> k
    boolean getUseTemporaryFileDuringWrite() -> l
    java.io.File getTemporaryFileDuringWriteDirectory() -> m
    boolean getRefreshAll() -> n
    boolean getTemplate() -> o
    boolean getExcel9File() -> p
    boolean getWindowProtected() -> q
    int getHideobj() -> r
    java.lang.String getWriteAccess() -> s
jxl.biff.AutoFilter -> a.a.a:
    jxl.biff.FilterModeRecord filterMode -> a
    jxl.biff.AutoFilterInfoRecord autoFilterInfo -> b
    jxl.biff.AutoFilterRecord autoFilter -> c
    void write(jxl.write.biff.File) -> a
jxl.biff.AutoFilterInfoRecord -> a.a.b:
    jxl.common.Logger logger -> a
    byte[] data -> b
    byte[] getData() -> a
jxl.biff.AutoFilterRecord -> a.a.c:
    jxl.common.Logger logger -> a
    byte[] data -> b
    byte[] getData() -> a
jxl.biff.BaseCellFeatures -> a.a.d:
    jxl.common.Logger logger -> a
    java.lang.String comment -> j
    double commentWidth -> k
    double commentHeight -> l
    jxl.biff.drawing.Comment commentDrawing -> m
    jxl.biff.drawing.ComboBox comboBox -> n
    jxl.biff.DataValiditySettingsRecord validationSettings -> o
    jxl.biff.DVParser dvParser -> p
    boolean dropDown -> q
    boolean dataValidation -> r
    jxl.write.biff.CellValue writableCell -> s
    jxl.biff.BaseCellFeatures$ValidationCondition BETWEEN -> b
    jxl.biff.BaseCellFeatures$ValidationCondition NOT_BETWEEN -> c
    jxl.biff.BaseCellFeatures$ValidationCondition EQUAL -> d
    jxl.biff.BaseCellFeatures$ValidationCondition NOT_EQUAL -> e
    jxl.biff.BaseCellFeatures$ValidationCondition GREATER_THAN -> f
    jxl.biff.BaseCellFeatures$ValidationCondition LESS_THAN -> g
    jxl.biff.BaseCellFeatures$ValidationCondition GREATER_EQUAL -> h
    jxl.biff.BaseCellFeatures$ValidationCondition LESS_EQUAL -> i
    java.lang.String getComment() -> a
    double getCommentWidth() -> b
    double getCommentHeight() -> c
    void setWritableCell(jxl.write.biff.CellValue) -> a
    void removeComment() -> d
    void removeDataValidation() -> e
    void setCommentDrawing(jxl.biff.drawing.Comment) -> a
    jxl.biff.drawing.Comment getCommentDrawing() -> f
    boolean hasDataValidation() -> g
    void clearValidationSettings() -> j
    boolean hasDropDown() -> h
    void setComboBox(jxl.biff.drawing.ComboBox) -> a
    jxl.biff.DVParser getDVParser() -> i
    void shareDataValidation(jxl.biff.BaseCellFeatures) -> a
jxl.biff.BaseCellFeatures$ValidationCondition -> a.a.e:
    jxl.biff.DVParser$Condition condition -> a
    jxl.biff.BaseCellFeatures$ValidationCondition[] types -> b
jxl.biff.BaseCompoundFile -> a.a.f:
    jxl.common.Logger logger -> c
    byte[] IDENTIFIER -> a
    java.lang.String[] STANDARD_PROPERTY_SETS -> b
jxl.biff.BaseCompoundFile$PropertyStorage -> a.a.g:
    java.lang.String name -> a
    int type -> b
    int colour -> c
    int startBlock -> d
    int size -> e
    int previous -> f
    int next -> g
    int child -> h
    byte[] data -> i
    jxl.biff.BaseCompoundFile this$0 -> j
    void setType(int) -> a
    void setStartBlock(int) -> b
    void setSize(int) -> c
    void setPrevious(int) -> d
    void setNext(int) -> e
    void setChild(int) -> f
    void setColour(int) -> g
jxl.biff.BuiltInFormat -> a.a.h:
    java.lang.String formatString -> b
    int formatIndex -> c
    jxl.biff.BuiltInFormat[] builtIns -> a
    int getFormatIndex() -> a_
    boolean isInitialized() -> b_
    void initialize(int) -> a
    boolean isBuiltIn() -> c
    boolean equals(java.lang.Object) -> equals
jxl.biff.BuiltInName -> a.a.i:
    java.lang.String name -> o
    int value -> p
    jxl.biff.BuiltInName[] builtInNames -> q
    jxl.biff.BuiltInName CONSOLIDATE_AREA -> a
    jxl.biff.BuiltInName AUTO_OPEN -> b
    jxl.biff.BuiltInName AUTO_CLOSE -> c
    jxl.biff.BuiltInName EXTRACT -> d
    jxl.biff.BuiltInName DATABASE -> e
    jxl.biff.BuiltInName CRITERIA -> f
    jxl.biff.BuiltInName PRINT_AREA -> g
    jxl.biff.BuiltInName PRINT_TITLES -> h
    jxl.biff.BuiltInName RECORDER -> i
    jxl.biff.BuiltInName DATA_FORM -> j
    jxl.biff.BuiltInName AUTO_ACTIVATE -> k
    jxl.biff.BuiltInName AUTO_DEACTIVATE -> l
    jxl.biff.BuiltInName SHEET_TITLE -> m
    jxl.biff.BuiltInName FILTER_DATABASE -> n
    int getValue() -> a
jxl.biff.BuiltInStyle -> a.a.j:
    int xfIndex -> a
    int styleNumber -> b
    byte[] getData() -> a
jxl.biff.ByteArray -> a.a.k:
    int growSize -> a
    byte[] bytes -> b
    int pos -> c
    void add(byte) -> a
    void add(byte[]) -> a
    byte[] getBytes() -> a
    void checkSize(int) -> a
jxl.biff.ByteData -> a.a.l:
    byte[] getBytes() -> g
jxl.biff.CellReferenceHelper -> a.a.m:
    jxl.common.Logger logger -> a
    void getCellReference(int,int,java.lang.StringBuffer) -> a
    void getCellReference(int,boolean,int,boolean,java.lang.StringBuffer) -> a
    void getColumnReference(int,java.lang.StringBuffer) -> a
    void getCellReference(int,int,int,jxl.biff.formula.ExternalSheet,java.lang.StringBuffer) -> a
    void getCellReference(int,int,boolean,int,boolean,jxl.biff.formula.ExternalSheet,java.lang.StringBuffer) -> a
    java.lang.String getCellReference(int,int) -> a
    int getColumn(java.lang.String) -> a
    int getRow(java.lang.String) -> b
    int getNumberIndex(java.lang.String) -> e
    boolean isColumnRelative(java.lang.String) -> c
    boolean isRowRelative(java.lang.String) -> d
jxl.biff.ConditionalFormat -> a.a.n:
    jxl.biff.ConditionalFormatRangeRecord range -> a
    java.util.ArrayList conditions -> b
    void insertColumn(int) -> a
    void insertRow(int) -> b
    void write(jxl.write.biff.File) -> a
jxl.biff.ConditionalFormatRangeRecord -> a.a.o:
    jxl.common.Logger logger -> a
    jxl.biff.ConditionalFormatRangeRecord$Range enclosingRange -> b
    jxl.biff.ConditionalFormatRangeRecord$Range[] ranges -> c
    int numRanges -> d
    boolean initialized -> e
    boolean modified -> f
    byte[] data -> g
    void initialize() -> c
    void insertColumn(int) -> a
    void insertRow(int) -> b
    byte[] getData() -> a
jxl.biff.ConditionalFormatRangeRecord$Range -> a.a.p:
    int firstRow -> a
    int firstColumn -> b
    int lastRow -> c
    int lastColumn -> d
    boolean modified -> e
    void insertColumn(int) -> a
    void insertRow(int) -> b
jxl.biff.ConditionalFormatRecord -> a.a.q:
    jxl.common.Logger logger -> a
    byte[] data -> b
    byte[] getData() -> a
jxl.biff.ContinueRecord -> a.a.r:
    byte[] data -> a
    byte[] getData() -> a
    jxl.read.biff.Record getRecord() -> g_
jxl.biff.CountryCode -> a.a.s:
    jxl.common.Logger logger -> s
    int value -> t
    java.lang.String code -> u
    java.lang.String description -> v
    jxl.biff.CountryCode[] codes -> w
    jxl.biff.CountryCode USA -> a
    jxl.biff.CountryCode CANADA -> b
    jxl.biff.CountryCode GREECE -> c
    jxl.biff.CountryCode NETHERLANDS -> d
    jxl.biff.CountryCode BELGIUM -> e
    jxl.biff.CountryCode FRANCE -> f
    jxl.biff.CountryCode SPAIN -> g
    jxl.biff.CountryCode ITALY -> h
    jxl.biff.CountryCode SWITZERLAND -> i
    jxl.biff.CountryCode UK -> j
    jxl.biff.CountryCode DENMARK -> k
    jxl.biff.CountryCode SWEDEN -> l
    jxl.biff.CountryCode NORWAY -> m
    jxl.biff.CountryCode GERMANY -> n
    jxl.biff.CountryCode PHILIPPINES -> o
    jxl.biff.CountryCode CHINA -> p
    jxl.biff.CountryCode INDIA -> q
    jxl.biff.CountryCode UNKNOWN -> r
    int getValue() -> a
    java.lang.String getCode() -> b
    jxl.biff.CountryCode getCountryCode(java.lang.String) -> a
jxl.biff.DVParser -> a.a.t:
    jxl.common.Logger logger -> t
    jxl.biff.DVParser$DVType ANY -> a
    jxl.biff.DVParser$DVType INTEGER -> b
    jxl.biff.DVParser$DVType DECIMAL -> c
    jxl.biff.DVParser$DVType LIST -> d
    jxl.biff.DVParser$DVType DATE -> e
    jxl.biff.DVParser$DVType TIME -> f
    jxl.biff.DVParser$DVType TEXT_LENGTH -> g
    jxl.biff.DVParser$DVType FORMULA -> h
    jxl.biff.DVParser$ErrorStyle STOP -> i
    jxl.biff.DVParser$ErrorStyle WARNING -> j
    jxl.biff.DVParser$ErrorStyle INFO -> k
    jxl.biff.DVParser$Condition BETWEEN -> l
    jxl.biff.DVParser$Condition NOT_BETWEEN -> m
    jxl.biff.DVParser$Condition EQUAL -> n
    jxl.biff.DVParser$Condition NOT_EQUAL -> o
    jxl.biff.DVParser$Condition GREATER_THAN -> p
    jxl.biff.DVParser$Condition LESS_THAN -> q
    jxl.biff.DVParser$Condition GREATER_EQUAL -> r
    jxl.biff.DVParser$Condition LESS_EQUAL -> s
    java.text.DecimalFormat DECIMAL_FORMAT -> u
    jxl.biff.DVParser$DVType type -> v
    jxl.biff.DVParser$ErrorStyle errorStyle -> w
    jxl.biff.DVParser$Condition condition -> x
    boolean stringListGiven -> y
    boolean emptyCellsAllowed -> z
    boolean suppressArrow -> A
    boolean showPrompt -> B
    boolean showError -> C
    java.lang.String promptTitle -> D
    java.lang.String errorTitle -> E
    java.lang.String promptText -> F
    java.lang.String errorText -> G
    jxl.biff.formula.FormulaParser formula1 -> H
    java.lang.String formula1String -> I
    jxl.biff.formula.FormulaParser formula2 -> J
    java.lang.String formula2String -> K
    int column1 -> L
    int row1 -> M
    int column2 -> N
    int row2 -> O
    boolean extendedCellsValidation -> P
    boolean copied -> Q
    byte[] getData() -> a
    void insertRow(int) -> a
    void insertColumn(int) -> b
    int getFirstColumn() -> b
    int getLastColumn() -> c
    int getFirstRow() -> d
    int getLastRow() -> e
    void setCell(int,int,jxl.biff.formula.ExternalSheet,jxl.biff.WorkbookMethods,jxl.WorkbookSettings) -> a
    boolean extendedCellsValidation() -> f
    boolean copied() -> g
jxl.biff.DVParser$Condition -> a.a.u:
    int value -> a
    java.text.MessageFormat format -> b
    jxl.biff.DVParser$Condition[] types -> c
    jxl.biff.DVParser$Condition getCondition(int) -> a
    int getValue() -> a
jxl.biff.DVParser$DVType -> a.a.v:
    int value -> a
    java.lang.String desc -> b
    jxl.biff.DVParser$DVType[] types -> c
    jxl.biff.DVParser$DVType getType(int) -> a
    int getValue() -> a
jxl.biff.DVParser$ErrorStyle -> a.a.w:
    int value -> a
    jxl.biff.DVParser$ErrorStyle[] types -> b
    jxl.biff.DVParser$ErrorStyle getErrorStyle(int) -> a
    int getValue() -> a
jxl.biff.DValParser -> a.a.x:
    jxl.common.Logger logger -> a
    int PROMPT_BOX_VISIBLE_MASK -> b
    int PROMPT_BOX_AT_CELL_MASK -> c
    int VALIDITY_DATA_CACHED_MASK -> d
    boolean promptBoxVisible -> e
    boolean promptBoxAtCell -> f
    boolean validityDataCached -> g
    int numDVRecords -> h
    int objectId -> i
    byte[] getData() -> a
    void dvRemoved() -> b
    int getNumberOfDVRecords() -> c
    void dvAdded() -> d
jxl.biff.DataValidation -> a.a.y:
    jxl.common.Logger logger -> a
    jxl.biff.DataValidityListRecord validityList -> b
    java.util.ArrayList validitySettings -> c
    jxl.biff.WorkbookMethods workbook -> d
    jxl.biff.formula.ExternalSheet externalSheet -> e
    jxl.WorkbookSettings workbookSettings -> f
    int comboBoxObjectId -> g
    boolean copied -> h
    void add(jxl.biff.DataValiditySettingsRecord) -> a
    void write(jxl.write.biff.File) -> a
    void insertRow(int) -> a
    void insertColumn(int) -> b
    void removeDataValidation(int,int) -> a
jxl.biff.DataValidityListRecord -> a.a.z:
    jxl.common.Logger logger -> a
    jxl.biff.DValParser dvalParser -> b
    byte[] data -> c
    byte[] getData() -> a
    void dvRemoved() -> c
    void dvAdded() -> d
    boolean hasDVRecords() -> e
jxl.biff.DataValiditySettingsRecord -> a.a.aa:
    jxl.common.Logger logger -> a
    byte[] data -> b
    jxl.biff.DVParser dvParser -> c
    jxl.biff.WorkbookMethods workbook -> d
    jxl.biff.formula.ExternalSheet externalSheet -> e
    jxl.WorkbookSettings workbookSettings -> f
    jxl.biff.DataValidation dataValidation -> g
    void initialize() -> i
    byte[] getData() -> a
    void insertRow(int) -> a
    void insertColumn(int) -> b
    int getFirstColumn() -> c
    int getLastColumn() -> d
    int getFirstRow() -> e
    int getLastRow() -> f
    void setDataValidation(jxl.biff.DataValidation) -> a
    jxl.biff.DVParser getDVParser() -> h
jxl.biff.DisplayFormat -> a.a.ab:
    int getFormatIndex() -> a_
    boolean isInitialized() -> b_
    void initialize(int) -> a
    boolean isBuiltIn() -> c
jxl.biff.DoubleHelper -> a.a.ac:
    double getIEEEDouble(byte[],int) -> a
    void getIEEEBytes(double,byte[],int) -> a
jxl.biff.EmptyCell -> a.a.ad:
    int row -> a
    int col -> b
    int getRow() -> e_
    int getColumn() -> b
    jxl.CellType getType() -> c
    java.lang.String getContents() -> d
    jxl.format.CellFormat getCellFormat() -> e
    void setCellFormat(jxl.format.CellFormat) -> a
    jxl.CellFeatures getCellFeatures() -> f
    jxl.write.WritableCellFeatures getWritableCellFeatures() -> f_
    void setCellFeatures(jxl.write.WritableCellFeatures) -> a
jxl.biff.EncodedURLHelper -> a.a.ae:
    jxl.common.Logger logger -> a
    byte msDosDriveLetter -> b
    byte sameDrive -> c
    byte endOfSubdirectory -> d
    byte parentDirectory -> e
    byte unencodedUrl -> f
    byte[] getEncodedURL(java.lang.String,jxl.WorkbookSettings) -> a
    byte[] getFile(java.lang.String,jxl.WorkbookSettings) -> b
    byte[] getURL(java.lang.String,jxl.WorkbookSettings) -> c
jxl.biff.FilterModeRecord -> a.a.af:
    jxl.common.Logger logger -> a
    byte[] data -> b
    byte[] getData() -> a
jxl.biff.FontRecord -> a.a.ag:
    jxl.common.Logger logger -> b
    int pointHeight -> c
    int colourIndex -> d
    int boldWeight -> e
    int scriptStyle -> f
    int underlineStyle -> g
    byte fontFamily -> h
    byte characterSet -> i
    boolean italic -> j
    boolean struckout -> k
    java.lang.String name -> l
    boolean initialized -> m
    int fontIndex -> n
    jxl.biff.FontRecord$Biff7 biff7 -> a
    byte[] getData() -> a
    boolean isInitialized() -> c
    void initialize(int) -> a
    void uninitialize() -> d
    int getFontIndex() -> e
    int getPointSize() -> f
    void setFontBoldStyle(int) -> b
    int getBoldWeight() -> h
    boolean isItalic() -> i
    jxl.format.UnderlineStyle getUnderlineStyle() -> j
    jxl.format.Colour getColour() -> k
    jxl.format.ScriptStyle getScriptStyle() -> l
    java.lang.String getName() -> m
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean isStruckout() -> n
jxl.biff.FontRecord$1 -> a.a.ah:
jxl.biff.FontRecord$Biff7 -> a.a.ai:
jxl.biff.Fonts -> a.a.aj:
    java.util.ArrayList fonts -> a
    void addFont(jxl.biff.FontRecord) -> a
    jxl.biff.FontRecord getFont(int) -> a
    void write(jxl.write.biff.File) -> a
    jxl.biff.IndexMapping rationalize() -> a
jxl.biff.FormatRecord -> a.a.ak:
    jxl.common.Logger logger -> a
    boolean initialized -> d
    byte[] data -> e
    int indexCode -> f
    java.lang.String formatString -> g
    boolean date -> h
    boolean number -> i
    java.lang.String[] dateStrings -> j
    jxl.biff.FormatRecord$BiffType biff8 -> b
    jxl.biff.FormatRecord$BiffType biff7 -> c
    byte[] getData() -> a
    int getFormatIndex() -> a_
    boolean isInitialized() -> b_
    void initialize(int) -> a
    java.lang.String replace(java.lang.String,java.lang.String,java.lang.String) -> a
    void setFormatString(java.lang.String) -> a
    boolean isBuiltIn() -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
jxl.biff.FormatRecord$1 -> a.a.al:
jxl.biff.FormatRecord$BiffType -> a.a.am:
jxl.biff.FormattingRecords -> a.a.an:
    jxl.common.Logger logger -> a
    java.util.HashMap formats -> b
    java.util.ArrayList formatsList -> c
    java.util.ArrayList xfRecords -> d
    int nextCustomIndexNumber -> e
    jxl.biff.Fonts fonts -> f
    jxl.biff.PaletteRecord palette -> g
    void addStyle(jxl.biff.XFRecord) -> a
    void addFormat(jxl.biff.DisplayFormat) -> a
    jxl.biff.FormatRecord getFormatRecord(int) -> a
    void write(jxl.write.biff.File) -> a
    jxl.biff.Fonts getFonts() -> a
    jxl.biff.IndexMapping rationalizeFonts() -> b
    jxl.biff.IndexMapping rationalize(jxl.biff.IndexMapping,jxl.biff.IndexMapping) -> a
    jxl.biff.IndexMapping rationalizeDisplayFormats() -> c
    jxl.biff.PaletteRecord getPalette() -> d
jxl.biff.HeaderFooter -> a.a.ao:
    jxl.common.Logger logger -> a
    jxl.biff.HeaderFooter$Contents left -> b
    jxl.biff.HeaderFooter$Contents right -> c
    jxl.biff.HeaderFooter$Contents centre -> d
    java.lang.String toString() -> toString
    jxl.biff.HeaderFooter$Contents createContents() -> a
jxl.biff.HeaderFooter$Contents -> a.a.ap:
    java.lang.StringBuffer contents -> a
    java.lang.String getContents() -> b
    boolean empty() -> a
jxl.biff.IndexMapping -> a.a.aq:
    jxl.common.Logger logger -> a
    int[] newIndices -> b
    void setMapping(int,int) -> a
    int getNewIndex(int) -> a
jxl.biff.IntegerHelper -> a.a.ar:
    int getInt(byte,byte) -> a
    short getShort(byte,byte) -> b
    int getInt(byte,byte,byte,byte) -> a
    byte[] getFourBytes(int) -> a
    void getTwoBytes(int,byte[],int) -> a
    void getFourBytes(int,byte[],int) -> b
jxl.biff.NameRangeException -> a.a.as:
jxl.biff.NumFormatRecordsException -> a.a.at:
jxl.biff.PaletteRecord -> a.a.au:
    jxl.format.RGB[] rgbColours -> a
    boolean dirty -> b
    boolean read -> c
    byte[] getData() -> a
jxl.biff.RecordData -> a.a.av:
    jxl.read.biff.Record record -> a
    int code -> b
    jxl.read.biff.Record getRecord() -> g_
    int getCode() -> o
jxl.biff.SheetRangeImpl -> a.a.aw:
    jxl.Sheet sheet -> a
    int column1 -> b
    int row1 -> c
    int column2 -> d
    int row2 -> e
    jxl.Cell getTopLeft() -> a
    jxl.Cell getBottomRight() -> b
    boolean intersects(jxl.biff.SheetRangeImpl) -> a
    java.lang.String toString() -> toString
    void insertRow(int) -> a
    void insertColumn(int) -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
jxl.biff.StringHelper -> a.a.ax:
    jxl.common.Logger logger -> b
    java.lang.String UNICODE_ENCODING -> a
    byte[] getBytes(java.lang.String) -> a
    byte[] getBytes(java.lang.String,jxl.WorkbookSettings) -> a
    byte[] getUnicodeBytes(java.lang.String) -> b
    void getBytes(java.lang.String,byte[],int) -> a
    void getUnicodeBytes(java.lang.String,byte[],int) -> b
    java.lang.String getString(byte[],int,int,jxl.WorkbookSettings) -> a
    java.lang.String getUnicodeString(byte[],int,int) -> a
    java.lang.String replace(java.lang.String,java.lang.String,java.lang.String) -> a
jxl.biff.Type -> a.a.ay:
    int value -> a
    jxl.biff.Type[] types -> bs
    jxl.biff.Type$ArbitraryType arbitrary -> bt
    jxl.biff.Type BOF -> b
    jxl.biff.Type EOF -> c
    jxl.biff.Type BOUNDSHEET -> d
    jxl.biff.Type SUPBOOK -> e
    jxl.biff.Type EXTERNSHEET -> f
    jxl.biff.Type DIMENSION -> g
    jxl.biff.Type BLANK -> h
    jxl.biff.Type MULBLANK -> i
    jxl.biff.Type ROW -> j
    jxl.biff.Type NOTE -> k
    jxl.biff.Type TXO -> l
    jxl.biff.Type RK -> m
    jxl.biff.Type RK2 -> n
    jxl.biff.Type MULRK -> o
    jxl.biff.Type INDEX -> p
    jxl.biff.Type DBCELL -> q
    jxl.biff.Type SST -> r
    jxl.biff.Type COLINFO -> s
    jxl.biff.Type EXTSST -> t
    jxl.biff.Type CONTINUE -> u
    jxl.biff.Type LABEL -> v
    jxl.biff.Type RSTRING -> w
    jxl.biff.Type LABELSST -> x
    jxl.biff.Type NUMBER -> y
    jxl.biff.Type NAME -> z
    jxl.biff.Type TABID -> A
    jxl.biff.Type ARRAY -> B
    jxl.biff.Type STRING -> C
    jxl.biff.Type FORMULA -> D
    jxl.biff.Type FORMULA2 -> E
    jxl.biff.Type SHAREDFORMULA -> F
    jxl.biff.Type FORMAT -> G
    jxl.biff.Type XF -> H
    jxl.biff.Type BOOLERR -> I
    jxl.biff.Type INTERFACEHDR -> J
    jxl.biff.Type SAVERECALC -> K
    jxl.biff.Type INTERFACEEND -> L
    jxl.biff.Type XCT -> M
    jxl.biff.Type CRN -> N
    jxl.biff.Type DEFCOLWIDTH -> O
    jxl.biff.Type DEFAULTROWHEIGHT -> P
    jxl.biff.Type WRITEACCESS -> Q
    jxl.biff.Type WSBOOL -> R
    jxl.biff.Type CODEPAGE -> S
    jxl.biff.Type DSF -> T
    jxl.biff.Type FNGROUPCOUNT -> U
    jxl.biff.Type FILTERMODE -> V
    jxl.biff.Type AUTOFILTERINFO -> W
    jxl.biff.Type AUTOFILTER -> X
    jxl.biff.Type COUNTRY -> Y
    jxl.biff.Type PROTECT -> Z
    jxl.biff.Type SCENPROTECT -> aa
    jxl.biff.Type OBJPROTECT -> ab
    jxl.biff.Type PRINTHEADERS -> ac
    jxl.biff.Type HEADER -> ad
    jxl.biff.Type FOOTER -> ae
    jxl.biff.Type HCENTER -> af
    jxl.biff.Type VCENTER -> ag
    jxl.biff.Type FILEPASS -> ah
    jxl.biff.Type SETUP -> ai
    jxl.biff.Type PRINTGRIDLINES -> aj
    jxl.biff.Type GRIDSET -> ak
    jxl.biff.Type GUTS -> al
    jxl.biff.Type WINDOWPROTECT -> am
    jxl.biff.Type PROT4REV -> an
    jxl.biff.Type PROT4REVPASS -> ao
    jxl.biff.Type PASSWORD -> ap
    jxl.biff.Type REFRESHALL -> aq
    jxl.biff.Type WINDOW1 -> ar
    jxl.biff.Type WINDOW2 -> as
    jxl.biff.Type BACKUP -> at
    jxl.biff.Type HIDEOBJ -> au
    jxl.biff.Type NINETEENFOUR -> av
    jxl.biff.Type PRECISION -> aw
    jxl.biff.Type BOOKBOOL -> ax
    jxl.biff.Type FONT -> ay
    jxl.biff.Type MMS -> az
    jxl.biff.Type CALCMODE -> aA
    jxl.biff.Type CALCCOUNT -> aB
    jxl.biff.Type REFMODE -> aC
    jxl.biff.Type TEMPLATE -> aD
    jxl.biff.Type OBJPROJ -> aE
    jxl.biff.Type DELTA -> aF
    jxl.biff.Type MERGEDCELLS -> aG
    jxl.biff.Type ITERATION -> aH
    jxl.biff.Type STYLE -> aI
    jxl.biff.Type USESELFS -> aJ
    jxl.biff.Type VERTICALPAGEBREAKS -> aK
    jxl.biff.Type HORIZONTALPAGEBREAKS -> aL
    jxl.biff.Type SELECTION -> aM
    jxl.biff.Type HLINK -> aN
    jxl.biff.Type OBJ -> aO
    jxl.biff.Type MSODRAWING -> aP
    jxl.biff.Type MSODRAWINGGROUP -> aQ
    jxl.biff.Type LEFTMARGIN -> aR
    jxl.biff.Type RIGHTMARGIN -> aS
    jxl.biff.Type TOPMARGIN -> aT
    jxl.biff.Type BOTTOMMARGIN -> aU
    jxl.biff.Type EXTERNNAME -> aV
    jxl.biff.Type PALETTE -> aW
    jxl.biff.Type PLS -> aX
    jxl.biff.Type SCL -> aY
    jxl.biff.Type PANE -> aZ
    jxl.biff.Type WEIRD1 -> ba
    jxl.biff.Type SORT -> bb
    jxl.biff.Type CONDFMT -> bc
    jxl.biff.Type CF -> bd
    jxl.biff.Type DV -> be
    jxl.biff.Type DVAL -> bf
    jxl.biff.Type BUTTONPROPERTYSET -> bg
    jxl.biff.Type EXCEL9FILE -> bh
    jxl.biff.Type FONTX -> bi
    jxl.biff.Type IFMT -> bj
    jxl.biff.Type FBI -> bk
    jxl.biff.Type ALRUNS -> bl
    jxl.biff.Type SERIES -> bm
    jxl.biff.Type SERIESLIST -> bn
    jxl.biff.Type SBASEREF -> bo
    jxl.biff.Type UNKNOWN -> bp
    jxl.biff.Type U1C0 -> bq
    jxl.biff.Type U1C1 -> br
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    jxl.biff.Type getType(int) -> a
jxl.biff.Type$1 -> a.a.az:
jxl.biff.Type$ArbitraryType -> a.a.ba:
jxl.biff.WorkbookMethods -> a.a.bb:
    java.lang.String getName(int) -> a
    int getNameIndex(java.lang.String) -> a
jxl.biff.WorkspaceInformationRecord -> a.a.bc:
    jxl.common.Logger logger -> a
    int wsoptions -> b
    boolean rowOutlines -> c
    boolean columnOutlines -> d
    boolean fitToPages -> e
    void setFitToPages(boolean) -> a
    void setRowOutlines(boolean) -> b
    void setColumnOutlines(boolean) -> c
    byte[] getData() -> a
jxl.biff.WritableRecordData -> a.a.bd:
    jxl.common.Logger logger -> a
    byte[] getBytes() -> g
    byte[] handleContinueRecords(byte[]) -> a
    byte[] getData() -> a
jxl.biff.XCTRecord -> a.a.be:
    byte[] getData() -> a
jxl.biff.XFRecord -> a.a.bf:
    jxl.common.Logger logger -> f
    int formatIndex -> a
    int parentFormat -> g
    jxl.biff.XFRecord$XFType xfFormatType -> h
    java.text.NumberFormat numberFormat -> i
    byte usedAttributes -> j
    int fontIndex -> k
    boolean locked -> l
    boolean hidden -> m
    jxl.format.Alignment align -> n
    jxl.format.VerticalAlignment valign -> o
    jxl.format.Orientation orientation -> p
    boolean wrap -> q
    int indentation -> r
    boolean shrinkToFit -> s
    jxl.format.BorderLineStyle leftBorder -> t
    jxl.format.BorderLineStyle rightBorder -> u
    jxl.format.BorderLineStyle topBorder -> v
    jxl.format.BorderLineStyle bottomBorder -> w
    jxl.format.Colour leftBorderColour -> x
    jxl.format.Colour rightBorderColour -> y
    jxl.format.Colour topBorderColour -> z
    jxl.format.Colour bottomBorderColour -> A
    jxl.format.Colour backgroundColour -> B
    jxl.format.Pattern pattern -> C
    int options -> D
    int xfIndex -> E
    jxl.biff.FontRecord font -> F
    jxl.biff.DisplayFormat format -> G
    boolean initialized -> H
    boolean read -> I
    jxl.format.Format excelFormat -> J
    boolean formatInfoInitialized -> K
    boolean copied -> L
    jxl.biff.FormattingRecords formattingRecords -> M
    int[] dateFormats -> N
    java.text.DateFormat[] javaDateFormats -> O
    int[] numberFormats -> P
    java.text.NumberFormat[] javaNumberFormats -> Q
    jxl.biff.XFRecord$BiffType biff8 -> b
    jxl.biff.XFRecord$BiffType biff7 -> c
    jxl.biff.XFRecord$BiffType biffType -> R
    jxl.biff.XFRecord$XFType cell -> d
    jxl.biff.XFRecord$XFType style -> e
    java.text.NumberFormat getNumberFormat() -> c
    int getFormatRecord() -> d
    byte[] getData() -> a
    boolean getLocked() -> e
    boolean getHidden() -> f
    void setXFLocked(boolean) -> a
    void setXFCellOptions(int) -> a
    void setXFAlignment(jxl.format.Alignment) -> a
    void setXFBorder(jxl.format.Border,jxl.format.BorderLineStyle,jxl.format.Colour) -> a
    jxl.format.BorderLineStyle getBorderLine(jxl.format.Border) -> a
    jxl.format.Colour getBorderColour(jxl.format.Border) -> b
    boolean hasBorders() -> h
    void initialize(int,jxl.biff.FormattingRecords,jxl.biff.Fonts) -> a
    void uninitialize() -> i
    int getXFIndex() -> j
    boolean isInitialized() -> k
    boolean isRead() -> l
    jxl.format.Format getFormat() -> m
    jxl.format.Font getFont() -> n
    void initializeFormatInformation() -> q
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void setFormatIndex(int) -> b
    int getFontIndex() -> p
    void setFontIndex(int) -> c
    void setXFDetails(jxl.biff.XFRecord$XFType,int) -> a
    void rationalize(jxl.biff.IndexMapping) -> a
    void setFont(jxl.biff.FontRecord) -> a
jxl.biff.XFRecord$1 -> a.a.bg:
jxl.biff.XFRecord$BiffType -> a.a.bh:
jxl.biff.XFRecord$XFType -> a.a.bi:
jxl.biff.drawing.BStoreContainer -> a.a.a.a:
    jxl.common.Logger logger -> a
    int numBlips -> b
    void setNumBlips(int) -> a
    int getNumBlips() -> c_
jxl.biff.drawing.BlipStoreEntry -> a.a.a.b:
    jxl.common.Logger logger -> a
    jxl.biff.drawing.BlipType type -> b
    byte[] data -> c
    int imageDataLength -> d
    int referenceCount -> e
    boolean write -> f
    byte[] getData() -> a
    byte[] getImageData() -> b
jxl.biff.drawing.BlipType -> a.a.a.c:
    int value -> k
    java.lang.String desc -> l
    jxl.biff.drawing.BlipType[] types -> m
    jxl.biff.drawing.BlipType ERROR -> a
    jxl.biff.drawing.BlipType UNKNOWN -> b
    jxl.biff.drawing.BlipType EMF -> c
    jxl.biff.drawing.BlipType WMF -> d
    jxl.biff.drawing.BlipType PICT -> e
    jxl.biff.drawing.BlipType JPEG -> f
    jxl.biff.drawing.BlipType PNG -> g
    jxl.biff.drawing.BlipType DIB -> h
    jxl.biff.drawing.BlipType FIRST_CLIENT -> i
    jxl.biff.drawing.BlipType LAST_CLIENT -> j
    int getValue() -> a
    jxl.biff.drawing.BlipType getType(int) -> a
jxl.biff.drawing.Chart -> a.a.a.d:
    jxl.common.Logger logger -> a
    jxl.biff.drawing.MsoDrawingRecord msoDrawingRecord -> b
    jxl.biff.drawing.ObjRecord objRecord -> c
    int startpos -> d
    int endpos -> e
    jxl.read.biff.File file -> f
    jxl.biff.drawing.DrawingData drawingData -> g
    int drawingNumber -> h
    byte[] data -> i
    boolean initialized -> j
    byte[] getBytes() -> g
    byte[] getData() -> a
    void initialize() -> e
    void rationalize(jxl.biff.IndexMapping,jxl.biff.IndexMapping,jxl.biff.IndexMapping) -> a
    jxl.biff.drawing.EscherContainer getSpContainer() -> b
    jxl.biff.drawing.MsoDrawingRecord getMsoDrawingRecord() -> c
    jxl.biff.drawing.ObjRecord getObjRecord() -> d
jxl.biff.drawing.ClientAnchor -> a.a.a.e:
    jxl.common.Logger logger -> a
    byte[] data -> b
    int properties -> c
    double x1 -> d
    double y1 -> e
    double x2 -> f
    double y2 -> g
    byte[] getData() -> a
    double getX1() -> b
    double getY1() -> c
    double getX2() -> d
    double getY2() -> e
    int getProperties() -> f
jxl.biff.drawing.ClientData -> a.a.a.f:
    jxl.common.Logger logger -> a
    byte[] data -> b
    byte[] getData() -> a
jxl.biff.drawing.ClientTextBox -> a.a.a.g:
    jxl.common.Logger logger -> a
    byte[] data -> b
    byte[] getData() -> a
jxl.biff.drawing.ComboBox -> a.a.a.h:
    jxl.common.Logger logger -> a
    jxl.biff.drawing.EscherContainer readSpContainer -> b
    jxl.biff.drawing.MsoDrawingRecord msoDrawingRecord -> c
    jxl.biff.drawing.ObjRecord objRecord -> d
    boolean initialized -> e
    int objectId -> f
    int blipId -> g
    int shapeId -> h
    int column -> i
    int row -> j
    int referenceCount -> k
    jxl.biff.drawing.Origin origin -> l
    jxl.biff.drawing.DrawingGroup drawingGroup -> m
    jxl.biff.drawing.DrawingData drawingData -> n
    jxl.biff.drawing.ShapeType type -> o
    int drawingNumber -> p
    void initialize() -> h
    void setObjectId(int,int,int) -> a
    int getObjectId() -> a
    jxl.biff.drawing.MsoDrawingRecord getMsoDrawingRecord() -> b
    jxl.biff.drawing.EscherContainer getSpContainer() -> c
    void setDrawingGroup(jxl.biff.drawing.DrawingGroup) -> a
    jxl.biff.drawing.Origin getOrigin() -> d
    jxl.biff.drawing.EscherContainer getReadSpContainer() -> i
    java.lang.String getImageFilePath() -> e
    void writeAdditionalRecords(jxl.write.biff.File) -> a
    void writeTailRecords(jxl.write.biff.File) -> b
    int hashCode() -> hashCode
    boolean isFirst() -> f
    boolean isFormObject() -> g
jxl.biff.drawing.Comment -> a.a.a.i:
    jxl.common.Logger logger -> a
    jxl.biff.drawing.EscherContainer readSpContainer -> b
    jxl.biff.drawing.EscherContainer spContainer -> c
    jxl.biff.drawing.MsoDrawingRecord msoDrawingRecord -> d
    jxl.biff.drawing.ObjRecord objRecord -> e
    boolean initialized -> f
    int objectId -> g
    int blipId -> h
    int shapeId -> i
    int column -> j
    int row -> k
    double width -> l
    double height -> m
    int referenceCount -> n
    jxl.biff.drawing.Origin origin -> o
    jxl.biff.drawing.DrawingGroup drawingGroup -> p
    jxl.biff.drawing.DrawingData drawingData -> q
    jxl.biff.drawing.ShapeType type -> r
    int drawingNumber -> s
    jxl.biff.drawing.MsoDrawingRecord mso -> t
    jxl.biff.drawing.TextObjectRecord txo -> u
    jxl.biff.drawing.NoteRecord note -> v
    jxl.biff.ContinueRecord text -> w
    jxl.biff.ContinueRecord formatting -> x
    java.lang.String commentText -> y
    jxl.WorkbookSettings workbookSettings -> z
    void initialize() -> h
    void setObjectId(int,int,int) -> a
    jxl.biff.drawing.MsoDrawingRecord getMsoDrawingRecord() -> b
    jxl.biff.drawing.EscherContainer getSpContainer() -> c
    void setDrawingGroup(jxl.biff.drawing.DrawingGroup) -> a
    jxl.biff.drawing.Origin getOrigin() -> d
    void setX(double) -> a
    void setY(double) -> b
    void setWidth(double) -> c
    void setHeight(double) -> d
    jxl.biff.drawing.EscherContainer getReadSpContainer() -> i
    java.lang.String getImageFilePath() -> e
    void writeAdditionalRecords(jxl.write.biff.File) -> a
    void writeTailRecords(jxl.write.biff.File) -> b
    java.lang.String getText() -> a
    int hashCode() -> hashCode
    boolean isFirst() -> f
    boolean isFormObject() -> g
jxl.biff.drawing.Dg -> a.a.a.j:
    byte[] data -> a
    int drawingId -> b
    int shapeCount -> c
    int seed -> d
    byte[] getData() -> a
jxl.biff.drawing.DgContainer -> a.a.a.k:
jxl.biff.drawing.Dgg -> a.a.a.l:
    jxl.common.Logger logger -> a
    byte[] data -> b
    int numClusters -> c
    int maxShapeId -> d
    int shapesSaved -> e
    int drawingsSaved -> f
    java.util.ArrayList clusters -> g
    void addCluster(int,int) -> a
    byte[] getData() -> a
    jxl.biff.drawing.Dgg$Cluster getCluster(int) -> a
jxl.biff.drawing.Dgg$Cluster -> a.a.a.m:
    int drawingGroupId -> a
    int shapeIdsUsed -> b
jxl.biff.drawing.DggContainer -> a.a.a.n:
jxl.biff.drawing.Drawing -> a.a.a.o:
    jxl.common.Logger logger -> d
    jxl.biff.drawing.EscherContainer readSpContainer -> e
    jxl.biff.drawing.MsoDrawingRecord msoDrawingRecord -> f
    jxl.biff.drawing.ObjRecord objRecord -> g
    boolean initialized -> h
    java.io.File imageFile -> i
    byte[] imageData -> j
    int objectId -> k
    int blipId -> l
    double x -> m
    double y -> n
    double width -> o
    double height -> p
    int referenceCount -> q
    jxl.biff.drawing.Origin origin -> r
    jxl.biff.drawing.DrawingGroup drawingGroup -> s
    jxl.biff.drawing.DrawingData drawingData -> t
    jxl.biff.drawing.ShapeType type -> u
    int shapeId -> v
    int drawingNumber -> w
    jxl.biff.drawing.Drawing$ImageAnchorProperties imageAnchorProperties -> x
    jxl.biff.drawing.Drawing$ImageAnchorProperties MOVE_AND_SIZE_WITH_CELLS -> a
    jxl.biff.drawing.Drawing$ImageAnchorProperties MOVE_WITH_CELLS -> b
    jxl.biff.drawing.Drawing$ImageAnchorProperties NO_MOVE_OR_SIZE_WITH_CELLS -> c
    void initialize() -> m
    java.lang.String getImageFilePath() -> e
    void setObjectId(int,int,int) -> a
    int getObjectId() -> a
    int getShapeId() -> h
    int getBlipId() -> i
    jxl.biff.drawing.MsoDrawingRecord getMsoDrawingRecord() -> b
    jxl.biff.drawing.EscherContainer getSpContainer() -> c
    void setDrawingGroup(jxl.biff.drawing.DrawingGroup) -> a
    jxl.biff.drawing.Origin getOrigin() -> d
    int getReferenceCount() -> j
    void setReferenceCount(int) -> a
    jxl.biff.drawing.EscherContainer getReadSpContainer() -> n
    byte[] getImageData() -> k
    byte[] getImageBytes() -> l
    void writeAdditionalRecords(jxl.write.biff.File) -> a
    void writeTailRecords(jxl.write.biff.File) -> b
    boolean isFirst() -> f
    boolean isFormObject() -> g
jxl.biff.drawing.Drawing$ImageAnchorProperties -> a.a.a.p:
    int value -> a
    jxl.biff.drawing.Drawing$ImageAnchorProperties[] o -> b
    int getValue() -> a
    jxl.biff.drawing.Drawing$ImageAnchorProperties getImageAnchorProperties(int) -> a
jxl.biff.drawing.DrawingData -> a.a.a.q:
    jxl.common.Logger logger -> a
    byte[] drawingData -> b
    int numDrawings -> c
    boolean initialized -> d
    jxl.biff.drawing.EscherRecord[] spContainers -> e
    void initialize() -> b
    void getSpContainers(jxl.biff.drawing.EscherContainer,java.util.ArrayList) -> a
    jxl.biff.drawing.EscherContainer getSpContainer(int) -> a
    byte[] getData() -> a
jxl.biff.drawing.DrawingDataException -> a.a.a.r:
    java.lang.String message -> a
jxl.biff.drawing.DrawingGroup -> a.a.a.s:
    jxl.common.Logger logger -> a
    byte[] drawingData -> b
    jxl.biff.drawing.EscherContainer escherData -> c
    jxl.biff.drawing.BStoreContainer bstoreContainer -> d
    boolean initialized -> e
    java.util.ArrayList drawings -> f
    int numBlips -> g
    int numCharts -> h
    int drawingGroupId -> i
    boolean drawingsOmitted -> j
    jxl.biff.drawing.Origin origin -> k
    java.util.HashMap imageFiles -> l
    int maxObjectId -> m
    int maxShapeId -> n
    void add(jxl.biff.drawing.DrawingGroupObject) -> a
    void initialize() -> c
    jxl.biff.drawing.BStoreContainer getBStoreContainer() -> d
    byte[] getData() -> a
    void write(jxl.write.biff.File) -> a
    byte[] getImageData(int) -> a
    boolean hasDrawingsOmitted() -> b
jxl.biff.drawing.DrawingGroupObject -> a.a.a.t:
    void setObjectId(int,int,int) -> a
    jxl.biff.drawing.MsoDrawingRecord getMsoDrawingRecord() -> b
    jxl.biff.drawing.EscherContainer getSpContainer() -> c
    void setDrawingGroup(jxl.biff.drawing.DrawingGroup) -> a
    jxl.biff.drawing.Origin getOrigin() -> d
    java.lang.String getImageFilePath() -> e
    void writeAdditionalRecords(jxl.write.biff.File) -> a
    void writeTailRecords(jxl.write.biff.File) -> b
    boolean isFirst() -> f
    boolean isFormObject() -> g
jxl.biff.drawing.EscherAtom -> a.a.a.u:
    jxl.common.Logger logger -> a
    byte[] getData() -> a
jxl.biff.drawing.EscherContainer -> a.a.a.v:
    jxl.common.Logger logger -> a
    boolean initialized -> b
    java.util.ArrayList children -> c
    jxl.biff.drawing.EscherRecord[] getChildren() -> b
    void add(jxl.biff.drawing.EscherRecord) -> a
    void initialize() -> c
    byte[] getData() -> a
jxl.biff.drawing.EscherRecord -> a.a.a.w:
    jxl.common.Logger logger -> a
    jxl.biff.drawing.EscherRecordData data -> b
    void setContainer(boolean) -> a
    int getLength() -> g
    jxl.biff.drawing.EscherStream getEscherStream() -> h
    int getPos() -> i
    int getInstance() -> j
    void setInstance(int) -> b
    void setVersion(int) -> c
    jxl.biff.drawing.EscherRecordType getType() -> k
    byte[] getData() -> a
    byte[] setHeaderData(byte[]) -> a
    byte[] getBytes() -> l
    int getStreamLength() -> m
jxl.biff.drawing.EscherRecordData -> a.a.a.x:
    jxl.common.Logger logger -> a
    int pos -> b
    int instance -> c
    int version -> d
    int recordId -> e
    int length -> f
    int streamLength -> g
    boolean container -> h
    jxl.biff.drawing.EscherRecordType type -> i
    jxl.biff.drawing.EscherStream escherStream -> j
    boolean isContainer() -> a
    int getLength() -> b
    int getPos() -> c
    jxl.biff.drawing.EscherRecordType getType() -> d
    int getInstance() -> e
    void setContainer(boolean) -> a
    void setInstance(int) -> a
    void setVersion(int) -> b
    byte[] setHeaderData(byte[]) -> a
    jxl.biff.drawing.EscherStream getEscherStream() -> f
    byte[] getBytes() -> g
    int getStreamLength() -> h
jxl.biff.drawing.EscherRecordType -> a.a.a.y:
    int value -> q
    jxl.biff.drawing.EscherRecordType[] types -> r
    jxl.biff.drawing.EscherRecordType UNKNOWN -> a
    jxl.biff.drawing.EscherRecordType DGG_CONTAINER -> b
    jxl.biff.drawing.EscherRecordType BSTORE_CONTAINER -> c
    jxl.biff.drawing.EscherRecordType DG_CONTAINER -> d
    jxl.biff.drawing.EscherRecordType SPGR_CONTAINER -> e
    jxl.biff.drawing.EscherRecordType SP_CONTAINER -> f
    jxl.biff.drawing.EscherRecordType DGG -> g
    jxl.biff.drawing.EscherRecordType BSE -> h
    jxl.biff.drawing.EscherRecordType DG -> i
    jxl.biff.drawing.EscherRecordType SPGR -> j
    jxl.biff.drawing.EscherRecordType SP -> k
    jxl.biff.drawing.EscherRecordType OPT -> l
    jxl.biff.drawing.EscherRecordType CLIENT_ANCHOR -> m
    jxl.biff.drawing.EscherRecordType CLIENT_DATA -> n
    jxl.biff.drawing.EscherRecordType CLIENT_TEXT_BOX -> o
    jxl.biff.drawing.EscherRecordType SPLIT_MENU_COLORS -> p
    int getValue() -> a
    jxl.biff.drawing.EscherRecordType getType(int) -> a
jxl.biff.drawing.EscherStream -> a.a.a.z:
    byte[] getData() -> a
jxl.biff.drawing.MsoDrawingGroupRecord -> a.a.a.aa:
    byte[] data -> a
    byte[] getData() -> a
jxl.biff.drawing.MsoDrawingRecord -> a.a.a.ab:
    jxl.common.Logger logger -> a
    boolean first -> b
    byte[] data -> c
    byte[] getData() -> a
    jxl.read.biff.Record getRecord() -> g_
    boolean isFirst() -> c
jxl.biff.drawing.NoteRecord -> a.a.a.ac:
    jxl.common.Logger logger -> a
    byte[] data -> b
    int row -> c
    int column -> d
    int objectId -> e
    byte[] getData() -> a
jxl.biff.drawing.ObjRecord -> a.a.a.ad:
    jxl.common.Logger logger -> y
    jxl.biff.drawing.ObjRecord$ObjType type -> z
    boolean read -> A
    int objectId -> B
    jxl.biff.drawing.ObjRecord$ObjType GROUP -> a
    jxl.biff.drawing.ObjRecord$ObjType LINE -> b
    jxl.biff.drawing.ObjRecord$ObjType RECTANGLE -> c
    jxl.biff.drawing.ObjRecord$ObjType OVAL -> d
    jxl.biff.drawing.ObjRecord$ObjType ARC -> e
    jxl.biff.drawing.ObjRecord$ObjType CHART -> f
    jxl.biff.drawing.ObjRecord$ObjType TEXT -> g
    jxl.biff.drawing.ObjRecord$ObjType BUTTON -> h
    jxl.biff.drawing.ObjRecord$ObjType PICTURE -> i
    jxl.biff.drawing.ObjRecord$ObjType POLYGON -> j
    jxl.biff.drawing.ObjRecord$ObjType CHECKBOX -> k
    jxl.biff.drawing.ObjRecord$ObjType OPTION -> l
    jxl.biff.drawing.ObjRecord$ObjType EDITBOX -> m
    jxl.biff.drawing.ObjRecord$ObjType LABEL -> n
    jxl.biff.drawing.ObjRecord$ObjType DIALOGUEBOX -> o
    jxl.biff.drawing.ObjRecord$ObjType SPINBOX -> p
    jxl.biff.drawing.ObjRecord$ObjType SCROLLBAR -> q
    jxl.biff.drawing.ObjRecord$ObjType LISTBOX -> r
    jxl.biff.drawing.ObjRecord$ObjType GROUPBOX -> s
    jxl.biff.drawing.ObjRecord$ObjType COMBOBOX -> t
    jxl.biff.drawing.ObjRecord$ObjType MSOFFICEDRAWING -> u
    jxl.biff.drawing.ObjRecord$ObjType FORMCONTROL -> v
    jxl.biff.drawing.ObjRecord$ObjType EXCELNOTE -> w
    jxl.biff.drawing.ObjRecord$ObjType UNKNOWN -> x
    byte[] getData() -> a
    byte[] getPictureData() -> d
    byte[] getNoteData() -> e
    byte[] getComboBoxData() -> f
    jxl.read.biff.Record getRecord() -> g_
    int getObjectId() -> c
jxl.biff.drawing.ObjRecord$ObjType -> a.a.a.ae:
    int value -> a
    java.lang.String desc -> b
    jxl.biff.drawing.ObjRecord$ObjType[] types -> c
    java.lang.String toString() -> toString
jxl.biff.drawing.Opt -> a.a.a.af:
    jxl.common.Logger logger -> a
    byte[] data -> b
    int numProperties -> c
    java.util.ArrayList properties -> d
    void readProperties() -> b
    byte[] getData() -> a
    void addProperty(int,boolean,boolean,int) -> a
    void addProperty(int,boolean,boolean,int,java.lang.String) -> a
    jxl.biff.drawing.Opt$Property getProperty(int) -> a
jxl.biff.drawing.Opt$Property -> a.a.a.ag:
    int id -> a
    boolean blipId -> b
    boolean complex -> c
    int value -> d
    java.lang.String stringValue -> e
jxl.biff.drawing.Origin -> a.a.a.ah:
    jxl.biff.drawing.Origin READ -> a
    jxl.biff.drawing.Origin WRITE -> b
    jxl.biff.drawing.Origin READ_WRITE -> c
jxl.biff.drawing.ShapeType -> a.a.a.ai:
    int value -> f
    jxl.biff.drawing.ShapeType[] types -> g
    jxl.biff.drawing.ShapeType MIN -> a
    jxl.biff.drawing.ShapeType PICTURE_FRAME -> b
    jxl.biff.drawing.ShapeType HOST_CONTROL -> c
    jxl.biff.drawing.ShapeType TEXT_BOX -> d
    jxl.biff.drawing.ShapeType UNKNOWN -> e
    jxl.biff.drawing.ShapeType getType(int) -> a
    int getValue() -> a
jxl.biff.drawing.SheetDrawingWriter -> a.a.a.aj:
    jxl.common.Logger logger -> a
    java.util.ArrayList drawings -> b
    boolean drawingsModified -> c
    jxl.biff.drawing.Chart[] charts -> d
    void setDrawings(java.util.ArrayList,boolean) -> a
    void write(jxl.write.biff.File) -> a
    void writeUnmodified(jxl.write.biff.File) -> b
    jxl.biff.drawing.Chart[] getCharts() -> a
jxl.biff.drawing.Sp -> a.a.a.ak:
    jxl.common.Logger logger -> a
    byte[] data -> b
    int shapeType -> c
    int shapeId -> d
    int persistenceFlags -> e
    int getShapeId() -> b
    int getShapeType() -> c
    byte[] getData() -> a
jxl.biff.drawing.SpContainer -> a.a.a.al:
jxl.biff.drawing.Spgr -> a.a.a.am:
    byte[] data -> a
    byte[] getData() -> a
jxl.biff.drawing.SpgrContainer -> a.a.a.an:
    jxl.common.Logger logger -> a
jxl.biff.drawing.SplitMenuColors -> a.a.a.ao:
    byte[] data -> a
    byte[] getData() -> a
jxl.biff.drawing.TextObjectRecord -> a.a.a.ap:
    jxl.common.Logger logger -> a
    byte[] data -> b
    int textLength -> c
    byte[] getData() -> a
jxl.biff.formula.Add -> a.a.b.a:
    java.lang.String getSymbol() -> a
    jxl.biff.formula.Token getToken() -> b
    int getPrecedence() -> d_
jxl.biff.formula.Area -> a.a.b.b:
    jxl.common.Logger logger -> a
    int columnFirst -> b
    int rowFirst -> c
    int columnLast -> d
    int rowLast -> e
    boolean columnFirstRelative -> f
    boolean rowFirstRelative -> g
    boolean columnLastRelative -> h
    boolean rowLastRelative -> i
    int getFirstColumn() -> a
    int getLastColumn() -> b
    int read(byte[],int) -> a
    void getString(java.lang.StringBuffer) -> a
    byte[] getBytes() -> c
    void columnInserted(int,int,boolean) -> a
    void rowInserted(int,int,boolean) -> b
    void setRangeData(int,int,int,int,boolean,boolean,boolean,boolean) -> a
jxl.biff.formula.Area3d -> a.a.b.c:
    jxl.common.Logger logger -> a
    int sheet -> b
    int columnFirst -> c
    int rowFirst -> d
    int columnLast -> e
    int rowLast -> f
    boolean columnFirstRelative -> g
    boolean rowFirstRelative -> h
    boolean columnLastRelative -> i
    boolean rowLastRelative -> j
    jxl.biff.formula.ExternalSheet workbook -> k
    int getFirstColumn() -> a
    int getLastColumn() -> b
    int read(byte[],int) -> a
    void getString(java.lang.StringBuffer) -> a
    byte[] getBytes() -> c
    void columnInserted(int,int,boolean) -> a
    void rowInserted(int,int,boolean) -> b
    void setRangeData(int,int,int,int,int,boolean,boolean,boolean,boolean) -> a
jxl.biff.formula.ArgumentSeparator -> a.a.b.d:
jxl.biff.formula.Attribute -> a.a.b.e:
    jxl.common.Logger logger -> a
    int options -> b
    int word -> c
    jxl.WorkbookSettings settings -> d
    jxl.biff.formula.VariableArgFunction ifConditions -> e
    void setIfConditions(jxl.biff.formula.VariableArgFunction) -> a
    int read(byte[],int) -> a
    boolean isSum() -> a
    boolean isIf() -> b
    boolean isChoose() -> d
    void getOperands(java.util.Stack) -> a
    void getString(java.lang.StringBuffer) -> a
    byte[] getBytes() -> c
    byte[] getIf() -> l
    int getPrecedence() -> d_
    void columnInserted(int,int,boolean) -> a
    void rowInserted(int,int,boolean) -> b
jxl.biff.formula.BinaryOperator -> a.a.b.f:
    jxl.common.Logger logger -> a
    int read(byte[],int) -> a
    void getOperands(java.util.Stack) -> a
    void getString(java.lang.StringBuffer) -> a
    void columnInserted(int,int,boolean) -> a
    void rowInserted(int,int,boolean) -> b
    byte[] getBytes() -> c
    java.lang.String getSymbol() -> a
    jxl.biff.formula.Token getToken() -> b
jxl.biff.formula.BooleanValue -> a.a.b.g:
    boolean value -> a
    int read(byte[],int) -> a
    byte[] getBytes() -> c
    void getString(java.lang.StringBuffer) -> a
jxl.biff.formula.BuiltInFunction -> a.a.b.h:
    jxl.common.Logger logger -> a
    jxl.biff.formula.Function function -> b
    jxl.WorkbookSettings settings -> c
    int read(byte[],int) -> a
    void getOperands(java.util.Stack) -> a
    void getString(java.lang.StringBuffer) -> a
    void columnInserted(int,int,boolean) -> a
    void rowInserted(int,int,boolean) -> b
    byte[] getBytes() -> c
    int getPrecedence() -> d_
jxl.biff.formula.CellReference -> a.a.b.i:
    jxl.common.Logger logger -> a
    boolean columnRelative -> b
    boolean rowRelative -> c
    int column -> d
    int row -> e
    jxl.Cell relativeTo -> f
    int read(byte[],int) -> a
    void getString(java.lang.StringBuffer) -> a
    byte[] getBytes() -> c
    void columnInserted(int,int,boolean) -> a
    void rowInserted(int,int,boolean) -> b
jxl.biff.formula.CellReference3d -> a.a.b.j:
    jxl.common.Logger logger -> a
    boolean columnRelative -> b
    boolean rowRelative -> c
    int column -> d
    int row -> e
    jxl.Cell relativeTo -> f
    int sheet -> g
    jxl.biff.formula.ExternalSheet workbook -> h
    int read(byte[],int) -> a
    void getString(java.lang.StringBuffer) -> a
    byte[] getBytes() -> c
    void columnInserted(int,int,boolean) -> a
    void rowInserted(int,int,boolean) -> b
jxl.biff.formula.CellReferenceError -> a.a.b.k:
    jxl.common.Logger logger -> a
    int read(byte[],int) -> a
    void getString(java.lang.StringBuffer) -> a
    byte[] getBytes() -> c
jxl.biff.formula.CloseParentheses -> a.a.b.l:
jxl.biff.formula.ColumnRange -> a.a.b.m:
    jxl.common.Logger logger -> a
    void getString(java.lang.StringBuffer) -> a
jxl.biff.formula.ColumnRange3d -> a.a.b.n:
    jxl.common.Logger logger -> a
    jxl.biff.formula.ExternalSheet workbook -> b
    int sheet -> c
    void getString(java.lang.StringBuffer) -> a
jxl.biff.formula.Concatenate -> a.a.b.o:
    java.lang.String getSymbol() -> a
    jxl.biff.formula.Token getToken() -> b
    int getPrecedence() -> d_
jxl.biff.formula.Divide -> a.a.b.p:
    java.lang.String getSymbol() -> a
    jxl.biff.formula.Token getToken() -> b
    int getPrecedence() -> d_
jxl.biff.formula.DoubleValue -> a.a.b.q:
    jxl.common.Logger logger -> a
    double value -> b
    int read(byte[],int) -> a
    byte[] getBytes() -> c
    double getValue() -> a
jxl.biff.formula.Equal -> a.a.b.r:
    java.lang.String getSymbol() -> a
    jxl.biff.formula.Token getToken() -> b
    int getPrecedence() -> d_
jxl.biff.formula.ErrorConstant -> a.a.b.s:
    jxl.biff.formula.FormulaErrorCode error -> a
    int read(byte[],int) -> a
    byte[] getBytes() -> c
    void getString(java.lang.StringBuffer) -> a
jxl.biff.formula.ExternalSheet -> a.a.b.t:
    java.lang.String getExternalSheetName(int) -> b
    int getExternalSheetIndex(java.lang.String) -> b
    jxl.read.biff.BOFRecord getWorkbookBof() -> a
jxl.biff.formula.FormulaErrorCode -> a.a.b.u:
    int errorCode -> i
    java.lang.String description -> j
    jxl.biff.formula.FormulaErrorCode[] codes -> k
    jxl.biff.formula.FormulaErrorCode UNKNOWN -> a
    jxl.biff.formula.FormulaErrorCode NULL -> b
    jxl.biff.formula.FormulaErrorCode DIV0 -> c
    jxl.biff.formula.FormulaErrorCode VALUE -> d
    jxl.biff.formula.FormulaErrorCode REF -> e
    jxl.biff.formula.FormulaErrorCode NAME -> f
    jxl.biff.formula.FormulaErrorCode NUM -> g
    jxl.biff.formula.FormulaErrorCode NA -> h
    int getCode() -> a
    java.lang.String getDescription() -> b
    jxl.biff.formula.FormulaErrorCode getErrorCode(int) -> a
    jxl.biff.formula.FormulaErrorCode getErrorCode(java.lang.String) -> a
jxl.biff.formula.FormulaException -> a.a.b.v:
    jxl.biff.formula.FormulaException$FormulaMessage UNRECOGNIZED_TOKEN -> a
    jxl.biff.formula.FormulaException$FormulaMessage UNRECOGNIZED_FUNCTION -> b
    jxl.biff.formula.FormulaException$FormulaMessage BIFF8_SUPPORTED -> c
    jxl.biff.formula.FormulaException$FormulaMessage LEXICAL_ERROR -> d
    jxl.biff.formula.FormulaException$FormulaMessage INCORRECT_ARGUMENTS -> e
    jxl.biff.formula.FormulaException$FormulaMessage SHEET_REF_NOT_FOUND -> f
    jxl.biff.formula.FormulaException$FormulaMessage CELL_NAME_NOT_FOUND -> g
jxl.biff.formula.FormulaException$FormulaMessage -> a.a.b.w:
    java.lang.String message -> a
    java.lang.String access$000(jxl.biff.formula.FormulaException$FormulaMessage) -> a
jxl.biff.formula.FormulaParser -> a.a.b.x:
    jxl.common.Logger logger -> a
    jxl.biff.formula.Parser parser -> b
    void parse() -> a
    java.lang.String getFormula() -> b
    byte[] getBytes() -> c
    void columnInserted(int,int,boolean) -> a
    void rowInserted(int,int,boolean) -> b
jxl.biff.formula.Function -> a.a.b.y:
    jxl.common.Logger logger -> dA
    int code -> dB
    java.lang.String name -> dC
    int numArgs -> dD
    jxl.biff.formula.Function[] functions -> dE
    jxl.biff.formula.Function COUNT -> a
    jxl.biff.formula.Function ATTRIBUTE -> b
    jxl.biff.formula.Function ISNA -> c
    jxl.biff.formula.Function ISERROR -> d
    jxl.biff.formula.Function SUM -> e
    jxl.biff.formula.Function AVERAGE -> f
    jxl.biff.formula.Function MIN -> g
    jxl.biff.formula.Function MAX -> h
    jxl.biff.formula.Function ROW -> i
    jxl.biff.formula.Function COLUMN -> j
    jxl.biff.formula.Function NA -> k
    jxl.biff.formula.Function NPV -> l
    jxl.biff.formula.Function STDEV -> m
    jxl.biff.formula.Function DOLLAR -> n
    jxl.biff.formula.Function FIXED -> o
    jxl.biff.formula.Function SIN -> p
    jxl.biff.formula.Function COS -> q
    jxl.biff.formula.Function TAN -> r
    jxl.biff.formula.Function ATAN -> s
    jxl.biff.formula.Function PI -> t
    jxl.biff.formula.Function SQRT -> u
    jxl.biff.formula.Function EXP -> v
    jxl.biff.formula.Function LN -> w
    jxl.biff.formula.Function LOG10 -> x
    jxl.biff.formula.Function ABS -> y
    jxl.biff.formula.Function INT -> z
    jxl.biff.formula.Function SIGN -> A
    jxl.biff.formula.Function ROUND -> B
    jxl.biff.formula.Function LOOKUP -> C
    jxl.biff.formula.Function INDEX -> D
    jxl.biff.formula.Function REPT -> E
    jxl.biff.formula.Function MID -> F
    jxl.biff.formula.Function LEN -> G
    jxl.biff.formula.Function VALUE -> H
    jxl.biff.formula.Function TRUE -> I
    jxl.biff.formula.Function FALSE -> J
    jxl.biff.formula.Function AND -> K
    jxl.biff.formula.Function OR -> L
    jxl.biff.formula.Function NOT -> M
    jxl.biff.formula.Function MOD -> N
    jxl.biff.formula.Function DCOUNT -> O
    jxl.biff.formula.Function DSUM -> P
    jxl.biff.formula.Function DAVERAGE -> Q
    jxl.biff.formula.Function DMIN -> R
    jxl.biff.formula.Function DMAX -> S
    jxl.biff.formula.Function DSTDEV -> T
    jxl.biff.formula.Function VAR -> U
    jxl.biff.formula.Function DVAR -> V
    jxl.biff.formula.Function TEXT -> W
    jxl.biff.formula.Function LINEST -> X
    jxl.biff.formula.Function TREND -> Y
    jxl.biff.formula.Function LOGEST -> Z
    jxl.biff.formula.Function GROWTH -> aa
    jxl.biff.formula.Function PV -> ab
    jxl.biff.formula.Function FV -> ac
    jxl.biff.formula.Function NPER -> ad
    jxl.biff.formula.Function PMT -> ae
    jxl.biff.formula.Function RATE -> af
    jxl.biff.formula.Function RAND -> ag
    jxl.biff.formula.Function MATCH -> ah
    jxl.biff.formula.Function DATE -> ai
    jxl.biff.formula.Function TIME -> aj
    jxl.biff.formula.Function DAY -> ak
    jxl.biff.formula.Function MONTH -> al
    jxl.biff.formula.Function YEAR -> am
    jxl.biff.formula.Function WEEKDAY -> an
    jxl.biff.formula.Function HOUR -> ao
    jxl.biff.formula.Function MINUTE -> ap
    jxl.biff.formula.Function SECOND -> aq
    jxl.biff.formula.Function NOW -> ar
    jxl.biff.formula.Function AREAS -> as
    jxl.biff.formula.Function ROWS -> at
    jxl.biff.formula.Function COLUMNS -> au
    jxl.biff.formula.Function OFFSET -> av
    jxl.biff.formula.Function SEARCH -> aw
    jxl.biff.formula.Function TRANSPOSE -> ax
    jxl.biff.formula.Function ERROR -> ay
    jxl.biff.formula.Function TYPE -> az
    jxl.biff.formula.Function ATAN2 -> aA
    jxl.biff.formula.Function ASIN -> aB
    jxl.biff.formula.Function ACOS -> aC
    jxl.biff.formula.Function CHOOSE -> aD
    jxl.biff.formula.Function HLOOKUP -> aE
    jxl.biff.formula.Function VLOOKUP -> aF
    jxl.biff.formula.Function ISREF -> aG
    jxl.biff.formula.Function LOG -> aH
    jxl.biff.formula.Function CHAR -> aI
    jxl.biff.formula.Function LOWER -> aJ
    jxl.biff.formula.Function UPPER -> aK
    jxl.biff.formula.Function PROPER -> aL
    jxl.biff.formula.Function LEFT -> aM
    jxl.biff.formula.Function RIGHT -> aN
    jxl.biff.formula.Function EXACT -> aO
    jxl.biff.formula.Function TRIM -> aP
    jxl.biff.formula.Function REPLACE -> aQ
    jxl.biff.formula.Function SUBSTITUTE -> aR
    jxl.biff.formula.Function CODE -> aS
    jxl.biff.formula.Function FIND -> aT
    jxl.biff.formula.Function CELL -> aU
    jxl.biff.formula.Function ISERR -> aV
    jxl.biff.formula.Function ISTEXT -> aW
    jxl.biff.formula.Function ISNUMBER -> aX
    jxl.biff.formula.Function ISBLANK -> aY
    jxl.biff.formula.Function T -> aZ
    jxl.biff.formula.Function N -> ba
    jxl.biff.formula.Function DATEVALUE -> bb
    jxl.biff.formula.Function TIMEVALUE -> bc
    jxl.biff.formula.Function SLN -> bd
    jxl.biff.formula.Function SYD -> be
    jxl.biff.formula.Function DDB -> bf
    jxl.biff.formula.Function INDIRECT -> bg
    jxl.biff.formula.Function CLEAN -> bh
    jxl.biff.formula.Function MDETERM -> bi
    jxl.biff.formula.Function MINVERSE -> bj
    jxl.biff.formula.Function MMULT -> bk
    jxl.biff.formula.Function IPMT -> bl
    jxl.biff.formula.Function PPMT -> bm
    jxl.biff.formula.Function COUNTA -> bn
    jxl.biff.formula.Function PRODUCT -> bo
    jxl.biff.formula.Function FACT -> bp
    jxl.biff.formula.Function DPRODUCT -> bq
    jxl.biff.formula.Function ISNONTEXT -> br
    jxl.biff.formula.Function STDEVP -> bs
    jxl.biff.formula.Function VARP -> bt
    jxl.biff.formula.Function DSTDEVP -> bu
    jxl.biff.formula.Function DVARP -> bv
    jxl.biff.formula.Function TRUNC -> bw
    jxl.biff.formula.Function ISLOGICAL -> bx
    jxl.biff.formula.Function DCOUNTA -> by
    jxl.biff.formula.Function FINDB -> bz
    jxl.biff.formula.Function SEARCHB -> bA
    jxl.biff.formula.Function REPLACEB -> bB
    jxl.biff.formula.Function LEFTB -> bC
    jxl.biff.formula.Function RIGHTB -> bD
    jxl.biff.formula.Function MIDB -> bE
    jxl.biff.formula.Function LENB -> bF
    jxl.biff.formula.Function ROUNDUP -> bG
    jxl.biff.formula.Function ROUNDDOWN -> bH
    jxl.biff.formula.Function RANK -> bI
    jxl.biff.formula.Function ADDRESS -> bJ
    jxl.biff.formula.Function AYS360 -> bK
    jxl.biff.formula.Function ODAY -> bL
    jxl.biff.formula.Function VDB -> bM
    jxl.biff.formula.Function MEDIAN -> bN
    jxl.biff.formula.Function SUMPRODUCT -> bO
    jxl.biff.formula.Function SINH -> bP
    jxl.biff.formula.Function COSH -> bQ
    jxl.biff.formula.Function TANH -> bR
    jxl.biff.formula.Function ASINH -> bS
    jxl.biff.formula.Function ACOSH -> bT
    jxl.biff.formula.Function ATANH -> bU
    jxl.biff.formula.Function INFO -> bV
    jxl.biff.formula.Function AVEDEV -> bW
    jxl.biff.formula.Function BETADIST -> bX
    jxl.biff.formula.Function GAMMALN -> bY
    jxl.biff.formula.Function BETAINV -> bZ
    jxl.biff.formula.Function BINOMDIST -> ca
    jxl.biff.formula.Function CHIDIST -> cb
    jxl.biff.formula.Function CHIINV -> cc
    jxl.biff.formula.Function COMBIN -> cd
    jxl.biff.formula.Function CONFIDENCE -> ce
    jxl.biff.formula.Function CRITBINOM -> cf
    jxl.biff.formula.Function EVEN -> cg
    jxl.biff.formula.Function EXPONDIST -> ch
    jxl.biff.formula.Function FDIST -> ci
    jxl.biff.formula.Function FINV -> cj
    jxl.biff.formula.Function FISHER -> ck
    jxl.biff.formula.Function FISHERINV -> cl
    jxl.biff.formula.Function FLOOR -> cm
    jxl.biff.formula.Function GAMMADIST -> cn
    jxl.biff.formula.Function GAMMAINV -> co
    jxl.biff.formula.Function CEILING -> cp
    jxl.biff.formula.Function HYPGEOMDIST -> cq
    jxl.biff.formula.Function LOGNORMDIST -> cr
    jxl.biff.formula.Function LOGINV -> cs
    jxl.biff.formula.Function NEGBINOMDIST -> ct
    jxl.biff.formula.Function NORMDIST -> cu
    jxl.biff.formula.Function NORMSDIST -> cv
    jxl.biff.formula.Function NORMINV -> cw
    jxl.biff.formula.Function NORMSINV -> cx
    jxl.biff.formula.Function STANDARDIZE -> cy
    jxl.biff.formula.Function ODD -> cz
    jxl.biff.formula.Function PERMUT -> cA
    jxl.biff.formula.Function POISSON -> cB
    jxl.biff.formula.Function TDIST -> cC
    jxl.biff.formula.Function WEIBULL -> cD
    jxl.biff.formula.Function SUMXMY2 -> cE
    jxl.biff.formula.Function SUMX2MY2 -> cF
    jxl.biff.formula.Function SUMX2PY2 -> cG
    jxl.biff.formula.Function CHITEST -> cH
    jxl.biff.formula.Function CORREL -> cI
    jxl.biff.formula.Function COVAR -> cJ
    jxl.biff.formula.Function FORECAST -> cK
    jxl.biff.formula.Function FTEST -> cL
    jxl.biff.formula.Function INTERCEPT -> cM
    jxl.biff.formula.Function PEARSON -> cN
    jxl.biff.formula.Function RSQ -> cO
    jxl.biff.formula.Function STEYX -> cP
    jxl.biff.formula.Function SLOPE -> cQ
    jxl.biff.formula.Function TTEST -> cR
    jxl.biff.formula.Function PROB -> cS
    jxl.biff.formula.Function DEVSQ -> cT
    jxl.biff.formula.Function GEOMEAN -> cU
    jxl.biff.formula.Function HARMEAN -> cV
    jxl.biff.formula.Function SUMSQ -> cW
    jxl.biff.formula.Function KURT -> cX
    jxl.biff.formula.Function SKEW -> cY
    jxl.biff.formula.Function ZTEST -> cZ
    jxl.biff.formula.Function LARGE -> da
    jxl.biff.formula.Function SMALL -> db
    jxl.biff.formula.Function QUARTILE -> dc
    jxl.biff.formula.Function PERCENTILE -> dd
    jxl.biff.formula.Function PERCENTRANK -> de
    jxl.biff.formula.Function MODE -> df
    jxl.biff.formula.Function TRIMMEAN -> dg
    jxl.biff.formula.Function TINV -> dh
    jxl.biff.formula.Function CONCATENATE -> di
    jxl.biff.formula.Function POWER -> dj
    jxl.biff.formula.Function RADIANS -> dk
    jxl.biff.formula.Function DEGREES -> dl
    jxl.biff.formula.Function SUBTOTAL -> dm
    jxl.biff.formula.Function SUMIF -> dn
    jxl.biff.formula.Function COUNTIF -> do
    jxl.biff.formula.Function COUNTBLANK -> dp
    jxl.biff.formula.Function HYPERLINK -> dq
    jxl.biff.formula.Function AVERAGEA -> dr
    jxl.biff.formula.Function MAXA -> ds
    jxl.biff.formula.Function MINA -> dt
    jxl.biff.formula.Function STDEVPA -> du
    jxl.biff.formula.Function VARPA -> dv
    jxl.biff.formula.Function STDEVA -> dw
    jxl.biff.formula.Function VARA -> dx
    jxl.biff.formula.Function IF -> dy
    jxl.biff.formula.Function UNKNOWN -> dz
    int hashCode() -> hashCode
    int getCode() -> a
    java.lang.String getPropertyName() -> b
    java.lang.String getName(jxl.WorkbookSettings) -> a
    int getNumArgs() -> c
    jxl.biff.formula.Function getFunction(int) -> a
    jxl.biff.formula.Function getFunction(java.lang.String,jxl.WorkbookSettings) -> a
    jxl.biff.formula.Function[] getFunctions() -> d
jxl.biff.formula.FunctionNames -> a.a.b.z:
    jxl.common.Logger logger -> a
    java.util.HashMap names -> b
    java.util.HashMap functions -> c
    jxl.biff.formula.Function getFunction(java.lang.String) -> a
    java.lang.String getName(jxl.biff.formula.Function) -> a
jxl.biff.formula.GreaterEqual -> a.a.b.aa:
    java.lang.String getSymbol() -> a
    jxl.biff.formula.Token getToken() -> b
    int getPrecedence() -> d_
jxl.biff.formula.GreaterThan -> a.a.b.ab:
    java.lang.String getSymbol() -> a
    jxl.biff.formula.Token getToken() -> b
    int getPrecedence() -> d_
jxl.biff.formula.IntegerValue -> a.a.b.ac:
    jxl.common.Logger logger -> a
    double value -> b
    boolean outOfRange -> c
    int read(byte[],int) -> a
    byte[] getBytes() -> c
    double getValue() -> a
    boolean isOutOfRange() -> b
jxl.biff.formula.LessEqual -> a.a.b.ad:
    java.lang.String getSymbol() -> a
    jxl.biff.formula.Token getToken() -> b
    int getPrecedence() -> d_
jxl.biff.formula.LessThan -> a.a.b.ae:
    java.lang.String getSymbol() -> a
    jxl.biff.formula.Token getToken() -> b
    int getPrecedence() -> d_
jxl.biff.formula.MemArea -> a.a.b.af:
    void getString(java.lang.StringBuffer) -> a
    int read(byte[],int) -> a
jxl.biff.formula.MemFunc -> a.a.b.ag:
    void getString(java.lang.StringBuffer) -> a
jxl.biff.formula.Minus -> a.a.b.ah:
    jxl.common.Logger logger -> a
    jxl.biff.formula.Operator getBinaryOperator() -> a
    jxl.biff.formula.Operator getUnaryOperator() -> b
jxl.biff.formula.MissingArg -> a.a.b.ai:
    int read(byte[],int) -> a
    byte[] getBytes() -> c
    void getString(java.lang.StringBuffer) -> a
jxl.biff.formula.Multiply -> a.a.b.aj:
    java.lang.String getSymbol() -> a
    jxl.biff.formula.Token getToken() -> b
    int getPrecedence() -> d_
jxl.biff.formula.Name -> a.a.b.ak:
    int read(byte[],int) -> a
    byte[] getBytes() -> c
    void getString(java.lang.StringBuffer) -> a
jxl.biff.formula.NameRange -> a.a.b.al:
    jxl.common.Logger logger -> a
    jxl.biff.WorkbookMethods nameTable -> b
    java.lang.String name -> c
    int index -> d
    int read(byte[],int) -> a
    byte[] getBytes() -> c
    void getString(java.lang.StringBuffer) -> a
jxl.biff.formula.NotEqual -> a.a.b.am:
    java.lang.String getSymbol() -> a
    jxl.biff.formula.Token getToken() -> b
    int getPrecedence() -> d_
jxl.biff.formula.NumberValue -> a.a.b.an:
    double getValue() -> a
    void getString(java.lang.StringBuffer) -> a
jxl.biff.formula.OpenParentheses -> a.a.b.ao:
jxl.biff.formula.Operand -> a.a.b.ap:
    void columnInserted(int,int,boolean) -> a
    void rowInserted(int,int,boolean) -> b
jxl.biff.formula.Operator -> a.a.b.aq:
    jxl.biff.formula.ParseItem[] operands -> a
    void setOperandAlternateCode() -> e
    void add(jxl.biff.formula.ParseItem) -> a
    void getOperands(java.util.Stack) -> a
    jxl.biff.formula.ParseItem[] getOperands() -> f
    int getPrecedence() -> d_
jxl.biff.formula.Parenthesis -> a.a.b.ar:
    int read(byte[],int) -> a
    void getOperands(java.util.Stack) -> a
    void getString(java.lang.StringBuffer) -> a
    void columnInserted(int,int,boolean) -> a
    void rowInserted(int,int,boolean) -> b
    jxl.biff.formula.Token getToken() -> a
    byte[] getBytes() -> c
    int getPrecedence() -> d_
jxl.biff.formula.ParseContext -> a.a.b.as:
    jxl.biff.formula.ParseContext DEFAULT -> a
    jxl.biff.formula.ParseContext DATA_VALIDATION -> b
jxl.biff.formula.ParseItem -> a.a.b.at:
    jxl.common.Logger logger -> a
    jxl.biff.formula.ParseItem parent -> b
    boolean volatileFunction -> c
    boolean alternateCode -> d
    jxl.biff.formula.ParseContext parseContext -> e
    boolean valid -> f
    void setParent(jxl.biff.formula.ParseItem) -> b
    void setVolatile() -> g
    boolean isVolatile() -> h
    void getString(java.lang.StringBuffer) -> a
    byte[] getBytes() -> c
    void columnInserted(int,int,boolean) -> a
    void rowInserted(int,int,boolean) -> b
    void setAlternateCode() -> i
    boolean useAlternateCode() -> j
    void setParseContext(jxl.biff.formula.ParseContext) -> a
    jxl.biff.formula.ParseContext getParseContext() -> k
jxl.biff.formula.Parser -> a.a.b.au:
    void parse() -> a
    java.lang.String getFormula() -> b
    byte[] getBytes() -> c
    void columnInserted(int,int,boolean) -> a
    void rowInserted(int,int,boolean) -> b
jxl.biff.formula.Percent -> a.a.b.av:
    java.lang.String getSymbol() -> a
    void getString(java.lang.StringBuffer) -> a
    jxl.biff.formula.Token getToken() -> b
    int getPrecedence() -> d_
jxl.biff.formula.Plus -> a.a.b.aw:
    jxl.biff.formula.Operator getBinaryOperator() -> a
    jxl.biff.formula.Operator getUnaryOperator() -> b
jxl.biff.formula.Power -> a.a.b.ax:
    java.lang.String getSymbol() -> a
    jxl.biff.formula.Token getToken() -> b
    int getPrecedence() -> d_
jxl.biff.formula.RangeSeparator -> a.a.b.ay:
    java.lang.String getSymbol() -> a
    jxl.biff.formula.Token getToken() -> b
    int getPrecedence() -> d_
    byte[] getBytes() -> c
jxl.biff.formula.SharedFormulaArea -> a.a.b.az:
    int columnFirst -> a
    int rowFirst -> b
    int columnLast -> c
    int rowLast -> d
    boolean columnFirstRelative -> e
    boolean rowFirstRelative -> f
    boolean columnLastRelative -> g
    boolean rowLastRelative -> h
    jxl.Cell relativeTo -> i
    int read(byte[],int) -> a
    void getString(java.lang.StringBuffer) -> a
    byte[] getBytes() -> c
jxl.biff.formula.SharedFormulaCellReference -> a.a.b.ba:
    jxl.common.Logger logger -> a
    boolean columnRelative -> b
    boolean rowRelative -> c
    int column -> d
    int row -> e
    jxl.Cell relativeTo -> f
    int read(byte[],int) -> a
    void getString(java.lang.StringBuffer) -> a
    byte[] getBytes() -> c
jxl.biff.formula.StringFormulaParser -> a.a.b.bb:
    jxl.common.Logger logger -> a
    java.lang.String formula -> b
    java.lang.String parsedFormula -> c
    jxl.biff.formula.ParseItem root -> d
    java.util.Stack arguments -> e
    jxl.WorkbookSettings settings -> f
    jxl.biff.formula.ExternalSheet externalSheet -> g
    jxl.biff.WorkbookMethods nameTable -> h
    jxl.biff.formula.ParseContext parseContext -> i
    void parse() -> a
    jxl.biff.formula.ParseItem parseCurrent(java.util.Iterator) -> a
    java.util.ArrayList getTokens() -> d
    java.lang.String getFormula() -> b
    byte[] getBytes() -> c
    void handleFunction(jxl.biff.formula.StringFunction,java.util.Iterator,java.util.Stack) -> a
    void columnInserted(int,int,boolean) -> a
    void rowInserted(int,int,boolean) -> b
    void handleOperand(jxl.biff.formula.Operand,java.util.Stack) -> a
jxl.biff.formula.StringFunction -> a.a.b.bc:
    jxl.common.Logger logger -> a
    jxl.biff.formula.Function function -> b
    java.lang.String functionString -> c
    jxl.biff.formula.Function getFunction(jxl.WorkbookSettings) -> a
jxl.biff.formula.StringOperator -> a.a.b.bd:
    void getOperands(java.util.Stack) -> a
    int getPrecedence() -> d_
    byte[] getBytes() -> c
    void getString(java.lang.StringBuffer) -> a
    void columnInserted(int,int,boolean) -> a
    void rowInserted(int,int,boolean) -> b
    jxl.biff.formula.Operator getBinaryOperator() -> a
    jxl.biff.formula.Operator getUnaryOperator() -> b
jxl.biff.formula.StringParseItem -> a.a.b.be:
    void getString(java.lang.StringBuffer) -> a
    byte[] getBytes() -> c
    void columnInserted(int,int,boolean) -> a
    void rowInserted(int,int,boolean) -> b
jxl.biff.formula.StringValue -> a.a.b.bf:
    jxl.common.Logger logger -> a
    java.lang.String value -> b
    jxl.WorkbookSettings settings -> c
    int read(byte[],int) -> a
    byte[] getBytes() -> c
    void getString(java.lang.StringBuffer) -> a
jxl.biff.formula.SubExpression -> a.a.b.bg:
    int length -> a
    jxl.biff.formula.ParseItem[] subExpression -> b
    int read(byte[],int) -> a
    byte[] getBytes() -> c
    int getLength() -> a
    void setLength(int) -> a
    void setSubExpression(jxl.biff.formula.ParseItem[]) -> a
    jxl.biff.formula.ParseItem[] getSubExpression() -> b
jxl.biff.formula.Subtract -> a.a.b.bh:
    java.lang.String getSymbol() -> a
    jxl.biff.formula.Token getToken() -> b
    int getPrecedence() -> d_
jxl.biff.formula.Token -> a.a.b.bi:
    int[] value -> a
    java.util.HashMap tokens -> O
    jxl.biff.formula.Token REF -> b
    jxl.biff.formula.Token REF3D -> c
    jxl.biff.formula.Token MISSING_ARG -> d
    jxl.biff.formula.Token STRING -> e
    jxl.biff.formula.Token ERR -> f
    jxl.biff.formula.Token BOOL -> g
    jxl.biff.formula.Token INTEGER -> h
    jxl.biff.formula.Token DOUBLE -> i
    jxl.biff.formula.Token REFERR -> j
    jxl.biff.formula.Token REFV -> k
    jxl.biff.formula.Token AREAV -> l
    jxl.biff.formula.Token MEM_AREA -> m
    jxl.biff.formula.Token AREA -> n
    jxl.biff.formula.Token NAMED_RANGE -> o
    jxl.biff.formula.Token NAME -> p
    jxl.biff.formula.Token AREA3D -> q
    jxl.biff.formula.Token UNARY_PLUS -> r
    jxl.biff.formula.Token UNARY_MINUS -> s
    jxl.biff.formula.Token PERCENT -> t
    jxl.biff.formula.Token PARENTHESIS -> u
    jxl.biff.formula.Token ADD -> v
    jxl.biff.formula.Token SUBTRACT -> w
    jxl.biff.formula.Token MULTIPLY -> x
    jxl.biff.formula.Token DIVIDE -> y
    jxl.biff.formula.Token POWER -> z
    jxl.biff.formula.Token CONCAT -> A
    jxl.biff.formula.Token LESS_THAN -> B
    jxl.biff.formula.Token LESS_EQUAL -> C
    jxl.biff.formula.Token EQUAL -> D
    jxl.biff.formula.Token GREATER_EQUAL -> E
    jxl.biff.formula.Token GREATER_THAN -> F
    jxl.biff.formula.Token NOT_EQUAL -> G
    jxl.biff.formula.Token UNION -> H
    jxl.biff.formula.Token RANGE -> I
    jxl.biff.formula.Token FUNCTION -> J
    jxl.biff.formula.Token FUNCTIONVARARG -> K
    jxl.biff.formula.Token ATTRIBUTE -> L
    jxl.biff.formula.Token MEM_FUNC -> M
    jxl.biff.formula.Token UNKNOWN -> N
    byte getCode() -> a
    byte getReferenceCode() -> b
    byte getCode2() -> c
    byte getValueCode() -> d
    jxl.biff.formula.Token getToken(int) -> a
jxl.biff.formula.TokenFormulaParser -> a.a.b.bj:
    jxl.common.Logger logger -> a
    byte[] tokenData -> b
    jxl.Cell relativeTo -> c
    int pos -> d
    jxl.biff.formula.ParseItem root -> e
    java.util.Stack tokenStack -> f
    jxl.biff.formula.ExternalSheet workbook -> g
    jxl.biff.WorkbookMethods nameTable -> h
    jxl.WorkbookSettings settings -> i
    jxl.biff.formula.ParseContext parseContext -> j
    void parse() -> a
    void parseSubExpression(int) -> a
    void handleMemoryFunction(jxl.biff.formula.SubExpression) -> a
    void addOperator(jxl.biff.formula.Operator) -> a
    java.lang.String getFormula() -> b
    byte[] getBytes() -> c
    void columnInserted(int,int,boolean) -> a
    void rowInserted(int,int,boolean) -> b
jxl.biff.formula.UnaryMinus -> a.a.b.bk:
    java.lang.String getSymbol() -> a
    jxl.biff.formula.Token getToken() -> b
    int getPrecedence() -> d_
jxl.biff.formula.UnaryOperator -> a.a.b.bl:
    int read(byte[],int) -> a
    void getOperands(java.util.Stack) -> a
    void getString(java.lang.StringBuffer) -> a
    void columnInserted(int,int,boolean) -> a
    void rowInserted(int,int,boolean) -> b
    byte[] getBytes() -> c
    java.lang.String getSymbol() -> a
    jxl.biff.formula.Token getToken() -> b
jxl.biff.formula.UnaryPlus -> a.a.b.bm:
    java.lang.String getSymbol() -> a
    jxl.biff.formula.Token getToken() -> b
    int getPrecedence() -> d_
jxl.biff.formula.VariableArgFunction -> a.a.b.bn:
    jxl.common.Logger logger -> a
    jxl.biff.formula.Function function -> b
    int arguments -> c
    boolean readFromSheet -> d
    jxl.WorkbookSettings settings -> e
    int read(byte[],int) -> a
    void getOperands(java.util.Stack) -> a
    void getString(java.lang.StringBuffer) -> a
    void columnInserted(int,int,boolean) -> a
    void rowInserted(int,int,boolean) -> b
    jxl.biff.formula.Function getFunction() -> a
    byte[] getBytes() -> c
    int getPrecedence() -> d_
    void handleSpecialCases() -> b
jxl.biff.formula.Yylex -> a.a.b.bo:
    char[] ZZ_CMAP -> a
    int[] ZZ_ACTION -> b
    int[] ZZ_ROWMAP -> c
    int[] ZZ_TRANS -> d
    java.lang.String[] ZZ_ERROR_MSG -> e
    int[] ZZ_ATTRIBUTE -> f
    java.io.Reader zzReader -> g
    int zzState -> h
    int zzLexicalState -> i
    char[] zzBuffer -> j
    int zzMarkedPos -> k
    int zzPushbackPos -> l
    int zzCurrentPos -> m
    int zzStartRead -> n
    int zzEndRead -> o
    int yyline -> p
    int yychar -> q
    boolean zzAtBOL -> r
    boolean zzAtEOF -> s
    boolean emptyString -> t
    jxl.biff.formula.ExternalSheet externalSheet -> u
    jxl.biff.WorkbookMethods nameTable -> v
    int[] zzUnpackAction() -> d
    int zzUnpackAction(java.lang.String,int,int[]) -> a
    int[] zzUnpackRowMap() -> e
    int zzUnpackRowMap(java.lang.String,int,int[]) -> b
    int[] zzUnpackTrans() -> f
    int zzUnpackTrans(java.lang.String,int,int[]) -> c
    int[] zzUnpackAttribute() -> g
    int zzUnpackAttribute(java.lang.String,int,int[]) -> d
    int getPos() -> a
    void setExternalSheet(jxl.biff.formula.ExternalSheet) -> a
    void setNameTable(jxl.biff.WorkbookMethods) -> a
    char[] zzUnpackCMap(java.lang.String) -> a
    boolean zzRefill() -> h
    void yybegin(int) -> a
    java.lang.String yytext() -> b
    void zzScanError(int) -> b
    jxl.biff.formula.ParseItem yylex() -> c
jxl.common.Assert -> a.b.a:
    void verify(boolean) -> a
    void verify(boolean,java.lang.String) -> a
jxl.common.AssertionFailed -> a.b.b:
jxl.common.Logger -> a.b.c:
    jxl.common.Logger logger -> a
    jxl.common.Logger getLogger(java.lang.Class) -> a
    void initializeLogger() -> a
    void error(java.lang.Object) -> a
    void warn(java.lang.Object) -> b
    void warn(java.lang.Object,java.lang.Throwable) -> a
    jxl.common.Logger getLoggerImpl(java.lang.Class) -> b
    void setSuppressWarnings(boolean) -> a
jxl.common.log.LoggerName -> a.b.a.a:
    java.lang.String NAME -> a
jxl.common.log.SimpleLogger -> a.b.a.b:
    boolean suppressWarnings -> a
    void error(java.lang.Object) -> a
    void warn(java.lang.Object) -> b
    void warn(java.lang.Object,java.lang.Throwable) -> a
    jxl.common.Logger getLoggerImpl(java.lang.Class) -> b
    void setSuppressWarnings(boolean) -> a
jxl.format.Alignment -> a.c.a:
    int value -> g
    java.lang.String string -> h
    jxl.format.Alignment[] alignments -> i
    jxl.format.Alignment GENERAL -> a
    jxl.format.Alignment LEFT -> b
    jxl.format.Alignment CENTRE -> c
    jxl.format.Alignment RIGHT -> d
    jxl.format.Alignment FILL -> e
    jxl.format.Alignment JUSTIFY -> f
    int getValue() -> a
    jxl.format.Alignment getAlignment(int) -> a
jxl.format.Border -> a.c.b:
    java.lang.String string -> g
    jxl.format.Border NONE -> a
    jxl.format.Border ALL -> b
    jxl.format.Border TOP -> c
    jxl.format.Border BOTTOM -> d
    jxl.format.Border LEFT -> e
    jxl.format.Border RIGHT -> f
jxl.format.BorderLineStyle -> a.c.c:
    int value -> o
    java.lang.String string -> p
    jxl.format.BorderLineStyle[] styles -> q
    jxl.format.BorderLineStyle NONE -> a
    jxl.format.BorderLineStyle THIN -> b
    jxl.format.BorderLineStyle MEDIUM -> c
    jxl.format.BorderLineStyle DASHED -> d
    jxl.format.BorderLineStyle DOTTED -> e
    jxl.format.BorderLineStyle THICK -> f
    jxl.format.BorderLineStyle DOUBLE -> g
    jxl.format.BorderLineStyle HAIR -> h
    jxl.format.BorderLineStyle MEDIUM_DASHED -> i
    jxl.format.BorderLineStyle DASH_DOT -> j
    jxl.format.BorderLineStyle MEDIUM_DASH_DOT -> k
    jxl.format.BorderLineStyle DASH_DOT_DOT -> l
    jxl.format.BorderLineStyle MEDIUM_DASH_DOT_DOT -> m
    jxl.format.BorderLineStyle SLANTED_DASH_DOT -> n
    int getValue() -> a
    java.lang.String getDescription() -> b
    jxl.format.BorderLineStyle getStyle(int) -> a
jxl.format.CellFormat -> a.c.d:
    jxl.format.Font getFont() -> n
jxl.format.Colour -> a.c.e:
    int value -> am
    jxl.format.RGB rgb -> an
    java.lang.String string -> ao
    jxl.format.Colour[] colours -> ap
    jxl.format.Colour UNKNOWN -> a
    jxl.format.Colour BLACK -> b
    jxl.format.Colour WHITE -> c
    jxl.format.Colour DEFAULT_BACKGROUND1 -> d
    jxl.format.Colour DEFAULT_BACKGROUND -> e
    jxl.format.Colour PALETTE_BLACK -> f
    jxl.format.Colour RED -> g
    jxl.format.Colour BRIGHT_GREEN -> h
    jxl.format.Colour BLUE -> i
    jxl.format.Colour YELLOW -> j
    jxl.format.Colour PINK -> k
    jxl.format.Colour TURQUOISE -> l
    jxl.format.Colour DARK_RED -> m
    jxl.format.Colour GREEN -> n
    jxl.format.Colour DARK_BLUE -> o
    jxl.format.Colour DARK_YELLOW -> p
    jxl.format.Colour VIOLET -> q
    jxl.format.Colour TEAL -> r
    jxl.format.Colour GREY_25_PERCENT -> s
    jxl.format.Colour GREY_50_PERCENT -> t
    jxl.format.Colour PERIWINKLE -> u
    jxl.format.Colour PLUM2 -> v
    jxl.format.Colour IVORY -> w
    jxl.format.Colour LIGHT_TURQUOISE2 -> x
    jxl.format.Colour DARK_PURPLE -> y
    jxl.format.Colour CORAL -> z
    jxl.format.Colour OCEAN_BLUE -> A
    jxl.format.Colour ICE_BLUE -> B
    jxl.format.Colour DARK_BLUE2 -> C
    jxl.format.Colour PINK2 -> D
    jxl.format.Colour YELLOW2 -> E
    jxl.format.Colour TURQOISE2 -> F
    jxl.format.Colour VIOLET2 -> G
    jxl.format.Colour DARK_RED2 -> H
    jxl.format.Colour TEAL2 -> I
    jxl.format.Colour BLUE2 -> J
    jxl.format.Colour SKY_BLUE -> K
    jxl.format.Colour LIGHT_TURQUOISE -> L
    jxl.format.Colour LIGHT_GREEN -> M
    jxl.format.Colour VERY_LIGHT_YELLOW -> N
    jxl.format.Colour PALE_BLUE -> O
    jxl.format.Colour ROSE -> P
    jxl.format.Colour LAVENDER -> Q
    jxl.format.Colour TAN -> R
    jxl.format.Colour LIGHT_BLUE -> S
    jxl.format.Colour AQUA -> T
    jxl.format.Colour LIME -> U
    jxl.format.Colour GOLD -> V
    jxl.format.Colour LIGHT_ORANGE -> W
    jxl.format.Colour ORANGE -> X
    jxl.format.Colour BLUE_GREY -> Y
    jxl.format.Colour GREY_40_PERCENT -> Z
    jxl.format.Colour DARK_TEAL -> aa
    jxl.format.Colour SEA_GREEN -> ab
    jxl.format.Colour DARK_GREEN -> ac
    jxl.format.Colour OLIVE_GREEN -> ad
    jxl.format.Colour BROWN -> ae
    jxl.format.Colour PLUM -> af
    jxl.format.Colour INDIGO -> ag
    jxl.format.Colour GREY_80_PERCENT -> ah
    jxl.format.Colour AUTOMATIC -> ai
    jxl.format.Colour GRAY_80 -> aj
    jxl.format.Colour GRAY_50 -> ak
    jxl.format.Colour GRAY_25 -> al
    int getValue() -> a
    jxl.format.Colour getInternalColour(int) -> a
jxl.format.Font -> a.c.f:
    java.lang.String getName() -> m
    int getPointSize() -> f
    int getBoldWeight() -> h
    boolean isItalic() -> i
    boolean isStruckout() -> n
    jxl.format.UnderlineStyle getUnderlineStyle() -> j
    jxl.format.Colour getColour() -> k
    jxl.format.ScriptStyle getScriptStyle() -> l
jxl.format.Format -> a.c.g:
jxl.format.Orientation -> a.c.h:
    int value -> h
    java.lang.String string -> i
    jxl.format.Orientation[] orientations -> j
    jxl.format.Orientation HORIZONTAL -> a
    jxl.format.Orientation VERTICAL -> b
    jxl.format.Orientation PLUS_90 -> c
    jxl.format.Orientation MINUS_90 -> d
    jxl.format.Orientation PLUS_45 -> e
    jxl.format.Orientation MINUS_45 -> f
    jxl.format.Orientation STACKED -> g
    int getValue() -> a
    jxl.format.Orientation getOrientation(int) -> a
jxl.format.PageOrder -> a.c.i:
    jxl.format.PageOrder DOWN_THEN_RIGHT -> a
    jxl.format.PageOrder RIGHT_THEN_DOWN -> b
jxl.format.PageOrientation -> a.c.j:
    jxl.format.PageOrientation PORTRAIT -> a
    jxl.format.PageOrientation LANDSCAPE -> b
jxl.format.PaperSize -> a.c.k:
    int val -> aC
    jxl.format.PaperSize[] paperSizes -> aD
    jxl.format.PaperSize UNDEFINED -> a
    jxl.format.PaperSize LETTER -> b
    jxl.format.PaperSize LETTER_SMALL -> c
    jxl.format.PaperSize TABLOID -> d
    jxl.format.PaperSize LEDGER -> e
    jxl.format.PaperSize LEGAL -> f
    jxl.format.PaperSize STATEMENT -> g
    jxl.format.PaperSize EXECUTIVE -> h
    jxl.format.PaperSize A3 -> i
    jxl.format.PaperSize A4 -> j
    jxl.format.PaperSize A4_SMALL -> k
    jxl.format.PaperSize A5 -> l
    jxl.format.PaperSize B4 -> m
    jxl.format.PaperSize B5 -> n
    jxl.format.PaperSize FOLIO -> o
    jxl.format.PaperSize QUARTO -> p
    jxl.format.PaperSize SIZE_10x14 -> q
    jxl.format.PaperSize SIZE_10x17 -> r
    jxl.format.PaperSize NOTE -> s
    jxl.format.PaperSize ENVELOPE_9 -> t
    jxl.format.PaperSize ENVELOPE_10 -> u
    jxl.format.PaperSize ENVELOPE_11 -> v
    jxl.format.PaperSize ENVELOPE_12 -> w
    jxl.format.PaperSize ENVELOPE_14 -> x
    jxl.format.PaperSize C -> y
    jxl.format.PaperSize D -> z
    jxl.format.PaperSize E -> A
    jxl.format.PaperSize ENVELOPE_DL -> B
    jxl.format.PaperSize ENVELOPE_C5 -> C
    jxl.format.PaperSize ENVELOPE_C3 -> D
    jxl.format.PaperSize ENVELOPE_C4 -> E
    jxl.format.PaperSize ENVELOPE_C6 -> F
    jxl.format.PaperSize ENVELOPE_C6_C5 -> G
    jxl.format.PaperSize B4_ISO -> H
    jxl.format.PaperSize B5_ISO -> I
    jxl.format.PaperSize B6_ISO -> J
    jxl.format.PaperSize ENVELOPE_ITALY -> K
    jxl.format.PaperSize ENVELOPE_MONARCH -> L
    jxl.format.PaperSize ENVELOPE_6_75 -> M
    jxl.format.PaperSize US_FANFOLD -> N
    jxl.format.PaperSize GERMAN_FANFOLD -> O
    jxl.format.PaperSize GERMAN_LEGAL_FANFOLD -> P
    jxl.format.PaperSize B4_ISO_2 -> Q
    jxl.format.PaperSize JAPANESE_POSTCARD -> R
    jxl.format.PaperSize SIZE_9x11 -> S
    jxl.format.PaperSize SIZE_10x11 -> T
    jxl.format.PaperSize SIZE_15x11 -> U
    jxl.format.PaperSize ENVELOPE_INVITE -> V
    jxl.format.PaperSize LETTER_EXTRA -> W
    jxl.format.PaperSize LEGAL_EXTRA -> X
    jxl.format.PaperSize TABLOID_EXTRA -> Y
    jxl.format.PaperSize A4_EXTRA -> Z
    jxl.format.PaperSize LETTER_TRANSVERSE -> aa
    jxl.format.PaperSize A4_TRANSVERSE -> ab
    jxl.format.PaperSize LETTER_EXTRA_TRANSVERSE -> ac
    jxl.format.PaperSize SUPER_A_A4 -> ad
    jxl.format.PaperSize SUPER_B_A3 -> ae
    jxl.format.PaperSize LETTER_PLUS -> af
    jxl.format.PaperSize A4_PLUS -> ag
    jxl.format.PaperSize A5_TRANSVERSE -> ah
    jxl.format.PaperSize B5_TRANSVERSE -> ai
    jxl.format.PaperSize A3_EXTRA -> aj
    jxl.format.PaperSize A5_EXTRA -> ak
    jxl.format.PaperSize B5_EXTRA -> al
    jxl.format.PaperSize A2 -> am
    jxl.format.PaperSize A3_TRANSVERSE -> an
    jxl.format.PaperSize A3_EXTRA_TRANSVERSE -> ao
    jxl.format.PaperSize DOUBLE_JAPANESE_POSTCARD -> ap
    jxl.format.PaperSize A6 -> aq
    jxl.format.PaperSize LETTER_ROTATED -> ar
    jxl.format.PaperSize A3_ROTATED -> as
    jxl.format.PaperSize A4_ROTATED -> at
    jxl.format.PaperSize A5_ROTATED -> au
    jxl.format.PaperSize B4_ROTATED -> av
    jxl.format.PaperSize B5_ROTATED -> aw
    jxl.format.PaperSize JAPANESE_POSTCARD_ROTATED -> ax
    jxl.format.PaperSize DOUBLE_JAPANESE_POSTCARD_ROTATED -> ay
    jxl.format.PaperSize A6_ROTATED -> az
    jxl.format.PaperSize B6 -> aA
    jxl.format.PaperSize B6_ROTATED -> aB
    int getValue() -> a
jxl.format.Pattern -> a.c.l:
    int value -> t
    java.lang.String string -> u
    jxl.format.Pattern[] patterns -> v
    jxl.format.Pattern NONE -> a
    jxl.format.Pattern SOLID -> b
    jxl.format.Pattern GRAY_50 -> c
    jxl.format.Pattern GRAY_75 -> d
    jxl.format.Pattern GRAY_25 -> e
    jxl.format.Pattern PATTERN1 -> f
    jxl.format.Pattern PATTERN2 -> g
    jxl.format.Pattern PATTERN3 -> h
    jxl.format.Pattern PATTERN4 -> i
    jxl.format.Pattern PATTERN5 -> j
    jxl.format.Pattern PATTERN6 -> k
    jxl.format.Pattern PATTERN7 -> l
    jxl.format.Pattern PATTERN8 -> m
    jxl.format.Pattern PATTERN9 -> n
    jxl.format.Pattern PATTERN10 -> o
    jxl.format.Pattern PATTERN11 -> p
    jxl.format.Pattern PATTERN12 -> q
    jxl.format.Pattern PATTERN13 -> r
    jxl.format.Pattern PATTERN14 -> s
    int getValue() -> a
    jxl.format.Pattern getPattern(int) -> a
jxl.format.RGB -> a.c.m:
    int red -> a
    int green -> b
    int blue -> c
    int getRed() -> a
    int getGreen() -> b
    int getBlue() -> c
jxl.format.ScriptStyle -> a.c.n:
    int value -> d
    java.lang.String string -> e
    jxl.format.ScriptStyle[] styles -> f
    jxl.format.ScriptStyle NORMAL_SCRIPT -> a
    jxl.format.ScriptStyle SUPERSCRIPT -> b
    jxl.format.ScriptStyle SUBSCRIPT -> c
    int getValue() -> a
    jxl.format.ScriptStyle getStyle(int) -> a
jxl.format.UnderlineStyle -> a.c.o:
    int value -> f
    java.lang.String string -> g
    jxl.format.UnderlineStyle[] styles -> h
    jxl.format.UnderlineStyle NO_UNDERLINE -> a
    jxl.format.UnderlineStyle SINGLE -> b
    jxl.format.UnderlineStyle DOUBLE -> c
    jxl.format.UnderlineStyle SINGLE_ACCOUNTING -> d
    jxl.format.UnderlineStyle DOUBLE_ACCOUNTING -> e
    int getValue() -> a
    jxl.format.UnderlineStyle getStyle(int) -> a
jxl.format.VerticalAlignment -> a.c.p:
    int value -> e
    java.lang.String string -> f
    jxl.format.VerticalAlignment[] alignments -> g
    jxl.format.VerticalAlignment TOP -> a
    jxl.format.VerticalAlignment CENTRE -> b
    jxl.format.VerticalAlignment BOTTOM -> c
    jxl.format.VerticalAlignment JUSTIFY -> d
    int getValue() -> a
    jxl.format.VerticalAlignment getAlignment(int) -> a
jxl.read.biff.BOFRecord -> a.d.a.a:
    jxl.common.Logger logger -> a
    int version -> b
    boolean isBiff8() -> a
jxl.read.biff.BiffException -> a.d.a.b:
    jxl.read.biff.BiffException$BiffMessage unrecognizedBiffVersion -> a
    jxl.read.biff.BiffException$BiffMessage expectedGlobals -> b
    jxl.read.biff.BiffException$BiffMessage excelFileTooBig -> c
    jxl.read.biff.BiffException$BiffMessage excelFileNotFound -> d
    jxl.read.biff.BiffException$BiffMessage unrecognizedOLEFile -> e
    jxl.read.biff.BiffException$BiffMessage streamNotFound -> f
    jxl.read.biff.BiffException$BiffMessage passwordProtected -> g
    jxl.read.biff.BiffException$BiffMessage corruptFileFormat -> h
jxl.read.biff.BiffException$BiffMessage -> a.d.a.c:
    java.lang.String message -> a
jxl.read.biff.CompoundFile -> a.d.a.d:
    jxl.common.Logger logger -> c
    byte[] data -> d
    int[] bigBlockChain -> e
    int[] smallBlockChain -> f
    java.util.ArrayList propertySets -> g
    jxl.biff.BaseCompoundFile$PropertyStorage rootEntryPropertyStorage -> h
    byte[] getStream(int) -> a
    jxl.biff.BaseCompoundFile$PropertyStorage findPropertyStorage(java.lang.String) -> a
    jxl.biff.BaseCompoundFile$PropertyStorage findPropertyStorage(java.lang.String,jxl.biff.BaseCompoundFile$PropertyStorage) -> a
    jxl.biff.BaseCompoundFile$PropertyStorage getPropertyStorage(int) -> c
    byte[] getBigBlockStream(jxl.biff.BaseCompoundFile$PropertyStorage) -> a
    byte[] getSmallBlockStream(jxl.biff.BaseCompoundFile$PropertyStorage) -> b
    byte[] readData(int) -> d
    int getNumberOfPropertySets() -> a
    jxl.biff.BaseCompoundFile$PropertyStorage getPropertySet(int) -> b
jxl.read.biff.File -> a.d.a.e:
    jxl.common.Logger logger -> a
    byte[] data -> b
    byte[] read(int,int) -> a
jxl.read.biff.Record -> a.d.a.f:
    jxl.common.Logger logger -> a
    int length -> b
    int dataPos -> c
    jxl.read.biff.File file -> d
    byte[] data -> e
    java.util.ArrayList continueRecords -> f
    byte[] getData() -> a
jxl.write.Blank -> a.e.a:
jxl.write.DateFormat -> a.e.b:
jxl.write.DateFormats -> a.e.c:
    jxl.biff.DisplayFormat FORMAT1 -> a
    jxl.biff.DisplayFormat DEFAULT -> b
    jxl.biff.DisplayFormat FORMAT2 -> c
    jxl.biff.DisplayFormat FORMAT3 -> d
    jxl.biff.DisplayFormat FORMAT4 -> e
    jxl.biff.DisplayFormat FORMAT5 -> f
    jxl.biff.DisplayFormat FORMAT6 -> g
    jxl.biff.DisplayFormat FORMAT7 -> h
    jxl.biff.DisplayFormat FORMAT8 -> i
    jxl.biff.DisplayFormat FORMAT9 -> j
    jxl.biff.DisplayFormat FORMAT10 -> k
    jxl.biff.DisplayFormat FORMAT11 -> l
    jxl.biff.DisplayFormat FORMAT12 -> m
jxl.write.DateFormats$BuiltInFormat -> a.e.d:
    int index -> a
    java.lang.String formatString -> b
    int getFormatIndex() -> a_
    boolean isInitialized() -> b_
    void initialize(int) -> a
    boolean isBuiltIn() -> c
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
jxl.write.DateTime -> a.e.e:
    jxl.write.biff.DateRecord$GMTDate GMT -> a
jxl.write.Label -> a.e.f:
jxl.write.Number -> a.e.g:
jxl.write.NumberFormats -> a.e.h:
    jxl.biff.DisplayFormat DEFAULT -> a
    jxl.biff.DisplayFormat INTEGER -> b
    jxl.biff.DisplayFormat FLOAT -> c
    jxl.biff.DisplayFormat THOUSANDS_INTEGER -> d
    jxl.biff.DisplayFormat THOUSANDS_FLOAT -> e
    jxl.biff.DisplayFormat ACCOUNTING_INTEGER -> f
    jxl.biff.DisplayFormat ACCOUNTING_RED_INTEGER -> g
    jxl.biff.DisplayFormat ACCOUNTING_FLOAT -> h
    jxl.biff.DisplayFormat ACCOUNTING_RED_FLOAT -> i
    jxl.biff.DisplayFormat PERCENT_INTEGER -> j
    jxl.biff.DisplayFormat PERCENT_FLOAT -> k
    jxl.biff.DisplayFormat EXPONENTIAL -> l
    jxl.biff.DisplayFormat FRACTION_ONE_DIGIT -> m
    jxl.biff.DisplayFormat FRACTION_TWO_DIGITS -> n
    jxl.biff.DisplayFormat FORMAT1 -> o
    jxl.biff.DisplayFormat FORMAT2 -> p
    jxl.biff.DisplayFormat FORMAT3 -> q
    jxl.biff.DisplayFormat FORMAT4 -> r
    jxl.biff.DisplayFormat FORMAT5 -> s
    jxl.biff.DisplayFormat FORMAT6 -> t
    jxl.biff.DisplayFormat FORMAT7 -> u
    jxl.biff.DisplayFormat FORMAT8 -> v
    jxl.biff.DisplayFormat FORMAT9 -> w
    jxl.biff.DisplayFormat FORMAT10 -> x
    jxl.biff.DisplayFormat TEXT -> y
jxl.write.NumberFormats$BuiltInFormat -> a.e.i:
    int index -> a
    java.lang.String formatString -> b
    int getFormatIndex() -> a_
    boolean isInitialized() -> b_
    boolean isBuiltIn() -> c
    void initialize(int) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
jxl.write.WritableCell -> a.e.j:
    void setCellFormat(jxl.format.CellFormat) -> a
    jxl.write.WritableCellFeatures getWritableCellFeatures() -> f_
    void setCellFeatures(jxl.write.WritableCellFeatures) -> a
jxl.write.WritableCellFeatures -> a.e.k:
    jxl.biff.BaseCellFeatures$ValidationCondition BETWEEN -> j
    jxl.biff.BaseCellFeatures$ValidationCondition NOT_BETWEEN -> k
    jxl.biff.BaseCellFeatures$ValidationCondition EQUAL -> l
    jxl.biff.BaseCellFeatures$ValidationCondition NOT_EQUAL -> m
    jxl.biff.BaseCellFeatures$ValidationCondition GREATER_THAN -> n
    jxl.biff.BaseCellFeatures$ValidationCondition LESS_THAN -> o
    jxl.biff.BaseCellFeatures$ValidationCondition GREATER_EQUAL -> p
    jxl.biff.BaseCellFeatures$ValidationCondition LESS_EQUAL -> q
    void removeComment() -> d
    void removeDataValidation() -> e
jxl.write.WritableCellFormat -> a.e.l:
    void setAlignment(jxl.format.Alignment) -> b
    void setBorder(jxl.format.Border,jxl.format.BorderLineStyle) -> a
    void setBorder(jxl.format.Border,jxl.format.BorderLineStyle,jxl.format.Colour) -> b
jxl.write.WritableFont -> a.e.m:
    jxl.write.WritableFont$FontName ARIAL -> b
    jxl.write.WritableFont$FontName TIMES -> c
    jxl.write.WritableFont$FontName COURIER -> d
    jxl.write.WritableFont$FontName TAHOMA -> e
    jxl.write.WritableFont$BoldStyle NO_BOLD -> f
    jxl.write.WritableFont$BoldStyle BOLD -> g
    void setBoldStyle(jxl.write.WritableFont$BoldStyle) -> a
    boolean isStruckout() -> n
jxl.write.WritableFont$BoldStyle -> a.e.n:
    int value -> a
jxl.write.WritableFont$FontName -> a.e.o:
    java.lang.String name -> a
jxl.write.WritableHyperlink -> a.e.p:
jxl.write.WritableSheet -> a.e.q:
    void addCell(jxl.write.WritableCell) -> a
    void setColumnView(int,jxl.CellView) -> a
    void insertRow(int) -> b
    void insertColumn(int) -> c
jxl.write.WritableWorkbook -> a.e.r:
    jxl.write.WritableFont ARIAL_10_PT -> a
    jxl.write.WritableFont HYPERLINK_FONT -> b
    jxl.write.WritableCellFormat NORMAL_STYLE -> c
    jxl.write.WritableCellFormat HYPERLINK_STYLE -> d
    jxl.write.WritableCellFormat HIDDEN_STYLE -> e
    void close() -> b
    jxl.write.WritableSheet createSheet(java.lang.String,int) -> a
    void write() -> c
jxl.write.WriteException -> a.e.s:
jxl.write.biff.BOFRecord -> a.e.a.a:
    byte[] data -> c
    jxl.write.biff.BOFRecord$WorkbookGlobalsBOF workbookGlobals -> a
    jxl.write.biff.BOFRecord$SheetBOF sheet -> b
    byte[] getData() -> a
jxl.write.biff.BOFRecord$1 -> a.e.a.b:
jxl.write.biff.BOFRecord$SheetBOF -> a.e.a.c:
jxl.write.biff.BOFRecord$WorkbookGlobalsBOF -> a.e.a.d:
jxl.write.biff.BackupRecord -> a.e.a.e:
    boolean backup -> a
    byte[] data -> b
    byte[] getData() -> a
jxl.write.biff.BlankRecord -> a.e.a.f:
    jxl.common.Logger logger -> a
    jxl.CellType getType() -> c
    java.lang.String getContents() -> d
jxl.write.biff.BookboolRecord -> a.e.a.g:
    boolean externalLink -> a
    byte[] data -> b
    byte[] getData() -> a
jxl.write.biff.BottomMarginRecord -> a.e.a.h:
jxl.write.biff.BoundsheetRecord -> a.e.a.i:
    boolean hidden -> a
    boolean chartOnly -> b
    java.lang.String name -> c
    byte[] data -> d
    void setHidden() -> c
    void setChartOnly() -> d
    byte[] getData() -> a
jxl.write.biff.ButtonPropertySetRecord -> a.e.a.j:
    byte[] data -> a
    byte[] getData() -> a
jxl.write.biff.CalcCountRecord -> a.e.a.k:
    int calcCount -> a
    byte[] getData() -> a
jxl.write.biff.CalcModeRecord -> a.e.a.l:
    jxl.write.biff.CalcModeRecord$CalcMode calculationMode -> d
    jxl.write.biff.CalcModeRecord$CalcMode manual -> a
    jxl.write.biff.CalcModeRecord$CalcMode automatic -> b
    jxl.write.biff.CalcModeRecord$CalcMode automaticNoTables -> c
    byte[] getData() -> a
jxl.write.biff.CalcModeRecord$CalcMode -> a.e.a.m:
    int value -> a
jxl.write.biff.CellValue -> a.e.a.n:
    jxl.common.Logger logger -> a
    int row -> b
    int column -> c
    jxl.biff.XFRecord format -> d
    jxl.biff.FormattingRecords formattingRecords -> e
    boolean referenced -> f
    jxl.write.biff.WritableSheetImpl sheet -> g
    jxl.write.WritableCellFeatures features -> h
    boolean copied -> i
    void setCellFormat(jxl.format.CellFormat) -> a
    int getRow() -> e_
    int getColumn() -> b
    byte[] getData() -> a
    void setCellDetails(jxl.biff.FormattingRecords,jxl.write.biff.SharedStrings,jxl.write.biff.WritableSheetImpl) -> a
    boolean isReferenced() -> h
    int getXFIndex() -> i
    jxl.format.CellFormat getCellFormat() -> e
    void incrementRow() -> j
    void incrementColumn() -> k
    void columnInserted(jxl.Sheet,int,int) -> a
    void rowInserted(jxl.Sheet,int,int) -> b
    void addCellFormat() -> n
    jxl.CellFeatures getCellFeatures() -> f
    jxl.write.WritableCellFeatures getWritableCellFeatures() -> f_
    void setCellFeatures(jxl.write.WritableCellFeatures) -> a
    void addCellFeatures() -> l
    void removeComment(jxl.biff.drawing.Comment) -> a
    void removeDataValidation() -> m
jxl.write.biff.CellXFRecord -> a.e.a.o:
    void setAlignment(jxl.format.Alignment) -> b
    void setBorder(jxl.format.Border,jxl.format.BorderLineStyle,jxl.format.Colour) -> b
jxl.write.biff.CodepageRecord -> a.e.a.p:
    byte[] data -> a
    byte[] getData() -> a
jxl.write.biff.ColumnInfoRecord -> a.e.a.q:
    byte[] data -> a
    int column -> b
    jxl.biff.XFRecord style -> c
    int xfIndex -> d
    int width -> e
    boolean hidden -> f
    int outlineLevel -> g
    boolean collapsed -> h
    int getColumn() -> c
    void incrementColumn() -> d
    int getWidth() -> e
    void setWidth(int) -> a
    byte[] getData() -> a
    jxl.biff.XFRecord getCellFormat() -> f
    void rationalize(jxl.biff.IndexMapping) -> a
    void setHidden(boolean) -> a
    boolean getHidden() -> h
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
jxl.write.biff.CompoundFile -> a.e.a.r:
    jxl.common.Logger logger -> c
    java.io.OutputStream out -> d
    jxl.write.biff.ExcelDataOutput excelData -> e
    int size -> f
    int requiredSize -> g
    int numBigBlockDepotBlocks -> h
    int numSmallBlockDepotChainBlocks -> i
    int numSmallBlockDepotBlocks -> j
    int numExtensionBlocks -> k
    int extensionBlock -> l
    int excelDataBlocks -> m
    int rootStartBlock -> n
    int excelDataStartBlock -> o
    int bbdStartBlock -> p
    int sbdStartBlockChain -> q
    int sbdStartBlock -> r
    int additionalPropertyBlocks -> s
    int numSmallBlocks -> t
    int numPropertySets -> u
    int numRootEntryBlocks -> v
    java.util.ArrayList additionalPropertySets -> w
    java.util.HashMap standardPropertySets -> x
    int bbdPos -> y
    byte[] bigBlockDepot -> z
    void readAdditionalPropertySets(jxl.read.biff.CompoundFile) -> a
    void write() -> a
    void writeAdditionalPropertySets() -> b
    void writeExcelData() -> c
    void writeDocumentSummaryData() -> d
    void writeSummaryData() -> e
    void writeHeader() -> f
    void checkBbdPos() -> g
    void writeBlockChain(int,int) -> a
    void writeAdditionalPropertySetBlockChains() -> h
    void writeSmallBlockDepotChain() -> i
    void writeSmallBlockDepot() -> j
    void writeBigBlockDepot() -> k
    int getBigBlocksRequired(int) -> a
    int getSmallBlocksRequired(int) -> b
    void writePropertySets() -> l
jxl.write.biff.CompoundFile$ReadPropertyStorage -> a.e.a.s:
    jxl.biff.BaseCompoundFile$PropertyStorage propertyStorage -> a
    byte[] data -> b
    int number -> c
jxl.write.biff.CopyAdditionalPropertySetsException -> a.e.a.t:
jxl.write.biff.CountryRecord -> a.e.a.u:
    int language -> a
    int regionalSettings -> b
    byte[] getData() -> a
jxl.write.biff.DBCellRecord -> a.e.a.v:
    int rowPos -> a
    int cellOffset -> b
    java.util.ArrayList cellRowPositions -> c
    int position -> d
    void setCellOffset(int) -> a
    void addCellRowPosition(int) -> b
    void setPosition(int) -> c
    byte[] getData() -> a
jxl.write.biff.DSFRecord -> a.e.a.w:
    byte[] data -> a
    byte[] getData() -> a
jxl.write.biff.DateFormatRecord -> a.e.a.x:
jxl.write.biff.DateRecord -> a.e.a.y:
    jxl.common.Logger logger -> a
    double value -> c
    java.util.Date date -> d
    boolean time -> e
    jxl.write.WritableCellFormat defaultDateFormat -> b
    void calculateValue(boolean) -> a
    jxl.CellType getType() -> c
    byte[] getData() -> a
    java.lang.String getContents() -> d
jxl.write.biff.DateRecord$GMTDate -> a.e.a.z:
jxl.write.biff.DefaultColumnWidth -> a.e.a.aa:
    int width -> a
    byte[] data -> b
    byte[] getData() -> a
jxl.write.biff.DefaultRowHeightRecord -> a.e.a.ab:
    byte[] data -> a
    int rowHeight -> b
    boolean changed -> c
    byte[] getData() -> a
jxl.write.biff.DeltaRecord -> a.e.a.ac:
    byte[] data -> a
    double iterationValue -> b
    byte[] getData() -> a
jxl.write.biff.DimensionRecord -> a.e.a.ad:
    int numRows -> a
    int numCols -> b
    byte[] data -> c
    byte[] getData() -> a
jxl.write.biff.EOFRecord -> a.e.a.ae:
    byte[] getData() -> a
jxl.write.biff.Excel9FileRecord -> a.e.a.af:
    byte[] getData() -> a
jxl.write.biff.ExcelDataOutput -> a.e.a.ag:
    void write(byte[]) -> a
    int getPosition() -> a
    void setData(byte[],int) -> a
    void writeData(java.io.OutputStream) -> a
    void close() -> b
jxl.write.biff.ExtendedSSTRecord -> a.e.a.ah:
    int numberOfStrings -> a
    int[] absoluteStreamPositions -> b
    int[] relativeStreamPositions -> c
    int currentStringIndex -> d
    int getNumberOfBuckets() -> c
    int getNumberOfStringsPerBucket() -> d
    void addString(int,int) -> a
    byte[] getData() -> a
jxl.write.biff.ExternalNameRecord -> a.e.a.ai:
    jxl.common.Logger logger -> a
    java.lang.String name -> b
    byte[] getData() -> a
jxl.write.biff.ExternalSheetRecord -> a.e.a.aj:
    java.util.ArrayList xtis -> a
    int getIndex(int,int) -> a
    byte[] getData() -> a
    int getSupbookIndex(int) -> a
    int getFirstTabIndex(int) -> b
    void sheetInserted(int) -> c
jxl.write.biff.ExternalSheetRecord$XTI -> a.e.a.ak:
    int supbookIndex -> a
    int firstTab -> b
    int lastTab -> c
    void sheetInserted(int) -> a
jxl.write.biff.File -> a.e.a.al:
    jxl.common.Logger logger -> b
    jxl.write.biff.ExcelDataOutput data -> c
    java.io.OutputStream outputStream -> d
    int initialFileSize -> e
    int arrayGrowSize -> f
    jxl.WorkbookSettings workbookSettings -> g
    jxl.read.biff.CompoundFile readCompoundFile -> a
    void createDataOutput() -> b
    void close(boolean) -> a
    void write(jxl.biff.ByteData) -> a
    int getPos() -> a
    void setData(byte[],int) -> a
jxl.write.biff.FileDataOutput -> a.e.a.am:
    jxl.common.Logger logger -> a
    java.io.File temporaryFile -> b
    java.io.RandomAccessFile data -> c
    void write(byte[]) -> a
    int getPosition() -> a
    void setData(byte[],int) -> a
    void writeData(java.io.OutputStream) -> a
    void close() -> b
jxl.write.biff.FooterRecord -> a.e.a.an:
    byte[] data -> a
    java.lang.String footer -> b
    byte[] getData() -> a
jxl.write.biff.FunctionGroupCountRecord -> a.e.a.ao:
    byte[] data -> a
    int numFunctionGroups -> b
    byte[] getData() -> a
jxl.write.biff.GridSetRecord -> a.e.a.ap:
    byte[] data -> a
    boolean gridSet -> b
    byte[] getData() -> a
jxl.write.biff.GuttersRecord -> a.e.a.aq:
    byte[] data -> a
    int rowGutter -> b
    int colGutter -> c
    int maxRowOutline -> d
    int maxColumnOutline -> e
    byte[] getData() -> a
    void setMaxRowOutline(int) -> a
    void setMaxColumnOutline(int) -> b
jxl.write.biff.HeaderRecord -> a.e.a.ar:
    byte[] data -> a
    java.lang.String header -> b
    byte[] getData() -> a
jxl.write.biff.HideobjRecord -> a.e.a.as:
    int hidemode -> a
    byte[] data -> b
    byte[] getData() -> a
jxl.write.biff.HorizontalCentreRecord -> a.e.a.at:
    byte[] data -> a
    boolean centre -> b
    byte[] getData() -> a
jxl.write.biff.HorizontalPageBreaksRecord -> a.e.a.au:
    int[] rowBreaks -> a
    byte[] getData() -> a
jxl.write.biff.HyperlinkRecord -> a.e.a.av:
    jxl.common.Logger logger -> a
    int firstRow -> b
    int lastRow -> c
    int firstColumn -> d
    int lastColumn -> e
    java.net.URL url -> f
    java.io.File file -> g
    java.lang.String location -> h
    java.lang.String contents -> i
    jxl.write.biff.HyperlinkRecord$LinkType linkType -> j
    byte[] data -> k
    jxl.Range range -> l
    jxl.write.WritableSheet sheet -> m
    boolean modified -> n
    jxl.write.biff.HyperlinkRecord$LinkType urlLink -> o
    jxl.write.biff.HyperlinkRecord$LinkType fileLink -> p
    jxl.write.biff.HyperlinkRecord$LinkType uncLink -> q
    jxl.write.biff.HyperlinkRecord$LinkType workbookLink -> r
    jxl.write.biff.HyperlinkRecord$LinkType unknown -> s
    boolean isFile() -> c
    boolean isUNC() -> d
    boolean isURL() -> e
    boolean isLocation() -> f
    byte[] getData() -> a
    java.lang.String toString() -> toString
    void insertRow(int) -> a
    void insertColumn(int) -> b
    byte[] getURLData(byte[]) -> a
    byte[] getUNCData(byte[]) -> b
    byte[] getFileData(byte[]) -> c
    java.lang.String getShortName(java.lang.String) -> a
    byte[] getLocationData(byte[]) -> d
jxl.write.biff.HyperlinkRecord$1 -> a.e.a.aw:
jxl.write.biff.HyperlinkRecord$LinkType -> a.e.a.ax:
jxl.write.biff.IndexRecord -> a.e.a.ay:
    byte[] data -> a
    int rows -> b
    int bofPosition -> c
    int blocks -> d
    int dataPos -> e
    byte[] getData() -> a
    void addBlockPosition(int) -> a
    void setDataStartPosition(int) -> b
jxl.write.biff.InterfaceEndRecord -> a.e.a.az:
    byte[] getData() -> a
jxl.write.biff.InterfaceHeaderRecord -> a.e.a.ba:
    byte[] getData() -> a
jxl.write.biff.IterationRecord -> a.e.a.bb:
    boolean iterate -> a
    byte[] data -> b
    byte[] getData() -> a
jxl.write.biff.JxlWriteException -> a.e.a.bc:
    jxl.write.biff.JxlWriteException$WriteMessage formatInitialized -> a
    jxl.write.biff.JxlWriteException$WriteMessage cellReferenced -> b
    jxl.write.biff.JxlWriteException$WriteMessage maxRowsExceeded -> c
    jxl.write.biff.JxlWriteException$WriteMessage maxColumnsExceeded -> d
    jxl.write.biff.JxlWriteException$WriteMessage copyPropertySets -> e
jxl.write.biff.JxlWriteException$WriteMessage -> a.e.a.bd:
    java.lang.String message -> a
jxl.write.biff.LabelRecord -> a.e.a.be:
    jxl.common.Logger logger -> a
    java.lang.String contents -> b
    jxl.write.biff.SharedStrings sharedStrings -> c
    int index -> d
    jxl.CellType getType() -> c
    byte[] getData() -> a
    java.lang.String getContents() -> d
    void setCellDetails(jxl.biff.FormattingRecords,jxl.write.biff.SharedStrings,jxl.write.biff.WritableSheetImpl) -> a
jxl.write.biff.LeftMarginRecord -> a.e.a.bf:
jxl.write.biff.MMSRecord -> a.e.a.bg:
    byte numMenuItemsAdded -> a
    byte numMenuItemsDeleted -> b
    byte[] data -> c
    byte[] getData() -> a
jxl.write.biff.MarginRecord -> a.e.a.bh:
    double margin -> a
    byte[] getData() -> a
jxl.write.biff.MemoryDataOutput -> a.e.a.bi:
    jxl.common.Logger logger -> a
    byte[] data -> b
    int growSize -> c
    int pos -> d
    void write(byte[]) -> a
    int getPosition() -> a
    void setData(byte[],int) -> a
    void writeData(java.io.OutputStream) -> a
    void close() -> b
jxl.write.biff.MergedCells -> a.e.a.bj:
    jxl.common.Logger logger -> a
    java.util.ArrayList ranges -> b
    jxl.write.WritableSheet sheet -> c
    void insertRow(int) -> a
    void insertColumn(int) -> b
    jxl.Range[] getMergedCells() -> a
    void checkIntersections() -> b
    void checkRanges() -> c
    void write(jxl.write.biff.File) -> a
jxl.write.biff.MergedCellsRecord -> a.e.a.bk:
    java.util.ArrayList ranges -> a
    byte[] getData() -> a
jxl.write.biff.MulRKRecord -> a.e.a.bl:
    int row -> a
    int colFirst -> b
    int colLast -> c
    int[] rknumbers -> d
    int[] xfIndices -> e
    byte[] getData() -> a
jxl.write.biff.NameRecord -> a.e.a.bm:
    jxl.common.Logger logger -> a
    byte[] data -> b
    java.lang.String name -> c
    jxl.biff.BuiltInName builtInName -> d
    int index -> e
    int sheetRef -> f
    boolean modified -> g
    jxl.write.biff.NameRecord$NameRange[] ranges -> h
    jxl.write.biff.NameRecord$NameRange EMPTY_RANGE -> i
    byte[] getData() -> a
    java.lang.String getName() -> c
    int getIndex() -> d
    void rowInserted(int,int) -> a
    void columnInserted(int,int) -> b
jxl.write.biff.NameRecord$NameRange -> a.e.a.bn:
    int columnFirst -> a
    int rowFirst -> b
    int columnLast -> c
    int rowLast -> d
    int externalSheet -> e
    int getFirstColumn() -> a
    int getFirstRow() -> b
    int getLastColumn() -> c
    int getLastRow() -> d
    int getExternalSheet() -> e
    void incrementFirstRow() -> f
    void incrementLastRow() -> g
    void incrementFirstColumn() -> h
    void incrementLastColumn() -> i
    byte[] getData() -> j
jxl.write.biff.NineteenFourRecord -> a.e.a.bo:
    boolean nineteenFourDate -> a
    byte[] data -> b
    byte[] getData() -> a
jxl.write.biff.NumberRecord -> a.e.a.bp:
    double value -> a
    java.text.NumberFormat format -> b
    java.text.DecimalFormat defaultFormat -> c
    jxl.CellType getType() -> c
    byte[] getData() -> a
    java.lang.String getContents() -> d
    double getValue() -> n
jxl.write.biff.ObjProjRecord -> a.e.a.bq:
    byte[] data -> a
    byte[] getData() -> a
jxl.write.biff.ObjectProtectRecord -> a.e.a.br:
    boolean protection -> a
    byte[] data -> b
    byte[] getData() -> a
jxl.write.biff.PLSRecord -> a.e.a.bs:
    byte[] data -> a
    byte[] getData() -> a
jxl.write.biff.PaneRecord -> a.e.a.bt:
    int rowsVisible -> a
    int columnsVisible -> b
    byte[] getData() -> a
jxl.write.biff.PasswordRecord -> a.e.a.bu:
    java.lang.String password -> a
    byte[] data -> b
    byte[] getData() -> a
    int rotLeft15Bit(int,int) -> a
jxl.write.biff.PrecisionRecord -> a.e.a.bv:
    boolean asDisplayed -> a
    byte[] data -> b
    byte[] getData() -> a
jxl.write.biff.PrintGridLinesRecord -> a.e.a.bw:
    byte[] data -> a
    boolean printGridLines -> b
    byte[] getData() -> a
jxl.write.biff.PrintHeadersRecord -> a.e.a.bx:
    byte[] data -> a
    boolean printHeaders -> b
    byte[] getData() -> a
jxl.write.biff.Prot4RevPassRecord -> a.e.a.by:
    byte[] data -> a
    byte[] getData() -> a
jxl.write.biff.Prot4RevRecord -> a.e.a.bz:
    boolean protection -> a
    byte[] data -> b
    byte[] getData() -> a
jxl.write.biff.ProtectRecord -> a.e.a.ca:
    boolean protection -> a
    byte[] data -> b
    byte[] getData() -> a
jxl.write.biff.RefModeRecord -> a.e.a.cb:
    byte[] getData() -> a
jxl.write.biff.RefreshAllRecord -> a.e.a.cc:
    boolean refreshall -> a
    byte[] data -> b
    byte[] getData() -> a
jxl.write.biff.RightMarginRecord -> a.e.a.cd:
jxl.write.biff.RowRecord -> a.e.a.ce:
    jxl.common.Logger logger -> a
    jxl.write.biff.CellValue[] cells -> b
    int rowHeight -> c
    boolean collapsed -> d
    int rowNumber -> e
    int numColumns -> f
    int xfIndex -> g
    boolean defaultFormat -> h
    boolean matchesDefFontHeight -> i
    int defaultHeightIndicator -> j
    int maxColumns -> k
    int outlineLevel -> l
    boolean groupStart -> m
    jxl.write.WritableSheet sheet -> n
    void addCell(jxl.write.biff.CellValue) -> a
    void write(jxl.write.biff.File) -> a
    void writeCells(jxl.write.biff.File) -> b
    void writeIntegerValues(java.util.ArrayList,jxl.write.biff.File) -> a
    byte[] getData() -> a
    int getMaxColumn() -> c
    jxl.write.biff.CellValue getCell(int) -> a
    void incrementRow() -> d
    void insertColumn(int) -> b
    void rationalize(jxl.biff.IndexMapping) -> a
jxl.write.biff.RowsExceededException -> a.e.a.cf:
jxl.write.biff.SCLRecord -> a.e.a.cg:
    int zoomFactor -> a
    byte[] getData() -> a
jxl.write.biff.SSTContinueRecord -> a.e.a.ch:
    java.lang.String firstString -> a
    boolean includeLength -> b
    int firstStringLength -> c
    java.util.ArrayList strings -> d
    java.util.ArrayList stringLengths -> e
    byte[] data -> f
    int byteCount -> g
    int maxBytes -> h
    int setFirstString(java.lang.String,boolean) -> a
    int getOffset() -> c
    int add(java.lang.String) -> a
    byte[] getData() -> a
jxl.write.biff.SSTRecord -> a.e.a.ci:
    int numReferences -> a
    int numStrings -> b
    java.util.ArrayList strings -> c
    java.util.ArrayList stringLengths -> d
    byte[] data -> e
    int byteCount -> f
    int maxBytes -> g
    int add(java.lang.String) -> a
    int getOffset() -> c
    byte[] getData() -> a
jxl.write.biff.SaveRecalcRecord -> a.e.a.cj:
    byte[] data -> a
    boolean recalc -> b
    byte[] getData() -> a
jxl.write.biff.ScenarioProtectRecord -> a.e.a.ck:
    boolean protection -> a
    byte[] data -> b
    byte[] getData() -> a
jxl.write.biff.SelectionRecord -> a.e.a.cl:
    jxl.write.biff.SelectionRecord$PaneType pane -> e
    int column -> f
    int row -> g
    jxl.write.biff.SelectionRecord$PaneType lowerRight -> a
    jxl.write.biff.SelectionRecord$PaneType upperRight -> b
    jxl.write.biff.SelectionRecord$PaneType lowerLeft -> c
    jxl.write.biff.SelectionRecord$PaneType upperLeft -> d
    byte[] getData() -> a
jxl.write.biff.SelectionRecord$PaneType -> a.e.a.cm:
    int val -> a
jxl.write.biff.SetupRecord -> a.e.a.cn:
    jxl.common.Logger logger -> a
    byte[] data -> b
    double headerMargin -> c
    double footerMargin -> d
    jxl.format.PageOrientation orientation -> e
    jxl.format.PageOrder order -> f
    int paperSize -> g
    int scaleFactor -> h
    int pageStart -> i
    int fitWidth -> j
    int fitHeight -> k
    int horizontalPrintResolution -> l
    int verticalPrintResolution -> m
    int copies -> n
    boolean initialized -> o
    byte[] getData() -> a
jxl.write.biff.SharedStrings -> a.e.a.co:
    java.util.HashMap strings -> a
    java.util.ArrayList stringList -> b
    int totalOccurrences -> c
    int getIndex(java.lang.String) -> a
    java.lang.String get(int) -> a
    void write(jxl.write.biff.File) -> a
    jxl.write.biff.SSTContinueRecord createContinueRecord(java.lang.String,int,jxl.write.biff.File) -> a
jxl.write.biff.SheetWriter -> a.e.a.cp:
    jxl.common.Logger logger -> a
    jxl.write.biff.File outputFile -> b
    jxl.write.biff.RowRecord[] rows -> c
    int numRows -> d
    int numCols -> e
    jxl.SheetSettings settings -> f
    jxl.WorkbookSettings workbookSettings -> g
    java.util.ArrayList rowBreaks -> h
    java.util.ArrayList columnBreaks -> i
    java.util.ArrayList hyperlinks -> j
    java.util.ArrayList conditionalFormats -> k
    jxl.biff.AutoFilter autoFilter -> l
    java.util.ArrayList validatedCells -> m
    jxl.biff.DataValidation dataValidation -> n
    jxl.write.biff.MergedCells mergedCells -> o
    jxl.write.biff.PLSRecord plsRecord -> p
    jxl.write.biff.ButtonPropertySetRecord buttonPropertySet -> q
    jxl.biff.WorkspaceInformationRecord workspaceOptions -> r
    java.util.TreeSet columnFormats -> s
    jxl.biff.drawing.SheetDrawingWriter drawingWriter -> t
    boolean chartOnly -> u
    int maxRowOutlineLevel -> v
    int maxColumnOutlineLevel -> w
    jxl.write.biff.WritableSheetImpl sheet -> x
    void write() -> a
    void setWriteData(jxl.write.biff.RowRecord[],java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,jxl.write.biff.MergedCells,java.util.TreeSet,int,int) -> a
    void setDimensions(int,int) -> a
    void setSettings(jxl.SheetSettings) -> a
    void setDrawings(java.util.ArrayList,boolean) -> a
    jxl.biff.drawing.Chart[] getCharts() -> b
    void checkMergedBorders() -> c
    jxl.Cell[] getColumn(int) -> a
    void setPLS(jxl.write.biff.PLSRecord) -> a
    void setButtonPropertySet(jxl.write.biff.ButtonPropertySetRecord) -> a
    void setDataValidation(jxl.biff.DataValidation,java.util.ArrayList) -> a
    void setConditionalFormats(java.util.ArrayList) -> a
    void setAutoFilter(jxl.biff.AutoFilter) -> a
    void writeDataValidation() -> d
jxl.write.biff.StringRecord -> a.e.a.cq:
    java.lang.String value -> a
    byte[] getData() -> a
jxl.write.biff.StyleXFRecord -> a.e.a.cr:
    void setCellOptions(int) -> d
    void setLocked(boolean) -> b
jxl.write.biff.Styles -> a.e.a.cs:
    jxl.common.Logger logger -> a
    jxl.write.WritableFont arial10pt -> b
    jxl.write.WritableFont hyperlinkFont -> c
    jxl.write.WritableCellFormat normalStyle -> d
    jxl.write.WritableCellFormat hyperlinkStyle -> e
    jxl.write.WritableCellFormat hiddenStyle -> f
    jxl.write.WritableCellFormat defaultDateFormat -> g
    void initNormalStyle() -> g
    jxl.write.WritableCellFormat getNormalStyle() -> a
    void initHiddenStyle() -> h
    jxl.write.WritableCellFormat getHiddenStyle() -> b
    void initHyperlinkStyle() -> i
    jxl.write.WritableCellFormat getHyperlinkStyle() -> c
    void initArial10Pt() -> j
    jxl.write.WritableFont getArial10Pt() -> d
    void initHyperlinkFont() -> k
    jxl.write.WritableFont getHyperlinkFont() -> e
    void initDefaultDateFormat() -> l
    jxl.write.WritableCellFormat getDefaultDateFormat() -> f
    jxl.biff.XFRecord getFormat(jxl.biff.XFRecord) -> a
jxl.write.biff.SupbookRecord -> a.e.a.ct:
    jxl.common.Logger logger -> f
    jxl.write.biff.SupbookRecord$SupbookType type -> g
    byte[] data -> h
    int numSheets -> i
    java.lang.String fileName -> j
    java.lang.String[] sheetNames -> k
    jxl.WorkbookSettings workbookSettings -> l
    jxl.write.biff.SupbookRecord$SupbookType INTERNAL -> a
    jxl.write.biff.SupbookRecord$SupbookType EXTERNAL -> b
    jxl.write.biff.SupbookRecord$SupbookType ADDIN -> c
    jxl.write.biff.SupbookRecord$SupbookType LINK -> d
    jxl.write.biff.SupbookRecord$SupbookType UNKNOWN -> e
    void initInternal() -> f
    void adjustInternal(int) -> a
    void initExternal() -> h
    void initAddin() -> i
    byte[] getData() -> a
    jxl.write.biff.SupbookRecord$SupbookType getType() -> c
    int getNumberOfSheets() -> d
    java.lang.String getFileName() -> e
    int getSheetIndex(java.lang.String) -> a
    java.lang.String getSheetName(int) -> b
jxl.write.biff.SupbookRecord$1 -> a.e.a.cu:
jxl.write.biff.SupbookRecord$SupbookType -> a.e.a.cv:
jxl.write.biff.TabIdRecord -> a.e.a.cw:
    byte[] data -> a
    byte[] getData() -> a
jxl.write.biff.TemplateRecord -> a.e.a.cx:
    byte[] getData() -> a
jxl.write.biff.TopMarginRecord -> a.e.a.cy:
jxl.write.biff.UsesElfsRecord -> a.e.a.cz:
    byte[] data -> a
    boolean usesElfs -> b
    byte[] getData() -> a
jxl.write.biff.VerticalCentreRecord -> a.e.a.da:
    byte[] data -> a
    boolean centre -> b
    byte[] getData() -> a
jxl.write.biff.VerticalPageBreaksRecord -> a.e.a.db:
    int[] columnBreaks -> a
    byte[] getData() -> a
jxl.write.biff.Weird1Record -> a.e.a.dc:
    byte[] getData() -> a
jxl.write.biff.Window1Record -> a.e.a.dd:
    byte[] data -> a
    int selectedSheet -> b
    byte[] getData() -> a
jxl.write.biff.Window2Record -> a.e.a.de:
    byte[] data -> a
    byte[] getData() -> a
jxl.write.biff.WindowProtectRecord -> a.e.a.df:
    boolean protection -> a
    byte[] data -> b
    byte[] getData() -> a
jxl.write.biff.WritableFontRecord -> a.e.a.dg:
    void setBoldStyle(int) -> c
jxl.write.biff.WritableFonts -> a.e.a.dh:
jxl.write.biff.WritableFormattingRecords -> a.e.a.di:
jxl.write.biff.WritableSheetImpl -> a.e.a.dj:
    jxl.common.Logger logger -> a
    java.lang.String name -> b
    jxl.write.biff.File outputFile -> c
    jxl.write.biff.RowRecord[] rows -> d
    jxl.biff.FormattingRecords formatRecords -> e
    jxl.write.biff.SharedStrings sharedStrings -> f
    java.util.TreeSet columnFormats -> g
    java.util.TreeSet autosizedColumns -> h
    java.util.ArrayList hyperlinks -> i
    jxl.write.biff.MergedCells mergedCells -> j
    int numRows -> k
    int numColumns -> l
    jxl.write.biff.PLSRecord plsRecord -> m
    jxl.write.biff.ButtonPropertySetRecord buttonPropertySet -> n
    boolean chartOnly -> o
    jxl.biff.DataValidation dataValidation -> p
    java.util.ArrayList rowBreaks -> q
    java.util.ArrayList columnBreaks -> r
    java.util.ArrayList drawings -> s
    java.util.ArrayList images -> t
    java.util.ArrayList conditionalFormats -> u
    jxl.biff.AutoFilter autoFilter -> v
    java.util.ArrayList validatedCells -> w
    jxl.biff.drawing.ComboBox comboBox -> x
    boolean drawingsModified -> y
    int maxRowOutlineLevel -> z
    int maxColumnOutlineLevel -> A
    jxl.SheetSettings settings -> B
    jxl.write.biff.SheetWriter sheetWriter -> C
    jxl.WorkbookSettings workbookSettings -> D
    jxl.write.biff.WritableWorkbookImpl workbook -> E
    char[] illegalSheetNameCharacters -> F
    java.lang.String[] imageTypes -> G
    jxl.Cell getCell(int,int) -> a
    jxl.write.WritableCell getWritableCell(int,int) -> b
    int getRows() -> a
    int getColumns() -> b
    java.lang.String getName() -> c
    void insertRow(int) -> b
    void insertColumn(int) -> c
    void addCell(jxl.write.WritableCell) -> a
    jxl.write.biff.RowRecord getRowRecord(int) -> d
    jxl.write.biff.ColumnInfoRecord getColumnInfo(int) -> e
    void setColumnView(int,jxl.CellView) -> a
    void write() -> e
    jxl.SheetSettings getSettings() -> d
    jxl.WorkbookSettings getWorkbookSettings() -> f
    jxl.biff.drawing.Chart[] getCharts() -> g
    void checkMergedBorders() -> h
    void rationalize(jxl.biff.IndexMapping,jxl.biff.IndexMapping,jxl.biff.IndexMapping) -> a
    jxl.write.biff.WritableWorkbookImpl getWorkbook() -> i
    boolean isChartOnly() -> j
    jxl.CellView getColumnView(int) -> a
    java.lang.String validateName(java.lang.String) -> a
    void addDrawing(jxl.biff.drawing.DrawingGroupObject) -> a
    void removeDrawing(jxl.biff.drawing.DrawingGroupObject) -> b
    void removeDataValidation(jxl.write.biff.CellValue) -> a
    void addValidationCell(jxl.write.biff.CellValue) -> b
    jxl.biff.drawing.ComboBox getComboBox() -> k
    void setComboBox(jxl.biff.drawing.ComboBox) -> a
    void autosizeColumns() -> l
    void autosizeColumn(int) -> f
jxl.write.biff.WritableSheetImpl$1 -> a.e.a.dk:
jxl.write.biff.WritableSheetImpl$ColumnInfoComparator -> a.e.a.dl:
    boolean equals(java.lang.Object) -> equals
    int compare(java.lang.Object,java.lang.Object) -> compare
jxl.write.biff.WritableWorkbookImpl -> a.e.a.dm:
    jxl.common.Logger logger -> f
    jxl.biff.FormattingRecords formatRecords -> g
    jxl.write.biff.File outputFile -> h
    java.util.ArrayList sheets -> i
    jxl.biff.Fonts fonts -> j
    jxl.write.biff.ExternalSheetRecord externSheet -> k
    java.util.ArrayList supbooks -> l
    java.util.ArrayList names -> m
    java.util.HashMap nameRecords -> n
    jxl.write.biff.SharedStrings sharedStrings -> o
    boolean closeStream -> p
    boolean wbProtected -> q
    jxl.WorkbookSettings settings -> r
    java.util.ArrayList rcirCells -> s
    jxl.biff.drawing.DrawingGroup drawingGroup -> t
    jxl.write.biff.Styles styles -> u
    boolean containsMacros -> v
    jxl.write.biff.ButtonPropertySetRecord buttonPropertySet -> w
    jxl.write.biff.CountryRecord countryRecord -> x
    java.lang.Object SYNCHRONIZER -> y
    java.lang.String[] addInFunctionNames -> z
    jxl.biff.XCTRecord[] xctRecords -> A
    java.lang.String[] getSheetNames() -> d
    jxl.write.WritableSheet getSheet(int) -> c
    int getNumberOfSheets() -> e
    void close() -> b
    jxl.write.WritableSheet createSheet(java.lang.String,int,boolean) -> a
    jxl.write.WritableSheet createSheet(java.lang.String,int) -> a
    void write() -> c
    void rationalize() -> h
    int getInternalSheetIndex(java.lang.String) -> c
    java.lang.String getExternalSheetName(int) -> b
    jxl.read.biff.BOFRecord getWorkbookBof() -> a
    int getExternalSheetIndex(java.lang.String) -> b
    java.lang.String getName(int) -> a
    int getNameIndex(java.lang.String) -> a
    void columnInserted(jxl.write.biff.WritableSheetImpl,int) -> a
    void rowInserted(jxl.write.biff.WritableSheetImpl,int) -> b
    void addDrawing(jxl.biff.drawing.DrawingGroupObject) -> a
    jxl.biff.drawing.DrawingGroup getDrawingGroup() -> f
    jxl.write.biff.Styles getStyles() -> g
    void addNameArea(jxl.biff.BuiltInName,jxl.write.WritableSheet,int,int,int,int,boolean) -> a
    void addNameArea(jxl.biff.BuiltInName,jxl.write.WritableSheet,int,int,int,int,int,int,int,int,boolean) -> a
jxl.write.biff.WriteAccessRecord -> a.e.a.dn:
    byte[] data -> a
    byte[] getData() -> a
