android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    void <init>(android.support.v4.app.FragmentManagerImpl) -> <init>
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> commitInternal
    void run() -> run
    void popFromBackStack(boolean) -> popFromBackStack
    java.lang.String getName() -> getName
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
    void <init>() -> <init>
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.support.v4.app.FragmentManagerImpl,android.support.v4.app.BackStackRecord) -> <init>
    void <init>(android.os.Parcel) -> <init>
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    void <init>() -> <init>
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int mStyle -> a
    int mTheme -> b
    boolean mCancelable -> c
    boolean mShowsDialog -> d
    int mBackStackId -> e
    android.app.Dialog mDialog -> f
    boolean mViewDestroyed -> g
    boolean mDismissed -> h
    boolean mShownByMe -> i
    void <init>() -> <init>
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    void dismissInternal(boolean) -> dismissInternal
    int getTheme() -> getTheme
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> a
    int mState -> j
    android.view.View mAnimatingAway -> k
    int mStateAfterAnimating -> l
    android.os.Bundle mSavedFragmentState -> m
    android.util.SparseArray mSavedViewState -> n
    int mIndex -> o
    java.lang.String mWho -> p
    android.os.Bundle mArguments -> q
    android.support.v4.app.Fragment mTarget -> r
    int mTargetIndex -> s
    int mTargetRequestCode -> t
    boolean mAdded -> u
    boolean mRemoving -> v
    boolean mResumed -> w
    boolean mFromLayout -> x
    boolean mInLayout -> y
    boolean mRestored -> z
    int mBackStackNesting -> A
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> B
    android.support.v4.app.FragmentActivity mActivity -> C
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> D
    android.support.v4.app.Fragment mParentFragment -> E
    int mFragmentId -> F
    int mContainerId -> G
    java.lang.String mTag -> H
    boolean mHidden -> I
    boolean mDetached -> J
    boolean mRetainInstance -> K
    boolean mRetaining -> L
    boolean mHasMenu -> M
    boolean mMenuVisible -> N
    boolean mCalled -> O
    int mNextAnim -> P
    android.view.ViewGroup mContainer -> Q
    android.view.View mView -> R
    android.view.View mInnerView -> S
    boolean mDeferStart -> T
    boolean mUserVisibleHint -> U
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> V
    boolean mLoadersStarted -> W
    boolean mCheckedForLoaderManager -> X
    void <init>() -> <init>
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> isSupportFragmentClass
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    void onHiddenChanged(boolean) -> onHiddenChanged
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
    void <clinit>() -> <clinit>
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> a
    void <init>(android.support.v4.app.Fragment) -> <init>
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
    void <init>(java.lang.String,java.lang.Exception) -> <init>
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void <init>() -> <init>
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> a
    void <init>(android.support.v4.app.FragmentActivity) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.FragmentActivity$2:
    android.support.v4.app.FragmentActivity this$0 -> a
    void <init>(android.support.v4.app.FragmentActivity) -> <init>
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.FragmentActivity$FragmentTag:
    int[] Fragment -> a
    void <clinit>() -> <clinit>
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    android.support.v4.util.SimpleArrayMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SimpleArrayMap loaders -> e
    void <init>() -> <init>
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    void <init>() -> <init>
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    void popBackStack(int,int) -> popBackStack
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void <init>() -> <init>
    void throwException(java.lang.RuntimeException) -> throwException
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void moveToState(int,boolean) -> moveToState
    void moveToState(int,int,int,boolean) -> moveToState
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void checkStateLoss() -> checkStateLoss
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> reportBackStackChanged
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> popBackStackState
    java.util.ArrayList retainNonConfig() -> retainNonConfig
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> restoreAllState
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
    void <clinit>() -> <clinit>
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void <init>(android.support.v4.app.FragmentManagerImpl) -> <init>
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    void <init>(android.support.v4.app.FragmentManagerImpl,int,int) -> <init>
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void <init>(android.support.v4.app.FragmentManagerImpl,android.support.v4.app.Fragment) -> <init>
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>() -> <init>
    void <init>(android.os.Parcel) -> <init>
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    void <init>() -> <init>
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <init>(android.support.v4.app.Fragment) -> <init>
    void <init>(android.os.Parcel) -> <init>
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void <clinit>() -> <clinit>
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    void <init>() -> <init>
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    void <init>() -> <init>
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    void <init>() -> <init>
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void <init>(java.lang.String,android.support.v4.app.FragmentActivity,boolean) -> <init>
    void updateActivity(android.support.v4.app.FragmentActivity) -> updateActivity
    void doStart() -> doStart
    void doStop() -> doStop
    void doRetain() -> doRetain
    void finishRetain() -> finishRetain
    void doReportNextStart() -> doReportNextStart
    void doReportStart() -> doReportStart
    void doDestroy() -> doDestroy
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
    void <clinit>() -> <clinit>
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> start
    void retain() -> retain
    void finishRetain() -> finishRetain
    void reportStart() -> reportStart
    void stop() -> stop
    void destroy() -> destroy
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> wrap
    void <init>(android.content.Context) -> <init>
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
    void <init>(java.lang.String) -> <init>
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    boolean mProcessingChange -> g
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    void startLoading() -> startLoading
    void onStartLoading() -> onStartLoading
    void stopLoading() -> stopLoading
    void onStopLoading() -> onStopLoading
    void reset() -> reset
    void onReset() -> onReset
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
android.support.v4.util.ArrayMap -> android.support.v4.util.ArrayMap:
    android.support.v4.util.MapCollections mCollections -> a
    void <init>() -> <init>
    android.support.v4.util.MapCollections getCollection() -> getCollection
    void putAll(java.util.Map) -> putAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.util.ArrayMap$1:
    android.support.v4.util.ArrayMap this$0 -> a
    void <init>(android.support.v4.util.ArrayMap) -> <init>
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.ContainerHelpers -> android.support.v4.util.ContainerHelpers:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    int idealIntArraySize(int) -> idealIntArraySize
    int idealByteArraySize(int) -> idealByteArraySize
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int binarySearch(int[],int,int) -> binarySearch
    void <clinit>() -> <clinit>
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void <init>(java.lang.String) -> <init>
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
android.support.v4.util.MapCollections -> android.support.v4.util.MapCollections:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> b
    android.support.v4.util.MapCollections$KeySet mKeySet -> c
    android.support.v4.util.MapCollections$ValuesCollection mValues -> d
    void <init>() -> <init>
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    java.util.Set getEntrySet() -> getEntrySet
    java.util.Set getKeySet() -> getKeySet
    java.util.Collection getValues() -> getValues
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.util.MapCollections$ArrayIterator:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    void <init>(android.support.v4.util.MapCollections,int) -> <init>
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.util.MapCollections$EntrySet:
    android.support.v4.util.MapCollections this$0 -> a
    void <init>(android.support.v4.util.MapCollections) -> <init>
    boolean add(java.util.Map$Entry) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.util.MapCollections$KeySet:
    android.support.v4.util.MapCollections this$0 -> a
    void <init>(android.support.v4.util.MapCollections) -> <init>
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.util.MapCollections$MapIterator:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    void <init>(android.support.v4.util.MapCollections) -> <init>
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.util.MapCollections$ValuesCollection:
    android.support.v4.util.MapCollections this$0 -> a
    void <init>(android.support.v4.util.MapCollections) -> <init>
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.util.SimpleArrayMap:
    java.lang.Object[] mBaseCache -> b
    int mBaseCacheSize -> c
    java.lang.Object[] mTwiceBaseCache -> d
    int mTwiceBaseCacheSize -> e
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    int indexOf(java.lang.Object,int) -> indexOf
    int indexOfNull() -> indexOfNull
    void allocArrays(int) -> allocArrays
    void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    void <init>() -> <init>
    void clear() -> clear
    void ensureCapacity(int) -> ensureCapacity
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> removeAt
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    void <init>() -> <init>
    void <init>(int) -> <init>
    android.support.v4.util.SparseArrayCompat clone() -> clone
    void gc() -> gc
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void clear() -> clear
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
    void <clinit>() -> <clinit>
org.pulpdust.lesserpad.CategoryEditor -> org.pulpdust.lesserpad.CategoryEditor:
    java.io.File path -> a
    java.lang.String default_dir -> b
    float font_size -> c
    int look_style -> d
    android.widget.TextView label -> e
    android.widget.ListView mlist -> f
    android.widget.Button newbtn -> g
    android.widget.Button renbtn -> h
    android.widget.Button delbtn -> i
    android.widget.EditText input -> j
    java.util.List dirs -> k
    android.widget.ArrayAdapter adirs -> l
    java.io.File parent -> m
    java.lang.String name -> n
    boolean isable -> o
    org.pulpdust.lesserpad.libLesserPad llp -> p
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    boolean isDeletable(java.lang.String) -> isDeletable
    void namingOhji(java.lang.String) -> namingOhji
    void sureDelete() -> sureDelete
    boolean setAble(boolean,boolean) -> setAble
    void readPrefs() -> readPrefs
org.pulpdust.lesserpad.CategoryEditor$1 -> org.pulpdust.lesserpad.CategoryEditor$1:
    org.pulpdust.lesserpad.CategoryEditor this$0 -> a
    void <init>(org.pulpdust.lesserpad.CategoryEditor) -> <init>
    void onClick(android.view.View) -> onClick
org.pulpdust.lesserpad.CategoryEditor$2 -> org.pulpdust.lesserpad.CategoryEditor$2:
    org.pulpdust.lesserpad.CategoryEditor this$0 -> a
    void <init>(org.pulpdust.lesserpad.CategoryEditor) -> <init>
    void onClick(android.view.View) -> onClick
org.pulpdust.lesserpad.CategoryEditor$3 -> org.pulpdust.lesserpad.CategoryEditor$3:
    org.pulpdust.lesserpad.CategoryEditor this$0 -> a
    void <init>(org.pulpdust.lesserpad.CategoryEditor) -> <init>
    void onClick(android.view.View) -> onClick
org.pulpdust.lesserpad.CategoryEditor$4 -> org.pulpdust.lesserpad.CategoryEditor$4:
    org.pulpdust.lesserpad.CategoryEditor this$0 -> a
    void <init>(org.pulpdust.lesserpad.CategoryEditor) -> <init>
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
org.pulpdust.lesserpad.CategoryEditor$5 -> org.pulpdust.lesserpad.CategoryEditor$5:
    java.lang.String val$oldname -> a
    org.pulpdust.lesserpad.CategoryEditor this$0 -> b
    void <init>(org.pulpdust.lesserpad.CategoryEditor,java.lang.String) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
org.pulpdust.lesserpad.CategoryEditor$6 -> org.pulpdust.lesserpad.CategoryEditor$6:
    org.pulpdust.lesserpad.CategoryEditor this$0 -> a
    void <init>(org.pulpdust.lesserpad.CategoryEditor) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
org.pulpdust.lesserpad.CategoryEditor$7 -> org.pulpdust.lesserpad.CategoryEditor$7:
    org.pulpdust.lesserpad.CategoryEditor this$0 -> a
    void <init>(org.pulpdust.lesserpad.CategoryEditor) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
org.pulpdust.lesserpad.LesserPadActivity -> org.pulpdust.lesserpad.LesserPadActivity:
    int OPEN_AS_DEC -> n
    int OPEN_AS_ENC -> o
    int SAVE_AS_DEC -> p
    int SAVE_AS_ENC -> q
    int ENC_FROM_MENU -> r
    int DEC_FROM_MENU -> s
    int CLOSE_AS_DEC -> t
    int CLOSE_AS_ENC -> u
    int fmode -> v
    int lmode -> w
    boolean dontsave -> x
    boolean oncreate -> y
    java.io.File path -> z
    java.lang.String name -> A
    java.lang.String default_dir -> B
    int cur_pos -> C
    float font_size -> D
    int look_style -> E
    boolean hide_ext -> F
    boolean spec_path -> G
    java.lang.String path_to -> H
    boolean abarnotsplit -> I
    boolean wosave -> J
    android.widget.EditText etxt -> K
    android.widget.Spinner ebox -> L
    android.widget.TextView label -> M
    java.util.List dirs -> N
    android.widget.ArrayAdapter adirs -> O
    java.lang.String disuse -> P
    java.lang.String undo_text -> Q
    java.lang.Integer undo_pos -> R
    java.lang.Integer undo_mode -> S
    java.lang.Integer undo_length -> T
    boolean undo_flag -> U
    java.lang.String former -> V
    java.lang.String action -> W
    org.pulpdust.lesserpad.libLesserPad llp -> X
    boolean priv -> Y
    java.lang.String pass -> Z
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onResume() -> onResume
    void onRestart() -> onRestart
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void doMove(android.content.Context,int) -> doMove
    boolean fileOpen(android.net.Uri) -> fileOpen
    void fileOpened(android.net.Uri) -> fileOpened
    void doSave(java.lang.String) -> doSave
    boolean textFiling(java.lang.String) -> textFiling
    java.lang.String enTitle(int,java.lang.String) -> enTitle
    void doCopy(java.lang.CharSequence) -> doCopy
    java.lang.CharSequence getCopy() -> getCopy
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void forActionBarMenu(android.view.Menu) -> forActionBarMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void echoProtect(int) -> echoProtect
    void doCut() -> doCut
    void todoCopy() -> todoCopy
    void doPaste() -> doPaste
    void doInsert(java.lang.CharSequence) -> doInsert
    void showDetail(android.content.Context,android.support.v4.app.FragmentActivity) -> showDetail
    android.app.AlertDialog echoDetail(android.content.Context,android.support.v4.app.FragmentActivity,int,java.lang.String) -> echoDetail
    android.app.AlertDialog sureDelete(android.content.Context,android.app.Activity) -> sureDelete
    boolean doDelete(java.io.File,java.lang.String) -> doDelete
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean doBack() -> doBack
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void setLabel(java.lang.String) -> setLabel
    java.lang.String toEncrypt(java.lang.String,java.lang.String) -> toEncrypt
    void readPrefs() -> readPrefs
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void <clinit>() -> <clinit>
org.pulpdust.lesserpad.LesserPadActivity$1 -> org.pulpdust.lesserpad.LesserPadActivity$1:
    org.pulpdust.lesserpad.LesserPadActivity this$0 -> a
    void <init>(org.pulpdust.lesserpad.LesserPadActivity) -> <init>
    void onClick(android.view.View) -> onClick
org.pulpdust.lesserpad.LesserPadActivity$2 -> org.pulpdust.lesserpad.LesserPadActivity$2:
    void <init>() -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
org.pulpdust.lesserpad.LesserPadActivity$3 -> org.pulpdust.lesserpad.LesserPadActivity$3:
    java.lang.String val$line -> a
    android.support.v4.app.FragmentActivity val$av -> b
    android.content.Context val$c -> c
    void <init>(java.lang.String,android.support.v4.app.FragmentActivity,android.content.Context) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
org.pulpdust.lesserpad.LesserPadActivity$4 -> org.pulpdust.lesserpad.LesserPadActivity$4:
    void <init>() -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
org.pulpdust.lesserpad.LesserPadActivity$5 -> org.pulpdust.lesserpad.LesserPadActivity$5:
    android.app.Activity val$av -> a
    android.content.Context val$c -> b
    void <init>(android.app.Activity,android.content.Context) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
org.pulpdust.lesserpad.LesserPadActivity$DeleteDialog -> org.pulpdust.lesserpad.LesserPadActivity$DeleteDialog:
    android.content.Context cx -> Y
    void <init>() -> <init>
    org.pulpdust.lesserpad.LesserPadActivity$DeleteDialog newInstance(android.content.Context) -> newInstance
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
org.pulpdust.lesserpad.LesserPadActivity$DetailDialog -> org.pulpdust.lesserpad.LesserPadActivity$DetailDialog:
    android.content.Context cx -> Y
    int ln -> Z
    java.lang.String li -> aa
    void <init>() -> <init>
    org.pulpdust.lesserpad.LesserPadActivity$DetailDialog newInstance(android.content.Context,int,java.lang.String) -> newInstance
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
org.pulpdust.lesserpad.LesserPadActivity$EditMemo -> org.pulpdust.lesserpad.LesserPadActivity$EditMemo:
    android.graphics.Rect rt -> a
    android.graphics.Paint pt -> b
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onDraw(android.graphics.Canvas) -> onDraw
org.pulpdust.lesserpad.LesserPadActivity$Mover -> org.pulpdust.lesserpad.LesserPadActivity$Mover:
    org.pulpdust.lesserpad.LesserPadActivity this$0 -> a
    void <init>(org.pulpdust.lesserpad.LesserPadActivity) -> <init>
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
org.pulpdust.lesserpad.LesserPadListActivity -> org.pulpdust.lesserpad.LesserPadListActivity:
    java.io.File path -> n
    java.lang.String default_dir -> o
    float font_size -> p
    int look_style -> q
    boolean hide_ext -> r
    boolean spec_path -> s
    java.lang.String path_to -> t
    java.lang.String last_dir -> u
    int sort_by -> v
    android.widget.Spinner ebox -> w
    android.widget.TextView label -> x
    android.widget.ListView mlist -> y
    android.widget.Button newbtn -> z
    java.util.List dirs -> A
    android.widget.ArrayAdapter adirs -> B
    android.widget.ArrayAdapter amemos -> C
    java.util.List memos -> D
    java.util.List ls -> E
    org.pulpdust.lesserpad.libLesserPad llp -> F
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void doChange(int) -> doChange
    void listMemos(java.io.File) -> listMemos
    void doNew() -> doNew
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void forActionBarMenu(android.view.Menu) -> forActionBarMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void readPrefs() -> readPrefs
    void writeProps() -> writeProps
    void onStop() -> onStop
    void <clinit>() -> <clinit>
org.pulpdust.lesserpad.LesserPadListActivity$1 -> org.pulpdust.lesserpad.LesserPadListActivity$1:
    org.pulpdust.lesserpad.LesserPadListActivity this$0 -> a
    void <init>(org.pulpdust.lesserpad.LesserPadListActivity) -> <init>
    void onClick(android.view.View) -> onClick
org.pulpdust.lesserpad.LesserPadListActivity$2 -> org.pulpdust.lesserpad.LesserPadListActivity$2:
    org.pulpdust.lesserpad.LesserPadListActivity this$0 -> a
    void <init>(org.pulpdust.lesserpad.LesserPadListActivity) -> <init>
    void onClick(android.view.View) -> onClick
org.pulpdust.lesserpad.LesserPadListActivity$3 -> org.pulpdust.lesserpad.LesserPadListActivity$3:
    org.pulpdust.lesserpad.LesserPadListActivity this$0 -> a
    void <init>(org.pulpdust.lesserpad.LesserPadListActivity,android.content.Context,int,java.util.List) -> <init>
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
org.pulpdust.lesserpad.LesserPadListActivity$4 -> org.pulpdust.lesserpad.LesserPadListActivity$4:
    org.pulpdust.lesserpad.LesserPadListActivity this$0 -> a
    void <init>(org.pulpdust.lesserpad.LesserPadListActivity) -> <init>
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
org.pulpdust.lesserpad.LesserPadListActivity$5 -> org.pulpdust.lesserpad.LesserPadListActivity$5:
    org.pulpdust.lesserpad.LesserPadListActivity this$0 -> a
    void <init>(org.pulpdust.lesserpad.LesserPadListActivity) -> <init>
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
org.pulpdust.lesserpad.LesserPadListActivity$6 -> org.pulpdust.lesserpad.LesserPadListActivity$6:
    void <init>() -> <init>
    int compare(java.io.File,java.io.File) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.pulpdust.lesserpad.LesserPadListActivity$Changer -> org.pulpdust.lesserpad.LesserPadListActivity$Changer:
    org.pulpdust.lesserpad.LesserPadListActivity this$0 -> a
    void <init>(org.pulpdust.lesserpad.LesserPadListActivity) -> <init>
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
org.pulpdust.lesserpad.LesserPadListActivity$SortDialog -> org.pulpdust.lesserpad.LesserPadListActivity$SortDialog:
    void <init>() -> <init>
    org.pulpdust.lesserpad.LesserPadListActivity$SortDialog newInstance() -> newInstance
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
org.pulpdust.lesserpad.LesserPadListActivity$SortDialog$1 -> org.pulpdust.lesserpad.LesserPadListActivity$SortDialog$1:
    org.pulpdust.lesserpad.LesserPadListActivity$SortDialog this$0 -> a
    void <init>(org.pulpdust.lesserpad.LesserPadListActivity$SortDialog) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
org.pulpdust.lesserpad.LesserPadPrefs -> org.pulpdust.lesserpad.LesserPadPrefs:
    int look_style -> a
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void readPrefs() -> readPrefs
org.pulpdust.lesserpad.ProtectActivity -> org.pulpdust.lesserpad.ProtectActivity:
    int look_style -> n
    android.widget.TextView label -> o
    android.widget.TextView guide -> p
    android.widget.EditText passbox -> q
    android.widget.Button canbtn -> r
    android.widget.Button okbtn -> s
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void readPrefs() -> readPrefs
org.pulpdust.lesserpad.ProtectActivity$1 -> org.pulpdust.lesserpad.ProtectActivity$1:
    org.pulpdust.lesserpad.ProtectActivity this$0 -> a
    void <init>(org.pulpdust.lesserpad.ProtectActivity) -> <init>
    void onClick(android.view.View) -> onClick
org.pulpdust.lesserpad.ProtectActivity$2 -> org.pulpdust.lesserpad.ProtectActivity$2:
    org.pulpdust.lesserpad.ProtectActivity this$0 -> a
    void <init>(org.pulpdust.lesserpad.ProtectActivity) -> <init>
    void onClick(android.view.View) -> onClick
org.pulpdust.lesserpad.forBase -> org.pulpdust.lesserpad.forBase:
    void doCopy(android.content.Context,java.lang.CharSequence) -> doCopy
    java.lang.CharSequence getCopy(android.content.Context) -> getCopy
org.pulpdust.lesserpad.forFroyo -> org.pulpdust.lesserpad.forFroyo:
    void <init>() -> <init>
    java.lang.String doEncrypt(java.lang.String,java.lang.String) -> doEncrypt
    java.lang.String doDecrypt(java.lang.String,java.lang.String) -> doDecrypt
org.pulpdust.lesserpad.forHoneycomb -> org.pulpdust.lesserpad.forHoneycomb:
    void <init>() -> <init>
    void setEditText(android.widget.EditText,android.content.Context,android.app.Activity,int) -> setEditText
    void setActionBar(android.app.Activity,int,android.widget.ArrayAdapter,int) -> setActionBar
    void setSelection(android.app.Activity,int) -> setSelection
    void setText(android.app.Activity,java.lang.CharSequence) -> setText
    void doCopy(android.content.Context,java.lang.CharSequence) -> doCopy
    java.lang.CharSequence getCopy(android.content.Context) -> getCopy
org.pulpdust.lesserpad.forHoneycomb$1 -> org.pulpdust.lesserpad.forHoneycomb$1:
    org.pulpdust.lesserpad.libLesserPad llp -> a
    android.content.Context val$context -> b
    android.widget.EditText val$etxt -> c
    android.app.Activity val$av -> d
    int val$look -> e
    org.pulpdust.lesserpad.forHoneycomb this$0 -> f
    void <init>(org.pulpdust.lesserpad.forHoneycomb,android.content.Context,android.widget.EditText,android.app.Activity,int) -> <init>
    boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
org.pulpdust.lesserpad.forHoneycomb$2 -> org.pulpdust.lesserpad.forHoneycomb$2:
    int val$mode -> a
    android.app.Activity val$av -> b
    org.pulpdust.lesserpad.forHoneycomb this$0 -> c
    void <init>(org.pulpdust.lesserpad.forHoneycomb,int,android.app.Activity) -> <init>
    boolean onNavigationItemSelected(int,long) -> onNavigationItemSelected
org.pulpdust.lesserpad.forICS -> org.pulpdust.lesserpad.forICS:
    void <init>() -> <init>
    void setUiOptions(int,android.app.Activity) -> setUiOptions
org.pulpdust.lesserpad.forLollipop -> org.pulpdust.lesserpad.forLollipop:
    void readyActionBar(android.view.View,android.app.Activity,int,int,boolean) -> readyActionBar
    void setMenuItems(android.view.Menu,boolean,boolean) -> setMenuItems
org.pulpdust.lesserpad.libLesserPad -> org.pulpdust.lesserpad.libLesserPad:
    java.lang.String TAG -> a
    void <init>() -> <init>
    void listDir(java.io.File,android.widget.ArrayAdapter,java.util.List,android.widget.Spinner,android.app.Activity,java.lang.String) -> listDir
    void goSearch(android.content.Context,android.widget.EditText) -> goSearch
    java.lang.String getSelection(boolean,android.widget.EditText) -> getSelection
    android.content.Intent daLaunch(android.app.Activity,android.widget.EditText,int) -> daLaunch
    boolean isIntentAvailable(android.content.Context,java.lang.String) -> isIntentAvailable
    java.lang.String getSum(java.lang.String,int) -> getSum
