com.ds.avare.AirportActivity
com.ds.avare.AirportActivity: AirportActivity()
com.ds.avare.AirportActivity: void onBackPressed()
com.ds.avare.AirportActivity: void onCreate(android.os.Bundle)
com.ds.avare.AirportActivity: boolean arePopupsShowing()
com.ds.avare.AirportActivity: void setupViewInfo()
com.ds.avare.AirportActivity: void addAirport(java.lang.String)
com.ds.avare.AirportActivity: void setViewFromPos(int)
com.ds.avare.AirportActivity: void setNewDestinationFromPos(int)
com.ds.avare.AirportActivity: void onPause()
com.ds.avare.AirportActivity: void onResume()
com.ds.avare.AirportActivity: void update(java.util.Observable,java.lang.Object)
com.ds.avare.AirportActivity: java.util.ArrayList access$000(com.ds.avare.AirportActivity)
com.ds.avare.AirportActivity: boolean access$100(com.ds.avare.AirportActivity)
com.ds.avare.AirportActivity: void access$200(com.ds.avare.AirportActivity,int)
com.ds.avare.AirportActivity: com.ds.avare.StorageService access$300(com.ds.avare.AirportActivity)
com.ds.avare.AirportActivity: android.app.AlertDialog access$402(com.ds.avare.AirportActivity,android.app.AlertDialog)
com.ds.avare.AirportActivity: android.app.AlertDialog access$400(com.ds.avare.AirportActivity)
com.ds.avare.AirportActivity: java.util.ArrayList access$500(com.ds.avare.AirportActivity)
com.ds.avare.AirportActivity: void access$600(com.ds.avare.AirportActivity,int)
com.ds.avare.AirportActivity: android.app.AlertDialog access$702(com.ds.avare.AirportActivity,android.app.AlertDialog)
com.ds.avare.AirportActivity: android.app.AlertDialog access$700(com.ds.avare.AirportActivity)
com.ds.avare.AirportActivity: com.ds.avare.views.AfdView access$800(com.ds.avare.AirportActivity)
com.ds.avare.AirportActivity: com.ds.avare.StorageService access$302(com.ds.avare.AirportActivity,com.ds.avare.StorageService)
com.ds.avare.AirportActivity: com.ds.avare.gps.GpsInterface access$900(com.ds.avare.AirportActivity)
com.ds.avare.AirportActivity: java.util.ArrayList access$002(com.ds.avare.AirportActivity,java.util.ArrayList)
com.ds.avare.AirportActivity: java.util.ArrayList access$502(com.ds.avare.AirportActivity,java.util.ArrayList)
com.ds.avare.AirportActivity: java.lang.String access$1000(com.ds.avare.AirportActivity)
com.ds.avare.AirportActivity: java.lang.String access$1100(com.ds.avare.AirportActivity)
com.ds.avare.AirportActivity: void access$1200(com.ds.avare.AirportActivity,java.lang.String)
com.ds.avare.AirportActivity: com.ds.avare.storage.Preferences access$1300(com.ds.avare.AirportActivity)
com.ds.avare.AirportActivity$1
com.ds.avare.AirportActivity$1: AirportActivity$1(com.ds.avare.AirportActivity)
com.ds.avare.AirportActivity$1: void statusCallback(android.location.GpsStatus)
com.ds.avare.AirportActivity$1: void locationCallback(android.location.Location)
com.ds.avare.AirportActivity$1: void timeoutCallback(boolean)
com.ds.avare.AirportActivity$1: void enabledCallback(boolean)
com.ds.avare.AirportActivity$2
com.ds.avare.AirportActivity$2: AirportActivity$2(com.ds.avare.AirportActivity)
com.ds.avare.AirportActivity$2: void onClick(android.view.View)
com.ds.avare.AirportActivity$2$1
com.ds.avare.AirportActivity$2$1: AirportActivity$2$1(com.ds.avare.AirportActivity$2)
com.ds.avare.AirportActivity$2$1: void onClick(android.content.DialogInterface,int)
com.ds.avare.AirportActivity$3
com.ds.avare.AirportActivity$3: AirportActivity$3(com.ds.avare.AirportActivity)
com.ds.avare.AirportActivity$3: void onClick(android.view.View)
com.ds.avare.AirportActivity$3$1
com.ds.avare.AirportActivity$3$1: AirportActivity$3$1(com.ds.avare.AirportActivity$3)
com.ds.avare.AirportActivity$3$1: void onClick(android.content.DialogInterface,int)
com.ds.avare.AirportActivity$4
com.ds.avare.AirportActivity$4: AirportActivity$4(com.ds.avare.AirportActivity)
com.ds.avare.AirportActivity$4: void onClick(android.view.View)
com.ds.avare.AirportActivity$5
com.ds.avare.AirportActivity$5: AirportActivity$5(com.ds.avare.AirportActivity)
com.ds.avare.AirportActivity$5: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)
com.ds.avare.AirportActivity$6
com.ds.avare.AirportActivity$6: AirportActivity$6(com.ds.avare.AirportActivity)
com.ds.avare.AirportActivity$6: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
com.ds.avare.AirportActivity$6: void onServiceDisconnected(android.content.ComponentName)
com.ds.avare.BuildConfig
com.ds.avare.BuildConfig: BuildConfig()
com.ds.avare.ChartsDownloadActivity
com.ds.avare.ChartsDownloadActivity: ChartsDownloadActivity()
com.ds.avare.ChartsDownloadActivity: void onCreate(android.os.Bundle)
com.ds.avare.ChartsDownloadActivity: void onResume()
com.ds.avare.ChartsDownloadActivity: boolean download()
com.ds.avare.ChartsDownloadActivity: boolean delete()
com.ds.avare.ChartsDownloadActivity: void onPause()
com.ds.avare.ChartsDownloadActivity: com.ds.avare.adapters.ChartAdapter access$000()
com.ds.avare.ChartsDownloadActivity: boolean access$100(com.ds.avare.ChartsDownloadActivity)
com.ds.avare.ChartsDownloadActivity: boolean access$200(com.ds.avare.ChartsDownloadActivity)
com.ds.avare.ChartsDownloadActivity: com.ds.avare.StorageService access$302(com.ds.avare.ChartsDownloadActivity,com.ds.avare.StorageService)
com.ds.avare.ChartsDownloadActivity: com.ds.avare.gps.GpsInterface access$400(com.ds.avare.ChartsDownloadActivity)
com.ds.avare.ChartsDownloadActivity: com.ds.avare.StorageService access$300(com.ds.avare.ChartsDownloadActivity)
com.ds.avare.ChartsDownloadActivity: com.ds.avare.storage.Preferences access$500(com.ds.avare.ChartsDownloadActivity)
com.ds.avare.ChartsDownloadActivity: android.widget.Toast access$600(com.ds.avare.ChartsDownloadActivity)
com.ds.avare.ChartsDownloadActivity: com.ds.avare.network.Download access$700(com.ds.avare.ChartsDownloadActivity)
com.ds.avare.ChartsDownloadActivity: com.ds.avare.network.Delete access$800(com.ds.avare.ChartsDownloadActivity)
com.ds.avare.ChartsDownloadActivity: java.lang.String access$900(com.ds.avare.ChartsDownloadActivity)
com.ds.avare.ChartsDownloadActivity: android.app.ProgressDialog access$1000(com.ds.avare.ChartsDownloadActivity)
com.ds.avare.ChartsDownloadActivity: android.app.AlertDialog access$1102(com.ds.avare.ChartsDownloadActivity,android.app.AlertDialog)
com.ds.avare.ChartsDownloadActivity: android.app.AlertDialog access$1100(com.ds.avare.ChartsDownloadActivity)
com.ds.avare.ChartsDownloadActivity: void <clinit>()
com.ds.avare.ChartsDownloadActivity$1
com.ds.avare.ChartsDownloadActivity$1: ChartsDownloadActivity$1(com.ds.avare.ChartsDownloadActivity)
com.ds.avare.ChartsDownloadActivity$1: void statusCallback(android.location.GpsStatus)
com.ds.avare.ChartsDownloadActivity$1: void locationCallback(android.location.Location)
com.ds.avare.ChartsDownloadActivity$1: void timeoutCallback(boolean)
com.ds.avare.ChartsDownloadActivity$1: void enabledCallback(boolean)
com.ds.avare.ChartsDownloadActivity$2
com.ds.avare.ChartsDownloadActivity$2: ChartsDownloadActivity$2(com.ds.avare.ChartsDownloadActivity)
com.ds.avare.ChartsDownloadActivity$2: boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long)
com.ds.avare.ChartsDownloadActivity$3
com.ds.avare.ChartsDownloadActivity$3: ChartsDownloadActivity$3(com.ds.avare.ChartsDownloadActivity)
com.ds.avare.ChartsDownloadActivity$3: void onClick(android.view.View)
com.ds.avare.ChartsDownloadActivity$4
com.ds.avare.ChartsDownloadActivity$4: ChartsDownloadActivity$4(com.ds.avare.ChartsDownloadActivity)
com.ds.avare.ChartsDownloadActivity$4: void onClick(android.view.View)
com.ds.avare.ChartsDownloadActivity$5
com.ds.avare.ChartsDownloadActivity$5: ChartsDownloadActivity$5(com.ds.avare.ChartsDownloadActivity)
com.ds.avare.ChartsDownloadActivity$5: void onClick(android.view.View)
com.ds.avare.ChartsDownloadActivity$6
com.ds.avare.ChartsDownloadActivity$6: ChartsDownloadActivity$6(com.ds.avare.ChartsDownloadActivity)
com.ds.avare.ChartsDownloadActivity$6: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
com.ds.avare.ChartsDownloadActivity$6: void onServiceDisconnected(android.content.ComponentName)
com.ds.avare.ChartsDownloadActivity$7
com.ds.avare.ChartsDownloadActivity$7: ChartsDownloadActivity$7(com.ds.avare.ChartsDownloadActivity)
com.ds.avare.ChartsDownloadActivity$7: void onClick(android.content.DialogInterface,int)
com.ds.avare.ChartsDownloadActivity$8
com.ds.avare.ChartsDownloadActivity$8: ChartsDownloadActivity$8(com.ds.avare.ChartsDownloadActivity)
com.ds.avare.ChartsDownloadActivity$8: void onClick(android.content.DialogInterface,int)
com.ds.avare.ChartsDownloadActivity$9
com.ds.avare.ChartsDownloadActivity$9: ChartsDownloadActivity$9(com.ds.avare.ChartsDownloadActivity)
com.ds.avare.ChartsDownloadActivity$9: void handleMessage(android.os.Message)
com.ds.avare.ChartsDownloadActivity$9$1
com.ds.avare.ChartsDownloadActivity$9$1: ChartsDownloadActivity$9$1(com.ds.avare.ChartsDownloadActivity$9)
com.ds.avare.ChartsDownloadActivity$9$1: void onClick(android.content.DialogInterface,int)
com.ds.avare.ChartsDownloadActivity$9$2
com.ds.avare.ChartsDownloadActivity$9$2: ChartsDownloadActivity$9$2(com.ds.avare.ChartsDownloadActivity$9)
com.ds.avare.ChartsDownloadActivity$9$2: void onClick(android.content.DialogInterface,int)
com.ds.avare.ChecklistActivity
com.ds.avare.ChecklistActivity: ChecklistActivity()
com.ds.avare.ChecklistActivity: void onBackPressed()
com.ds.avare.ChecklistActivity: void onCreate(android.os.Bundle)
com.ds.avare.ChecklistActivity: void onStart()
com.ds.avare.ChecklistActivity: void onResume()
com.ds.avare.ChecklistActivity: void onPause()
com.ds.avare.ChecklistActivity: void onRestart()
com.ds.avare.ChecklistActivity: void onStop()
com.ds.avare.ChecklistActivity: void onDestroy()
com.ds.avare.ChecklistActivity: android.os.Handler access$000(com.ds.avare.ChecklistActivity)
com.ds.avare.ChecklistActivity: boolean access$102(com.ds.avare.ChecklistActivity,boolean)
com.ds.avare.ChecklistActivity: com.ds.avare.webinfc.WebAppListInterface access$200(com.ds.avare.ChecklistActivity)
com.ds.avare.ChecklistActivity: com.ds.avare.StorageService access$302(com.ds.avare.ChecklistActivity,com.ds.avare.StorageService)
com.ds.avare.ChecklistActivity: com.ds.avare.gps.GpsInterface access$400(com.ds.avare.ChecklistActivity)
com.ds.avare.ChecklistActivity: com.ds.avare.StorageService access$300(com.ds.avare.ChecklistActivity)
com.ds.avare.ChecklistActivity: java.util.Timer access$502(com.ds.avare.ChecklistActivity,java.util.Timer)
com.ds.avare.ChecklistActivity: java.util.Timer access$500(com.ds.avare.ChecklistActivity)
com.ds.avare.ChecklistActivity: boolean access$100(com.ds.avare.ChecklistActivity)
com.ds.avare.ChecklistActivity: boolean access$700(com.ds.avare.ChecklistActivity)
com.ds.avare.ChecklistActivity: boolean access$702(com.ds.avare.ChecklistActivity,boolean)
com.ds.avare.ChecklistActivity: android.widget.ProgressBar access$800(com.ds.avare.ChecklistActivity)
com.ds.avare.ChecklistActivity: android.content.Context access$900(com.ds.avare.ChecklistActivity)
com.ds.avare.ChecklistActivity$1
com.ds.avare.ChecklistActivity$1: ChecklistActivity$1(com.ds.avare.ChecklistActivity)
com.ds.avare.ChecklistActivity$1: void statusCallback(android.location.GpsStatus)
com.ds.avare.ChecklistActivity$1: void locationCallback(android.location.Location)
com.ds.avare.ChecklistActivity$1: void timeoutCallback(boolean)
com.ds.avare.ChecklistActivity$1: void enabledCallback(boolean)
com.ds.avare.ChecklistActivity$2
com.ds.avare.ChecklistActivity$2: ChecklistActivity$2(com.ds.avare.ChecklistActivity)
com.ds.avare.ChecklistActivity$2: java.lang.Object callback(java.lang.Object,java.lang.Object)
com.ds.avare.ChecklistActivity$3
com.ds.avare.ChecklistActivity$3: ChecklistActivity$3(com.ds.avare.ChecklistActivity)
com.ds.avare.ChecklistActivity$3: void onProgressChanged(android.webkit.WebView,int)
com.ds.avare.ChecklistActivity$3: boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)
com.ds.avare.ChecklistActivity$3$1
com.ds.avare.ChecklistActivity$3$1: ChecklistActivity$3$1(com.ds.avare.ChecklistActivity$3,android.webkit.JsResult)
com.ds.avare.ChecklistActivity$3$1: void onClick(android.content.DialogInterface,int)
com.ds.avare.ChecklistActivity$3$2
com.ds.avare.ChecklistActivity$3$2: ChecklistActivity$3$2(com.ds.avare.ChecklistActivity$3,android.webkit.JsResult)
com.ds.avare.ChecklistActivity$3$2: void onClick(android.content.DialogInterface,int)
com.ds.avare.ChecklistActivity$3$3
com.ds.avare.ChecklistActivity$3$3: ChecklistActivity$3$3(com.ds.avare.ChecklistActivity$3,android.webkit.JsResult)
com.ds.avare.ChecklistActivity$3$3: void onCancel(android.content.DialogInterface)
com.ds.avare.ChecklistActivity$4
com.ds.avare.ChecklistActivity$4: ChecklistActivity$4(com.ds.avare.ChecklistActivity)
com.ds.avare.ChecklistActivity$4: boolean onTouch(android.view.View,android.view.MotionEvent)
com.ds.avare.ChecklistActivity$5
com.ds.avare.ChecklistActivity$5: ChecklistActivity$5(com.ds.avare.ChecklistActivity)
com.ds.avare.ChecklistActivity$5: boolean onLongClick(android.view.View)
com.ds.avare.ChecklistActivity$6
com.ds.avare.ChecklistActivity$6: ChecklistActivity$6(com.ds.avare.ChecklistActivity)
com.ds.avare.ChecklistActivity$6: void onClick(android.view.View)
com.ds.avare.ChecklistActivity$7
com.ds.avare.ChecklistActivity$7: ChecklistActivity$7(com.ds.avare.ChecklistActivity)
com.ds.avare.ChecklistActivity$7: void onClick(android.view.View)
com.ds.avare.ChecklistActivity$8
com.ds.avare.ChecklistActivity$8: ChecklistActivity$8(com.ds.avare.ChecklistActivity)
com.ds.avare.ChecklistActivity$8: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
com.ds.avare.ChecklistActivity$8: void onServiceDisconnected(android.content.ComponentName)
com.ds.avare.ChecklistActivity$9
com.ds.avare.ChecklistActivity$9: ChecklistActivity$9(com.ds.avare.ChecklistActivity)
com.ds.avare.ChecklistActivity$9: void handleMessage(android.os.Message)
com.ds.avare.ChecklistActivity$9$1
com.ds.avare.ChecklistActivity$9$1: ChecklistActivity$9$1(com.ds.avare.ChecklistActivity$9)
com.ds.avare.ChecklistActivity$9$1: void onClick(android.content.DialogInterface,int)
com.ds.avare.ChecklistActivity$UpdateTask
com.ds.avare.ChecklistActivity$UpdateTask: ChecklistActivity$UpdateTask(com.ds.avare.ChecklistActivity)
com.ds.avare.ChecklistActivity$UpdateTask: void run()
com.ds.avare.ChecklistActivity$UpdateTask: ChecklistActivity$UpdateTask(com.ds.avare.ChecklistActivity,com.ds.avare.ChecklistActivity$1)
com.ds.avare.IHelper
com.ds.avare.IHelper: void sendDataText(java.lang.String)
com.ds.avare.IHelper: java.lang.String recvDataText()
com.ds.avare.IHelper$Stub
com.ds.avare.IHelper$Stub: IHelper$Stub()
com.ds.avare.IHelper$Stub: com.ds.avare.IHelper asInterface(android.os.IBinder)
com.ds.avare.IHelper$Stub: android.os.IBinder asBinder()
com.ds.avare.IHelper$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
com.ds.avare.IHelper$Stub$Proxy
com.ds.avare.IHelper$Stub$Proxy: IHelper$Stub$Proxy(android.os.IBinder)
com.ds.avare.IHelper$Stub$Proxy: android.os.IBinder asBinder()
com.ds.avare.IHelper$Stub$Proxy: java.lang.String getInterfaceDescriptor()
com.ds.avare.IHelper$Stub$Proxy: void sendDataText(java.lang.String)
com.ds.avare.IHelper$Stub$Proxy: java.lang.String recvDataText()
com.ds.avare.IHelperService
com.ds.avare.IHelperService: IHelperService()
com.ds.avare.IHelperService: void onCreate()
com.ds.avare.IHelperService: void onDestroy()
com.ds.avare.IHelperService: android.os.IBinder onBind(android.content.Intent)
com.ds.avare.IHelperService: com.ds.avare.StorageService access$002(com.ds.avare.IHelperService,com.ds.avare.StorageService)
com.ds.avare.IHelperService: android.os.Handler access$100(com.ds.avare.IHelperService)
com.ds.avare.IHelperService: com.ds.avare.StorageService access$000(com.ds.avare.IHelperService)
com.ds.avare.IHelperService$1
com.ds.avare.IHelperService$1: IHelperService$1(com.ds.avare.IHelperService)
com.ds.avare.IHelperService$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
com.ds.avare.IHelperService$1: void onServiceDisconnected(android.content.ComponentName)
com.ds.avare.IHelperService$2
com.ds.avare.IHelperService$2: IHelperService$2(com.ds.avare.IHelperService)
com.ds.avare.IHelperService$2: void sendDataText(java.lang.String)
com.ds.avare.IHelperService$2: java.lang.String recvDataText()
com.ds.avare.IHelperService$3
com.ds.avare.IHelperService$3: IHelperService$3(com.ds.avare.IHelperService)
com.ds.avare.IHelperService$3: void handleMessage(android.os.Message)
com.ds.avare.LocationActivity
com.ds.avare.LocationActivity: LocationActivity()
com.ds.avare.LocationActivity: boolean isSameDest(java.lang.String)
com.ds.avare.LocationActivity: void goTo(java.lang.String,java.lang.String)
com.ds.avare.LocationActivity: void planTo(java.lang.String,java.lang.String)
com.ds.avare.LocationActivity: void onBackPressed()
com.ds.avare.LocationActivity: void hideMenu()
com.ds.avare.LocationActivity: void showMenu()
com.ds.avare.LocationActivity: void onCreate(android.os.Bundle)
com.ds.avare.LocationActivity: void setTrackState(boolean)
com.ds.avare.LocationActivity: void setPlanButtonVis()
com.ds.avare.LocationActivity: void onStart()
com.ds.avare.LocationActivity: void onResume()
com.ds.avare.LocationActivity: void onPause()
com.ds.avare.LocationActivity: void onRestart()
com.ds.avare.LocationActivity: void onStop()
com.ds.avare.LocationActivity: void onDestroy()
com.ds.avare.LocationActivity: void update(java.util.Observable,java.lang.Object)
com.ds.avare.LocationActivity: void blink()
com.ds.avare.LocationActivity: com.ds.avare.storage.Preferences access$000(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity: com.ds.avare.StorageService access$100(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity: com.ds.avare.views.LocationView access$200(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity: com.ds.avare.utils.VerticalSeekBar access$300(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity: void access$400(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity: void access$500(com.ds.avare.LocationActivity,boolean)
com.ds.avare.LocationActivity: void access$601(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity: void access$700(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity: java.lang.String access$802(com.ds.avare.LocationActivity,java.lang.String)
com.ds.avare.LocationActivity: java.lang.String access$800(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity: android.widget.Button access$900(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity: android.widget.Button access$1000(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity: android.widget.Button access$1100(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity: android.widget.RelativeLayout access$1200(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity: boolean access$1300(com.ds.avare.LocationActivity,java.lang.String)
com.ds.avare.LocationActivity: android.widget.Button access$1400(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity: android.widget.ExpandableListView access$1500(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity: boolean access$1600(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity: boolean access$1602(com.ds.avare.LocationActivity,boolean)
com.ds.avare.LocationActivity: android.widget.Spinner access$1700(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity: void access$1800(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity: void access$1900(com.ds.avare.LocationActivity,java.lang.String,java.lang.String)
com.ds.avare.LocationActivity: void access$2000(com.ds.avare.LocationActivity,java.lang.String,java.lang.String)
com.ds.avare.LocationActivity: com.ds.avare.animation.TwoButton access$2100(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity: com.ds.avare.animation.TwoButton access$2200(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity: com.ds.avare.animation.TwoButton access$2300(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity: android.widget.Button access$2400(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity: android.widget.ImageButton access$2500(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity: com.ds.avare.StorageService access$102(com.ds.avare.LocationActivity,com.ds.avare.StorageService)
com.ds.avare.LocationActivity: com.ds.avare.gps.GpsInterface access$2700(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity: com.ds.avare.flight.FlightStatusInterface access$2800(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity: android.app.AlertDialog access$2902(com.ds.avare.LocationActivity,android.app.AlertDialog)
com.ds.avare.LocationActivity: android.app.AlertDialog access$2900(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity: com.ds.avare.place.Destination access$3002(com.ds.avare.LocationActivity,com.ds.avare.place.Destination)
com.ds.avare.LocationActivity: com.ds.avare.place.Destination access$3000(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity: android.os.Bundle access$3100(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity: android.widget.Toast access$3200(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity: android.os.Bundle access$3102(com.ds.avare.LocationActivity,android.os.Bundle)
com.ds.avare.LocationActivity: void access$3300(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity: com.ds.avare.LocationActivity$TankObserver access$3400(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity$1
com.ds.avare.LocationActivity$1: LocationActivity$1(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity$1: void rollout()
com.ds.avare.LocationActivity$10
com.ds.avare.LocationActivity$10: LocationActivity$10(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity$10: void onClick(android.view.View)
com.ds.avare.LocationActivity$11
com.ds.avare.LocationActivity$11: LocationActivity$11(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity$11: void onClick(android.view.View)
com.ds.avare.LocationActivity$12
com.ds.avare.LocationActivity$12: LocationActivity$12(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity$12: void onClick(android.view.View)
com.ds.avare.LocationActivity$13
com.ds.avare.LocationActivity$13: LocationActivity$13(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity$13: void onClick(android.view.View)
com.ds.avare.LocationActivity$14
com.ds.avare.LocationActivity$14: LocationActivity$14(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity$14: void onClick(android.view.View)
com.ds.avare.LocationActivity$15
com.ds.avare.LocationActivity$15: LocationActivity$15(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity$15: void onClick(android.view.View)
com.ds.avare.LocationActivity$16
com.ds.avare.LocationActivity$16: LocationActivity$16(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity$16: void onClick(android.view.View)
com.ds.avare.LocationActivity$17
com.ds.avare.LocationActivity$17: LocationActivity$17(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity$17: void onClick(android.view.View)
com.ds.avare.LocationActivity$18
com.ds.avare.LocationActivity$18: LocationActivity$18(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity$18: void onClick(android.view.View)
com.ds.avare.LocationActivity$19
com.ds.avare.LocationActivity$19: LocationActivity$19(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity$19: void onClick(android.view.View)
com.ds.avare.LocationActivity$2
com.ds.avare.LocationActivity$2: LocationActivity$2(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity$2: void statusCallback(android.location.GpsStatus)
com.ds.avare.LocationActivity$2: void locationCallback(android.location.Location)
com.ds.avare.LocationActivity$2: void timeoutCallback(boolean)
com.ds.avare.LocationActivity$2: void enabledCallback(boolean)
com.ds.avare.LocationActivity$20
com.ds.avare.LocationActivity$20: LocationActivity$20(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity$20: void onClick(android.view.View)
com.ds.avare.LocationActivity$21
com.ds.avare.LocationActivity$21: LocationActivity$21(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity$21: void onClick(android.view.View)
com.ds.avare.LocationActivity$22
com.ds.avare.LocationActivity$22: LocationActivity$22(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity$22: void onClick(android.view.View)
com.ds.avare.LocationActivity$23
com.ds.avare.LocationActivity$23: LocationActivity$23(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity$23: void onClick(android.view.View)
com.ds.avare.LocationActivity$24
com.ds.avare.LocationActivity$24: LocationActivity$24(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity$24: void onClick(android.content.DialogInterface,int)
com.ds.avare.LocationActivity$25
com.ds.avare.LocationActivity$25: LocationActivity$25(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity$25: void onClick(android.content.DialogInterface,int)
com.ds.avare.LocationActivity$26
com.ds.avare.LocationActivity$26: LocationActivity$26(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity$26: void onClick(android.view.View)
com.ds.avare.LocationActivity$27
com.ds.avare.LocationActivity$27: LocationActivity$27(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity$27: void onClick(android.view.View)
com.ds.avare.LocationActivity$28
com.ds.avare.LocationActivity$28: LocationActivity$28(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity$28: void onClick(android.view.View)
com.ds.avare.LocationActivity$29
com.ds.avare.LocationActivity$29: LocationActivity$29(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity$29: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
com.ds.avare.LocationActivity$29: void onServiceDisconnected(android.content.ComponentName)
com.ds.avare.LocationActivity$29$1
com.ds.avare.LocationActivity$29$1: LocationActivity$29$1(com.ds.avare.LocationActivity$29)
com.ds.avare.LocationActivity$29$1: void onClick(android.content.DialogInterface,int)
com.ds.avare.LocationActivity$29$2
com.ds.avare.LocationActivity$29$2: LocationActivity$29$2(com.ds.avare.LocationActivity$29)
com.ds.avare.LocationActivity$29$2: void onClick(android.content.DialogInterface,int)
com.ds.avare.LocationActivity$3
com.ds.avare.LocationActivity$3: LocationActivity$3(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity$3: void onClick(android.content.DialogInterface,int)
com.ds.avare.LocationActivity$30
com.ds.avare.LocationActivity$30: LocationActivity$30(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity$30: void run()
com.ds.avare.LocationActivity$4
com.ds.avare.LocationActivity$4: LocationActivity$4(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity$4: void onClick(android.content.DialogInterface,int)
com.ds.avare.LocationActivity$5
com.ds.avare.LocationActivity$5: LocationActivity$5(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity$5: void gestureCallBack(int,com.ds.avare.utils.InfoLines$InfoLineFieldLoc)
com.ds.avare.LocationActivity$5: void gestureCallBack(int,com.ds.avare.touch.LongTouchDestination)
com.ds.avare.LocationActivity$5$1
com.ds.avare.LocationActivity$5$1: LocationActivity$5$1(com.ds.avare.LocationActivity$5)
com.ds.avare.LocationActivity$5$1: void onClick(android.content.DialogInterface,int)
com.ds.avare.LocationActivity$5$2
com.ds.avare.LocationActivity$5$2: LocationActivity$5$2(com.ds.avare.LocationActivity$5)
com.ds.avare.LocationActivity$5$2: void onClick(android.content.DialogInterface,int)
com.ds.avare.LocationActivity$5$3
com.ds.avare.LocationActivity$5$3: LocationActivity$5$3(com.ds.avare.LocationActivity$5)
com.ds.avare.LocationActivity$5$3: void onClick(android.content.DialogInterface,int)
com.ds.avare.LocationActivity$6
com.ds.avare.LocationActivity$6: LocationActivity$6(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity$6: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)
com.ds.avare.LocationActivity$6: void onNothingSelected(android.widget.AdapterView)
com.ds.avare.LocationActivity$7
com.ds.avare.LocationActivity$7: LocationActivity$7(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity$7: void onStopTrackingTouch(android.widget.SeekBar)
com.ds.avare.LocationActivity$7: void onStartTrackingTouch(android.widget.SeekBar)
com.ds.avare.LocationActivity$7: void onProgressChanged(android.widget.SeekBar,int,boolean)
com.ds.avare.LocationActivity$8
com.ds.avare.LocationActivity$8: LocationActivity$8(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity$8: void onClick(android.view.View)
com.ds.avare.LocationActivity$9
com.ds.avare.LocationActivity$9: LocationActivity$9(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity$9: void onClick(android.view.View)
com.ds.avare.LocationActivity$TankObserver
com.ds.avare.LocationActivity$TankObserver: LocationActivity$TankObserver(com.ds.avare.LocationActivity)
com.ds.avare.LocationActivity$TankObserver: void update(java.util.Observable,java.lang.Object)
com.ds.avare.LocationActivity$TankObserver: LocationActivity$TankObserver(com.ds.avare.LocationActivity,com.ds.avare.LocationActivity$1)
com.ds.avare.LocationActivity$TankObserver$1
com.ds.avare.LocationActivity$TankObserver$1: LocationActivity$TankObserver$1(com.ds.avare.LocationActivity$TankObserver,com.ds.avare.instruments.FuelTimer)
com.ds.avare.LocationActivity$TankObserver$1: void onClick(android.content.DialogInterface,int)
com.ds.avare.MainActivity
com.ds.avare.MainActivity: MainActivity()
com.ds.avare.MainActivity: void onCreate(android.os.Bundle)
com.ds.avare.MainActivity: void setupTab(android.view.View,java.lang.String,android.content.Intent,android.content.Intent)
com.ds.avare.MainActivity: android.view.View createTabView(android.content.Context,java.lang.String)
com.ds.avare.MainActivity: void onResume()
com.ds.avare.MainActivity: void onDestroy()
com.ds.avare.MainActivity: void switchTab(int)
com.ds.avare.MainActivity: void showMapTab()
com.ds.avare.MainActivity: void showPlatesTab()
com.ds.avare.MainActivity: void showAfdTab()
com.ds.avare.MainActivity$1
com.ds.avare.MainActivity$1: MainActivity$1(com.ds.avare.MainActivity)
com.ds.avare.MainActivity$1: void onGlobalLayout()
com.ds.avare.MessageActivity
com.ds.avare.MessageActivity: MessageActivity()
com.ds.avare.MessageActivity: void onCreate(android.os.Bundle)
com.ds.avare.MessageActivity: void onResume()
com.ds.avare.MessageActivity: android.webkit.WebView access$000(com.ds.avare.MessageActivity)
com.ds.avare.MessageActivity$1
com.ds.avare.MessageActivity$1: MessageActivity$1(com.ds.avare.MessageActivity)
com.ds.avare.MessageActivity$1: boolean onTouch(android.view.View,android.view.MotionEvent)
com.ds.avare.MessageActivity$2
com.ds.avare.MessageActivity$2: MessageActivity$2(com.ds.avare.MessageActivity)
com.ds.avare.MessageActivity$2: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)
com.ds.avare.MessageActivity$2: void onNothingSelected(android.widget.AdapterView)
com.ds.avare.NearestActivity
com.ds.avare.NearestActivity: NearestActivity()
com.ds.avare.NearestActivity: void onBackPressed()
com.ds.avare.NearestActivity: void onCreate(android.os.Bundle)
com.ds.avare.NearestActivity: boolean prepareAdapter(android.location.Location)
com.ds.avare.NearestActivity: void onPause()
com.ds.avare.NearestActivity: void onResume()
com.ds.avare.NearestActivity: void onDestroy()
com.ds.avare.NearestActivity: void update(java.util.Observable,java.lang.Object)
com.ds.avare.NearestActivity: com.ds.avare.StorageService access$000(com.ds.avare.NearestActivity)
com.ds.avare.NearestActivity: boolean access$100(com.ds.avare.NearestActivity,android.location.Location)
com.ds.avare.NearestActivity: com.ds.avare.place.Destination access$202(com.ds.avare.NearestActivity,com.ds.avare.place.Destination)
com.ds.avare.NearestActivity: com.ds.avare.storage.Preferences access$300(com.ds.avare.NearestActivity)
com.ds.avare.NearestActivity: com.ds.avare.place.Destination access$200(com.ds.avare.NearestActivity)
com.ds.avare.NearestActivity: android.widget.Toast access$400(com.ds.avare.NearestActivity)
com.ds.avare.NearestActivity: java.lang.String access$500(com.ds.avare.NearestActivity)
com.ds.avare.NearestActivity: com.ds.avare.adapters.NearestAdapter access$600(com.ds.avare.NearestActivity)
com.ds.avare.NearestActivity: com.ds.avare.StorageService access$002(com.ds.avare.NearestActivity,com.ds.avare.StorageService)
com.ds.avare.NearestActivity: com.ds.avare.gps.GpsInterface access$700(com.ds.avare.NearestActivity)
com.ds.avare.NearestActivity: android.widget.ListView access$800(com.ds.avare.NearestActivity)
com.ds.avare.NearestActivity: java.lang.String access$502(com.ds.avare.NearestActivity,java.lang.String)
com.ds.avare.NearestActivity: android.widget.Button access$900(com.ds.avare.NearestActivity)
com.ds.avare.NearestActivity: com.ds.avare.animation.AnimateButton access$1000(com.ds.avare.NearestActivity)
com.ds.avare.NearestActivity: com.ds.avare.animation.AnimateButton access$1100(com.ds.avare.NearestActivity)
com.ds.avare.NearestActivity$1
com.ds.avare.NearestActivity$1: NearestActivity$1(com.ds.avare.NearestActivity)
com.ds.avare.NearestActivity$1: void statusCallback(android.location.GpsStatus)
com.ds.avare.NearestActivity$1: void locationCallback(android.location.Location)
com.ds.avare.NearestActivity$1: void timeoutCallback(boolean)
com.ds.avare.NearestActivity$1: void enabledCallback(boolean)
com.ds.avare.NearestActivity$2
com.ds.avare.NearestActivity$2: NearestActivity$2(com.ds.avare.NearestActivity)
com.ds.avare.NearestActivity$2: void onClick(android.view.View)
com.ds.avare.NearestActivity$3
com.ds.avare.NearestActivity$3: NearestActivity$3(com.ds.avare.NearestActivity)
com.ds.avare.NearestActivity$3: void onClick(android.view.View)
com.ds.avare.NearestActivity$4
com.ds.avare.NearestActivity$4: NearestActivity$4(com.ds.avare.NearestActivity)
com.ds.avare.NearestActivity$4: void onClick(android.view.View)
com.ds.avare.NearestActivity$5
com.ds.avare.NearestActivity$5: NearestActivity$5(com.ds.avare.NearestActivity)
com.ds.avare.NearestActivity$5: void onClick(android.view.View)
com.ds.avare.NearestActivity$6
com.ds.avare.NearestActivity$6: NearestActivity$6(com.ds.avare.NearestActivity)
com.ds.avare.NearestActivity$6: void onClick(android.view.View)
com.ds.avare.NearestActivity$7
com.ds.avare.NearestActivity$7: NearestActivity$7(com.ds.avare.NearestActivity)
com.ds.avare.NearestActivity$7: void onClick(android.view.View)
com.ds.avare.NearestActivity$8
com.ds.avare.NearestActivity$8: NearestActivity$8(com.ds.avare.NearestActivity)
com.ds.avare.NearestActivity$8: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
com.ds.avare.NearestActivity$8: void onServiceDisconnected(android.content.ComponentName)
com.ds.avare.NearestActivity$8$1
com.ds.avare.NearestActivity$8$1: NearestActivity$8$1(com.ds.avare.NearestActivity$8)
com.ds.avare.NearestActivity$8$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.ds.avare.PlanActivity
com.ds.avare.PlanActivity: PlanActivity()
com.ds.avare.PlanActivity: void onBackPressed()
com.ds.avare.PlanActivity: void onCreate(android.os.Bundle)
com.ds.avare.PlanActivity: void onStart()
com.ds.avare.PlanActivity: void onResume()
com.ds.avare.PlanActivity: void onPause()
com.ds.avare.PlanActivity: void onRestart()
com.ds.avare.PlanActivity: void onStop()
com.ds.avare.PlanActivity: void onDestroy()
com.ds.avare.PlanActivity: android.os.Handler access$000(com.ds.avare.PlanActivity)
com.ds.avare.PlanActivity: boolean access$102(com.ds.avare.PlanActivity,boolean)
com.ds.avare.PlanActivity: com.ds.avare.webinfc.WebAppPlanInterface access$200(com.ds.avare.PlanActivity)
com.ds.avare.PlanActivity: com.ds.avare.StorageService access$302(com.ds.avare.PlanActivity,com.ds.avare.StorageService)
com.ds.avare.PlanActivity: com.ds.avare.gps.GpsInterface access$400(com.ds.avare.PlanActivity)
com.ds.avare.PlanActivity: com.ds.avare.StorageService access$300(com.ds.avare.PlanActivity)
com.ds.avare.PlanActivity: java.util.Timer access$502(com.ds.avare.PlanActivity,java.util.Timer)
com.ds.avare.PlanActivity: java.util.Timer access$500(com.ds.avare.PlanActivity)
com.ds.avare.PlanActivity: boolean access$100(com.ds.avare.PlanActivity)
com.ds.avare.PlanActivity: boolean access$700(com.ds.avare.PlanActivity)
com.ds.avare.PlanActivity: boolean access$702(com.ds.avare.PlanActivity,boolean)
com.ds.avare.PlanActivity: android.widget.ProgressBar access$800(com.ds.avare.PlanActivity)
com.ds.avare.PlanActivity: android.widget.Button access$900(com.ds.avare.PlanActivity)
com.ds.avare.PlanActivity: android.content.Context access$1000(com.ds.avare.PlanActivity)
com.ds.avare.PlanActivity$1
com.ds.avare.PlanActivity$1: PlanActivity$1(com.ds.avare.PlanActivity)
com.ds.avare.PlanActivity$1: void statusCallback(android.location.GpsStatus)
com.ds.avare.PlanActivity$1: void locationCallback(android.location.Location)
com.ds.avare.PlanActivity$1: void timeoutCallback(boolean)
com.ds.avare.PlanActivity$1: void enabledCallback(boolean)
com.ds.avare.PlanActivity$10
com.ds.avare.PlanActivity$10: PlanActivity$10(com.ds.avare.PlanActivity)
com.ds.avare.PlanActivity$10: void handleMessage(android.os.Message)
com.ds.avare.PlanActivity$10$1
com.ds.avare.PlanActivity$10$1: PlanActivity$10$1(com.ds.avare.PlanActivity$10)
com.ds.avare.PlanActivity$10$1: void onClick(android.content.DialogInterface,int)
com.ds.avare.PlanActivity$2
com.ds.avare.PlanActivity$2: PlanActivity$2(com.ds.avare.PlanActivity)
com.ds.avare.PlanActivity$2: java.lang.Object callback(java.lang.Object,java.lang.Object)
com.ds.avare.PlanActivity$3
com.ds.avare.PlanActivity$3: PlanActivity$3(com.ds.avare.PlanActivity)
com.ds.avare.PlanActivity$3: void onProgressChanged(android.webkit.WebView,int)
com.ds.avare.PlanActivity$3: boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)
com.ds.avare.PlanActivity$3$1
com.ds.avare.PlanActivity$3$1: PlanActivity$3$1(com.ds.avare.PlanActivity$3,android.webkit.JsResult)
com.ds.avare.PlanActivity$3$1: void onClick(android.content.DialogInterface,int)
com.ds.avare.PlanActivity$3$2
com.ds.avare.PlanActivity$3$2: PlanActivity$3$2(com.ds.avare.PlanActivity$3,android.webkit.JsResult)
com.ds.avare.PlanActivity$3$2: void onClick(android.content.DialogInterface,int)
com.ds.avare.PlanActivity$3$3
com.ds.avare.PlanActivity$3$3: PlanActivity$3$3(com.ds.avare.PlanActivity$3,android.webkit.JsResult)
com.ds.avare.PlanActivity$3$3: void onCancel(android.content.DialogInterface)
com.ds.avare.PlanActivity$4
com.ds.avare.PlanActivity$4: PlanActivity$4(com.ds.avare.PlanActivity)
com.ds.avare.PlanActivity$4: boolean onTouch(android.view.View,android.view.MotionEvent)
com.ds.avare.PlanActivity$5
com.ds.avare.PlanActivity$5: PlanActivity$5(com.ds.avare.PlanActivity)
com.ds.avare.PlanActivity$5: boolean onLongClick(android.view.View)
com.ds.avare.PlanActivity$6
com.ds.avare.PlanActivity$6: PlanActivity$6(com.ds.avare.PlanActivity)
com.ds.avare.PlanActivity$6: void onClick(android.view.View)
com.ds.avare.PlanActivity$7
com.ds.avare.PlanActivity$7: PlanActivity$7(com.ds.avare.PlanActivity)
com.ds.avare.PlanActivity$7: void onClick(android.view.View)
com.ds.avare.PlanActivity$8
com.ds.avare.PlanActivity$8: PlanActivity$8(com.ds.avare.PlanActivity)
com.ds.avare.PlanActivity$8: void onClick(android.view.View)
com.ds.avare.PlanActivity$9
com.ds.avare.PlanActivity$9: PlanActivity$9(com.ds.avare.PlanActivity)
com.ds.avare.PlanActivity$9: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
com.ds.avare.PlanActivity$9: void onServiceDisconnected(android.content.ComponentName)
com.ds.avare.PlanActivity$UpdateTask
com.ds.avare.PlanActivity$UpdateTask: PlanActivity$UpdateTask(com.ds.avare.PlanActivity)
com.ds.avare.PlanActivity$UpdateTask: void run()
com.ds.avare.PlanActivity$UpdateTask: PlanActivity$UpdateTask(com.ds.avare.PlanActivity,com.ds.avare.PlanActivity$1)
com.ds.avare.PlatesActivity
com.ds.avare.PlatesActivity: PlatesActivity()
com.ds.avare.PlatesActivity: float[] getMatrix(java.lang.String)
com.ds.avare.PlatesActivity: void addAirport(java.lang.String)
com.ds.avare.PlatesActivity: void onBackPressed()
com.ds.avare.PlatesActivity: boolean arePopupsShowing()
com.ds.avare.PlatesActivity: void onCreate(android.os.Bundle)
com.ds.avare.PlatesActivity: void setPlateFromPos(int)
com.ds.avare.PlatesActivity: java.lang.String getLastIfAirport()
com.ds.avare.PlatesActivity: void setAirportFromPos(int)
com.ds.avare.PlatesActivity: void onPause()
com.ds.avare.PlatesActivity: void onResume()
com.ds.avare.PlatesActivity: boolean doesAirportHavePlates(java.lang.String,java.lang.String)
com.ds.avare.PlatesActivity: boolean doesAirportHaveAirportDiagram(java.lang.String,java.lang.String)
com.ds.avare.PlatesActivity: void update(java.util.Observable,java.lang.Object)
com.ds.avare.PlatesActivity: void onChronometerTick(android.widget.Chronometer)
com.ds.avare.PlatesActivity: boolean onKeyDown(int,android.view.KeyEvent)
com.ds.avare.PlatesActivity: com.ds.avare.views.PlatesView access$000(com.ds.avare.PlatesActivity)
com.ds.avare.PlatesActivity: com.ds.avare.StorageService access$100(com.ds.avare.PlatesActivity)
com.ds.avare.PlatesActivity: com.ds.avare.storage.Preferences access$200(com.ds.avare.PlatesActivity)
com.ds.avare.PlatesActivity: java.util.ArrayList access$300(com.ds.avare.PlatesActivity)
com.ds.avare.PlatesActivity: boolean access$400(com.ds.avare.PlatesActivity)
com.ds.avare.PlatesActivity: void access$500(com.ds.avare.PlatesActivity,int)
com.ds.avare.PlatesActivity: android.app.AlertDialog access$602(com.ds.avare.PlatesActivity,android.app.AlertDialog)
com.ds.avare.PlatesActivity: android.app.AlertDialog access$600(com.ds.avare.PlatesActivity)
com.ds.avare.PlatesActivity: boolean access$700(com.ds.avare.PlatesActivity)
com.ds.avare.PlatesActivity: boolean access$702(com.ds.avare.PlatesActivity,boolean)
com.ds.avare.PlatesActivity: android.widget.Chronometer access$800(com.ds.avare.PlatesActivity)
com.ds.avare.PlatesActivity: android.widget.Button access$900(com.ds.avare.PlatesActivity)
com.ds.avare.PlatesActivity: com.ds.avare.animation.TwoButton access$1000(com.ds.avare.PlatesActivity)
com.ds.avare.PlatesActivity: android.widget.Button access$1100(com.ds.avare.PlatesActivity)
com.ds.avare.PlatesActivity: java.util.ArrayList access$1200(com.ds.avare.PlatesActivity)
com.ds.avare.PlatesActivity: void access$1300(com.ds.avare.PlatesActivity,int)
com.ds.avare.PlatesActivity: android.app.AlertDialog access$1402(com.ds.avare.PlatesActivity,android.app.AlertDialog)
com.ds.avare.PlatesActivity: android.app.AlertDialog access$1400(com.ds.avare.PlatesActivity)
com.ds.avare.PlatesActivity: com.ds.avare.StorageService access$102(com.ds.avare.PlatesActivity,com.ds.avare.StorageService)
com.ds.avare.PlatesActivity: com.ds.avare.gps.GpsInterface access$1700(com.ds.avare.PlatesActivity)
com.ds.avare.PlatesActivity: java.util.ArrayList access$302(com.ds.avare.PlatesActivity,java.util.ArrayList)
com.ds.avare.PlatesActivity: java.util.ArrayList access$1202(com.ds.avare.PlatesActivity,java.util.ArrayList)
com.ds.avare.PlatesActivity: java.lang.String access$1800(com.ds.avare.PlatesActivity)
com.ds.avare.PlatesActivity: java.lang.String access$1900(com.ds.avare.PlatesActivity)
com.ds.avare.PlatesActivity: void access$2000(com.ds.avare.PlatesActivity,java.lang.String)
com.ds.avare.PlatesActivity: com.ds.avare.place.Destination access$2102(com.ds.avare.PlatesActivity,com.ds.avare.place.Destination)
com.ds.avare.PlatesActivity: com.ds.avare.place.Destination access$2100(com.ds.avare.PlatesActivity)
com.ds.avare.PlatesActivity: com.ds.avare.PlatesActivity$TankObserver access$2200(com.ds.avare.PlatesActivity)
com.ds.avare.PlatesActivity$1
com.ds.avare.PlatesActivity$1: PlatesActivity$1(com.ds.avare.PlatesActivity)
com.ds.avare.PlatesActivity$1: void statusCallback(android.location.GpsStatus)
com.ds.avare.PlatesActivity$1: void locationCallback(android.location.Location)
com.ds.avare.PlatesActivity$1: void timeoutCallback(boolean)
com.ds.avare.PlatesActivity$1: void enabledCallback(boolean)
com.ds.avare.PlatesActivity$10
com.ds.avare.PlatesActivity$10: PlatesActivity$10(com.ds.avare.PlatesActivity)
com.ds.avare.PlatesActivity$10: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
com.ds.avare.PlatesActivity$10: void onServiceDisconnected(android.content.ComponentName)
com.ds.avare.PlatesActivity$2
com.ds.avare.PlatesActivity$2: PlatesActivity$2(com.ds.avare.PlatesActivity)
com.ds.avare.PlatesActivity$2: void onClick(android.view.View)
com.ds.avare.PlatesActivity$2$1
com.ds.avare.PlatesActivity$2$1: PlatesActivity$2$1(com.ds.avare.PlatesActivity$2)
com.ds.avare.PlatesActivity$2$1: void onClick(android.content.DialogInterface,int)
com.ds.avare.PlatesActivity$3
com.ds.avare.PlatesActivity$3: PlatesActivity$3(com.ds.avare.PlatesActivity)
com.ds.avare.PlatesActivity$3: void onClick(android.view.View)
com.ds.avare.PlatesActivity$4
com.ds.avare.PlatesActivity$4: PlatesActivity$4(com.ds.avare.PlatesActivity)
com.ds.avare.PlatesActivity$4: void onClick(android.view.View)
com.ds.avare.PlatesActivity$5
com.ds.avare.PlatesActivity$5: PlatesActivity$5(com.ds.avare.PlatesActivity)
com.ds.avare.PlatesActivity$5: void onClick(android.view.View)
com.ds.avare.PlatesActivity$6
com.ds.avare.PlatesActivity$6: PlatesActivity$6(com.ds.avare.PlatesActivity)
com.ds.avare.PlatesActivity$6: void onClick(android.view.View)
com.ds.avare.PlatesActivity$6$1
com.ds.avare.PlatesActivity$6$1: PlatesActivity$6$1(com.ds.avare.PlatesActivity$6)
com.ds.avare.PlatesActivity$6$1: void onClick(android.content.DialogInterface,int)
com.ds.avare.PlatesActivity$7
com.ds.avare.PlatesActivity$7: PlatesActivity$7(com.ds.avare.PlatesActivity)
com.ds.avare.PlatesActivity$7: void onClick(android.view.View)
com.ds.avare.PlatesActivity$8
com.ds.avare.PlatesActivity$8: PlatesActivity$8(com.ds.avare.PlatesActivity)
com.ds.avare.PlatesActivity$8: void onClick(android.view.View)
com.ds.avare.PlatesActivity$9
com.ds.avare.PlatesActivity$9: PlatesActivity$9(com.ds.avare.PlatesActivity)
com.ds.avare.PlatesActivity$9: boolean accept(java.io.File,java.lang.String)
com.ds.avare.PlatesActivity$PlatesComparable
com.ds.avare.PlatesActivity$PlatesComparable: PlatesActivity$PlatesComparable(com.ds.avare.PlatesActivity)
com.ds.avare.PlatesActivity$PlatesComparable: int compare(java.lang.String,java.lang.String)
com.ds.avare.PlatesActivity$PlatesComparable: int compare(java.lang.Object,java.lang.Object)
com.ds.avare.PlatesActivity$PlatesComparable: PlatesActivity$PlatesComparable(com.ds.avare.PlatesActivity,com.ds.avare.PlatesActivity$1)
com.ds.avare.PlatesActivity$TankObserver
com.ds.avare.PlatesActivity$TankObserver: PlatesActivity$TankObserver(com.ds.avare.PlatesActivity)
com.ds.avare.PlatesActivity$TankObserver: void update(java.util.Observable,java.lang.Object)
com.ds.avare.PlatesActivity$TankObserver: PlatesActivity$TankObserver(com.ds.avare.PlatesActivity,com.ds.avare.PlatesActivity$1)
com.ds.avare.PlatesActivity$TankObserver$1
com.ds.avare.PlatesActivity$TankObserver$1: PlatesActivity$TankObserver$1(com.ds.avare.PlatesActivity$TankObserver,com.ds.avare.instruments.FuelTimer)
com.ds.avare.PlatesActivity$TankObserver$1: void onClick(android.content.DialogInterface,int)
com.ds.avare.PlatesTagActivity
com.ds.avare.PlatesTagActivity: PlatesTagActivity()
com.ds.avare.PlatesTagActivity: void drawAirport()
com.ds.avare.PlatesTagActivity: void store()
com.ds.avare.PlatesTagActivity: void clearParams()
com.ds.avare.PlatesTagActivity: void clear()
com.ds.avare.PlatesTagActivity: void onCreate(android.os.Bundle)
com.ds.avare.PlatesTagActivity: void onPause()
com.ds.avare.PlatesTagActivity: void onResume()
com.ds.avare.PlatesTagActivity: java.lang.String putTagsToStorageFormat(java.util.LinkedList)
com.ds.avare.PlatesTagActivity: java.util.LinkedList getTagsStorageFromat(java.lang.String)
com.ds.avare.PlatesTagActivity: java.lang.String getNameFromPath(java.lang.String)
com.ds.avare.PlatesTagActivity: void update(java.util.Observable,java.lang.Object)
com.ds.avare.PlatesTagActivity: boolean access$000(com.ds.avare.PlatesTagActivity)
com.ds.avare.PlatesTagActivity: android.widget.Toast access$100(com.ds.avare.PlatesTagActivity)
com.ds.avare.PlatesTagActivity: android.widget.EditText access$200(com.ds.avare.PlatesTagActivity)
com.ds.avare.PlatesTagActivity: android.widget.Spinner access$300(com.ds.avare.PlatesTagActivity)
com.ds.avare.PlatesTagActivity: com.ds.avare.StorageService access$400(com.ds.avare.PlatesTagActivity)
com.ds.avare.PlatesTagActivity: com.ds.avare.position.PixelCoordinate[] access$500(com.ds.avare.PlatesTagActivity)
com.ds.avare.PlatesTagActivity: com.ds.avare.views.PlatesTagView access$600(com.ds.avare.PlatesTagActivity)
com.ds.avare.PlatesTagActivity: com.ds.avare.position.Coordinate[] access$700(com.ds.avare.PlatesTagActivity)
com.ds.avare.PlatesTagActivity: double access$802(com.ds.avare.PlatesTagActivity,double)
com.ds.avare.PlatesTagActivity: double access$902(com.ds.avare.PlatesTagActivity,double)
com.ds.avare.PlatesTagActivity: double access$900(com.ds.avare.PlatesTagActivity)
com.ds.avare.PlatesTagActivity: double access$800(com.ds.avare.PlatesTagActivity)
com.ds.avare.PlatesTagActivity: double access$1002(com.ds.avare.PlatesTagActivity,double)
com.ds.avare.PlatesTagActivity: double access$1102(com.ds.avare.PlatesTagActivity,double)
com.ds.avare.PlatesTagActivity: double access$1000(com.ds.avare.PlatesTagActivity)
com.ds.avare.PlatesTagActivity: double access$1100(com.ds.avare.PlatesTagActivity)
com.ds.avare.PlatesTagActivity: com.ds.avare.place.Destination access$1200(com.ds.avare.PlatesTagActivity)
com.ds.avare.PlatesTagActivity: void access$1300(com.ds.avare.PlatesTagActivity)
com.ds.avare.PlatesTagActivity: void access$1400(com.ds.avare.PlatesTagActivity)
com.ds.avare.PlatesTagActivity: void access$1500(com.ds.avare.PlatesTagActivity)
com.ds.avare.PlatesTagActivity: android.app.AlertDialog access$1602(com.ds.avare.PlatesTagActivity,android.app.AlertDialog)
com.ds.avare.PlatesTagActivity: android.app.AlertDialog access$1600(com.ds.avare.PlatesTagActivity)
com.ds.avare.PlatesTagActivity: java.lang.String access$1700(com.ds.avare.PlatesTagActivity)
com.ds.avare.PlatesTagActivity: com.ds.avare.storage.Preferences access$1800(com.ds.avare.PlatesTagActivity)
com.ds.avare.PlatesTagActivity: void access$1900(com.ds.avare.PlatesTagActivity)
com.ds.avare.PlatesTagActivity: com.ds.avare.StorageService access$402(com.ds.avare.PlatesTagActivity,com.ds.avare.StorageService)
com.ds.avare.PlatesTagActivity: com.ds.avare.gps.GpsInterface access$2000(com.ds.avare.PlatesTagActivity)
com.ds.avare.PlatesTagActivity: boolean access$002(com.ds.avare.PlatesTagActivity,boolean)
com.ds.avare.PlatesTagActivity: java.lang.String access$1702(com.ds.avare.PlatesTagActivity,java.lang.String)
com.ds.avare.PlatesTagActivity: java.lang.String access$2102(com.ds.avare.PlatesTagActivity,java.lang.String)
com.ds.avare.PlatesTagActivity: com.ds.avare.place.Destination access$1202(com.ds.avare.PlatesTagActivity,com.ds.avare.place.Destination)
com.ds.avare.PlatesTagActivity: java.lang.String access$2100(com.ds.avare.PlatesTagActivity)
com.ds.avare.PlatesTagActivity: java.util.LinkedList access$2200(com.ds.avare.PlatesTagActivity)
com.ds.avare.PlatesTagActivity: void <clinit>()
com.ds.avare.PlatesTagActivity$1
com.ds.avare.PlatesTagActivity$1: PlatesTagActivity$1(com.ds.avare.PlatesTagActivity)
com.ds.avare.PlatesTagActivity$1: void statusCallback(android.location.GpsStatus)
com.ds.avare.PlatesTagActivity$1: void locationCallback(android.location.Location)
com.ds.avare.PlatesTagActivity$1: void timeoutCallback(boolean)
com.ds.avare.PlatesTagActivity$1: void enabledCallback(boolean)
com.ds.avare.PlatesTagActivity$2
com.ds.avare.PlatesTagActivity$2: PlatesTagActivity$2(com.ds.avare.PlatesTagActivity)
com.ds.avare.PlatesTagActivity$2: void onClick(android.content.DialogInterface,int)
com.ds.avare.PlatesTagActivity$3
com.ds.avare.PlatesTagActivity$3: PlatesTagActivity$3(com.ds.avare.PlatesTagActivity)
com.ds.avare.PlatesTagActivity$3: void onClick(android.view.View)
com.ds.avare.PlatesTagActivity$4
com.ds.avare.PlatesTagActivity$4: PlatesTagActivity$4(com.ds.avare.PlatesTagActivity)
com.ds.avare.PlatesTagActivity$4: void onClick(android.view.View)
com.ds.avare.PlatesTagActivity$5
com.ds.avare.PlatesTagActivity$5: PlatesTagActivity$5(com.ds.avare.PlatesTagActivity)
com.ds.avare.PlatesTagActivity$5: void onClick(android.view.View)
com.ds.avare.PlatesTagActivity$5$1
com.ds.avare.PlatesTagActivity$5$1: PlatesTagActivity$5$1(com.ds.avare.PlatesTagActivity$5)
com.ds.avare.PlatesTagActivity$5$1: void onClick(android.content.DialogInterface,int)
com.ds.avare.PlatesTagActivity$5$1$1
com.ds.avare.PlatesTagActivity$5$1$1: PlatesTagActivity$5$1$1(com.ds.avare.PlatesTagActivity$5$1)
com.ds.avare.PlatesTagActivity$5$1$1: java.lang.Boolean doInBackground(java.lang.Void[])
com.ds.avare.PlatesTagActivity$5$1$1: void onProgressUpdate(java.lang.Void[])
com.ds.avare.PlatesTagActivity$5$1$1: void onPostExecute(java.lang.Boolean)
com.ds.avare.PlatesTagActivity$5$1$1: void onProgressUpdate(java.lang.Object[])
com.ds.avare.PlatesTagActivity$5$1$1: void onPostExecute(java.lang.Object)
com.ds.avare.PlatesTagActivity$5$1$1: java.lang.Object doInBackground(java.lang.Object[])
com.ds.avare.PlatesTagActivity$5$1$1$1
com.ds.avare.PlatesTagActivity$5$1$1$1: PlatesTagActivity$5$1$1$1(com.ds.avare.PlatesTagActivity$5$1$1)
com.ds.avare.PlatesTagActivity$5$1$1$1: void onClick(android.content.DialogInterface,int)
com.ds.avare.PlatesTagActivity$5$2
com.ds.avare.PlatesTagActivity$5$2: PlatesTagActivity$5$2(com.ds.avare.PlatesTagActivity$5)
com.ds.avare.PlatesTagActivity$5$2: void onClick(android.content.DialogInterface,int)
com.ds.avare.PlatesTagActivity$6
com.ds.avare.PlatesTagActivity$6: PlatesTagActivity$6(com.ds.avare.PlatesTagActivity)
com.ds.avare.PlatesTagActivity$6: void onClick(android.view.View)
com.ds.avare.PlatesTagActivity$6$1
com.ds.avare.PlatesTagActivity$6$1: PlatesTagActivity$6$1(com.ds.avare.PlatesTagActivity$6)
com.ds.avare.PlatesTagActivity$6$1: void onClick(android.content.DialogInterface,int)
com.ds.avare.PlatesTagActivity$6$1$1
com.ds.avare.PlatesTagActivity$6$1$1: PlatesTagActivity$6$1$1(com.ds.avare.PlatesTagActivity$6$1)
com.ds.avare.PlatesTagActivity$6$1$1: java.lang.Boolean doInBackground(java.lang.Void[])
com.ds.avare.PlatesTagActivity$6$1$1: void onProgressUpdate(java.lang.Void[])
com.ds.avare.PlatesTagActivity$6$1$1: void onPostExecute(java.lang.Boolean)
com.ds.avare.PlatesTagActivity$6$1$1: void onProgressUpdate(java.lang.Object[])
com.ds.avare.PlatesTagActivity$6$1$1: void onPostExecute(java.lang.Object)
com.ds.avare.PlatesTagActivity$6$1$1: java.lang.Object doInBackground(java.lang.Object[])
com.ds.avare.PlatesTagActivity$6$2
com.ds.avare.PlatesTagActivity$6$2: PlatesTagActivity$6$2(com.ds.avare.PlatesTagActivity$6)
com.ds.avare.PlatesTagActivity$6$2: void onClick(android.content.DialogInterface,int)
com.ds.avare.PlatesTagActivity$7
com.ds.avare.PlatesTagActivity$7: PlatesTagActivity$7(com.ds.avare.PlatesTagActivity)
com.ds.avare.PlatesTagActivity$7: void onClick(android.view.View)
com.ds.avare.PlatesTagActivity$7$1
com.ds.avare.PlatesTagActivity$7$1: PlatesTagActivity$7$1(com.ds.avare.PlatesTagActivity$7)
com.ds.avare.PlatesTagActivity$7$1: void onClick(android.content.DialogInterface,int)
com.ds.avare.PlatesTagActivity$7$2
com.ds.avare.PlatesTagActivity$7$2: PlatesTagActivity$7$2(com.ds.avare.PlatesTagActivity$7)
com.ds.avare.PlatesTagActivity$7$2: void onClick(android.content.DialogInterface,int)
com.ds.avare.PlatesTagActivity$8
com.ds.avare.PlatesTagActivity$8: PlatesTagActivity$8(com.ds.avare.PlatesTagActivity)
com.ds.avare.PlatesTagActivity$8: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
com.ds.avare.PlatesTagActivity$8: void onServiceDisconnected(android.content.ComponentName)
com.ds.avare.PlatesTagActivity$8$1
com.ds.avare.PlatesTagActivity$8$1: PlatesTagActivity$8$1(com.ds.avare.PlatesTagActivity$8)
com.ds.avare.PlatesTagActivity$8$1: void onClick(android.content.DialogInterface,int)
com.ds.avare.PlatesTagActivity$8$2
com.ds.avare.PlatesTagActivity$8$2: PlatesTagActivity$8$2(com.ds.avare.PlatesTagActivity$8)
com.ds.avare.PlatesTagActivity$8$2: void onClick(android.content.DialogInterface,int)
com.ds.avare.PrefActivity
com.ds.avare.PrefActivity: PrefActivity()
com.ds.avare.PrefActivity: void onCreate(android.os.Bundle)
com.ds.avare.PrefActivity: void onResume()
com.ds.avare.PrefActivity: void onPause()
com.ds.avare.PrefActivity: com.ds.avare.StorageService access$002(com.ds.avare.PrefActivity,com.ds.avare.StorageService)
com.ds.avare.PrefActivity: com.ds.avare.gps.GpsInterface access$100(com.ds.avare.PrefActivity)
com.ds.avare.PrefActivity: com.ds.avare.StorageService access$000(com.ds.avare.PrefActivity)
com.ds.avare.PrefActivity$1
com.ds.avare.PrefActivity$1: PrefActivity$1(com.ds.avare.PrefActivity)
com.ds.avare.PrefActivity$1: void statusCallback(android.location.GpsStatus)
com.ds.avare.PrefActivity$1: void locationCallback(android.location.Location)
com.ds.avare.PrefActivity$1: void timeoutCallback(boolean)
com.ds.avare.PrefActivity$1: void enabledCallback(boolean)
com.ds.avare.PrefActivity$2
com.ds.avare.PrefActivity$2: PrefActivity$2(com.ds.avare.PrefActivity)
com.ds.avare.PrefActivity$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
com.ds.avare.PrefActivity$2: void onServiceDisconnected(android.content.ComponentName)
com.ds.avare.R
com.ds.avare.R: R()
com.ds.avare.R$anim
com.ds.avare.R$anim: int xlate_left
com.ds.avare.R$anim: int xlate_left_delay
com.ds.avare.R$anim: int xlate_left_end
com.ds.avare.R$anim: int xlate_right
com.ds.avare.R$anim: int xlate_right_end
com.ds.avare.R$anim: int xlate_right_end_delay
com.ds.avare.R$anim: int xlate_up
com.ds.avare.R$anim: int xlate_up_end
com.ds.avare.R$anim: R$anim()
com.ds.avare.R$array
com.ds.avare.R$array: int AdsOptions
com.ds.avare.R$array: int AirSig
com.ds.avare.R$array: int AirSigColor
com.ds.avare.R$array: int AutoPostTracksPrompts
com.ds.avare.R$array: int AutoPostTracksValues
com.ds.avare.R$array: int ChartDbNames
com.ds.avare.R$array: int ChartType
com.ds.avare.R$array: int ChartTypeValues
com.ds.avare.R$array: int CyclePrompt
com.ds.avare.R$array: int CycleValues
com.ds.avare.R$array: int DisplayIconPrompt
com.ds.avare.R$array: int DisplayIconValues
com.ds.avare.R$array: int DistanceRingColors
com.ds.avare.R$array: int DistanceRingTypePrompts
com.ds.avare.R$array: int DistanceRingTypeValues
com.ds.avare.R$array: int FuelType
com.ds.avare.R$array: int GpsPosition
com.ds.avare.R$array: int GpsPositionValues
com.ds.avare.R$array: int Opacity
com.ds.avare.R$array: int OpacityValues
com.ds.avare.R$array: int Orientation
com.ds.avare.R$array: int PointType
com.ds.avare.R$array: int RunwayLengths
com.ds.avare.R$array: int Server
com.ds.avare.R$array: int ServerValues
com.ds.avare.R$array: int TextFieldOptionTitles
com.ds.avare.R$array: int TextFieldOptions
com.ds.avare.R$array: int TimerRingSizePrompt
com.ds.avare.R$array: int TimerRingSizeValues
com.ds.avare.R$array: int UnitsD
com.ds.avare.R$array: int UnitsDValues
com.ds.avare.R$array: int hotel_age_child
com.ds.avare.R$array: int hotel_count_adults
com.ds.avare.R$array: int hotel_max_price
com.ds.avare.R$array: int hotel_max_radius
com.ds.avare.R$array: int hotel_min_stars
com.ds.avare.R$array: int resFilesAFD
com.ds.avare.R$array: int resFilesDatabase
com.ds.avare.R$array: int resFilesHeli
com.ds.avare.R$array: int resFilesIFRArea
com.ds.avare.R$array: int resFilesIFRHE
com.ds.avare.R$array: int resFilesIFRLE
com.ds.avare.R$array: int resFilesPlate
com.ds.avare.R$array: int resFilesSectional
com.ds.avare.R$array: int resFilesTAC
com.ds.avare.R$array: int resFilesTerrain
com.ds.avare.R$array: int resFilesTopo
com.ds.avare.R$array: int resFilesVFRAreaPlate
com.ds.avare.R$array: int resFilesWAC
com.ds.avare.R$array: int resFilesWeather
com.ds.avare.R$array: int resGroups
com.ds.avare.R$array: int resGroupsPopout
com.ds.avare.R$array: int resNameAFD
com.ds.avare.R$array: int resNameDatabase
com.ds.avare.R$array: int resNameHeli
com.ds.avare.R$array: int resNameIFRArea
com.ds.avare.R$array: int resNameIFRHE
com.ds.avare.R$array: int resNameIFRLE
com.ds.avare.R$array: int resNamePlate
com.ds.avare.R$array: int resNameSectional
com.ds.avare.R$array: int resNameTAC
com.ds.avare.R$array: int resNameTerrain
com.ds.avare.R$array: int resNameTopo
com.ds.avare.R$array: int resNameVFRAreaPlate
com.ds.avare.R$array: int resNameWAC
com.ds.avare.R$array: int resNameWeather
com.ds.avare.R$array: R$array()
com.ds.avare.R$attr
com.ds.avare.R$attr: R$attr()
com.ds.avare.R$dimen
com.ds.avare.R$dimen: int TextSize
com.ds.avare.R$dimen: int distanceRingNumberTextSize
com.ds.avare.R$dimen: int runwayNumberTextSize
com.ds.avare.R$dimen: R$dimen()
com.ds.avare.R$drawable
com.ds.avare.R$drawable: int add
com.ds.avare.R$drawable: int aircraft
com.ds.avare.R$drawable: int airport
com.ds.avare.R$drawable: int bg_selected
com.ds.avare.R$drawable: int bg_selector
com.ds.avare.R$drawable: int bg_unselected
com.ds.avare.R$drawable: int border
com.ds.avare.R$drawable: int border_green_small
com.ds.avare.R$drawable: int border_red_small
com.ds.avare.R$drawable: int border_transparent
com.ds.avare.R$drawable: int canard
com.ds.avare.R$drawable: int check
com.ds.avare.R$drawable: int check_red
com.ds.avare.R$drawable: int delete
com.ds.avare.R$drawable: int direct
com.ds.avare.R$drawable: int directory_icon
com.ds.avare.R$drawable: int directory_up
com.ds.avare.R$drawable: int download
com.ds.avare.R$drawable: int edit
com.ds.avare.R$drawable: int erase
com.ds.avare.R$drawable: int file_icon
com.ds.avare.R$drawable: int fix
com.ds.avare.R$drawable: int flag
com.ds.avare.R$drawable: int geo
com.ds.avare.R$drawable: int glide
com.ds.avare.R$drawable: int heli
com.ds.avare.R$drawable: int help
com.ds.avare.R$drawable: int left
com.ds.avare.R$drawable: int line
com.ds.avare.R$drawable: int line_heading
com.ds.avare.R$drawable: int lock_pink
com.ds.avare.R$drawable: int maps
com.ds.avare.R$drawable: int marker
com.ds.avare.R$drawable: int ndb
com.ds.avare.R$drawable: int ndbdme
com.ds.avare.R$drawable: int no
com.ds.avare.R$drawable: int nochart
com.ds.avare.R$drawable: int obstacle
com.ds.avare.R$drawable: int plan
com.ds.avare.R$drawable: int plane
com.ds.avare.R$drawable: int plane_green
com.ds.avare.R$drawable: int planeother
com.ds.avare.R$drawable: int plates
com.ds.avare.R$drawable: int pushpin
com.ds.avare.R$drawable: int remove
com.ds.avare.R$drawable: int right
com.ds.avare.R$drawable: int runway_extension
com.ds.avare.R$drawable: int settings
com.ds.avare.R$drawable: int tacan
com.ds.avare.R$drawable: int text_selector
com.ds.avare.R$drawable: int vor
com.ds.avare.R$drawable: int vordme
com.ds.avare.R$drawable: int vortac
com.ds.avare.R$drawable: int vot
com.ds.avare.R$drawable: int web
com.ds.avare.R$drawable: int white_square
com.ds.avare.R$drawable: R$drawable()
com.ds.avare.R$id
com.ds.avare.R$id: int airport_afd
com.ds.avare.R$id: int airport_button_airports
com.ds.avare.R$id: int airport_button_center
com.ds.avare.R$id: int airport_button_views
com.ds.avare.R$id: int airport_list
com.ds.avare.R$id: int btn_register
com.ds.avare.R$id: int btn_unregister
com.ds.avare.R$id: int chart_download_button_delete
com.ds.avare.R$id: int chart_download_button_dl
com.ds.avare.R$id: int chart_download_button_lo
com.ds.avare.R$id: int chart_download_button_update
com.ds.avare.R$id: int chart_download_list
com.ds.avare.R$id: int chart_download_list_image
com.ds.avare.R$id: int chart_download_list_item
com.ds.avare.R$id: int chart_download_list_state
com.ds.avare.R$id: int comments_submit_airport
com.ds.avare.R$id: int comments_submit_button_submit
com.ds.avare.R$id: int comments_submit_comments
com.ds.avare.R$id: int comments_submit_log
com.ds.avare.R$id: int comments_submit_ratingbar
com.ds.avare.R$id: int folder_button_external
com.ds.avare.R$id: int folder_button_internal
com.ds.avare.R$id: int folder_list
com.ds.avare.R$id: int folder_text_path
com.ds.avare.R$id: int fuel_submit_airport
com.ds.avare.R$id: int fuel_submit_button_submit
com.ds.avare.R$id: int fuel_submit_fbo
com.ds.avare.R$id: int fuel_submit_fueltype
com.ds.avare.R$id: int fuel_submit_log
com.ds.avare.R$id: int fuel_submit_price
com.ds.avare.R$id: int hotel_adults
com.ds.avare.R$id: int hotel_child_1
com.ds.avare.R$id: int hotel_child_2
com.ds.avare.R$id: int hotel_child_3
com.ds.avare.R$id: int hotel_child_4
com.ds.avare.R$id: int hotel_child_5
com.ds.avare.R$id: int hotel_datefrom_text
com.ds.avare.R$id: int hotel_dateto_text
com.ds.avare.R$id: int hotel_layout_ac1
com.ds.avare.R$id: int hotel_layout_ac1_text
com.ds.avare.R$id: int hotel_layout_ac2
com.ds.avare.R$id: int hotel_layout_ac2_text
com.ds.avare.R$id: int hotel_layout_date
com.ds.avare.R$id: int hotel_layout_date_text
com.ds.avare.R$id: int hotel_layout_type
com.ds.avare.R$id: int hotel_layout_type_text
com.ds.avare.R$id: int hotel_price
com.ds.avare.R$id: int hotel_radius
com.ds.avare.R$id: int hotel_stars
com.ds.avare.R$id: int list_bottom_buttons
com.ds.avare.R$id: int list_button_back
com.ds.avare.R$id: int list_button_forward
com.ds.avare.R$id: int list_load_progress
com.ds.avare.R$id: int list_mainpage
com.ds.avare.R$id: int list_progress_bar
com.ds.avare.R$id: int location
com.ds.avare.R$id: int location_button_ads
com.ds.avare.R$id: int location_button_afd
com.ds.avare.R$id: int location_button_center
com.ds.avare.R$id: int location_button_cross
com.ds.avare.R$id: int location_button_dest
com.ds.avare.R$id: int location_button_dl
com.ds.avare.R$id: int location_button_draw
com.ds.avare.R$id: int location_button_draw_clear
com.ds.avare.R$id: int location_button_help
com.ds.avare.R$id: int location_button_menu
com.ds.avare.R$id: int location_button_plan
com.ds.avare.R$id: int location_button_plate
com.ds.avare.R$id: int location_button_pref
com.ds.avare.R$id: int location_button_sim
com.ds.avare.R$id: int location_button_track
com.ds.avare.R$id: int location_button_tracks
com.ds.avare.R$id: int location_list_popout
com.ds.avare.R$id: int location_popout_buttons
com.ds.avare.R$id: int location_popout_layout
com.ds.avare.R$id: int location_seekbar_threshold
com.ds.avare.R$id: int location_spinner_chart
com.ds.avare.R$id: int log_text
com.ds.avare.R$id: int longitudems
com.ds.avare.R$id: int lonlat_button_cancel
com.ds.avare.R$id: int lonlat_button_ok
com.ds.avare.R$id: int lonlat_latitude
com.ds.avare.R$id: int lonlat_latitude_ms
com.ds.avare.R$id: int lonlat_longitude
com.ds.avare.R$id: int lonlat_longitude_ms
com.ds.avare.R$id: int lonlat_textview_degree0
com.ds.avare.R$id: int lonlat_textview_degree1
com.ds.avare.R$id: int lonlat_textview_degree2
com.ds.avare.R$id: int lonlat_textview_degree3
com.ds.avare.R$id: int memory
com.ds.avare.R$id: int message_mainpage
com.ds.avare.R$id: int message_type
com.ds.avare.R$id: int nearest_button_2
com.ds.avare.R$id: int nearest_button_2000
com.ds.avare.R$id: int nearest_button_3
com.ds.avare.R$id: int nearest_button_4000
com.ds.avare.R$id: int nearest_button_6000
com.ds.avare.R$id: int nearest_button_dest
com.ds.avare.R$id: int nearest_button_fuel
com.ds.avare.R$id: int nearest_button_gr
com.ds.avare.R$id: int nearest_button_plates
com.ds.avare.R$id: int nearest_layout_runway
com.ds.avare.R$id: int nearest_list
com.ds.avare.R$id: int nearest_list_aid_name
com.ds.avare.R$id: int nearest_list_bearing
com.ds.avare.R$id: int nearest_list_distance
com.ds.avare.R$id: int nearest_list_elevation
com.ds.avare.R$id: int plan_bottom_buttons
com.ds.avare.R$id: int plan_button_activate
com.ds.avare.R$id: int plan_button_back
com.ds.avare.R$id: int plan_button_forward
com.ds.avare.R$id: int plan_load_progress
com.ds.avare.R$id: int plan_mainpage
com.ds.avare.R$id: int plan_next
com.ds.avare.R$id: int plan_pause
com.ds.avare.R$id: int plan_prev
com.ds.avare.R$id: int plate_button_draw
com.ds.avare.R$id: int plate_button_draw_clear
com.ds.avare.R$id: int plates
com.ds.avare.R$id: int plates_button_airports
com.ds.avare.R$id: int plates_button_center
com.ds.avare.R$id: int plates_button_plates
com.ds.avare.R$id: int plates_button_tag
com.ds.avare.R$id: int plates_button_timer
com.ds.avare.R$id: int plates_chronometer
com.ds.avare.R$id: int plates_header
com.ds.avare.R$id: int platestag_button_clear
com.ds.avare.R$id: int platestag_button_report
com.ds.avare.R$id: int platestag_button_share
com.ds.avare.R$id: int platestag_button_tag
com.ds.avare.R$id: int platestag_button_verify
com.ds.avare.R$id: int platestag_spinner
com.ds.avare.R$id: int platestag_text_input
com.ds.avare.R$id: int platestag_view
com.ds.avare.R$id: int platestag_view_tag
com.ds.avare.R$id: int privacy
com.ds.avare.R$id: int satellite
com.ds.avare.R$id: int satellite_slider
com.ds.avare.R$id: int satellite_text_brightness
com.ds.avare.R$id: int satellite_text_gps_details
com.ds.avare.R$id: int satellite_text_map_details
com.ds.avare.R$id: int satellite_text_mem_details
com.ds.avare.R$id: int search_button_delete
com.ds.avare.R$id: int search_button_note
com.ds.avare.R$id: int search_button_plan
com.ds.avare.R$id: int search_button_plates
com.ds.avare.R$id: int search_edit_text
com.ds.avare.R$id: int search_list_image
com.ds.avare.R$id: int search_list_name
com.ds.avare.R$id: int search_list_text
com.ds.avare.R$id: int search_list_view
com.ds.avare.R$id: int search_progress_bar
com.ds.avare.R$id: int spinner_register
com.ds.avare.R$id: int tabs_bg
com.ds.avare.R$id: int tabs_text
com.ds.avare.R$id: int tabscroll
com.ds.avare.R$id: int textview_textview
com.ds.avare.R$id: int textview_textview_wrap
com.ds.avare.R$id: int textview_wrap_action
com.ds.avare.R$id: int tools_table_row1
com.ds.avare.R$id: int tools_table_row2
com.ds.avare.R$id: int tools_table_row3
com.ds.avare.R$id: int tools_table_row4
com.ds.avare.R$id: int trip_button_find
com.ds.avare.R$id: int trip_button_last
com.ds.avare.R$id: int trip_button_next
com.ds.avare.R$id: int trip_edit_text
com.ds.avare.R$id: int trip_load_progress
com.ds.avare.R$id: int trip_mainpage
com.ds.avare.R$id: int trip_progress_bar
com.ds.avare.R$id: int typevalue_type
com.ds.avare.R$id: int typevalue_value
com.ds.avare.R$id: int weather_load_progress
com.ds.avare.R$id: int weather_mainpage
com.ds.avare.R$id: int web_button_last
com.ds.avare.R$id: int web_button_next
com.ds.avare.R$id: int web_edit_text
com.ds.avare.R$id: int web_mainpage
com.ds.avare.R$id: int web_progress_bar
com.ds.avare.R$id: R$id()
com.ds.avare.R$layout
com.ds.avare.R$layout: int activity_register
com.ds.avare.R$layout: int airport
com.ds.avare.R$layout: int chart_download
com.ds.avare.R$layout: int chart_download_list
com.ds.avare.R$layout: int checklist
com.ds.avare.R$layout: int comments_submit
com.ds.avare.R$layout: int folder
com.ds.avare.R$layout: int fuel_submit
com.ds.avare.R$layout: int hotel
com.ds.avare.R$layout: int input
com.ds.avare.R$layout: int location
com.ds.avare.R$layout: int lonlat
com.ds.avare.R$layout: int main
com.ds.avare.R$layout: int message
com.ds.avare.R$layout: int nearest
com.ds.avare.R$layout: int nearest_list
com.ds.avare.R$layout: int plan
com.ds.avare.R$layout: int plates
com.ds.avare.R$layout: int platestag
com.ds.avare.R$layout: int preferences
com.ds.avare.R$layout: int privacy
com.ds.avare.R$layout: int satellite
com.ds.avare.R$layout: int search
com.ds.avare.R$layout: int search_list
com.ds.avare.R$layout: int tabs_bg
com.ds.avare.R$layout: int textview
com.ds.avare.R$layout: int textview_wrap
com.ds.avare.R$layout: int trip
com.ds.avare.R$layout: int typevalue
com.ds.avare.R$layout: int weather
com.ds.avare.R$layout: int web
com.ds.avare.R$layout: R$layout()
com.ds.avare.R$string
com.ds.avare.R$string: int ADS
com.ds.avare.R$string: int ADSBTraffic
com.ds.avare.R$string: int ADSBTrafficLabel
com.ds.avare.R$string: int ADSBTrafficSummary
com.ds.avare.R$string: int ADSBWeather
com.ds.avare.R$string: int ADSBWeatherLabel
com.ds.avare.R$string: int ADSBWeatherSummary
com.ds.avare.R$string: int AFD
com.ds.avare.R$string: int AFDSummary
com.ds.avare.R$string: int APRatings
com.ds.avare.R$string: int Active
com.ds.avare.R$string: int Add
com.ds.avare.R$string: int AddAction
com.ds.avare.R$string: int AddPlan
com.ds.avare.R$string: int AddPlanHelp
com.ds.avare.R$string: int AddedPoint
com.ds.avare.R$string: int Advertisements
com.ds.avare.R$string: int Agree
com.ds.avare.R$string: int AirDia
com.ds.avare.R$string: int AirSigType
com.ds.avare.R$string: int AirSigTypeLabel
com.ds.avare.R$string: int AirSigTypeSummary
com.ds.avare.R$string: int AllFacilities
com.ds.avare.R$string: int AllFacilitiesLabel
com.ds.avare.R$string: int AllFacilitiesSummary
com.ds.avare.R$string: int AlreadyTagged
com.ds.avare.R$string: int Altitude
com.ds.avare.R$string: int AltitudeAccuracy
com.ds.avare.R$string: int AndLoad
com.ds.avare.R$string: int AreaNF
com.ds.avare.R$string: int AutoPostTracksDialogText
com.ds.avare.R$string: int AutoPostTracksLabel
com.ds.avare.R$string: int AutoPostTracksSubject
com.ds.avare.R$string: int AutoPostTracksSummary
com.ds.avare.R$string: int AutoPostTracksTitle
com.ds.avare.R$string: int AutoShowAirportDiagram
com.ds.avare.R$string: int AutoShowAirportDiagramLabel
com.ds.avare.R$string: int AutoShowAirportDiagramSummary
com.ds.avare.R$string: int AvailableMem
com.ds.avare.R$string: int Back
com.ds.avare.R$string: int Background
com.ds.avare.R$string: int BackgroundLabel
com.ds.avare.R$string: int BackgroundSummary
com.ds.avare.R$string: int BadCoords
com.ds.avare.R$string: int BestRunway
com.ds.avare.R$string: int CAPGrid
com.ds.avare.R$string: int CAPGridLabel
com.ds.avare.R$string: int CAPGridSummary
com.ds.avare.R$string: int Calibrate
com.ds.avare.R$string: int Cancel
com.ds.avare.R$string: int ChartType
com.ds.avare.R$string: int ChartTypeLabel
com.ds.avare.R$string: int ChartTypeSummary
com.ds.avare.R$string: int ChecklistSummary
com.ds.avare.R$string: int Clear
com.ds.avare.R$string: int Cleared
com.ds.avare.R$string: int ClearedPrompt
com.ds.avare.R$string: int Create
com.ds.avare.R$string: int CurrentChecklistName
com.ds.avare.R$string: int CurrentPlanName
com.ds.avare.R$string: int CurrentlySetTo
com.ds.avare.R$string: int Cycle
com.ds.avare.R$string: int CycleLabel
com.ds.avare.R$string: int CycleSummary
com.ds.avare.R$string: int Delete
com.ds.avare.R$string: int DeleteListQuestion
com.ds.avare.R$string: int DensityAltitude
com.ds.avare.R$string: int Destination
com.ds.avare.R$string: int DestinationNF
com.ds.avare.R$string: int DestinationPrompt
com.ds.avare.R$string: int DestinationSet
com.ds.avare.R$string: int DisplayIcon
com.ds.avare.R$string: int DisplayIconLabel
com.ds.avare.R$string: int DisplayIconSummary
com.ds.avare.R$string: int DistKilometer
com.ds.avare.R$string: int DistKnot
com.ds.avare.R$string: int DistMile
com.ds.avare.R$string: int DistanceRingColorsLabel
com.ds.avare.R$string: int DistanceRingColorsSummary
com.ds.avare.R$string: int DistanceRingTypeLabel
com.ds.avare.R$string: int DistanceRingTypeSummary
com.ds.avare.R$string: int Done
com.ds.avare.R$string: int DownloadDB
com.ds.avare.R$string: int DownloadDBShort
com.ds.avare.R$string: int DownloadInst
com.ds.avare.R$string: int Downloading
com.ds.avare.R$string: int Draw
com.ds.avare.R$string: int ETABearing
com.ds.avare.R$string: int ETABearingLabel
com.ds.avare.R$string: int ETABearingSummary
com.ds.avare.R$string: int EdgeTape
com.ds.avare.R$string: int EdgeTapeLabel
com.ds.avare.R$string: int EdgeTapeSummary
com.ds.avare.R$string: int Edit
com.ds.avare.R$string: int Email
com.ds.avare.R$string: int EnoughPoints
com.ds.avare.R$string: int Exit
com.ds.avare.R$string: int ExtendInfoLines
com.ds.avare.R$string: int ExtendInfoLinesLabel
com.ds.avare.R$string: int ExtendInfoLinesSummary
com.ds.avare.R$string: int ExternalFolder
com.ds.avare.R$string: int Extracting
com.ds.avare.R$string: int FBO
com.ds.avare.R$string: int Failed
com.ds.avare.R$string: int FileStore
com.ds.avare.R$string: int FileStoreInvalid
com.ds.avare.R$string: int Find
com.ds.avare.R$string: int FindSummary
com.ds.avare.R$string: int Fuel
com.ds.avare.R$string: int FuelCost
com.ds.avare.R$string: int GPS
com.ds.avare.R$string: int GPSEnable
com.ds.avare.R$string: int GPSLost
com.ds.avare.R$string: int GPSSummary
com.ds.avare.R$string: int GameTFR
com.ds.avare.R$string: int GameTFRLabel
com.ds.avare.R$string: int GameTFRSummary
com.ds.avare.R$string: int GeoCode
com.ds.avare.R$string: int GeoCodeLabel
com.ds.avare.R$string: int GeoCodeSummary
com.ds.avare.R$string: int GeoRefPlates
com.ds.avare.R$string: int GeoShareDone
com.ds.avare.R$string: int GeoShareFailed
com.ds.avare.R$string: int GeoShareReportFailed
com.ds.avare.R$string: int GeoShareReportOK
com.ds.avare.R$string: int GeoShareReportPrompt
com.ds.avare.R$string: int GeoShareText
com.ds.avare.R$string: int GeoShareTextAll
com.ds.avare.R$string: int Geotag
com.ds.avare.R$string: int Get
com.ds.avare.R$string: int GetWeather
com.ds.avare.R$string: int GlideRatio
com.ds.avare.R$string: int GlideRatioLabel
com.ds.avare.R$string: int GlideRatioSummary
com.ds.avare.R$string: int GoodCoords
com.ds.avare.R$string: int GpsOffWarn
com.ds.avare.R$string: int GpsOffWarnLabel
com.ds.avare.R$string: int GpsOffWarnSummary
com.ds.avare.R$string: int GpsOnly
com.ds.avare.R$string: int GpsTime
com.ds.avare.R$string: int GpsTimeLabel
com.ds.avare.R$string: int GpsTimeSummary
com.ds.avare.R$string: int Help
com.ds.avare.R$string: int Hotels
com.ds.avare.R$string: int IconHelicopter
com.ds.avare.R$string: int IconHelicopterLabel
com.ds.avare.R$string: int IconHelicopterSummary
com.ds.avare.R$string: int Import
com.ds.avare.R$string: int ImportAction
com.ds.avare.R$string: int ImportActionFilePath
com.ds.avare.R$string: int Inactive
com.ds.avare.R$string: int IncorrectDateFormat
com.ds.avare.R$string: int Init
com.ds.avare.R$string: int InstallPDF
com.ds.avare.R$string: int Instrumentation
com.ds.avare.R$string: int InternalGpsStatus
com.ds.avare.R$string: int InvalidComments
com.ds.avare.R$string: int InvalidFBO
com.ds.avare.R$string: int InvalidPoint
com.ds.avare.R$string: int InvalidPrice
com.ds.avare.R$string: int InvalidText
com.ds.avare.R$string: int Label
com.ds.avare.R$string: int Last
com.ds.avare.R$string: int Lat
com.ds.avare.R$string: int LatitudeLongitude
com.ds.avare.R$string: int LeaveRunning
com.ds.avare.R$string: int LeaveRunningLabel
com.ds.avare.R$string: int LeaveRunningSummary
com.ds.avare.R$string: int Left
com.ds.avare.R$string: int List
com.ds.avare.R$string: int Load
com.ds.avare.R$string: int LoadReverse
com.ds.avare.R$string: int LoadingMaps
com.ds.avare.R$string: int Locked
com.ds.avare.R$string: int Lon
com.ds.avare.R$string: int Main
com.ds.avare.R$string: int MapSize
com.ds.avare.R$string: int Maps
com.ds.avare.R$string: int MapsLabel
com.ds.avare.R$string: int MapsSummary
com.ds.avare.R$string: int MissingMaps
com.ds.avare.R$string: int Navigate
com.ds.avare.R$string: int Near
com.ds.avare.R$string: int NearSummary
com.ds.avare.R$string: int Nearest
com.ds.avare.R$string: int Nearest100LL
com.ds.avare.R$string: int Nearest2000
com.ds.avare.R$string: int Nearest4000
com.ds.avare.R$string: int Nearest6000
com.ds.avare.R$string: int Next
com.ds.avare.R$string: int NightMode
com.ds.avare.R$string: int NightModeLabel
com.ds.avare.R$string: int NightModeSummary
com.ds.avare.R$string: int No
com.ds.avare.R$string: int NorthUp
com.ds.avare.R$string: int NotAvailable
com.ds.avare.R$string: int NotGlideRange
com.ds.avare.R$string: int NotTagged
com.ds.avare.R$string: int NotamsBrowser
com.ds.avare.R$string: int NotamsError
com.ds.avare.R$string: int NotamsPlan
com.ds.avare.R$string: int OK
com.ds.avare.R$string: int Obstacles
com.ds.avare.R$string: int ObstaclesLabel
com.ds.avare.R$string: int ObstaclesSummary
com.ds.avare.R$string: int OrientationP
com.ds.avare.R$string: int OrientationPLabel
com.ds.avare.R$string: int OrientationPSummary
com.ds.avare.R$string: int Pan
com.ds.avare.R$string: int Plan
com.ds.avare.R$string: int PlanDestinationNF
com.ds.avare.R$string: int PlanNoset
com.ds.avare.R$string: int PlanPrompt
com.ds.avare.R$string: int PlanSet
com.ds.avare.R$string: int PlanSummary
com.ds.avare.R$string: int PlanWarning
com.ds.avare.R$string: int Plates
com.ds.avare.R$string: int PlatesNF
com.ds.avare.R$string: int PlatesSummary
com.ds.avare.R$string: int PointName
com.ds.avare.R$string: int PointNotFound
com.ds.avare.R$string: int PointsTooClose
com.ds.avare.R$string: int Previous
com.ds.avare.R$string: int PrivateFolder
com.ds.avare.R$string: int Provider
com.ds.avare.R$string: int Radar
com.ds.avare.R$string: int RadarLabel
com.ds.avare.R$string: int RadarSummary
com.ds.avare.R$string: int Ratings
com.ds.avare.R$string: int Recent
com.ds.avare.R$string: int Report
com.ds.avare.R$string: int Right
com.ds.avare.R$string: int Root
com.ds.avare.R$string: int RootLabel
com.ds.avare.R$string: int RootSummary
com.ds.avare.R$string: int Runways
com.ds.avare.R$string: int RunwaysLabel
com.ds.avare.R$string: int RunwaysSummary
com.ds.avare.R$string: int Save
com.ds.avare.R$string: int SavedChecklist
com.ds.avare.R$string: int SavedLists
com.ds.avare.R$string: int SavedPlan
com.ds.avare.R$string: int ScreenBrightness
com.ds.avare.R$string: int ScreenOn
com.ds.avare.R$string: int ScreenOnLabel
com.ds.avare.R$string: int ScreenOnSummary
com.ds.avare.R$string: int ScreenSize
com.ds.avare.R$string: int Search
com.ds.avare.R$string: int Searching
com.ds.avare.R$string: int SelectOtherPoint
com.ds.avare.R$string: int SelectPlate
com.ds.avare.R$string: int SelectTextFieldTitle
com.ds.avare.R$string: int Set
com.ds.avare.R$string: int Settings
com.ds.avare.R$string: int Share
com.ds.avare.R$string: int Sharing
com.ds.avare.R$string: int SharingReport
com.ds.avare.R$string: int ShortDestination
com.ds.avare.R$string: int ShowCDILabel
com.ds.avare.R$string: int ShowCDISummary
com.ds.avare.R$string: int ShowTrack
com.ds.avare.R$string: int ShowTrackLabel
com.ds.avare.R$string: int ShowTrackSummary
com.ds.avare.R$string: int SimulationMode
com.ds.avare.R$string: int SpeedKilometer
com.ds.avare.R$string: int SpeedKnot
com.ds.avare.R$string: int SpeedMile
com.ds.avare.R$string: int Stars
com.ds.avare.R$string: int StoredPlans
com.ds.avare.R$string: int Success
com.ds.avare.R$string: int TFRReceived
com.ds.avare.R$string: int TFRs
com.ds.avare.R$string: int TabBarSummary
com.ds.avare.R$string: int TabBarTitle
com.ds.avare.R$string: int Tag
com.ds.avare.R$string: int Tagged
com.ds.avare.R$string: int Time
com.ds.avare.R$string: int Timer
com.ds.avare.R$string: int TimerRingSizeLabel
com.ds.avare.R$string: int TimerRingSizeSummary
com.ds.avare.R$string: int To
com.ds.avare.R$string: int ToTag
com.ds.avare.R$string: int Tools
com.ds.avare.R$string: int Total
com.ds.avare.R$string: int TrackUp
com.ds.avare.R$string: int TracksOff
com.ds.avare.R$string: int TracksOn
com.ds.avare.R$string: int Trip
com.ds.avare.R$string: int TripSummary
com.ds.avare.R$string: int TrkUpdAllow
com.ds.avare.R$string: int TrkUpdAllowLabel
com.ds.avare.R$string: int TrkUpdAllowSummary
com.ds.avare.R$string: int TrkUpdShowHistory
com.ds.avare.R$string: int TrkUpdShowHistoryLabel
com.ds.avare.R$string: int TrkUpdShowHistorySummary
com.ds.avare.R$string: int Trying
com.ds.avare.R$string: int UDWDescription
com.ds.avare.R$string: int UDWLabel
com.ds.avare.R$string: int UDWLocation
com.ds.avare.R$string: int UDWSearch
com.ds.avare.R$string: int UDWSummary
com.ds.avare.R$string: int Understand
com.ds.avare.R$string: int UnitKilometer
com.ds.avare.R$string: int UnitKnot
com.ds.avare.R$string: int UnitMile
com.ds.avare.R$string: int Units
com.ds.avare.R$string: int UnitsLabel
com.ds.avare.R$string: int UnitsSummary
com.ds.avare.R$string: int Up
com.ds.avare.R$string: int UseDynamicFieldsLabel
com.ds.avare.R$string: int UseDynamicFieldsSummary
com.ds.avare.R$string: int ValidDest
com.ds.avare.R$string: int Verify
com.ds.avare.R$string: int VerifyMessage
com.ds.avare.R$string: int VsFpm
com.ds.avare.R$string: int WXB
com.ds.avare.R$string: int WXSummary
com.ds.avare.R$string: int WarningMsg
com.ds.avare.R$string: int WeatherBrowser
com.ds.avare.R$string: int WeatherError
com.ds.avare.R$string: int WeatherPlan
com.ds.avare.R$string: int XlateWeather
com.ds.avare.R$string: int XlateWeatherLabel
com.ds.avare.R$string: int XlateWeatherSummary
com.ds.avare.R$string: int Yes
com.ds.avare.R$string: int Zero
com.ds.avare.R$string: int accuracy
com.ds.avare.R$string: int already_registered
com.ds.avare.R$string: int already_unregistered
com.ds.avare.R$string: int app_name
com.ds.avare.R$string: int blinkScreen
com.ds.avare.R$string: int blinkScreenLabel
com.ds.avare.R$string: int blinkScreenSummary
com.ds.avare.R$string: int calibratethis
com.ds.avare.R$string: int databases
com.ds.avare.R$string: int degree
com.ds.avare.R$string: int desc
com.ds.avare.R$string: int download
com.ds.avare.R$string: int error
com.ds.avare.R$string: int error_email
com.ds.avare.R$string: int error_internet
com.ds.avare.R$string: int externalGps
com.ds.avare.R$string: int externalGpsLabel
com.ds.avare.R$string: int externalGpsSummary
com.ds.avare.R$string: int failed_register
com.ds.avare.R$string: int failed_unregister
com.ds.avare.R$string: int folderHelp
com.ds.avare.R$string: int gt_sign
com.ds.avare.R$string: int lang
com.ds.avare.R$string: int latitude
com.ds.avare.R$string: int listitem
com.ds.avare.R$string: int longitude
com.ds.avare.R$string: int lt_sign
com.ds.avare.R$string: int no
com.ds.avare.R$string: int noZoomIn
com.ds.avare.R$string: int noZoomOut
com.ds.avare.R$string: int online
com.ds.avare.R$string: int onlineSummary
com.ds.avare.R$string: int prefAppStateCategoryTitle
com.ds.avare.R$string: int prefAutoPostTracks
com.ds.avare.R$string: int prefDisplayCategoryTitle
com.ds.avare.R$string: int prefDistanceRingColors
com.ds.avare.R$string: int prefDistanceRingType
com.ds.avare.R$string: int prefGetRowFormats
com.ds.avare.R$string: int prefGpsCategoryTitle
com.ds.avare.R$string: int prefLastPlateAirport
com.ds.avare.R$string: int prefLastPlateIndex
com.ds.avare.R$string: int prefOdometer
com.ds.avare.R$string: int prefPlanControl
com.ds.avare.R$string: int prefPlanControlLabel
com.ds.avare.R$string: int prefPlanControlSummary
com.ds.avare.R$string: int prefShowCDI
com.ds.avare.R$string: int prefStorageAndDownloadsCategoryTitle
com.ds.avare.R$string: int prefTabAFD
com.ds.avare.R$string: int prefTabChecklist
com.ds.avare.R$string: int prefTabFind
com.ds.avare.R$string: int prefTabNear
com.ds.avare.R$string: int prefTabPlan
com.ds.avare.R$string: int prefTabPlates
com.ds.avare.R$string: int prefTabTools
com.ds.avare.R$string: int prefTabTrip
com.ds.avare.R$string: int prefTabWX
com.ds.avare.R$string: int prefTimerRingSize
com.ds.avare.R$string: int prefTracksCategoryTitle
com.ds.avare.R$string: int prefUseDynamicFields
com.ds.avare.R$string: int prefWeatherCategoryTitle
com.ds.avare.R$string: int register
com.ds.avare.R$string: int register_msg
com.ds.avare.R$string: int registered
com.ds.avare.R$string: int registering_server
com.ds.avare.R$string: int rubberBand
com.ds.avare.R$string: int rubberBandLabel
com.ds.avare.R$string: int rubberBandSummary
com.ds.avare.R$string: int runwayLengths
com.ds.avare.R$string: int runwayLengthsLabel
com.ds.avare.R$string: int runwayLengthsSummary
com.ds.avare.R$string: int switchTanks
com.ds.avare.R$string: int title_activity_main
com.ds.avare.R$string: int unregister
com.ds.avare.R$string: int unregistered
com.ds.avare.R$string: int unregistering_server
com.ds.avare.R$string: int update
com.ds.avare.R$string: int weather
com.ds.avare.R$string: int yes
com.ds.avare.R$string: R$string()
com.ds.avare.R$style
com.ds.avare.R$style: int AppTheme
com.ds.avare.R$style: R$style()
com.ds.avare.R$xml
com.ds.avare.R$xml: int preferences
com.ds.avare.R$xml: R$xml()
com.ds.avare.RegisterActivity
com.ds.avare.RegisterActivity: RegisterActivity()
com.ds.avare.RegisterActivity: void onCreate(android.os.Bundle)
com.ds.avare.RegisterActivity: void setChoices()
com.ds.avare.RegisterActivity: void unregister(android.content.Context,java.lang.String)
com.ds.avare.RegisterActivity: android.widget.Spinner access$000(com.ds.avare.RegisterActivity)
com.ds.avare.RegisterActivity: com.ds.avare.storage.Preferences access$100(com.ds.avare.RegisterActivity)
com.ds.avare.RegisterActivity: void access$200(com.ds.avare.RegisterActivity)
com.ds.avare.RegisterActivity: android.webkit.WebView access$300(com.ds.avare.RegisterActivity)
com.ds.avare.RegisterActivity: android.app.AlertDialog access$400(com.ds.avare.RegisterActivity)
com.ds.avare.RegisterActivity: android.app.AlertDialog access$500(com.ds.avare.RegisterActivity)
com.ds.avare.RegisterActivity: void <clinit>()
com.ds.avare.RegisterActivity$1
com.ds.avare.RegisterActivity$1: RegisterActivity$1(com.ds.avare.RegisterActivity)
com.ds.avare.RegisterActivity$1: void onClick(android.content.DialogInterface,int)
com.ds.avare.RegisterActivity$1$1
com.ds.avare.RegisterActivity$1$1: RegisterActivity$1$1(com.ds.avare.RegisterActivity$1,java.lang.String)
com.ds.avare.RegisterActivity$1$1: java.lang.Boolean doInBackground(java.lang.Void[])
com.ds.avare.RegisterActivity$1$1: void onPostExecute(java.lang.Boolean)
com.ds.avare.RegisterActivity$1$1: void onPostExecute(java.lang.Object)
com.ds.avare.RegisterActivity$1$1: java.lang.Object doInBackground(java.lang.Object[])
com.ds.avare.RegisterActivity$2
com.ds.avare.RegisterActivity$2: RegisterActivity$2(com.ds.avare.RegisterActivity)
com.ds.avare.RegisterActivity$2: void onClick(android.content.DialogInterface,int)
com.ds.avare.RegisterActivity$3
com.ds.avare.RegisterActivity$3: RegisterActivity$3(com.ds.avare.RegisterActivity)
com.ds.avare.RegisterActivity$3: void onClick(android.content.DialogInterface,int)
com.ds.avare.RegisterActivity$3$1
com.ds.avare.RegisterActivity$3$1: RegisterActivity$3$1(com.ds.avare.RegisterActivity$3)
com.ds.avare.RegisterActivity$3$1: java.lang.Boolean doInBackground(java.lang.Void[])
com.ds.avare.RegisterActivity$3$1: void onPostExecute(java.lang.Boolean)
com.ds.avare.RegisterActivity$3$1: void onPostExecute(java.lang.Object)
com.ds.avare.RegisterActivity$3$1: java.lang.Object doInBackground(java.lang.Object[])
com.ds.avare.RegisterActivity$4
com.ds.avare.RegisterActivity$4: RegisterActivity$4(com.ds.avare.RegisterActivity)
com.ds.avare.RegisterActivity$4: void onClick(android.content.DialogInterface,int)
com.ds.avare.RegisterActivity$5
com.ds.avare.RegisterActivity$5: RegisterActivity$5(com.ds.avare.RegisterActivity)
com.ds.avare.RegisterActivity$5: void onClick(android.view.View)
com.ds.avare.RegisterActivity$5$1
com.ds.avare.RegisterActivity$5$1: RegisterActivity$5$1(com.ds.avare.RegisterActivity$5)
com.ds.avare.RegisterActivity$5$1: void onPageFinished(android.webkit.WebView,java.lang.String)
com.ds.avare.RegisterActivity$6
com.ds.avare.RegisterActivity$6: RegisterActivity$6(com.ds.avare.RegisterActivity)
com.ds.avare.RegisterActivity$6: void onClick(android.view.View)
com.ds.avare.SatelliteActivity
com.ds.avare.SatelliteActivity: SatelliteActivity()
com.ds.avare.SatelliteActivity: void updateMem()
com.ds.avare.SatelliteActivity: void updateMapArea()
com.ds.avare.SatelliteActivity: void onBackPressed()
com.ds.avare.SatelliteActivity: void onCreate(android.os.Bundle)
com.ds.avare.SatelliteActivity: void onResume()
com.ds.avare.SatelliteActivity: void onPause()
com.ds.avare.SatelliteActivity: com.ds.avare.views.SatelliteView access$000(com.ds.avare.SatelliteActivity)
com.ds.avare.SatelliteActivity: android.widget.TextView access$100(com.ds.avare.SatelliteActivity)
com.ds.avare.SatelliteActivity: void access$200(com.ds.avare.SatelliteActivity)
com.ds.avare.SatelliteActivity: void access$300(com.ds.avare.SatelliteActivity)
com.ds.avare.SatelliteActivity: com.ds.avare.StorageService access$402(com.ds.avare.SatelliteActivity,com.ds.avare.StorageService)
com.ds.avare.SatelliteActivity: com.ds.avare.gps.GpsInterface access$500(com.ds.avare.SatelliteActivity)
com.ds.avare.SatelliteActivity: com.ds.avare.StorageService access$400(com.ds.avare.SatelliteActivity)
com.ds.avare.SatelliteActivity$1
com.ds.avare.SatelliteActivity$1: SatelliteActivity$1(com.ds.avare.SatelliteActivity)
com.ds.avare.SatelliteActivity$1: void statusCallback(android.location.GpsStatus)
com.ds.avare.SatelliteActivity$1: void locationCallback(android.location.Location)
com.ds.avare.SatelliteActivity$1: void timeoutCallback(boolean)
com.ds.avare.SatelliteActivity$1: void enabledCallback(boolean)
com.ds.avare.SatelliteActivity$2
com.ds.avare.SatelliteActivity$2: SatelliteActivity$2(com.ds.avare.SatelliteActivity)
com.ds.avare.SatelliteActivity$2: void onStartTrackingTouch(android.widget.SeekBar)
com.ds.avare.SatelliteActivity$2: void onStopTrackingTouch(android.widget.SeekBar)
com.ds.avare.SatelliteActivity$2: void onProgressChanged(android.widget.SeekBar,int,boolean)
com.ds.avare.SatelliteActivity$3
com.ds.avare.SatelliteActivity$3: SatelliteActivity$3(com.ds.avare.SatelliteActivity)
com.ds.avare.SatelliteActivity$3: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
com.ds.avare.SatelliteActivity$3: void onServiceDisconnected(android.content.ComponentName)
com.ds.avare.SearchActivity
com.ds.avare.SearchActivity: SearchActivity()
com.ds.avare.SearchActivity: void onBackPressed()
com.ds.avare.SearchActivity: void goTo(java.lang.String,java.lang.String,java.lang.String)
com.ds.avare.SearchActivity: void planTo(java.lang.String,java.lang.String,java.lang.String)
com.ds.avare.SearchActivity: void initList()
com.ds.avare.SearchActivity: void onCreate(android.os.Bundle)
com.ds.avare.SearchActivity: void onStart()
com.ds.avare.SearchActivity: void onResume()
com.ds.avare.SearchActivity: void onPause()
com.ds.avare.SearchActivity: void onRestart()
com.ds.avare.SearchActivity: void onStop()
com.ds.avare.SearchActivity: void onDestroy()
com.ds.avare.SearchActivity: void update(java.util.Observable,java.lang.Object)
com.ds.avare.SearchActivity: java.lang.String access$000(com.ds.avare.SearchActivity)
com.ds.avare.SearchActivity: com.ds.avare.storage.Preferences access$100(com.ds.avare.SearchActivity)
com.ds.avare.SearchActivity: void access$200(com.ds.avare.SearchActivity)
com.ds.avare.SearchActivity: android.widget.EditText access$300(com.ds.avare.SearchActivity)
com.ds.avare.SearchActivity: java.lang.String access$002(com.ds.avare.SearchActivity,java.lang.String)
com.ds.avare.SearchActivity: android.widget.Toast access$400(com.ds.avare.SearchActivity)
com.ds.avare.SearchActivity: android.app.AlertDialog access$502(com.ds.avare.SearchActivity,android.app.AlertDialog)
com.ds.avare.SearchActivity: android.app.AlertDialog access$500(com.ds.avare.SearchActivity)
com.ds.avare.SearchActivity: void access$600(com.ds.avare.SearchActivity,java.lang.String,java.lang.String,java.lang.String)
com.ds.avare.SearchActivity: com.ds.avare.StorageService access$700(com.ds.avare.SearchActivity)
com.ds.avare.SearchActivity: com.ds.avare.adapters.SearchAdapter access$800(com.ds.avare.SearchActivity)
com.ds.avare.SearchActivity: void access$900(com.ds.avare.SearchActivity,java.lang.String,java.lang.String,java.lang.String)
com.ds.avare.SearchActivity: com.ds.avare.animation.AnimateButton access$1000(com.ds.avare.SearchActivity)
com.ds.avare.SearchActivity: com.ds.avare.animation.AnimateButton access$1100(com.ds.avare.SearchActivity)
com.ds.avare.SearchActivity: com.ds.avare.animation.AnimateButton access$1200(com.ds.avare.SearchActivity)
com.ds.avare.SearchActivity: com.ds.avare.animation.AnimateButton access$1300(com.ds.avare.SearchActivity)
com.ds.avare.SearchActivity: android.widget.ProgressBar access$1400(com.ds.avare.SearchActivity)
com.ds.avare.SearchActivity: com.ds.avare.SearchActivity$SearchTask access$1500(com.ds.avare.SearchActivity)
com.ds.avare.SearchActivity: com.ds.avare.adapters.SearchAdapter access$802(com.ds.avare.SearchActivity,com.ds.avare.adapters.SearchAdapter)
com.ds.avare.SearchActivity: android.widget.ListView access$1600(com.ds.avare.SearchActivity)
com.ds.avare.SearchActivity: com.ds.avare.SearchActivity$SearchTask access$1502(com.ds.avare.SearchActivity,com.ds.avare.SearchActivity$SearchTask)
com.ds.avare.SearchActivity: com.ds.avare.StorageService access$702(com.ds.avare.SearchActivity,com.ds.avare.StorageService)
com.ds.avare.SearchActivity: com.ds.avare.gps.GpsInterface access$1800(com.ds.avare.SearchActivity)
com.ds.avare.SearchActivity$1
com.ds.avare.SearchActivity$1: SearchActivity$1(com.ds.avare.SearchActivity)
com.ds.avare.SearchActivity$1: void statusCallback(android.location.GpsStatus)
com.ds.avare.SearchActivity$1: void locationCallback(android.location.Location)
com.ds.avare.SearchActivity$1: void timeoutCallback(boolean)
com.ds.avare.SearchActivity$1: void enabledCallback(boolean)
com.ds.avare.SearchActivity$2
com.ds.avare.SearchActivity$2: SearchActivity$2(com.ds.avare.SearchActivity)
com.ds.avare.SearchActivity$2: void onClick(android.view.View)
com.ds.avare.SearchActivity$3
com.ds.avare.SearchActivity$3: SearchActivity$3(com.ds.avare.SearchActivity)
com.ds.avare.SearchActivity$3: void onClick(android.view.View)
com.ds.avare.SearchActivity$3$1
com.ds.avare.SearchActivity$3$1: SearchActivity$3$1(com.ds.avare.SearchActivity$3,android.widget.EditText)
com.ds.avare.SearchActivity$3$1: void onClick(android.content.DialogInterface,int)
com.ds.avare.SearchActivity$3$2
com.ds.avare.SearchActivity$3$2: SearchActivity$3$2(com.ds.avare.SearchActivity$3)
com.ds.avare.SearchActivity$3$2: void onClick(android.content.DialogInterface,int)
com.ds.avare.SearchActivity$4
com.ds.avare.SearchActivity$4: SearchActivity$4(com.ds.avare.SearchActivity)
com.ds.avare.SearchActivity$4: void onClick(android.view.View)
com.ds.avare.SearchActivity$5
com.ds.avare.SearchActivity$5: SearchActivity$5(com.ds.avare.SearchActivity)
com.ds.avare.SearchActivity$5: void onClick(android.view.View)
com.ds.avare.SearchActivity$6
com.ds.avare.SearchActivity$6: SearchActivity$6(com.ds.avare.SearchActivity)
com.ds.avare.SearchActivity$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.ds.avare.SearchActivity$7
com.ds.avare.SearchActivity$7: SearchActivity$7(com.ds.avare.SearchActivity)
com.ds.avare.SearchActivity$7: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)
com.ds.avare.SearchActivity$8
com.ds.avare.SearchActivity$8: SearchActivity$8(com.ds.avare.SearchActivity)
com.ds.avare.SearchActivity$8: void afterTextChanged(android.text.Editable)
com.ds.avare.SearchActivity$8: void beforeTextChanged(java.lang.CharSequence,int,int,int)
com.ds.avare.SearchActivity$8: void onTextChanged(java.lang.CharSequence,int,int,int)
com.ds.avare.SearchActivity$9
com.ds.avare.SearchActivity$9: SearchActivity$9(com.ds.avare.SearchActivity)
com.ds.avare.SearchActivity$9: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
com.ds.avare.SearchActivity$9: void onServiceDisconnected(android.content.ComponentName)
com.ds.avare.SearchActivity$SearchTask
com.ds.avare.SearchActivity$SearchTask: SearchActivity$SearchTask(com.ds.avare.SearchActivity)
com.ds.avare.SearchActivity$SearchTask: java.lang.Boolean doInBackground(java.lang.Object[])
com.ds.avare.SearchActivity$SearchTask: void onPostExecute(java.lang.Boolean)
com.ds.avare.SearchActivity$SearchTask: void onPostExecute(java.lang.Object)
com.ds.avare.SearchActivity$SearchTask: java.lang.Object doInBackground(java.lang.Object[])
com.ds.avare.SearchActivity$SearchTask: SearchActivity$SearchTask(com.ds.avare.SearchActivity,com.ds.avare.SearchActivity$1)
com.ds.avare.StorageService
com.ds.avare.StorageService: StorageService()
com.ds.avare.StorageService: android.os.IBinder onBind(android.content.Intent)
com.ds.avare.StorageService: boolean onUnbind(android.content.Intent)
com.ds.avare.StorageService: void onCreate()
com.ds.avare.StorageService: void onDestroy()
com.ds.avare.StorageService: com.ds.avare.utils.InfoLines getInfoLines()
com.ds.avare.StorageService: com.ds.avare.shapes.TileMap getTiles()
com.ds.avare.StorageService: com.ds.avare.network.TFRFetcher getTFRFetcher()
com.ds.avare.StorageService: java.util.LinkedList getTFRShapes()
com.ds.avare.StorageService: com.ds.avare.storage.DataSource getDBResource()
com.ds.avare.StorageService: com.ds.avare.place.Destination getDestination()
com.ds.avare.StorageService: void setDestination(com.ds.avare.place.Destination)
com.ds.avare.StorageService: void setDestinationPlanNoChange(com.ds.avare.place.Destination)
com.ds.avare.StorageService: com.ds.avare.place.Destination getLastAfdDestination()
com.ds.avare.StorageService: void setLastAfdDestination(com.ds.avare.place.Destination)
com.ds.avare.StorageService: void setAfdIndex(int)
com.ds.avare.StorageService: int getAfdIndex()
com.ds.avare.StorageService: java.lang.String getLastAfdAirport()
com.ds.avare.StorageService: void setLastAfdAirport(java.lang.String)
com.ds.avare.StorageService: com.ds.avare.gps.GpsParams getGpsParams()
com.ds.avare.StorageService: void setGpsParams(com.ds.avare.gps.GpsParams)
com.ds.avare.StorageService: void setMovement(com.ds.avare.position.Movement)
com.ds.avare.StorageService: com.ds.avare.position.Movement getMovement()
com.ds.avare.StorageService: void setPan(com.ds.avare.position.Pan)
com.ds.avare.StorageService: com.ds.avare.position.Pan getPan()
com.ds.avare.StorageService: com.ds.avare.place.Area getArea()
com.ds.avare.StorageService: com.ds.avare.place.Plan getPlan()
com.ds.avare.StorageService: void newPlan()
com.ds.avare.StorageService: void newPlanFromStorage(java.lang.String,boolean)
com.ds.avare.StorageService: void loadDiagram(java.lang.String)
com.ds.avare.StorageService: com.ds.avare.utils.BitmapHolder getDiagram()
com.ds.avare.StorageService: void registerGpsListener(com.ds.avare.gps.GpsInterface)
com.ds.avare.StorageService: void unregisterGpsListener(com.ds.avare.gps.GpsInterface)
com.ds.avare.StorageService: com.ds.avare.shapes.Draw getDraw()
com.ds.avare.StorageService: com.ds.avare.shapes.PixelDraw getPixelDraw()
com.ds.avare.StorageService: com.ds.avare.weather.InternetWeatherCache getInternetWeatherCache()
com.ds.avare.StorageService: com.ds.avare.instruments.FlightTimer getFlightTimer()
com.ds.avare.StorageService: java.net.URI setTracks(boolean)
com.ds.avare.StorageService: boolean getTracks()
com.ds.avare.StorageService: com.ds.avare.flightLog.KMLRecorder getKMLRecorder()
com.ds.avare.StorageService: com.ds.avare.instruments.Odometer getOdometer()
com.ds.avare.StorageService: com.ds.avare.instruments.CDI getCDI()
com.ds.avare.StorageService: com.ds.avare.instruments.VNAV getVNAV()
com.ds.avare.StorageService: com.ds.avare.instruments.VSI getVSI()
com.ds.avare.StorageService: com.ds.avare.flight.FlightStatus getFlightStatus()
com.ds.avare.StorageService: com.ds.avare.gps.Gps getGps()
com.ds.avare.StorageService: android.location.Location getLocationBlocking()
com.ds.avare.StorageService: com.ds.avare.weather.AdsbWeatherCache getAdsbWeather()
com.ds.avare.StorageService: com.ds.avare.adsb.TrafficCache getTrafficCache()
com.ds.avare.StorageService: com.ds.avare.shapes.Radar getRadar()
com.ds.avare.StorageService: void deleteTFRFetcher()
com.ds.avare.StorageService: void deleteInternetWeatherCache()
com.ds.avare.StorageService: void deleteRadar()
com.ds.avare.StorageService: java.lang.String getLastPlateAirport()
com.ds.avare.StorageService: void setLastPlateAirport(java.lang.String)
com.ds.avare.StorageService: void setLastPlateIndex(int)
com.ds.avare.StorageService: int getLastPlateIndex()
com.ds.avare.StorageService: void setElevationTile(com.ds.avare.shapes.Tile)
com.ds.avare.StorageService: com.ds.avare.utils.BitmapHolder getElevationBitmap()
com.ds.avare.StorageService: void setDownloading(boolean)
com.ds.avare.StorageService: java.util.LinkedList getCheckLists()
com.ds.avare.StorageService: void setCheckLists(java.util.LinkedList)
com.ds.avare.StorageService: double getElevation()
com.ds.avare.StorageService: void setElevation(double)
com.ds.avare.StorageService: double getThreshold()
com.ds.avare.StorageService: void setThreshold(double)
com.ds.avare.StorageService: com.ds.avare.utils.ShadowedText getShadowedText()
com.ds.avare.StorageService: com.ds.avare.userDefinedWaypoints.UDWMgr getUDWMgr()
com.ds.avare.StorageService: com.ds.avare.instruments.DistanceRings getDistanceRings()
com.ds.avare.StorageService: com.ds.avare.externalFlightPlan.ExternalPlanMgr getExternalPlanMgr()
com.ds.avare.StorageService: com.ds.avare.utils.NavComments getNavComments()
com.ds.avare.StorageService: com.ds.avare.flight.Checklist getChecklist()
com.ds.avare.StorageService: void setChecklist(com.ds.avare.flight.Checklist)
com.ds.avare.StorageService: com.ds.avare.instruments.EdgeDistanceTape getEdgeTape()
com.ds.avare.StorageService: com.ds.avare.instruments.FuelTimer getFuelTimer()
com.ds.avare.StorageService: com.ds.avare.cap.DrawCapLines getCap()
com.ds.avare.StorageService: java.util.LinkedList access$100(com.ds.avare.StorageService)
com.ds.avare.StorageService: boolean access$200(com.ds.avare.StorageService)
com.ds.avare.StorageService: com.ds.avare.gps.Gps access$300(com.ds.avare.StorageService)
com.ds.avare.StorageService: android.location.Location access$402(com.ds.avare.StorageService,android.location.Location)
com.ds.avare.StorageService: com.ds.avare.utils.Mutex access$500(com.ds.avare.StorageService)
com.ds.avare.StorageService: com.ds.avare.place.Area access$600(com.ds.avare.StorageService)
com.ds.avare.StorageService: com.ds.avare.place.Plan access$700(com.ds.avare.StorageService)
com.ds.avare.StorageService: com.ds.avare.gps.GpsParams access$800(com.ds.avare.StorageService)
com.ds.avare.StorageService: com.ds.avare.place.Destination access$900(com.ds.avare.StorageService)
com.ds.avare.StorageService: int access$1008(com.ds.avare.StorageService)
com.ds.avare.StorageService: boolean access$1100(com.ds.avare.StorageService)
com.ds.avare.StorageService: int access$1000(com.ds.avare.StorageService)
com.ds.avare.StorageService$1
com.ds.avare.StorageService$1: StorageService$1(com.ds.avare.StorageService)
com.ds.avare.StorageService$1: java.util.LinkedList extracted()
com.ds.avare.StorageService$1: void statusCallback(android.location.GpsStatus)
com.ds.avare.StorageService$1: void locationCallback(android.location.Location)
com.ds.avare.StorageService$1: void timeoutCallback(boolean)
com.ds.avare.StorageService$1: void enabledCallback(boolean)
com.ds.avare.StorageService$LocalBinder
com.ds.avare.StorageService$LocalBinder: StorageService$LocalBinder(com.ds.avare.StorageService)
com.ds.avare.StorageService$LocalBinder: com.ds.avare.StorageService getService()
com.ds.avare.StorageService$UpdateTask
com.ds.avare.StorageService$UpdateTask: StorageService$UpdateTask(com.ds.avare.StorageService)
com.ds.avare.StorageService$UpdateTask: void run()
com.ds.avare.StorageService$UpdateTask: StorageService$UpdateTask(com.ds.avare.StorageService,com.ds.avare.StorageService$1)
com.ds.avare.SubmitActivity
com.ds.avare.SubmitActivity: SubmitActivity()
com.ds.avare.SubmitActivity: void onCreate(android.os.Bundle)
com.ds.avare.SubmitActivity: void <clinit>()
com.ds.avare.SubmitActivity$1
com.ds.avare.SubmitActivity$1: SubmitActivity$1(com.ds.avare.SubmitActivity,int)
com.ds.avare.SubmitActivity$1: void onClick(android.view.View)
com.ds.avare.SubmitActivity$1$1
com.ds.avare.SubmitActivity$1$1: SubmitActivity$1$1(com.ds.avare.SubmitActivity$1)
com.ds.avare.SubmitActivity$1$1: java.lang.Boolean doInBackground(java.lang.Void[])
com.ds.avare.SubmitActivity$1$1: void onProgressUpdate(java.lang.Void[])
com.ds.avare.SubmitActivity$1$1: void onPostExecute(java.lang.Boolean)
com.ds.avare.SubmitActivity$1$1: boolean setup()
com.ds.avare.SubmitActivity$1$1: void onProgressUpdate(java.lang.Object[])
com.ds.avare.SubmitActivity$1$1: void onPostExecute(java.lang.Object)
com.ds.avare.SubmitActivity$1$1: java.lang.Object doInBackground(java.lang.Object[])
com.ds.avare.TripActivity
com.ds.avare.TripActivity: TripActivity()
com.ds.avare.TripActivity: void onBackPressed()
com.ds.avare.TripActivity: void onCreate(android.os.Bundle)
com.ds.avare.TripActivity: boolean isDateWrong(java.lang.String)
com.ds.avare.TripActivity: java.lang.String makeURL(android.widget.EditText,android.widget.EditText,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner)
com.ds.avare.TripActivity: void onStart()
com.ds.avare.TripActivity: void onResume()
com.ds.avare.TripActivity: void onPause()
com.ds.avare.TripActivity: void onRestart()
com.ds.avare.TripActivity: void onStop()
com.ds.avare.TripActivity: void onDestroy()
com.ds.avare.TripActivity: com.ds.avare.StorageService access$000(com.ds.avare.TripActivity)
com.ds.avare.TripActivity: android.widget.ProgressBar access$100(com.ds.avare.TripActivity)
com.ds.avare.TripActivity: com.ds.avare.storage.Preferences access$200(com.ds.avare.TripActivity)
com.ds.avare.TripActivity: java.lang.String access$300(com.ds.avare.TripActivity,android.widget.EditText,android.widget.EditText,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner)
com.ds.avare.TripActivity: android.webkit.WebView access$400(com.ds.avare.TripActivity)
com.ds.avare.TripActivity: android.widget.ProgressBar access$500(com.ds.avare.TripActivity)
com.ds.avare.TripActivity: com.ds.avare.StorageService access$002(com.ds.avare.TripActivity,com.ds.avare.StorageService)
com.ds.avare.TripActivity: com.ds.avare.gps.GpsInterface access$600(com.ds.avare.TripActivity)
com.ds.avare.TripActivity$1
com.ds.avare.TripActivity$1: TripActivity$1(com.ds.avare.TripActivity)
com.ds.avare.TripActivity$1: void statusCallback(android.location.GpsStatus)
com.ds.avare.TripActivity$1: void locationCallback(android.location.Location)
com.ds.avare.TripActivity$1: void timeoutCallback(boolean)
com.ds.avare.TripActivity$1: void enabledCallback(boolean)
com.ds.avare.TripActivity$2
com.ds.avare.TripActivity$2: TripActivity$2(com.ds.avare.TripActivity)
com.ds.avare.TripActivity$2: void onPageFinished(android.webkit.WebView,java.lang.String)
com.ds.avare.TripActivity$2: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)
com.ds.avare.TripActivity$3
com.ds.avare.TripActivity$3: TripActivity$3(com.ds.avare.TripActivity)
com.ds.avare.TripActivity$3: boolean onTouch(android.view.View,android.view.MotionEvent)
com.ds.avare.TripActivity$4
com.ds.avare.TripActivity$4: TripActivity$4(com.ds.avare.TripActivity,android.view.LayoutInflater)
com.ds.avare.TripActivity$4: void onClick(android.view.View)
com.ds.avare.TripActivity$4$1
com.ds.avare.TripActivity$4$1: TripActivity$4$1(com.ds.avare.TripActivity$4,android.widget.EditText,android.widget.EditText,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner)
com.ds.avare.TripActivity$4$1: void onClick(android.content.DialogInterface,int)
com.ds.avare.TripActivity$4$2
com.ds.avare.TripActivity$4$2: TripActivity$4$2(com.ds.avare.TripActivity$4)
com.ds.avare.TripActivity$4$2: void onClick(android.content.DialogInterface,int)
com.ds.avare.TripActivity$5
com.ds.avare.TripActivity$5: TripActivity$5(com.ds.avare.TripActivity)
com.ds.avare.TripActivity$5: void afterTextChanged(android.text.Editable)
com.ds.avare.TripActivity$5: void beforeTextChanged(java.lang.CharSequence,int,int,int)
com.ds.avare.TripActivity$5: void onTextChanged(java.lang.CharSequence,int,int,int)
com.ds.avare.TripActivity$6
com.ds.avare.TripActivity$6: TripActivity$6(com.ds.avare.TripActivity)
com.ds.avare.TripActivity$6: void onClick(android.view.View)
com.ds.avare.TripActivity$7
com.ds.avare.TripActivity$7: TripActivity$7(com.ds.avare.TripActivity)
com.ds.avare.TripActivity$7: void onClick(android.view.View)
com.ds.avare.TripActivity$8
com.ds.avare.TripActivity$8: TripActivity$8(com.ds.avare.TripActivity)
com.ds.avare.TripActivity$8: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
com.ds.avare.TripActivity$8: void onServiceDisconnected(android.content.ComponentName)
com.ds.avare.WeatherActivity
com.ds.avare.WeatherActivity: WeatherActivity()
com.ds.avare.WeatherActivity: void onBackPressed()
com.ds.avare.WeatherActivity: void onCreate(android.os.Bundle)
com.ds.avare.WeatherActivity: void onStart()
com.ds.avare.WeatherActivity: void onResume()
com.ds.avare.WeatherActivity: void onPause()
com.ds.avare.WeatherActivity: void onRestart()
com.ds.avare.WeatherActivity: void onStop()
com.ds.avare.WeatherActivity: void onDestroy()
com.ds.avare.WeatherActivity: com.ds.avare.StorageService access$000(com.ds.avare.WeatherActivity)
com.ds.avare.WeatherActivity: android.os.Handler access$100(com.ds.avare.WeatherActivity)
com.ds.avare.WeatherActivity: com.ds.avare.webinfc.WebAppInterface access$200(com.ds.avare.WeatherActivity)
com.ds.avare.WeatherActivity: android.widget.ProgressBar access$300(com.ds.avare.WeatherActivity)
com.ds.avare.WeatherActivity: com.ds.avare.StorageService access$002(com.ds.avare.WeatherActivity,com.ds.avare.StorageService)
com.ds.avare.WeatherActivity: com.ds.avare.gps.GpsInterface access$400(com.ds.avare.WeatherActivity)
com.ds.avare.WeatherActivity: android.content.Context access$500(com.ds.avare.WeatherActivity)
com.ds.avare.WeatherActivity$1
com.ds.avare.WeatherActivity$1: WeatherActivity$1(com.ds.avare.WeatherActivity)
com.ds.avare.WeatherActivity$1: void statusCallback(android.location.GpsStatus)
com.ds.avare.WeatherActivity$1: void locationCallback(android.location.Location)
com.ds.avare.WeatherActivity$1: void timeoutCallback(boolean)
com.ds.avare.WeatherActivity$1: void enabledCallback(boolean)
com.ds.avare.WeatherActivity$2
com.ds.avare.WeatherActivity$2: WeatherActivity$2(com.ds.avare.WeatherActivity)
com.ds.avare.WeatherActivity$2: java.lang.Object callback(java.lang.Object,java.lang.Object)
com.ds.avare.WeatherActivity$3
com.ds.avare.WeatherActivity$3: WeatherActivity$3(com.ds.avare.WeatherActivity)
com.ds.avare.WeatherActivity$3: void onProgressChanged(android.webkit.WebView,int)
com.ds.avare.WeatherActivity$3: boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)
com.ds.avare.WeatherActivity$3$1
com.ds.avare.WeatherActivity$3$1: WeatherActivity$3$1(com.ds.avare.WeatherActivity$3,android.webkit.JsResult)
com.ds.avare.WeatherActivity$3$1: void onClick(android.content.DialogInterface,int)
com.ds.avare.WeatherActivity$3$2
com.ds.avare.WeatherActivity$3$2: WeatherActivity$3$2(com.ds.avare.WeatherActivity$3,android.webkit.JsResult)
com.ds.avare.WeatherActivity$3$2: void onClick(android.content.DialogInterface,int)
com.ds.avare.WeatherActivity$3$3
com.ds.avare.WeatherActivity$3$3: WeatherActivity$3$3(com.ds.avare.WeatherActivity$3,android.webkit.JsResult)
com.ds.avare.WeatherActivity$3$3: void onCancel(android.content.DialogInterface)
com.ds.avare.WeatherActivity$4
com.ds.avare.WeatherActivity$4: WeatherActivity$4(com.ds.avare.WeatherActivity)
com.ds.avare.WeatherActivity$4: boolean onTouch(android.view.View,android.view.MotionEvent)
com.ds.avare.WeatherActivity$5
com.ds.avare.WeatherActivity$5: WeatherActivity$5(com.ds.avare.WeatherActivity)
com.ds.avare.WeatherActivity$5: boolean onLongClick(android.view.View)
com.ds.avare.WeatherActivity$6
com.ds.avare.WeatherActivity$6: WeatherActivity$6(com.ds.avare.WeatherActivity)
com.ds.avare.WeatherActivity$6: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
com.ds.avare.WeatherActivity$6: void onServiceDisconnected(android.content.ComponentName)
com.ds.avare.WeatherActivity$7
com.ds.avare.WeatherActivity$7: WeatherActivity$7(com.ds.avare.WeatherActivity)
com.ds.avare.WeatherActivity$7: void handleMessage(android.os.Message)
com.ds.avare.WeatherActivity$7$1
com.ds.avare.WeatherActivity$7$1: WeatherActivity$7$1(com.ds.avare.WeatherActivity$7)
com.ds.avare.WeatherActivity$7$1: void onClick(android.content.DialogInterface,int)
com.ds.avare.WebActivity
com.ds.avare.WebActivity: WebActivity()
com.ds.avare.WebActivity: void onCreate(android.os.Bundle)
com.ds.avare.WebActivity: void onResume()
com.ds.avare.WebActivity: void onPause()
com.ds.avare.WebActivity: android.webkit.WebView access$000(com.ds.avare.WebActivity)
com.ds.avare.WebActivity: android.widget.ProgressBar access$100(com.ds.avare.WebActivity)
com.ds.avare.WebActivity: com.ds.avare.StorageService access$202(com.ds.avare.WebActivity,com.ds.avare.StorageService)
com.ds.avare.WebActivity: com.ds.avare.gps.GpsInterface access$300(com.ds.avare.WebActivity)
com.ds.avare.WebActivity: com.ds.avare.StorageService access$200(com.ds.avare.WebActivity)
com.ds.avare.WebActivity$1
com.ds.avare.WebActivity$1: WebActivity$1(com.ds.avare.WebActivity)
com.ds.avare.WebActivity$1: void statusCallback(android.location.GpsStatus)
com.ds.avare.WebActivity$1: void locationCallback(android.location.Location)
com.ds.avare.WebActivity$1: void timeoutCallback(boolean)
com.ds.avare.WebActivity$1: void enabledCallback(boolean)
com.ds.avare.WebActivity$2
com.ds.avare.WebActivity$2: WebActivity$2(com.ds.avare.WebActivity)
com.ds.avare.WebActivity$2: boolean onTouch(android.view.View,android.view.MotionEvent)
com.ds.avare.WebActivity$3
com.ds.avare.WebActivity$3: WebActivity$3(com.ds.avare.WebActivity)
com.ds.avare.WebActivity$3: boolean onLongClick(android.view.View)
com.ds.avare.WebActivity$4
com.ds.avare.WebActivity$4: WebActivity$4(com.ds.avare.WebActivity)
com.ds.avare.WebActivity$4: void afterTextChanged(android.text.Editable)
com.ds.avare.WebActivity$4: void beforeTextChanged(java.lang.CharSequence,int,int,int)
com.ds.avare.WebActivity$4: void onTextChanged(java.lang.CharSequence,int,int,int)
com.ds.avare.WebActivity$5
com.ds.avare.WebActivity$5: WebActivity$5(com.ds.avare.WebActivity)
com.ds.avare.WebActivity$5: void onClick(android.view.View)
com.ds.avare.WebActivity$6
com.ds.avare.WebActivity$6: WebActivity$6(com.ds.avare.WebActivity)
com.ds.avare.WebActivity$6: void onClick(android.view.View)
com.ds.avare.WebActivity$7
com.ds.avare.WebActivity$7: WebActivity$7(com.ds.avare.WebActivity)
com.ds.avare.WebActivity$7: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
com.ds.avare.WebActivity$7: void onServiceDisconnected(android.content.ComponentName)
com.ds.avare.adapters.ChartAdapter
com.ds.avare.adapters.ChartAdapter: ChartAdapter(android.content.Context)
com.ds.avare.adapters.ChartAdapter: void refreshIt()
com.ds.avare.adapters.ChartAdapter: void refresh()
com.ds.avare.adapters.ChartAdapter: void updateVersion(java.lang.String,java.lang.String)
com.ds.avare.adapters.ChartAdapter: java.lang.String getDatabaseName()
com.ds.avare.adapters.ChartAdapter: void setChecked(java.lang.String)
com.ds.avare.adapters.ChartAdapter: void unsetChecked(java.lang.String)
com.ds.avare.adapters.ChartAdapter: void setDelete(java.lang.String)
com.ds.avare.adapters.ChartAdapter: void toggleChecked(int,int)
com.ds.avare.adapters.ChartAdapter: java.lang.String getChecked()
com.ds.avare.adapters.ChartAdapter: java.lang.String getDeleteChecked()
com.ds.avare.adapters.ChartAdapter: void checkDone()
com.ds.avare.adapters.ChartAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)
com.ds.avare.adapters.ChartAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)
com.ds.avare.adapters.ChartAdapter: java.lang.Object getChild(int,int)
com.ds.avare.adapters.ChartAdapter: long getChildId(int,int)
com.ds.avare.adapters.ChartAdapter: int getChildrenCount(int)
com.ds.avare.adapters.ChartAdapter: java.lang.Object getGroup(int)
com.ds.avare.adapters.ChartAdapter: int getGroupCount()
com.ds.avare.adapters.ChartAdapter: long getGroupId(int)
com.ds.avare.adapters.ChartAdapter: boolean hasStableIds()
com.ds.avare.adapters.ChartAdapter: boolean isChildSelectable(int,int)
com.ds.avare.adapters.ChartAdapter: java.lang.String[][] access$100(com.ds.avare.adapters.ChartAdapter)
com.ds.avare.adapters.ChartAdapter: com.ds.avare.storage.Preferences access$200(com.ds.avare.adapters.ChartAdapter)
com.ds.avare.adapters.ChartAdapter: java.lang.String[][] access$300(com.ds.avare.adapters.ChartAdapter)
com.ds.avare.adapters.ChartAdapter: java.lang.String[][] access$102(com.ds.avare.adapters.ChartAdapter,java.lang.String[][])
com.ds.avare.adapters.ChartAdapter$1
com.ds.avare.adapters.ChartAdapter$ViewTask
com.ds.avare.adapters.ChartAdapter$ViewTask: ChartAdapter$ViewTask(com.ds.avare.adapters.ChartAdapter)
com.ds.avare.adapters.ChartAdapter$ViewTask: java.lang.Boolean doInBackground(java.lang.Void[])
com.ds.avare.adapters.ChartAdapter$ViewTask: void onPostExecute(java.lang.Boolean)
com.ds.avare.adapters.ChartAdapter$ViewTask: void onPostExecute(java.lang.Object)
com.ds.avare.adapters.ChartAdapter$ViewTask: java.lang.Object doInBackground(java.lang.Object[])
com.ds.avare.adapters.ChartAdapter$ViewTask: ChartAdapter$ViewTask(com.ds.avare.adapters.ChartAdapter,com.ds.avare.adapters.ChartAdapter$1)
com.ds.avare.adapters.NearestAdapter
com.ds.avare.adapters.NearestAdapter: NearestAdapter(android.content.Context,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],boolean[])
com.ds.avare.adapters.NearestAdapter: void updateList(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],boolean[])
com.ds.avare.adapters.NearestAdapter: int getClosestWith100LL()
com.ds.avare.adapters.NearestAdapter: int getClosestRunwayWithMinLength(int)
com.ds.avare.adapters.NearestAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.ds.avare.adapters.PopoutAdapter
com.ds.avare.adapters.PopoutAdapter: PopoutAdapter(android.content.Context,com.ds.avare.touch.LongTouchDestination)
com.ds.avare.adapters.PopoutAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)
com.ds.avare.adapters.PopoutAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)
com.ds.avare.adapters.PopoutAdapter: java.lang.Object getChild(int,int)
com.ds.avare.adapters.PopoutAdapter: long getChildId(int,int)
com.ds.avare.adapters.PopoutAdapter: int getChildrenCount(int)
com.ds.avare.adapters.PopoutAdapter: java.lang.Object getGroup(int)
com.ds.avare.adapters.PopoutAdapter: int getGroupCount()
com.ds.avare.adapters.PopoutAdapter: long getGroupId(int)
com.ds.avare.adapters.PopoutAdapter: boolean hasStableIds()
com.ds.avare.adapters.PopoutAdapter: boolean isChildSelectable(int,int)
com.ds.avare.adapters.PopoutAdapter: java.lang.String access$000(com.ds.avare.adapters.PopoutAdapter)
com.ds.avare.adapters.PopoutAdapter$1
com.ds.avare.adapters.PopoutAdapter$1: PopoutAdapter$1(com.ds.avare.adapters.PopoutAdapter,android.view.ViewGroup)
com.ds.avare.adapters.PopoutAdapter$1: void onClick(android.view.View)
com.ds.avare.adapters.PopoutAdapter$2
com.ds.avare.adapters.PopoutAdapter$2: PopoutAdapter$2(com.ds.avare.adapters.PopoutAdapter,android.view.ViewGroup)
com.ds.avare.adapters.PopoutAdapter$2: void onClick(android.view.View)
com.ds.avare.adapters.SearchAdapter
com.ds.avare.adapters.SearchAdapter: SearchAdapter(android.content.Context,java.lang.String[])
com.ds.avare.adapters.SearchAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.ds.avare.adapters.TypeValueAdapter
com.ds.avare.adapters.TypeValueAdapter: TypeValueAdapter(android.content.Context,java.lang.String[],java.lang.String[])
com.ds.avare.adapters.TypeValueAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.ds.avare.adsb.NexradBitmap
com.ds.avare.adsb.NexradBitmap: void convertBlockNumberToLatLon(int,double[])
com.ds.avare.adsb.NexradBitmap: NexradBitmap(long,int[],int,boolean,int,int)
com.ds.avare.adsb.NexradBitmap: void discard()
com.ds.avare.adsb.NexradBitmap: double getLatTopLeft()
com.ds.avare.adsb.NexradBitmap: double getLonTopLeft()
com.ds.avare.adsb.NexradBitmap: double getScaleX()
com.ds.avare.adsb.NexradBitmap: double getScaleY()
com.ds.avare.adsb.NexradBitmap: int getBlock()
com.ds.avare.adsb.NexradBitmap: com.ds.avare.utils.BitmapHolder getBitmap()
com.ds.avare.adsb.NexradImage
com.ds.avare.adsb.NexradImage: NexradImage()
com.ds.avare.adsb.NexradImage: void putImg(long,int,int[],boolean,int[],int,int)
com.ds.avare.adsb.NexradImage: android.util.SparseArray getImages()
com.ds.avare.adsb.NexradImage: boolean isOld()
com.ds.avare.adsb.NexradImage: java.lang.String getDate()
com.ds.avare.adsb.NexradImageConus
com.ds.avare.adsb.NexradImageConus: NexradImageConus()
com.ds.avare.adsb.NexradImageConus: void putImg(long,int,int[],boolean,int[],int,int)
com.ds.avare.adsb.NexradImageConus: android.util.SparseArray getImages()
com.ds.avare.adsb.NexradImageConus: boolean isOld()
com.ds.avare.adsb.NexradImageConus: java.lang.String getDate()
com.ds.avare.adsb.Traffic
com.ds.avare.adsb.Traffic: Traffic(java.lang.String,int,float,float,int,float,int,long)
com.ds.avare.adsb.Traffic: boolean isOld()
com.ds.avare.adsb.Traffic: int getColorFromAltitude(double,double)
com.ds.avare.adsb.TrafficCache
com.ds.avare.adsb.TrafficCache: TrafficCache()
com.ds.avare.adsb.TrafficCache: void putTraffic(java.lang.String,int,float,float,int,float,int,long)
com.ds.avare.adsb.TrafficCache: android.util.SparseArray getTraffic()
com.ds.avare.animation.AnimateButton
com.ds.avare.animation.AnimateButton: AnimateButton(android.content.Context,android.view.View,int,android.view.View[])
com.ds.avare.animation.AnimateButton: void animateBack()
com.ds.avare.animation.AnimateButton: void stopAndHide()
com.ds.avare.animation.AnimateButton: void animate(boolean)
com.ds.avare.animation.AnimateButton: void animate()
com.ds.avare.animation.AnimateButton: android.view.View access$000(com.ds.avare.animation.AnimateButton)
com.ds.avare.animation.AnimateButton: android.view.View[] access$100(com.ds.avare.animation.AnimateButton)
com.ds.avare.animation.AnimateButton: int[] access$200(com.ds.avare.animation.AnimateButton)
com.ds.avare.animation.AnimateButton$1
com.ds.avare.animation.AnimateButton$1: AnimateButton$1(com.ds.avare.animation.AnimateButton)
com.ds.avare.animation.AnimateButton$1: void onAnimationEnd(android.view.animation.Animation)
com.ds.avare.animation.AnimateButton$1: void onAnimationRepeat(android.view.animation.Animation)
com.ds.avare.animation.AnimateButton$1: void onAnimationStart(android.view.animation.Animation)
com.ds.avare.animation.AnimateButton$2
com.ds.avare.animation.AnimateButton$2: AnimateButton$2(com.ds.avare.animation.AnimateButton,boolean)
com.ds.avare.animation.AnimateButton$2: void onAnimationEnd(android.view.animation.Animation)
com.ds.avare.animation.AnimateButton$2: void onAnimationRepeat(android.view.animation.Animation)
com.ds.avare.animation.AnimateButton$2: void onAnimationStart(android.view.animation.Animation)
com.ds.avare.animation.AnimateButton$3
com.ds.avare.animation.AnimateButton$3: AnimateButton$3(com.ds.avare.animation.AnimateButton)
com.ds.avare.animation.AnimateButton$3: void onAnimationEnd(android.view.animation.Animation)
com.ds.avare.animation.AnimateButton$3: void onAnimationRepeat(android.view.animation.Animation)
com.ds.avare.animation.AnimateButton$3: void onAnimationStart(android.view.animation.Animation)
com.ds.avare.animation.TwoButton
com.ds.avare.animation.TwoButton: void setup(android.content.Context,android.util.AttributeSet)
com.ds.avare.animation.TwoButton: TwoButton(android.content.Context,android.util.AttributeSet,int)
com.ds.avare.animation.TwoButton: TwoButton(android.content.Context,android.util.AttributeSet)
com.ds.avare.animation.TwoButton: TwoButton(android.content.Context)
com.ds.avare.animation.TwoButton: void setChecked(boolean)
com.ds.avare.animation.TwoButton: boolean isChecked()
com.ds.avare.animation.TwoButton: void onClick(android.view.View)
com.ds.avare.animation.TwoButton: void setTwoClickListener(com.ds.avare.animation.TwoButton$TwoClickListener)
com.ds.avare.animation.TwoButton$TwoClickListener
com.ds.avare.animation.TwoButton$TwoClickListener: void onClick(android.view.View)
com.ds.avare.cap.CapChartFetcher
com.ds.avare.cap.CapChartFetcher: CapChartFetcher()
com.ds.avare.cap.CapChartFetcher: com.ds.avare.cap.CapChartFetcher getInstance()
com.ds.avare.cap.CapChartFetcher: java.util.LinkedList getCharts()
com.ds.avare.cap.Chart
com.ds.avare.cap.Chart: Chart(java.lang.String,com.ds.avare.position.Coordinate,com.ds.avare.position.Coordinate)
com.ds.avare.cap.Chart: java.lang.String getIdentifier()
com.ds.avare.cap.Chart: android.graphics.Rect getRect()
com.ds.avare.cap.Chart: int makeCapCoordinate(double)
com.ds.avare.cap.DrawCapLines
com.ds.avare.cap.DrawCapLines: DrawCapLines(com.ds.avare.StorageService,android.content.Context,float)
com.ds.avare.cap.DrawCapLines: void draw(android.graphics.Canvas,com.ds.avare.position.Origin,com.ds.avare.position.Scale)
com.ds.avare.cap.DrawCapLines: double snapToGrid(double)
com.ds.avare.cap.DrawCapLines: java.lang.String getGridName(double,double)
com.ds.avare.cap.DrawCapLines: java.lang.String getName(com.ds.avare.cap.Chart,android.graphics.Rect)
com.ds.avare.externalFlightPlan.ExternalFlightPlan
com.ds.avare.externalFlightPlan.ExternalFlightPlan: java.util.List getWaypoints()
com.ds.avare.externalFlightPlan.ExternalFlightPlan: java.lang.String getName()
com.ds.avare.externalFlightPlan.ExternalFlightPlan: java.lang.String getType()
com.ds.avare.externalFlightPlan.ExternalFlightPlan: java.lang.String getCmt()
com.ds.avare.externalFlightPlan.ExternalFlightPlan: java.lang.String getFileName()
com.ds.avare.externalFlightPlan.ExternalFlightPlan: void setFileName(java.lang.String)
com.ds.avare.externalFlightPlan.ExternalFlightPlan: ExternalFlightPlan(java.lang.String,java.lang.String,java.lang.String,java.util.List)
com.ds.avare.externalFlightPlan.ExternalFlightPlan: java.lang.String toString()
com.ds.avare.externalFlightPlan.ExternalFlightPlan: java.lang.String toJSONString()
com.ds.avare.externalFlightPlan.ExternalFlightPlan: void setActive(boolean)
com.ds.avare.externalFlightPlan.ExternalFlightPlan: void load(com.ds.avare.StorageService)
com.ds.avare.externalFlightPlan.ExternalFlightPlan: void unload(com.ds.avare.StorageService)
com.ds.avare.externalFlightPlan.ExternalPlanMgr
com.ds.avare.externalFlightPlan.ExternalPlanMgr: ExternalPlanMgr(com.ds.avare.StorageService,android.content.Context)
com.ds.avare.externalFlightPlan.ExternalPlanMgr: java.lang.String getDir()
com.ds.avare.externalFlightPlan.ExternalPlanMgr: java.lang.String[] getPlans()
com.ds.avare.externalFlightPlan.ExternalPlanMgr: java.util.ArrayList getPlanFileNames(java.lang.String)
com.ds.avare.externalFlightPlan.ExternalPlanMgr: java.util.ArrayList getPlanNames(java.lang.String)
com.ds.avare.externalFlightPlan.ExternalPlanMgr: com.ds.avare.externalFlightPlan.ExternalFlightPlan get(java.lang.String)
com.ds.avare.externalFlightPlan.ExternalPlanMgr: boolean isExternal(java.lang.String)
com.ds.avare.externalFlightPlan.ExternalPlanMgr: boolean delete(java.lang.String)
com.ds.avare.externalFlightPlan.ExternalPlanMgr: void clear()
com.ds.avare.externalFlightPlan.ExternalPlanMgr: void forceReload()
com.ds.avare.externalFlightPlan.ExternalPlanMgr: void populate(java.lang.String)
com.ds.avare.externalFlightPlan.GpxPlanParser
com.ds.avare.externalFlightPlan.GpxPlanParser: GpxPlanParser()
com.ds.avare.externalFlightPlan.GpxPlanParser: java.lang.String getType()
com.ds.avare.externalFlightPlan.GpxPlanParser: com.ds.avare.externalFlightPlan.ExternalFlightPlan parse(java.lang.String,java.io.FileInputStream)
com.ds.avare.externalFlightPlan.GpxPlanParser: void generate(java.lang.String,java.io.FileOutputStream,com.ds.avare.externalFlightPlan.ExternalFlightPlan)
com.ds.avare.externalFlightPlan.GpxPlanParser: com.ds.avare.externalFlightPlan.ExternalFlightPlan readGPX(org.xmlpull.v1.XmlPullParser)
com.ds.avare.externalFlightPlan.GpxPlanParser: com.ds.avare.externalFlightPlan.ExternalFlightPlan readRTE(org.xmlpull.v1.XmlPullParser)
com.ds.avare.externalFlightPlan.GpxPlanParser: com.ds.avare.userDefinedWaypoints.Waypoint readRTEPT(org.xmlpull.v1.XmlPullParser)
com.ds.avare.externalFlightPlan.GpxPlanParser: java.lang.String readNAME(org.xmlpull.v1.XmlPullParser)
com.ds.avare.externalFlightPlan.GpxPlanParser: java.lang.String readCMT(org.xmlpull.v1.XmlPullParser)
com.ds.avare.externalFlightPlan.GpxPlanParser: java.lang.String readText(org.xmlpull.v1.XmlPullParser)
com.ds.avare.externalFlightPlan.GpxPlanParser: void skip(org.xmlpull.v1.XmlPullParser)
com.ds.avare.externalFlightPlan.GpxPlanParser: void <clinit>()
com.ds.avare.externalFlightPlan.PlanFactory
com.ds.avare.externalFlightPlan.PlanFactory: PlanFactory()
com.ds.avare.externalFlightPlan.PlanFactory: com.ds.avare.externalFlightPlan.ExternalFlightPlan parse(java.lang.String)
com.ds.avare.externalFlightPlan.PlanParser
com.ds.avare.externalFlightPlan.PlanParser: PlanParser()
com.ds.avare.externalFlightPlan.PlanParser: java.lang.String getType()
com.ds.avare.externalFlightPlan.PlanParser: com.ds.avare.externalFlightPlan.ExternalFlightPlan parse(java.lang.String,java.io.FileInputStream)
com.ds.avare.externalFlightPlan.PlanParser: void generate(java.lang.String,java.io.FileOutputStream,com.ds.avare.externalFlightPlan.ExternalFlightPlan)
com.ds.avare.externalFlightPlan.SkvPlanParser
com.ds.avare.externalFlightPlan.SkvPlanParser: SkvPlanParser()
com.ds.avare.externalFlightPlan.SkvPlanParser: java.lang.String getType()
com.ds.avare.externalFlightPlan.SkvPlanParser: com.ds.avare.externalFlightPlan.ExternalFlightPlan parse(java.lang.String,java.io.FileInputStream)
com.ds.avare.externalFlightPlan.SkvPlanParser: void generate(java.lang.String,java.io.FileOutputStream,com.ds.avare.externalFlightPlan.ExternalFlightPlan)
com.ds.avare.flight.Checklist
com.ds.avare.flight.Checklist: Checklist(java.lang.String)
com.ds.avare.flight.Checklist: Checklist(java.lang.String,java.lang.String)
com.ds.avare.flight.Checklist: Checklist(org.json.JSONObject)
com.ds.avare.flight.Checklist: void changeName(java.lang.String)
com.ds.avare.flight.Checklist: void addStep(java.lang.String)
com.ds.avare.flight.Checklist: java.lang.String getSteps()
com.ds.avare.flight.Checklist: void removeStep(int)
com.ds.avare.flight.Checklist: void insertStep(java.lang.String,int)
com.ds.avare.flight.Checklist: void moveStep(int,int)
com.ds.avare.flight.Checklist: java.lang.String[] getStepsArray()
com.ds.avare.flight.Checklist: org.json.JSONObject getJSON()
com.ds.avare.flight.Checklist: java.lang.String getName()
com.ds.avare.flight.Checklist: java.lang.String putCheckListsToStorageFormat(java.util.LinkedList)
com.ds.avare.flight.Checklist: java.util.LinkedList getCheckListsFromStorageFromat(java.lang.String)
com.ds.avare.flight.Checklist: void moveBack()
com.ds.avare.flight.Checklist: void moveForward()
com.ds.avare.flight.Checklist: void moveTo(int)
com.ds.avare.flight.Checklist: void moveItemUp()
com.ds.avare.flight.Checklist: void moveItemDown()
com.ds.avare.flight.Checklist: void deleteItem()
com.ds.avare.flight.Checklist: boolean isSelected(int)
com.ds.avare.flight.Checklist: void <clinit>()
com.ds.avare.flight.FlightStatus
com.ds.avare.flight.FlightStatus: FlightStatus(com.ds.avare.gps.GpsParams)
com.ds.avare.flight.FlightStatus: void registerListener(com.ds.avare.flight.FlightStatusInterface)
com.ds.avare.flight.FlightStatus: void unregisterListener(com.ds.avare.flight.FlightStatusInterface)
com.ds.avare.flight.FlightStatus: void updateLocation(com.ds.avare.gps.GpsParams)
com.ds.avare.flight.FlightStatusInterface
com.ds.avare.flight.FlightStatusInterface: void rollout()
com.ds.avare.flightLog.KMLRecorder
com.ds.avare.flightLog.KMLRecorder: KMLRecorder()
com.ds.avare.flightLog.KMLRecorder: boolean isRecording()
com.ds.avare.flightLog.KMLRecorder: java.net.URI stop()
com.ds.avare.flightLog.KMLRecorder: void start()
com.ds.avare.flightLog.KMLRecorder: void start(com.ds.avare.flightLog.KMLRecorder$Config)
com.ds.avare.flightLog.KMLRecorder: void clearPositionHistory()
com.ds.avare.flightLog.KMLRecorder: void setGpsParams(com.ds.avare.gps.GpsParams)
com.ds.avare.flightLog.KMLRecorder: com.ds.avare.shapes.Shape getShape()
com.ds.avare.flightLog.KMLRecorder$Config
com.ds.avare.flightLog.KMLRecorder$Config: KMLRecorder$Config(com.ds.avare.flightLog.KMLRecorder,boolean,long,boolean,java.lang.String,long)
com.ds.avare.flightLog.KMLRecorder$Config: boolean access$000(com.ds.avare.flightLog.KMLRecorder$Config)
com.ds.avare.flightLog.KMLRecorder$Config: java.lang.String access$100(com.ds.avare.flightLog.KMLRecorder$Config)
com.ds.avare.flightLog.KMLRecorder$Config: boolean access$200(com.ds.avare.flightLog.KMLRecorder$Config)
com.ds.avare.flightLog.KMLRecorder$Config: long access$300(com.ds.avare.flightLog.KMLRecorder$Config)
com.ds.avare.flightLog.KMLRecorder$Config: long access$400(com.ds.avare.flightLog.KMLRecorder$Config)
com.ds.avare.gps.Gps
com.ds.avare.gps.Gps: Gps(android.content.Context,com.ds.avare.gps.GpsInterface)
com.ds.avare.gps.Gps: boolean isGpsAvailable(android.content.Context)
com.ds.avare.gps.Gps: android.location.Location getLastLocation(android.content.Context)
com.ds.avare.gps.Gps: void start()
com.ds.avare.gps.Gps: void stop()
com.ds.avare.gps.Gps: boolean isGpsDisabled(android.content.Context,com.ds.avare.storage.Preferences)
com.ds.avare.gps.Gps: void onGpsStatusChanged(int)
com.ds.avare.gps.Gps: void onLocationChanged(android.location.Location)
com.ds.avare.gps.Gps: void onLocationChanged(android.location.Location,java.lang.String)
com.ds.avare.gps.Gps: void onProviderDisabled(java.lang.String)
com.ds.avare.gps.Gps: void onProviderEnabled(java.lang.String)
com.ds.avare.gps.Gps: void onStatusChanged(java.lang.String,int,android.os.Bundle)
com.ds.avare.gps.Gps: void updateTimeout()
com.ds.avare.gps.Gps: void onNmeaReceived(long,java.lang.String)
com.ds.avare.gps.Gps: long access$100(com.ds.avare.gps.Gps)
com.ds.avare.gps.Gps: com.ds.avare.gps.GpsInterface access$200(com.ds.avare.gps.Gps)
com.ds.avare.gps.Gps$1
com.ds.avare.gps.Gps$UpdateGps
com.ds.avare.gps.Gps$UpdateGps: Gps$UpdateGps(com.ds.avare.gps.Gps)
com.ds.avare.gps.Gps$UpdateGps: void run()
com.ds.avare.gps.Gps$UpdateGps: Gps$UpdateGps(com.ds.avare.gps.Gps,com.ds.avare.gps.Gps$1)
com.ds.avare.gps.GpsInterface
com.ds.avare.gps.GpsInterface: void statusCallback(android.location.GpsStatus)
com.ds.avare.gps.GpsInterface: void locationCallback(android.location.Location)
com.ds.avare.gps.GpsInterface: void timeoutCallback(boolean)
com.ds.avare.gps.GpsInterface: void enabledCallback(boolean)
com.ds.avare.gps.GpsParams
com.ds.avare.gps.GpsParams: GpsParams()
com.ds.avare.gps.GpsParams: GpsParams(android.location.Location)
com.ds.avare.gps.GpsParams: com.ds.avare.gps.GpsParams copy(com.ds.avare.gps.GpsParams)
com.ds.avare.gps.GpsParams: double speedConvert(double)
com.ds.avare.gps.GpsParams: double getSpeed()
com.ds.avare.gps.GpsParams: double getLongitude()
com.ds.avare.gps.GpsParams: double getLatitude()
com.ds.avare.gps.GpsParams: double getAltitude()
com.ds.avare.gps.GpsParams: double getBearing()
com.ds.avare.gps.GpsParams: com.ds.avare.position.Scale getScale()
com.ds.avare.gps.GpsParams: double getDeclinition()
com.ds.avare.gps.GpsParams: long getTime()
com.ds.avare.gps.GpsParams: java.lang.String getLatStringDMS()
com.ds.avare.gps.GpsParams: java.lang.String getLonStringDMS()
com.ds.avare.gps.GpsParams: java.lang.String getDMS(double)
com.ds.avare.instruments.CDI
com.ds.avare.instruments.CDI: double getDeviation()
com.ds.avare.instruments.CDI: boolean isLeft()
com.ds.avare.instruments.CDI: CDI()
com.ds.avare.instruments.CDI: void setSize(android.graphics.Paint,int)
com.ds.avare.instruments.CDI: void drawCDI(android.graphics.Canvas,int,int)
com.ds.avare.instruments.CDI: void drawIndicator(android.graphics.Canvas,int)
com.ds.avare.instruments.CDI: void calcDeviation(com.ds.avare.place.Destination,com.ds.avare.place.Plan)
com.ds.avare.instruments.DistanceRings
com.ds.avare.instruments.DistanceRings: DistanceRings(com.ds.avare.StorageService,android.content.Context,float)
com.ds.avare.instruments.DistanceRings: void draw(android.graphics.Canvas,com.ds.avare.position.Origin,com.ds.avare.position.Scale,com.ds.avare.position.Movement,boolean,com.ds.avare.gps.GpsParams)
com.ds.avare.instruments.DistanceRings: void calculateRings(android.content.Context,com.ds.avare.position.Scale,com.ds.avare.position.Movement,double)
com.ds.avare.instruments.DistanceRings: void <clinit>()
com.ds.avare.instruments.EdgeDistanceTape
com.ds.avare.instruments.EdgeDistanceTape: EdgeDistanceTape()
com.ds.avare.instruments.EdgeDistanceTape: void setPaint(android.graphics.Paint)
com.ds.avare.instruments.EdgeDistanceTape: boolean inRangeX(float,float,float)
com.ds.avare.instruments.EdgeDistanceTape: boolean inRangeY(float,float,float)
com.ds.avare.instruments.EdgeDistanceTape: void draw(android.graphics.Canvas,com.ds.avare.position.Scale,float,int,int,int,int,int)
com.ds.avare.instruments.FlightTimer
com.ds.avare.instruments.FlightTimer: FlightTimer()
com.ds.avare.instruments.FlightTimer: void setSpeed(double)
com.ds.avare.instruments.FlightTimer: void setMinFlightSpeed(double)
com.ds.avare.instruments.FlightTimer: double access$100(com.ds.avare.instruments.FlightTimer)
com.ds.avare.instruments.FlightTimer: double access$200(com.ds.avare.instruments.FlightTimer)
com.ds.avare.instruments.FlightTimer$1
com.ds.avare.instruments.FlightTimer$FlightTimerTask
com.ds.avare.instruments.FlightTimer$FlightTimerTask: FlightTimer$FlightTimerTask(com.ds.avare.instruments.FlightTimer)
com.ds.avare.instruments.FlightTimer$FlightTimerTask: void run()
com.ds.avare.instruments.FlightTimer$FlightTimerTask: FlightTimer$FlightTimerTask(com.ds.avare.instruments.FlightTimer,com.ds.avare.instruments.FlightTimer$1)
com.ds.avare.instruments.FuelTimer
com.ds.avare.instruments.FuelTimer: FuelTimer(int)
com.ds.avare.instruments.FuelTimer: void addObserver(java.util.Observer)
com.ds.avare.instruments.FuelTimer: void removeObserver(java.util.Observer)
com.ds.avare.instruments.FuelTimer: void notifyObservers(int)
com.ds.avare.instruments.FuelTimer: void start()
com.ds.avare.instruments.FuelTimer: void stop()
com.ds.avare.instruments.FuelTimer: java.lang.String getDisplay()
com.ds.avare.instruments.FuelTimer: void reset()
com.ds.avare.instruments.FuelTimer: void toggleState()
com.ds.avare.instruments.FuelTimer: int access$100(com.ds.avare.instruments.FuelTimer)
com.ds.avare.instruments.FuelTimer: int access$110(com.ds.avare.instruments.FuelTimer)
com.ds.avare.instruments.FuelTimer$1
com.ds.avare.instruments.FuelTimer$FuelTimerTask
com.ds.avare.instruments.FuelTimer$FuelTimerTask: FuelTimer$FuelTimerTask(com.ds.avare.instruments.FuelTimer)
com.ds.avare.instruments.FuelTimer$FuelTimerTask: void run()
com.ds.avare.instruments.FuelTimer$FuelTimerTask: FuelTimer$FuelTimerTask(com.ds.avare.instruments.FuelTimer,com.ds.avare.instruments.FuelTimer$1)
com.ds.avare.instruments.HobbsMeter
com.ds.avare.instruments.HobbsMeter: void setup()
com.ds.avare.instruments.HobbsMeter: HobbsMeter()
com.ds.avare.instruments.HobbsMeter: boolean isRunning()
com.ds.avare.instruments.HobbsMeter: java.lang.String getValue()
com.ds.avare.instruments.HobbsMeter: void reset()
com.ds.avare.instruments.HobbsMeter: void start()
com.ds.avare.instruments.HobbsMeter: void stop()
com.ds.avare.instruments.HobbsMeter$1
com.ds.avare.instruments.HobbsMeter$HobbsTask
com.ds.avare.instruments.HobbsMeter$HobbsTask: HobbsMeter$HobbsTask(com.ds.avare.instruments.HobbsMeter)
com.ds.avare.instruments.HobbsMeter$HobbsTask: void run()
com.ds.avare.instruments.HobbsMeter$HobbsTask: HobbsMeter$HobbsTask(com.ds.avare.instruments.HobbsMeter,com.ds.avare.instruments.HobbsMeter$1)
com.ds.avare.instruments.Odometer
com.ds.avare.instruments.Odometer: Odometer()
com.ds.avare.instruments.Odometer: void setPref(com.ds.avare.storage.Preferences)
com.ds.avare.instruments.Odometer: double getValue()
com.ds.avare.instruments.Odometer: void reset()
com.ds.avare.instruments.Odometer: void updateValue(com.ds.avare.gps.GpsParams)
com.ds.avare.instruments.VNAV
com.ds.avare.instruments.VNAV: VNAV()
com.ds.avare.instruments.VNAV: void setSize(android.graphics.Paint,int)
com.ds.avare.instruments.VNAV: void drawVNAV(android.graphics.Canvas,float,float,com.ds.avare.place.Destination)
com.ds.avare.instruments.VNAV: void drawIndicator(android.graphics.Canvas,float)
com.ds.avare.instruments.VNAV: void calcGlideSlope(com.ds.avare.gps.GpsParams,com.ds.avare.place.Destination)
com.ds.avare.instruments.VSI
com.ds.avare.instruments.VSI: VSI()
com.ds.avare.instruments.VSI: void updateValue(com.ds.avare.gps.GpsParams)
com.ds.avare.instruments.VSI: double getValue()
com.ds.avare.message.Helper
com.ds.avare.message.Helper: Helper()
com.ds.avare.message.Helper: void showAlert(android.content.Context,java.lang.String,java.lang.String)
com.ds.avare.message.Helper: boolean isNetworkAvailable(android.content.Context)
com.ds.avare.message.Helper$1
com.ds.avare.message.Helper$1: Helper$1()
com.ds.avare.message.Helper$1: void onClick(android.content.DialogInterface,int)
com.ds.avare.message.Logger
com.ds.avare.message.Logger: Logger()
com.ds.avare.message.Logger: void Logit(java.lang.String)
com.ds.avare.message.Logger: void clear()
com.ds.avare.message.Logger: void setTextView(android.widget.TextView)
com.ds.avare.message.Logger: android.widget.TextView access$000()
com.ds.avare.message.Logger: void <clinit>()
com.ds.avare.message.Logger$1
com.ds.avare.message.Logger$1: Logger$1()
com.ds.avare.message.Logger$1: void handleMessage(android.os.Message)
com.ds.avare.message.NetworkHelper
com.ds.avare.message.NetworkHelper: NetworkHelper()
com.ds.avare.message.NetworkHelper: java.lang.String getServer()
com.ds.avare.message.NetworkHelper: java.lang.String post(java.lang.String,java.util.Map)
com.ds.avare.network.Delete
com.ds.avare.network.Delete: Delete(android.os.Handler)
com.ds.avare.network.Delete: void cancel()
com.ds.avare.network.Delete: void start(java.lang.String,java.lang.String,com.ds.avare.storage.DataSource)
com.ds.avare.network.Delete: android.os.Handler access$100(com.ds.avare.network.Delete)
com.ds.avare.network.Delete: boolean access$200(com.ds.avare.network.Delete)
com.ds.avare.network.Delete$1
com.ds.avare.network.Delete$DeleteTask
com.ds.avare.network.Delete$DeleteTask: Delete$DeleteTask(com.ds.avare.network.Delete)
com.ds.avare.network.Delete$DeleteTask: void run()
com.ds.avare.network.Delete$DeleteTask: Delete$DeleteTask(com.ds.avare.network.Delete,com.ds.avare.network.Delete$1)
com.ds.avare.network.Download
com.ds.avare.network.Download: Download(java.lang.String,android.os.Handler,int)
com.ds.avare.network.Download: java.lang.String getVersion()
com.ds.avare.network.Download: void cancel()
com.ds.avare.network.Download: void start(java.lang.String,java.lang.String)
com.ds.avare.network.Download: android.os.Handler access$100(com.ds.avare.network.Download)
com.ds.avare.network.Download: java.lang.String access$200(com.ds.avare.network.Download)
com.ds.avare.network.Download: java.lang.String access$302(com.ds.avare.network.Download,java.lang.String)
com.ds.avare.network.Download: java.lang.String access$400(com.ds.avare.network.Download)
com.ds.avare.network.Download: java.lang.String access$300(com.ds.avare.network.Download)
com.ds.avare.network.Download: int access$500(com.ds.avare.network.Download)
com.ds.avare.network.Download: java.lang.String access$202(com.ds.avare.network.Download,java.lang.String)
com.ds.avare.network.Download: boolean access$600(com.ds.avare.network.Download)
com.ds.avare.network.Download$1
com.ds.avare.network.Download$DownloadTask
com.ds.avare.network.Download$DownloadTask: Download$DownloadTask(com.ds.avare.network.Download)
com.ds.avare.network.Download$DownloadTask: void copyInputStream(java.io.InputStream,java.io.OutputStream)
com.ds.avare.network.Download$DownloadTask: void sendFailure()
com.ds.avare.network.Download$DownloadTask: void run()
com.ds.avare.network.Download$DownloadTask: Download$DownloadTask(com.ds.avare.network.Download,com.ds.avare.network.Download$1)
com.ds.avare.network.TFRFetcher
com.ds.avare.network.TFRFetcher: TFRFetcher(android.content.Context)
com.ds.avare.network.TFRFetcher: void parse()
com.ds.avare.network.TFRFetcher: java.util.LinkedList getShapes()
com.ds.avare.network.TFRFetcher: java.util.LinkedList access$102(com.ds.avare.network.TFRFetcher,java.util.LinkedList)
com.ds.avare.network.TFRFetcher: android.content.Context access$200(com.ds.avare.network.TFRFetcher)
com.ds.avare.network.TFRFetcher$1
com.ds.avare.network.TFRFetcher$TFRTask
com.ds.avare.network.TFRFetcher$TFRTask: TFRFetcher$TFRTask(com.ds.avare.network.TFRFetcher)
com.ds.avare.network.TFRFetcher$TFRTask: java.lang.Boolean doInBackground(java.lang.Object[])
com.ds.avare.network.TFRFetcher$TFRTask: java.lang.Object doInBackground(java.lang.Object[])
com.ds.avare.network.TFRFetcher$TFRTask: TFRFetcher$TFRTask(com.ds.avare.network.TFRFetcher,com.ds.avare.network.TFRFetcher$1)
com.ds.avare.place.Airport
com.ds.avare.place.Airport: Airport(java.util.LinkedHashMap,double,double)
com.ds.avare.place.Airport: void updateLocation(double,double)
com.ds.avare.place.Airport: java.lang.String getId()
com.ds.avare.place.Airport: double getDistance()
com.ds.avare.place.Airport: java.lang.String getName()
com.ds.avare.place.Airport: double getBearing()
com.ds.avare.place.Airport: double getVariation()
com.ds.avare.place.Airport: java.lang.String getFuel()
com.ds.avare.place.Airport: java.lang.String getElevation()
com.ds.avare.place.Airport: java.lang.String getLongestRunway()
com.ds.avare.place.Airport: void setLongestRunway(java.lang.String)
com.ds.avare.place.Airport: void setHeight(double)
com.ds.avare.place.Airport: boolean canGlide(com.ds.avare.storage.Preferences)
com.ds.avare.place.Airway
com.ds.avare.place.Airway: Airway()
com.ds.avare.place.Airway: boolean isSame(com.ds.avare.position.Coordinate,com.ds.avare.position.Coordinate)
com.ds.avare.place.Airway: com.ds.avare.position.Coordinate findIntersectionOfAirways(com.ds.avare.StorageService,java.lang.String,java.util.LinkedList)
com.ds.avare.place.Airway: java.util.LinkedList find(com.ds.avare.StorageService,java.lang.String,java.lang.String,java.lang.String)
com.ds.avare.place.Area
com.ds.avare.place.Area: Area(com.ds.avare.storage.DataSource,android.content.Context)
com.ds.avare.place.Area: com.ds.avare.place.Airport getAirport(int)
com.ds.avare.place.Area: int getAirportsNumber()
com.ds.avare.place.Area: void updateLocation(com.ds.avare.gps.GpsParams)
com.ds.avare.place.Area: com.ds.avare.storage.DataSource access$100(com.ds.avare.place.Area)
com.ds.avare.place.Area: double access$200(com.ds.avare.place.Area)
com.ds.avare.place.Area: double access$300(com.ds.avare.place.Area)
com.ds.avare.place.Area: com.ds.avare.storage.Preferences access$400(com.ds.avare.place.Area)
com.ds.avare.place.Area: boolean access$502(com.ds.avare.place.Area,boolean)
com.ds.avare.place.Area: double access$600(com.ds.avare.place.Area)
com.ds.avare.place.Area: com.ds.avare.place.Airport[] access$702(com.ds.avare.place.Area,com.ds.avare.place.Airport[])
com.ds.avare.place.Area$1
com.ds.avare.place.Area$DataBaseAreaTask
com.ds.avare.place.Area$DataBaseAreaTask: Area$DataBaseAreaTask(com.ds.avare.place.Area)
com.ds.avare.place.Area$DataBaseAreaTask: java.lang.Void doInBackground(java.lang.Object[])
com.ds.avare.place.Area$DataBaseAreaTask: void onPostExecute(java.lang.Object)
com.ds.avare.place.Area$DataBaseAreaTask: java.lang.Object doInBackground(java.lang.Object[])
com.ds.avare.place.Area$DataBaseAreaTask: Area$DataBaseAreaTask(com.ds.avare.place.Area,com.ds.avare.place.Area$1)
com.ds.avare.place.Awos
com.ds.avare.place.Awos: Awos(java.lang.String)
com.ds.avare.place.Awos: java.lang.String getType()
com.ds.avare.place.Awos: double getLat()
com.ds.avare.place.Awos: double getLon()
com.ds.avare.place.Awos: java.lang.String getRemarks()
com.ds.avare.place.Awos: java.lang.String getFreq1()
com.ds.avare.place.Awos: java.lang.String getPhone1()
com.ds.avare.place.Awos: java.lang.String getFreq2()
com.ds.avare.place.Awos: java.lang.String getPhone2()
com.ds.avare.place.Awos: void setType(java.lang.String)
com.ds.avare.place.Awos: void setLat(java.lang.String)
com.ds.avare.place.Awos: void setLon(java.lang.String)
com.ds.avare.place.Awos: void setRemark(java.lang.String)
com.ds.avare.place.Awos: void setFreq1(java.lang.String)
com.ds.avare.place.Awos: void setFreq2(java.lang.String)
com.ds.avare.place.Awos: void setPhone1(java.lang.String)
com.ds.avare.place.Awos: void setPhone2(java.lang.String)
com.ds.avare.place.Destination
com.ds.avare.place.Destination: java.lang.String getCmt()
com.ds.avare.place.Destination: Destination(java.lang.String,java.lang.String,com.ds.avare.storage.Preferences,com.ds.avare.StorageService)
com.ds.avare.place.Destination: Destination(com.ds.avare.StorageService,double,double)
com.ds.avare.place.Destination: void parseGps(java.lang.String,java.lang.String)
com.ds.avare.place.Destination: java.lang.String getStorageName()
com.ds.avare.place.Destination: java.lang.String getStorageName(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.ds.avare.place.Destination: void updateTo(com.ds.avare.gps.GpsParams)
com.ds.avare.place.Destination: java.lang.String getEte()
com.ds.avare.place.Destination: java.lang.String getEta()
com.ds.avare.place.Destination: void addTime()
com.ds.avare.place.Destination: java.lang.String toString()
com.ds.avare.place.Destination: void findGuessType()
com.ds.avare.place.Destination: void find()
com.ds.avare.place.Destination: void find(java.lang.String)
com.ds.avare.place.Destination: boolean isFound()
com.ds.avare.place.Destination: boolean isLooking()
com.ds.avare.place.Destination: java.lang.String[] getAfd()
com.ds.avare.place.Destination: java.lang.String getFacilityName()
com.ds.avare.place.Destination: java.lang.String getID()
com.ds.avare.place.Destination: java.util.LinkedList getRunways()
com.ds.avare.place.Destination: com.ds.avare.utils.BitmapHolder getBitmap()
com.ds.avare.place.Destination: java.util.LinkedHashMap getParams()
com.ds.avare.place.Destination: java.util.LinkedHashMap getFrequencies()
com.ds.avare.place.Destination: double getBearing()
com.ds.avare.place.Destination: double getDistance()
com.ds.avare.place.Destination: android.location.Location getLocation()
com.ds.avare.place.Destination: java.lang.String getType()
com.ds.avare.place.Destination: android.location.Location getLocationInit()
com.ds.avare.place.Destination: com.ds.avare.shapes.TrackShape getTrackShape()
com.ds.avare.place.Destination: java.util.LinkedList getAwos()
com.ds.avare.place.Destination: double getElevation()
com.ds.avare.place.Destination: java.lang.String getVerticalSpeedTo(com.ds.avare.gps.GpsParams)
com.ds.avare.place.Destination: java.lang.String getFlightPathRequired(com.ds.avare.gps.GpsParams)
com.ds.avare.place.Destination: double getAltitudeAboveDest(com.ds.avare.gps.GpsParams)
com.ds.avare.place.Destination: long getVerticalSpeedToNoFmt(com.ds.avare.gps.GpsParams)
com.ds.avare.place.Destination: boolean isGPSValid(java.lang.String)
com.ds.avare.place.Destination: double getDeclination()
com.ds.avare.place.Destination: java.lang.String access$100(com.ds.avare.place.Destination)
com.ds.avare.place.Destination: com.ds.avare.StorageService access$200(com.ds.avare.place.Destination)
com.ds.avare.place.Destination: java.lang.String access$302(com.ds.avare.place.Destination,java.lang.String)
com.ds.avare.place.Destination: java.lang.String access$102(com.ds.avare.place.Destination,java.lang.String)
com.ds.avare.place.Destination: java.lang.String access$300(com.ds.avare.place.Destination)
com.ds.avare.place.Destination: void access$400(com.ds.avare.place.Destination,java.lang.String,java.lang.String)
com.ds.avare.place.Destination: double access$502(com.ds.avare.place.Destination,double)
com.ds.avare.place.Destination: double access$602(com.ds.avare.place.Destination,double)
com.ds.avare.place.Destination: java.lang.String access$702(com.ds.avare.place.Destination,java.lang.String)
com.ds.avare.place.Destination: double access$600(com.ds.avare.place.Destination)
com.ds.avare.place.Destination: java.util.LinkedHashMap access$800(com.ds.avare.place.Destination)
com.ds.avare.place.Destination: double access$500(com.ds.avare.place.Destination)
com.ds.avare.place.Destination: void access$900(com.ds.avare.place.Destination)
com.ds.avare.place.Destination: java.lang.String[] access$1002(com.ds.avare.place.Destination,java.lang.String[])
com.ds.avare.place.Destination: boolean access$1102(com.ds.avare.place.Destination,boolean)
com.ds.avare.place.Destination: boolean access$1202(com.ds.avare.place.Destination,boolean)
com.ds.avare.place.Destination: java.lang.String access$1302(com.ds.avare.place.Destination,java.lang.String)
com.ds.avare.place.Destination: java.util.LinkedHashMap access$802(com.ds.avare.place.Destination,java.util.LinkedHashMap)
com.ds.avare.place.Destination: java.util.LinkedHashMap access$1402(com.ds.avare.place.Destination,java.util.LinkedHashMap)
com.ds.avare.place.Destination: java.util.LinkedList access$1502(com.ds.avare.place.Destination,java.util.LinkedList)
com.ds.avare.place.Destination: com.ds.avare.storage.DataSource access$1600(com.ds.avare.place.Destination)
com.ds.avare.place.Destination: java.util.LinkedList access$1700(com.ds.avare.place.Destination)
com.ds.avare.place.Destination: java.util.LinkedHashMap access$1400(com.ds.avare.place.Destination)
com.ds.avare.place.Destination: java.util.LinkedList access$1500(com.ds.avare.place.Destination)
com.ds.avare.place.Destination: com.ds.avare.storage.Preferences access$1800(com.ds.avare.place.Destination)
com.ds.avare.place.Destination: java.lang.String access$1300(com.ds.avare.place.Destination)
com.ds.avare.place.Destination: boolean access$1100(com.ds.avare.place.Destination)
com.ds.avare.place.Destination: void access$1900(com.ds.avare.place.Destination)
com.ds.avare.place.Destination$1
com.ds.avare.place.Destination$DataBaseLocationTask
com.ds.avare.place.Destination$DataBaseLocationTask: Destination$DataBaseLocationTask(com.ds.avare.place.Destination)
com.ds.avare.place.Destination$DataBaseLocationTask: void onPreExecute()
com.ds.avare.place.Destination$DataBaseLocationTask: java.lang.Boolean doInBackground(java.lang.Object[])
com.ds.avare.place.Destination$DataBaseLocationTask: void onPostExecute(java.lang.Boolean)
com.ds.avare.place.Destination$DataBaseLocationTask: void onPostExecute(java.lang.Object)
com.ds.avare.place.Destination$DataBaseLocationTask: java.lang.Object doInBackground(java.lang.Object[])
com.ds.avare.place.Destination$DataBaseLocationTask: Destination$DataBaseLocationTask(com.ds.avare.place.Destination,com.ds.avare.place.Destination$1)
com.ds.avare.place.Destination$DataBaseLocationTask$1
com.ds.avare.place.Destination$DataBaseLocationTask$1: Destination$DataBaseLocationTask$1(com.ds.avare.place.Destination$DataBaseLocationTask,java.util.LinkedList)
com.ds.avare.place.Destination$DataBaseLocationTask$1: boolean accept(java.io.File,java.lang.String)
com.ds.avare.place.GameTFR
com.ds.avare.place.GameTFR: GameTFR()
com.ds.avare.place.GameTFR: void <clinit>()
com.ds.avare.place.Obstacle
com.ds.avare.place.Obstacle: Obstacle(double,double,int)
com.ds.avare.place.Obstacle: double getLatitude()
com.ds.avare.place.Obstacle: double getLongitude()
com.ds.avare.place.Obstacle: int getHeight()
com.ds.avare.place.Plan
com.ds.avare.place.Plan: Plan(android.content.Context,com.ds.avare.StorageService)
com.ds.avare.place.Plan: void clear()
com.ds.avare.place.Plan: void setName(java.lang.String)
com.ds.avare.place.Plan: java.lang.String getName()
com.ds.avare.place.Plan: com.ds.avare.place.Destination getDestination(int)
com.ds.avare.place.Plan: int getDestinationNumber()
com.ds.avare.place.Plan: void remove(int)
com.ds.avare.place.Plan: void move(int,int)
com.ds.avare.place.Plan: boolean hasDestinationChanged()
com.ds.avare.place.Plan: boolean appendDestination(com.ds.avare.place.Destination)
com.ds.avare.place.Plan: int findNextNotPassed()
com.ds.avare.place.Plan: boolean isPassed(int)
com.ds.avare.place.Plan: void setPassed(int)
com.ds.avare.place.Plan: void setNotPassed(int)
com.ds.avare.place.Plan: void updateLocation(com.ds.avare.gps.GpsParams)
com.ds.avare.place.Plan: java.lang.String toString()
com.ds.avare.place.Plan: void makeActive(com.ds.avare.gps.GpsParams)
com.ds.avare.place.Plan: void makeInactive()
com.ds.avare.place.Plan: boolean isActive()
com.ds.avare.place.Plan: com.ds.avare.position.Coordinate[] concat(com.ds.avare.position.Coordinate[],com.ds.avare.position.Coordinate[])
com.ds.avare.place.Plan: com.ds.avare.position.Coordinate[] getCoordinates()
com.ds.avare.place.Plan: com.ds.avare.shapes.TrackShape getTrackShape()
com.ds.avare.place.Plan: void simulate()
com.ds.avare.place.Plan: int findClosePointId(double,double,double)
com.ds.avare.place.Plan: void replaceDestination(com.ds.avare.storage.Preferences,int,double,double,boolean)
com.ds.avare.place.Plan: boolean insertDestination(com.ds.avare.place.Destination)
com.ds.avare.place.Plan: void update(java.util.Observable,java.lang.Object)
com.ds.avare.place.Plan: void regress()
com.ds.avare.place.Plan: void advance()
com.ds.avare.place.Plan: boolean suspendResume()
com.ds.avare.place.Plan: java.lang.String putPlanToStorageFormat()
com.ds.avare.place.Plan: Plan(android.content.Context,com.ds.avare.StorageService,java.lang.String,boolean)
com.ds.avare.place.Plan: java.util.LinkedHashMap getAllPlans(com.ds.avare.StorageService,java.lang.String)
com.ds.avare.place.Plan: java.lang.String putAllPlans(com.ds.avare.StorageService,java.util.LinkedHashMap)
com.ds.avare.place.Plan: double getDistance()
com.ds.avare.place.Plan: void moveTo(int)
com.ds.avare.place.Plan: boolean isEarlyPass()
com.ds.avare.place.Plan: com.ds.avare.storage.Preferences access$000(com.ds.avare.place.Plan)
com.ds.avare.place.Plan: boolean access$100(com.ds.avare.place.Plan)
com.ds.avare.place.Plan: boolean access$102(com.ds.avare.place.Plan,boolean)
com.ds.avare.place.Plan: boolean access$202(com.ds.avare.place.Plan,boolean)
com.ds.avare.place.Plan: com.ds.avare.place.Destination[] access$300(com.ds.avare.place.Plan)
com.ds.avare.place.Plan$Passage
com.ds.avare.place.Plan$Passage: Plan$Passage(com.ds.avare.place.Plan)
com.ds.avare.place.Plan$Passage: boolean hasPassed(double)
com.ds.avare.place.Plan$Passage: boolean updateLocation(com.ds.avare.gps.GpsParams,com.ds.avare.place.Destination)
com.ds.avare.place.Route
com.ds.avare.place.Route: Route()
com.ds.avare.place.Route: com.ds.avare.place.Destination getDestination()
com.ds.avare.place.Route: void add(com.ds.avare.place.Destination)
com.ds.avare.place.Route: void clear()
com.ds.avare.place.Route: com.ds.avare.position.Coordinate[] getCoordinates()
com.ds.avare.place.Runway
com.ds.avare.place.Runway: Runway(java.lang.String)
com.ds.avare.place.Runway: java.lang.String getSurface()
com.ds.avare.place.Runway: java.lang.String getThreshold()
com.ds.avare.place.Runway: java.lang.String getWidth()
com.ds.avare.place.Runway: java.lang.String getLength()
com.ds.avare.place.Runway: java.lang.String getPattern()
com.ds.avare.place.Runway: java.lang.String getLights()
com.ds.avare.place.Runway: java.lang.String getElevation()
com.ds.avare.place.Runway: java.lang.String getNumber()
com.ds.avare.place.Runway: float getTrue()
com.ds.avare.place.Runway: double getLongitude()
com.ds.avare.place.Runway: double getLatitude()
com.ds.avare.place.Runway: java.lang.String getILS()
com.ds.avare.place.Runway: java.lang.String getVGSI()
com.ds.avare.place.Runway: void setSurface(java.lang.String)
com.ds.avare.place.Runway: void setThreshold(java.lang.String)
com.ds.avare.place.Runway: void setWidth(java.lang.String)
com.ds.avare.place.Runway: void setLength(java.lang.String)
com.ds.avare.place.Runway: void setPattern(java.lang.String)
com.ds.avare.place.Runway: void setLights(java.lang.String)
com.ds.avare.place.Runway: void setElevation(java.lang.String)
com.ds.avare.place.Runway: void setHeading(java.lang.String)
com.ds.avare.place.Runway: void setLongitude(java.lang.String)
com.ds.avare.place.Runway: void setLatitude(java.lang.String)
com.ds.avare.place.Runway: void setVariation(java.lang.String)
com.ds.avare.place.Runway: void setILS(java.lang.String)
com.ds.avare.place.Runway: void setVGSI(java.lang.String)
com.ds.avare.plan.LmfsInterface
com.ds.avare.plan.LmfsInterface: LmfsInterface(android.content.Context)
com.ds.avare.plan.LmfsInterface: java.lang.String parseError(java.lang.String)
com.ds.avare.plan.LmfsInterface: com.ds.avare.plan.LmfsPlanList getFlightPlans()
com.ds.avare.plan.LmfsInterface: com.ds.avare.plan.LmfsPlan getFlightPlan(java.lang.String)
com.ds.avare.plan.LmfsInterface: java.lang.String closeFlightPlan(java.lang.String,java.lang.String)
com.ds.avare.plan.LmfsInterface: java.lang.String activateFlightPlan(java.lang.String,java.lang.String,java.lang.String)
com.ds.avare.plan.LmfsInterface: java.lang.String cancelFlightPlan(java.lang.String)
com.ds.avare.plan.LmfsInterface: java.lang.String fileFlightPlan(com.ds.avare.plan.LmfsPlan)
com.ds.avare.plan.LmfsInterface: java.lang.String amendFlightPlan(com.ds.avare.plan.LmfsPlan)
com.ds.avare.plan.LmfsInterface: void getBriefing(com.ds.avare.plan.LmfsPlan,boolean,java.lang.String)
com.ds.avare.plan.LmfsInterface: com.ds.avare.plan.LmfsPlanLog getNavlog(com.ds.avare.plan.LmfsPlan)
com.ds.avare.plan.LmfsInterface: java.lang.String getError()
com.ds.avare.plan.LmfsPlan
com.ds.avare.plan.LmfsPlan: void init()
com.ds.avare.plan.LmfsPlan: LmfsPlan()
com.ds.avare.plan.LmfsPlan: boolean isValid()
com.ds.avare.plan.LmfsPlan: java.lang.String getId()
com.ds.avare.plan.LmfsPlan: void setId(java.lang.String)
com.ds.avare.plan.LmfsPlan: LmfsPlan(java.lang.String)
com.ds.avare.plan.LmfsPlan: boolean putJSON(org.json.JSONObject,java.lang.String,java.lang.String)
com.ds.avare.plan.LmfsPlan: java.lang.String makeJSON()
com.ds.avare.plan.LmfsPlan: void put(java.util.Map,java.lang.String,java.lang.String)
com.ds.avare.plan.LmfsPlan: java.util.Map makeHashMap()
com.ds.avare.plan.LmfsPlan: java.lang.String getTime(java.lang.String)
com.ds.avare.plan.LmfsPlan: java.lang.String getTimeFromInstance(java.lang.String)
com.ds.avare.plan.LmfsPlan: java.lang.String getInstanceFromTime(java.lang.String)
com.ds.avare.plan.LmfsPlan: java.lang.String getTimeFromInput(java.lang.String)
com.ds.avare.plan.LmfsPlan: java.lang.String getDurationFromInput(java.lang.String)
com.ds.avare.plan.LmfsPlan: java.lang.String durationToTime(java.lang.String)
com.ds.avare.plan.LmfsPlan: java.lang.String timeToDuration(double)
com.ds.avare.plan.LmfsPlan: java.lang.String convertLocationToGpsCoords(android.location.Location)
com.ds.avare.plan.LmfsPlanList
com.ds.avare.plan.LmfsPlanList: LmfsPlanList(java.lang.String)
com.ds.avare.plan.LmfsPlanList: java.util.LinkedList getPlans()
com.ds.avare.plan.LmfsPlanLog
com.ds.avare.plan.LmfsPlanLog: LmfsPlanLog(java.lang.String)
com.ds.avare.plan.LmfsPlanLog: java.lang.String getLogInHTML()
com.ds.avare.plan.LmfsPlanLog: java.lang.String getTimeFromLong(long)
com.ds.avare.plan.LmfsPlanLog: long getElapsedTime(java.lang.String)
com.ds.avare.position.Coordinate
com.ds.avare.position.Coordinate: void setLeg(com.ds.avare.position.Coordinate[],int)
com.ds.avare.position.Coordinate: int getLeg()
com.ds.avare.position.Coordinate: void setSegment(int)
com.ds.avare.position.Coordinate: Coordinate(double,double)
com.ds.avare.position.Coordinate: double getLongitude()
com.ds.avare.position.Coordinate: double getLatitude()
com.ds.avare.position.Coordinate: void makeSeparate()
com.ds.avare.position.Coordinate: boolean isSeparate()
com.ds.avare.position.Movement
com.ds.avare.position.Movement: Movement(double[],double[])
com.ds.avare.position.Movement: Movement()
com.ds.avare.position.Movement: double getLongitudePerPixel()
com.ds.avare.position.Movement: double getLatitudePerPixel()
com.ds.avare.position.Movement: double getOffsetLongitude()
com.ds.avare.position.Movement: double getOffsetLatitude()
com.ds.avare.position.Movement: float getNMPerLatitude(com.ds.avare.position.Scale)
com.ds.avare.position.Origin
com.ds.avare.position.Origin: Origin()
com.ds.avare.position.Origin: void update(com.ds.avare.gps.GpsParams,com.ds.avare.position.Scale,com.ds.avare.position.Pan,double,double,int,int)
com.ds.avare.position.Origin: double getLongitudeOf(double)
com.ds.avare.position.Origin: double getLatitudeOf(double)
com.ds.avare.position.Origin: double getLongitudeCenter()
com.ds.avare.position.Origin: double getLatitudeCenter()
com.ds.avare.position.Origin: double getLongitudeLeft()
com.ds.avare.position.Origin: double getLatitudeUpper()
com.ds.avare.position.Origin: double getLongitudeRight()
com.ds.avare.position.Origin: double getLatitudeLower()
com.ds.avare.position.Origin: double getOffsetX(double)
com.ds.avare.position.Origin: double getOffsetY(double)
com.ds.avare.position.Origin: boolean isInDisplayRange(com.ds.avare.position.Coordinate)
com.ds.avare.position.Pan
com.ds.avare.position.Pan: Pan()
com.ds.avare.position.Pan: Pan(com.ds.avare.position.Pan)
com.ds.avare.position.Pan: boolean setMove(float,float)
com.ds.avare.position.Pan: void setTileMove(int,int)
com.ds.avare.position.Pan: float getMoveX()
com.ds.avare.position.Pan: float getMoveY()
com.ds.avare.position.Pan: int getTileMoveX()
com.ds.avare.position.Pan: int getTileMoveY()
com.ds.avare.position.Pan: int getTileMoveXWithoutTear()
com.ds.avare.position.Pan: int getTileMoveYWithoutTear()
com.ds.avare.position.PixelCoordinate
com.ds.avare.position.PixelCoordinate: PixelCoordinate(double,double)
com.ds.avare.position.PixelCoordinate: double getX()
com.ds.avare.position.PixelCoordinate: double getY()
com.ds.avare.position.PixelCoordinate: void makeSeparate()
com.ds.avare.position.PixelCoordinate: boolean isSeparate()
com.ds.avare.position.PixelCoordinate: double rotateX(double,double)
com.ds.avare.position.PixelCoordinate: double rotateY(double,double)
com.ds.avare.position.Projection
com.ds.avare.position.Projection: Projection(double,double,double,double)
com.ds.avare.position.Projection: double getStaticBearing(double,double,double,double)
com.ds.avare.position.Projection: double getStaticDistance(double,double,double,double)
com.ds.avare.position.Projection: com.ds.avare.position.Coordinate[] findPoints(int)
com.ds.avare.position.Projection: double getBearing()
com.ds.avare.position.Projection: double getDistance()
com.ds.avare.position.Projection: java.lang.String getGeneralDirectionFrom(double)
com.ds.avare.position.Radial
com.ds.avare.position.Radial: Radial()
com.ds.avare.position.Radial: com.ds.avare.position.Coordinate findCoordinate(double,double,double,double)
com.ds.avare.position.Scale
com.ds.avare.position.Scale: Scale(double)
com.ds.avare.position.Scale: Scale()
com.ds.avare.position.Scale: double getStep()
com.ds.avare.position.Scale: void setScaleFactor(float)
com.ds.avare.position.Scale: void setScaleAt(double)
com.ds.avare.position.Scale: float getScaleFactorRaw()
com.ds.avare.position.Scale: float getScaleFactor()
com.ds.avare.position.Scale: float getScaleCorrected()
com.ds.avare.position.Scale: int getMacroFactor()
com.ds.avare.position.Scale: void updateMacro()
com.ds.avare.position.Scale: int downSample()
com.ds.avare.position.Scale: void zoomOut()
com.ds.avare.position.Scale: void adjustZoom(double)
com.ds.avare.shapes.CrumbsShape
com.ds.avare.shapes.CrumbsShape: CrumbsShape()
com.ds.avare.shapes.CrumbsShape: void updateShape(com.ds.avare.gps.GpsParams)
com.ds.avare.shapes.CrumbsShape: void clearShape()
com.ds.avare.shapes.Draw
com.ds.avare.shapes.Draw: Draw()
com.ds.avare.shapes.Draw: void addPoint(float,float,com.ds.avare.position.Origin)
com.ds.avare.shapes.Draw: void addSeparation()
com.ds.avare.shapes.Draw: void clear()
com.ds.avare.shapes.Draw: void drawShape(android.graphics.Canvas,android.graphics.Paint,com.ds.avare.position.Origin)
com.ds.avare.shapes.ElevationTile
com.ds.avare.shapes.ElevationTile: ElevationTile(android.content.Context)
com.ds.avare.shapes.ElevationTile: void recycleBitmaps()
com.ds.avare.shapes.ElevationTile: com.ds.avare.utils.BitmapHolder getElevationBitmap()
com.ds.avare.shapes.ElevationTile: void setElevationTile(com.ds.avare.shapes.Tile)
com.ds.avare.shapes.ElevationTile: com.ds.avare.shapes.Tile getTile()
com.ds.avare.shapes.MetShape
com.ds.avare.shapes.MetShape: MetShape(java.lang.String)
com.ds.avare.shapes.PixelDraw
com.ds.avare.shapes.PixelDraw: PixelDraw()
com.ds.avare.shapes.PixelDraw: void addPoint(float,float)
com.ds.avare.shapes.PixelDraw: void addSeparation()
com.ds.avare.shapes.PixelDraw: void clear()
com.ds.avare.shapes.PixelDraw: void drawShape(android.graphics.Canvas,android.graphics.Paint)
com.ds.avare.shapes.Radar
com.ds.avare.shapes.Radar: Radar(android.content.Context)
com.ds.avare.shapes.Radar: void parse()
com.ds.avare.shapes.Radar: void flush()
com.ds.avare.shapes.Radar: void draw(android.graphics.Canvas,android.graphics.Paint,com.ds.avare.position.Origin,com.ds.avare.position.Scale,float,float)
com.ds.avare.shapes.Radar: boolean isOld()
com.ds.avare.shapes.Radar: java.lang.String getDate()
com.ds.avare.shapes.Shape
com.ds.avare.shapes.Shape: Shape(java.lang.String)
com.ds.avare.shapes.Shape: void add(double,double,boolean)
com.ds.avare.shapes.Shape: void add(double,double,boolean,int)
com.ds.avare.shapes.Shape: void drawShape(android.graphics.Canvas,com.ds.avare.position.Origin,com.ds.avare.position.Scale,com.ds.avare.position.Movement,android.graphics.Paint,boolean,boolean)
com.ds.avare.shapes.Shape: void drawShape(android.graphics.Canvas,com.ds.avare.position.Origin,com.ds.avare.position.Scale,com.ds.avare.position.Movement,android.graphics.Paint,boolean,boolean,com.ds.avare.place.Plan)
com.ds.avare.shapes.Shape: int getNumCoords()
com.ds.avare.shapes.Shape: double getLatitudeMinimum()
com.ds.avare.shapes.Shape: java.lang.String getTextIfTouched(double,double)
com.ds.avare.shapes.Shape: void makePolygon()
com.ds.avare.shapes.TFRShape
com.ds.avare.shapes.TFRShape: TFRShape(java.lang.String)
com.ds.avare.shapes.Tile
com.ds.avare.shapes.Tile: Tile()
com.ds.avare.shapes.Tile: Tile(com.ds.avare.storage.Preferences,java.lang.String,double,double,double,double,double,double,double,double,double,double,java.lang.String)
com.ds.avare.shapes.Tile: boolean within(double,double)
com.ds.avare.shapes.Tile: double getPx()
com.ds.avare.shapes.Tile: java.lang.String getChart()
com.ds.avare.shapes.Tile: double getPy()
com.ds.avare.shapes.Tile: double getOffsetTopX(double)
com.ds.avare.shapes.Tile: double getOffsetTopY(double)
com.ds.avare.shapes.Tile: double getOffsetX(double)
com.ds.avare.shapes.Tile: double getOffsetY(double)
com.ds.avare.shapes.Tile: java.lang.String getName()
com.ds.avare.shapes.Tile: java.lang.String getNeighbor(int,int)
com.ds.avare.shapes.Tile: double getLatitude()
com.ds.avare.shapes.Tile: double getLongitude()
com.ds.avare.shapes.TileMap
com.ds.avare.shapes.TileMap: TileMap(android.content.Context)
com.ds.avare.shapes.TileMap: void clear()
com.ds.avare.shapes.TileMap: void forceReload()
com.ds.avare.shapes.TileMap: void reload(java.lang.String[])
com.ds.avare.shapes.TileMap: void flip()
com.ds.avare.shapes.TileMap: void recycleBitmaps()
com.ds.avare.shapes.TileMap: int getTilesNum()
com.ds.avare.shapes.TileMap: int getXTilesNum()
com.ds.avare.shapes.TileMap: int getYTilesNum()
com.ds.avare.shapes.TileMap: com.ds.avare.utils.BitmapHolder getTile(int)
com.ds.avare.shapes.TileMap: void setOrientation()
com.ds.avare.shapes.TrackShape
com.ds.avare.shapes.TrackShape: int getLegColor(int,int)
com.ds.avare.shapes.TrackShape: TrackShape()
com.ds.avare.shapes.TrackShape: void updateShape(com.ds.avare.gps.GpsParams,com.ds.avare.place.Destination)
com.ds.avare.shapes.TrackShape: void updateShapeFromPlan(com.ds.avare.position.Coordinate[])
com.ds.avare.storage.DataBaseHelper
com.ds.avare.storage.DataBaseHelper: java.lang.String getMainDb()
com.ds.avare.storage.DataBaseHelper: DataBaseHelper(android.content.Context)
com.ds.avare.storage.DataBaseHelper: boolean isPresent()
com.ds.avare.storage.DataBaseHelper: void closes(android.database.Cursor)
com.ds.avare.storage.DataBaseHelper: android.database.Cursor doQuery(java.lang.String,java.lang.String)
com.ds.avare.storage.DataBaseHelper: float[] findDiagramMatrix(java.lang.String)
com.ds.avare.storage.DataBaseHelper: java.lang.String addPath(java.lang.String,java.lang.String)
com.ds.avare.storage.DataBaseHelper: java.util.LinkedList findFilesToDelete(java.lang.String,java.lang.String)
com.ds.avare.storage.DataBaseHelper: com.ds.avare.place.Airport[] findClosestAirports(double,double,java.lang.String)
com.ds.avare.storage.DataBaseHelper: com.ds.avare.position.Coordinate getCoordinate(java.lang.String)
com.ds.avare.storage.DataBaseHelper: com.ds.avare.storage.StringPreference stringQuery(java.lang.String,java.lang.String,java.lang.String)
com.ds.avare.storage.DataBaseHelper: com.ds.avare.storage.StringPreference searchOne(java.lang.String)
com.ds.avare.storage.DataBaseHelper: com.ds.avare.storage.StringPreference searchRadial(java.lang.String)
com.ds.avare.storage.DataBaseHelper: void searchCity(java.lang.String,java.util.LinkedHashMap)
com.ds.avare.storage.DataBaseHelper: void search(java.lang.String,java.util.LinkedHashMap,boolean)
com.ds.avare.storage.DataBaseHelper: void findDestination(java.lang.String,java.lang.String,java.lang.String,java.util.LinkedHashMap,java.util.LinkedList,java.util.LinkedHashMap,java.util.LinkedList)
com.ds.avare.storage.DataBaseHelper: java.util.LinkedList findFrequencies(java.lang.String)
com.ds.avare.storage.DataBaseHelper: java.util.LinkedList findRunways(java.lang.String)
com.ds.avare.storage.DataBaseHelper: java.lang.String findElev(java.lang.String)
com.ds.avare.storage.DataBaseHelper: boolean isWithin(double,double,double[],double[])
com.ds.avare.storage.DataBaseHelper: java.lang.String findClosestAirportID(double,double)
com.ds.avare.storage.DataBaseHelper: java.lang.String getSua(double,double)
com.ds.avare.storage.DataBaseHelper: java.lang.String findObstacle(java.lang.String,com.ds.avare.place.Destination)
com.ds.avare.storage.DataBaseHelper: java.lang.String findLonLat(java.lang.String,java.lang.String)
com.ds.avare.storage.DataBaseHelper: java.lang.String[] findMinimums(java.lang.String)
com.ds.avare.storage.DataBaseHelper: java.util.LinkedList findAFD(java.lang.String)
com.ds.avare.storage.DataBaseHelper: java.util.LinkedList findObstacles(double,double,int)
com.ds.avare.storage.DataBaseHelper: java.lang.String getFilesDb()
com.ds.avare.storage.DataBaseHelper: android.database.Cursor doQueryFiles(java.lang.String,java.lang.String)
com.ds.avare.storage.DataBaseHelper: void closesFiles(android.database.Cursor)
com.ds.avare.storage.DataBaseHelper: com.ds.avare.shapes.Tile findClosest(double,double,double[],double[],int)
com.ds.avare.storage.DataBaseHelper: com.ds.avare.shapes.Tile findTile(java.lang.String)
com.ds.avare.storage.DataBaseHelper: java.lang.String getWeatherDb()
com.ds.avare.storage.DataBaseHelper: android.database.Cursor doQueryWeather(java.lang.String,java.lang.String)
com.ds.avare.storage.DataBaseHelper: void closesWeather(android.database.Cursor)
com.ds.avare.storage.DataBaseHelper: com.ds.avare.weather.Taf getTAF(java.lang.String)
com.ds.avare.storage.DataBaseHelper: com.ds.avare.weather.Metar getMETAR(java.lang.String)
com.ds.avare.storage.DataBaseHelper: com.ds.avare.weather.WindsAloft getWindsAloft(double,double)
com.ds.avare.storage.DataBaseHelper: java.util.LinkedList getAireps(double,double)
com.ds.avare.storage.DataBaseHelper: java.util.LinkedList getAirSigMets()
com.ds.avare.storage.DataBaseHelper: android.database.Cursor doQueryElev(java.lang.String,java.lang.String)
com.ds.avare.storage.DataBaseHelper: void closesElev(android.database.Cursor)
com.ds.avare.storage.DataBaseHelper: com.ds.avare.shapes.Tile findElevTile(double,double,double[],double[],int)
com.ds.avare.storage.DataBaseHelper: android.database.Cursor doQueryProcedures(java.lang.String,java.lang.String)
com.ds.avare.storage.DataBaseHelper: void closesProcedures(android.database.Cursor)
com.ds.avare.storage.DataBaseHelper: java.util.LinkedList findProcedure(java.lang.String,java.lang.String,java.lang.String)
com.ds.avare.storage.DataBaseHelper: android.database.Cursor doQueryPlates(java.lang.String,java.lang.String)
com.ds.avare.storage.DataBaseHelper: void closesPlates(android.database.Cursor)
com.ds.avare.storage.DataBaseHelper: java.util.HashMap findPlatesMatrix(java.lang.String)
com.ds.avare.storage.DataBaseHelper: android.database.Cursor doQueryGeoPlates(java.lang.String,java.lang.String)
com.ds.avare.storage.DataBaseHelper: void closesGeoPlates(android.database.Cursor)
com.ds.avare.storage.DataBaseHelper: float[] findGeoPlateMatrix(java.lang.String)
com.ds.avare.storage.DataBaseHelper: com.ds.avare.position.Coordinate findNavaid(java.lang.String)
com.ds.avare.storage.DataBaseHelper: java.util.LinkedList findAirway(java.lang.String)
com.ds.avare.storage.DataBaseHelper: android.database.Cursor doQueryFuel(java.lang.String,java.lang.String)
com.ds.avare.storage.DataBaseHelper: void closesFuel(android.database.Cursor)
com.ds.avare.storage.DataBaseHelper: java.util.LinkedList findFuelCost(java.lang.String)
com.ds.avare.storage.DataBaseHelper: android.database.Cursor doQueryRatings(java.lang.String,java.lang.String)
com.ds.avare.storage.DataBaseHelper: void closesRatings(android.database.Cursor)
com.ds.avare.storage.DataBaseHelper: java.util.LinkedList findRatings(java.lang.String)
com.ds.avare.storage.DataBaseHelper$1
com.ds.avare.storage.DataBaseHelper$1: DataBaseHelper$1(com.ds.avare.storage.DataBaseHelper,java.lang.String)
com.ds.avare.storage.DataBaseHelper$1: boolean accept(java.io.File,java.lang.String)
com.ds.avare.storage.DataSource
com.ds.avare.storage.DataSource: DataSource(android.content.Context)
com.ds.avare.storage.DataSource: boolean isPresent()
com.ds.avare.storage.DataSource: com.ds.avare.shapes.Tile findClosest(double,double,double[],double[],int)
com.ds.avare.storage.DataSource: com.ds.avare.shapes.Tile findTile(java.lang.String)
com.ds.avare.storage.DataSource: boolean isWithin(double,double,double[],double[])
com.ds.avare.storage.DataSource: void findDestination(java.lang.String,java.lang.String,java.lang.String,java.util.LinkedHashMap,java.util.LinkedList,java.util.LinkedHashMap,java.util.LinkedList)
com.ds.avare.storage.DataSource: com.ds.avare.position.Coordinate getCoordinate(java.lang.String)
com.ds.avare.storage.DataSource: com.ds.avare.place.Airport[] findClosestAirports(double,double,java.lang.String)
com.ds.avare.storage.DataSource: java.lang.String findClosestAirportID(double,double)
com.ds.avare.storage.DataSource: float[] findDiagramMatrix(java.lang.String)
com.ds.avare.storage.DataSource: float[] findGeoPlateMatrix(java.lang.String)
com.ds.avare.storage.DataSource: java.util.HashMap findPlatesMatrix(java.lang.String)
com.ds.avare.storage.DataSource: void search(java.lang.String,java.util.LinkedHashMap,boolean)
com.ds.avare.storage.DataSource: com.ds.avare.storage.StringPreference searchOne(java.lang.String)
com.ds.avare.storage.DataSource: java.lang.String[] findMinimums(java.lang.String)
com.ds.avare.storage.DataSource: java.util.LinkedList findAFD(java.lang.String)
com.ds.avare.storage.DataSource: java.util.LinkedList findObstacles(double,double,int)
com.ds.avare.storage.DataSource: java.util.LinkedList findFilesToDelete(java.lang.String,java.lang.String)
com.ds.avare.storage.DataSource: java.lang.String findLonLat(java.lang.String,java.lang.String)
com.ds.avare.storage.DataSource: java.lang.String findObstacle(java.lang.String,com.ds.avare.place.Destination)
com.ds.avare.storage.DataSource: com.ds.avare.weather.Taf getTAF(java.lang.String)
com.ds.avare.storage.DataSource: com.ds.avare.weather.Metar getMETAR(java.lang.String)
com.ds.avare.storage.DataSource: java.util.LinkedList getAireps(double,double)
com.ds.avare.storage.DataSource: com.ds.avare.weather.WindsAloft getWindsAloft(double,double)
com.ds.avare.storage.DataSource: java.util.LinkedList getAirSigMets()
com.ds.avare.storage.DataSource: java.lang.String getSua(double,double)
com.ds.avare.storage.DataSource: java.util.LinkedList findRunways(java.lang.String)
com.ds.avare.storage.DataSource: java.util.LinkedList findFrequencies(java.lang.String)
com.ds.avare.storage.DataSource: java.lang.String findElev(java.lang.String)
com.ds.avare.storage.DataSource: com.ds.avare.shapes.Tile findElevTile(double,double,double[],double[],int)
com.ds.avare.storage.DataSource: java.util.LinkedList findProcedure(java.lang.String,java.lang.String,java.lang.String)
com.ds.avare.storage.DataSource: java.util.LinkedList findAirway(java.lang.String)
com.ds.avare.storage.DataSource: com.ds.avare.position.Coordinate findNavaid(java.lang.String)
com.ds.avare.storage.DataSource: java.util.LinkedList findFuelCost(java.lang.String)
com.ds.avare.storage.DataSource: java.util.LinkedList findRatings(java.lang.String)
com.ds.avare.storage.Preferences
com.ds.avare.storage.Preferences: Preferences(android.content.Context)
com.ds.avare.storage.Preferences: java.lang.String getRoot()
com.ds.avare.storage.Preferences: java.lang.String[] getRecent()
com.ds.avare.storage.Preferences: void modifyARecent(java.lang.String,java.lang.String)
com.ds.avare.storage.Preferences: void deleteARecent(java.lang.String)
com.ds.avare.storage.Preferences: void addToRecent(java.lang.String)
com.ds.avare.storage.Preferences: java.lang.String getPlans()
com.ds.avare.storage.Preferences: void putPlans(java.lang.String)
com.ds.avare.storage.Preferences: int[] getTilesNumber()
com.ds.avare.storage.Preferences: boolean shouldLeaveRunning()
com.ds.avare.storage.Preferences: boolean shouldShowBackground()
com.ds.avare.storage.Preferences: boolean shouldShowAllFacilities()
com.ds.avare.storage.Preferences: boolean shouldShowObstacles()
com.ds.avare.storage.Preferences: boolean isTrackEnabled()
com.ds.avare.storage.Preferences: boolean isWeatherTranslated()
com.ds.avare.storage.Preferences: boolean shouldExtendRunways()
com.ds.avare.storage.Preferences: boolean shouldAutoDisplayAirportDiagram()
com.ds.avare.storage.Preferences: boolean isSimulationMode()
com.ds.avare.storage.Preferences: int getDisplayIcon()
com.ds.avare.storage.Preferences: int getCycleAdjust()
com.ds.avare.storage.Preferences: boolean shouldGpsWarn()
com.ds.avare.storage.Preferences: java.lang.String getOrientation()
com.ds.avare.storage.Preferences: boolean shouldScreenStayOn()
com.ds.avare.storage.Preferences: boolean isGpsUpdatePeriodShort()
com.ds.avare.storage.Preferences: boolean isNightMode()
com.ds.avare.storage.Preferences: boolean isNewerVersion(android.app.Activity)
com.ds.avare.storage.Preferences: java.lang.String getChartType()
com.ds.avare.storage.Preferences: java.lang.String getAirSigMetType()
com.ds.avare.storage.Preferences: void setChartType(java.lang.String)
com.ds.avare.storage.Preferences: void setSimMode(boolean)
com.ds.avare.storage.Preferences: java.lang.String getDistanceUnit()
com.ds.avare.storage.Preferences: java.lang.String mapsFolder()
com.ds.avare.storage.Preferences: void setMapsFolder(java.lang.String)
com.ds.avare.storage.Preferences: java.lang.String loadString(java.lang.String)
com.ds.avare.storage.Preferences: boolean shouldDrawTracks()
com.ds.avare.storage.Preferences: boolean shouldSaveTracks()
com.ds.avare.storage.Preferences: boolean useAdsbWeather()
com.ds.avare.storage.Preferences: int showRadar()
com.ds.avare.storage.Preferences: boolean showAdsbTraffic()
com.ds.avare.storage.Preferences: int getTimerRingSize()
com.ds.avare.storage.Preferences: int getDistanceRingType()
com.ds.avare.storage.Preferences: int getDistanceRingColor()
com.ds.avare.storage.Preferences: int autoPostTracks()
com.ds.avare.storage.Preferences: boolean useDynamicFields()
com.ds.avare.storage.Preferences: boolean shouldBlinkScreen()
com.ds.avare.storage.Preferences: java.lang.String getRowFormats()
com.ds.avare.storage.Preferences: void setRowFormats(java.lang.String)
com.ds.avare.storage.Preferences: double getOdometer()
com.ds.avare.storage.Preferences: void setRegistered(boolean)
com.ds.avare.storage.Preferences: boolean isRegistered()
com.ds.avare.storage.Preferences: java.lang.String getExternalGpsSource()
com.ds.avare.storage.Preferences: void setOdometer(double)
com.ds.avare.storage.Preferences: boolean getShowCDI()
com.ds.avare.storage.Preferences: boolean shouldShowEdgeTape()
com.ds.avare.storage.Preferences: float getGlideRatio()
com.ds.avare.storage.Preferences: java.lang.String getLists()
com.ds.avare.storage.Preferences: void putLists(java.lang.String)
com.ds.avare.storage.Preferences: boolean useBearingForETEA()
com.ds.avare.storage.Preferences: boolean allowRubberBanding()
com.ds.avare.storage.Preferences: boolean showGameTFRs()
com.ds.avare.storage.Preferences: boolean showCAPGrids()
com.ds.avare.storage.Preferences: boolean showPlateInfoLines()
com.ds.avare.storage.Preferences: java.lang.String getUDWLocation()
com.ds.avare.storage.Preferences: void setUDWLocation(java.lang.String)
com.ds.avare.storage.Preferences: java.lang.String getGeotags()
com.ds.avare.storage.Preferences: java.lang.String getGeoCode()
com.ds.avare.storage.Preferences: void setGeotags(java.lang.String)
com.ds.avare.storage.Preferences: long getTabs()
com.ds.avare.storage.Preferences: int getHotelMaxPriceIndex()
com.ds.avare.storage.Preferences: int getHotelMinStarIndex()
com.ds.avare.storage.Preferences: int getHotelMaxDistanceIndex()
com.ds.avare.storage.Preferences: int getHotelAdultsIndex()
com.ds.avare.storage.Preferences: int getHotelChildIndex(java.lang.String)
com.ds.avare.storage.Preferences: void setHotelMaxPriceIndex(int)
com.ds.avare.storage.Preferences: void setHotelMinStarIndex(int)
com.ds.avare.storage.Preferences: void setHotelMaxDistanceIndex(int)
com.ds.avare.storage.Preferences: void setHotelAdultsIndex(int)
com.ds.avare.storage.Preferences: void setHotelChildIndex(java.lang.String,int)
com.ds.avare.storage.Preferences: void saveLMFSPlan(java.lang.String)
com.ds.avare.storage.Preferences: java.lang.String getLMFSPlan()
com.ds.avare.storage.Preferences: java.lang.String getLongestRunway()
com.ds.avare.storage.Preferences: java.lang.String getRegisteredEmail()
com.ds.avare.storage.Preferences: void setRegisteredEmail(java.lang.String)
com.ds.avare.storage.Preferences: boolean getPlanControl()
com.ds.avare.storage.Preferences: void <clinit>()
com.ds.avare.storage.StringPreference
com.ds.avare.storage.StringPreference: StringPreference(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.ds.avare.storage.StringPreference: java.lang.String joinName()
com.ds.avare.storage.StringPreference: void putInHash(java.util.LinkedHashMap)
com.ds.avare.storage.StringPreference: java.lang.String getId()
com.ds.avare.storage.StringPreference: java.lang.String getType()
com.ds.avare.storage.StringPreference: java.lang.String getHashedName()
com.ds.avare.storage.StringPreference: java.lang.String getHashedName(java.lang.String,java.lang.String)
com.ds.avare.storage.StringPreference: java.lang.String formatAddressName(java.lang.String)
com.ds.avare.storage.StringPreference: java.lang.String parseHashedNameId(java.lang.String)
com.ds.avare.storage.StringPreference: java.lang.String parseHashedNameIdBefore(java.lang.String)
com.ds.avare.storage.StringPreference: java.lang.String parseHashedNameIdAfter(java.lang.String)
com.ds.avare.storage.StringPreference: java.lang.String parseHashedNameDestType(java.lang.String)
com.ds.avare.storage.StringPreference: java.lang.String parseHashedNameDesc(java.lang.String)
com.ds.avare.storage.StringPreference: java.lang.String parseHashedNameDbType(java.lang.String)
com.ds.avare.storage.StringPreference: java.lang.String parseHashedNameFacilityName(java.lang.String)
com.ds.avare.touch.GestureInterface
com.ds.avare.touch.GestureInterface: void gestureCallBack(int,com.ds.avare.touch.LongTouchDestination)
com.ds.avare.touch.GestureInterface: void gestureCallBack(int,com.ds.avare.utils.InfoLines$InfoLineFieldLoc)
com.ds.avare.touch.LongTouchDestination
com.ds.avare.touch.LongTouchDestination: LongTouchDestination()
com.ds.avare.touch.MultiTouchController
com.ds.avare.touch.MultiTouchController: void extractCurrPtInfo()
com.ds.avare.touch.MultiTouchController: MultiTouchController(com.ds.avare.touch.MultiTouchController$MultiTouchObjectCanvas)
com.ds.avare.touch.MultiTouchController: MultiTouchController(com.ds.avare.touch.MultiTouchController$MultiTouchObjectCanvas,boolean)
com.ds.avare.touch.MultiTouchController: void setHandleSingleTouchEvents(boolean)
com.ds.avare.touch.MultiTouchController: boolean getHandleSingleTouchEvents()
com.ds.avare.touch.MultiTouchController: void setMacro(float)
com.ds.avare.touch.MultiTouchController: boolean onTouchEvent(android.view.MotionEvent)
com.ds.avare.touch.MultiTouchController: void decodeTouchEvent(int,float[],float[],float[],int[],int,boolean,long)
com.ds.avare.touch.MultiTouchController: void anchorAtThisPositionAndScale()
com.ds.avare.touch.MultiTouchController: void performDragOrPinch()
com.ds.avare.touch.MultiTouchController: void multiTouchController()
com.ds.avare.touch.MultiTouchController: int getMode()
com.ds.avare.touch.MultiTouchController: void <clinit>()
com.ds.avare.touch.MultiTouchController$MultiTouchObjectCanvas
com.ds.avare.touch.MultiTouchController$MultiTouchObjectCanvas: java.lang.Object getDraggableObjectAtPoint(com.ds.avare.touch.MultiTouchController$PointInfo)
com.ds.avare.touch.MultiTouchController$MultiTouchObjectCanvas: void getPositionAndScale(java.lang.Object,com.ds.avare.touch.MultiTouchController$PositionAndScale)
com.ds.avare.touch.MultiTouchController$MultiTouchObjectCanvas: boolean setPositionAndScale(java.lang.Object,com.ds.avare.touch.MultiTouchController$PositionAndScale,com.ds.avare.touch.MultiTouchController$PointInfo)
com.ds.avare.touch.MultiTouchController$MultiTouchObjectCanvas: void selectObject(java.lang.Object,com.ds.avare.touch.MultiTouchController$PointInfo)
com.ds.avare.touch.MultiTouchController$PointInfo
com.ds.avare.touch.MultiTouchController$PointInfo: MultiTouchController$PointInfo()
com.ds.avare.touch.MultiTouchController$PointInfo: void set(int,float[],float[],float[],int[],int,boolean,long)
com.ds.avare.touch.MultiTouchController$PointInfo: void set(com.ds.avare.touch.MultiTouchController$PointInfo)
com.ds.avare.touch.MultiTouchController$PointInfo: boolean isMultiTouch()
com.ds.avare.touch.MultiTouchController$PointInfo: float getMultiTouchWidth()
com.ds.avare.touch.MultiTouchController$PointInfo: float getMultiTouchHeight()
com.ds.avare.touch.MultiTouchController$PointInfo: int julery_isqrt(int)
com.ds.avare.touch.MultiTouchController$PointInfo: float getMultiTouchDiameterSq()
com.ds.avare.touch.MultiTouchController$PointInfo: float getMultiTouchDiameter()
com.ds.avare.touch.MultiTouchController$PointInfo: float getMultiTouchAngle()
com.ds.avare.touch.MultiTouchController$PointInfo: int getNumTouchPoints()
com.ds.avare.touch.MultiTouchController$PointInfo: float getX()
com.ds.avare.touch.MultiTouchController$PointInfo: float[] getXs()
com.ds.avare.touch.MultiTouchController$PointInfo: float getY()
com.ds.avare.touch.MultiTouchController$PointInfo: float[] getYs()
com.ds.avare.touch.MultiTouchController$PointInfo: int[] getPointerIds()
com.ds.avare.touch.MultiTouchController$PointInfo: float getPressure()
com.ds.avare.touch.MultiTouchController$PointInfo: float[] getPressures()
com.ds.avare.touch.MultiTouchController$PointInfo: boolean isDown()
com.ds.avare.touch.MultiTouchController$PointInfo: int getAction()
com.ds.avare.touch.MultiTouchController$PointInfo: long getEventTime()
com.ds.avare.touch.MultiTouchController$PointInfo: void access$300(com.ds.avare.touch.MultiTouchController$PointInfo,int,float[],float[],float[],int[],int,boolean,long)
com.ds.avare.touch.MultiTouchController$PointInfo: long access$1000(com.ds.avare.touch.MultiTouchController$PointInfo)
com.ds.avare.touch.MultiTouchController$PositionAndScale
com.ds.avare.touch.MultiTouchController$PositionAndScale: MultiTouchController$PositionAndScale()
com.ds.avare.touch.MultiTouchController$PositionAndScale: void set(float,float,boolean,float,boolean,float,float,boolean,float)
com.ds.avare.touch.MultiTouchController$PositionAndScale: void set(float,float,float,float,float,float)
com.ds.avare.touch.MultiTouchController$PositionAndScale: float getXOff()
com.ds.avare.touch.MultiTouchController$PositionAndScale: float getYOff()
com.ds.avare.touch.MultiTouchController$PositionAndScale: float getScale()
com.ds.avare.touch.MultiTouchController$PositionAndScale: float getScaleX()
com.ds.avare.touch.MultiTouchController$PositionAndScale: float getScaleY()
com.ds.avare.touch.MultiTouchController$PositionAndScale: float getAngle()
com.ds.avare.touch.MultiTouchController$PositionAndScale: boolean access$000(com.ds.avare.touch.MultiTouchController$PositionAndScale)
com.ds.avare.touch.MultiTouchController$PositionAndScale: boolean access$100(com.ds.avare.touch.MultiTouchController$PositionAndScale)
com.ds.avare.touch.MultiTouchController$PositionAndScale: boolean access$200(com.ds.avare.touch.MultiTouchController$PositionAndScale)
com.ds.avare.touch.MultiTouchController$PositionAndScale: float access$400(com.ds.avare.touch.MultiTouchController$PositionAndScale)
com.ds.avare.touch.MultiTouchController$PositionAndScale: float access$500(com.ds.avare.touch.MultiTouchController$PositionAndScale)
com.ds.avare.touch.MultiTouchController$PositionAndScale: float access$600(com.ds.avare.touch.MultiTouchController$PositionAndScale)
com.ds.avare.touch.MultiTouchController$PositionAndScale: float access$700(com.ds.avare.touch.MultiTouchController$PositionAndScale)
com.ds.avare.touch.MultiTouchController$PositionAndScale: float access$800(com.ds.avare.touch.MultiTouchController$PositionAndScale)
com.ds.avare.touch.MultiTouchController$PositionAndScale: float access$900(com.ds.avare.touch.MultiTouchController$PositionAndScale)
com.ds.avare.userDefinedWaypoints.CsvUDWParser
com.ds.avare.userDefinedWaypoints.CsvUDWParser: CsvUDWParser()
com.ds.avare.userDefinedWaypoints.CsvUDWParser: java.util.List parse(java.io.FileInputStream)
com.ds.avare.userDefinedWaypoints.GpxUDWParser
com.ds.avare.userDefinedWaypoints.GpxUDWParser: GpxUDWParser()
com.ds.avare.userDefinedWaypoints.GpxUDWParser: java.util.List parse(java.io.FileInputStream)
com.ds.avare.userDefinedWaypoints.GpxUDWParser: java.util.List readGPX(org.xmlpull.v1.XmlPullParser)
com.ds.avare.userDefinedWaypoints.GpxUDWParser: com.ds.avare.userDefinedWaypoints.Waypoint readWPT(org.xmlpull.v1.XmlPullParser)
com.ds.avare.userDefinedWaypoints.GpxUDWParser: java.lang.String readNAME(org.xmlpull.v1.XmlPullParser)
com.ds.avare.userDefinedWaypoints.GpxUDWParser: java.lang.String readText(org.xmlpull.v1.XmlPullParser)
com.ds.avare.userDefinedWaypoints.GpxUDWParser: void skip(org.xmlpull.v1.XmlPullParser)
com.ds.avare.userDefinedWaypoints.GpxUDWParser: void <clinit>()
com.ds.avare.userDefinedWaypoints.KmlUDWParser
com.ds.avare.userDefinedWaypoints.KmlUDWParser: KmlUDWParser()
com.ds.avare.userDefinedWaypoints.KmlUDWParser: java.util.List parse(java.io.FileInputStream)
com.ds.avare.userDefinedWaypoints.KmlUDWParser: java.util.List readKmlData(org.xmlpull.v1.XmlPullParser)
com.ds.avare.userDefinedWaypoints.KmlUDWParser: java.util.List readDocument(org.xmlpull.v1.XmlPullParser)
com.ds.avare.userDefinedWaypoints.KmlUDWParser: java.util.List readFolder(org.xmlpull.v1.XmlPullParser)
com.ds.avare.userDefinedWaypoints.KmlUDWParser: com.ds.avare.userDefinedWaypoints.Waypoint readWaypoint(org.xmlpull.v1.XmlPullParser)
com.ds.avare.userDefinedWaypoints.KmlUDWParser: java.lang.String readPoint(org.xmlpull.v1.XmlPullParser)
com.ds.avare.userDefinedWaypoints.KmlUDWParser: java.lang.String readName(org.xmlpull.v1.XmlPullParser)
com.ds.avare.userDefinedWaypoints.KmlUDWParser: java.lang.String readCoordinates(org.xmlpull.v1.XmlPullParser)
com.ds.avare.userDefinedWaypoints.KmlUDWParser: java.lang.String readText(org.xmlpull.v1.XmlPullParser)
com.ds.avare.userDefinedWaypoints.KmlUDWParser: void skip(org.xmlpull.v1.XmlPullParser)
com.ds.avare.userDefinedWaypoints.KmlUDWParser: void <clinit>()
com.ds.avare.userDefinedWaypoints.UDWFactory
com.ds.avare.userDefinedWaypoints.UDWFactory: UDWFactory()
com.ds.avare.userDefinedWaypoints.UDWFactory: java.util.List parse(java.lang.String)
com.ds.avare.userDefinedWaypoints.UDWMgr
com.ds.avare.userDefinedWaypoints.UDWMgr: UDWMgr(com.ds.avare.StorageService,android.content.Context)
com.ds.avare.userDefinedWaypoints.UDWMgr: int getCount()
com.ds.avare.userDefinedWaypoints.UDWMgr: void clear()
com.ds.avare.userDefinedWaypoints.UDWMgr: void forceReload()
com.ds.avare.userDefinedWaypoints.UDWMgr: void populate(java.lang.String)
com.ds.avare.userDefinedWaypoints.UDWMgr: void add(com.ds.avare.userDefinedWaypoints.Waypoint)
com.ds.avare.userDefinedWaypoints.UDWMgr: void remove(com.ds.avare.userDefinedWaypoints.Waypoint)
com.ds.avare.userDefinedWaypoints.UDWMgr: void setDipToPix(float)
com.ds.avare.userDefinedWaypoints.UDWMgr: void draw(android.graphics.Canvas,boolean,com.ds.avare.gps.GpsParams,android.graphics.Typeface,com.ds.avare.position.Origin)
com.ds.avare.userDefinedWaypoints.UDWMgr: java.lang.String whereAndHowFar(com.ds.avare.userDefinedWaypoints.Waypoint)
com.ds.avare.userDefinedWaypoints.UDWMgr: void search(java.lang.String,java.util.LinkedHashMap)
com.ds.avare.userDefinedWaypoints.UDWMgr: com.ds.avare.userDefinedWaypoints.Waypoint get(java.lang.String)
com.ds.avare.userDefinedWaypoints.UDWParser
com.ds.avare.userDefinedWaypoints.UDWParser: UDWParser()
com.ds.avare.userDefinedWaypoints.UDWParser: java.util.List parse(java.io.FileInputStream)
com.ds.avare.userDefinedWaypoints.Waypoint
com.ds.avare.userDefinedWaypoints.Waypoint: Waypoint(java.lang.String,java.lang.String,float,float,boolean,int,boolean)
com.ds.avare.userDefinedWaypoints.Waypoint: java.lang.String getName()
com.ds.avare.userDefinedWaypoints.Waypoint: java.lang.String getType()
com.ds.avare.userDefinedWaypoints.Waypoint: java.lang.String getCmt()
com.ds.avare.userDefinedWaypoints.Waypoint: float getLat()
com.ds.avare.userDefinedWaypoints.Waypoint: float getLon()
com.ds.avare.userDefinedWaypoints.Waypoint: boolean getVisible()
com.ds.avare.userDefinedWaypoints.Waypoint: boolean getLocked()
com.ds.avare.userDefinedWaypoints.Waypoint: void setMarkerType(int)
com.ds.avare.userDefinedWaypoints.Waypoint: void setVisible(boolean)
com.ds.avare.userDefinedWaypoints.Waypoint: void setCmt(java.lang.String)
com.ds.avare.userDefinedWaypoints.Waypoint: void draw(android.graphics.Canvas,com.ds.avare.position.Origin,boolean,com.ds.avare.gps.GpsParams,android.graphics.Paint,com.ds.avare.StorageService,java.lang.String,float)
com.ds.avare.utils.BitmapHolder
com.ds.avare.utils.BitmapHolder: BitmapHolder()
com.ds.avare.utils.BitmapHolder: BitmapHolder(int,int)
com.ds.avare.utils.BitmapHolder: void drawInBitmap(com.ds.avare.utils.BitmapHolder,java.lang.String,int,int)
com.ds.avare.utils.BitmapHolder: void getTileOptions(java.lang.String,com.ds.avare.storage.Preferences,int[])
com.ds.avare.utils.BitmapHolder: BitmapHolder(android.content.Context,com.ds.avare.storage.Preferences,java.lang.String,int)
com.ds.avare.utils.BitmapHolder: BitmapHolder(java.lang.String)
com.ds.avare.utils.BitmapHolder: BitmapHolder(android.content.Context,int)
com.ds.avare.utils.BitmapHolder: BitmapHolder(android.graphics.Bitmap)
com.ds.avare.utils.BitmapHolder: void recycle()
com.ds.avare.utils.BitmapHolder: int getWidth()
com.ds.avare.utils.BitmapHolder: int getHeight()
com.ds.avare.utils.BitmapHolder: java.lang.String getName()
com.ds.avare.utils.BitmapHolder: android.graphics.Bitmap getBitmap()
com.ds.avare.utils.BitmapHolder: boolean getFree()
com.ds.avare.utils.BitmapHolder: void setFree(boolean)
com.ds.avare.utils.BitmapHolder: void setFound(boolean)
com.ds.avare.utils.BitmapHolder: boolean getFound()
com.ds.avare.utils.BitmapHolder: android.graphics.Matrix getTransform()
com.ds.avare.utils.DisplayIcon
com.ds.avare.utils.DisplayIcon: DisplayIcon()
com.ds.avare.utils.DisplayIcon: com.ds.avare.utils.BitmapHolder getDisplayIcon(android.content.Context,com.ds.avare.storage.Preferences)
com.ds.avare.utils.Dms
com.ds.avare.utils.Dms: Dms()
com.ds.avare.utils.Dms: double[] fracToDMS(double)
com.ds.avare.utils.EditTextPreferenceWithSummary
com.ds.avare.utils.EditTextPreferenceWithSummary: EditTextPreferenceWithSummary(android.content.Context,android.util.AttributeSet)
com.ds.avare.utils.EditTextPreferenceWithSummary: EditTextPreferenceWithSummary(android.content.Context)
com.ds.avare.utils.EditTextPreferenceWithSummary: void setText(java.lang.String)
com.ds.avare.utils.EditTextPreferenceWithSummary: void setSummary(java.lang.CharSequence)
com.ds.avare.utils.FolderPreference
com.ds.avare.utils.FolderPreference: void init(java.lang.String)
com.ds.avare.utils.FolderPreference: FolderPreference(android.content.Context,android.util.AttributeSet)
com.ds.avare.utils.FolderPreference: void onDialogClosed(boolean)
com.ds.avare.utils.FolderPreference: android.view.View onCreateDialogView()
com.ds.avare.utils.FolderPreference: void loadFileList()
com.ds.avare.utils.FolderPreference: android.content.Context access$000(com.ds.avare.utils.FolderPreference)
com.ds.avare.utils.FolderPreference: void access$100(com.ds.avare.utils.FolderPreference,java.lang.String)
com.ds.avare.utils.FolderPreference: void access$200(com.ds.avare.utils.FolderPreference)
com.ds.avare.utils.FolderPreference: android.widget.ListAdapter access$300(com.ds.avare.utils.FolderPreference)
com.ds.avare.utils.FolderPreference: android.widget.ListView access$400(com.ds.avare.utils.FolderPreference)
com.ds.avare.utils.FolderPreference: java.lang.String access$502(com.ds.avare.utils.FolderPreference,java.lang.String)
com.ds.avare.utils.FolderPreference: com.ds.avare.utils.FolderPreference$Item[] access$600(com.ds.avare.utils.FolderPreference)
com.ds.avare.utils.FolderPreference: java.io.File access$700(com.ds.avare.utils.FolderPreference)
com.ds.avare.utils.FolderPreference: java.lang.String access$500(com.ds.avare.utils.FolderPreference)
com.ds.avare.utils.FolderPreference: java.lang.Boolean access$802(com.ds.avare.utils.FolderPreference,java.lang.Boolean)
com.ds.avare.utils.FolderPreference: java.util.ArrayList access$900(com.ds.avare.utils.FolderPreference)
com.ds.avare.utils.FolderPreference: com.ds.avare.utils.FolderPreference$Item[] access$602(com.ds.avare.utils.FolderPreference,com.ds.avare.utils.FolderPreference$Item[])
com.ds.avare.utils.FolderPreference: java.io.File access$702(com.ds.avare.utils.FolderPreference,java.io.File)
com.ds.avare.utils.FolderPreference$1
com.ds.avare.utils.FolderPreference$1: FolderPreference$1(com.ds.avare.utils.FolderPreference)
com.ds.avare.utils.FolderPreference$1: void onClick(android.view.View)
com.ds.avare.utils.FolderPreference$2
com.ds.avare.utils.FolderPreference$2: FolderPreference$2(com.ds.avare.utils.FolderPreference)
com.ds.avare.utils.FolderPreference$2: void onClick(android.view.View)
com.ds.avare.utils.FolderPreference$3
com.ds.avare.utils.FolderPreference$3: FolderPreference$3(com.ds.avare.utils.FolderPreference)
com.ds.avare.utils.FolderPreference$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.ds.avare.utils.FolderPreference$4
com.ds.avare.utils.FolderPreference$4: FolderPreference$4(com.ds.avare.utils.FolderPreference)
com.ds.avare.utils.FolderPreference$4: boolean accept(java.io.File,java.lang.String)
com.ds.avare.utils.FolderPreference$5
com.ds.avare.utils.FolderPreference$5: FolderPreference$5(com.ds.avare.utils.FolderPreference,android.content.Context,int,int,com.ds.avare.utils.FolderPreference$Item[])
com.ds.avare.utils.FolderPreference$5: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.ds.avare.utils.FolderPreference$Item
com.ds.avare.utils.FolderPreference$Item: FolderPreference$Item(com.ds.avare.utils.FolderPreference,java.lang.String,java.lang.Integer)
com.ds.avare.utils.FolderPreference$Item: java.lang.String toString()
com.ds.avare.utils.GenericCallback
com.ds.avare.utils.GenericCallback: GenericCallback()
com.ds.avare.utils.GenericCallback: java.lang.Object callback(java.lang.Object,java.lang.Object)
com.ds.avare.utils.Helper
com.ds.avare.utils.Helper: Helper()
com.ds.avare.utils.Helper: android.text.format.Time fetchRawEte(boolean,double,double,double,double)
com.ds.avare.utils.Helper: java.lang.String calculateEte(boolean,double,double,double,double)
com.ds.avare.utils.Helper: java.lang.String calculateEta(boolean,java.util.TimeZone,double,double,double,double)
com.ds.avare.utils.Helper: double truncGeo(double)
com.ds.avare.utils.Helper: boolean isSameGPSLocation(double,double,double,double)
com.ds.avare.utils.Helper: void invertCanvasColors(android.graphics.Paint)
com.ds.avare.utils.Helper: java.lang.String calculateAltitudeFromThreshold(float)
com.ds.avare.utils.Helper: java.lang.String calculateAGLFromThreshold(float,float)
com.ds.avare.utils.Helper: float calculateThreshold(double)
com.ds.avare.utils.Helper: void setThreshold(android.graphics.Paint,float)
com.ds.avare.utils.Helper: double findElevationFromPixel(int)
com.ds.avare.utils.Helper: void restoreCanvasColors(android.graphics.Paint)
com.ds.avare.utils.Helper: boolean isLongitudeSane(double)
com.ds.avare.utils.Helper: boolean isLatitudeSane(double)
com.ds.avare.utils.Helper: java.lang.String makeLine(double,java.lang.String,java.lang.String,double,double)
com.ds.avare.utils.Helper: java.lang.String makeLine2(double,java.lang.String,java.lang.String,double,double)
com.ds.avare.utils.Helper: java.lang.String correctConvertHeading(long)
com.ds.avare.utils.Helper: java.lang.String removeLeadingZeros(java.lang.String)
com.ds.avare.utils.Helper: java.lang.String centerString(java.lang.String,int)
com.ds.avare.utils.Helper: double parseVariation(java.lang.String)
com.ds.avare.utils.Helper: java.lang.String makeVariation(double)
com.ds.avare.utils.Helper: void setTheme(android.app.Activity)
com.ds.avare.utils.Helper: void setOrientationAndOn(android.app.Activity)
com.ds.avare.utils.Helper: void deleteDir(java.io.File)
com.ds.avare.utils.Helper: double getMagneticHeading(double,double)
com.ds.avare.utils.Helper: java.lang.String incTileName(java.lang.String,int,int)
com.ds.avare.utils.Helper: java.lang.String readFromFile(java.lang.String)
com.ds.avare.utils.Helper: java.util.LinkedList getShapesInTFR(android.content.Context)
com.ds.avare.utils.Helper: boolean isFrequencyUHF(double)
com.ds.avare.utils.Helper: float getDpiToPix(android.content.Context)
com.ds.avare.utils.Helper: double angularDifference(double,double)
com.ds.avare.utils.Helper: boolean leftOfCourseLine(double,double)
com.ds.avare.utils.Helper: java.lang.String millisToGMT(long)
com.ds.avare.utils.Helper: long getMillisGMT()
com.ds.avare.utils.Helper: double getSpeedInKnots(double)
com.ds.avare.utils.Helper: android.graphics.Bitmap getResizedBitmap(android.graphics.Bitmap,int,int,double)
com.ds.avare.utils.Helper: java.lang.String readFromAssetsFile(java.lang.String,android.content.Context)
com.ds.avare.utils.Helper: boolean writeFile(java.lang.String,java.lang.String)
com.ds.avare.utils.Helper: java.lang.String formatJsArgs(java.lang.String)
com.ds.avare.utils.Helper: java.lang.String getWebViewFile(android.content.Context,java.lang.String)
com.ds.avare.utils.InfoLines
com.ds.avare.utils.InfoLines: float getHeight()
com.ds.avare.utils.InfoLines: com.ds.avare.utils.InfoLines$InfoLineFieldLoc findField(android.graphics.Paint,float,float)
com.ds.avare.utils.InfoLines: boolean isShowing(int)
com.ds.avare.utils.InfoLines: void setFieldType(com.ds.avare.utils.InfoLines$InfoLineFieldLoc,int)
com.ds.avare.utils.InfoLines: InfoLines(com.ds.avare.StorageService)
com.ds.avare.utils.InfoLines: void touch(com.ds.avare.utils.InfoLines$InfoLineFieldLoc)
com.ds.avare.utils.InfoLines: void longPress(com.ds.avare.utils.InfoLines$InfoLineFieldLoc)
com.ds.avare.utils.InfoLines: void setRowCount()
com.ds.avare.utils.InfoLines: boolean rangeCheck(com.ds.avare.utils.InfoLines$InfoLineFieldLoc,int)
com.ds.avare.utils.InfoLines: void drawCornerTextsDynamic(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.String,java.lang.String)
com.ds.avare.utils.InfoLines: void resizeFields(android.graphics.Paint,int,int)
com.ds.avare.utils.InfoLines: java.lang.String getDisplayFieldValue(int,boolean)
com.ds.avare.utils.InfoLines: java.lang.String getFmtString(double)
com.ds.avare.utils.InfoLines: java.lang.String buildConfigString()
com.ds.avare.utils.InfoLines$1
com.ds.avare.utils.InfoLines$InfoLineFieldLoc
com.ds.avare.utils.InfoLines$InfoLineFieldLoc: InfoLines$InfoLineFieldLoc(com.ds.avare.utils.InfoLines,int,int,java.lang.String[],int)
com.ds.avare.utils.InfoLines$InfoLineFieldLoc: java.lang.String[] getOptions()
com.ds.avare.utils.InfoLines$InfoLineFieldLoc: int getSelected()
com.ds.avare.utils.InfoLines$InfoLineFieldLoc: InfoLines$InfoLineFieldLoc(com.ds.avare.utils.InfoLines,int,int,java.lang.String[],int,com.ds.avare.utils.InfoLines$1)
com.ds.avare.utils.InfoLines$InfoLineFieldLoc: java.lang.String[] access$100(com.ds.avare.utils.InfoLines$InfoLineFieldLoc)
com.ds.avare.utils.InfoLines$InfoLineFieldLoc: int access$200(com.ds.avare.utils.InfoLines$InfoLineFieldLoc)
com.ds.avare.utils.InfoLines$InfoLineFieldLoc: int access$300(com.ds.avare.utils.InfoLines$InfoLineFieldLoc)
com.ds.avare.utils.ListPreferenceWithSummary
com.ds.avare.utils.ListPreferenceWithSummary: ListPreferenceWithSummary(android.content.Context,android.util.AttributeSet)
com.ds.avare.utils.ListPreferenceWithSummary: ListPreferenceWithSummary(android.content.Context)
com.ds.avare.utils.ListPreferenceWithSummary: void setValue(java.lang.String)
com.ds.avare.utils.ListPreferenceWithSummary: void setSummary(java.lang.CharSequence)
com.ds.avare.utils.Mutex
com.ds.avare.utils.Mutex: Mutex()
com.ds.avare.utils.Mutex: void unlock()
com.ds.avare.utils.Mutex: void lock()
com.ds.avare.utils.NavComments
com.ds.avare.utils.NavComments: NavComments()
com.ds.avare.utils.NavComments: void clear()
com.ds.avare.utils.NavComments: void setLeft(java.lang.String)
com.ds.avare.utils.NavComments: void setRight(java.lang.String)
com.ds.avare.utils.NavComments: void draw(android.view.View,android.graphics.Canvas,android.graphics.Paint,com.ds.avare.utils.ShadowedText)
com.ds.avare.utils.NetworkHelper
com.ds.avare.utils.NetworkHelper: NetworkHelper()
com.ds.avare.utils.NetworkHelper: java.lang.String getDonationURL(java.lang.String)
com.ds.avare.utils.NetworkHelper: java.lang.String getNAMMET(java.lang.String)
com.ds.avare.utils.NetworkHelper: java.lang.String getMETAR(java.lang.String)
com.ds.avare.utils.NetworkHelper: java.lang.String getTAF(java.lang.String)
com.ds.avare.utils.NetworkHelper: java.lang.String getPIREPS(java.lang.String,java.lang.String)
com.ds.avare.utils.NetworkHelper: java.lang.String getMETARPlan(java.lang.String,java.lang.String)
com.ds.avare.utils.NetworkHelper: java.lang.String getTAFPlan(java.lang.String,java.lang.String)
com.ds.avare.utils.NetworkHelper: java.lang.String getPIREPSPlan(java.lang.String,java.lang.String)
com.ds.avare.utils.NetworkHelper: java.lang.String getHelpUrl(android.content.Context)
com.ds.avare.utils.NetworkHelper: java.lang.String getUrl(java.lang.String,java.lang.String,java.lang.String)
com.ds.avare.utils.NetworkHelper: int getFirstDate(int)
com.ds.avare.utils.NetworkHelper: java.lang.String getCycle()
com.ds.avare.utils.NetworkHelper: boolean isExpired(java.lang.String)
com.ds.avare.utils.NetworkHelper: java.lang.String getVersion(java.lang.String,java.lang.String,boolean[])
com.ds.avare.utils.NetworkHelper: java.lang.String getVersionNetwork(java.lang.String)
com.ds.avare.utils.NetworkHelper: java.lang.String getVersionRange(java.lang.String)
com.ds.avare.utils.NetworkHelper: java.lang.String findCycleOffset(java.lang.String,int)
com.ds.avare.utils.NetworkHelper: java.lang.String getNotams(java.lang.String)
com.ds.avare.utils.PossibleEmail
com.ds.avare.utils.PossibleEmail: PossibleEmail()
com.ds.avare.utils.PossibleEmail: java.lang.String[] getAll(android.content.Context)
com.ds.avare.utils.PossibleEmail: java.lang.String get(android.content.Context)
com.ds.avare.utils.RegisterActivityPreference
com.ds.avare.utils.RegisterActivityPreference: RegisterActivityPreference(android.content.Context,android.util.AttributeSet)
com.ds.avare.utils.RegisterActivityPreference: void onDialogClosed(boolean)
com.ds.avare.utils.RegisterActivityPreference: void onClick(android.content.DialogInterface,int)
com.ds.avare.utils.SAXXMLHandlerMETAR
com.ds.avare.utils.SAXXMLHandlerMETAR: SAXXMLHandlerMETAR()
com.ds.avare.utils.SAXXMLHandlerMETAR: java.util.List getText()
com.ds.avare.utils.SAXXMLHandlerMETAR: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)
com.ds.avare.utils.SAXXMLHandlerMETAR: void characters(char[],int,int)
com.ds.avare.utils.SAXXMLHandlerMETAR: void endElement(java.lang.String,java.lang.String,java.lang.String)
com.ds.avare.utils.SAXXMLHandlerPIREP
com.ds.avare.utils.SAXXMLHandlerPIREP: SAXXMLHandlerPIREP()
com.ds.avare.utils.SAXXMLHandlerPIREP: java.util.List getText()
com.ds.avare.utils.SAXXMLHandlerPIREP: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)
com.ds.avare.utils.SAXXMLHandlerPIREP: void characters(char[],int,int)
com.ds.avare.utils.SAXXMLHandlerPIREP: void endElement(java.lang.String,java.lang.String,java.lang.String)
com.ds.avare.utils.SAXXMLHandlerTAF
com.ds.avare.utils.SAXXMLHandlerTAF: SAXXMLHandlerTAF()
com.ds.avare.utils.SAXXMLHandlerTAF: java.util.List getText()
com.ds.avare.utils.SAXXMLHandlerTAF: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)
com.ds.avare.utils.SAXXMLHandlerTAF: void characters(char[],int,int)
com.ds.avare.utils.SAXXMLHandlerTAF: void endElement(java.lang.String,java.lang.String,java.lang.String)
com.ds.avare.utils.ShadowedText
com.ds.avare.utils.ShadowedText: ShadowedText(android.content.Context)
com.ds.avare.utils.ShadowedText: void draw(android.graphics.Canvas,android.graphics.Paint,java.lang.String,int,float,float)
com.ds.avare.utils.ShadowedText: void draw(android.graphics.Canvas,android.graphics.Paint,java.lang.String,int,int,float,float)
com.ds.avare.utils.TwilightCalculator
com.ds.avare.utils.TwilightCalculator: TwilightCalculator()
com.ds.avare.utils.TwilightCalculator: java.lang.String getSunrise()
com.ds.avare.utils.TwilightCalculator: java.lang.String getSunset()
com.ds.avare.utils.TwilightCalculator: void calculateTwilight(double,double)
com.ds.avare.utils.USGSElevation
com.ds.avare.utils.USGSElevation: USGSElevation()
com.ds.avare.utils.USGSElevation: double getAltitude(java.lang.Double,java.lang.Double)
com.ds.avare.utils.VerticalSeekBar
com.ds.avare.utils.VerticalSeekBar: VerticalSeekBar(android.content.Context)
com.ds.avare.utils.VerticalSeekBar: VerticalSeekBar(android.content.Context,android.util.AttributeSet,int)
com.ds.avare.utils.VerticalSeekBar: VerticalSeekBar(android.content.Context,android.util.AttributeSet)
com.ds.avare.utils.VerticalSeekBar: void onSizeChanged(int,int,int,int)
com.ds.avare.utils.VerticalSeekBar: void onMeasure(int,int)
com.ds.avare.utils.VerticalSeekBar: void onDraw(android.graphics.Canvas)
com.ds.avare.utils.VerticalSeekBar: boolean onTouchEvent(android.view.MotionEvent)
com.ds.avare.utils.WeatherHelper
com.ds.avare.utils.WeatherHelper: WeatherHelper()
com.ds.avare.utils.WeatherHelper: int metarColor(java.lang.String)
com.ds.avare.utils.WeatherHelper: java.lang.String metarColorString(java.lang.String)
com.ds.avare.utils.WeatherHelper: java.lang.String formatWeather(java.lang.String)
com.ds.avare.utils.WeatherHelper: java.lang.String formatWeatherHTML(java.lang.String,boolean)
com.ds.avare.utils.WeatherHelper: java.lang.String formatTafHTML(java.lang.String,boolean)
com.ds.avare.utils.WeatherHelper: java.lang.String formatMetarHTML(java.lang.String,boolean)
com.ds.avare.utils.WeatherHelper: java.lang.String formatWindsHTML(java.lang.String,boolean)
com.ds.avare.utils.WeatherHelper: java.lang.String formatPirepHTML(java.lang.String,boolean)
com.ds.avare.utils.WeatherHelper: java.lang.String formatVisibilityHTML(java.lang.String)
com.ds.avare.utils.WeatherHelper: java.lang.String decodeWind(java.lang.String)
com.ds.avare.utils.WeatherHelper: java.lang.String getNamMosLegend()
com.ds.avare.utils.WeatherHelper: java.lang.String getMetarTime(java.lang.String)
com.ds.avare.utils.WeatherHelper: java.lang.String getDensityAltitude(java.lang.String,java.lang.String)
com.ds.avare.utils.WeatherHelper: java.lang.String getBestRunway(java.lang.String,java.util.LinkedList)
com.ds.avare.views.AfdView
com.ds.avare.views.AfdView: void setup(android.content.Context)
com.ds.avare.views.AfdView: AfdView(android.content.Context)
com.ds.avare.views.AfdView: AfdView(android.content.Context,android.util.AttributeSet)
com.ds.avare.views.AfdView: AfdView(android.content.Context,android.util.AttributeSet,int)
com.ds.avare.views.AfdView: boolean onTouch(android.view.View,android.view.MotionEvent)
com.ds.avare.views.AfdView: void setBitmap(com.ds.avare.utils.BitmapHolder)
com.ds.avare.views.AfdView: java.lang.Object getDraggableObjectAtPoint(com.ds.avare.touch.MultiTouchController$PointInfo)
com.ds.avare.views.AfdView: void getPositionAndScale(java.lang.Object,com.ds.avare.touch.MultiTouchController$PositionAndScale)
com.ds.avare.views.AfdView: void selectObject(java.lang.Object,com.ds.avare.touch.MultiTouchController$PointInfo)
com.ds.avare.views.AfdView: boolean setPositionAndScale(java.lang.Object,com.ds.avare.touch.MultiTouchController$PositionAndScale,com.ds.avare.touch.MultiTouchController$PointInfo)
com.ds.avare.views.AfdView: void touchPointChanged(com.ds.avare.touch.MultiTouchController$PointInfo)
com.ds.avare.views.AfdView: void center()
com.ds.avare.views.AfdView: void onDraw(android.graphics.Canvas)
com.ds.avare.views.AfdView$1
com.ds.avare.views.AfdView$GestureListener
com.ds.avare.views.AfdView$GestureListener: AfdView$GestureListener(com.ds.avare.views.AfdView)
com.ds.avare.views.AfdView$GestureListener: void onLongPress(android.view.MotionEvent)
com.ds.avare.views.AfdView$GestureListener: AfdView$GestureListener(com.ds.avare.views.AfdView,com.ds.avare.views.AfdView$1)
com.ds.avare.views.LocationView
com.ds.avare.views.LocationView: void setup(android.content.Context)
com.ds.avare.views.LocationView: void updateCoordinates()
com.ds.avare.views.LocationView: LocationView(android.content.Context)
com.ds.avare.views.LocationView: LocationView(android.content.Context,android.util.AttributeSet)
com.ds.avare.views.LocationView: LocationView(android.content.Context,android.util.AttributeSet,int)
com.ds.avare.views.LocationView: void onDraw(android.graphics.Canvas)
com.ds.avare.views.LocationView: void rubberBand(float,float,boolean)
com.ds.avare.views.LocationView: boolean onTouch(android.view.View,android.view.MotionEvent)
com.ds.avare.views.LocationView: android.graphics.Point getFocusPoint(android.view.MotionEvent)
com.ds.avare.views.LocationView: java.lang.Object getDraggableObjectAtPoint(com.ds.avare.touch.MultiTouchController$PointInfo)
com.ds.avare.views.LocationView: void getPositionAndScale(java.lang.Object,com.ds.avare.touch.MultiTouchController$PositionAndScale)
com.ds.avare.views.LocationView: void selectObject(java.lang.Object,com.ds.avare.touch.MultiTouchController$PointInfo)
com.ds.avare.views.LocationView: boolean setPositionAndScale(java.lang.Object,com.ds.avare.touch.MultiTouchController$PositionAndScale,com.ds.avare.touch.MultiTouchController$PointInfo)
com.ds.avare.views.LocationView: void touchPointChanged(com.ds.avare.touch.MultiTouchController$PointInfo)
com.ds.avare.views.LocationView: void dbquery(boolean)
com.ds.avare.views.LocationView: void rotateBitmapIntoPlace(com.ds.avare.utils.BitmapHolder,float,double,double,boolean)
com.ds.avare.views.LocationView: void drawTiles(android.graphics.Canvas)
com.ds.avare.views.LocationView: void drawTFR(android.graphics.Canvas)
com.ds.avare.views.LocationView: void drawAirSigMet(android.graphics.Canvas)
com.ds.avare.views.LocationView: void drawRadar(android.graphics.Canvas)
com.ds.avare.views.LocationView: void drawNexrad(android.graphics.Canvas)
com.ds.avare.views.LocationView: void drawTraffic(android.graphics.Canvas)
com.ds.avare.views.LocationView: void drawTrack(android.graphics.Canvas)
com.ds.avare.views.LocationView: void drawDrawing(android.graphics.Canvas)
com.ds.avare.views.LocationView: void drawObstacles(android.graphics.Canvas)
com.ds.avare.views.LocationView: void drawAircraft(android.graphics.Canvas)
com.ds.avare.views.LocationView: void drawRunways(android.graphics.Canvas)
com.ds.avare.views.LocationView: void drawDistanceRings(android.graphics.Canvas)
com.ds.avare.views.LocationView: void drawTracks(android.graphics.Canvas)
com.ds.avare.views.LocationView: void drawCDI(android.graphics.Canvas)
com.ds.avare.views.LocationView: void drawVASI(android.graphics.Canvas)
com.ds.avare.views.LocationView: void drawEdgeMarkers(android.graphics.Canvas)
com.ds.avare.views.LocationView: void drawUserDefinedWaypoints(android.graphics.Canvas)
com.ds.avare.views.LocationView: void drawCapGrids(android.graphics.Canvas)
com.ds.avare.views.LocationView: void drawStatusLines(android.graphics.Canvas)
com.ds.avare.views.LocationView: void drawNavComments(android.graphics.Canvas)
com.ds.avare.views.LocationView: void drawMap(android.graphics.Canvas)
com.ds.avare.views.LocationView: void updateThreshold(float)
com.ds.avare.views.LocationView: void updateDestination()
com.ds.avare.views.LocationView: void forceReload()
com.ds.avare.views.LocationView: void updateParams(com.ds.avare.gps.GpsParams)
com.ds.avare.views.LocationView: void initParams(com.ds.avare.gps.GpsParams,com.ds.avare.StorageService)
com.ds.avare.views.LocationView: void updateErrorStatus(java.lang.String)
com.ds.avare.views.LocationView: void center()
com.ds.avare.views.LocationView: void startClosestAirportTask(double,double)
com.ds.avare.views.LocationView: void setGestureCallback(com.ds.avare.touch.GestureInterface)
com.ds.avare.views.LocationView: void setDraw(boolean)
com.ds.avare.views.LocationView: boolean getDraw()
com.ds.avare.views.LocationView: void setTrackUp(boolean)
com.ds.avare.views.LocationView: java.lang.String getPriorityMessage()
com.ds.avare.views.LocationView: void cleanup()
com.ds.avare.views.LocationView: void zoomOut()
com.ds.avare.views.LocationView: com.ds.avare.StorageService access$300(com.ds.avare.views.LocationView)
com.ds.avare.views.LocationView: com.ds.avare.storage.DataSource access$400(com.ds.avare.views.LocationView)
com.ds.avare.views.LocationView: com.ds.avare.position.Scale access$500(com.ds.avare.views.LocationView)
com.ds.avare.views.LocationView: int access$600(com.ds.avare.views.LocationView)
com.ds.avare.views.LocationView: com.ds.avare.position.Pan access$700(com.ds.avare.views.LocationView)
com.ds.avare.views.LocationView: android.os.Handler access$1500(com.ds.avare.views.LocationView)
com.ds.avare.views.LocationView: com.ds.avare.storage.Preferences access$1600(com.ds.avare.views.LocationView)
com.ds.avare.views.LocationView: android.content.Context access$1700(com.ds.avare.views.LocationView)
com.ds.avare.views.LocationView: com.ds.avare.position.Projection access$1802(com.ds.avare.views.LocationView,com.ds.avare.position.Projection)
com.ds.avare.views.LocationView: com.ds.avare.gps.GpsParams access$1900(com.ds.avare.views.LocationView)
com.ds.avare.views.LocationView: com.ds.avare.touch.GestureInterface access$2000(com.ds.avare.views.LocationView)
com.ds.avare.views.LocationView: com.ds.avare.position.Projection access$1800(com.ds.avare.views.LocationView)
com.ds.avare.views.LocationView: android.graphics.Paint access$2400(com.ds.avare.views.LocationView)
com.ds.avare.views.LocationView: boolean access$2500(com.ds.avare.views.LocationView)
com.ds.avare.views.LocationView: java.lang.String access$2702(com.ds.avare.views.LocationView,java.lang.String)
com.ds.avare.views.LocationView: com.ds.avare.position.Movement access$2802(com.ds.avare.views.LocationView,com.ds.avare.position.Movement)
com.ds.avare.views.LocationView: com.ds.avare.position.Movement access$2800(com.ds.avare.views.LocationView)
com.ds.avare.views.LocationView: int access$602(com.ds.avare.views.LocationView,int)
com.ds.avare.views.LocationView: com.ds.avare.touch.MultiTouchController access$2900(com.ds.avare.views.LocationView)
com.ds.avare.views.LocationView: float access$3002(com.ds.avare.views.LocationView,float)
com.ds.avare.views.LocationView: float access$3102(com.ds.avare.views.LocationView,float)
com.ds.avare.views.LocationView: void access$3200(com.ds.avare.views.LocationView)
com.ds.avare.views.LocationView: java.util.LinkedList access$3302(com.ds.avare.views.LocationView,java.util.LinkedList)
com.ds.avare.views.LocationView$1
com.ds.avare.views.LocationView$1: LocationView$1(com.ds.avare.views.LocationView)
com.ds.avare.views.LocationView$1: void handleMessage(android.os.Message)
com.ds.avare.views.LocationView$ClosestAirportTask
com.ds.avare.views.LocationView$ClosestAirportTask: LocationView$ClosestAirportTask(com.ds.avare.views.LocationView)
com.ds.avare.views.LocationView$ClosestAirportTask: java.lang.String doInBackground(java.lang.Object[])
com.ds.avare.views.LocationView$ClosestAirportTask: void onPostExecute(java.lang.String)
com.ds.avare.views.LocationView$ClosestAirportTask: void onPostExecute(java.lang.Object)
com.ds.avare.views.LocationView$ClosestAirportTask: java.lang.Object doInBackground(java.lang.Object[])
com.ds.avare.views.LocationView$ClosestAirportTask: LocationView$ClosestAirportTask(com.ds.avare.views.LocationView,com.ds.avare.views.LocationView$1)
com.ds.avare.views.LocationView$ElevationTask
com.ds.avare.views.LocationView$ElevationTask: LocationView$ElevationTask(com.ds.avare.views.LocationView)
com.ds.avare.views.LocationView$ElevationTask: void run()
com.ds.avare.views.LocationView$ElevationTask: LocationView$ElevationTask(com.ds.avare.views.LocationView,com.ds.avare.views.LocationView$1)
com.ds.avare.views.LocationView$ElevationUpdate
com.ds.avare.views.LocationView$ElevationUpdate: LocationView$ElevationUpdate(com.ds.avare.views.LocationView)
com.ds.avare.views.LocationView$ElevationUpdate: LocationView$ElevationUpdate(com.ds.avare.views.LocationView,com.ds.avare.views.LocationView$1)
com.ds.avare.views.LocationView$ElevationUpdate: double access$2202(com.ds.avare.views.LocationView$ElevationUpdate,double)
com.ds.avare.views.LocationView$ElevationUpdate: java.util.LinkedList access$2302(com.ds.avare.views.LocationView$ElevationUpdate,java.util.LinkedList)
com.ds.avare.views.LocationView$ElevationUpdate: double access$2200(com.ds.avare.views.LocationView$ElevationUpdate)
com.ds.avare.views.LocationView$ElevationUpdate: java.util.LinkedList access$2300(com.ds.avare.views.LocationView$ElevationUpdate)
com.ds.avare.views.LocationView$GestureListener
com.ds.avare.views.LocationView$GestureListener: LocationView$GestureListener(com.ds.avare.views.LocationView)
com.ds.avare.views.LocationView$GestureListener: boolean onDown(android.view.MotionEvent)
com.ds.avare.views.LocationView$GestureListener: boolean onSingleTapConfirmed(android.view.MotionEvent)
com.ds.avare.views.LocationView$GestureListener: boolean onDoubleTap(android.view.MotionEvent)
com.ds.avare.views.LocationView$GestureListener: void onLongPress(android.view.MotionEvent)
com.ds.avare.views.LocationView$GestureListener: LocationView$GestureListener(com.ds.avare.views.LocationView,com.ds.avare.views.LocationView$1)
com.ds.avare.views.LocationView$TileDrawTask
com.ds.avare.views.LocationView$TileDrawTask: LocationView$TileDrawTask(com.ds.avare.views.LocationView)
com.ds.avare.views.LocationView$TileDrawTask: void run()
com.ds.avare.views.LocationView$TileDrawTask: LocationView$TileDrawTask(com.ds.avare.views.LocationView,com.ds.avare.views.LocationView$1)
com.ds.avare.views.LocationView$TileUpdate
com.ds.avare.views.LocationView$TileUpdate: LocationView$TileUpdate(com.ds.avare.views.LocationView)
com.ds.avare.views.LocationView$TileUpdate: LocationView$TileUpdate(com.ds.avare.views.LocationView,com.ds.avare.views.LocationView$1)
com.ds.avare.views.LocationView$TileUpdate: int access$902(com.ds.avare.views.LocationView$TileUpdate,int)
com.ds.avare.views.LocationView$TileUpdate: int access$1002(com.ds.avare.views.LocationView$TileUpdate,int)
com.ds.avare.views.LocationView$TileUpdate: com.ds.avare.shapes.Tile access$1102(com.ds.avare.views.LocationView$TileUpdate,com.ds.avare.shapes.Tile)
com.ds.avare.views.LocationView$TileUpdate: double[] access$1202(com.ds.avare.views.LocationView$TileUpdate,double[])
com.ds.avare.views.LocationView$TileUpdate: double[] access$1302(com.ds.avare.views.LocationView$TileUpdate,double[])
com.ds.avare.views.LocationView$TileUpdate: float access$1402(com.ds.avare.views.LocationView$TileUpdate,float)
com.ds.avare.views.LocationView$TileUpdate: float access$1400(com.ds.avare.views.LocationView$TileUpdate)
com.ds.avare.views.LocationView$TileUpdate: com.ds.avare.shapes.Tile access$1100(com.ds.avare.views.LocationView$TileUpdate)
com.ds.avare.views.LocationView$TileUpdate: int access$900(com.ds.avare.views.LocationView$TileUpdate)
com.ds.avare.views.LocationView$TileUpdate: int access$1000(com.ds.avare.views.LocationView$TileUpdate)
com.ds.avare.views.LocationView$TileUpdate: double[] access$1200(com.ds.avare.views.LocationView$TileUpdate)
com.ds.avare.views.LocationView$TileUpdate: double[] access$1300(com.ds.avare.views.LocationView$TileUpdate)
com.ds.avare.views.MemView
com.ds.avare.views.MemView: void setup(android.content.Context)
com.ds.avare.views.MemView: MemView(android.content.Context)
com.ds.avare.views.MemView: MemView(android.content.Context,android.util.AttributeSet)
com.ds.avare.views.MemView: MemView(android.content.Context,android.util.AttributeSet,int)
com.ds.avare.views.MemView: void updateMemStatus(float)
com.ds.avare.views.MemView: void onDraw(android.graphics.Canvas)
com.ds.avare.views.PlatesTagView
com.ds.avare.views.PlatesTagView: void setup(android.content.Context)
com.ds.avare.views.PlatesTagView: PlatesTagView(android.content.Context)
com.ds.avare.views.PlatesTagView: PlatesTagView(android.content.Context,android.util.AttributeSet)
com.ds.avare.views.PlatesTagView: PlatesTagView(android.content.Context,android.util.AttributeSet,int)
com.ds.avare.views.PlatesTagView: boolean onTouch(android.view.View,android.view.MotionEvent)
com.ds.avare.views.PlatesTagView: void setBitmap(com.ds.avare.utils.BitmapHolder)
com.ds.avare.views.PlatesTagView: java.lang.Object getDraggableObjectAtPoint(com.ds.avare.touch.MultiTouchController$PointInfo)
com.ds.avare.views.PlatesTagView: void getPositionAndScale(java.lang.Object,com.ds.avare.touch.MultiTouchController$PositionAndScale)
com.ds.avare.views.PlatesTagView: void selectObject(java.lang.Object,com.ds.avare.touch.MultiTouchController$PointInfo)
com.ds.avare.views.PlatesTagView: boolean setPositionAndScale(java.lang.Object,com.ds.avare.touch.MultiTouchController$PositionAndScale,com.ds.avare.touch.MultiTouchController$PointInfo)
com.ds.avare.views.PlatesTagView: void touchPointChanged(com.ds.avare.touch.MultiTouchController$PointInfo)
com.ds.avare.views.PlatesTagView: void onDraw(android.graphics.Canvas)
com.ds.avare.views.PlatesTagView: void verify(double,double)
com.ds.avare.views.PlatesTagView: void center()
com.ds.avare.views.PlatesTagView: int getx()
com.ds.avare.views.PlatesTagView: int gety()
com.ds.avare.views.PlatesTagView: void setAirport(java.lang.String,float,float)
com.ds.avare.views.PlatesTagView: void unsetAirport()
com.ds.avare.views.PlatesView
com.ds.avare.views.PlatesView: void setup(android.content.Context)
com.ds.avare.views.PlatesView: PlatesView(android.content.Context)
com.ds.avare.views.PlatesView: PlatesView(android.content.Context,android.util.AttributeSet)
com.ds.avare.views.PlatesView: PlatesView(android.content.Context,android.util.AttributeSet,int)
com.ds.avare.views.PlatesView: void updateParams(com.ds.avare.gps.GpsParams)
com.ds.avare.views.PlatesView: void updateErrorStatus(java.lang.String)
com.ds.avare.views.PlatesView: boolean onTouch(android.view.View,android.view.MotionEvent)
com.ds.avare.views.PlatesView: void setBitmap(com.ds.avare.utils.BitmapHolder)
com.ds.avare.views.PlatesView: java.lang.Object getDraggableObjectAtPoint(com.ds.avare.touch.MultiTouchController$PointInfo)
com.ds.avare.views.PlatesView: void getPositionAndScale(java.lang.Object,com.ds.avare.touch.MultiTouchController$PositionAndScale)
com.ds.avare.views.PlatesView: void selectObject(java.lang.Object,com.ds.avare.touch.MultiTouchController$PointInfo)
com.ds.avare.views.PlatesView: boolean setPositionAndScale(java.lang.Object,com.ds.avare.touch.MultiTouchController$PositionAndScale,com.ds.avare.touch.MultiTouchController$PointInfo)
com.ds.avare.views.PlatesView: void drawDrawing(android.graphics.Canvas)
com.ds.avare.views.PlatesView: void setParams(float[],boolean)
com.ds.avare.views.PlatesView: void touchPointChanged(com.ds.avare.touch.MultiTouchController$PointInfo)
com.ds.avare.views.PlatesView: void onDraw(android.graphics.Canvas)
com.ds.avare.views.PlatesView: void setService(com.ds.avare.StorageService)
com.ds.avare.views.PlatesView: void center()
com.ds.avare.views.PlatesView: void setDraw(boolean)
com.ds.avare.views.PlatesView: boolean getDraw()
com.ds.avare.views.PlatesView: void setAirport(java.lang.String,double,double)
com.ds.avare.views.PlatesView: void adjustZoom(double)
com.ds.avare.views.PlatesView: com.ds.avare.StorageService access$100(com.ds.avare.views.PlatesView)
com.ds.avare.views.PlatesView$1
com.ds.avare.views.PlatesView$GestureListener
com.ds.avare.views.PlatesView$GestureListener: PlatesView$GestureListener(com.ds.avare.views.PlatesView)
com.ds.avare.views.PlatesView$GestureListener: void onLongPress(android.view.MotionEvent)
com.ds.avare.views.PlatesView$GestureListener: boolean onDown(android.view.MotionEvent)
com.ds.avare.views.PlatesView$GestureListener: PlatesView$GestureListener(com.ds.avare.views.PlatesView,com.ds.avare.views.PlatesView$1)
com.ds.avare.views.SatelliteView
com.ds.avare.views.SatelliteView: void setup(android.content.Context)
com.ds.avare.views.SatelliteView: SatelliteView(android.content.Context)
com.ds.avare.views.SatelliteView: SatelliteView(android.content.Context,android.util.AttributeSet)
com.ds.avare.views.SatelliteView: SatelliteView(android.content.Context,android.util.AttributeSet,int)
com.ds.avare.views.SatelliteView: void updateGpsStatus(android.location.GpsStatus)
com.ds.avare.views.SatelliteView: void onDraw(android.graphics.Canvas)
com.ds.avare.weather.AdsbWeatherCache
com.ds.avare.weather.AdsbWeatherCache: AdsbWeatherCache(android.content.Context)
com.ds.avare.weather.AdsbWeatherCache: com.ds.avare.adsb.NexradImage getNexrad()
com.ds.avare.weather.AdsbWeatherCache: com.ds.avare.adsb.NexradImageConus getNexradConus()
com.ds.avare.weather.AdsbWeatherCache: void putMetar(long,java.lang.String,java.lang.String)
com.ds.avare.weather.AdsbWeatherCache: void putTaf(long,java.lang.String,java.lang.String)
com.ds.avare.weather.AdsbWeatherCache: void putAirep(long,java.lang.String,java.lang.String,com.ds.avare.storage.DataSource)
com.ds.avare.weather.AdsbWeatherCache: void putWinds(long,java.lang.String,java.lang.String)
com.ds.avare.weather.AdsbWeatherCache: void putImg(long,int,int[],boolean,int[],int,int)
com.ds.avare.weather.AdsbWeatherCache: com.ds.avare.weather.Taf getTaf(java.lang.String)
com.ds.avare.weather.AdsbWeatherCache: com.ds.avare.weather.Metar getMETAR(java.lang.String)
com.ds.avare.weather.AdsbWeatherCache: java.util.LinkedList getAireps(double,double)
com.ds.avare.weather.AdsbWeatherCache: com.ds.avare.weather.WindsAloft getWindsAloft(double,double)
com.ds.avare.weather.AdsbWeatherCache: void sweep()
com.ds.avare.weather.AirSigMet
com.ds.avare.weather.AirSigMet: AirSigMet()
com.ds.avare.weather.Airep
com.ds.avare.weather.Airep: Airep()
com.ds.avare.weather.Airep: Airep(com.ds.avare.weather.Airep)
com.ds.avare.weather.Airep: void updateTextWithLocation(double,double,double)
com.ds.avare.weather.InternetWeatherCache
com.ds.avare.weather.InternetWeatherCache: InternetWeatherCache()
com.ds.avare.weather.InternetWeatherCache: void parse(com.ds.avare.StorageService)
com.ds.avare.weather.InternetWeatherCache: java.util.LinkedList getAirSigMet()
com.ds.avare.weather.InternetWeatherCache: java.util.LinkedList access$102(com.ds.avare.weather.InternetWeatherCache,java.util.LinkedList)
com.ds.avare.weather.InternetWeatherCache: com.ds.avare.StorageService access$200(com.ds.avare.weather.InternetWeatherCache)
com.ds.avare.weather.InternetWeatherCache: java.util.LinkedList access$100(com.ds.avare.weather.InternetWeatherCache)
com.ds.avare.weather.InternetWeatherCache$1
com.ds.avare.weather.InternetWeatherCache$WeatherTask
com.ds.avare.weather.InternetWeatherCache$WeatherTask: InternetWeatherCache$WeatherTask(com.ds.avare.weather.InternetWeatherCache)
com.ds.avare.weather.InternetWeatherCache$WeatherTask: void run()
com.ds.avare.weather.InternetWeatherCache$WeatherTask: InternetWeatherCache$WeatherTask(com.ds.avare.weather.InternetWeatherCache,com.ds.avare.weather.InternetWeatherCache$1)
com.ds.avare.weather.Metar
com.ds.avare.weather.Metar: Metar()
com.ds.avare.weather.Stations
com.ds.avare.weather.Stations: Stations()
com.ds.avare.weather.Stations: boolean getStationLocation(java.lang.String,float[])
com.ds.avare.weather.Stations: void <clinit>()
com.ds.avare.weather.Taf
com.ds.avare.weather.Taf: Taf()
com.ds.avare.weather.WindsAloft
com.ds.avare.weather.WindsAloft: WindsAloft()
com.ds.avare.weather.WindsAloft: WindsAloft(com.ds.avare.weather.WindsAloft)
com.ds.avare.weather.WindsAloft: void updateStationWithLocation(double,double,double)
com.ds.avare.webinfc.WebAppInterface
com.ds.avare.webinfc.WebAppInterface: WebAppInterface(android.content.Context,android.webkit.WebView,com.ds.avare.utils.GenericCallback)
com.ds.avare.webinfc.WebAppInterface: void connect(com.ds.avare.StorageService)
com.ds.avare.webinfc.WebAppInterface: java.lang.String checkNull(java.lang.String)
com.ds.avare.webinfc.WebAppInterface: void fillPlan()
com.ds.avare.webinfc.WebAppInterface: void moveTo(int)
com.ds.avare.webinfc.WebAppInterface: void getNavlog()
com.ds.avare.webinfc.WebAppInterface: void getWeather()
com.ds.avare.webinfc.WebAppInterface: void filePlan(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.ds.avare.webinfc.WebAppInterface: void amendPlan(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.ds.avare.webinfc.WebAppInterface: void planChangeState(java.lang.String,java.lang.String)
com.ds.avare.webinfc.WebAppInterface: void getPlans()
com.ds.avare.webinfc.WebAppInterface: void loadPlan()
com.ds.avare.webinfc.WebAppInterface: void setEmail()
com.ds.avare.webinfc.WebAppInterface: com.ds.avare.utils.GenericCallback access$000(com.ds.avare.webinfc.WebAppInterface)
com.ds.avare.webinfc.WebAppInterface: android.webkit.WebView access$100(com.ds.avare.webinfc.WebAppInterface)
com.ds.avare.webinfc.WebAppInterface: com.ds.avare.plan.LmfsPlanList access$200(com.ds.avare.webinfc.WebAppInterface)
com.ds.avare.webinfc.WebAppInterface: android.content.Context access$300(com.ds.avare.webinfc.WebAppInterface)
com.ds.avare.webinfc.WebAppInterface$1
com.ds.avare.webinfc.WebAppInterface$1: WebAppInterface$1(com.ds.avare.webinfc.WebAppInterface)
com.ds.avare.webinfc.WebAppInterface$1: void handleMessage(android.os.Message)
com.ds.avare.webinfc.WebAppListInterface
com.ds.avare.webinfc.WebAppListInterface: WebAppListInterface(android.content.Context,android.webkit.WebView,com.ds.avare.utils.GenericCallback)
com.ds.avare.webinfc.WebAppListInterface: void connect(com.ds.avare.StorageService)
com.ds.avare.webinfc.WebAppListInterface: void clearList()
com.ds.avare.webinfc.WebAppListInterface: void clearListSave()
com.ds.avare.webinfc.WebAppListInterface: void addItemToList(java.lang.String)
com.ds.avare.webinfc.WebAppListInterface: void newSaveList()
com.ds.avare.webinfc.WebAppListInterface: void newList()
com.ds.avare.webinfc.WebAppListInterface: void updateList()
com.ds.avare.webinfc.WebAppListInterface: void moveBack()
com.ds.avare.webinfc.WebAppListInterface: void moveForward()
com.ds.avare.webinfc.WebAppListInterface: void moveUpItem()
com.ds.avare.webinfc.WebAppListInterface: void moveTo(int)
com.ds.avare.webinfc.WebAppListInterface: void moveDownItem()
com.ds.avare.webinfc.WebAppListInterface: void discardList()
com.ds.avare.webinfc.WebAppListInterface: void deleteItem()
com.ds.avare.webinfc.WebAppListInterface: void addToList(java.lang.String)
com.ds.avare.webinfc.WebAppListInterface: void saveList(java.lang.String)
com.ds.avare.webinfc.WebAppListInterface: void loadList(java.lang.String)
com.ds.avare.webinfc.WebAppListInterface: void saveDelete(java.lang.String)
com.ds.avare.webinfc.WebAppListInterface: void importFromFile(java.lang.String)
com.ds.avare.webinfc.WebAppListInterface: android.os.Handler access$100(com.ds.avare.webinfc.WebAppListInterface)
com.ds.avare.webinfc.WebAppListInterface: com.ds.avare.StorageService access$200(com.ds.avare.webinfc.WebAppListInterface)
com.ds.avare.webinfc.WebAppListInterface: android.webkit.WebView access$300(com.ds.avare.webinfc.WebAppListInterface)
com.ds.avare.webinfc.WebAppListInterface: com.ds.avare.utils.GenericCallback access$400(com.ds.avare.webinfc.WebAppListInterface)
com.ds.avare.webinfc.WebAppListInterface$1
com.ds.avare.webinfc.WebAppListInterface$1: WebAppListInterface$1(com.ds.avare.webinfc.WebAppListInterface)
com.ds.avare.webinfc.WebAppListInterface$1: void handleMessage(android.os.Message)
com.ds.avare.webinfc.WebAppListInterface$ImportTask
com.ds.avare.webinfc.WebAppListInterface$ImportTask: WebAppListInterface$ImportTask(com.ds.avare.webinfc.WebAppListInterface)
com.ds.avare.webinfc.WebAppListInterface$ImportTask: java.lang.String doInBackground(java.lang.String[])
com.ds.avare.webinfc.WebAppListInterface$ImportTask: void onPostExecute(java.lang.String)
com.ds.avare.webinfc.WebAppListInterface$ImportTask: void onPreExecute()
com.ds.avare.webinfc.WebAppListInterface$ImportTask: void onProgressUpdate(java.lang.String[])
com.ds.avare.webinfc.WebAppListInterface$ImportTask: void onProgressUpdate(java.lang.Object[])
com.ds.avare.webinfc.WebAppListInterface$ImportTask: void onPostExecute(java.lang.Object)
com.ds.avare.webinfc.WebAppListInterface$ImportTask: java.lang.Object doInBackground(java.lang.Object[])
com.ds.avare.webinfc.WebAppListInterface$ImportTask: WebAppListInterface$ImportTask(com.ds.avare.webinfc.WebAppListInterface,com.ds.avare.webinfc.WebAppListInterface$1)
com.ds.avare.webinfc.WebAppPlanInterface
com.ds.avare.webinfc.WebAppPlanInterface: WebAppPlanInterface(android.content.Context,android.webkit.WebView,com.ds.avare.utils.GenericCallback)
com.ds.avare.webinfc.WebAppPlanInterface: void connect(com.ds.avare.StorageService)
com.ds.avare.webinfc.WebAppPlanInterface: void timer()
com.ds.avare.webinfc.WebAppPlanInterface: void clearPlan()
com.ds.avare.webinfc.WebAppPlanInterface: void clearPlanSave()
com.ds.avare.webinfc.WebAppPlanInterface: void addWaypointToPlan(java.lang.String,java.lang.String,java.lang.String)
com.ds.avare.webinfc.WebAppPlanInterface: void newSavePlan()
com.ds.avare.webinfc.WebAppPlanInterface: java.util.ArrayList getPlanNames(int)
com.ds.avare.webinfc.WebAppPlanInterface: void nextPage()
com.ds.avare.webinfc.WebAppPlanInterface: void prevPage()
com.ds.avare.webinfc.WebAppPlanInterface: void firstPage()
com.ds.avare.webinfc.WebAppPlanInterface: void lastPage()
com.ds.avare.webinfc.WebAppPlanInterface: void refreshPlanList()
com.ds.avare.webinfc.WebAppPlanInterface: void newPlan()
com.ds.avare.webinfc.WebAppPlanInterface: boolean isSame(android.location.Location,android.location.Location)
com.ds.avare.webinfc.WebAppPlanInterface: void update(java.util.Observable,java.lang.Object)
com.ds.avare.webinfc.WebAppPlanInterface: void moveUp()
com.ds.avare.webinfc.WebAppPlanInterface: void moveDown()
com.ds.avare.webinfc.WebAppPlanInterface: void discardPlan()
com.ds.avare.webinfc.WebAppPlanInterface: void activateToggle()
com.ds.avare.webinfc.WebAppPlanInterface: void deleteWaypoint()
com.ds.avare.webinfc.WebAppPlanInterface: void moveBack()
com.ds.avare.webinfc.WebAppPlanInterface: void moveTo(int)
com.ds.avare.webinfc.WebAppPlanInterface: void moveForward()
com.ds.avare.webinfc.WebAppPlanInterface: void addToPlan(java.lang.String,java.lang.String,java.lang.String)
com.ds.avare.webinfc.WebAppPlanInterface: void savePlan(java.lang.String)
com.ds.avare.webinfc.WebAppPlanInterface: void loadPlan(java.lang.String)
com.ds.avare.webinfc.WebAppPlanInterface: void loadPlanReverse(java.lang.String)
com.ds.avare.webinfc.WebAppPlanInterface: void planFilter(java.lang.String)
com.ds.avare.webinfc.WebAppPlanInterface: void setFilteredSize()
com.ds.avare.webinfc.WebAppPlanInterface: boolean containsIgnoreCase(java.lang.String,java.lang.String)
com.ds.avare.webinfc.WebAppPlanInterface: void saveDelete(java.lang.String)
com.ds.avare.webinfc.WebAppPlanInterface: void search(java.lang.String)
com.ds.avare.webinfc.WebAppPlanInterface: java.lang.String getPlanData()
com.ds.avare.webinfc.WebAppPlanInterface: void refreshPlan()
com.ds.avare.webinfc.WebAppPlanInterface: void getWeather()
com.ds.avare.webinfc.WebAppPlanInterface: void getNotams()
com.ds.avare.webinfc.WebAppPlanInterface: void createPlan(java.lang.String)
com.ds.avare.webinfc.WebAppPlanInterface: java.lang.String getWeatherStoreFileName()
com.ds.avare.webinfc.WebAppPlanInterface: java.lang.String getNotamsFileName(java.lang.String)
com.ds.avare.webinfc.WebAppPlanInterface: void cleanup()
com.ds.avare.webinfc.WebAppPlanInterface: com.ds.avare.StorageService access$600(com.ds.avare.webinfc.WebAppPlanInterface)
com.ds.avare.webinfc.WebAppPlanInterface: android.os.Handler access$700(com.ds.avare.webinfc.WebAppPlanInterface)
com.ds.avare.webinfc.WebAppPlanInterface: com.ds.avare.storage.Preferences access$800(com.ds.avare.webinfc.WebAppPlanInterface)
com.ds.avare.webinfc.WebAppPlanInterface: android.webkit.WebView access$900(com.ds.avare.webinfc.WebAppPlanInterface)
com.ds.avare.webinfc.WebAppPlanInterface: com.ds.avare.utils.GenericCallback access$1000(com.ds.avare.webinfc.WebAppPlanInterface)
com.ds.avare.webinfc.WebAppPlanInterface: android.content.Context access$1100(com.ds.avare.webinfc.WebAppPlanInterface)
com.ds.avare.webinfc.WebAppPlanInterface: java.lang.String access$1200(com.ds.avare.webinfc.WebAppPlanInterface,java.lang.String)
com.ds.avare.webinfc.WebAppPlanInterface: java.lang.String access$1300(com.ds.avare.webinfc.WebAppPlanInterface)
com.ds.avare.webinfc.WebAppPlanInterface$1
com.ds.avare.webinfc.WebAppPlanInterface$1: WebAppPlanInterface$1(com.ds.avare.webinfc.WebAppPlanInterface)
com.ds.avare.webinfc.WebAppPlanInterface$1: void handleMessage(android.os.Message)
com.ds.avare.webinfc.WebAppPlanInterface$CreateTask
com.ds.avare.webinfc.WebAppPlanInterface$CreateTask: WebAppPlanInterface$CreateTask(com.ds.avare.webinfc.WebAppPlanInterface)
com.ds.avare.webinfc.WebAppPlanInterface$CreateTask: java.lang.Boolean doInBackground(java.lang.Object[])
com.ds.avare.webinfc.WebAppPlanInterface$CreateTask: void onPostExecute(java.lang.Boolean)
com.ds.avare.webinfc.WebAppPlanInterface$CreateTask: void onPostExecute(java.lang.Object)
com.ds.avare.webinfc.WebAppPlanInterface$CreateTask: java.lang.Object doInBackground(java.lang.Object[])
com.ds.avare.webinfc.WebAppPlanInterface$CreateTask: WebAppPlanInterface$CreateTask(com.ds.avare.webinfc.WebAppPlanInterface,com.ds.avare.webinfc.WebAppPlanInterface$1)
com.ds.avare.webinfc.WebAppPlanInterface$NotamsTask
com.ds.avare.webinfc.WebAppPlanInterface$NotamsTask: WebAppPlanInterface$NotamsTask(com.ds.avare.webinfc.WebAppPlanInterface)
com.ds.avare.webinfc.WebAppPlanInterface$NotamsTask: void run()
com.ds.avare.webinfc.WebAppPlanInterface$NotamsTask: boolean access$300(com.ds.avare.webinfc.WebAppPlanInterface$NotamsTask)
com.ds.avare.webinfc.WebAppPlanInterface$NotamsTask: WebAppPlanInterface$NotamsTask(com.ds.avare.webinfc.WebAppPlanInterface,com.ds.avare.webinfc.WebAppPlanInterface$1)
com.ds.avare.webinfc.WebAppPlanInterface$NotamsTask: boolean access$302(com.ds.avare.webinfc.WebAppPlanInterface$NotamsTask,boolean)
com.ds.avare.webinfc.WebAppPlanInterface$SearchTask
com.ds.avare.webinfc.WebAppPlanInterface$SearchTask: WebAppPlanInterface$SearchTask(com.ds.avare.webinfc.WebAppPlanInterface)
com.ds.avare.webinfc.WebAppPlanInterface$SearchTask: java.lang.Boolean doInBackground(java.lang.Object[])
com.ds.avare.webinfc.WebAppPlanInterface$SearchTask: void onPostExecute(java.lang.Boolean)
com.ds.avare.webinfc.WebAppPlanInterface$SearchTask: void onPostExecute(java.lang.Object)
com.ds.avare.webinfc.WebAppPlanInterface$SearchTask: java.lang.Object doInBackground(java.lang.Object[])
com.ds.avare.webinfc.WebAppPlanInterface$SearchTask: WebAppPlanInterface$SearchTask(com.ds.avare.webinfc.WebAppPlanInterface,com.ds.avare.webinfc.WebAppPlanInterface$1)
com.ds.avare.webinfc.WebAppPlanInterface$WeatherTask
com.ds.avare.webinfc.WebAppPlanInterface$WeatherTask: WebAppPlanInterface$WeatherTask(com.ds.avare.webinfc.WebAppPlanInterface)
com.ds.avare.webinfc.WebAppPlanInterface$WeatherTask: void run()
com.ds.avare.webinfc.WebAppPlanInterface$WeatherTask: boolean access$100(com.ds.avare.webinfc.WebAppPlanInterface$WeatherTask)
com.ds.avare.webinfc.WebAppPlanInterface$WeatherTask: WebAppPlanInterface$WeatherTask(com.ds.avare.webinfc.WebAppPlanInterface,com.ds.avare.webinfc.WebAppPlanInterface$1)
com.ds.avare.webinfc.WebAppPlanInterface$WeatherTask: boolean access$102(com.ds.avare.webinfc.WebAppPlanInterface$WeatherTask,boolean)
com.sromku.polygon.Line
com.sromku.polygon.Line: Line(com.sromku.polygon.Point,com.sromku.polygon.Point)
com.sromku.polygon.Line: boolean isInside(com.sromku.polygon.Point)
com.sromku.polygon.Line: boolean isVertical()
com.sromku.polygon.Line: float getA()
com.sromku.polygon.Line: float getB()
com.sromku.polygon.Line: com.sromku.polygon.Point getStart()
com.sromku.polygon.Line: com.sromku.polygon.Point getEnd()
com.sromku.polygon.Line: java.lang.String toString()
com.sromku.polygon.Point
com.sromku.polygon.Point: Point(float,float)
com.sromku.polygon.Point: java.lang.String toString()
com.sromku.polygon.Polygon
com.sromku.polygon.Polygon: Polygon(java.util.List,com.sromku.polygon.Polygon$BoundingBox)
com.sromku.polygon.Polygon: com.sromku.polygon.Polygon$Builder Builder()
com.sromku.polygon.Polygon: boolean contains(com.sromku.polygon.Point)
com.sromku.polygon.Polygon: java.util.List getSides()
com.sromku.polygon.Polygon: boolean intersect(com.sromku.polygon.Line,com.sromku.polygon.Line)
com.sromku.polygon.Polygon: com.sromku.polygon.Line createRay(com.sromku.polygon.Point)
com.sromku.polygon.Polygon: boolean inBoundingBox(com.sromku.polygon.Point)
com.sromku.polygon.Polygon: Polygon(java.util.List,com.sromku.polygon.Polygon$BoundingBox,com.sromku.polygon.Polygon$1)
com.sromku.polygon.Polygon$1
com.sromku.polygon.Polygon$BoundingBox
com.sromku.polygon.Polygon$BoundingBox: Polygon$BoundingBox()
com.sromku.polygon.Polygon$BoundingBox: Polygon$BoundingBox(com.sromku.polygon.Polygon$1)
com.sromku.polygon.Polygon$Builder
com.sromku.polygon.Polygon$Builder: Polygon$Builder()
com.sromku.polygon.Polygon$Builder: com.sromku.polygon.Polygon$Builder addVertex(com.sromku.polygon.Point)
com.sromku.polygon.Polygon$Builder: com.sromku.polygon.Polygon$Builder close()
com.sromku.polygon.Polygon$Builder: com.sromku.polygon.Polygon build()
com.sromku.polygon.Polygon$Builder: void updateBoundingBox(com.sromku.polygon.Point)
com.sromku.polygon.Polygon$Builder: void validate()
