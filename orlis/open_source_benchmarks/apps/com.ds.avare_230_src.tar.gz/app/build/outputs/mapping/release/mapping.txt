com.ds.avare.AirportActivity -> com.ds.avare.AirportActivity:
    com.ds.avare.StorageService mService -> a
    com.ds.avare.storage.Preferences mPref -> b
    com.ds.avare.place.Destination mDestination -> c
    android.widget.ListView mAirportView -> d
    android.widget.Toast mToast -> e
    com.ds.avare.views.AfdView mAfdView -> f
    android.widget.Button mAirportButton -> g
    android.widget.Button mViewButton -> h
    android.app.AlertDialog mViewPopup -> i
    android.app.AlertDialog mAirportPopup -> j
    java.util.ArrayList mListViews -> k
    java.util.ArrayList mListAirports -> l
    android.widget.Button mCenterButton -> m
    java.lang.String mDestString -> n
    java.lang.String mNearString -> o
    com.ds.avare.gps.GpsInterface mGpsInfc -> p
    android.content.ServiceConnection mConnection -> q
    void <init>() -> <init>
    void onBackPressed() -> onBackPressed
    void onCreate(android.os.Bundle) -> onCreate
    boolean arePopupsShowing() -> arePopupsShowing
    void setupViewInfo() -> setupViewInfo
    void addAirport(java.lang.String) -> addAirport
    void setViewFromPos(int) -> setViewFromPos
    void setNewDestinationFromPos(int) -> setNewDestinationFromPos
    void onPause() -> onPause
    void onResume() -> onResume
    void update(java.util.Observable,java.lang.Object) -> update
    java.util.ArrayList access$000(com.ds.avare.AirportActivity) -> access$000
    boolean access$100(com.ds.avare.AirportActivity) -> access$100
    void access$200(com.ds.avare.AirportActivity,int) -> access$200
    com.ds.avare.StorageService access$300(com.ds.avare.AirportActivity) -> access$300
    android.app.AlertDialog access$402(com.ds.avare.AirportActivity,android.app.AlertDialog) -> access$402
    android.app.AlertDialog access$400(com.ds.avare.AirportActivity) -> access$400
    java.util.ArrayList access$500(com.ds.avare.AirportActivity) -> access$500
    void access$600(com.ds.avare.AirportActivity,int) -> access$600
    android.app.AlertDialog access$702(com.ds.avare.AirportActivity,android.app.AlertDialog) -> access$702
    android.app.AlertDialog access$700(com.ds.avare.AirportActivity) -> access$700
    com.ds.avare.views.AfdView access$800(com.ds.avare.AirportActivity) -> access$800
    com.ds.avare.StorageService access$302(com.ds.avare.AirportActivity,com.ds.avare.StorageService) -> access$302
    com.ds.avare.gps.GpsInterface access$900(com.ds.avare.AirportActivity) -> access$900
    java.util.ArrayList access$002(com.ds.avare.AirportActivity,java.util.ArrayList) -> access$002
    java.util.ArrayList access$502(com.ds.avare.AirportActivity,java.util.ArrayList) -> access$502
    java.lang.String access$1000(com.ds.avare.AirportActivity) -> access$1000
    java.lang.String access$1100(com.ds.avare.AirportActivity) -> access$1100
    void access$1200(com.ds.avare.AirportActivity,java.lang.String) -> access$1200
    com.ds.avare.storage.Preferences access$1300(com.ds.avare.AirportActivity) -> access$1300
com.ds.avare.AirportActivity$1 -> com.ds.avare.AirportActivity$1:
    com.ds.avare.AirportActivity this$0 -> a
    void <init>(com.ds.avare.AirportActivity) -> <init>
    void statusCallback(android.location.GpsStatus) -> statusCallback
    void locationCallback(android.location.Location) -> locationCallback
    void timeoutCallback(boolean) -> timeoutCallback
    void enabledCallback(boolean) -> enabledCallback
com.ds.avare.AirportActivity$2 -> com.ds.avare.AirportActivity$2:
    com.ds.avare.AirportActivity this$0 -> a
    void <init>(com.ds.avare.AirportActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.AirportActivity$2$1 -> com.ds.avare.AirportActivity$2$1:
    com.ds.avare.AirportActivity$2 this$1 -> a
    void <init>(com.ds.avare.AirportActivity$2) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.AirportActivity$3 -> com.ds.avare.AirportActivity$3:
    com.ds.avare.AirportActivity this$0 -> a
    void <init>(com.ds.avare.AirportActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.AirportActivity$3$1 -> com.ds.avare.AirportActivity$3$1:
    com.ds.avare.AirportActivity$3 this$1 -> a
    void <init>(com.ds.avare.AirportActivity$3) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.AirportActivity$4 -> com.ds.avare.AirportActivity$4:
    com.ds.avare.AirportActivity this$0 -> a
    void <init>(com.ds.avare.AirportActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.AirportActivity$5 -> com.ds.avare.AirportActivity$5:
    com.ds.avare.AirportActivity this$0 -> a
    void <init>(com.ds.avare.AirportActivity) -> <init>
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.ds.avare.AirportActivity$6 -> com.ds.avare.AirportActivity$6:
    com.ds.avare.AirportActivity this$0 -> a
    void <init>(com.ds.avare.AirportActivity) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.ds.avare.ChartsDownloadActivity -> com.ds.avare.ChartsDownloadActivity:
    java.lang.String mName -> a
    android.app.ProgressDialog mProgressDialog -> b
    com.ds.avare.network.Download mDownload -> c
    com.ds.avare.network.Delete mDelete -> d
    com.ds.avare.storage.Preferences mPref -> e
    com.ds.avare.adapters.ChartAdapter mChartAdapter -> f
    android.widget.Toast mToast -> g
    com.ds.avare.StorageService mService -> h
    android.widget.Button mDLButton -> i
    android.widget.Button mUpdateButton -> j
    android.widget.Button mDeleteButton -> k
    android.app.AlertDialog mAlertDialog -> l
    com.ds.avare.gps.GpsInterface mGpsInfc -> m
    android.content.ServiceConnection mConnection -> n
    android.os.Handler mHandler -> o
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    boolean download() -> download
    boolean delete() -> delete
    void onPause() -> onPause
    com.ds.avare.adapters.ChartAdapter access$000() -> access$000
    boolean access$100(com.ds.avare.ChartsDownloadActivity) -> access$100
    boolean access$200(com.ds.avare.ChartsDownloadActivity) -> access$200
    com.ds.avare.StorageService access$302(com.ds.avare.ChartsDownloadActivity,com.ds.avare.StorageService) -> access$302
    com.ds.avare.gps.GpsInterface access$400(com.ds.avare.ChartsDownloadActivity) -> access$400
    com.ds.avare.StorageService access$300(com.ds.avare.ChartsDownloadActivity) -> access$300
    com.ds.avare.storage.Preferences access$500(com.ds.avare.ChartsDownloadActivity) -> access$500
    android.widget.Toast access$600(com.ds.avare.ChartsDownloadActivity) -> access$600
    com.ds.avare.network.Download access$700(com.ds.avare.ChartsDownloadActivity) -> access$700
    com.ds.avare.network.Delete access$800(com.ds.avare.ChartsDownloadActivity) -> access$800
    java.lang.String access$900(com.ds.avare.ChartsDownloadActivity) -> access$900
    android.app.ProgressDialog access$1000(com.ds.avare.ChartsDownloadActivity) -> access$1000
    android.app.AlertDialog access$1102(com.ds.avare.ChartsDownloadActivity,android.app.AlertDialog) -> access$1102
    android.app.AlertDialog access$1100(com.ds.avare.ChartsDownloadActivity) -> access$1100
    void <clinit>() -> <clinit>
com.ds.avare.ChartsDownloadActivity$1 -> com.ds.avare.ChartsDownloadActivity$1:
    com.ds.avare.ChartsDownloadActivity this$0 -> a
    void <init>(com.ds.avare.ChartsDownloadActivity) -> <init>
    void statusCallback(android.location.GpsStatus) -> statusCallback
    void locationCallback(android.location.Location) -> locationCallback
    void timeoutCallback(boolean) -> timeoutCallback
    void enabledCallback(boolean) -> enabledCallback
com.ds.avare.ChartsDownloadActivity$2 -> com.ds.avare.ChartsDownloadActivity$2:
    com.ds.avare.ChartsDownloadActivity this$0 -> a
    void <init>(com.ds.avare.ChartsDownloadActivity) -> <init>
    boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long) -> onChildClick
com.ds.avare.ChartsDownloadActivity$3 -> com.ds.avare.ChartsDownloadActivity$3:
    com.ds.avare.ChartsDownloadActivity this$0 -> a
    void <init>(com.ds.avare.ChartsDownloadActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.ChartsDownloadActivity$4 -> com.ds.avare.ChartsDownloadActivity$4:
    com.ds.avare.ChartsDownloadActivity this$0 -> a
    void <init>(com.ds.avare.ChartsDownloadActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.ChartsDownloadActivity$5 -> com.ds.avare.ChartsDownloadActivity$5:
    com.ds.avare.ChartsDownloadActivity this$0 -> a
    void <init>(com.ds.avare.ChartsDownloadActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.ChartsDownloadActivity$6 -> com.ds.avare.ChartsDownloadActivity$6:
    com.ds.avare.ChartsDownloadActivity this$0 -> a
    void <init>(com.ds.avare.ChartsDownloadActivity) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.ds.avare.ChartsDownloadActivity$7 -> com.ds.avare.ChartsDownloadActivity$7:
    com.ds.avare.ChartsDownloadActivity this$0 -> a
    void <init>(com.ds.avare.ChartsDownloadActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.ChartsDownloadActivity$8 -> com.ds.avare.ChartsDownloadActivity$8:
    com.ds.avare.ChartsDownloadActivity this$0 -> a
    void <init>(com.ds.avare.ChartsDownloadActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.ChartsDownloadActivity$9 -> com.ds.avare.ChartsDownloadActivity$9:
    com.ds.avare.ChartsDownloadActivity this$0 -> a
    void <init>(com.ds.avare.ChartsDownloadActivity) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.ds.avare.ChartsDownloadActivity$9$1 -> com.ds.avare.ChartsDownloadActivity$9$1:
    com.ds.avare.ChartsDownloadActivity$9 this$1 -> a
    void <init>(com.ds.avare.ChartsDownloadActivity$9) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.ChartsDownloadActivity$9$2 -> com.ds.avare.ChartsDownloadActivity$9$2:
    com.ds.avare.ChartsDownloadActivity$9 this$1 -> a
    void <init>(com.ds.avare.ChartsDownloadActivity$9) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.ChecklistActivity -> com.ds.avare.ChecklistActivity:
    android.webkit.WebView mWebView -> a
    android.widget.Button mBackButton -> b
    android.widget.Button mForwardButton -> c
    android.widget.ProgressBar mProgressBarSearch -> d
    com.ds.avare.webinfc.WebAppListInterface mInfc -> e
    boolean mInited -> f
    java.util.Timer mTimer -> g
    com.ds.avare.StorageService mService -> h
    boolean mIsPageLoaded -> i
    android.content.Context mContext -> j
    com.ds.avare.gps.GpsInterface mGpsInfc -> k
    android.content.ServiceConnection mConnection -> l
    android.os.Handler mHandler -> m
    void <init>() -> <init>
    void onBackPressed() -> onBackPressed
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onRestart() -> onRestart
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    android.os.Handler access$000(com.ds.avare.ChecklistActivity) -> access$000
    boolean access$102(com.ds.avare.ChecklistActivity,boolean) -> access$102
    com.ds.avare.webinfc.WebAppListInterface access$200(com.ds.avare.ChecklistActivity) -> access$200
    com.ds.avare.StorageService access$302(com.ds.avare.ChecklistActivity,com.ds.avare.StorageService) -> access$302
    com.ds.avare.gps.GpsInterface access$400(com.ds.avare.ChecklistActivity) -> access$400
    com.ds.avare.StorageService access$300(com.ds.avare.ChecklistActivity) -> access$300
    java.util.Timer access$502(com.ds.avare.ChecklistActivity,java.util.Timer) -> access$502
    java.util.Timer access$500(com.ds.avare.ChecklistActivity) -> access$500
    boolean access$100(com.ds.avare.ChecklistActivity) -> access$100
    boolean access$700(com.ds.avare.ChecklistActivity) -> access$700
    boolean access$702(com.ds.avare.ChecklistActivity,boolean) -> access$702
    android.widget.ProgressBar access$800(com.ds.avare.ChecklistActivity) -> access$800
    android.content.Context access$900(com.ds.avare.ChecklistActivity) -> access$900
com.ds.avare.ChecklistActivity$1 -> com.ds.avare.ChecklistActivity$1:
    com.ds.avare.ChecklistActivity this$0 -> a
    void <init>(com.ds.avare.ChecklistActivity) -> <init>
    void statusCallback(android.location.GpsStatus) -> statusCallback
    void locationCallback(android.location.Location) -> locationCallback
    void timeoutCallback(boolean) -> timeoutCallback
    void enabledCallback(boolean) -> enabledCallback
com.ds.avare.ChecklistActivity$2 -> com.ds.avare.ChecklistActivity$2:
    com.ds.avare.ChecklistActivity this$0 -> a
    void <init>(com.ds.avare.ChecklistActivity) -> <init>
    java.lang.Object callback(java.lang.Object,java.lang.Object) -> callback
com.ds.avare.ChecklistActivity$3 -> com.ds.avare.ChecklistActivity$3:
    com.ds.avare.ChecklistActivity this$0 -> a
    void <init>(com.ds.avare.ChecklistActivity) -> <init>
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
com.ds.avare.ChecklistActivity$3$1 -> com.ds.avare.ChecklistActivity$3$1:
    android.webkit.JsResult val$result -> a
    com.ds.avare.ChecklistActivity$3 this$1 -> b
    void <init>(com.ds.avare.ChecklistActivity$3,android.webkit.JsResult) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.ChecklistActivity$3$2 -> com.ds.avare.ChecklistActivity$3$2:
    android.webkit.JsResult val$result -> a
    com.ds.avare.ChecklistActivity$3 this$1 -> b
    void <init>(com.ds.avare.ChecklistActivity$3,android.webkit.JsResult) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.ChecklistActivity$3$3 -> com.ds.avare.ChecklistActivity$3$3:
    android.webkit.JsResult val$result -> a
    com.ds.avare.ChecklistActivity$3 this$1 -> b
    void <init>(com.ds.avare.ChecklistActivity$3,android.webkit.JsResult) -> <init>
    void onCancel(android.content.DialogInterface) -> onCancel
com.ds.avare.ChecklistActivity$4 -> com.ds.avare.ChecklistActivity$4:
    com.ds.avare.ChecklistActivity this$0 -> a
    void <init>(com.ds.avare.ChecklistActivity) -> <init>
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.ds.avare.ChecklistActivity$5 -> com.ds.avare.ChecklistActivity$5:
    com.ds.avare.ChecklistActivity this$0 -> a
    void <init>(com.ds.avare.ChecklistActivity) -> <init>
    boolean onLongClick(android.view.View) -> onLongClick
com.ds.avare.ChecklistActivity$6 -> com.ds.avare.ChecklistActivity$6:
    com.ds.avare.ChecklistActivity this$0 -> a
    void <init>(com.ds.avare.ChecklistActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.ChecklistActivity$7 -> com.ds.avare.ChecklistActivity$7:
    com.ds.avare.ChecklistActivity this$0 -> a
    void <init>(com.ds.avare.ChecklistActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.ChecklistActivity$8 -> com.ds.avare.ChecklistActivity$8:
    com.ds.avare.ChecklistActivity this$0 -> a
    void <init>(com.ds.avare.ChecklistActivity) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.ds.avare.ChecklistActivity$9 -> com.ds.avare.ChecklistActivity$9:
    com.ds.avare.ChecklistActivity this$0 -> a
    void <init>(com.ds.avare.ChecklistActivity) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.ds.avare.ChecklistActivity$9$1 -> com.ds.avare.ChecklistActivity$9$1:
    com.ds.avare.ChecklistActivity$9 this$1 -> a
    void <init>(com.ds.avare.ChecklistActivity$9) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.ChecklistActivity$UpdateTask -> com.ds.avare.ChecklistActivity$UpdateTask:
    com.ds.avare.ChecklistActivity this$0 -> a
    void <init>(com.ds.avare.ChecklistActivity) -> <init>
    void run() -> run
    void <init>(com.ds.avare.ChecklistActivity,com.ds.avare.ChecklistActivity$1) -> <init>
com.ds.avare.IHelper -> com.ds.avare.IHelper:
    void sendDataText(java.lang.String) -> sendDataText
    java.lang.String recvDataText() -> recvDataText
com.ds.avare.IHelper$Stub -> com.ds.avare.IHelper$Stub:
    void <init>() -> <init>
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.ds.avare.IHelperService -> com.ds.avare.IHelperService:
    com.ds.avare.StorageService mService -> a
    android.content.ServiceConnection mConnection -> b
    com.ds.avare.IHelper$Stub mBinder -> c
    android.os.Handler mHandler -> d
    void <init>() -> <init>
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
    com.ds.avare.StorageService access$002(com.ds.avare.IHelperService,com.ds.avare.StorageService) -> access$002
    android.os.Handler access$100(com.ds.avare.IHelperService) -> access$100
    com.ds.avare.StorageService access$000(com.ds.avare.IHelperService) -> access$000
com.ds.avare.IHelperService$1 -> com.ds.avare.IHelperService$1:
    com.ds.avare.IHelperService this$0 -> a
    void <init>(com.ds.avare.IHelperService) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.ds.avare.IHelperService$2 -> com.ds.avare.IHelperService$2:
    com.ds.avare.IHelperService this$0 -> a
    void <init>(com.ds.avare.IHelperService) -> <init>
    void sendDataText(java.lang.String) -> sendDataText
    java.lang.String recvDataText() -> recvDataText
com.ds.avare.IHelperService$3 -> com.ds.avare.IHelperService$3:
    com.ds.avare.IHelperService this$0 -> a
    void <init>(com.ds.avare.IHelperService) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.ds.avare.LocationActivity -> com.ds.avare.LocationActivity:
    com.ds.avare.views.LocationView mLocationView -> a
    com.ds.avare.place.Destination mDestination -> b
    com.ds.avare.StorageService mService -> c
    com.ds.avare.storage.Preferences mPref -> d
    android.widget.Toast mToast -> e
    android.app.AlertDialog mAlertDialogDatabase -> f
    android.app.AlertDialog mAlertDialogExit -> g
    android.app.AlertDialog mGpsWarnDialog -> h
    android.widget.Button mDestButton -> i
    android.widget.Button mCenterButton -> j
    android.widget.Button mDrawClearButton -> k
    com.ds.avare.animation.TwoButton mTracksButton -> l
    android.widget.Button mHelpButton -> m
    android.widget.Button mCrossButton -> n
    android.widget.Button mPrefButton -> o
    android.widget.Button mPlanButton -> p
    android.widget.Button mPlatesButton -> q
    android.widget.Button mAfdButton -> r
    android.widget.Button mDownloadButton -> s
    android.widget.Button mMenuButton -> t
    android.widget.RelativeLayout mDestLayout -> u
    com.ds.avare.animation.TwoButton mSimButton -> v
    com.ds.avare.animation.TwoButton mDrawButton -> w
    android.widget.Button mWebButton -> x
    com.ds.avare.animation.TwoButton mTrackButton -> y
    android.widget.Spinner mChartSpinner -> z
    android.os.Bundle mExtras -> A
    com.ds.avare.utils.VerticalSeekBar mBar -> B
    boolean mIsWaypoint -> C
    boolean mSpinner -> D
    com.ds.avare.animation.AnimateButton mAnimateTracks -> E
    com.ds.avare.animation.AnimateButton mAnimateSim -> F
    com.ds.avare.animation.AnimateButton mAnimateWeb -> G
    com.ds.avare.animation.AnimateButton mAnimateTrack -> H
    com.ds.avare.animation.AnimateButton mAnimateChart -> I
    com.ds.avare.animation.AnimateButton mAnimateHelp -> J
    com.ds.avare.animation.AnimateButton mAnimateDownload -> K
    com.ds.avare.animation.AnimateButton mAnimatePref -> L
    java.lang.String mAirportPressed -> M
    android.widget.Button mPlanPrev -> N
    android.widget.ImageButton mPlanPause -> O
    android.widget.Button mPlanNext -> P
    android.widget.ExpandableListView mListPopout -> Q
    com.ds.avare.LocationActivity$TankObserver mTankObserver -> R
    com.ds.avare.flight.FlightStatusInterface mFSInfc -> S
    com.ds.avare.gps.GpsInterface mGpsInfc -> T
    android.content.ServiceConnection mConnection -> U
    void <init>() -> <init>
    boolean isSameDest(java.lang.String) -> isSameDest
    void goTo(java.lang.String,java.lang.String) -> goTo
    void planTo(java.lang.String,java.lang.String) -> planTo
    void onBackPressed() -> onBackPressed
    void hideMenu() -> hideMenu
    void showMenu() -> showMenu
    void onCreate(android.os.Bundle) -> onCreate
    void setTrackState(boolean) -> setTrackState
    void setPlanButtonVis() -> setPlanButtonVis
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onRestart() -> onRestart
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void update(java.util.Observable,java.lang.Object) -> update
    void blink() -> blink
    com.ds.avare.storage.Preferences access$000(com.ds.avare.LocationActivity) -> access$000
    com.ds.avare.StorageService access$100(com.ds.avare.LocationActivity) -> access$100
    com.ds.avare.views.LocationView access$200(com.ds.avare.LocationActivity) -> access$200
    com.ds.avare.utils.VerticalSeekBar access$300(com.ds.avare.LocationActivity) -> access$300
    void access$400(com.ds.avare.LocationActivity) -> access$400
    void access$500(com.ds.avare.LocationActivity,boolean) -> access$500
    void access$601(com.ds.avare.LocationActivity) -> access$601
    void access$700(com.ds.avare.LocationActivity) -> access$700
    java.lang.String access$802(com.ds.avare.LocationActivity,java.lang.String) -> access$802
    java.lang.String access$800(com.ds.avare.LocationActivity) -> access$800
    android.widget.Button access$900(com.ds.avare.LocationActivity) -> access$900
    android.widget.Button access$1000(com.ds.avare.LocationActivity) -> access$1000
    android.widget.Button access$1100(com.ds.avare.LocationActivity) -> access$1100
    android.widget.RelativeLayout access$1200(com.ds.avare.LocationActivity) -> access$1200
    boolean access$1300(com.ds.avare.LocationActivity,java.lang.String) -> access$1300
    android.widget.Button access$1400(com.ds.avare.LocationActivity) -> access$1400
    android.widget.ExpandableListView access$1500(com.ds.avare.LocationActivity) -> access$1500
    boolean access$1600(com.ds.avare.LocationActivity) -> access$1600
    boolean access$1602(com.ds.avare.LocationActivity,boolean) -> access$1602
    android.widget.Spinner access$1700(com.ds.avare.LocationActivity) -> access$1700
    void access$1800(com.ds.avare.LocationActivity) -> access$1800
    void access$1900(com.ds.avare.LocationActivity,java.lang.String,java.lang.String) -> access$1900
    void access$2000(com.ds.avare.LocationActivity,java.lang.String,java.lang.String) -> access$2000
    com.ds.avare.animation.TwoButton access$2100(com.ds.avare.LocationActivity) -> access$2100
    com.ds.avare.animation.TwoButton access$2200(com.ds.avare.LocationActivity) -> access$2200
    com.ds.avare.animation.TwoButton access$2300(com.ds.avare.LocationActivity) -> access$2300
    android.widget.Button access$2400(com.ds.avare.LocationActivity) -> access$2400
    android.widget.ImageButton access$2500(com.ds.avare.LocationActivity) -> access$2500
    com.ds.avare.StorageService access$102(com.ds.avare.LocationActivity,com.ds.avare.StorageService) -> access$102
    com.ds.avare.gps.GpsInterface access$2700(com.ds.avare.LocationActivity) -> access$2700
    com.ds.avare.flight.FlightStatusInterface access$2800(com.ds.avare.LocationActivity) -> access$2800
    android.app.AlertDialog access$2902(com.ds.avare.LocationActivity,android.app.AlertDialog) -> access$2902
    android.app.AlertDialog access$2900(com.ds.avare.LocationActivity) -> access$2900
    com.ds.avare.place.Destination access$3002(com.ds.avare.LocationActivity,com.ds.avare.place.Destination) -> access$3002
    com.ds.avare.place.Destination access$3000(com.ds.avare.LocationActivity) -> access$3000
    android.os.Bundle access$3100(com.ds.avare.LocationActivity) -> access$3100
    android.widget.Toast access$3200(com.ds.avare.LocationActivity) -> access$3200
    android.os.Bundle access$3102(com.ds.avare.LocationActivity,android.os.Bundle) -> access$3102
    void access$3300(com.ds.avare.LocationActivity) -> access$3300
    com.ds.avare.LocationActivity$TankObserver access$3400(com.ds.avare.LocationActivity) -> access$3400
com.ds.avare.LocationActivity$1 -> com.ds.avare.LocationActivity$1:
    com.ds.avare.LocationActivity this$0 -> a
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void rollout() -> rollout
com.ds.avare.LocationActivity$10 -> com.ds.avare.LocationActivity$10:
    com.ds.avare.LocationActivity this$0 -> a
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$11 -> com.ds.avare.LocationActivity$11:
    com.ds.avare.LocationActivity this$0 -> a
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$12 -> com.ds.avare.LocationActivity$12:
    com.ds.avare.LocationActivity this$0 -> a
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$13 -> com.ds.avare.LocationActivity$13:
    com.ds.avare.LocationActivity this$0 -> a
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$14 -> com.ds.avare.LocationActivity$14:
    com.ds.avare.LocationActivity this$0 -> a
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$15 -> com.ds.avare.LocationActivity$15:
    com.ds.avare.LocationActivity this$0 -> a
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$16 -> com.ds.avare.LocationActivity$16:
    com.ds.avare.LocationActivity this$0 -> a
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$17 -> com.ds.avare.LocationActivity$17:
    com.ds.avare.LocationActivity this$0 -> a
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$18 -> com.ds.avare.LocationActivity$18:
    com.ds.avare.LocationActivity this$0 -> a
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$19 -> com.ds.avare.LocationActivity$19:
    com.ds.avare.LocationActivity this$0 -> a
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$2 -> com.ds.avare.LocationActivity$2:
    com.ds.avare.LocationActivity this$0 -> a
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void statusCallback(android.location.GpsStatus) -> statusCallback
    void locationCallback(android.location.Location) -> locationCallback
    void timeoutCallback(boolean) -> timeoutCallback
    void enabledCallback(boolean) -> enabledCallback
com.ds.avare.LocationActivity$20 -> com.ds.avare.LocationActivity$20:
    com.ds.avare.LocationActivity this$0 -> a
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$21 -> com.ds.avare.LocationActivity$21:
    com.ds.avare.LocationActivity this$0 -> a
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$22 -> com.ds.avare.LocationActivity$22:
    com.ds.avare.LocationActivity this$0 -> a
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$23 -> com.ds.avare.LocationActivity$23:
    com.ds.avare.LocationActivity this$0 -> a
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$24 -> com.ds.avare.LocationActivity$24:
    com.ds.avare.LocationActivity this$0 -> a
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.LocationActivity$25 -> com.ds.avare.LocationActivity$25:
    com.ds.avare.LocationActivity this$0 -> a
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.LocationActivity$26 -> com.ds.avare.LocationActivity$26:
    com.ds.avare.LocationActivity this$0 -> a
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$27 -> com.ds.avare.LocationActivity$27:
    com.ds.avare.LocationActivity this$0 -> a
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$28 -> com.ds.avare.LocationActivity$28:
    com.ds.avare.LocationActivity this$0 -> a
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$29 -> com.ds.avare.LocationActivity$29:
    com.ds.avare.LocationActivity this$0 -> a
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.ds.avare.LocationActivity$29$1 -> com.ds.avare.LocationActivity$29$1:
    com.ds.avare.LocationActivity$29 this$1 -> a
    void <init>(com.ds.avare.LocationActivity$29) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.LocationActivity$29$2 -> com.ds.avare.LocationActivity$29$2:
    com.ds.avare.LocationActivity$29 this$1 -> a
    void <init>(com.ds.avare.LocationActivity$29) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.LocationActivity$3 -> com.ds.avare.LocationActivity$3:
    com.ds.avare.LocationActivity this$0 -> a
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.LocationActivity$30 -> com.ds.avare.LocationActivity$30:
    com.ds.avare.LocationActivity this$0 -> a
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void run() -> run
com.ds.avare.LocationActivity$4 -> com.ds.avare.LocationActivity$4:
    com.ds.avare.LocationActivity this$0 -> a
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.LocationActivity$5 -> com.ds.avare.LocationActivity$5:
    com.ds.avare.utils.InfoLines$InfoLineFieldLoc _InfoLineFieldLoc -> a
    int _nNewSelection -> b
    com.ds.avare.LocationActivity this$0 -> c
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void gestureCallBack(int,com.ds.avare.utils.InfoLines$InfoLineFieldLoc) -> gestureCallBack
    void gestureCallBack(int,com.ds.avare.touch.LongTouchDestination) -> gestureCallBack
com.ds.avare.LocationActivity$5$1 -> com.ds.avare.LocationActivity$5$1:
    com.ds.avare.LocationActivity$5 this$1 -> a
    void <init>(com.ds.avare.LocationActivity$5) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.LocationActivity$5$2 -> com.ds.avare.LocationActivity$5$2:
    com.ds.avare.LocationActivity$5 this$1 -> a
    void <init>(com.ds.avare.LocationActivity$5) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.LocationActivity$5$3 -> com.ds.avare.LocationActivity$5$3:
    com.ds.avare.LocationActivity$5 this$1 -> a
    void <init>(com.ds.avare.LocationActivity$5) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.LocationActivity$6 -> com.ds.avare.LocationActivity$6:
    com.ds.avare.LocationActivity this$0 -> a
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.ds.avare.LocationActivity$7 -> com.ds.avare.LocationActivity$7:
    com.ds.avare.LocationActivity this$0 -> a
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
com.ds.avare.LocationActivity$8 -> com.ds.avare.LocationActivity$8:
    com.ds.avare.LocationActivity this$0 -> a
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$9 -> com.ds.avare.LocationActivity$9:
    com.ds.avare.LocationActivity this$0 -> a
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$TankObserver -> com.ds.avare.LocationActivity$TankObserver:
    com.ds.avare.LocationActivity this$0 -> a
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void update(java.util.Observable,java.lang.Object) -> update
    void <init>(com.ds.avare.LocationActivity,com.ds.avare.LocationActivity$1) -> <init>
com.ds.avare.LocationActivity$TankObserver$1 -> com.ds.avare.LocationActivity$TankObserver$1:
    com.ds.avare.instruments.FuelTimer val$fuelTimer -> a
    com.ds.avare.LocationActivity$TankObserver this$1 -> b
    void <init>(com.ds.avare.LocationActivity$TankObserver,com.ds.avare.instruments.FuelTimer) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.MainActivity -> com.ds.avare.MainActivity:
    android.widget.TabHost mTabHost -> a
    android.widget.HorizontalScrollView mScrollView -> b
    int mScrollWidth -> c
    com.ds.avare.storage.Preferences mPref -> d
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void setupTab(android.view.View,java.lang.String,android.content.Intent,android.content.Intent) -> setupTab
    android.view.View createTabView(android.content.Context,java.lang.String) -> createTabView
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void switchTab(int) -> switchTab
    void showMapTab() -> showMapTab
    void showPlatesTab() -> showPlatesTab
    void showAfdTab() -> showAfdTab
com.ds.avare.MainActivity$1 -> com.ds.avare.MainActivity$1:
    com.ds.avare.MainActivity this$0 -> a
    void <init>(com.ds.avare.MainActivity) -> <init>
    void onGlobalLayout() -> onGlobalLayout
com.ds.avare.MessageActivity -> com.ds.avare.MessageActivity:
    android.webkit.WebView mWebView -> a
    android.widget.Spinner mSpinner -> b
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    android.webkit.WebView access$000(com.ds.avare.MessageActivity) -> access$000
com.ds.avare.MessageActivity$1 -> com.ds.avare.MessageActivity$1:
    com.ds.avare.MessageActivity this$0 -> a
    void <init>(com.ds.avare.MessageActivity) -> <init>
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.ds.avare.MessageActivity$2 -> com.ds.avare.MessageActivity$2:
    com.ds.avare.MessageActivity this$0 -> a
    void <init>(com.ds.avare.MessageActivity) -> <init>
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.ds.avare.NearestActivity -> com.ds.avare.NearestActivity:
    com.ds.avare.StorageService mService -> a
    android.widget.ListView mNearest -> b
    com.ds.avare.adapters.NearestAdapter mNearestAdapter -> c
    android.widget.Toast mToast -> d
    com.ds.avare.storage.Preferences mPref -> e
    com.ds.avare.place.Destination mDestination -> f
    com.ds.avare.animation.AnimateButton mAnimateDest -> g
    com.ds.avare.animation.AnimateButton mAnimatePlates -> h
    android.widget.Button mPlatesButton -> i
    android.widget.Button mButton2000 -> j
    android.widget.Button mButton4000 -> k
    android.widget.Button mButton6000 -> l
    android.widget.Button mButtonFuel -> m
    android.widget.Button mDestButton -> n
    java.lang.String mSelectedAirportId -> o
    com.ds.avare.gps.GpsInterface mGpsInfc -> p
    android.content.ServiceConnection mConnection -> q
    void <init>() -> <init>
    void onBackPressed() -> onBackPressed
    void onCreate(android.os.Bundle) -> onCreate
    boolean prepareAdapter(android.location.Location) -> prepareAdapter
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void update(java.util.Observable,java.lang.Object) -> update
    com.ds.avare.StorageService access$000(com.ds.avare.NearestActivity) -> access$000
    boolean access$100(com.ds.avare.NearestActivity,android.location.Location) -> access$100
    com.ds.avare.place.Destination access$202(com.ds.avare.NearestActivity,com.ds.avare.place.Destination) -> access$202
    com.ds.avare.storage.Preferences access$300(com.ds.avare.NearestActivity) -> access$300
    com.ds.avare.place.Destination access$200(com.ds.avare.NearestActivity) -> access$200
    android.widget.Toast access$400(com.ds.avare.NearestActivity) -> access$400
    java.lang.String access$500(com.ds.avare.NearestActivity) -> access$500
    com.ds.avare.adapters.NearestAdapter access$600(com.ds.avare.NearestActivity) -> access$600
    com.ds.avare.StorageService access$002(com.ds.avare.NearestActivity,com.ds.avare.StorageService) -> access$002
    com.ds.avare.gps.GpsInterface access$700(com.ds.avare.NearestActivity) -> access$700
    android.widget.ListView access$800(com.ds.avare.NearestActivity) -> access$800
    java.lang.String access$502(com.ds.avare.NearestActivity,java.lang.String) -> access$502
    android.widget.Button access$900(com.ds.avare.NearestActivity) -> access$900
    com.ds.avare.animation.AnimateButton access$1000(com.ds.avare.NearestActivity) -> access$1000
    com.ds.avare.animation.AnimateButton access$1100(com.ds.avare.NearestActivity) -> access$1100
com.ds.avare.NearestActivity$1 -> com.ds.avare.NearestActivity$1:
    com.ds.avare.NearestActivity this$0 -> a
    void <init>(com.ds.avare.NearestActivity) -> <init>
    void statusCallback(android.location.GpsStatus) -> statusCallback
    void locationCallback(android.location.Location) -> locationCallback
    void timeoutCallback(boolean) -> timeoutCallback
    void enabledCallback(boolean) -> enabledCallback
com.ds.avare.NearestActivity$2 -> com.ds.avare.NearestActivity$2:
    com.ds.avare.NearestActivity this$0 -> a
    void <init>(com.ds.avare.NearestActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.NearestActivity$3 -> com.ds.avare.NearestActivity$3:
    com.ds.avare.NearestActivity this$0 -> a
    void <init>(com.ds.avare.NearestActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.NearestActivity$4 -> com.ds.avare.NearestActivity$4:
    com.ds.avare.NearestActivity this$0 -> a
    void <init>(com.ds.avare.NearestActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.NearestActivity$5 -> com.ds.avare.NearestActivity$5:
    com.ds.avare.NearestActivity this$0 -> a
    void <init>(com.ds.avare.NearestActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.NearestActivity$6 -> com.ds.avare.NearestActivity$6:
    com.ds.avare.NearestActivity this$0 -> a
    void <init>(com.ds.avare.NearestActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.NearestActivity$7 -> com.ds.avare.NearestActivity$7:
    com.ds.avare.NearestActivity this$0 -> a
    void <init>(com.ds.avare.NearestActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.NearestActivity$8 -> com.ds.avare.NearestActivity$8:
    com.ds.avare.NearestActivity this$0 -> a
    void <init>(com.ds.avare.NearestActivity) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.ds.avare.NearestActivity$8$1 -> com.ds.avare.NearestActivity$8$1:
    com.ds.avare.NearestActivity$8 this$1 -> a
    void <init>(com.ds.avare.NearestActivity$8) -> <init>
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.ds.avare.PlanActivity -> com.ds.avare.PlanActivity:
    android.webkit.WebView mWebView -> a
    android.widget.Button mBackButton -> b
    android.widget.Button mActivateButton -> c
    android.widget.Button mForwardButton -> d
    android.widget.ProgressBar mProgressBarSearch -> e
    com.ds.avare.webinfc.WebAppPlanInterface mInfc -> f
    boolean mInited -> g
    java.util.Timer mTimer -> h
    com.ds.avare.StorageService mService -> i
    boolean mIsPageLoaded -> j
    android.content.Context mContext -> k
    com.ds.avare.gps.GpsInterface mGpsInfc -> l
    android.content.ServiceConnection mConnection -> m
    android.os.Handler mHandler -> n
    void <init>() -> <init>
    void onBackPressed() -> onBackPressed
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onRestart() -> onRestart
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    android.os.Handler access$000(com.ds.avare.PlanActivity) -> access$000
    boolean access$102(com.ds.avare.PlanActivity,boolean) -> access$102
    com.ds.avare.webinfc.WebAppPlanInterface access$200(com.ds.avare.PlanActivity) -> access$200
    com.ds.avare.StorageService access$302(com.ds.avare.PlanActivity,com.ds.avare.StorageService) -> access$302
    com.ds.avare.gps.GpsInterface access$400(com.ds.avare.PlanActivity) -> access$400
    com.ds.avare.StorageService access$300(com.ds.avare.PlanActivity) -> access$300
    java.util.Timer access$502(com.ds.avare.PlanActivity,java.util.Timer) -> access$502
    java.util.Timer access$500(com.ds.avare.PlanActivity) -> access$500
    boolean access$100(com.ds.avare.PlanActivity) -> access$100
    boolean access$700(com.ds.avare.PlanActivity) -> access$700
    boolean access$702(com.ds.avare.PlanActivity,boolean) -> access$702
    android.widget.ProgressBar access$800(com.ds.avare.PlanActivity) -> access$800
    android.widget.Button access$900(com.ds.avare.PlanActivity) -> access$900
    android.content.Context access$1000(com.ds.avare.PlanActivity) -> access$1000
com.ds.avare.PlanActivity$1 -> com.ds.avare.PlanActivity$1:
    com.ds.avare.PlanActivity this$0 -> a
    void <init>(com.ds.avare.PlanActivity) -> <init>
    void statusCallback(android.location.GpsStatus) -> statusCallback
    void locationCallback(android.location.Location) -> locationCallback
    void timeoutCallback(boolean) -> timeoutCallback
    void enabledCallback(boolean) -> enabledCallback
com.ds.avare.PlanActivity$10 -> com.ds.avare.PlanActivity$10:
    com.ds.avare.PlanActivity this$0 -> a
    void <init>(com.ds.avare.PlanActivity) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.ds.avare.PlanActivity$10$1 -> com.ds.avare.PlanActivity$10$1:
    com.ds.avare.PlanActivity$10 this$1 -> a
    void <init>(com.ds.avare.PlanActivity$10) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.PlanActivity$2 -> com.ds.avare.PlanActivity$2:
    com.ds.avare.PlanActivity this$0 -> a
    void <init>(com.ds.avare.PlanActivity) -> <init>
    java.lang.Object callback(java.lang.Object,java.lang.Object) -> callback
com.ds.avare.PlanActivity$3 -> com.ds.avare.PlanActivity$3:
    com.ds.avare.PlanActivity this$0 -> a
    void <init>(com.ds.avare.PlanActivity) -> <init>
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
com.ds.avare.PlanActivity$3$1 -> com.ds.avare.PlanActivity$3$1:
    android.webkit.JsResult val$result -> a
    com.ds.avare.PlanActivity$3 this$1 -> b
    void <init>(com.ds.avare.PlanActivity$3,android.webkit.JsResult) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.PlanActivity$3$2 -> com.ds.avare.PlanActivity$3$2:
    android.webkit.JsResult val$result -> a
    com.ds.avare.PlanActivity$3 this$1 -> b
    void <init>(com.ds.avare.PlanActivity$3,android.webkit.JsResult) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.PlanActivity$3$3 -> com.ds.avare.PlanActivity$3$3:
    android.webkit.JsResult val$result -> a
    com.ds.avare.PlanActivity$3 this$1 -> b
    void <init>(com.ds.avare.PlanActivity$3,android.webkit.JsResult) -> <init>
    void onCancel(android.content.DialogInterface) -> onCancel
com.ds.avare.PlanActivity$4 -> com.ds.avare.PlanActivity$4:
    com.ds.avare.PlanActivity this$0 -> a
    void <init>(com.ds.avare.PlanActivity) -> <init>
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.ds.avare.PlanActivity$5 -> com.ds.avare.PlanActivity$5:
    com.ds.avare.PlanActivity this$0 -> a
    void <init>(com.ds.avare.PlanActivity) -> <init>
    boolean onLongClick(android.view.View) -> onLongClick
com.ds.avare.PlanActivity$6 -> com.ds.avare.PlanActivity$6:
    com.ds.avare.PlanActivity this$0 -> a
    void <init>(com.ds.avare.PlanActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.PlanActivity$7 -> com.ds.avare.PlanActivity$7:
    com.ds.avare.PlanActivity this$0 -> a
    void <init>(com.ds.avare.PlanActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.PlanActivity$8 -> com.ds.avare.PlanActivity$8:
    com.ds.avare.PlanActivity this$0 -> a
    void <init>(com.ds.avare.PlanActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.PlanActivity$9 -> com.ds.avare.PlanActivity$9:
    com.ds.avare.PlanActivity this$0 -> a
    void <init>(com.ds.avare.PlanActivity) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.ds.avare.PlanActivity$UpdateTask -> com.ds.avare.PlanActivity$UpdateTask:
    com.ds.avare.PlanActivity this$0 -> a
    void <init>(com.ds.avare.PlanActivity) -> <init>
    void run() -> run
    void <init>(com.ds.avare.PlanActivity,com.ds.avare.PlanActivity$1) -> <init>
com.ds.avare.PlatesActivity -> com.ds.avare.PlatesActivity:
    com.ds.avare.storage.Preferences mPref -> a
    com.ds.avare.views.PlatesView mPlatesView -> b
    com.ds.avare.StorageService mService -> c
    com.ds.avare.place.Destination mDestination -> d
    android.widget.Button mCenterButton -> e
    android.widget.Button mAirportButton -> f
    android.widget.Button mPlatesButton -> g
    android.widget.Button mPlatesTagButton -> h
    android.widget.Button mPlatesTimerButton -> i
    android.widget.Chronometer mChronometer -> j
    android.app.AlertDialog mPlatesPopup -> k
    android.app.AlertDialog mAirportPopup -> l
    android.widget.Button mDrawClearButton -> m
    com.ds.avare.animation.TwoButton mDrawButton -> n
    com.ds.avare.place.Destination mDest -> o
    android.widget.Toast mToast -> p
    java.util.ArrayList mListPlates -> q
    java.util.ArrayList mListAirports -> r
    java.lang.String[] mPlateFound -> s
    java.lang.String mDestString -> t
    java.lang.String nearString -> u
    boolean mCounting -> v
    com.ds.avare.PlatesActivity$TankObserver mTankObserver -> w
    float[] mMatrix -> x
    com.ds.avare.gps.GpsInterface mGpsInfc -> y
    android.content.ServiceConnection mConnection -> z
    void <init>() -> <init>
    float[] getMatrix(java.lang.String) -> getMatrix
    void addAirport(java.lang.String) -> addAirport
    void onBackPressed() -> onBackPressed
    boolean arePopupsShowing() -> arePopupsShowing
    void onCreate(android.os.Bundle) -> onCreate
    void setPlateFromPos(int) -> setPlateFromPos
    java.lang.String getLastIfAirport() -> getLastIfAirport
    void setAirportFromPos(int) -> setAirportFromPos
    void onPause() -> onPause
    void onResume() -> onResume
    boolean doesAirportHavePlates(java.lang.String,java.lang.String) -> doesAirportHavePlates
    boolean doesAirportHaveAirportDiagram(java.lang.String,java.lang.String) -> doesAirportHaveAirportDiagram
    void update(java.util.Observable,java.lang.Object) -> update
    void onChronometerTick(android.widget.Chronometer) -> onChronometerTick
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    com.ds.avare.views.PlatesView access$000(com.ds.avare.PlatesActivity) -> access$000
    com.ds.avare.StorageService access$100(com.ds.avare.PlatesActivity) -> access$100
    com.ds.avare.storage.Preferences access$200(com.ds.avare.PlatesActivity) -> access$200
    java.util.ArrayList access$300(com.ds.avare.PlatesActivity) -> access$300
    boolean access$400(com.ds.avare.PlatesActivity) -> access$400
    void access$500(com.ds.avare.PlatesActivity,int) -> access$500
    android.app.AlertDialog access$602(com.ds.avare.PlatesActivity,android.app.AlertDialog) -> access$602
    android.app.AlertDialog access$600(com.ds.avare.PlatesActivity) -> access$600
    boolean access$700(com.ds.avare.PlatesActivity) -> access$700
    boolean access$702(com.ds.avare.PlatesActivity,boolean) -> access$702
    android.widget.Chronometer access$800(com.ds.avare.PlatesActivity) -> access$800
    android.widget.Button access$900(com.ds.avare.PlatesActivity) -> access$900
    com.ds.avare.animation.TwoButton access$1000(com.ds.avare.PlatesActivity) -> access$1000
    android.widget.Button access$1100(com.ds.avare.PlatesActivity) -> access$1100
    java.util.ArrayList access$1200(com.ds.avare.PlatesActivity) -> access$1200
    void access$1300(com.ds.avare.PlatesActivity,int) -> access$1300
    android.app.AlertDialog access$1402(com.ds.avare.PlatesActivity,android.app.AlertDialog) -> access$1402
    android.app.AlertDialog access$1400(com.ds.avare.PlatesActivity) -> access$1400
    com.ds.avare.StorageService access$102(com.ds.avare.PlatesActivity,com.ds.avare.StorageService) -> access$102
    com.ds.avare.gps.GpsInterface access$1700(com.ds.avare.PlatesActivity) -> access$1700
    java.util.ArrayList access$302(com.ds.avare.PlatesActivity,java.util.ArrayList) -> access$302
    java.util.ArrayList access$1202(com.ds.avare.PlatesActivity,java.util.ArrayList) -> access$1202
    java.lang.String access$1800(com.ds.avare.PlatesActivity) -> access$1800
    java.lang.String access$1900(com.ds.avare.PlatesActivity) -> access$1900
    void access$2000(com.ds.avare.PlatesActivity,java.lang.String) -> access$2000
    com.ds.avare.place.Destination access$2102(com.ds.avare.PlatesActivity,com.ds.avare.place.Destination) -> access$2102
    com.ds.avare.place.Destination access$2100(com.ds.avare.PlatesActivity) -> access$2100
    com.ds.avare.PlatesActivity$TankObserver access$2200(com.ds.avare.PlatesActivity) -> access$2200
com.ds.avare.PlatesActivity$1 -> com.ds.avare.PlatesActivity$1:
    com.ds.avare.PlatesActivity this$0 -> a
    void <init>(com.ds.avare.PlatesActivity) -> <init>
    void statusCallback(android.location.GpsStatus) -> statusCallback
    void locationCallback(android.location.Location) -> locationCallback
    void timeoutCallback(boolean) -> timeoutCallback
    void enabledCallback(boolean) -> enabledCallback
com.ds.avare.PlatesActivity$10 -> com.ds.avare.PlatesActivity$10:
    com.ds.avare.PlatesActivity this$0 -> a
    void <init>(com.ds.avare.PlatesActivity) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.ds.avare.PlatesActivity$2 -> com.ds.avare.PlatesActivity$2:
    com.ds.avare.PlatesActivity this$0 -> a
    void <init>(com.ds.avare.PlatesActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.PlatesActivity$2$1 -> com.ds.avare.PlatesActivity$2$1:
    com.ds.avare.PlatesActivity$2 this$1 -> a
    void <init>(com.ds.avare.PlatesActivity$2) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.PlatesActivity$3 -> com.ds.avare.PlatesActivity$3:
    com.ds.avare.PlatesActivity this$0 -> a
    void <init>(com.ds.avare.PlatesActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.PlatesActivity$4 -> com.ds.avare.PlatesActivity$4:
    com.ds.avare.PlatesActivity this$0 -> a
    void <init>(com.ds.avare.PlatesActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.PlatesActivity$5 -> com.ds.avare.PlatesActivity$5:
    com.ds.avare.PlatesActivity this$0 -> a
    void <init>(com.ds.avare.PlatesActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.PlatesActivity$6 -> com.ds.avare.PlatesActivity$6:
    com.ds.avare.PlatesActivity this$0 -> a
    void <init>(com.ds.avare.PlatesActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.PlatesActivity$6$1 -> com.ds.avare.PlatesActivity$6$1:
    com.ds.avare.PlatesActivity$6 this$1 -> a
    void <init>(com.ds.avare.PlatesActivity$6) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.PlatesActivity$7 -> com.ds.avare.PlatesActivity$7:
    com.ds.avare.PlatesActivity this$0 -> a
    void <init>(com.ds.avare.PlatesActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.PlatesActivity$8 -> com.ds.avare.PlatesActivity$8:
    com.ds.avare.PlatesActivity this$0 -> a
    void <init>(com.ds.avare.PlatesActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.PlatesActivity$9 -> com.ds.avare.PlatesActivity$9:
    com.ds.avare.PlatesActivity this$0 -> a
    void <init>(com.ds.avare.PlatesActivity) -> <init>
    boolean accept(java.io.File,java.lang.String) -> accept
com.ds.avare.PlatesActivity$PlatesComparable -> com.ds.avare.PlatesActivity$PlatesComparable:
    com.ds.avare.PlatesActivity this$0 -> a
    void <init>(com.ds.avare.PlatesActivity) -> <init>
    int compare(java.lang.String,java.lang.String) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
    void <init>(com.ds.avare.PlatesActivity,com.ds.avare.PlatesActivity$1) -> <init>
com.ds.avare.PlatesActivity$TankObserver -> com.ds.avare.PlatesActivity$TankObserver:
    com.ds.avare.PlatesActivity this$0 -> a
    void <init>(com.ds.avare.PlatesActivity) -> <init>
    void update(java.util.Observable,java.lang.Object) -> update
    void <init>(com.ds.avare.PlatesActivity,com.ds.avare.PlatesActivity$1) -> <init>
com.ds.avare.PlatesActivity$TankObserver$1 -> com.ds.avare.PlatesActivity$TankObserver$1:
    com.ds.avare.instruments.FuelTimer val$fuelTimer -> a
    com.ds.avare.PlatesActivity$TankObserver this$1 -> b
    void <init>(com.ds.avare.PlatesActivity$TankObserver,com.ds.avare.instruments.FuelTimer) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.PlatesTagActivity -> com.ds.avare.PlatesTagActivity:
    com.ds.avare.views.PlatesTagView mPlatesView -> b
    com.ds.avare.StorageService mService -> c
    com.ds.avare.position.PixelCoordinate[] mPoint -> d
    com.ds.avare.position.Coordinate[] mPointLL -> e
    android.widget.Button mGeotagButton -> f
    android.widget.Button mVerifyButton -> g
    android.widget.Button mClearButton -> h
    android.widget.Button mReportButton -> i
    android.widget.Button mShareButton -> j
    android.widget.EditText mText -> k
    android.widget.Spinner mSpinner -> l
    android.widget.Toast mToast -> m
    com.ds.avare.storage.Preferences mPref -> n
    java.util.LinkedList mTags -> o
    boolean mTagged -> p
    android.app.AlertDialog mAlertDialog -> q
    com.ds.avare.place.Destination mDest -> r
    java.lang.String mName -> s
    java.lang.String mAirport -> t
    android.os.AsyncTask mPlateTask -> a
    double mDx -> u
    double mDy -> v
    double mLonTopLeft -> w
    double mLatTopLeft -> x
    com.ds.avare.gps.GpsInterface mGpsInfc -> y
    android.content.ServiceConnection mConnection -> z
    void <init>() -> <init>
    void drawAirport() -> drawAirport
    void store() -> store
    void clearParams() -> clearParams
    void clear() -> clear
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onResume() -> onResume
    java.lang.String putTagsToStorageFormat(java.util.LinkedList) -> putTagsToStorageFormat
    java.util.LinkedList getTagsStorageFromat(java.lang.String) -> getTagsStorageFromat
    java.lang.String getNameFromPath(java.lang.String) -> getNameFromPath
    void update(java.util.Observable,java.lang.Object) -> update
    boolean access$000(com.ds.avare.PlatesTagActivity) -> access$000
    android.widget.Toast access$100(com.ds.avare.PlatesTagActivity) -> access$100
    android.widget.EditText access$200(com.ds.avare.PlatesTagActivity) -> access$200
    android.widget.Spinner access$300(com.ds.avare.PlatesTagActivity) -> access$300
    com.ds.avare.StorageService access$400(com.ds.avare.PlatesTagActivity) -> access$400
    com.ds.avare.position.PixelCoordinate[] access$500(com.ds.avare.PlatesTagActivity) -> access$500
    com.ds.avare.views.PlatesTagView access$600(com.ds.avare.PlatesTagActivity) -> access$600
    com.ds.avare.position.Coordinate[] access$700(com.ds.avare.PlatesTagActivity) -> access$700
    double access$802(com.ds.avare.PlatesTagActivity,double) -> access$802
    double access$902(com.ds.avare.PlatesTagActivity,double) -> access$902
    double access$900(com.ds.avare.PlatesTagActivity) -> access$900
    double access$800(com.ds.avare.PlatesTagActivity) -> access$800
    double access$1002(com.ds.avare.PlatesTagActivity,double) -> access$1002
    double access$1102(com.ds.avare.PlatesTagActivity,double) -> access$1102
    double access$1000(com.ds.avare.PlatesTagActivity) -> access$1000
    double access$1100(com.ds.avare.PlatesTagActivity) -> access$1100
    com.ds.avare.place.Destination access$1200(com.ds.avare.PlatesTagActivity) -> access$1200
    void access$1300(com.ds.avare.PlatesTagActivity) -> access$1300
    void access$1400(com.ds.avare.PlatesTagActivity) -> access$1400
    void access$1500(com.ds.avare.PlatesTagActivity) -> access$1500
    android.app.AlertDialog access$1602(com.ds.avare.PlatesTagActivity,android.app.AlertDialog) -> access$1602
    android.app.AlertDialog access$1600(com.ds.avare.PlatesTagActivity) -> access$1600
    java.lang.String access$1700(com.ds.avare.PlatesTagActivity) -> access$1700
    com.ds.avare.storage.Preferences access$1800(com.ds.avare.PlatesTagActivity) -> access$1800
    void access$1900(com.ds.avare.PlatesTagActivity) -> access$1900
    com.ds.avare.StorageService access$402(com.ds.avare.PlatesTagActivity,com.ds.avare.StorageService) -> access$402
    com.ds.avare.gps.GpsInterface access$2000(com.ds.avare.PlatesTagActivity) -> access$2000
    boolean access$002(com.ds.avare.PlatesTagActivity,boolean) -> access$002
    java.lang.String access$1702(com.ds.avare.PlatesTagActivity,java.lang.String) -> access$1702
    java.lang.String access$2102(com.ds.avare.PlatesTagActivity,java.lang.String) -> access$2102
    com.ds.avare.place.Destination access$1202(com.ds.avare.PlatesTagActivity,com.ds.avare.place.Destination) -> access$1202
    java.lang.String access$2100(com.ds.avare.PlatesTagActivity) -> access$2100
    java.util.LinkedList access$2200(com.ds.avare.PlatesTagActivity) -> access$2200
    void <clinit>() -> <clinit>
com.ds.avare.PlatesTagActivity$1 -> com.ds.avare.PlatesTagActivity$1:
    com.ds.avare.PlatesTagActivity this$0 -> a
    void <init>(com.ds.avare.PlatesTagActivity) -> <init>
    void statusCallback(android.location.GpsStatus) -> statusCallback
    void locationCallback(android.location.Location) -> locationCallback
    void timeoutCallback(boolean) -> timeoutCallback
    void enabledCallback(boolean) -> enabledCallback
com.ds.avare.PlatesTagActivity$2 -> com.ds.avare.PlatesTagActivity$2:
    com.ds.avare.PlatesTagActivity this$0 -> a
    void <init>(com.ds.avare.PlatesTagActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.PlatesTagActivity$3 -> com.ds.avare.PlatesTagActivity$3:
    com.ds.avare.PlatesTagActivity this$0 -> a
    void <init>(com.ds.avare.PlatesTagActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.PlatesTagActivity$4 -> com.ds.avare.PlatesTagActivity$4:
    com.ds.avare.PlatesTagActivity this$0 -> a
    void <init>(com.ds.avare.PlatesTagActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.PlatesTagActivity$5 -> com.ds.avare.PlatesTagActivity$5:
    com.ds.avare.PlatesTagActivity this$0 -> a
    void <init>(com.ds.avare.PlatesTagActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.PlatesTagActivity$5$1 -> com.ds.avare.PlatesTagActivity$5$1:
    com.ds.avare.PlatesTagActivity$5 this$1 -> a
    void <init>(com.ds.avare.PlatesTagActivity$5) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.PlatesTagActivity$5$1$1 -> com.ds.avare.PlatesTagActivity$5$1$1:
    java.lang.String err -> a
    com.ds.avare.PlatesTagActivity$5$1 this$2 -> b
    void <init>(com.ds.avare.PlatesTagActivity$5$1) -> <init>
    java.lang.Boolean doInBackground(java.lang.Void[]) -> doInBackground
    void onProgressUpdate(java.lang.Void[]) -> onProgressUpdate
    void onPostExecute(java.lang.Boolean) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.ds.avare.PlatesTagActivity$5$1$1$1 -> com.ds.avare.PlatesTagActivity$5$1$1$1:
    com.ds.avare.PlatesTagActivity$5$1$1 this$3 -> a
    void <init>(com.ds.avare.PlatesTagActivity$5$1$1) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.PlatesTagActivity$5$2 -> com.ds.avare.PlatesTagActivity$5$2:
    com.ds.avare.PlatesTagActivity$5 this$1 -> a
    void <init>(com.ds.avare.PlatesTagActivity$5) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.PlatesTagActivity$6 -> com.ds.avare.PlatesTagActivity$6:
    com.ds.avare.PlatesTagActivity this$0 -> a
    void <init>(com.ds.avare.PlatesTagActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.PlatesTagActivity$6$1 -> com.ds.avare.PlatesTagActivity$6$1:
    com.ds.avare.PlatesTagActivity$6 this$1 -> a
    void <init>(com.ds.avare.PlatesTagActivity$6) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.PlatesTagActivity$6$1$1 -> com.ds.avare.PlatesTagActivity$6$1$1:
    java.lang.String ret -> a
    com.ds.avare.PlatesTagActivity$6$1 this$2 -> b
    void <init>(com.ds.avare.PlatesTagActivity$6$1) -> <init>
    java.lang.Boolean doInBackground(java.lang.Void[]) -> doInBackground
    void onProgressUpdate(java.lang.Void[]) -> onProgressUpdate
    void onPostExecute(java.lang.Boolean) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.ds.avare.PlatesTagActivity$6$2 -> com.ds.avare.PlatesTagActivity$6$2:
    com.ds.avare.PlatesTagActivity$6 this$1 -> a
    void <init>(com.ds.avare.PlatesTagActivity$6) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.PlatesTagActivity$7 -> com.ds.avare.PlatesTagActivity$7:
    com.ds.avare.PlatesTagActivity this$0 -> a
    void <init>(com.ds.avare.PlatesTagActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.PlatesTagActivity$7$1 -> com.ds.avare.PlatesTagActivity$7$1:
    com.ds.avare.PlatesTagActivity$7 this$1 -> a
    void <init>(com.ds.avare.PlatesTagActivity$7) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.PlatesTagActivity$7$2 -> com.ds.avare.PlatesTagActivity$7$2:
    com.ds.avare.PlatesTagActivity$7 this$1 -> a
    void <init>(com.ds.avare.PlatesTagActivity$7) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.PlatesTagActivity$8 -> com.ds.avare.PlatesTagActivity$8:
    com.ds.avare.PlatesTagActivity this$0 -> a
    void <init>(com.ds.avare.PlatesTagActivity) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.ds.avare.PlatesTagActivity$8$1 -> com.ds.avare.PlatesTagActivity$8$1:
    com.ds.avare.PlatesTagActivity$8 this$1 -> a
    void <init>(com.ds.avare.PlatesTagActivity$8) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.PlatesTagActivity$8$2 -> com.ds.avare.PlatesTagActivity$8$2:
    com.ds.avare.PlatesTagActivity$8 this$1 -> a
    void <init>(com.ds.avare.PlatesTagActivity$8) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.PrefActivity -> com.ds.avare.PrefActivity:
    com.ds.avare.StorageService mService -> a
    com.ds.avare.gps.GpsInterface mGpsInfc -> b
    android.content.ServiceConnection mConnection -> c
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    com.ds.avare.StorageService access$002(com.ds.avare.PrefActivity,com.ds.avare.StorageService) -> access$002
    com.ds.avare.gps.GpsInterface access$100(com.ds.avare.PrefActivity) -> access$100
    com.ds.avare.StorageService access$000(com.ds.avare.PrefActivity) -> access$000
com.ds.avare.PrefActivity$1 -> com.ds.avare.PrefActivity$1:
    com.ds.avare.PrefActivity this$0 -> a
    void <init>(com.ds.avare.PrefActivity) -> <init>
    void statusCallback(android.location.GpsStatus) -> statusCallback
    void locationCallback(android.location.Location) -> locationCallback
    void timeoutCallback(boolean) -> timeoutCallback
    void enabledCallback(boolean) -> enabledCallback
com.ds.avare.PrefActivity$2 -> com.ds.avare.PrefActivity$2:
    com.ds.avare.PrefActivity this$0 -> a
    void <init>(com.ds.avare.PrefActivity) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.ds.avare.RegisterActivity -> com.ds.avare.RegisterActivity:
    android.os.AsyncTask mRegisterTask -> a
    android.widget.Button mButtonRegister -> b
    android.widget.Button mButtonUnregister -> c
    android.app.AlertDialog mRegisterDialog -> d
    android.app.AlertDialog mUnregisterDialog -> e
    android.widget.Spinner mEmailSpinner -> f
    android.webkit.WebView mPrivacy -> g
    com.ds.avare.storage.Preferences mPref -> h
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void setChoices() -> setChoices
    android.widget.Spinner access$000(com.ds.avare.RegisterActivity) -> access$000
    com.ds.avare.storage.Preferences access$100(com.ds.avare.RegisterActivity) -> access$100
    void access$200(com.ds.avare.RegisterActivity) -> access$200
    android.webkit.WebView access$300(com.ds.avare.RegisterActivity) -> access$300
    android.app.AlertDialog access$400(com.ds.avare.RegisterActivity) -> access$400
    android.app.AlertDialog access$500(com.ds.avare.RegisterActivity) -> access$500
    void <clinit>() -> <clinit>
com.ds.avare.RegisterActivity$1 -> com.ds.avare.RegisterActivity$1:
    com.ds.avare.RegisterActivity this$0 -> a
    void <init>(com.ds.avare.RegisterActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.RegisterActivity$1$1 -> com.ds.avare.RegisterActivity$1$1:
    java.lang.String val$email -> a
    com.ds.avare.RegisterActivity$1 this$1 -> b
    void <init>(com.ds.avare.RegisterActivity$1,java.lang.String) -> <init>
    java.lang.Boolean doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Boolean) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.ds.avare.RegisterActivity$2 -> com.ds.avare.RegisterActivity$2:
    com.ds.avare.RegisterActivity this$0 -> a
    void <init>(com.ds.avare.RegisterActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.RegisterActivity$3 -> com.ds.avare.RegisterActivity$3:
    com.ds.avare.RegisterActivity this$0 -> a
    void <init>(com.ds.avare.RegisterActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.RegisterActivity$3$1 -> com.ds.avare.RegisterActivity$3$1:
    com.ds.avare.RegisterActivity$3 this$1 -> a
    void <init>(com.ds.avare.RegisterActivity$3) -> <init>
    java.lang.Boolean doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Boolean) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.ds.avare.RegisterActivity$4 -> com.ds.avare.RegisterActivity$4:
    com.ds.avare.RegisterActivity this$0 -> a
    void <init>(com.ds.avare.RegisterActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.RegisterActivity$5 -> com.ds.avare.RegisterActivity$5:
    com.ds.avare.RegisterActivity this$0 -> a
    void <init>(com.ds.avare.RegisterActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.RegisterActivity$5$1 -> com.ds.avare.RegisterActivity$5$1:
    com.ds.avare.RegisterActivity$5 this$1 -> a
    void <init>(com.ds.avare.RegisterActivity$5) -> <init>
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.ds.avare.RegisterActivity$6 -> com.ds.avare.RegisterActivity$6:
    com.ds.avare.RegisterActivity this$0 -> a
    void <init>(com.ds.avare.RegisterActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.SatelliteActivity -> com.ds.avare.SatelliteActivity:
    com.ds.avare.views.SatelliteView mSatelliteView -> a
    com.ds.avare.views.MemView mMemView -> b
    android.widget.TextView mMemText -> c
    android.widget.TextView mMapAreaText -> d
    com.ds.avare.StorageService mService -> e
    android.widget.SeekBar mBrightnessBar -> f
    android.widget.TextView mGpsText -> g
    com.ds.avare.gps.GpsInterface mGpsInfc -> h
    android.content.ServiceConnection mConnection -> i
    void <init>() -> <init>
    void updateMem() -> updateMem
    void updateMapArea() -> updateMapArea
    void onBackPressed() -> onBackPressed
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    com.ds.avare.views.SatelliteView access$000(com.ds.avare.SatelliteActivity) -> access$000
    android.widget.TextView access$100(com.ds.avare.SatelliteActivity) -> access$100
    void access$200(com.ds.avare.SatelliteActivity) -> access$200
    void access$300(com.ds.avare.SatelliteActivity) -> access$300
    com.ds.avare.StorageService access$402(com.ds.avare.SatelliteActivity,com.ds.avare.StorageService) -> access$402
    com.ds.avare.gps.GpsInterface access$500(com.ds.avare.SatelliteActivity) -> access$500
    com.ds.avare.StorageService access$400(com.ds.avare.SatelliteActivity) -> access$400
com.ds.avare.SatelliteActivity$1 -> com.ds.avare.SatelliteActivity$1:
    com.ds.avare.SatelliteActivity this$0 -> a
    void <init>(com.ds.avare.SatelliteActivity) -> <init>
    void statusCallback(android.location.GpsStatus) -> statusCallback
    void locationCallback(android.location.Location) -> locationCallback
    void timeoutCallback(boolean) -> timeoutCallback
    void enabledCallback(boolean) -> enabledCallback
com.ds.avare.SatelliteActivity$2 -> com.ds.avare.SatelliteActivity$2:
    com.ds.avare.SatelliteActivity this$0 -> a
    void <init>(com.ds.avare.SatelliteActivity) -> <init>
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
com.ds.avare.SatelliteActivity$3 -> com.ds.avare.SatelliteActivity$3:
    com.ds.avare.SatelliteActivity this$0 -> a
    void <init>(com.ds.avare.SatelliteActivity) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.ds.avare.SearchActivity -> com.ds.avare.SearchActivity:
    com.ds.avare.StorageService mService -> a
    android.widget.ListView mSearchListView -> b
    android.widget.EditText mSearchText -> c
    com.ds.avare.storage.Preferences mPref -> d
    android.widget.Toast mToast -> e
    com.ds.avare.adapters.SearchAdapter mAdapter -> f
    com.ds.avare.SearchActivity$SearchTask mSearchTask -> g
    android.widget.ProgressBar mProgressBar -> h
    java.lang.String mSelected -> i
    android.widget.Button mSelectedButton -> j
    android.widget.Button mEditButton -> k
    android.widget.Button mPlanButton -> l
    android.widget.Button mPlatesButton -> m
    boolean mIsWaypoint -> n
    com.ds.avare.animation.AnimateButton mAnimatePlates -> o
    com.ds.avare.animation.AnimateButton mAnimatePlan -> p
    com.ds.avare.animation.AnimateButton mAnimateSelect -> q
    com.ds.avare.animation.AnimateButton mAnimateEdit -> r
    android.app.AlertDialog mAlertDialogEdit -> s
    com.ds.avare.place.Destination mDestination -> t
    com.ds.avare.gps.GpsInterface mGpsInfc -> u
    android.content.ServiceConnection mConnection -> v
    void <init>() -> <init>
    void onBackPressed() -> onBackPressed
    void goTo(java.lang.String,java.lang.String,java.lang.String) -> goTo
    void planTo(java.lang.String,java.lang.String,java.lang.String) -> planTo
    void initList() -> initList
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onRestart() -> onRestart
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void update(java.util.Observable,java.lang.Object) -> update
    java.lang.String access$000(com.ds.avare.SearchActivity) -> access$000
    com.ds.avare.storage.Preferences access$100(com.ds.avare.SearchActivity) -> access$100
    void access$200(com.ds.avare.SearchActivity) -> access$200
    android.widget.EditText access$300(com.ds.avare.SearchActivity) -> access$300
    java.lang.String access$002(com.ds.avare.SearchActivity,java.lang.String) -> access$002
    android.widget.Toast access$400(com.ds.avare.SearchActivity) -> access$400
    android.app.AlertDialog access$502(com.ds.avare.SearchActivity,android.app.AlertDialog) -> access$502
    android.app.AlertDialog access$500(com.ds.avare.SearchActivity) -> access$500
    void access$600(com.ds.avare.SearchActivity,java.lang.String,java.lang.String,java.lang.String) -> access$600
    com.ds.avare.StorageService access$700(com.ds.avare.SearchActivity) -> access$700
    com.ds.avare.adapters.SearchAdapter access$800(com.ds.avare.SearchActivity) -> access$800
    void access$900(com.ds.avare.SearchActivity,java.lang.String,java.lang.String,java.lang.String) -> access$900
    com.ds.avare.animation.AnimateButton access$1000(com.ds.avare.SearchActivity) -> access$1000
    com.ds.avare.animation.AnimateButton access$1100(com.ds.avare.SearchActivity) -> access$1100
    com.ds.avare.animation.AnimateButton access$1200(com.ds.avare.SearchActivity) -> access$1200
    com.ds.avare.animation.AnimateButton access$1300(com.ds.avare.SearchActivity) -> access$1300
    android.widget.ProgressBar access$1400(com.ds.avare.SearchActivity) -> access$1400
    com.ds.avare.SearchActivity$SearchTask access$1500(com.ds.avare.SearchActivity) -> access$1500
    com.ds.avare.adapters.SearchAdapter access$802(com.ds.avare.SearchActivity,com.ds.avare.adapters.SearchAdapter) -> access$802
    android.widget.ListView access$1600(com.ds.avare.SearchActivity) -> access$1600
    com.ds.avare.SearchActivity$SearchTask access$1502(com.ds.avare.SearchActivity,com.ds.avare.SearchActivity$SearchTask) -> access$1502
    com.ds.avare.StorageService access$702(com.ds.avare.SearchActivity,com.ds.avare.StorageService) -> access$702
    com.ds.avare.gps.GpsInterface access$1800(com.ds.avare.SearchActivity) -> access$1800
com.ds.avare.SearchActivity$1 -> com.ds.avare.SearchActivity$1:
    com.ds.avare.SearchActivity this$0 -> a
    void <init>(com.ds.avare.SearchActivity) -> <init>
    void statusCallback(android.location.GpsStatus) -> statusCallback
    void locationCallback(android.location.Location) -> locationCallback
    void timeoutCallback(boolean) -> timeoutCallback
    void enabledCallback(boolean) -> enabledCallback
com.ds.avare.SearchActivity$2 -> com.ds.avare.SearchActivity$2:
    com.ds.avare.SearchActivity this$0 -> a
    void <init>(com.ds.avare.SearchActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.SearchActivity$3 -> com.ds.avare.SearchActivity$3:
    com.ds.avare.SearchActivity this$0 -> a
    void <init>(com.ds.avare.SearchActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.SearchActivity$3$1 -> com.ds.avare.SearchActivity$3$1:
    android.widget.EditText val$edit -> a
    com.ds.avare.SearchActivity$3 this$1 -> b
    void <init>(com.ds.avare.SearchActivity$3,android.widget.EditText) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.SearchActivity$3$2 -> com.ds.avare.SearchActivity$3$2:
    com.ds.avare.SearchActivity$3 this$1 -> a
    void <init>(com.ds.avare.SearchActivity$3) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.SearchActivity$4 -> com.ds.avare.SearchActivity$4:
    com.ds.avare.SearchActivity this$0 -> a
    void <init>(com.ds.avare.SearchActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.SearchActivity$5 -> com.ds.avare.SearchActivity$5:
    com.ds.avare.SearchActivity this$0 -> a
    void <init>(com.ds.avare.SearchActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.SearchActivity$6 -> com.ds.avare.SearchActivity$6:
    com.ds.avare.SearchActivity this$0 -> a
    void <init>(com.ds.avare.SearchActivity) -> <init>
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.ds.avare.SearchActivity$7 -> com.ds.avare.SearchActivity$7:
    com.ds.avare.SearchActivity this$0 -> a
    void <init>(com.ds.avare.SearchActivity) -> <init>
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.ds.avare.SearchActivity$8 -> com.ds.avare.SearchActivity$8:
    com.ds.avare.SearchActivity this$0 -> a
    void <init>(com.ds.avare.SearchActivity) -> <init>
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.ds.avare.SearchActivity$9 -> com.ds.avare.SearchActivity$9:
    com.ds.avare.SearchActivity this$0 -> a
    void <init>(com.ds.avare.SearchActivity) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.ds.avare.SearchActivity$SearchTask -> com.ds.avare.SearchActivity$SearchTask:
    java.lang.String[] selection -> b
    com.ds.avare.SearchActivity this$0 -> a
    void <init>(com.ds.avare.SearchActivity) -> <init>
    java.lang.Boolean doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Boolean) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void <init>(com.ds.avare.SearchActivity,com.ds.avare.SearchActivity$1) -> <init>
com.ds.avare.StorageService -> com.ds.avare.StorageService:
    com.ds.avare.storage.DataSource mImageDataSource -> a
    com.ds.avare.place.Destination mDestination -> b
    com.ds.avare.gps.GpsParams mGpsParams -> c
    com.ds.avare.position.Movement mMovement -> d
    com.ds.avare.shapes.Draw mDraw -> e
    com.ds.avare.shapes.PixelDraw mPixelDraw -> f
    com.ds.avare.weather.InternetWeatherCache mInternetWeatherCache -> g
    com.ds.avare.weather.AdsbWeatherCache mAdsbWeatherCache -> h
    com.ds.avare.adsb.TrafficCache mTrafficCache -> i
    com.ds.avare.shapes.Radar mRadar -> j
    java.lang.String mLastPlateAirport -> k
    int mLastPlateIndex -> l
    com.ds.avare.utils.Mutex mLocationSem -> m
    android.location.Location mLocation -> n
    boolean mDownloading -> o
    java.util.LinkedList mCheckLists -> p
    com.ds.avare.gps.Gps mGps -> q
    com.ds.avare.position.Pan mPan -> r
    java.lang.String mLastAfdAirport -> s
    com.ds.avare.place.Destination mLastAfdDestination -> t
    int mAfdIndex -> u
    com.ds.avare.place.Area mArea -> v
    com.ds.avare.place.Plan mPlan -> w
    com.ds.avare.network.TFRFetcher mTFRFetcher -> x
    java.util.Timer mTimer -> y
    java.util.LinkedList mGpsCallbacks -> z
    com.ds.avare.utils.BitmapHolder mDiagramBitmap -> A
    android.os.IBinder binder -> B
    boolean mIsGpsOn -> C
    int mCounter -> D
    com.ds.avare.shapes.TileMap mTiles -> E
    com.ds.avare.shapes.ElevationTile mElevTile -> F
    com.ds.avare.utils.InfoLines mInfoLines -> G
    com.ds.avare.utils.NavComments mNavComments -> H
    com.ds.avare.utils.ShadowedText mShadowedText -> I
    double mElev -> J
    double mThreshold -> K
    com.ds.avare.instruments.FlightTimer mFlightTimer -> L
    com.ds.avare.flightLog.KMLRecorder mKMLRecorder -> M
    com.ds.avare.instruments.Odometer mOdometer -> N
    com.ds.avare.instruments.CDI mCDI -> O
    com.ds.avare.instruments.VNAV mVNAV -> P
    com.ds.avare.instruments.VSI mVSI -> Q
    com.ds.avare.userDefinedWaypoints.UDWMgr mUDWMgr -> R
    com.ds.avare.instruments.DistanceRings mDistanceRings -> S
    com.ds.avare.cap.DrawCapLines mCap -> T
    com.ds.avare.externalFlightPlan.ExternalPlanMgr mExternalPlanMgr -> U
    com.ds.avare.flight.FlightStatus mFlightStatus -> V
    com.ds.avare.flight.Checklist mChecklist -> W
    com.ds.avare.instruments.EdgeDistanceTape mEdgeDistanceTape -> X
    com.ds.avare.instruments.FuelTimer mFuelTimer -> Y
    void <init>() -> <init>
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    com.ds.avare.utils.InfoLines getInfoLines() -> getInfoLines
    com.ds.avare.shapes.TileMap getTiles() -> getTiles
    com.ds.avare.network.TFRFetcher getTFRFetcher() -> getTFRFetcher
    java.util.LinkedList getTFRShapes() -> getTFRShapes
    com.ds.avare.storage.DataSource getDBResource() -> getDBResource
    com.ds.avare.place.Destination getDestination() -> getDestination
    void setDestination(com.ds.avare.place.Destination) -> setDestination
    void setDestinationPlanNoChange(com.ds.avare.place.Destination) -> setDestinationPlanNoChange
    com.ds.avare.place.Destination getLastAfdDestination() -> getLastAfdDestination
    void setLastAfdDestination(com.ds.avare.place.Destination) -> setLastAfdDestination
    void setAfdIndex(int) -> setAfdIndex
    int getAfdIndex() -> getAfdIndex
    java.lang.String getLastAfdAirport() -> getLastAfdAirport
    void setLastAfdAirport(java.lang.String) -> setLastAfdAirport
    com.ds.avare.gps.GpsParams getGpsParams() -> getGpsParams
    void setGpsParams(com.ds.avare.gps.GpsParams) -> setGpsParams
    void setMovement(com.ds.avare.position.Movement) -> setMovement
    com.ds.avare.position.Movement getMovement() -> getMovement
    void setPan(com.ds.avare.position.Pan) -> setPan
    com.ds.avare.position.Pan getPan() -> getPan
    com.ds.avare.place.Area getArea() -> getArea
    com.ds.avare.place.Plan getPlan() -> getPlan
    void loadDiagram(java.lang.String) -> loadDiagram
    com.ds.avare.utils.BitmapHolder getDiagram() -> getDiagram
    void registerGpsListener(com.ds.avare.gps.GpsInterface) -> registerGpsListener
    void unregisterGpsListener(com.ds.avare.gps.GpsInterface) -> unregisterGpsListener
    com.ds.avare.shapes.Draw getDraw() -> getDraw
    com.ds.avare.shapes.PixelDraw getPixelDraw() -> getPixelDraw
    com.ds.avare.weather.InternetWeatherCache getInternetWeatherCache() -> getInternetWeatherCache
    com.ds.avare.instruments.FlightTimer getFlightTimer() -> getFlightTimer
    java.net.URI setTracks(boolean) -> setTracks
    boolean getTracks() -> getTracks
    com.ds.avare.flightLog.KMLRecorder getKMLRecorder() -> getKMLRecorder
    com.ds.avare.instruments.Odometer getOdometer() -> getOdometer
    com.ds.avare.instruments.CDI getCDI() -> getCDI
    com.ds.avare.instruments.VNAV getVNAV() -> getVNAV
    com.ds.avare.instruments.VSI getVSI() -> getVSI
    com.ds.avare.flight.FlightStatus getFlightStatus() -> getFlightStatus
    com.ds.avare.gps.Gps getGps() -> getGps
    android.location.Location getLocationBlocking() -> getLocationBlocking
    com.ds.avare.weather.AdsbWeatherCache getAdsbWeather() -> getAdsbWeather
    com.ds.avare.adsb.TrafficCache getTrafficCache() -> getTrafficCache
    com.ds.avare.shapes.Radar getRadar() -> getRadar
    void deleteTFRFetcher() -> deleteTFRFetcher
    void deleteInternetWeatherCache() -> deleteInternetWeatherCache
    void deleteRadar() -> deleteRadar
    java.lang.String getLastPlateAirport() -> getLastPlateAirport
    void setLastPlateAirport(java.lang.String) -> setLastPlateAirport
    void setLastPlateIndex(int) -> setLastPlateIndex
    int getLastPlateIndex() -> getLastPlateIndex
    void setElevationTile(com.ds.avare.shapes.Tile) -> setElevationTile
    com.ds.avare.utils.BitmapHolder getElevationBitmap() -> getElevationBitmap
    void setDownloading(boolean) -> setDownloading
    java.util.LinkedList getCheckLists() -> getCheckLists
    void setCheckLists(java.util.LinkedList) -> setCheckLists
    double getElevation() -> getElevation
    void setElevation(double) -> setElevation
    double getThreshold() -> getThreshold
    void setThreshold(double) -> setThreshold
    com.ds.avare.utils.ShadowedText getShadowedText() -> getShadowedText
    com.ds.avare.userDefinedWaypoints.UDWMgr getUDWMgr() -> getUDWMgr
    com.ds.avare.instruments.DistanceRings getDistanceRings() -> getDistanceRings
    com.ds.avare.externalFlightPlan.ExternalPlanMgr getExternalPlanMgr() -> getExternalPlanMgr
    com.ds.avare.utils.NavComments getNavComments() -> getNavComments
    com.ds.avare.flight.Checklist getChecklist() -> getChecklist
    com.ds.avare.instruments.EdgeDistanceTape getEdgeTape() -> getEdgeTape
    com.ds.avare.instruments.FuelTimer getFuelTimer() -> getFuelTimer
    com.ds.avare.cap.DrawCapLines getCap() -> getCap
    java.util.LinkedList access$100(com.ds.avare.StorageService) -> access$100
    boolean access$200(com.ds.avare.StorageService) -> access$200
    com.ds.avare.gps.Gps access$300(com.ds.avare.StorageService) -> access$300
    android.location.Location access$402(com.ds.avare.StorageService,android.location.Location) -> access$402
    com.ds.avare.utils.Mutex access$500(com.ds.avare.StorageService) -> access$500
    com.ds.avare.place.Area access$600(com.ds.avare.StorageService) -> access$600
    com.ds.avare.place.Plan access$700(com.ds.avare.StorageService) -> access$700
    com.ds.avare.gps.GpsParams access$800(com.ds.avare.StorageService) -> access$800
    com.ds.avare.place.Destination access$900(com.ds.avare.StorageService) -> access$900
    int access$1008(com.ds.avare.StorageService) -> access$1008
    boolean access$1100(com.ds.avare.StorageService) -> access$1100
    int access$1000(com.ds.avare.StorageService) -> access$1000
com.ds.avare.StorageService$1 -> com.ds.avare.StorageService$1:
    com.ds.avare.StorageService this$0 -> a
    void <init>(com.ds.avare.StorageService) -> <init>
    java.util.LinkedList extracted() -> extracted
    void statusCallback(android.location.GpsStatus) -> statusCallback
    void locationCallback(android.location.Location) -> locationCallback
    void timeoutCallback(boolean) -> timeoutCallback
    void enabledCallback(boolean) -> enabledCallback
com.ds.avare.StorageService$LocalBinder -> com.ds.avare.StorageService$LocalBinder:
    com.ds.avare.StorageService this$0 -> a
    void <init>(com.ds.avare.StorageService) -> <init>
    com.ds.avare.StorageService getService() -> getService
com.ds.avare.StorageService$UpdateTask -> com.ds.avare.StorageService$UpdateTask:
    com.ds.avare.StorageService this$0 -> a
    void <init>(com.ds.avare.StorageService) -> <init>
    void run() -> run
    void <init>(com.ds.avare.StorageService,com.ds.avare.StorageService$1) -> <init>
com.ds.avare.SubmitActivity -> com.ds.avare.SubmitActivity:
    android.os.AsyncTask mSubmitTask -> a
    android.widget.Button mSubmitButton -> c
    android.view.View mView -> b
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void <clinit>() -> <clinit>
com.ds.avare.SubmitActivity$1 -> com.ds.avare.SubmitActivity$1:
    int val$submitCode -> a
    com.ds.avare.SubmitActivity this$0 -> b
    void <init>(com.ds.avare.SubmitActivity,int) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.SubmitActivity$1$1 -> com.ds.avare.SubmitActivity$1$1:
    java.lang.String code -> a
    java.lang.String serverUrl -> b
    java.util.Map params -> c
    com.ds.avare.SubmitActivity$1 this$1 -> d
    void <init>(com.ds.avare.SubmitActivity$1) -> <init>
    java.lang.Boolean doInBackground(java.lang.Void[]) -> doInBackground
    void onProgressUpdate(java.lang.Void[]) -> onProgressUpdate
    void onPostExecute(java.lang.Boolean) -> onPostExecute
    boolean setup() -> setup
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.ds.avare.TripActivity -> com.ds.avare.TripActivity:
    android.webkit.WebView mWebView -> b
    android.widget.Button mFindButton -> c
    android.app.AlertDialog mAlertDialog -> a
    android.widget.Toast mToast -> d
    android.widget.ProgressBar mProgress -> e
    android.widget.ProgressBar mProgressBar -> f
    com.ds.avare.storage.Preferences mPref -> g
    android.widget.EditText mSearchText -> h
    android.widget.Button mNextButton -> i
    android.widget.Button mLastButton -> j
    com.ds.avare.StorageService mService -> k
    com.ds.avare.gps.GpsInterface mGpsInfc -> l
    android.content.ServiceConnection mConnection -> m
    void <init>() -> <init>
    void onBackPressed() -> onBackPressed
    void onCreate(android.os.Bundle) -> onCreate
    boolean isDateWrong(java.lang.String) -> isDateWrong
    java.lang.String makeURL(android.widget.EditText,android.widget.EditText,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner) -> makeURL
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onRestart() -> onRestart
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    com.ds.avare.StorageService access$000(com.ds.avare.TripActivity) -> access$000
    android.widget.ProgressBar access$100(com.ds.avare.TripActivity) -> access$100
    com.ds.avare.storage.Preferences access$200(com.ds.avare.TripActivity) -> access$200
    java.lang.String access$300(com.ds.avare.TripActivity,android.widget.EditText,android.widget.EditText,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner) -> access$300
    android.webkit.WebView access$400(com.ds.avare.TripActivity) -> access$400
    android.widget.ProgressBar access$500(com.ds.avare.TripActivity) -> access$500
    com.ds.avare.StorageService access$002(com.ds.avare.TripActivity,com.ds.avare.StorageService) -> access$002
    com.ds.avare.gps.GpsInterface access$600(com.ds.avare.TripActivity) -> access$600
com.ds.avare.TripActivity$1 -> com.ds.avare.TripActivity$1:
    com.ds.avare.TripActivity this$0 -> a
    void <init>(com.ds.avare.TripActivity) -> <init>
    void statusCallback(android.location.GpsStatus) -> statusCallback
    void locationCallback(android.location.Location) -> locationCallback
    void timeoutCallback(boolean) -> timeoutCallback
    void enabledCallback(boolean) -> enabledCallback
com.ds.avare.TripActivity$2 -> com.ds.avare.TripActivity$2:
    com.ds.avare.TripActivity this$0 -> a
    void <init>(com.ds.avare.TripActivity) -> <init>
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
com.ds.avare.TripActivity$3 -> com.ds.avare.TripActivity$3:
    com.ds.avare.TripActivity this$0 -> a
    void <init>(com.ds.avare.TripActivity) -> <init>
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.ds.avare.TripActivity$4 -> com.ds.avare.TripActivity$4:
    android.view.LayoutInflater val$layoutInflater -> a
    com.ds.avare.TripActivity this$0 -> b
    void <init>(com.ds.avare.TripActivity,android.view.LayoutInflater) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.TripActivity$4$1 -> com.ds.avare.TripActivity$4$1:
    android.widget.EditText val$from -> a
    android.widget.EditText val$to -> b
    android.widget.Spinner val$price -> c
    android.widget.Spinner val$stars -> d
    android.widget.Spinner val$distance -> e
    android.widget.Spinner val$adults -> f
    android.widget.Spinner val$child1 -> g
    android.widget.Spinner val$child2 -> h
    android.widget.Spinner val$child3 -> i
    android.widget.Spinner val$child4 -> j
    android.widget.Spinner val$child5 -> k
    com.ds.avare.TripActivity$4 this$1 -> l
    void <init>(com.ds.avare.TripActivity$4,android.widget.EditText,android.widget.EditText,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.TripActivity$4$2 -> com.ds.avare.TripActivity$4$2:
    com.ds.avare.TripActivity$4 this$1 -> a
    void <init>(com.ds.avare.TripActivity$4) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.TripActivity$5 -> com.ds.avare.TripActivity$5:
    com.ds.avare.TripActivity this$0 -> a
    void <init>(com.ds.avare.TripActivity) -> <init>
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.ds.avare.TripActivity$6 -> com.ds.avare.TripActivity$6:
    com.ds.avare.TripActivity this$0 -> a
    void <init>(com.ds.avare.TripActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.TripActivity$7 -> com.ds.avare.TripActivity$7:
    com.ds.avare.TripActivity this$0 -> a
    void <init>(com.ds.avare.TripActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.TripActivity$8 -> com.ds.avare.TripActivity$8:
    com.ds.avare.TripActivity this$0 -> a
    void <init>(com.ds.avare.TripActivity) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.ds.avare.WeatherActivity -> com.ds.avare.WeatherActivity:
    android.webkit.WebView mWebView -> a
    com.ds.avare.webinfc.WebAppInterface mInfc -> b
    android.widget.ProgressBar Search -> c
    com.ds.avare.StorageService mService -> d
    android.content.Context mContext -> e
    com.ds.avare.gps.GpsInterface mGpsInfc -> f
    android.content.ServiceConnection mConnection -> g
    android.os.Handler mHandler -> h
    void <init>() -> <init>
    void onBackPressed() -> onBackPressed
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onRestart() -> onRestart
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    com.ds.avare.StorageService access$000(com.ds.avare.WeatherActivity) -> access$000
    android.os.Handler access$100(com.ds.avare.WeatherActivity) -> access$100
    com.ds.avare.webinfc.WebAppInterface access$200(com.ds.avare.WeatherActivity) -> access$200
    android.widget.ProgressBar access$300(com.ds.avare.WeatherActivity) -> access$300
    com.ds.avare.StorageService access$002(com.ds.avare.WeatherActivity,com.ds.avare.StorageService) -> access$002
    com.ds.avare.gps.GpsInterface access$400(com.ds.avare.WeatherActivity) -> access$400
    android.content.Context access$500(com.ds.avare.WeatherActivity) -> access$500
com.ds.avare.WeatherActivity$1 -> com.ds.avare.WeatherActivity$1:
    com.ds.avare.WeatherActivity this$0 -> a
    void <init>(com.ds.avare.WeatherActivity) -> <init>
    void statusCallback(android.location.GpsStatus) -> statusCallback
    void locationCallback(android.location.Location) -> locationCallback
    void timeoutCallback(boolean) -> timeoutCallback
    void enabledCallback(boolean) -> enabledCallback
com.ds.avare.WeatherActivity$2 -> com.ds.avare.WeatherActivity$2:
    com.ds.avare.WeatherActivity this$0 -> a
    void <init>(com.ds.avare.WeatherActivity) -> <init>
    java.lang.Object callback(java.lang.Object,java.lang.Object) -> callback
com.ds.avare.WeatherActivity$3 -> com.ds.avare.WeatherActivity$3:
    com.ds.avare.WeatherActivity this$0 -> a
    void <init>(com.ds.avare.WeatherActivity) -> <init>
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
com.ds.avare.WeatherActivity$3$1 -> com.ds.avare.WeatherActivity$3$1:
    android.webkit.JsResult val$result -> a
    com.ds.avare.WeatherActivity$3 this$1 -> b
    void <init>(com.ds.avare.WeatherActivity$3,android.webkit.JsResult) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.WeatherActivity$3$2 -> com.ds.avare.WeatherActivity$3$2:
    android.webkit.JsResult val$result -> a
    com.ds.avare.WeatherActivity$3 this$1 -> b
    void <init>(com.ds.avare.WeatherActivity$3,android.webkit.JsResult) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.WeatherActivity$3$3 -> com.ds.avare.WeatherActivity$3$3:
    android.webkit.JsResult val$result -> a
    com.ds.avare.WeatherActivity$3 this$1 -> b
    void <init>(com.ds.avare.WeatherActivity$3,android.webkit.JsResult) -> <init>
    void onCancel(android.content.DialogInterface) -> onCancel
com.ds.avare.WeatherActivity$4 -> com.ds.avare.WeatherActivity$4:
    com.ds.avare.WeatherActivity this$0 -> a
    void <init>(com.ds.avare.WeatherActivity) -> <init>
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.ds.avare.WeatherActivity$5 -> com.ds.avare.WeatherActivity$5:
    com.ds.avare.WeatherActivity this$0 -> a
    void <init>(com.ds.avare.WeatherActivity) -> <init>
    boolean onLongClick(android.view.View) -> onLongClick
com.ds.avare.WeatherActivity$6 -> com.ds.avare.WeatherActivity$6:
    com.ds.avare.WeatherActivity this$0 -> a
    void <init>(com.ds.avare.WeatherActivity) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.ds.avare.WeatherActivity$7 -> com.ds.avare.WeatherActivity$7:
    com.ds.avare.WeatherActivity this$0 -> a
    void <init>(com.ds.avare.WeatherActivity) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.ds.avare.WeatherActivity$7$1 -> com.ds.avare.WeatherActivity$7$1:
    com.ds.avare.WeatherActivity$7 this$1 -> a
    void <init>(com.ds.avare.WeatherActivity$7) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.WebActivity -> com.ds.avare.WebActivity:
    android.webkit.WebView mWebView -> a
    android.widget.EditText mSearchText -> b
    android.widget.Button mNextButton -> c
    android.widget.Button mLastButton -> d
    android.widget.ProgressBar mProgressBar -> e
    com.ds.avare.StorageService mService -> f
    com.ds.avare.gps.GpsInterface mGpsInfc -> g
    android.content.ServiceConnection mConnection -> h
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    android.webkit.WebView access$000(com.ds.avare.WebActivity) -> access$000
    android.widget.ProgressBar access$100(com.ds.avare.WebActivity) -> access$100
    com.ds.avare.StorageService access$202(com.ds.avare.WebActivity,com.ds.avare.StorageService) -> access$202
    com.ds.avare.gps.GpsInterface access$300(com.ds.avare.WebActivity) -> access$300
    com.ds.avare.StorageService access$200(com.ds.avare.WebActivity) -> access$200
com.ds.avare.WebActivity$1 -> com.ds.avare.WebActivity$1:
    com.ds.avare.WebActivity this$0 -> a
    void <init>(com.ds.avare.WebActivity) -> <init>
    void statusCallback(android.location.GpsStatus) -> statusCallback
    void locationCallback(android.location.Location) -> locationCallback
    void timeoutCallback(boolean) -> timeoutCallback
    void enabledCallback(boolean) -> enabledCallback
com.ds.avare.WebActivity$2 -> com.ds.avare.WebActivity$2:
    com.ds.avare.WebActivity this$0 -> a
    void <init>(com.ds.avare.WebActivity) -> <init>
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.ds.avare.WebActivity$3 -> com.ds.avare.WebActivity$3:
    com.ds.avare.WebActivity this$0 -> a
    void <init>(com.ds.avare.WebActivity) -> <init>
    boolean onLongClick(android.view.View) -> onLongClick
com.ds.avare.WebActivity$4 -> com.ds.avare.WebActivity$4:
    com.ds.avare.WebActivity this$0 -> a
    void <init>(com.ds.avare.WebActivity) -> <init>
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.ds.avare.WebActivity$5 -> com.ds.avare.WebActivity$5:
    com.ds.avare.WebActivity this$0 -> a
    void <init>(com.ds.avare.WebActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.WebActivity$6 -> com.ds.avare.WebActivity$6:
    com.ds.avare.WebActivity this$0 -> a
    void <init>(com.ds.avare.WebActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.WebActivity$7 -> com.ds.avare.WebActivity$7:
    com.ds.avare.WebActivity this$0 -> a
    void <init>(com.ds.avare.WebActivity) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.ds.avare.adapters.ChartAdapter -> com.ds.avare.adapters.ChartAdapter:
    android.content.Context mContext -> a
    com.ds.avare.storage.Preferences mPref -> b
    com.ds.avare.utils.BitmapHolder mOkBitmapHolder -> c
    com.ds.avare.utils.BitmapHolder mAddBitmapHolder -> d
    com.ds.avare.utils.BitmapHolder mUpdateBitmapHolder -> e
    com.ds.avare.utils.BitmapHolder mDeleteBitmapHolder -> f
    com.ds.avare.utils.BitmapHolder mNoneBitmapHolder -> g
    java.lang.String[] mGroups -> h
    java.lang.String[][] mChildrenFiles -> i
    java.lang.String[][] mChildren -> j
    int[][] mChecked -> k
    java.lang.String[][] mVers -> l
    void <init>(android.content.Context) -> <init>
    void refreshIt() -> refreshIt
    void refresh() -> refresh
    void updateVersion(java.lang.String,java.lang.String) -> updateVersion
    java.lang.String getDatabaseName() -> getDatabaseName
    void setChecked(java.lang.String) -> setChecked
    void unsetChecked(java.lang.String) -> unsetChecked
    void toggleChecked(int,int) -> toggleChecked
    java.lang.String getChecked() -> getChecked
    java.lang.String getDeleteChecked() -> getDeleteChecked
    void checkDone() -> checkDone
    android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    java.lang.Object getChild(int,int) -> getChild
    long getChildId(int,int) -> getChildId
    int getChildrenCount(int) -> getChildrenCount
    java.lang.Object getGroup(int) -> getGroup
    int getGroupCount() -> getGroupCount
    long getGroupId(int) -> getGroupId
    boolean hasStableIds() -> hasStableIds
    boolean isChildSelectable(int,int) -> isChildSelectable
    java.lang.String[][] access$100(com.ds.avare.adapters.ChartAdapter) -> access$100
    com.ds.avare.storage.Preferences access$200(com.ds.avare.adapters.ChartAdapter) -> access$200
    java.lang.String[][] access$300(com.ds.avare.adapters.ChartAdapter) -> access$300
    java.lang.String[][] access$102(com.ds.avare.adapters.ChartAdapter,java.lang.String[][]) -> access$102
com.ds.avare.adapters.ChartAdapter$1 -> com.ds.avare.adapters.ChartAdapter$1:
com.ds.avare.adapters.ChartAdapter$ViewTask -> com.ds.avare.adapters.ChartAdapter$ViewTask:
    java.lang.String[][] vers -> a
    com.ds.avare.adapters.ChartAdapter this$0 -> b
    void <init>(com.ds.avare.adapters.ChartAdapter) -> <init>
    java.lang.Boolean doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Boolean) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void <init>(com.ds.avare.adapters.ChartAdapter,com.ds.avare.adapters.ChartAdapter$1) -> <init>
com.ds.avare.adapters.NearestAdapter -> com.ds.avare.adapters.NearestAdapter:
    android.content.Context mContext -> a
    java.lang.String[] mDistance -> b
    java.lang.String[] mName -> c
    java.lang.String[] mBearing -> d
    java.lang.String[] mFuel -> e
    java.lang.String[] mElevation -> f
    java.lang.String[] mLongestRunway -> g
    boolean[] mGlide -> h
    void <init>(android.content.Context,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],boolean[]) -> <init>
    void updateList(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],boolean[]) -> updateList
    int getClosestWith100LL() -> getClosestWith100LL
    int getClosestRunwayWithMinLength(int) -> getClosestRunwayWithMinLength
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.ds.avare.adapters.PopoutAdapter -> com.ds.avare.adapters.PopoutAdapter:
    android.content.Context mContext -> a
    java.lang.String[] mGroups -> b
    java.lang.String[] mChildrenText -> c
    java.lang.String[][] mChildren -> d
    com.ds.avare.weather.Metar mMetar -> e
    com.ds.avare.weather.Taf mTaf -> f
    java.util.LinkedList mAirep -> g
    java.util.LinkedList mFreq -> h
    java.lang.String mTfr -> i
    java.lang.String mSua -> j
    java.lang.String mPerformance -> k
    java.lang.String mRadar -> l
    java.lang.String mMets -> m
    com.ds.avare.weather.WindsAloft mWa -> n
    android.graphics.Typeface mFace -> o
    java.lang.String mFuel -> p
    java.lang.String mRatings -> q
    java.lang.String mAirport -> r
    void <init>(android.content.Context,com.ds.avare.touch.LongTouchDestination) -> <init>
    android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    java.lang.Object getChild(int,int) -> getChild
    long getChildId(int,int) -> getChildId
    int getChildrenCount(int) -> getChildrenCount
    java.lang.Object getGroup(int) -> getGroup
    int getGroupCount() -> getGroupCount
    long getGroupId(int) -> getGroupId
    boolean hasStableIds() -> hasStableIds
    boolean isChildSelectable(int,int) -> isChildSelectable
    java.lang.String access$000(com.ds.avare.adapters.PopoutAdapter) -> access$000
com.ds.avare.adapters.PopoutAdapter$1 -> com.ds.avare.adapters.PopoutAdapter$1:
    android.view.ViewGroup val$parent -> a
    com.ds.avare.adapters.PopoutAdapter this$0 -> b
    void <init>(com.ds.avare.adapters.PopoutAdapter,android.view.ViewGroup) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.adapters.PopoutAdapter$2 -> com.ds.avare.adapters.PopoutAdapter$2:
    android.view.ViewGroup val$parent -> a
    com.ds.avare.adapters.PopoutAdapter this$0 -> b
    void <init>(com.ds.avare.adapters.PopoutAdapter,android.view.ViewGroup) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.adapters.SearchAdapter -> com.ds.avare.adapters.SearchAdapter:
    android.content.Context mContext -> a
    java.lang.String[] mVals -> b
    com.ds.avare.utils.BitmapHolder mNDBBitmapHolder -> c
    com.ds.avare.utils.BitmapHolder mMakerBitmapHolder -> d
    com.ds.avare.utils.BitmapHolder mNDBDMEBitmapHolder -> e
    com.ds.avare.utils.BitmapHolder mVORBitmapHolder -> f
    com.ds.avare.utils.BitmapHolder mVOTBitmapHolder -> g
    com.ds.avare.utils.BitmapHolder mTACANBitmapHolder -> h
    com.ds.avare.utils.BitmapHolder mVORTACBitmapHolder -> i
    com.ds.avare.utils.BitmapHolder mVORDMEBitmapHolder -> j
    com.ds.avare.utils.BitmapHolder mAirportBitmapHolder -> k
    com.ds.avare.utils.BitmapHolder mFixBitmapHolder -> l
    com.ds.avare.utils.BitmapHolder mNoBitmapHolder -> m
    com.ds.avare.utils.BitmapHolder mGeoBitmapHolder -> n
    com.ds.avare.utils.BitmapHolder mMapBitmapHolder -> o
    com.ds.avare.utils.BitmapHolder mUDWBitmapHolder -> p
    void <init>(android.content.Context,java.lang.String[]) -> <init>
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.ds.avare.adapters.TypeValueAdapter -> com.ds.avare.adapters.TypeValueAdapter:
    android.content.Context mContext -> a
    java.lang.String[] mType -> b
    java.lang.String[] mValue -> c
    void <init>(android.content.Context,java.lang.String[],java.lang.String[]) -> <init>
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.ds.avare.adsb.NexradBitmap -> com.ds.avare.adsb.NexradBitmap:
    double[] mCoords -> b
    double mScaleX -> c
    double mScaleY -> d
    int mBlock -> e
    com.ds.avare.utils.BitmapHolder mBitmap -> f
    long timestamp -> a
    void convertBlockNumberToLatLon(int,double[]) -> convertBlockNumberToLatLon
    void <init>(long,int[],int,boolean,int,int) -> <init>
    void discard() -> discard
    double getLatTopLeft() -> getLatTopLeft
    double getLonTopLeft() -> getLonTopLeft
    double getScaleX() -> getScaleX
    double getScaleY() -> getScaleY
    com.ds.avare.utils.BitmapHolder getBitmap() -> getBitmap
com.ds.avare.adsb.NexradImage -> com.ds.avare.adsb.NexradImage:
    android.util.SparseArray mImg -> a
    long mUpdated -> b
    void <init>() -> <init>
    void putImg(long,int,int[],boolean,int[],int,int) -> putImg
    android.util.SparseArray getImages() -> getImages
    boolean isOld() -> isOld
    java.lang.String getDate() -> getDate
com.ds.avare.adsb.NexradImageConus -> com.ds.avare.adsb.NexradImageConus:
    android.util.SparseArray mImg -> a
    long mUpdated -> b
    void <init>() -> <init>
    void putImg(long,int,int[],boolean,int[],int,int) -> putImg
    android.util.SparseArray getImages() -> getImages
    boolean isOld() -> isOld
com.ds.avare.adsb.Traffic -> com.ds.avare.adsb.Traffic:
    int mIcaoAddress -> a
    float mLat -> b
    float mLon -> c
    int mAltitude -> d
    int mHorizVelocity -> e
    float mHeading -> f
    java.lang.String mCallSign -> g
    long mLastUpdate -> h
    void <init>(java.lang.String,int,float,float,int,float,int,long) -> <init>
    boolean isOld() -> isOld
    int getColorFromAltitude(double,double) -> getColorFromAltitude
com.ds.avare.adsb.TrafficCache -> com.ds.avare.adsb.TrafficCache:
    android.util.SparseArray mTraffic -> a
    void <init>() -> <init>
    void putTraffic(java.lang.String,int,float,float,int,float,int,long) -> putTraffic
    android.util.SparseArray getTraffic() -> getTraffic
com.ds.avare.animation.AnimateButton -> com.ds.avare.animation.AnimateButton:
    boolean mShowing -> a
    android.content.Context mContext -> b
    android.view.View mView -> c
    android.view.View[] mReplaces -> d
    int[] mReplacesVis -> e
    int mDir -> f
    void <init>(android.content.Context,android.view.View,int,android.view.View[]) -> <init>
    void animateBack() -> animateBack
    void stopAndHide() -> stopAndHide
    void animate(boolean) -> animate
    void animate() -> animate
    android.view.View access$000(com.ds.avare.animation.AnimateButton) -> access$000
    android.view.View[] access$100(com.ds.avare.animation.AnimateButton) -> access$100
    int[] access$200(com.ds.avare.animation.AnimateButton) -> access$200
com.ds.avare.animation.AnimateButton$1 -> com.ds.avare.animation.AnimateButton$1:
    com.ds.avare.animation.AnimateButton this$0 -> a
    void <init>(com.ds.avare.animation.AnimateButton) -> <init>
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.ds.avare.animation.AnimateButton$2 -> com.ds.avare.animation.AnimateButton$2:
    boolean val$visible -> a
    com.ds.avare.animation.AnimateButton this$0 -> b
    void <init>(com.ds.avare.animation.AnimateButton,boolean) -> <init>
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.ds.avare.animation.AnimateButton$3 -> com.ds.avare.animation.AnimateButton$3:
    com.ds.avare.animation.AnimateButton this$0 -> a
    void <init>(com.ds.avare.animation.AnimateButton) -> <init>
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.ds.avare.animation.TwoButton -> com.ds.avare.animation.TwoButton:
    boolean mOn -> b
    java.lang.String mOnName -> c
    java.lang.String mOffName -> d
    com.ds.avare.animation.TwoButton$TwoClickListener mListener -> a
    void setup(android.content.Context,android.util.AttributeSet) -> setup
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context) -> <init>
    void setChecked(boolean) -> setChecked
    void onClick(android.view.View) -> onClick
    void setTwoClickListener(com.ds.avare.animation.TwoButton$TwoClickListener) -> setTwoClickListener
com.ds.avare.animation.TwoButton$TwoClickListener -> com.ds.avare.animation.TwoButton$TwoClickListener:
    void onClick(android.view.View) -> onClick
com.ds.avare.cap.CapChartFetcher -> com.ds.avare.cap.CapChartFetcher:
    java.util.LinkedList mCharts -> a
    com.ds.avare.cap.CapChartFetcher mInstance -> b
    void <init>() -> <init>
    com.ds.avare.cap.CapChartFetcher getInstance() -> getInstance
    java.util.LinkedList getCharts() -> getCharts
com.ds.avare.cap.Chart -> com.ds.avare.cap.Chart:
    java.lang.String mIdentifier -> a
    android.graphics.Rect mRect -> b
    void <init>(java.lang.String,com.ds.avare.position.Coordinate,com.ds.avare.position.Coordinate) -> <init>
    java.lang.String getIdentifier() -> getIdentifier
    android.graphics.Rect getRect() -> getRect
    int makeCapCoordinate(double) -> makeCapCoordinate
com.ds.avare.cap.DrawCapLines -> com.ds.avare.cap.DrawCapLines:
    android.graphics.Paint mPaint -> a
    com.ds.avare.StorageService mService -> b
    java.util.LinkedList mCharts -> c
    com.ds.avare.cap.Chart mRecentChart -> d
    void <init>(com.ds.avare.StorageService,android.content.Context,float) -> <init>
    void draw(android.graphics.Canvas,com.ds.avare.position.Origin,com.ds.avare.position.Scale) -> draw
    double snapToGrid(double) -> snapToGrid
    java.lang.String getGridName(double,double) -> getGridName
    java.lang.String getName(com.ds.avare.cap.Chart,android.graphics.Rect) -> getName
com.ds.avare.externalFlightPlan.ExternalFlightPlan -> com.ds.avare.externalFlightPlan.ExternalFlightPlan:
    java.lang.String mFileName -> a
    java.lang.String mName -> b
    java.lang.String mCmt -> c
    java.lang.String mType -> d
    java.util.List mWaypoints -> e
    java.lang.String getName() -> getName
    java.lang.String getCmt() -> getCmt
    void setFileName(java.lang.String) -> setFileName
    void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List) -> <init>
    java.lang.String toString() -> toString
    java.lang.String toJSONString() -> toJSONString
    void setActive(boolean) -> setActive
com.ds.avare.externalFlightPlan.ExternalPlanMgr -> com.ds.avare.externalFlightPlan.ExternalPlanMgr:
    java.util.List mPlans -> a
    com.ds.avare.StorageService mService -> b
    android.content.Context mContext -> c
    com.ds.avare.storage.Preferences mPref -> d
    void <init>(com.ds.avare.StorageService,android.content.Context) -> <init>
    java.lang.String getDir() -> getDir
    java.util.ArrayList getPlanNames(java.lang.String) -> getPlanNames
    com.ds.avare.externalFlightPlan.ExternalFlightPlan get(java.lang.String) -> get
    void clear() -> clear
    void forceReload() -> forceReload
    void populate(java.lang.String) -> populate
com.ds.avare.externalFlightPlan.GpxPlanParser -> com.ds.avare.externalFlightPlan.GpxPlanParser:
    java.lang.String NS -> a
    void <init>() -> <init>
    java.lang.String getType() -> getType
    com.ds.avare.externalFlightPlan.ExternalFlightPlan parse(java.lang.String,java.io.FileInputStream) -> parse
    com.ds.avare.externalFlightPlan.ExternalFlightPlan readGPX(org.xmlpull.v1.XmlPullParser) -> readGPX
    com.ds.avare.externalFlightPlan.ExternalFlightPlan readRTE(org.xmlpull.v1.XmlPullParser) -> readRTE
    com.ds.avare.userDefinedWaypoints.Waypoint readRTEPT(org.xmlpull.v1.XmlPullParser) -> readRTEPT
    java.lang.String readNAME(org.xmlpull.v1.XmlPullParser) -> readNAME
    java.lang.String readCMT(org.xmlpull.v1.XmlPullParser) -> readCMT
    java.lang.String readText(org.xmlpull.v1.XmlPullParser) -> readText
    void skip(org.xmlpull.v1.XmlPullParser) -> skip
    void <clinit>() -> <clinit>
com.ds.avare.externalFlightPlan.PlanFactory -> com.ds.avare.externalFlightPlan.PlanFactory:
    void <init>() -> <init>
    com.ds.avare.externalFlightPlan.ExternalFlightPlan parse(java.lang.String) -> parse
com.ds.avare.externalFlightPlan.PlanParser -> com.ds.avare.externalFlightPlan.PlanParser:
    void <init>() -> <init>
    java.lang.String getType() -> getType
    com.ds.avare.externalFlightPlan.ExternalFlightPlan parse(java.lang.String,java.io.FileInputStream) -> parse
com.ds.avare.externalFlightPlan.SkvPlanParser -> com.ds.avare.externalFlightPlan.SkvPlanParser:
    void <init>() -> <init>
    java.lang.String getType() -> getType
    com.ds.avare.externalFlightPlan.ExternalFlightPlan parse(java.lang.String,java.io.FileInputStream) -> parse
com.ds.avare.flight.Checklist -> com.ds.avare.flight.Checklist:
    java.lang.String mSteps -> a
    java.lang.String mName -> b
    int mWorkingIndex -> c
    java.lang.String DELIM -> d
    void <init>(java.lang.String) -> <init>
    void <init>(org.json.JSONObject) -> <init>
    java.lang.String[] getStepsArray() -> getStepsArray
    java.lang.String getName() -> getName
    java.util.LinkedList getCheckListsFromStorageFromat(java.lang.String) -> getCheckListsFromStorageFromat
    void moveBack() -> moveBack
    void moveForward() -> moveForward
    boolean isSelected(int) -> isSelected
    void <clinit>() -> <clinit>
com.ds.avare.flight.FlightStatus -> com.ds.avare.flight.FlightStatus:
    boolean mFlying -> a
    java.util.LinkedList mCallbacks -> b
    void <init>(com.ds.avare.gps.GpsParams) -> <init>
    void registerListener(com.ds.avare.flight.FlightStatusInterface) -> registerListener
    void unregisterListener(com.ds.avare.flight.FlightStatusInterface) -> unregisterListener
    void updateLocation(com.ds.avare.gps.GpsParams) -> updateLocation
com.ds.avare.flight.FlightStatusInterface -> com.ds.avare.flight.FlightStatusInterface:
    void rollout() -> rollout
com.ds.avare.flightLog.KMLRecorder -> com.ds.avare.flightLog.KMLRecorder:
    com.ds.avare.flightLog.KMLRecorder$Config mConfig -> a
    java.io.BufferedWriter mTracksFile -> b
    java.io.File mFile -> c
    java.util.LinkedList mPositionHistory -> d
    java.net.URI mFileURI -> e
    int mFlightStartIndex -> f
    com.ds.avare.gps.GpsParams mLastFix -> g
    com.ds.avare.shapes.CrumbsShape mShape -> h
    void <init>() -> <init>
    boolean isRecording() -> isRecording
    java.net.URI stop() -> stop
    void start() -> start
    void start(com.ds.avare.flightLog.KMLRecorder$Config) -> start
    void clearPositionHistory() -> clearPositionHistory
    void setGpsParams(com.ds.avare.gps.GpsParams) -> setGpsParams
    com.ds.avare.shapes.Shape getShape() -> getShape
com.ds.avare.flightLog.KMLRecorder$Config -> com.ds.avare.flightLog.KMLRecorder$Config:
    boolean mClearListOnStart -> b
    long mUpdateTime -> c
    boolean mUseDetailedPositionReporting -> d
    java.lang.String mFolder -> e
    long mStartSpeed -> f
    com.ds.avare.flightLog.KMLRecorder this$0 -> a
    void <init>(com.ds.avare.flightLog.KMLRecorder,boolean,long,boolean,java.lang.String,long) -> <init>
    boolean access$000(com.ds.avare.flightLog.KMLRecorder$Config) -> access$000
    java.lang.String access$100(com.ds.avare.flightLog.KMLRecorder$Config) -> access$100
    boolean access$200(com.ds.avare.flightLog.KMLRecorder$Config) -> access$200
    long access$300(com.ds.avare.flightLog.KMLRecorder$Config) -> access$300
    long access$400(com.ds.avare.flightLog.KMLRecorder$Config) -> access$400
com.ds.avare.gps.Gps -> com.ds.avare.gps.Gps:
    android.content.Context mContext -> a
    com.ds.avare.storage.Preferences mPref -> b
    int mGpsPeriod -> c
    com.ds.avare.gps.GpsInterface mGpsCallback -> d
    long mGpsLastUpdate -> e
    double mAltitude -> f
    java.util.Timer mTimer -> g
    android.location.LocationManager mLocationManager -> h
    void <init>(android.content.Context,com.ds.avare.gps.GpsInterface) -> <init>
    android.location.Location getLastLocation(android.content.Context) -> getLastLocation
    void start() -> start
    void stop() -> stop
    boolean isGpsDisabled(android.content.Context,com.ds.avare.storage.Preferences) -> isGpsDisabled
    void onGpsStatusChanged(int) -> onGpsStatusChanged
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onLocationChanged(android.location.Location,java.lang.String) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void updateTimeout() -> updateTimeout
    void onNmeaReceived(long,java.lang.String) -> onNmeaReceived
    long access$100(com.ds.avare.gps.Gps) -> access$100
    com.ds.avare.gps.GpsInterface access$200(com.ds.avare.gps.Gps) -> access$200
com.ds.avare.gps.Gps$1 -> com.ds.avare.gps.Gps$1:
com.ds.avare.gps.Gps$UpdateGps -> com.ds.avare.gps.Gps$UpdateGps:
    com.ds.avare.gps.Gps this$0 -> a
    void <init>(com.ds.avare.gps.Gps) -> <init>
    void run() -> run
    void <init>(com.ds.avare.gps.Gps,com.ds.avare.gps.Gps$1) -> <init>
com.ds.avare.gps.GpsInterface -> com.ds.avare.gps.GpsInterface:
    void statusCallback(android.location.GpsStatus) -> statusCallback
    void locationCallback(android.location.Location) -> locationCallback
    void timeoutCallback(boolean) -> timeoutCallback
    void enabledCallback(boolean) -> enabledCallback
com.ds.avare.gps.GpsParams -> com.ds.avare.gps.GpsParams:
    double mSpeed -> a
    double mLongitude -> b
    double mLatitude -> c
    double mAltitude -> d
    double mBearing -> e
    com.ds.avare.position.Scale mScale -> f
    float mDeclination -> g
    long mTime -> h
    void <init>() -> <init>
    void <init>(android.location.Location) -> <init>
    com.ds.avare.gps.GpsParams copy(com.ds.avare.gps.GpsParams) -> copy
    double speedConvert(double) -> speedConvert
    double getSpeed() -> getSpeed
    double getLongitude() -> getLongitude
    double getLatitude() -> getLatitude
    double getAltitude() -> getAltitude
    double getBearing() -> getBearing
    double getDeclinition() -> getDeclinition
    long getTime() -> getTime
com.ds.avare.instruments.CDI -> com.ds.avare.instruments.CDI:
    android.graphics.Paint mCDIPaint -> a
    android.graphics.Rect mTextSize -> b
    int mBarCount -> c
    int mBarWidth -> d
    int mBarHeight -> e
    int mBarSpace -> f
    int mInstWidth -> g
    int mInstHeight -> h
    int mInstTop -> i
    int mInstLeft -> j
    int mColorLeft -> k
    int mColorRight -> l
    double mBarDegrees -> p
    int mDspOffset -> m
    double mDeviation -> n
    int mBackColor -> o
    double getDeviation() -> getDeviation
    boolean isLeft() -> isLeft
    void <init>() -> <init>
    void setSize(android.graphics.Paint,int) -> setSize
    void drawCDI(android.graphics.Canvas,int,int) -> drawCDI
    void drawIndicator(android.graphics.Canvas,int) -> drawIndicator
    void calcDeviation(com.ds.avare.place.Destination,com.ds.avare.place.Plan) -> calcDeviation
com.ds.avare.instruments.DistanceRings -> com.ds.avare.instruments.DistanceRings:
    int COLOR_SPEED_RING -> a
    int[] RING_INNER_SIZE -> b
    int[] RING_MIDDLE_SIZE -> c
    int[] RING_OUTER_SIZE -> d
    float[] mRings -> e
    java.lang.String[] mRingsText -> f
    com.ds.avare.StorageService mService -> g
    android.content.Context mContext -> h
    android.graphics.Paint mPaint -> i
    float mDipToPix -> j
    com.ds.avare.storage.Preferences mPref -> k
    void <init>(com.ds.avare.StorageService,android.content.Context,float) -> <init>
    void draw(android.graphics.Canvas,com.ds.avare.position.Origin,com.ds.avare.position.Scale,com.ds.avare.position.Movement,boolean,com.ds.avare.gps.GpsParams) -> draw
    void calculateRings(android.content.Context,com.ds.avare.position.Scale,com.ds.avare.position.Movement,double) -> calculateRings
    void <clinit>() -> <clinit>
com.ds.avare.instruments.EdgeDistanceTape -> com.ds.avare.instruments.EdgeDistanceTape:
    android.graphics.Paint mPaint -> a
    int mBgndWidth -> b
    int mLeftMargin -> c
    int mBgndHeight -> d
    int mBotmMargin -> e
    int mTextWidth -> f
    int mTextHeight -> g
    android.graphics.Rect mTextBounds -> h
    void <init>() -> <init>
    void setPaint(android.graphics.Paint) -> setPaint
    boolean inRangeX(float,float,float) -> inRangeX
    boolean inRangeY(float,float,float) -> inRangeY
    void draw(android.graphics.Canvas,com.ds.avare.position.Scale,float,int,int,int,int,int) -> draw
com.ds.avare.instruments.FlightTimer -> com.ds.avare.instruments.FlightTimer:
    java.util.Timer mTimer -> e
    double mMinFlightSpeed -> f
    double mSpeed -> g
    void <init>() -> <init>
    void setSpeed(double) -> setSpeed
    double access$100(com.ds.avare.instruments.FlightTimer) -> access$100
    double access$200(com.ds.avare.instruments.FlightTimer) -> access$200
com.ds.avare.instruments.FlightTimer$1 -> com.ds.avare.instruments.FlightTimer$1:
com.ds.avare.instruments.FlightTimer$FlightTimerTask -> com.ds.avare.instruments.FlightTimer$FlightTimerTask:
    com.ds.avare.instruments.FlightTimer this$0 -> a
    void <init>(com.ds.avare.instruments.FlightTimer) -> <init>
    void run() -> run
    void <init>(com.ds.avare.instruments.FlightTimer,com.ds.avare.instruments.FlightTimer$1) -> <init>
com.ds.avare.instruments.FuelTimer -> com.ds.avare.instruments.FuelTimer:
    int mInterval -> a
    int mCurrentValue -> b
    java.util.Timer mTimer -> c
    boolean mCounting -> d
    java.util.List mObservers -> e
    void <init>(int) -> <init>
    void addObserver(java.util.Observer) -> addObserver
    void removeObserver(java.util.Observer) -> removeObserver
    void notifyObservers(int) -> notifyObservers
    void start() -> start
    void stop() -> stop
    java.lang.String getDisplay() -> getDisplay
    void reset() -> reset
    void toggleState() -> toggleState
    int access$100(com.ds.avare.instruments.FuelTimer) -> access$100
    int access$110(com.ds.avare.instruments.FuelTimer) -> access$110
com.ds.avare.instruments.FuelTimer$1 -> com.ds.avare.instruments.FuelTimer$1:
com.ds.avare.instruments.FuelTimer$FuelTimerTask -> com.ds.avare.instruments.FuelTimer$FuelTimerTask:
    com.ds.avare.instruments.FuelTimer this$0 -> a
    void <init>(com.ds.avare.instruments.FuelTimer) -> <init>
    void run() -> run
    void <init>(com.ds.avare.instruments.FuelTimer,com.ds.avare.instruments.FuelTimer$1) -> <init>
com.ds.avare.instruments.HobbsMeter -> com.ds.avare.instruments.HobbsMeter:
    int mHundredths -> a
    int mTenths -> b
    int mHours -> c
    java.util.Timer mTimer -> d
    void setup() -> setup
    void <init>() -> <init>
    boolean isRunning() -> isRunning
    java.lang.String getValue() -> getValue
    void reset() -> reset
    void start() -> start
    void stop() -> stop
com.ds.avare.instruments.HobbsMeter$1 -> com.ds.avare.instruments.HobbsMeter$1:
com.ds.avare.instruments.HobbsMeter$HobbsTask -> com.ds.avare.instruments.HobbsMeter$HobbsTask:
    com.ds.avare.instruments.HobbsMeter this$0 -> a
    void <init>(com.ds.avare.instruments.HobbsMeter) -> <init>
    void run() -> run
    void <init>(com.ds.avare.instruments.HobbsMeter,com.ds.avare.instruments.HobbsMeter$1) -> <init>
com.ds.avare.instruments.Odometer -> com.ds.avare.instruments.Odometer:
    double mValue -> a
    double mValueSave -> b
    com.ds.avare.gps.GpsParams mGpsParams -> c
    com.ds.avare.storage.Preferences mPref -> d
    void <init>() -> <init>
    void setPref(com.ds.avare.storage.Preferences) -> setPref
    double getValue() -> getValue
    void reset() -> reset
    void updateValue(com.ds.avare.gps.GpsParams) -> updateValue
com.ds.avare.instruments.VNAV -> com.ds.avare.instruments.VNAV:
    android.graphics.Paint mVNAVPaint -> a
    int mBarCount -> b
    float mBarWidth -> c
    float mBarHeight -> d
    float mBarSpace -> e
    float mInstWidth -> f
    float mInstHeight -> g
    float mInstTop -> h
    float mInstLeft -> i
    double mConvertToFt -> j
    boolean mShow -> k
    int mDspOffset -> l
    double mGlideSlope -> m
    int mBackColor -> n
    int mColorLow -> o
    int mColorHigh -> p
    int mColorOn -> q
    void <init>() -> <init>
    void setSize(android.graphics.Paint,int) -> setSize
    void drawVNAV(android.graphics.Canvas,float,float,com.ds.avare.place.Destination) -> drawVNAV
    void drawIndicator(android.graphics.Canvas,float) -> drawIndicator
    void calcGlideSlope(com.ds.avare.gps.GpsParams,com.ds.avare.place.Destination) -> calcGlideSlope
com.ds.avare.instruments.VSI -> com.ds.avare.instruments.VSI:
    com.ds.avare.gps.GpsParams mVSIParams -> a
    double mVSI -> b
    void <init>() -> <init>
    void updateValue(com.ds.avare.gps.GpsParams) -> updateValue
    double getValue() -> getValue
com.ds.avare.message.Helper -> com.ds.avare.message.Helper:
    void showAlert(android.content.Context,java.lang.String,java.lang.String) -> showAlert
    boolean isNetworkAvailable(android.content.Context) -> isNetworkAvailable
com.ds.avare.message.Helper$1 -> com.ds.avare.message.Helper$1:
    void <init>() -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.message.Logger -> com.ds.avare.message.Logger:
    android.widget.TextView mTv -> a
    android.os.Handler mHandler -> b
    void Logit(java.lang.String) -> Logit
    void clear() -> clear
    void setTextView(android.widget.TextView) -> setTextView
    android.widget.TextView access$000() -> access$000
    void <clinit>() -> <clinit>
com.ds.avare.message.Logger$1 -> com.ds.avare.message.Logger$1:
    void <init>() -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.ds.avare.message.NetworkHelper -> com.ds.avare.message.NetworkHelper:
    java.lang.String getServer() -> getServer
    java.lang.String post(java.lang.String,java.util.Map) -> post
com.ds.avare.network.Delete -> com.ds.avare.network.Delete:
    com.ds.avare.network.Delete$DeleteTask mDt -> a
    boolean mStop -> b
    android.os.Handler mHandler -> c
    java.lang.Thread mThread -> d
    void <init>(android.os.Handler) -> <init>
    void cancel() -> cancel
    void start(java.lang.String,java.lang.String,com.ds.avare.storage.DataSource) -> start
    android.os.Handler access$100(com.ds.avare.network.Delete) -> access$100
    boolean access$200(com.ds.avare.network.Delete) -> access$200
com.ds.avare.network.Delete$1 -> com.ds.avare.network.Delete$1:
com.ds.avare.network.Delete$DeleteTask -> com.ds.avare.network.Delete$DeleteTask:
    java.lang.String path -> a
    java.lang.String chart -> b
    com.ds.avare.storage.DataSource data -> c
    com.ds.avare.network.Delete this$0 -> d
    void <init>(com.ds.avare.network.Delete) -> <init>
    void run() -> run
    void <init>(com.ds.avare.network.Delete,com.ds.avare.network.Delete$1) -> <init>
com.ds.avare.network.Download -> com.ds.avare.network.Download:
    com.ds.avare.network.Download$DownloadTask mDt -> a
    boolean mStop -> b
    java.lang.String mVersion -> c
    java.lang.String mRoot -> d
    android.os.Handler mHandler -> e
    java.lang.Thread mThread -> f
    java.lang.String mCode -> g
    int mCycleAdjust -> h
    void <init>(java.lang.String,android.os.Handler,int) -> <init>
    java.lang.String getVersion() -> getVersion
    void cancel() -> cancel
    void start(java.lang.String,java.lang.String) -> start
    android.os.Handler access$100(com.ds.avare.network.Download) -> access$100
    java.lang.String access$200(com.ds.avare.network.Download) -> access$200
    java.lang.String access$302(com.ds.avare.network.Download,java.lang.String) -> access$302
    java.lang.String access$400(com.ds.avare.network.Download) -> access$400
    java.lang.String access$300(com.ds.avare.network.Download) -> access$300
    int access$500(com.ds.avare.network.Download) -> access$500
    java.lang.String access$202(com.ds.avare.network.Download,java.lang.String) -> access$202
    boolean access$600(com.ds.avare.network.Download) -> access$600
com.ds.avare.network.Download$1 -> com.ds.avare.network.Download$1:
com.ds.avare.network.Download$DownloadTask -> com.ds.avare.network.Download$DownloadTask:
    java.lang.String path -> a
    java.lang.String mName -> b
    com.ds.avare.network.Download this$0 -> c
    void <init>(com.ds.avare.network.Download) -> <init>
    void copyInputStream(java.io.InputStream,java.io.OutputStream) -> copyInputStream
    void sendFailure() -> sendFailure
    void run() -> run
    void <init>(com.ds.avare.network.Download,com.ds.avare.network.Download$1) -> <init>
com.ds.avare.network.TFRFetcher -> com.ds.avare.network.TFRFetcher:
    com.ds.avare.network.TFRFetcher$TFRTask mTask -> a
    java.util.LinkedList mShapes -> b
    android.content.Context mContext -> c
    void <init>(android.content.Context) -> <init>
    void parse() -> parse
    java.util.LinkedList getShapes() -> getShapes
    java.util.LinkedList access$102(com.ds.avare.network.TFRFetcher,java.util.LinkedList) -> access$102
    android.content.Context access$200(com.ds.avare.network.TFRFetcher) -> access$200
com.ds.avare.network.TFRFetcher$1 -> com.ds.avare.network.TFRFetcher$1:
com.ds.avare.network.TFRFetcher$TFRTask -> com.ds.avare.network.TFRFetcher$TFRTask:
    com.ds.avare.network.TFRFetcher this$0 -> a
    void <init>(com.ds.avare.network.TFRFetcher) -> <init>
    java.lang.Boolean doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void <init>(com.ds.avare.network.TFRFetcher,com.ds.avare.network.TFRFetcher$1) -> <init>
com.ds.avare.place.Airport -> com.ds.avare.place.Airport:
    java.lang.String mId -> a
    double mLon -> b
    double mLat -> c
    double mVariation -> d
    com.ds.avare.position.Projection mProj -> e
    java.lang.String mName -> f
    java.lang.String mFuel -> g
    java.lang.String mElevation -> h
    java.lang.String mLongestRunway -> i
    double mHeight -> j
    void <init>(java.util.LinkedHashMap,double,double) -> <init>
    java.lang.String getId() -> getId
    double getDistance() -> getDistance
    java.lang.String getName() -> getName
    double getBearing() -> getBearing
    java.lang.String getFuel() -> getFuel
    java.lang.String getElevation() -> getElevation
    java.lang.String getLongestRunway() -> getLongestRunway
    void setLongestRunway(java.lang.String) -> setLongestRunway
    void setHeight(double) -> setHeight
    boolean canGlide(com.ds.avare.storage.Preferences) -> canGlide
com.ds.avare.place.Area -> com.ds.avare.place.Area:
    com.ds.avare.storage.DataSource mDataSource -> a
    com.ds.avare.place.Airport[] mAirports -> b
    com.ds.avare.place.Area$DataBaseAreaTask mDt -> c
    double mLon -> d
    double mLat -> e
    boolean mFound -> f
    long mLastTime -> g
    double mAltitude -> h
    com.ds.avare.storage.Preferences mPref -> i
    void <init>(com.ds.avare.storage.DataSource,android.content.Context) -> <init>
    com.ds.avare.place.Airport getAirport(int) -> getAirport
    int getAirportsNumber() -> getAirportsNumber
    void updateLocation(com.ds.avare.gps.GpsParams) -> updateLocation
    com.ds.avare.storage.DataSource access$100(com.ds.avare.place.Area) -> access$100
    double access$200(com.ds.avare.place.Area) -> access$200
    double access$300(com.ds.avare.place.Area) -> access$300
    com.ds.avare.storage.Preferences access$400(com.ds.avare.place.Area) -> access$400
    boolean access$502(com.ds.avare.place.Area,boolean) -> access$502
    double access$600(com.ds.avare.place.Area) -> access$600
    com.ds.avare.place.Airport[] access$702(com.ds.avare.place.Area,com.ds.avare.place.Airport[]) -> access$702
com.ds.avare.place.Area$1 -> com.ds.avare.place.Area$1:
com.ds.avare.place.Area$DataBaseAreaTask -> com.ds.avare.place.Area$DataBaseAreaTask:
    com.ds.avare.place.Airport[] airports -> a
    com.ds.avare.place.Area this$0 -> b
    void <init>(com.ds.avare.place.Area) -> <init>
    java.lang.Void doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void <init>(com.ds.avare.place.Area,com.ds.avare.place.Area$1) -> <init>
com.ds.avare.place.Awos -> com.ds.avare.place.Awos:
    java.lang.String mType -> a
    double mLatitude -> b
    double mLongitude -> c
    java.lang.String mFrequency1 -> d
    java.lang.String mFrequency2 -> e
    java.lang.String mPhone1 -> f
    java.lang.String mPhone2 -> g
    java.lang.String mRemarks -> h
    void <init>(java.lang.String) -> <init>
    java.lang.String getType() -> getType
    java.lang.String getRemarks() -> getRemarks
    java.lang.String getFreq1() -> getFreq1
    java.lang.String getPhone1() -> getPhone1
    java.lang.String getFreq2() -> getFreq2
    java.lang.String getPhone2() -> getPhone2
    void setType(java.lang.String) -> setType
    void setLat(java.lang.String) -> setLat
    void setLon(java.lang.String) -> setLon
    void setRemark(java.lang.String) -> setRemark
    void setFreq1(java.lang.String) -> setFreq1
    void setFreq2(java.lang.String) -> setFreq2
    void setPhone1(java.lang.String) -> setPhone1
    void setPhone2(java.lang.String) -> setPhone2
com.ds.avare.place.Destination -> com.ds.avare.place.Destination:
    java.lang.String mName -> b
    com.ds.avare.storage.DataSource mDataSource -> c
    double mDistance -> d
    double mBearing -> e
    boolean mFound -> f
    java.lang.String mEte -> g
    java.lang.String mEta -> h
    com.ds.avare.shapes.TrackShape mTrackShape -> a
    double mLond -> i
    double mLatd -> j
    java.lang.String[] mAfdFound -> k
    com.ds.avare.storage.Preferences mPref -> l
    com.ds.avare.StorageService mService -> m
    boolean mLooking -> n
    boolean mInited -> o
    double mDeclination -> p
    double mLonInit -> q
    double mLatInit -> r
    java.lang.String mDestType -> s
    java.lang.String mDbType -> t
    java.lang.String mCmt -> u
    java.util.LinkedList mRunways -> v
    java.util.LinkedHashMap mFreq -> w
    java.util.LinkedList mAwos -> x
    java.util.LinkedHashMap mParams -> y
    java.lang.String getCmt() -> getCmt
    void <init>(java.lang.String,java.lang.String,com.ds.avare.storage.Preferences,com.ds.avare.StorageService) -> <init>
    void <init>(com.ds.avare.StorageService,double,double) -> <init>
    void parseGps(java.lang.String,java.lang.String) -> parseGps
    java.lang.String getStorageName() -> getStorageName
    java.lang.String getStorageName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getStorageName
    void updateTo(com.ds.avare.gps.GpsParams) -> updateTo
    java.lang.String getEte() -> getEte
    java.lang.String getEta() -> getEta
    void addTime() -> addTime
    java.lang.String toString() -> toString
    void find() -> find
    void find(java.lang.String) -> find
    boolean isFound() -> isFound
    boolean isLooking() -> isLooking
    java.lang.String[] getAfd() -> getAfd
    java.lang.String getFacilityName() -> getFacilityName
    java.lang.String getID() -> getID
    java.util.LinkedList getRunways() -> getRunways
    java.util.LinkedHashMap getParams() -> getParams
    java.util.LinkedHashMap getFrequencies() -> getFrequencies
    double getBearing() -> getBearing
    double getDistance() -> getDistance
    android.location.Location getLocation() -> getLocation
    java.lang.String getType() -> getType
    android.location.Location getLocationInit() -> getLocationInit
    com.ds.avare.shapes.TrackShape getTrackShape() -> getTrackShape
    java.util.LinkedList getAwos() -> getAwos
    double getElevation() -> getElevation
    java.lang.String getVerticalSpeedTo(com.ds.avare.gps.GpsParams) -> getVerticalSpeedTo
    java.lang.String getFlightPathRequired(com.ds.avare.gps.GpsParams) -> getFlightPathRequired
    double getAltitudeAboveDest(com.ds.avare.gps.GpsParams) -> getAltitudeAboveDest
    long getVerticalSpeedToNoFmt(com.ds.avare.gps.GpsParams) -> getVerticalSpeedToNoFmt
    boolean isGPSValid(java.lang.String) -> isGPSValid
    java.lang.String access$100(com.ds.avare.place.Destination) -> access$100
    com.ds.avare.StorageService access$200(com.ds.avare.place.Destination) -> access$200
    java.lang.String access$302(com.ds.avare.place.Destination,java.lang.String) -> access$302
    java.lang.String access$102(com.ds.avare.place.Destination,java.lang.String) -> access$102
    java.lang.String access$300(com.ds.avare.place.Destination) -> access$300
    void access$400(com.ds.avare.place.Destination,java.lang.String,java.lang.String) -> access$400
    double access$502(com.ds.avare.place.Destination,double) -> access$502
    double access$602(com.ds.avare.place.Destination,double) -> access$602
    java.lang.String access$702(com.ds.avare.place.Destination,java.lang.String) -> access$702
    double access$600(com.ds.avare.place.Destination) -> access$600
    java.util.LinkedHashMap access$800(com.ds.avare.place.Destination) -> access$800
    double access$500(com.ds.avare.place.Destination) -> access$500
    void access$900(com.ds.avare.place.Destination) -> access$900
    java.lang.String[] access$1002(com.ds.avare.place.Destination,java.lang.String[]) -> access$1002
    boolean access$1102(com.ds.avare.place.Destination,boolean) -> access$1102
    boolean access$1202(com.ds.avare.place.Destination,boolean) -> access$1202
    java.lang.String access$1302(com.ds.avare.place.Destination,java.lang.String) -> access$1302
    java.util.LinkedHashMap access$802(com.ds.avare.place.Destination,java.util.LinkedHashMap) -> access$802
    java.util.LinkedHashMap access$1402(com.ds.avare.place.Destination,java.util.LinkedHashMap) -> access$1402
    java.util.LinkedList access$1502(com.ds.avare.place.Destination,java.util.LinkedList) -> access$1502
    com.ds.avare.storage.DataSource access$1600(com.ds.avare.place.Destination) -> access$1600
    java.util.LinkedList access$1700(com.ds.avare.place.Destination) -> access$1700
    java.util.LinkedHashMap access$1400(com.ds.avare.place.Destination) -> access$1400
    java.util.LinkedList access$1500(com.ds.avare.place.Destination) -> access$1500
    com.ds.avare.storage.Preferences access$1800(com.ds.avare.place.Destination) -> access$1800
    java.lang.String access$1300(com.ds.avare.place.Destination) -> access$1300
    boolean access$1100(com.ds.avare.place.Destination) -> access$1100
    void access$1900(com.ds.avare.place.Destination) -> access$1900
com.ds.avare.place.Destination$1 -> com.ds.avare.place.Destination$1:
com.ds.avare.place.Destination$DataBaseLocationTask -> com.ds.avare.place.Destination$DataBaseLocationTask:
    com.ds.avare.place.Destination this$0 -> a
    void <init>(com.ds.avare.place.Destination) -> <init>
    void onPreExecute() -> onPreExecute
    java.lang.Boolean doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Boolean) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void <init>(com.ds.avare.place.Destination,com.ds.avare.place.Destination$1) -> <init>
com.ds.avare.place.Destination$DataBaseLocationTask$1 -> com.ds.avare.place.Destination$DataBaseLocationTask$1:
    java.util.LinkedList val$afdName -> a
    com.ds.avare.place.Destination$DataBaseLocationTask this$1 -> b
    void <init>(com.ds.avare.place.Destination$DataBaseLocationTask,java.util.LinkedList) -> <init>
    boolean accept(java.io.File,java.lang.String) -> accept
com.ds.avare.place.GameTFR -> com.ds.avare.place.GameTFR:
    double[][] GAME_TFR_COORDS -> a
    void <clinit>() -> <clinit>
com.ds.avare.place.Obstacle -> com.ds.avare.place.Obstacle:
    double mLon -> a
    double mLat -> b
    int mHeight -> c
    void <init>(double,double,int) -> <init>
    double getLatitude() -> getLatitude
    double getLongitude() -> getLongitude
com.ds.avare.place.Plan -> com.ds.avare.place.Plan:
    com.ds.avare.place.Destination[] mDestination -> a
    boolean[] mPassed -> b
    boolean mActive -> c
    com.ds.avare.shapes.TrackShape mTrackShape -> d
    java.lang.String mEte -> e
    double mDistance -> f
    double mBearing -> g
    com.ds.avare.gps.GpsParams mLastLocation -> h
    com.ds.avare.place.Plan$Passage mPassage -> i
    boolean mDestChanged -> j
    double mDeclination -> k
    int mReplaceId -> l
    com.ds.avare.storage.Preferences mPref -> m
    com.ds.avare.StorageService mService -> n
    java.lang.String mName -> o
    boolean mEarlyPass -> p
    boolean mEarlyPassEvent -> q
    boolean mSuspend -> r
    void <init>(android.content.Context,com.ds.avare.StorageService) -> <init>
    void clear() -> clear
    com.ds.avare.place.Destination getDestination(int) -> getDestination
    int getDestinationNumber() -> getDestinationNumber
    void remove(int) -> remove
    void move(int,int) -> move
    boolean hasDestinationChanged() -> hasDestinationChanged
    boolean appendDestination(com.ds.avare.place.Destination) -> appendDestination
    int findNextNotPassed() -> findNextNotPassed
    void setPassed(int) -> setPassed
    void setNotPassed(int) -> setNotPassed
    void updateLocation(com.ds.avare.gps.GpsParams) -> updateLocation
    java.lang.String toString() -> toString
    void makeActive(com.ds.avare.gps.GpsParams) -> makeActive
    void makeInactive() -> makeInactive
    boolean isActive() -> isActive
    com.ds.avare.position.Coordinate[] concat(com.ds.avare.position.Coordinate[],com.ds.avare.position.Coordinate[]) -> concat
    com.ds.avare.position.Coordinate[] getCoordinates() -> getCoordinates
    com.ds.avare.shapes.TrackShape getTrackShape() -> getTrackShape
    void simulate() -> simulate
    int findClosePointId(double,double,double) -> findClosePointId
    void replaceDestination(com.ds.avare.storage.Preferences,int,double,double,boolean) -> replaceDestination
    boolean insertDestination(com.ds.avare.place.Destination) -> insertDestination
    void update(java.util.Observable,java.lang.Object) -> update
    void regress() -> regress
    void advance() -> advance
    boolean suspendResume() -> suspendResume
    java.util.LinkedHashMap getAllPlans(com.ds.avare.StorageService,java.lang.String) -> getAllPlans
    boolean isEarlyPass() -> isEarlyPass
    com.ds.avare.storage.Preferences access$000(com.ds.avare.place.Plan) -> access$000
    boolean access$100(com.ds.avare.place.Plan) -> access$100
    boolean access$102(com.ds.avare.place.Plan,boolean) -> access$102
    boolean access$202(com.ds.avare.place.Plan,boolean) -> access$202
    com.ds.avare.place.Destination[] access$300(com.ds.avare.place.Plan) -> access$300
com.ds.avare.place.Plan$Passage -> com.ds.avare.place.Plan$Passage:
    double mLastDistance -> a
    double mLastBearing -> b
    double mCurrentDistance -> c
    double mCurrentBearing -> d
    double mSpeed -> e
    com.ds.avare.place.Plan this$0 -> f
    void <init>(com.ds.avare.place.Plan) -> <init>
    boolean hasPassed(double) -> hasPassed
    boolean updateLocation(com.ds.avare.gps.GpsParams,com.ds.avare.place.Destination) -> updateLocation
com.ds.avare.place.Runway -> com.ds.avare.place.Runway:
    java.lang.String mNumber -> a
    java.lang.String mHeading -> b
    double mVariation -> c
    double mLon -> d
    double mLat -> e
    java.lang.String mSurface -> f
    java.lang.String mElevation -> g
    java.lang.String mLights -> h
    java.lang.String mThreshold -> i
    java.lang.String mWidth -> j
    java.lang.String mLength -> k
    java.lang.String mPattern -> l
    java.lang.String mILS -> m
    java.lang.String mVGSI -> n
    void <init>(java.lang.String) -> <init>
    java.lang.String getSurface() -> getSurface
    java.lang.String getThreshold() -> getThreshold
    java.lang.String getWidth() -> getWidth
    java.lang.String getLength() -> getLength
    java.lang.String getPattern() -> getPattern
    java.lang.String getLights() -> getLights
    java.lang.String getElevation() -> getElevation
    java.lang.String getNumber() -> getNumber
    float getTrue() -> getTrue
    double getLongitude() -> getLongitude
    double getLatitude() -> getLatitude
    java.lang.String getILS() -> getILS
    java.lang.String getVGSI() -> getVGSI
    void setSurface(java.lang.String) -> setSurface
    void setThreshold(java.lang.String) -> setThreshold
    void setWidth(java.lang.String) -> setWidth
    void setLength(java.lang.String) -> setLength
    void setPattern(java.lang.String) -> setPattern
    void setLights(java.lang.String) -> setLights
    void setElevation(java.lang.String) -> setElevation
    void setHeading(java.lang.String) -> setHeading
    void setLongitude(java.lang.String) -> setLongitude
    void setLatitude(java.lang.String) -> setLatitude
    void setVariation(java.lang.String) -> setVariation
    void setILS(java.lang.String) -> setILS
    void setVGSI(java.lang.String) -> setVGSI
com.ds.avare.plan.LmfsPlan -> com.ds.avare.plan.LmfsPlan:
    boolean mValid -> x
    java.lang.String mId -> y
    java.lang.String flightRules -> a
    java.lang.String aircraftIdentifier -> b
    java.lang.String departure -> c
    java.lang.String destination -> d
    java.lang.String departureInstant -> e
    java.lang.String flightDuration -> f
    java.lang.String altDestination1 -> g
    java.lang.String altDestination2 -> h
    java.lang.String aircraftType -> i
    java.lang.String numberOfAircraft -> j
    java.lang.String heavyWakeTurbulence -> k
    java.lang.String aircraftEquipment -> l
    java.lang.String speedKnots -> m
    java.lang.String altitudeFL -> n
    java.lang.String fuelOnBoard -> o
    java.lang.String pilotData -> p
    java.lang.String peopleOnBoard -> q
    java.lang.String aircraftColor -> r
    java.lang.String route -> s
    java.lang.String type -> t
    java.lang.String remarks -> u
    java.lang.String currentState -> v
    java.lang.String versionStamp -> w
    void init() -> init
    void <init>() -> <init>
com.ds.avare.plan.LmfsPlanList -> com.ds.avare.plan.LmfsPlanList:
    java.util.LinkedList mPlans -> b
    int mSelectedIndex -> a
    java.util.LinkedList getPlans() -> getPlans
com.ds.avare.position.Coordinate -> com.ds.avare.position.Coordinate:
    double mLat -> a
    double mLon -> b
    boolean mSeparate -> c
    int mLeg -> d
    void setLeg(com.ds.avare.position.Coordinate[],int) -> setLeg
    int getLeg() -> getLeg
    void setSegment(int) -> setSegment
    void <init>(double,double) -> <init>
    double getLongitude() -> getLongitude
    double getLatitude() -> getLatitude
    void makeSeparate() -> makeSeparate
    boolean isSeparate() -> isSeparate
com.ds.avare.position.Movement -> com.ds.avare.position.Movement:
    double px -> a
    double py -> b
    double offsetx -> c
    double offsety -> d
    void <init>(double[],double[]) -> <init>
    void <init>() -> <init>
    double getLongitudePerPixel() -> getLongitudePerPixel
    double getLatitudePerPixel() -> getLatitudePerPixel
    double getOffsetLongitude() -> getOffsetLongitude
    double getOffsetLatitude() -> getOffsetLatitude
    float getNMPerLatitude(com.ds.avare.position.Scale) -> getNMPerLatitude
com.ds.avare.position.Origin -> com.ds.avare.position.Origin:
    double mLonC -> a
    double mLatC -> b
    double mLonL -> c
    double mLonR -> d
    double mLatU -> e
    double mLatL -> f
    double mScaleX -> g
    double mScaleY -> h
    void <init>() -> <init>
    void update(com.ds.avare.gps.GpsParams,com.ds.avare.position.Scale,com.ds.avare.position.Pan,double,double,int,int) -> update
    double getLongitudeOf(double) -> getLongitudeOf
    double getLatitudeOf(double) -> getLatitudeOf
    double getLongitudeCenter() -> getLongitudeCenter
    double getLatitudeCenter() -> getLatitudeCenter
    double getOffsetX(double) -> getOffsetX
    double getOffsetY(double) -> getOffsetY
com.ds.avare.position.Pan -> com.ds.avare.position.Pan:
    float mMoveX -> a
    float mMoveY -> b
    int mMoveXTile -> c
    int mMoveYTile -> d
    float mMoveXTileOld -> e
    float mMoveYTileOld -> f
    void <init>() -> <init>
    void <init>(com.ds.avare.position.Pan) -> <init>
    boolean setMove(float,float) -> setMove
    void setTileMove(int,int) -> setTileMove
    float getMoveX() -> getMoveX
    float getMoveY() -> getMoveY
    int getTileMoveX() -> getTileMoveX
    int getTileMoveY() -> getTileMoveY
    int getTileMoveXWithoutTear() -> getTileMoveXWithoutTear
    int getTileMoveYWithoutTear() -> getTileMoveYWithoutTear
com.ds.avare.position.PixelCoordinate -> com.ds.avare.position.PixelCoordinate:
    double mX -> a
    double mY -> b
    boolean mSeparate -> c
    void <init>(double,double) -> <init>
    double getX() -> getX
    double getY() -> getY
    void makeSeparate() -> makeSeparate
    boolean isSeparate() -> isSeparate
    double rotateX(double,double) -> rotateX
    double rotateY(double,double) -> rotateY
com.ds.avare.position.Projection -> com.ds.avare.position.Projection:
    double mBearing -> a
    double mDistance -> b
    double mLon1 -> c
    double mLon2 -> d
    double mLat1 -> e
    double mLat2 -> f
    void <init>(double,double,double,double) -> <init>
    double getStaticBearing(double,double,double,double) -> getStaticBearing
    double getStaticDistance(double,double,double,double) -> getStaticDistance
    com.ds.avare.position.Coordinate[] findPoints(int) -> findPoints
    double getBearing() -> getBearing
    double getDistance() -> getDistance
    java.lang.String getGeneralDirectionFrom(double) -> getGeneralDirectionFrom
com.ds.avare.position.Radial -> com.ds.avare.position.Radial:
    com.ds.avare.position.Coordinate findCoordinate(double,double,double,double) -> findCoordinate
com.ds.avare.position.Scale -> com.ds.avare.position.Scale:
    double mScaleFactor -> a
    double mScaleCorrectY -> b
    double mMacroMultiply -> c
    double mMaxScale -> d
    void <init>(double) -> <init>
    void <init>() -> <init>
    double getStep() -> getStep
    void setScaleFactor(float) -> setScaleFactor
    void setScaleAt(double) -> setScaleAt
    float getScaleFactorRaw() -> getScaleFactorRaw
    float getScaleFactor() -> getScaleFactor
    float getScaleCorrected() -> getScaleCorrected
    int getMacroFactor() -> getMacroFactor
    void updateMacro() -> updateMacro
    int downSample() -> downSample
    void zoomOut() -> zoomOut
com.ds.avare.shapes.CrumbsShape -> com.ds.avare.shapes.CrumbsShape:
    void <init>() -> <init>
    void updateShape(com.ds.avare.gps.GpsParams) -> updateShape
    void clearShape() -> clearShape
com.ds.avare.shapes.Draw -> com.ds.avare.shapes.Draw:
    float mLastXDraw -> b
    float mLastYDraw -> c
    java.util.LinkedList mDrawPoints -> a
    void <init>() -> <init>
    void addPoint(float,float,com.ds.avare.position.Origin) -> addPoint
    void addSeparation() -> addSeparation
    void clear() -> clear
    void drawShape(android.graphics.Canvas,android.graphics.Paint,com.ds.avare.position.Origin) -> drawShape
com.ds.avare.shapes.ElevationTile -> com.ds.avare.shapes.ElevationTile:
    com.ds.avare.utils.BitmapHolder mElevBitmap -> a
    com.ds.avare.storage.Preferences mPref -> b
    com.ds.avare.shapes.Tile mTile -> c
    android.content.Context mContext -> d
    void <init>(android.content.Context) -> <init>
    void recycleBitmaps() -> recycleBitmaps
    com.ds.avare.utils.BitmapHolder getElevationBitmap() -> getElevationBitmap
    void setElevationTile(com.ds.avare.shapes.Tile) -> setElevationTile
com.ds.avare.shapes.MetShape -> com.ds.avare.shapes.MetShape:
    void <init>(java.lang.String) -> <init>
com.ds.avare.shapes.PixelDraw -> com.ds.avare.shapes.PixelDraw:
    float mLastXDraw -> b
    float mLastYDraw -> c
    java.util.LinkedList mDrawPoints -> a
    void <init>() -> <init>
    void addPoint(float,float) -> addPoint
    void addSeparation() -> addSeparation
    void clear() -> clear
    void drawShape(android.graphics.Canvas,android.graphics.Paint) -> drawShape
com.ds.avare.shapes.Radar -> com.ds.avare.shapes.Radar:
    com.ds.avare.utils.BitmapHolder mBitmap -> a
    float mLon -> b
    float mLat -> c
    float mPx -> d
    float mPy -> e
    long mDate -> f
    com.ds.avare.storage.Preferences mPref -> g
    android.content.Context mContext -> h
    java.lang.String mImage -> i
    java.lang.String mText -> j
    void <init>(android.content.Context) -> <init>
    void parse() -> parse
    void flush() -> flush
    void draw(android.graphics.Canvas,android.graphics.Paint,com.ds.avare.position.Origin,com.ds.avare.position.Scale,float,float) -> draw
    boolean isOld() -> isOld
    java.lang.String getDate() -> getDate
com.ds.avare.shapes.Shape -> com.ds.avare.shapes.Shape:
    java.util.LinkedList mCoords -> a
    double mLonMin -> b
    double mLonMax -> c
    double mLatMin -> d
    double mLatMax -> e
    java.lang.String mText -> f
    com.sromku.polygon.Polygon$Builder mPolyBuilder -> g
    com.sromku.polygon.Polygon mPoly -> h
    void <init>(java.lang.String) -> <init>
    void add(double,double,boolean) -> add
    void add(double,double,boolean,int) -> add
    void drawShape(android.graphics.Canvas,com.ds.avare.position.Origin,com.ds.avare.position.Scale,com.ds.avare.position.Movement,android.graphics.Paint,boolean,boolean) -> drawShape
    void drawShape(android.graphics.Canvas,com.ds.avare.position.Origin,com.ds.avare.position.Scale,com.ds.avare.position.Movement,android.graphics.Paint,boolean,boolean,com.ds.avare.place.Plan) -> drawShape
    int getNumCoords() -> getNumCoords
    java.lang.String getTextIfTouched(double,double) -> getTextIfTouched
    void makePolygon() -> makePolygon
com.ds.avare.shapes.TFRShape -> com.ds.avare.shapes.TFRShape:
    void <init>(java.lang.String) -> <init>
com.ds.avare.shapes.Tile -> com.ds.avare.shapes.Tile:
    java.lang.String mName -> a
    double mLonUL -> b
    double mLonLL -> c
    double mLonUR -> d
    double mLonLR -> e
    double mLatUL -> f
    double mLatLL -> g
    double mLatUR -> h
    double mLatLR -> i
    double mLonC -> j
    double mLatC -> k
    double mWidth -> l
    double mHeight -> m
    java.lang.String mChart -> n
    void <init>() -> <init>
    void <init>(com.ds.avare.storage.Preferences,java.lang.String,double,double,double,double,double,double,double,double,double,double,java.lang.String) -> <init>
    boolean within(double,double) -> within
    double getPx() -> getPx
    java.lang.String getChart() -> getChart
    double getPy() -> getPy
    double getOffsetTopX(double) -> getOffsetTopX
    double getOffsetTopY(double) -> getOffsetTopY
    double getOffsetX(double) -> getOffsetX
    double getOffsetY(double) -> getOffsetY
    java.lang.String getName() -> getName
    java.lang.String getNeighbor(int,int) -> getNeighbor
    double getLatitude() -> getLatitude
com.ds.avare.shapes.TileMap -> com.ds.avare.shapes.TileMap:
    com.ds.avare.utils.BitmapHolder[] mapA -> a
    com.ds.avare.utils.BitmapHolder[] mapB -> b
    android.content.Context mContext -> c
    com.ds.avare.storage.Preferences mPref -> d
    int mXtiles -> e
    int mYtiles -> f
    int numTiles -> g
    int numTilesMax -> h
    com.ds.avare.utils.BitmapHolder[] mBitmapCache -> i
    com.ds.avare.utils.BitmapHolder[] mFreeList -> j
    void <init>(android.content.Context) -> <init>
    void clear() -> clear
    void forceReload() -> forceReload
    void reload(java.lang.String[]) -> reload
    void flip() -> flip
    void recycleBitmaps() -> recycleBitmaps
    int getTilesNum() -> getTilesNum
    int getXTilesNum() -> getXTilesNum
    int getYTilesNum() -> getYTilesNum
    com.ds.avare.utils.BitmapHolder getTile(int) -> getTile
    void setOrientation() -> setOrientation
com.ds.avare.shapes.TrackShape -> com.ds.avare.shapes.TrackShape:
    int getLegColor(int,int) -> getLegColor
    void <init>() -> <init>
    void updateShape(com.ds.avare.gps.GpsParams,com.ds.avare.place.Destination) -> updateShape
    void updateShapeFromPlan(com.ds.avare.position.Coordinate[]) -> updateShapeFromPlan
com.ds.avare.storage.DataBaseHelper -> com.ds.avare.storage.DataBaseHelper:
    android.database.sqlite.SQLiteDatabase mDataBase -> a
    android.database.sqlite.SQLiteDatabase mDataBaseFiles -> b
    android.database.sqlite.SQLiteDatabase mDataBaseElev -> c
    android.database.sqlite.SQLiteDatabase mDataBaseGeoPlates -> d
    android.database.sqlite.SQLiteDatabase mDataBaseFuel -> e
    android.database.sqlite.SQLiteDatabase mDataBaseRatings -> f
    android.database.sqlite.SQLiteDatabase mDataBaseWeather -> g
    com.ds.avare.shapes.Tile mCenterTile -> h
    com.ds.avare.storage.Preferences mPref -> i
    android.content.Context mContext -> j
    java.lang.Integer mUsers -> k
    java.lang.Integer mUsersFiles -> l
    java.lang.Integer mUsersElev -> m
    java.lang.Integer mUsersPlates -> n
    java.lang.Integer mUsersGeoPlates -> o
    java.lang.Integer mUsersWeather -> p
    java.lang.Integer mUsersProcedures -> q
    java.lang.Integer mUsersFuel -> r
    java.lang.Integer mUsersRatings -> s
    java.lang.String getMainDb() -> getMainDb
    void <init>(android.content.Context) -> <init>
    boolean isPresent() -> isPresent
    void closes(android.database.Cursor) -> closes
    android.database.Cursor doQuery(java.lang.String,java.lang.String) -> doQuery
    float[] findDiagramMatrix(java.lang.String) -> findDiagramMatrix
    java.lang.String addPath(java.lang.String,java.lang.String) -> addPath
    java.util.LinkedList findFilesToDelete(java.lang.String,java.lang.String) -> findFilesToDelete
    com.ds.avare.place.Airport[] findClosestAirports(double,double,java.lang.String) -> findClosestAirports
    com.ds.avare.storage.StringPreference stringQuery(java.lang.String,java.lang.String,java.lang.String) -> stringQuery
    com.ds.avare.storage.StringPreference searchOne(java.lang.String) -> searchOne
    com.ds.avare.storage.StringPreference searchRadial(java.lang.String) -> searchRadial
    void searchCity(java.lang.String,java.util.LinkedHashMap) -> searchCity
    void search(java.lang.String,java.util.LinkedHashMap,boolean) -> search
    void findDestination(java.lang.String,java.lang.String,java.lang.String,java.util.LinkedHashMap,java.util.LinkedList,java.util.LinkedHashMap,java.util.LinkedList) -> findDestination
    java.util.LinkedList findFrequencies(java.lang.String) -> findFrequencies
    java.util.LinkedList findRunways(java.lang.String) -> findRunways
    java.lang.String findElev(java.lang.String) -> findElev
    boolean isWithin(double,double,double[],double[]) -> isWithin
    java.lang.String findClosestAirportID(double,double) -> findClosestAirportID
    java.lang.String getSua(double,double) -> getSua
    java.lang.String findLonLat(java.lang.String,java.lang.String) -> findLonLat
    java.lang.String[] findMinimums(java.lang.String) -> findMinimums
    java.util.LinkedList findAFD(java.lang.String) -> findAFD
    java.util.LinkedList findObstacles(double,double,int) -> findObstacles
    java.lang.String getFilesDb() -> getFilesDb
    android.database.Cursor doQueryFiles(java.lang.String,java.lang.String) -> doQueryFiles
    void closesFiles(android.database.Cursor) -> closesFiles
    com.ds.avare.shapes.Tile findClosest(double,double,double[],double[],int) -> findClosest
    com.ds.avare.shapes.Tile findTile(java.lang.String) -> findTile
    java.lang.String getWeatherDb() -> getWeatherDb
    android.database.Cursor doQueryWeather(java.lang.String,java.lang.String) -> doQueryWeather
    void closesWeather(android.database.Cursor) -> closesWeather
    com.ds.avare.weather.Taf getTAF(java.lang.String) -> getTAF
    com.ds.avare.weather.Metar getMETAR(java.lang.String) -> getMETAR
    com.ds.avare.weather.WindsAloft getWindsAloft(double,double) -> getWindsAloft
    java.util.LinkedList getAireps(double,double) -> getAireps
    java.util.LinkedList getAirSigMets() -> getAirSigMets
    android.database.Cursor doQueryElev(java.lang.String,java.lang.String) -> doQueryElev
    void closesElev(android.database.Cursor) -> closesElev
    com.ds.avare.shapes.Tile findElevTile(double,double,double[],double[],int) -> findElevTile
    android.database.Cursor doQueryGeoPlates(java.lang.String,java.lang.String) -> doQueryGeoPlates
    void closesGeoPlates(android.database.Cursor) -> closesGeoPlates
    float[] findGeoPlateMatrix(java.lang.String) -> findGeoPlateMatrix
    android.database.Cursor doQueryFuel(java.lang.String,java.lang.String) -> doQueryFuel
    void closesFuel(android.database.Cursor) -> closesFuel
    java.util.LinkedList findFuelCost(java.lang.String) -> findFuelCost
    android.database.Cursor doQueryRatings(java.lang.String,java.lang.String) -> doQueryRatings
    void closesRatings(android.database.Cursor) -> closesRatings
    java.util.LinkedList findRatings(java.lang.String) -> findRatings
com.ds.avare.storage.DataBaseHelper$1 -> com.ds.avare.storage.DataBaseHelper$1:
    java.lang.String val$loc -> a
    com.ds.avare.storage.DataBaseHelper this$0 -> b
    void <init>(com.ds.avare.storage.DataBaseHelper,java.lang.String) -> <init>
    boolean accept(java.io.File,java.lang.String) -> accept
com.ds.avare.storage.DataSource -> com.ds.avare.storage.DataSource:
    com.ds.avare.storage.DataBaseHelper dbHelper -> a
    void <init>(android.content.Context) -> <init>
    boolean isPresent() -> isPresent
    com.ds.avare.shapes.Tile findClosest(double,double,double[],double[],int) -> findClosest
    com.ds.avare.shapes.Tile findTile(java.lang.String) -> findTile
    boolean isWithin(double,double,double[],double[]) -> isWithin
    void findDestination(java.lang.String,java.lang.String,java.lang.String,java.util.LinkedHashMap,java.util.LinkedList,java.util.LinkedHashMap,java.util.LinkedList) -> findDestination
    com.ds.avare.place.Airport[] findClosestAirports(double,double,java.lang.String) -> findClosestAirports
    java.lang.String findClosestAirportID(double,double) -> findClosestAirportID
    float[] findDiagramMatrix(java.lang.String) -> findDiagramMatrix
    float[] findGeoPlateMatrix(java.lang.String) -> findGeoPlateMatrix
    void search(java.lang.String,java.util.LinkedHashMap,boolean) -> search
    com.ds.avare.storage.StringPreference searchOne(java.lang.String) -> searchOne
    java.lang.String[] findMinimums(java.lang.String) -> findMinimums
    java.util.LinkedList findAFD(java.lang.String) -> findAFD
    java.util.LinkedList findObstacles(double,double,int) -> findObstacles
    java.util.LinkedList findFilesToDelete(java.lang.String,java.lang.String) -> findFilesToDelete
    java.lang.String findLonLat(java.lang.String,java.lang.String) -> findLonLat
    com.ds.avare.weather.Taf getTAF(java.lang.String) -> getTAF
    com.ds.avare.weather.Metar getMETAR(java.lang.String) -> getMETAR
    java.util.LinkedList getAireps(double,double) -> getAireps
    com.ds.avare.weather.WindsAloft getWindsAloft(double,double) -> getWindsAloft
    java.util.LinkedList getAirSigMets() -> getAirSigMets
    java.lang.String getSua(double,double) -> getSua
    java.util.LinkedList findRunways(java.lang.String) -> findRunways
    java.util.LinkedList findFrequencies(java.lang.String) -> findFrequencies
    java.lang.String findElev(java.lang.String) -> findElev
    com.ds.avare.shapes.Tile findElevTile(double,double,double[],double[],int) -> findElevTile
    java.util.LinkedList findFuelCost(java.lang.String) -> findFuelCost
    java.util.LinkedList findRatings(java.lang.String) -> findRatings
com.ds.avare.storage.Preferences -> com.ds.avare.storage.Preferences:
    double speedConversion -> a
    double heightConversion -> b
    double feetConversion -> c
    double earthRadiusConversion -> d
    java.lang.String distanceConversionUnit -> e
    java.lang.String speedConversionUnit -> f
    java.lang.String vsConversionUnit -> g
    android.content.SharedPreferences mPref -> l
    android.content.Context mContext -> m
    double NM_TO_MI -> h
    double NM_TO_KM -> i
    double NM_TO_LATITUDE -> j
    double MS_TO_KT -> k
    void <init>(android.content.Context) -> <init>
    java.lang.String getRoot() -> getRoot
    java.lang.String[] getRecent() -> getRecent
    void modifyARecent(java.lang.String,java.lang.String) -> modifyARecent
    void deleteARecent(java.lang.String) -> deleteARecent
    void addToRecent(java.lang.String) -> addToRecent
    java.lang.String getPlans() -> getPlans
    int[] getTilesNumber() -> getTilesNumber
    boolean shouldLeaveRunning() -> shouldLeaveRunning
    boolean shouldShowBackground() -> shouldShowBackground
    boolean shouldShowAllFacilities() -> shouldShowAllFacilities
    boolean shouldShowObstacles() -> shouldShowObstacles
    boolean isTrackEnabled() -> isTrackEnabled
    boolean isWeatherTranslated() -> isWeatherTranslated
    boolean shouldExtendRunways() -> shouldExtendRunways
    boolean shouldAutoDisplayAirportDiagram() -> shouldAutoDisplayAirportDiagram
    boolean isSimulationMode() -> isSimulationMode
    int getDisplayIcon() -> getDisplayIcon
    int getCycleAdjust() -> getCycleAdjust
    boolean shouldGpsWarn() -> shouldGpsWarn
    java.lang.String getOrientation() -> getOrientation
    boolean shouldScreenStayOn() -> shouldScreenStayOn
    boolean isGpsUpdatePeriodShort() -> isGpsUpdatePeriodShort
    boolean isNightMode() -> isNightMode
    java.lang.String getChartType() -> getChartType
    java.lang.String getAirSigMetType() -> getAirSigMetType
    void setChartType(java.lang.String) -> setChartType
    void setSimMode(boolean) -> setSimMode
    java.lang.String getDistanceUnit() -> getDistanceUnit
    java.lang.String mapsFolder() -> mapsFolder
    void setMapsFolder(java.lang.String) -> setMapsFolder
    boolean shouldDrawTracks() -> shouldDrawTracks
    boolean shouldSaveTracks() -> shouldSaveTracks
    boolean useAdsbWeather() -> useAdsbWeather
    int showRadar() -> showRadar
    boolean showAdsbTraffic() -> showAdsbTraffic
    int getTimerRingSize() -> getTimerRingSize
    int getDistanceRingType() -> getDistanceRingType
    int getDistanceRingColor() -> getDistanceRingColor
    int autoPostTracks() -> autoPostTracks
    boolean useDynamicFields() -> useDynamicFields
    boolean shouldBlinkScreen() -> shouldBlinkScreen
    java.lang.String getRowFormats() -> getRowFormats
    void setRowFormats(java.lang.String) -> setRowFormats
    double getOdometer() -> getOdometer
    void setRegistered(boolean) -> setRegistered
    boolean isRegistered() -> isRegistered
    java.lang.String getExternalGpsSource() -> getExternalGpsSource
    void setOdometer(double) -> setOdometer
    boolean getShowCDI() -> getShowCDI
    boolean shouldShowEdgeTape() -> shouldShowEdgeTape
    float getGlideRatio() -> getGlideRatio
    java.lang.String getLists() -> getLists
    boolean useBearingForETEA() -> useBearingForETEA
    boolean allowRubberBanding() -> allowRubberBanding
    boolean showGameTFRs() -> showGameTFRs
    boolean showCAPGrids() -> showCAPGrids
    boolean showPlateInfoLines() -> showPlateInfoLines
    java.lang.String getUDWLocation() -> getUDWLocation
    void setUDWLocation(java.lang.String) -> setUDWLocation
    java.lang.String getGeotags() -> getGeotags
    java.lang.String getGeoCode() -> getGeoCode
    void setGeotags(java.lang.String) -> setGeotags
    long getTabs() -> getTabs
    int getHotelMaxPriceIndex() -> getHotelMaxPriceIndex
    int getHotelMinStarIndex() -> getHotelMinStarIndex
    int getHotelMaxDistanceIndex() -> getHotelMaxDistanceIndex
    int getHotelAdultsIndex() -> getHotelAdultsIndex
    int getHotelChildIndex(java.lang.String) -> getHotelChildIndex
    void setHotelMaxPriceIndex(int) -> setHotelMaxPriceIndex
    void setHotelMinStarIndex(int) -> setHotelMinStarIndex
    void setHotelMaxDistanceIndex(int) -> setHotelMaxDistanceIndex
    void setHotelAdultsIndex(int) -> setHotelAdultsIndex
    void setHotelChildIndex(java.lang.String,int) -> setHotelChildIndex
    java.lang.String getLongestRunway() -> getLongestRunway
    java.lang.String getRegisteredEmail() -> getRegisteredEmail
    void setRegisteredEmail(java.lang.String) -> setRegisteredEmail
    boolean getPlanControl() -> getPlanControl
    void <clinit>() -> <clinit>
com.ds.avare.storage.StringPreference -> com.ds.avare.storage.StringPreference:
    java.lang.String mDbType -> a
    java.lang.String mDestType -> b
    java.lang.String mId -> c
    java.lang.String mName -> d
    void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    java.lang.String joinName() -> joinName
    void putInHash(java.util.LinkedHashMap) -> putInHash
    java.lang.String getId() -> getId
    java.lang.String getType() -> getType
    java.lang.String getHashedName() -> getHashedName
    java.lang.String getHashedName(java.lang.String,java.lang.String) -> getHashedName
    java.lang.String formatAddressName(java.lang.String) -> formatAddressName
    java.lang.String parseHashedNameId(java.lang.String) -> parseHashedNameId
    java.lang.String parseHashedNameIdBefore(java.lang.String) -> parseHashedNameIdBefore
    java.lang.String parseHashedNameDestType(java.lang.String) -> parseHashedNameDestType
    java.lang.String parseHashedNameDbType(java.lang.String) -> parseHashedNameDbType
    java.lang.String parseHashedNameFacilityName(java.lang.String) -> parseHashedNameFacilityName
com.ds.avare.touch.GestureInterface -> com.ds.avare.touch.GestureInterface:
    void gestureCallBack(int,com.ds.avare.touch.LongTouchDestination) -> gestureCallBack
    void gestureCallBack(int,com.ds.avare.utils.InfoLines$InfoLineFieldLoc) -> gestureCallBack
com.ds.avare.touch.LongTouchDestination -> com.ds.avare.touch.LongTouchDestination:
    java.lang.String airport -> a
    java.lang.String info -> b
    java.lang.String tfr -> c
    java.lang.String mets -> d
    com.ds.avare.weather.Taf taf -> e
    com.ds.avare.weather.WindsAloft wa -> f
    com.ds.avare.weather.Metar metar -> g
    java.lang.String sua -> h
    java.lang.String radar -> i
    java.util.LinkedList airep -> j
    java.util.LinkedList freq -> k
    java.lang.String performance -> l
    java.lang.String fuel -> m
    java.lang.String ratings -> n
    void <init>() -> <init>
com.ds.avare.touch.MultiTouchController -> com.ds.avare.touch.MultiTouchController:
    com.ds.avare.touch.MultiTouchController$MultiTouchObjectCanvas objectCanvas -> a
    com.ds.avare.touch.MultiTouchController$PointInfo mCurrPt -> c
    com.ds.avare.touch.MultiTouchController$PointInfo mPrevPt -> d
    float mCurrPtX -> e
    float mCurrPtY -> f
    float mCurrPtDiam -> g
    float mCurrPtWidth -> h
    float mCurrPtHeight -> i
    float mCurrPtAng -> j
    boolean handleSingleTouchEvents -> k
    java.lang.Object selectedObject -> l
    com.ds.avare.touch.MultiTouchController$PositionAndScale mCurrXform -> m
    long mSettleStartTime -> n
    long mSettleEndTime -> o
    float startPosX -> p
    float startPosY -> q
    float startScaleOverPinchDiam -> r
    float startAngleMinusPinchAngle -> s
    float startScaleXOverPinchWidth -> t
    float startScaleYOverPinchHeight -> u
    int mMode -> v
    boolean multiTouchSupported -> b
    java.lang.reflect.Method m_getPointerCount -> w
    java.lang.reflect.Method m_getPointerId -> x
    java.lang.reflect.Method m_getPressure -> y
    java.lang.reflect.Method m_getHistoricalX -> z
    java.lang.reflect.Method m_getHistoricalY -> A
    java.lang.reflect.Method m_getHistoricalPressure -> B
    java.lang.reflect.Method m_getX -> C
    java.lang.reflect.Method m_getY -> D
    int ACTION_POINTER_UP -> E
    int ACTION_POINTER_INDEX_SHIFT -> F
    float[] xVals -> G
    float[] yVals -> H
    float[] pressureVals -> I
    int[] pointerIds -> J
    float mMacro -> K
    void extractCurrPtInfo() -> extractCurrPtInfo
    void <init>(com.ds.avare.touch.MultiTouchController$MultiTouchObjectCanvas) -> <init>
    void <init>(com.ds.avare.touch.MultiTouchController$MultiTouchObjectCanvas,boolean) -> <init>
    void setMacro(float) -> setMacro
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void decodeTouchEvent(int,float[],float[],float[],int[],int,boolean,long) -> decodeTouchEvent
    void anchorAtThisPositionAndScale() -> anchorAtThisPositionAndScale
    void performDragOrPinch() -> performDragOrPinch
    void multiTouchController() -> multiTouchController
    void <clinit>() -> <clinit>
com.ds.avare.touch.MultiTouchController$MultiTouchObjectCanvas -> com.ds.avare.touch.MultiTouchController$MultiTouchObjectCanvas:
    java.lang.Object getDraggableObjectAtPoint(com.ds.avare.touch.MultiTouchController$PointInfo) -> getDraggableObjectAtPoint
    void getPositionAndScale(java.lang.Object,com.ds.avare.touch.MultiTouchController$PositionAndScale) -> getPositionAndScale
    boolean setPositionAndScale(java.lang.Object,com.ds.avare.touch.MultiTouchController$PositionAndScale,com.ds.avare.touch.MultiTouchController$PointInfo) -> setPositionAndScale
    void selectObject(java.lang.Object,com.ds.avare.touch.MultiTouchController$PointInfo) -> selectObject
com.ds.avare.touch.MultiTouchController$PointInfo -> com.ds.avare.touch.MultiTouchController$PointInfo:
    int numPoints -> a
    float[] xs -> b
    float[] ys -> c
    float[] pressures -> d
    int[] pointerIds -> e
    float xMid -> f
    float yMid -> g
    float pressureMid -> h
    float dx -> i
    float dy -> j
    float diameter -> k
    float diameterSq -> l
    float angle -> m
    boolean isDown -> n
    boolean isMultiTouch -> o
    boolean diameterSqIsCalculated -> p
    boolean diameterIsCalculated -> q
    boolean angleIsCalculated -> r
    int action -> s
    long eventTime -> t
    void <init>() -> <init>
    void set(int,float[],float[],float[],int[],int,boolean,long) -> set
    void set(com.ds.avare.touch.MultiTouchController$PointInfo) -> set
    boolean isMultiTouch() -> isMultiTouch
    float getMultiTouchWidth() -> getMultiTouchWidth
    float getMultiTouchHeight() -> getMultiTouchHeight
    int julery_isqrt(int) -> julery_isqrt
    float getMultiTouchDiameterSq() -> getMultiTouchDiameterSq
    float getMultiTouchDiameter() -> getMultiTouchDiameter
    float getMultiTouchAngle() -> getMultiTouchAngle
    float getX() -> getX
    float[] getXs() -> getXs
    float getY() -> getY
    float[] getYs() -> getYs
    boolean isDown() -> isDown
    long getEventTime() -> getEventTime
    void access$300(com.ds.avare.touch.MultiTouchController$PointInfo,int,float[],float[],float[],int[],int,boolean,long) -> access$300
    long access$1000(com.ds.avare.touch.MultiTouchController$PointInfo) -> access$1000
com.ds.avare.touch.MultiTouchController$PositionAndScale -> com.ds.avare.touch.MultiTouchController$PositionAndScale:
    float xOff -> a
    float yOff -> b
    float scale -> c
    float scaleX -> d
    float scaleY -> e
    float angle -> f
    boolean updateScale -> g
    boolean updateScaleXY -> h
    boolean updateAngle -> i
    void <init>() -> <init>
    void set(float,float,boolean,float,boolean,float,float,boolean,float) -> set
    void set(float,float,float,float,float,float) -> set
    float getXOff() -> getXOff
    float getYOff() -> getYOff
    float getScale() -> getScale
    boolean access$000(com.ds.avare.touch.MultiTouchController$PositionAndScale) -> access$000
    boolean access$100(com.ds.avare.touch.MultiTouchController$PositionAndScale) -> access$100
    boolean access$200(com.ds.avare.touch.MultiTouchController$PositionAndScale) -> access$200
    float access$400(com.ds.avare.touch.MultiTouchController$PositionAndScale) -> access$400
    float access$500(com.ds.avare.touch.MultiTouchController$PositionAndScale) -> access$500
    float access$600(com.ds.avare.touch.MultiTouchController$PositionAndScale) -> access$600
    float access$700(com.ds.avare.touch.MultiTouchController$PositionAndScale) -> access$700
    float access$800(com.ds.avare.touch.MultiTouchController$PositionAndScale) -> access$800
    float access$900(com.ds.avare.touch.MultiTouchController$PositionAndScale) -> access$900
com.ds.avare.userDefinedWaypoints.CsvUDWParser -> com.ds.avare.userDefinedWaypoints.CsvUDWParser:
    void <init>() -> <init>
    java.util.List parse(java.io.FileInputStream) -> parse
com.ds.avare.userDefinedWaypoints.GpxUDWParser -> com.ds.avare.userDefinedWaypoints.GpxUDWParser:
    java.lang.String NS -> a
    void <init>() -> <init>
    java.util.List parse(java.io.FileInputStream) -> parse
    java.util.List readGPX(org.xmlpull.v1.XmlPullParser) -> readGPX
    com.ds.avare.userDefinedWaypoints.Waypoint readWPT(org.xmlpull.v1.XmlPullParser) -> readWPT
    java.lang.String readNAME(org.xmlpull.v1.XmlPullParser) -> readNAME
    java.lang.String readText(org.xmlpull.v1.XmlPullParser) -> readText
    void skip(org.xmlpull.v1.XmlPullParser) -> skip
    void <clinit>() -> <clinit>
com.ds.avare.userDefinedWaypoints.KmlUDWParser -> com.ds.avare.userDefinedWaypoints.KmlUDWParser:
    java.lang.String NS -> a
    void <init>() -> <init>
    java.util.List parse(java.io.FileInputStream) -> parse
    java.util.List readKmlData(org.xmlpull.v1.XmlPullParser) -> readKmlData
    java.util.List readDocument(org.xmlpull.v1.XmlPullParser) -> readDocument
    java.util.List readFolder(org.xmlpull.v1.XmlPullParser) -> readFolder
    com.ds.avare.userDefinedWaypoints.Waypoint readWaypoint(org.xmlpull.v1.XmlPullParser) -> readWaypoint
    java.lang.String readPoint(org.xmlpull.v1.XmlPullParser) -> readPoint
    java.lang.String readName(org.xmlpull.v1.XmlPullParser) -> readName
    java.lang.String readCoordinates(org.xmlpull.v1.XmlPullParser) -> readCoordinates
    java.lang.String readText(org.xmlpull.v1.XmlPullParser) -> readText
    void skip(org.xmlpull.v1.XmlPullParser) -> skip
    void <clinit>() -> <clinit>
com.ds.avare.userDefinedWaypoints.UDWFactory -> com.ds.avare.userDefinedWaypoints.UDWFactory:
    java.lang.String TXT -> a
    java.lang.String XML -> b
    java.lang.String CSV -> c
    java.lang.String KML -> d
    java.lang.String GPX -> e
    void <init>() -> <init>
    java.util.List parse(java.lang.String) -> parse
com.ds.avare.userDefinedWaypoints.UDWMgr -> com.ds.avare.userDefinedWaypoints.UDWMgr:
    android.graphics.Paint mPaint -> a
    java.util.List mPoints -> b
    com.ds.avare.StorageService mService -> c
    android.content.Context mContext -> d
    float mPix -> e
    float m2Pix -> f
    float m15Pix -> g
    java.lang.String UDWDESCRIPTION -> h
    void <init>(com.ds.avare.StorageService,android.content.Context) -> <init>
    void clear() -> clear
    void forceReload() -> forceReload
    void populate(java.lang.String) -> populate
    void add(com.ds.avare.userDefinedWaypoints.Waypoint) -> add
    void setDipToPix(float) -> setDipToPix
    void draw(android.graphics.Canvas,boolean,com.ds.avare.gps.GpsParams,android.graphics.Typeface,com.ds.avare.position.Origin) -> draw
    java.lang.String whereAndHowFar(com.ds.avare.userDefinedWaypoints.Waypoint) -> whereAndHowFar
    void search(java.lang.String,java.util.LinkedHashMap) -> search
    com.ds.avare.userDefinedWaypoints.Waypoint get(java.lang.String) -> get
com.ds.avare.userDefinedWaypoints.UDWParser -> com.ds.avare.userDefinedWaypoints.UDWParser:
    void <init>() -> <init>
    java.util.List parse(java.io.FileInputStream) -> parse
com.ds.avare.userDefinedWaypoints.Waypoint -> com.ds.avare.userDefinedWaypoints.Waypoint:
    java.lang.String mName -> a
    java.lang.String mCmt -> b
    float mLat -> c
    float mLon -> d
    boolean mShowDist -> e
    int mMarkerType -> f
    boolean mVisible -> g
    boolean mLocked -> h
    java.lang.String mType -> i
    void <init>(java.lang.String,java.lang.String,float,float,boolean,int,boolean) -> <init>
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    java.lang.String getCmt() -> getCmt
    float getLat() -> getLat
    float getLon() -> getLon
    boolean getVisible() -> getVisible
    void setMarkerType(int) -> setMarkerType
    void setVisible(boolean) -> setVisible
    void setCmt(java.lang.String) -> setCmt
    void draw(android.graphics.Canvas,com.ds.avare.position.Origin,boolean,com.ds.avare.gps.GpsParams,android.graphics.Paint,com.ds.avare.StorageService,java.lang.String,float) -> draw
com.ds.avare.utils.BitmapHolder -> com.ds.avare.utils.BitmapHolder:
    android.graphics.Bitmap mBitmap -> a
    android.graphics.Canvas mCanvas -> b
    int mWidth -> c
    int mHeight -> d
    java.lang.String mName -> e
    boolean mFree -> f
    boolean mFound -> g
    android.graphics.Matrix mTransform -> h
    void <init>() -> <init>
    void <init>(int,int) -> <init>
    void drawInBitmap(com.ds.avare.utils.BitmapHolder,java.lang.String,int,int) -> drawInBitmap
    void getTileOptions(java.lang.String,com.ds.avare.storage.Preferences,int[]) -> getTileOptions
    void <init>(android.content.Context,com.ds.avare.storage.Preferences,java.lang.String,int) -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(android.content.Context,int) -> <init>
    void <init>(android.graphics.Bitmap) -> <init>
    void recycle() -> recycle
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    java.lang.String getName() -> getName
    android.graphics.Bitmap getBitmap() -> getBitmap
    boolean getFree() -> getFree
    void setFree(boolean) -> setFree
    void setFound(boolean) -> setFound
    boolean getFound() -> getFound
    android.graphics.Matrix getTransform() -> getTransform
com.ds.avare.utils.DisplayIcon -> com.ds.avare.utils.DisplayIcon:
    com.ds.avare.utils.BitmapHolder getDisplayIcon(android.content.Context,com.ds.avare.storage.Preferences) -> getDisplayIcon
com.ds.avare.utils.FolderPreference -> com.ds.avare.utils.FolderPreference:
    android.content.Context mContext -> a
    android.widget.ListView mListView -> b
    java.lang.String mChosenFile -> c
    java.util.ArrayList mStr -> d
    java.io.File mPath -> e
    com.ds.avare.utils.FolderPreference$Item[] mFileList -> f
    android.widget.ListAdapter mAdapter -> g
    java.lang.Boolean mFirstLevel -> h
    android.widget.TextView mPathView -> i
    android.widget.Button mButton -> j
    android.widget.Button mButtonSD -> k
    com.ds.avare.storage.Preferences mPref -> l
    void init(java.lang.String) -> init
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onDialogClosed(boolean) -> onDialogClosed
    android.view.View onCreateDialogView() -> onCreateDialogView
    void loadFileList() -> loadFileList
    android.content.Context access$000(com.ds.avare.utils.FolderPreference) -> access$000
    void access$100(com.ds.avare.utils.FolderPreference,java.lang.String) -> access$100
    void access$200(com.ds.avare.utils.FolderPreference) -> access$200
    android.widget.ListAdapter access$300(com.ds.avare.utils.FolderPreference) -> access$300
    android.widget.ListView access$400(com.ds.avare.utils.FolderPreference) -> access$400
    java.lang.String access$502(com.ds.avare.utils.FolderPreference,java.lang.String) -> access$502
    com.ds.avare.utils.FolderPreference$Item[] access$600(com.ds.avare.utils.FolderPreference) -> access$600
    java.io.File access$700(com.ds.avare.utils.FolderPreference) -> access$700
    java.lang.String access$500(com.ds.avare.utils.FolderPreference) -> access$500
    java.lang.Boolean access$802(com.ds.avare.utils.FolderPreference,java.lang.Boolean) -> access$802
    java.util.ArrayList access$900(com.ds.avare.utils.FolderPreference) -> access$900
    com.ds.avare.utils.FolderPreference$Item[] access$602(com.ds.avare.utils.FolderPreference,com.ds.avare.utils.FolderPreference$Item[]) -> access$602
    java.io.File access$702(com.ds.avare.utils.FolderPreference,java.io.File) -> access$702
com.ds.avare.utils.FolderPreference$1 -> com.ds.avare.utils.FolderPreference$1:
    com.ds.avare.utils.FolderPreference this$0 -> a
    void <init>(com.ds.avare.utils.FolderPreference) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.utils.FolderPreference$2 -> com.ds.avare.utils.FolderPreference$2:
    com.ds.avare.utils.FolderPreference this$0 -> a
    void <init>(com.ds.avare.utils.FolderPreference) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.utils.FolderPreference$3 -> com.ds.avare.utils.FolderPreference$3:
    com.ds.avare.utils.FolderPreference this$0 -> a
    void <init>(com.ds.avare.utils.FolderPreference) -> <init>
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.ds.avare.utils.FolderPreference$4 -> com.ds.avare.utils.FolderPreference$4:
    com.ds.avare.utils.FolderPreference this$0 -> a
    void <init>(com.ds.avare.utils.FolderPreference) -> <init>
    boolean accept(java.io.File,java.lang.String) -> accept
com.ds.avare.utils.FolderPreference$5 -> com.ds.avare.utils.FolderPreference$5:
    com.ds.avare.utils.FolderPreference this$0 -> a
    void <init>(com.ds.avare.utils.FolderPreference,android.content.Context,int,int,com.ds.avare.utils.FolderPreference$Item[]) -> <init>
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.ds.avare.utils.FolderPreference$Item -> com.ds.avare.utils.FolderPreference$Item:
    java.lang.String file -> a
    int icon -> b
    com.ds.avare.utils.FolderPreference this$0 -> c
    void <init>(com.ds.avare.utils.FolderPreference,java.lang.String,java.lang.Integer) -> <init>
    java.lang.String toString() -> toString
com.ds.avare.utils.GenericCallback -> com.ds.avare.utils.GenericCallback:
    void <init>() -> <init>
    java.lang.Object callback(java.lang.Object,java.lang.Object) -> callback
com.ds.avare.utils.Helper -> com.ds.avare.utils.Helper:
    android.text.format.Time fetchRawEte(boolean,double,double,double,double) -> fetchRawEte
    java.lang.String calculateEte(boolean,double,double,double,double) -> calculateEte
    java.lang.String calculateEta(boolean,java.util.TimeZone,double,double,double,double) -> calculateEta
    double truncGeo(double) -> truncGeo
    boolean isSameGPSLocation(double,double,double,double) -> isSameGPSLocation
    void invertCanvasColors(android.graphics.Paint) -> invertCanvasColors
    java.lang.String calculateAltitudeFromThreshold(float) -> calculateAltitudeFromThreshold
    java.lang.String calculateAGLFromThreshold(float,float) -> calculateAGLFromThreshold
    float calculateThreshold(double) -> calculateThreshold
    void setThreshold(android.graphics.Paint,float) -> setThreshold
    double findElevationFromPixel(int) -> findElevationFromPixel
    void restoreCanvasColors(android.graphics.Paint) -> restoreCanvasColors
    boolean isLongitudeSane(double) -> isLongitudeSane
    boolean isLatitudeSane(double) -> isLatitudeSane
    java.lang.String makeLine(double,java.lang.String,java.lang.String,double,double) -> makeLine
    java.lang.String makeLine2(double,java.lang.String,java.lang.String,double,double) -> makeLine2
    java.lang.String correctConvertHeading(long) -> correctConvertHeading
    java.lang.String removeLeadingZeros(java.lang.String) -> removeLeadingZeros
    java.lang.String centerString(java.lang.String,int) -> centerString
    double parseVariation(java.lang.String) -> parseVariation
    void setTheme(android.app.Activity) -> setTheme
    void setOrientationAndOn(android.app.Activity) -> setOrientationAndOn
    void deleteDir(java.io.File) -> deleteDir
    double getMagneticHeading(double,double) -> getMagneticHeading
    java.lang.String incTileName(java.lang.String,int,int) -> incTileName
    java.lang.String readFromFile(java.lang.String) -> readFromFile
    java.util.LinkedList getShapesInTFR(android.content.Context) -> getShapesInTFR
    boolean isFrequencyUHF(double) -> isFrequencyUHF
    float getDpiToPix(android.content.Context) -> getDpiToPix
    double angularDifference(double,double) -> angularDifference
    boolean leftOfCourseLine(double,double) -> leftOfCourseLine
    long getMillisGMT() -> getMillisGMT
    double getSpeedInKnots(double) -> getSpeedInKnots
    android.graphics.Bitmap getResizedBitmap(android.graphics.Bitmap,int,int,double) -> getResizedBitmap
    java.lang.String readFromAssetsFile(java.lang.String,android.content.Context) -> readFromAssetsFile
    boolean writeFile(java.lang.String,java.lang.String) -> writeFile
    java.lang.String formatJsArgs(java.lang.String) -> formatJsArgs
    java.lang.String getWebViewFile(android.content.Context,java.lang.String) -> getWebViewFile
com.ds.avare.utils.InfoLines -> com.ds.avare.utils.InfoLines:
    float mShadowY -> a
    int mDisplayWidth -> b
    int mFieldWidth -> c
    int mCharWidth -> d
    int mDisplayOrientation -> e
    int[] mFieldPosX -> f
    int[][] mFieldLines -> g
    int mRowCount -> h
    float mElev -> i
    float mThreshold -> j
    android.content.Context mContext -> k
    com.ds.avare.storage.Preferences mPref -> l
    com.ds.avare.StorageService mService -> m
    java.lang.String[] mOptionList -> n
    java.lang.String[] mFieldTitles -> o
    float getHeight() -> getHeight
    com.ds.avare.utils.InfoLines$InfoLineFieldLoc findField(android.graphics.Paint,float,float) -> findField
    boolean isShowing(int) -> isShowing
    void setFieldType(com.ds.avare.utils.InfoLines$InfoLineFieldLoc,int) -> setFieldType
    void <init>(com.ds.avare.StorageService) -> <init>
    void touch(com.ds.avare.utils.InfoLines$InfoLineFieldLoc) -> touch
    void longPress(com.ds.avare.utils.InfoLines$InfoLineFieldLoc) -> longPress
    void setRowCount() -> setRowCount
    boolean rangeCheck(com.ds.avare.utils.InfoLines$InfoLineFieldLoc,int) -> rangeCheck
    void drawCornerTextsDynamic(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.String,java.lang.String) -> drawCornerTextsDynamic
    void resizeFields(android.graphics.Paint,int,int) -> resizeFields
    java.lang.String getDisplayFieldValue(int,boolean) -> getDisplayFieldValue
    java.lang.String getFmtString(double) -> getFmtString
    java.lang.String buildConfigString() -> buildConfigString
com.ds.avare.utils.InfoLines$1 -> com.ds.avare.utils.InfoLines$1:
com.ds.avare.utils.InfoLines$InfoLineFieldLoc -> com.ds.avare.utils.InfoLines$InfoLineFieldLoc:
    int mRowIdx -> b
    int mFieldIdx -> c
    java.lang.String[] mOptions -> d
    int mSelected -> e
    com.ds.avare.utils.InfoLines this$0 -> a
    void <init>(com.ds.avare.utils.InfoLines,int,int,java.lang.String[],int) -> <init>
    java.lang.String[] getOptions() -> getOptions
    int getSelected() -> getSelected
    void <init>(com.ds.avare.utils.InfoLines,int,int,java.lang.String[],int,com.ds.avare.utils.InfoLines$1) -> <init>
    java.lang.String[] access$100(com.ds.avare.utils.InfoLines$InfoLineFieldLoc) -> access$100
    int access$200(com.ds.avare.utils.InfoLines$InfoLineFieldLoc) -> access$200
    int access$300(com.ds.avare.utils.InfoLines$InfoLineFieldLoc) -> access$300
com.ds.avare.utils.ListPreferenceWithSummary -> com.ds.avare.utils.ListPreferenceWithSummary:
    java.lang.String originalSummary -> a
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context) -> <init>
    void setValue(java.lang.String) -> setValue
    void setSummary(java.lang.CharSequence) -> setSummary
com.ds.avare.utils.Mutex -> com.ds.avare.utils.Mutex:
    boolean mAvailable -> a
    void <init>() -> <init>
    void unlock() -> unlock
    void lock() -> lock
com.ds.avare.utils.NavComments -> com.ds.avare.utils.NavComments:
    java.lang.String mLeftComment -> a
    java.lang.String mRightComment -> b
    void <init>() -> <init>
    void clear() -> clear
    void setLeft(java.lang.String) -> setLeft
    void setRight(java.lang.String) -> setRight
    void draw(android.view.View,android.graphics.Canvas,android.graphics.Paint,com.ds.avare.utils.ShadowedText) -> draw
com.ds.avare.utils.NetworkHelper -> com.ds.avare.utils.NetworkHelper:
    java.lang.String getNAMMET(java.lang.String) -> getNAMMET
    java.lang.String getMETARPlan(java.lang.String,java.lang.String) -> getMETARPlan
    java.lang.String getTAFPlan(java.lang.String,java.lang.String) -> getTAFPlan
    java.lang.String getPIREPSPlan(java.lang.String,java.lang.String) -> getPIREPSPlan
    java.lang.String getHelpUrl(android.content.Context) -> getHelpUrl
    java.lang.String getUrl(java.lang.String,java.lang.String,java.lang.String) -> getUrl
    int getFirstDate(int) -> getFirstDate
    java.lang.String getCycle() -> getCycle
    boolean isExpired(java.lang.String) -> isExpired
    java.lang.String getVersion(java.lang.String,java.lang.String,boolean[]) -> getVersion
    java.lang.String getVersionNetwork(java.lang.String) -> getVersionNetwork
    java.lang.String getVersionRange(java.lang.String) -> getVersionRange
    java.lang.String findCycleOffset(java.lang.String,int) -> findCycleOffset
com.ds.avare.utils.PossibleEmail -> com.ds.avare.utils.PossibleEmail:
    java.lang.String[] getAll(android.content.Context) -> getAll
    java.lang.String get(android.content.Context) -> get
com.ds.avare.utils.RegisterActivityPreference -> com.ds.avare.utils.RegisterActivityPreference:
    android.content.Context mContext -> a
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onDialogClosed(boolean) -> onDialogClosed
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.utils.SAXXMLHandlerMETAR -> com.ds.avare.utils.SAXXMLHandlerMETAR:
    java.util.List mText -> a
    java.lang.String mTempText -> b
    java.lang.String mTempCategory -> c
    java.lang.String mTempVal -> d
    void <init>() -> <init>
    java.util.List getText() -> getText
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void characters(char[],int,int) -> characters
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
com.ds.avare.utils.SAXXMLHandlerPIREP -> com.ds.avare.utils.SAXXMLHandlerPIREP:
    java.util.List mText -> a
    java.lang.String mTempText -> b
    java.lang.String mTempVal -> c
    java.lang.String mTempType -> d
    void <init>() -> <init>
    java.util.List getText() -> getText
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void characters(char[],int,int) -> characters
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
com.ds.avare.utils.SAXXMLHandlerTAF -> com.ds.avare.utils.SAXXMLHandlerTAF:
    java.util.List mText -> a
    java.lang.String mTempText -> b
    java.lang.String mTempVal -> c
    void <init>() -> <init>
    java.util.List getText() -> getText
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void characters(char[],int,int) -> characters
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
com.ds.avare.utils.ShadowedText -> com.ds.avare.utils.ShadowedText:
    android.graphics.Rect mTextSize -> a
    android.graphics.RectF mShadowBox -> b
    android.graphics.Paint mShadowPaint -> c
    float mDipToPix -> d
    int XMARGIN -> e
    int YMARGIN -> f
    int SHADOWRECTRADIUS -> g
    void <init>(android.content.Context) -> <init>
    void draw(android.graphics.Canvas,android.graphics.Paint,java.lang.String,int,float,float) -> draw
    void draw(android.graphics.Canvas,android.graphics.Paint,java.lang.String,int,int,float,float) -> draw
com.ds.avare.utils.TwilightCalculator -> com.ds.avare.utils.TwilightCalculator:
    long mSunset -> b
    long mSunrise -> c
    int mState -> a
    void <init>() -> <init>
    java.lang.String getSunrise() -> getSunrise
    java.lang.String getSunset() -> getSunset
    void calculateTwilight(double,double) -> calculateTwilight
com.ds.avare.utils.VerticalSeekBar -> com.ds.avare.utils.VerticalSeekBar:
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onMeasure(int,int) -> onMeasure
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.ds.avare.utils.WeatherHelper -> com.ds.avare.utils.WeatherHelper:
    int metarColor(java.lang.String) -> metarColor
    java.lang.String metarColorString(java.lang.String) -> metarColorString
    java.lang.String formatWeather(java.lang.String) -> formatWeather
    java.lang.String formatWeatherHTML(java.lang.String,boolean) -> formatWeatherHTML
    java.lang.String formatTafHTML(java.lang.String,boolean) -> formatTafHTML
    java.lang.String formatMetarHTML(java.lang.String,boolean) -> formatMetarHTML
    java.lang.String formatWindsHTML(java.lang.String,boolean) -> formatWindsHTML
    java.lang.String formatPirepHTML(java.lang.String,boolean) -> formatPirepHTML
    java.lang.String formatVisibilityHTML(java.lang.String) -> formatVisibilityHTML
    java.lang.String decodeWind(java.lang.String) -> decodeWind
    java.lang.String getNamMosLegend() -> getNamMosLegend
    java.lang.String getMetarTime(java.lang.String) -> getMetarTime
    java.lang.String getDensityAltitude(java.lang.String,java.lang.String) -> getDensityAltitude
    java.lang.String getBestRunway(java.lang.String,java.util.LinkedList) -> getBestRunway
com.ds.avare.views.AfdView -> com.ds.avare.views.AfdView:
    com.ds.avare.position.Scale mScale -> a
    com.ds.avare.position.Pan mPan -> b
    android.graphics.Paint mPaint -> c
    com.ds.avare.touch.MultiTouchController mMultiTouchC -> d
    com.ds.avare.touch.MultiTouchController$PointInfo mCurrTouchPoint -> e
    android.view.GestureDetector mGestureDetector -> f
    com.ds.avare.utils.BitmapHolder mBitmap -> g
    com.ds.avare.storage.Preferences mPref -> h
    void setup(android.content.Context) -> setup
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void setBitmap(com.ds.avare.utils.BitmapHolder) -> setBitmap
    java.lang.Object getDraggableObjectAtPoint(com.ds.avare.touch.MultiTouchController$PointInfo) -> getDraggableObjectAtPoint
    void getPositionAndScale(java.lang.Object,com.ds.avare.touch.MultiTouchController$PositionAndScale) -> getPositionAndScale
    void selectObject(java.lang.Object,com.ds.avare.touch.MultiTouchController$PointInfo) -> selectObject
    boolean setPositionAndScale(java.lang.Object,com.ds.avare.touch.MultiTouchController$PositionAndScale,com.ds.avare.touch.MultiTouchController$PointInfo) -> setPositionAndScale
    void touchPointChanged(com.ds.avare.touch.MultiTouchController$PointInfo) -> touchPointChanged
    void center() -> center
    void onDraw(android.graphics.Canvas) -> onDraw
com.ds.avare.views.AfdView$1 -> com.ds.avare.views.AfdView$1:
com.ds.avare.views.AfdView$GestureListener -> com.ds.avare.views.AfdView$GestureListener:
    com.ds.avare.views.AfdView this$0 -> a
    void <init>(com.ds.avare.views.AfdView) -> <init>
    void onLongPress(android.view.MotionEvent) -> onLongPress
    void <init>(com.ds.avare.views.AfdView,com.ds.avare.views.AfdView$1) -> <init>
com.ds.avare.views.LocationView -> com.ds.avare.views.LocationView:
    android.graphics.Paint mPaint -> e
    com.ds.avare.gps.GpsParams mGpsParams -> f
    com.ds.avare.utils.BitmapHolder mAirplaneBitmap -> g
    com.ds.avare.utils.BitmapHolder mRunwayBitmap -> h
    com.ds.avare.utils.BitmapHolder mLineBitmap -> i
    com.ds.avare.utils.BitmapHolder mObstacleBitmap -> j
    com.ds.avare.utils.BitmapHolder mLineHeadingBitmap -> k
    com.ds.avare.touch.MultiTouchController mMultiTouchC -> l
    com.ds.avare.touch.MultiTouchController$PointInfo mCurrTouchPoint -> m
    android.view.GestureDetector mGestureDetector -> n
    android.content.Context mContext -> o
    com.ds.avare.position.Movement mMovement -> p
    java.lang.String mErrorStatus -> q
    com.ds.avare.views.LocationView$TileDrawTask mTileDrawTask -> r
    java.lang.Thread mTileDrawThread -> s
    com.ds.avare.views.LocationView$ElevationTask mElevationTask -> t
    java.lang.Thread mElevationThread -> u
    long mElevationLastRun -> v
    com.ds.avare.views.LocationView$ClosestAirportTask mClosestTask -> w
    com.ds.avare.StorageService mService -> x
    com.ds.avare.position.Pan mPan -> y
    com.ds.avare.storage.DataSource mImageDataSource -> z
    com.ds.avare.touch.GestureInterface mGestureCallBack -> A
    com.ds.avare.position.Scale mScale -> B
    com.ds.avare.storage.Preferences mPref -> C
    android.text.TextPaint mTextPaint -> D
    android.graphics.Typeface mFace -> E
    java.lang.String mOnChart -> F
    com.ds.avare.position.Origin mOrigin -> G
    com.ds.avare.position.Projection mPointProjection -> H
    java.util.LinkedList mObstacles -> I
    boolean mDraw -> J
    boolean mTrackUp -> K
    int mMacro -> L
    float mPx -> M
    float mPy -> N
    int mDragPlanPoint -> O
    float mDragStartedX -> P
    float mDragStartedY -> Q
    android.graphics.Paint mRunwayPaint -> R
    android.graphics.Paint mMsgPaint -> S
    float mDipToPix -> T
    android.graphics.Point mDownFocusPoint -> a
    int mTouchSlopSquare -> b
    boolean mDoCallbackWhenDone -> c
    com.ds.avare.touch.LongTouchDestination mLongTouchDestination -> d
    android.os.Handler mHandler -> U
    void setup(android.content.Context) -> setup
    void updateCoordinates() -> updateCoordinates
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void onDraw(android.graphics.Canvas) -> onDraw
    void rubberBand(float,float,boolean) -> rubberBand
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    android.graphics.Point getFocusPoint(android.view.MotionEvent) -> getFocusPoint
    java.lang.Object getDraggableObjectAtPoint(com.ds.avare.touch.MultiTouchController$PointInfo) -> getDraggableObjectAtPoint
    void getPositionAndScale(java.lang.Object,com.ds.avare.touch.MultiTouchController$PositionAndScale) -> getPositionAndScale
    void selectObject(java.lang.Object,com.ds.avare.touch.MultiTouchController$PointInfo) -> selectObject
    boolean setPositionAndScale(java.lang.Object,com.ds.avare.touch.MultiTouchController$PositionAndScale,com.ds.avare.touch.MultiTouchController$PointInfo) -> setPositionAndScale
    void touchPointChanged(com.ds.avare.touch.MultiTouchController$PointInfo) -> touchPointChanged
    void dbquery(boolean) -> dbquery
    void rotateBitmapIntoPlace(com.ds.avare.utils.BitmapHolder,float,double,double,boolean) -> rotateBitmapIntoPlace
    void drawTiles(android.graphics.Canvas) -> drawTiles
    void drawTFR(android.graphics.Canvas) -> drawTFR
    void drawAirSigMet(android.graphics.Canvas) -> drawAirSigMet
    void drawRadar(android.graphics.Canvas) -> drawRadar
    void drawNexrad(android.graphics.Canvas) -> drawNexrad
    void drawTraffic(android.graphics.Canvas) -> drawTraffic
    void drawTrack(android.graphics.Canvas) -> drawTrack
    void drawDrawing(android.graphics.Canvas) -> drawDrawing
    void drawObstacles(android.graphics.Canvas) -> drawObstacles
    void drawAircraft(android.graphics.Canvas) -> drawAircraft
    void drawRunways(android.graphics.Canvas) -> drawRunways
    void drawDistanceRings(android.graphics.Canvas) -> drawDistanceRings
    void drawTracks(android.graphics.Canvas) -> drawTracks
    void drawCDI(android.graphics.Canvas) -> drawCDI
    void drawVASI(android.graphics.Canvas) -> drawVASI
    void drawEdgeMarkers(android.graphics.Canvas) -> drawEdgeMarkers
    void drawUserDefinedWaypoints(android.graphics.Canvas) -> drawUserDefinedWaypoints
    void drawCapGrids(android.graphics.Canvas) -> drawCapGrids
    void drawStatusLines(android.graphics.Canvas) -> drawStatusLines
    void drawNavComments(android.graphics.Canvas) -> drawNavComments
    void drawMap(android.graphics.Canvas) -> drawMap
    void updateThreshold(float) -> updateThreshold
    void updateDestination() -> updateDestination
    void forceReload() -> forceReload
    void updateParams(com.ds.avare.gps.GpsParams) -> updateParams
    void initParams(com.ds.avare.gps.GpsParams,com.ds.avare.StorageService) -> initParams
    void updateErrorStatus(java.lang.String) -> updateErrorStatus
    void center() -> center
    void startClosestAirportTask(double,double) -> startClosestAirportTask
    void setGestureCallback(com.ds.avare.touch.GestureInterface) -> setGestureCallback
    void setDraw(boolean) -> setDraw
    boolean getDraw() -> getDraw
    void setTrackUp(boolean) -> setTrackUp
    java.lang.String getPriorityMessage() -> getPriorityMessage
    void cleanup() -> cleanup
    void zoomOut() -> zoomOut
    com.ds.avare.StorageService access$300(com.ds.avare.views.LocationView) -> access$300
    com.ds.avare.storage.DataSource access$400(com.ds.avare.views.LocationView) -> access$400
    com.ds.avare.position.Scale access$500(com.ds.avare.views.LocationView) -> access$500
    int access$600(com.ds.avare.views.LocationView) -> access$600
    com.ds.avare.position.Pan access$700(com.ds.avare.views.LocationView) -> access$700
    android.os.Handler access$1500(com.ds.avare.views.LocationView) -> access$1500
    com.ds.avare.storage.Preferences access$1600(com.ds.avare.views.LocationView) -> access$1600
    android.content.Context access$1700(com.ds.avare.views.LocationView) -> access$1700
    com.ds.avare.position.Projection access$1802(com.ds.avare.views.LocationView,com.ds.avare.position.Projection) -> access$1802
    com.ds.avare.gps.GpsParams access$1900(com.ds.avare.views.LocationView) -> access$1900
    com.ds.avare.touch.GestureInterface access$2000(com.ds.avare.views.LocationView) -> access$2000
    com.ds.avare.position.Projection access$1800(com.ds.avare.views.LocationView) -> access$1800
    android.graphics.Paint access$2400(com.ds.avare.views.LocationView) -> access$2400
    boolean access$2500(com.ds.avare.views.LocationView) -> access$2500
    java.lang.String access$2702(com.ds.avare.views.LocationView,java.lang.String) -> access$2702
    com.ds.avare.position.Movement access$2802(com.ds.avare.views.LocationView,com.ds.avare.position.Movement) -> access$2802
    com.ds.avare.position.Movement access$2800(com.ds.avare.views.LocationView) -> access$2800
    int access$602(com.ds.avare.views.LocationView,int) -> access$602
    com.ds.avare.touch.MultiTouchController access$2900(com.ds.avare.views.LocationView) -> access$2900
    float access$3002(com.ds.avare.views.LocationView,float) -> access$3002
    float access$3102(com.ds.avare.views.LocationView,float) -> access$3102
    void access$3200(com.ds.avare.views.LocationView) -> access$3200
    java.util.LinkedList access$3302(com.ds.avare.views.LocationView,java.util.LinkedList) -> access$3302
com.ds.avare.views.LocationView$1 -> com.ds.avare.views.LocationView$1:
    com.ds.avare.views.LocationView this$0 -> a
    void <init>(com.ds.avare.views.LocationView) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.ds.avare.views.LocationView$ClosestAirportTask -> com.ds.avare.views.LocationView$ClosestAirportTask:
    java.lang.Double lon -> b
    java.lang.Double lat -> c
    java.lang.String text -> d
    java.lang.String textMets -> e
    java.lang.String sua -> f
    java.lang.String radar -> g
    java.util.LinkedList aireps -> h
    java.util.LinkedList freq -> i
    java.util.LinkedList runways -> j
    com.ds.avare.weather.Taf taf -> k
    com.ds.avare.weather.WindsAloft wa -> l
    com.ds.avare.weather.Metar metar -> m
    java.lang.String elev -> n
    java.lang.String fuel -> o
    java.lang.String ratings -> p
    com.ds.avare.views.LocationView this$0 -> a
    void <init>(com.ds.avare.views.LocationView) -> <init>
    java.lang.String doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.String) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void <init>(com.ds.avare.views.LocationView,com.ds.avare.views.LocationView$1) -> <init>
com.ds.avare.views.LocationView$ElevationTask -> com.ds.avare.views.LocationView$ElevationTask:
    boolean running -> a
    boolean runAgain -> f
    double lon -> b
    double lat -> c
    double alt -> d
    com.ds.avare.views.LocationView this$0 -> e
    void <init>(com.ds.avare.views.LocationView) -> <init>
    void run() -> run
    void <init>(com.ds.avare.views.LocationView,com.ds.avare.views.LocationView$1) -> <init>
com.ds.avare.views.LocationView$ElevationUpdate -> com.ds.avare.views.LocationView$ElevationUpdate:
    java.util.LinkedList obs -> b
    double elev -> c
    com.ds.avare.views.LocationView this$0 -> a
    void <init>(com.ds.avare.views.LocationView) -> <init>
    void <init>(com.ds.avare.views.LocationView,com.ds.avare.views.LocationView$1) -> <init>
    double access$2202(com.ds.avare.views.LocationView$ElevationUpdate,double) -> access$2202
    java.util.LinkedList access$2302(com.ds.avare.views.LocationView$ElevationUpdate,java.util.LinkedList) -> access$2302
    double access$2200(com.ds.avare.views.LocationView$ElevationUpdate) -> access$2200
    java.util.LinkedList access$2300(com.ds.avare.views.LocationView$ElevationUpdate) -> access$2300
com.ds.avare.views.LocationView$GestureListener -> com.ds.avare.views.LocationView$GestureListener:
    com.ds.avare.views.LocationView this$0 -> a
    void <init>(com.ds.avare.views.LocationView) -> <init>
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    void onLongPress(android.view.MotionEvent) -> onLongPress
    void <init>(com.ds.avare.views.LocationView,com.ds.avare.views.LocationView$1) -> <init>
com.ds.avare.views.LocationView$TileDrawTask -> com.ds.avare.views.LocationView$TileDrawTask:
    double[] offsets -> e
    double[] p -> f
    double lon -> a
    double lat -> b
    int movex -> g
    int movey -> h
    java.lang.String[] tileNames -> i
    com.ds.avare.shapes.Tile centerTile -> j
    com.ds.avare.shapes.Tile gpsTile -> k
    boolean running -> c
    boolean runAgain -> l
    com.ds.avare.views.LocationView this$0 -> d
    void <init>(com.ds.avare.views.LocationView) -> <init>
    void run() -> run
    void <init>(com.ds.avare.views.LocationView,com.ds.avare.views.LocationView$1) -> <init>
com.ds.avare.views.LocationView$TileUpdate -> com.ds.avare.views.LocationView$TileUpdate:
    double[] offsets -> b
    double[] p -> c
    int movex -> d
    int movey -> e
    float factor -> f
    com.ds.avare.shapes.Tile centerTile -> g
    com.ds.avare.views.LocationView this$0 -> a
    void <init>(com.ds.avare.views.LocationView) -> <init>
    void <init>(com.ds.avare.views.LocationView,com.ds.avare.views.LocationView$1) -> <init>
    int access$902(com.ds.avare.views.LocationView$TileUpdate,int) -> access$902
    int access$1002(com.ds.avare.views.LocationView$TileUpdate,int) -> access$1002
    com.ds.avare.shapes.Tile access$1102(com.ds.avare.views.LocationView$TileUpdate,com.ds.avare.shapes.Tile) -> access$1102
    double[] access$1202(com.ds.avare.views.LocationView$TileUpdate,double[]) -> access$1202
    double[] access$1302(com.ds.avare.views.LocationView$TileUpdate,double[]) -> access$1302
    float access$1402(com.ds.avare.views.LocationView$TileUpdate,float) -> access$1402
    float access$1400(com.ds.avare.views.LocationView$TileUpdate) -> access$1400
    com.ds.avare.shapes.Tile access$1100(com.ds.avare.views.LocationView$TileUpdate) -> access$1100
    int access$900(com.ds.avare.views.LocationView$TileUpdate) -> access$900
    int access$1000(com.ds.avare.views.LocationView$TileUpdate) -> access$1000
    double[] access$1200(com.ds.avare.views.LocationView$TileUpdate) -> access$1200
    double[] access$1300(com.ds.avare.views.LocationView$TileUpdate) -> access$1300
com.ds.avare.views.MemView -> com.ds.avare.views.MemView:
    android.graphics.Paint mPaint -> a
    android.content.Context mContext -> b
    float mFraction -> c
    void setup(android.content.Context) -> setup
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void updateMemStatus(float) -> updateMemStatus
    void onDraw(android.graphics.Canvas) -> onDraw
com.ds.avare.views.PlatesTagView -> com.ds.avare.views.PlatesTagView:
    com.ds.avare.position.Pan mPan -> a
    android.graphics.Paint mPaint -> b
    com.ds.avare.touch.MultiTouchController mMultiTouchC -> c
    com.ds.avare.touch.MultiTouchController$PointInfo mCurrTouchPoint -> d
    com.ds.avare.utils.BitmapHolder mBitmap -> e
    com.ds.avare.position.Scale mScale -> f
    int mX -> g
    int mY -> h
    float mAirportX -> i
    float mAirportY -> j
    java.lang.String mAirportName -> k
    void setup(android.content.Context) -> setup
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void setBitmap(com.ds.avare.utils.BitmapHolder) -> setBitmap
    java.lang.Object getDraggableObjectAtPoint(com.ds.avare.touch.MultiTouchController$PointInfo) -> getDraggableObjectAtPoint
    void getPositionAndScale(java.lang.Object,com.ds.avare.touch.MultiTouchController$PositionAndScale) -> getPositionAndScale
    void selectObject(java.lang.Object,com.ds.avare.touch.MultiTouchController$PointInfo) -> selectObject
    boolean setPositionAndScale(java.lang.Object,com.ds.avare.touch.MultiTouchController$PositionAndScale,com.ds.avare.touch.MultiTouchController$PointInfo) -> setPositionAndScale
    void touchPointChanged(com.ds.avare.touch.MultiTouchController$PointInfo) -> touchPointChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    void verify(double,double) -> verify
    int getx() -> getx
    int gety() -> gety
    void setAirport(java.lang.String,float,float) -> setAirport
    void unsetAirport() -> unsetAirport
com.ds.avare.views.PlatesView -> com.ds.avare.views.PlatesView:
    com.ds.avare.position.Scale mScale -> a
    com.ds.avare.position.Pan mPan -> b
    android.graphics.Paint mPaint -> c
    com.ds.avare.touch.MultiTouchController mMultiTouchC -> d
    com.ds.avare.touch.MultiTouchController$PointInfo mCurrTouchPoint -> e
    android.view.GestureDetector mGestureDetector -> f
    com.ds.avare.utils.BitmapHolder mBitmap -> g
    com.ds.avare.gps.GpsParams mGpsParams -> h
    java.lang.String mErrorStatus -> i
    com.ds.avare.storage.Preferences mPref -> j
    com.ds.avare.utils.BitmapHolder mAirplaneBitmap -> k
    float[] mMatrix -> l
    boolean mShowingAD -> m
    com.ds.avare.StorageService mService -> n
    double mAirportLon -> o
    double mAirportLat -> p
    boolean mDraw -> q
    float mDipToPix -> r
    void setup(android.content.Context) -> setup
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void updateParams(com.ds.avare.gps.GpsParams) -> updateParams
    void updateErrorStatus(java.lang.String) -> updateErrorStatus
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void setBitmap(com.ds.avare.utils.BitmapHolder) -> setBitmap
    java.lang.Object getDraggableObjectAtPoint(com.ds.avare.touch.MultiTouchController$PointInfo) -> getDraggableObjectAtPoint
    void getPositionAndScale(java.lang.Object,com.ds.avare.touch.MultiTouchController$PositionAndScale) -> getPositionAndScale
    void selectObject(java.lang.Object,com.ds.avare.touch.MultiTouchController$PointInfo) -> selectObject
    boolean setPositionAndScale(java.lang.Object,com.ds.avare.touch.MultiTouchController$PositionAndScale,com.ds.avare.touch.MultiTouchController$PointInfo) -> setPositionAndScale
    void drawDrawing(android.graphics.Canvas) -> drawDrawing
    void setParams(float[],boolean) -> setParams
    void touchPointChanged(com.ds.avare.touch.MultiTouchController$PointInfo) -> touchPointChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    void setService(com.ds.avare.StorageService) -> setService
    void center() -> center
    void setDraw(boolean) -> setDraw
    boolean getDraw() -> getDraw
    void setAirport(java.lang.String,double,double) -> setAirport
    void adjustZoom(double) -> adjustZoom
    com.ds.avare.StorageService access$100(com.ds.avare.views.PlatesView) -> access$100
com.ds.avare.views.PlatesView$1 -> com.ds.avare.views.PlatesView$1:
com.ds.avare.views.PlatesView$GestureListener -> com.ds.avare.views.PlatesView$GestureListener:
    com.ds.avare.views.PlatesView this$0 -> a
    void <init>(com.ds.avare.views.PlatesView) -> <init>
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onDown(android.view.MotionEvent) -> onDown
    void <init>(com.ds.avare.views.PlatesView,com.ds.avare.views.PlatesView$1) -> <init>
com.ds.avare.views.SatelliteView -> com.ds.avare.views.SatelliteView:
    android.location.GpsStatus mGpsStatus -> a
    android.graphics.Paint mPaint -> b
    float min -> c
    android.content.Context mContext -> d
    float mDipToPix -> e
    void setup(android.content.Context) -> setup
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void updateGpsStatus(android.location.GpsStatus) -> updateGpsStatus
    void onDraw(android.graphics.Canvas) -> onDraw
com.ds.avare.weather.AdsbWeatherCache -> com.ds.avare.weather.AdsbWeatherCache:
    java.util.HashMap mTaf -> a
    java.util.HashMap mMetar -> b
    java.util.HashMap mAirep -> c
    java.util.HashMap mWinds -> d
    com.ds.avare.adsb.NexradImage mNexrad -> e
    com.ds.avare.adsb.NexradImageConus mNexradConus -> f
    com.ds.avare.storage.Preferences mPref -> g
    void <init>(android.content.Context) -> <init>
    com.ds.avare.adsb.NexradImage getNexrad() -> getNexrad
    com.ds.avare.adsb.NexradImageConus getNexradConus() -> getNexradConus
    void putMetar(long,java.lang.String,java.lang.String) -> putMetar
    void putTaf(long,java.lang.String,java.lang.String) -> putTaf
    void putAirep(long,java.lang.String,java.lang.String,com.ds.avare.storage.DataSource) -> putAirep
    void putWinds(long,java.lang.String,java.lang.String) -> putWinds
    void putImg(long,int,int[],boolean,int[],int,int) -> putImg
    com.ds.avare.weather.Taf getTaf(java.lang.String) -> getTaf
    com.ds.avare.weather.Metar getMETAR(java.lang.String) -> getMETAR
    java.util.LinkedList getAireps(double,double) -> getAireps
    com.ds.avare.weather.WindsAloft getWindsAloft(double,double) -> getWindsAloft
    void sweep() -> sweep
com.ds.avare.weather.AirSigMet -> com.ds.avare.weather.AirSigMet:
    java.lang.String rawText -> a
    java.lang.String timeFrom -> b
    java.lang.String timeTo -> c
    java.lang.String points -> d
    java.lang.String minFt -> e
    java.lang.String maxFt -> f
    java.lang.String movementDeg -> g
    java.lang.String movementKt -> h
    java.lang.String hazard -> i
    java.lang.String severity -> j
    java.lang.String reportType -> k
    com.ds.avare.shapes.MetShape shape -> l
    void <init>() -> <init>
com.ds.avare.weather.Airep -> com.ds.avare.weather.Airep:
    java.lang.String time -> a
    java.lang.String reportType -> b
    java.lang.String rawText -> c
    float lon -> d
    float lat -> e
    long timestamp -> f
    void <init>() -> <init>
    void <init>(com.ds.avare.weather.Airep) -> <init>
    void updateTextWithLocation(double,double,double) -> updateTextWithLocation
com.ds.avare.weather.InternetWeatherCache -> com.ds.avare.weather.InternetWeatherCache:
    com.ds.avare.weather.InternetWeatherCache$WeatherTask mWeatherTask -> a
    java.lang.Thread mWeatherThread -> b
    java.util.LinkedList mAirSig -> c
    com.ds.avare.StorageService mService -> d
    void <init>() -> <init>
    void parse(com.ds.avare.StorageService) -> parse
    java.util.LinkedList getAirSigMet() -> getAirSigMet
    java.util.LinkedList access$102(com.ds.avare.weather.InternetWeatherCache,java.util.LinkedList) -> access$102
    com.ds.avare.StorageService access$200(com.ds.avare.weather.InternetWeatherCache) -> access$200
    java.util.LinkedList access$100(com.ds.avare.weather.InternetWeatherCache) -> access$100
com.ds.avare.weather.InternetWeatherCache$1 -> com.ds.avare.weather.InternetWeatherCache$1:
com.ds.avare.weather.InternetWeatherCache$WeatherTask -> com.ds.avare.weather.InternetWeatherCache$WeatherTask:
    com.ds.avare.weather.InternetWeatherCache this$0 -> a
    void <init>(com.ds.avare.weather.InternetWeatherCache) -> <init>
    void run() -> run
    void <init>(com.ds.avare.weather.InternetWeatherCache,com.ds.avare.weather.InternetWeatherCache$1) -> <init>
com.ds.avare.weather.Metar -> com.ds.avare.weather.Metar:
    java.lang.String rawText -> a
    java.lang.String stationId -> b
    java.lang.String time -> c
    java.lang.String flightCategory -> d
    long timestamp -> e
    void <init>() -> <init>
com.ds.avare.weather.Stations -> com.ds.avare.weather.Stations:
    java.lang.String[] mStations -> a
    boolean getStationLocation(java.lang.String,float[]) -> getStationLocation
    void <clinit>() -> <clinit>
com.ds.avare.weather.Taf -> com.ds.avare.weather.Taf:
    java.lang.String rawText -> a
    java.lang.String stationId -> b
    java.lang.String time -> c
    long timestamp -> d
    void <init>() -> <init>
com.ds.avare.weather.WindsAloft -> com.ds.avare.weather.WindsAloft:
    java.lang.String time -> a
    java.lang.String station -> b
    java.lang.String w3k -> c
    java.lang.String w6k -> d
    java.lang.String w9k -> e
    java.lang.String w12k -> f
    java.lang.String w18k -> g
    java.lang.String w24k -> h
    java.lang.String w30k -> i
    java.lang.String w34k -> j
    java.lang.String w39k -> k
    float lon -> l
    float lat -> m
    long timestamp -> n
    void <init>() -> <init>
    void <init>(com.ds.avare.weather.WindsAloft) -> <init>
    void updateStationWithLocation(double,double,double) -> updateStationWithLocation
com.ds.avare.webinfc.WebAppInterface -> com.ds.avare.webinfc.WebAppInterface:
    android.content.Context mContext -> a
    com.ds.avare.StorageService mService -> b
    android.webkit.WebView mWebView -> c
    com.ds.avare.storage.Preferences mPref -> d
    com.ds.avare.plan.LmfsPlanList mFaaPlans -> e
    com.ds.avare.utils.GenericCallback mCallback -> f
    android.os.Handler mHandler -> g
    void <init>(android.content.Context,android.webkit.WebView,com.ds.avare.utils.GenericCallback) -> <init>
    void connect(com.ds.avare.StorageService) -> connect
    void setEmail() -> setEmail
    com.ds.avare.utils.GenericCallback access$000(com.ds.avare.webinfc.WebAppInterface) -> access$000
    android.webkit.WebView access$100(com.ds.avare.webinfc.WebAppInterface) -> access$100
    com.ds.avare.plan.LmfsPlanList access$200(com.ds.avare.webinfc.WebAppInterface) -> access$200
    android.content.Context access$300(com.ds.avare.webinfc.WebAppInterface) -> access$300
com.ds.avare.webinfc.WebAppInterface$1 -> com.ds.avare.webinfc.WebAppInterface$1:
    com.ds.avare.webinfc.WebAppInterface this$0 -> a
    void <init>(com.ds.avare.webinfc.WebAppInterface) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.ds.avare.webinfc.WebAppListInterface -> com.ds.avare.webinfc.WebAppListInterface:
    com.ds.avare.StorageService mService -> a
    com.ds.avare.storage.Preferences mPref -> b
    android.webkit.WebView mWebView -> c
    com.ds.avare.utils.GenericCallback mCallback -> d
    android.os.Handler mHandler -> e
    void <init>(android.content.Context,android.webkit.WebView,com.ds.avare.utils.GenericCallback) -> <init>
    void connect(com.ds.avare.StorageService) -> connect
    void clearList() -> clearList
    void clearListSave() -> clearListSave
    void addItemToList(java.lang.String) -> addItemToList
    void newSaveList() -> newSaveList
    void newList() -> newList
    void updateList() -> updateList
    void moveBack() -> moveBack
    void moveForward() -> moveForward
    com.ds.avare.StorageService access$200(com.ds.avare.webinfc.WebAppListInterface) -> access$200
    android.webkit.WebView access$300(com.ds.avare.webinfc.WebAppListInterface) -> access$300
    com.ds.avare.utils.GenericCallback access$400(com.ds.avare.webinfc.WebAppListInterface) -> access$400
com.ds.avare.webinfc.WebAppListInterface$1 -> com.ds.avare.webinfc.WebAppListInterface$1:
    com.ds.avare.webinfc.WebAppListInterface this$0 -> a
    void <init>(com.ds.avare.webinfc.WebAppListInterface) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.ds.avare.webinfc.WebAppPlanInterface -> com.ds.avare.webinfc.WebAppPlanInterface:
    com.ds.avare.StorageService mService -> a
    com.ds.avare.storage.Preferences mPref -> b
    android.webkit.WebView mWebView -> c
    com.ds.avare.webinfc.WebAppPlanInterface$WeatherTask mWeatherTask -> d
    java.lang.Thread mWeatherThread -> e
    java.util.LinkedHashMap mSavedPlans -> f
    com.ds.avare.utils.GenericCallback mCallback -> g
    android.content.Context mContext -> h
    int mPlanIdx -> i
    int mPlanCnt -> j
    java.lang.String mPlanFilter -> k
    int mFilteredSize -> l
    android.os.Handler mHandler -> m
    void <init>(android.content.Context,android.webkit.WebView,com.ds.avare.utils.GenericCallback) -> <init>
    void connect(com.ds.avare.StorageService) -> connect
    void timer() -> timer
    void clearPlan() -> clearPlan
    void clearPlanSave() -> clearPlanSave
    void addWaypointToPlan(java.lang.String,java.lang.String,java.lang.String) -> addWaypointToPlan
    void newSavePlan() -> newSavePlan
    java.util.ArrayList getPlanNames(int) -> getPlanNames
    void newPlan() -> newPlan
    boolean isSame(android.location.Location,android.location.Location) -> isSame
    void update(java.util.Observable,java.lang.Object) -> update
    void activateToggle() -> activateToggle
    void moveBack() -> moveBack
    void moveForward() -> moveForward
    void setFilteredSize() -> setFilteredSize
    boolean containsIgnoreCase(java.lang.String,java.lang.String) -> containsIgnoreCase
    java.lang.String getWeatherStoreFileName() -> getWeatherStoreFileName
    void cleanup() -> cleanup
    com.ds.avare.StorageService access$600(com.ds.avare.webinfc.WebAppPlanInterface) -> access$600
    android.os.Handler access$700(com.ds.avare.webinfc.WebAppPlanInterface) -> access$700
    com.ds.avare.storage.Preferences access$800(com.ds.avare.webinfc.WebAppPlanInterface) -> access$800
    android.webkit.WebView access$900(com.ds.avare.webinfc.WebAppPlanInterface) -> access$900
    com.ds.avare.utils.GenericCallback access$1000(com.ds.avare.webinfc.WebAppPlanInterface) -> access$1000
    android.content.Context access$1100(com.ds.avare.webinfc.WebAppPlanInterface) -> access$1100
    java.lang.String access$1300(com.ds.avare.webinfc.WebAppPlanInterface) -> access$1300
com.ds.avare.webinfc.WebAppPlanInterface$1 -> com.ds.avare.webinfc.WebAppPlanInterface$1:
    com.ds.avare.webinfc.WebAppPlanInterface this$0 -> a
    void <init>(com.ds.avare.webinfc.WebAppPlanInterface) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.ds.avare.webinfc.WebAppPlanInterface$WeatherTask -> com.ds.avare.webinfc.WebAppPlanInterface$WeatherTask:
    boolean running -> b
    com.ds.avare.webinfc.WebAppPlanInterface this$0 -> a
    void run() -> run
    boolean access$100(com.ds.avare.webinfc.WebAppPlanInterface$WeatherTask) -> access$100
    boolean access$102(com.ds.avare.webinfc.WebAppPlanInterface$WeatherTask,boolean) -> access$102
com.sromku.polygon.Line -> com.sromku.polygon.Line:
    com.sromku.polygon.Point _start -> a
    com.sromku.polygon.Point _end -> b
    float _a -> c
    float _b -> d
    boolean _vertical -> e
    void <init>(com.sromku.polygon.Point,com.sromku.polygon.Point) -> <init>
    boolean isInside(com.sromku.polygon.Point) -> isInside
    boolean isVertical() -> isVertical
    float getA() -> getA
    float getB() -> getB
    com.sromku.polygon.Point getStart() -> getStart
    java.lang.String toString() -> toString
com.sromku.polygon.Point -> com.sromku.polygon.Point:
    float x -> a
    float y -> b
    void <init>(float,float) -> <init>
    java.lang.String toString() -> toString
com.sromku.polygon.Polygon -> com.sromku.polygon.Polygon:
    com.sromku.polygon.Polygon$BoundingBox _boundingBox -> a
    java.util.List _sides -> b
    void <init>(java.util.List,com.sromku.polygon.Polygon$BoundingBox) -> <init>
    com.sromku.polygon.Polygon$Builder Builder() -> Builder
    boolean contains(com.sromku.polygon.Point) -> contains
    boolean intersect(com.sromku.polygon.Line,com.sromku.polygon.Line) -> intersect
    com.sromku.polygon.Line createRay(com.sromku.polygon.Point) -> createRay
    boolean inBoundingBox(com.sromku.polygon.Point) -> inBoundingBox
    void <init>(java.util.List,com.sromku.polygon.Polygon$BoundingBox,com.sromku.polygon.Polygon$1) -> <init>
com.sromku.polygon.Polygon$1 -> com.sromku.polygon.Polygon$1:
com.sromku.polygon.Polygon$BoundingBox -> com.sromku.polygon.Polygon$BoundingBox:
    float xMax -> a
    float xMin -> b
    float yMax -> c
    float yMin -> d
    void <init>() -> <init>
    void <init>(com.sromku.polygon.Polygon$1) -> <init>
com.sromku.polygon.Polygon$Builder -> com.sromku.polygon.Polygon$Builder:
    java.util.List _vertexes -> a
    java.util.List _sides -> b
    com.sromku.polygon.Polygon$BoundingBox _boundingBox -> c
    boolean _firstPoint -> d
    boolean _isClosed -> e
    void <init>() -> <init>
    com.sromku.polygon.Polygon$Builder addVertex(com.sromku.polygon.Point) -> addVertex
    com.sromku.polygon.Polygon build() -> build
    void updateBoundingBox(com.sromku.polygon.Point) -> updateBoundingBox
    void validate() -> validate
