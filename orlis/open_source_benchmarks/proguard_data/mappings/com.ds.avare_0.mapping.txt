com.ds.avare.AirportActivity -> com.ds.avare.AirportActivity:
    com.ds.avare.views.AfdView mAfdView -> a
    android.widget.Button mAirportButton -> b
    android.app.AlertDialog mAirportPopup -> c
    android.widget.ListView mAirportView -> d
    android.widget.Button mCenterButton -> e
    android.content.ServiceConnection mConnection -> f
    java.lang.String mDestString -> g
    com.ds.avare.place.Destination mDestination -> h
    com.ds.avare.gps.GpsInterface mGpsInfc -> i
    java.util.ArrayList mListAirports -> j
    java.util.ArrayList mListViews -> k
    java.lang.String mNearString -> l
    com.ds.avare.storage.Preferences mPref -> m
    com.ds.avare.StorageService mService -> n
    android.widget.Toast mToast -> o
    android.widget.Button mViewButton -> p
    android.app.AlertDialog mViewPopup -> q
    void <init>() -> <init>
    java.util.ArrayList access$000(com.ds.avare.AirportActivity) -> a
    java.util.ArrayList access$002(com.ds.avare.AirportActivity,java.util.ArrayList) -> a
    boolean access$100(com.ds.avare.AirportActivity) -> b
    java.lang.String access$1000(com.ds.avare.AirportActivity) -> c
    java.lang.String access$1100(com.ds.avare.AirportActivity) -> d
    void access$1200(com.ds.avare.AirportActivity,java.lang.String) -> a
    com.ds.avare.storage.Preferences access$1300(com.ds.avare.AirportActivity) -> e
    void access$200(com.ds.avare.AirportActivity,int) -> a
    com.ds.avare.StorageService access$300(com.ds.avare.AirportActivity) -> f
    com.ds.avare.StorageService access$302(com.ds.avare.AirportActivity,com.ds.avare.StorageService) -> a
    android.app.AlertDialog access$400(com.ds.avare.AirportActivity) -> g
    android.app.AlertDialog access$402(com.ds.avare.AirportActivity,android.app.AlertDialog) -> a
    java.util.ArrayList access$500(com.ds.avare.AirportActivity) -> h
    java.util.ArrayList access$502(com.ds.avare.AirportActivity,java.util.ArrayList) -> b
    void access$600(com.ds.avare.AirportActivity,int) -> b
    android.app.AlertDialog access$700(com.ds.avare.AirportActivity) -> i
    android.app.AlertDialog access$702(com.ds.avare.AirportActivity,android.app.AlertDialog) -> b
    com.ds.avare.views.AfdView access$800(com.ds.avare.AirportActivity) -> j
    com.ds.avare.gps.GpsInterface access$900(com.ds.avare.AirportActivity) -> k
    void addAirport(java.lang.String) -> a
    boolean arePopupsShowing() -> a
    void setNewDestinationFromPos(int) -> a
    void setViewFromPos(int) -> b
    void setupViewInfo() -> b
    void onBackPressed() -> onBackPressed
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onResume() -> onResume
    void update(java.util.Observable,java.lang.Object) -> update
com.ds.avare.AirportActivity$1 -> com.ds.avare.a:
    com.ds.avare.AirportActivity this$0 -> r
    void <init>(com.ds.avare.AirportActivity) -> <init>
    void enabledCallback(boolean) -> a
    void locationCallback(android.location.Location) -> a
    void statusCallback(android.location.GpsStatus) -> a
    void timeoutCallback(boolean) -> b
com.ds.avare.AirportActivity$2 -> com.ds.avare.b:
    com.ds.avare.AirportActivity this$0 -> r
    void <init>(com.ds.avare.AirportActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.AirportActivity$2$1 -> com.ds.avare.c:
    com.ds.avare.AirportActivity$2 this$1 -> s
    void <init>(com.ds.avare.AirportActivity$2) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.AirportActivity$3 -> com.ds.avare.d:
    com.ds.avare.AirportActivity this$0 -> r
    void <init>(com.ds.avare.AirportActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.AirportActivity$3$1 -> com.ds.avare.e:
    com.ds.avare.AirportActivity$3 this$1 -> t
    void <init>(com.ds.avare.AirportActivity$3) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.AirportActivity$4 -> com.ds.avare.f:
    com.ds.avare.AirportActivity this$0 -> r
    void <init>(com.ds.avare.AirportActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.AirportActivity$5 -> com.ds.avare.g:
    com.ds.avare.AirportActivity this$0 -> r
    void <init>(com.ds.avare.AirportActivity) -> <init>
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.ds.avare.AirportActivity$6 -> com.ds.avare.h:
    com.ds.avare.AirportActivity this$0 -> r
    void <init>(com.ds.avare.AirportActivity) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.ds.avare.BuildConfig -> com.ds.avare.i:
    java.lang.String APPLICATION_ID -> u
    java.lang.String BUILD_TYPE -> v
    boolean DEBUG -> DEBUG
    java.lang.String FLAVOR -> w
    int VERSION_CODE -> z
    java.lang.String VERSION_NAME -> A
    void <init>() -> <init>
com.ds.avare.ChartsDownloadActivity -> com.ds.avare.ChartsDownloadActivity:
    com.ds.avare.adapters.ChartAdapter mChartAdapter -> B
    android.app.AlertDialog mAlertDialog -> C
    android.content.ServiceConnection mConnection -> f
    android.widget.Button mDLButton -> D
    com.ds.avare.network.Delete mDelete -> E
    android.widget.Button mDeleteButton -> F
    com.ds.avare.network.Download mDownload -> G
    com.ds.avare.gps.GpsInterface mGpsInfc -> i
    android.os.Handler mHandler -> mHandler
    java.lang.String mName -> mName
    com.ds.avare.storage.Preferences mPref -> m
    android.app.ProgressDialog mProgressDialog -> H
    com.ds.avare.StorageService mService -> n
    android.widget.Toast mToast -> o
    android.widget.Button mUpdateButton -> I
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    com.ds.avare.adapters.ChartAdapter access$000() -> c
    boolean access$100(com.ds.avare.ChartsDownloadActivity) -> a
    android.app.ProgressDialog access$1000(com.ds.avare.ChartsDownloadActivity) -> b
    android.app.AlertDialog access$1100(com.ds.avare.ChartsDownloadActivity) -> c
    android.app.AlertDialog access$1102(com.ds.avare.ChartsDownloadActivity,android.app.AlertDialog) -> a
    boolean access$200(com.ds.avare.ChartsDownloadActivity) -> d
    com.ds.avare.StorageService access$300(com.ds.avare.ChartsDownloadActivity) -> e
    com.ds.avare.StorageService access$302(com.ds.avare.ChartsDownloadActivity,com.ds.avare.StorageService) -> a
    com.ds.avare.gps.GpsInterface access$400(com.ds.avare.ChartsDownloadActivity) -> f
    com.ds.avare.storage.Preferences access$500(com.ds.avare.ChartsDownloadActivity) -> g
    android.widget.Toast access$600(com.ds.avare.ChartsDownloadActivity) -> h
    com.ds.avare.network.Download access$700(com.ds.avare.ChartsDownloadActivity) -> i
    com.ds.avare.network.Delete access$800(com.ds.avare.ChartsDownloadActivity) -> j
    java.lang.String access$900(com.ds.avare.ChartsDownloadActivity) -> k
    boolean delete() -> delete
    boolean download() -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onResume() -> onResume
com.ds.avare.ChartsDownloadActivity$1 -> com.ds.avare.j:
    com.ds.avare.ChartsDownloadActivity this$0 -> J
    void <init>(com.ds.avare.ChartsDownloadActivity) -> <init>
    void enabledCallback(boolean) -> a
    void locationCallback(android.location.Location) -> a
    void statusCallback(android.location.GpsStatus) -> a
    void timeoutCallback(boolean) -> b
com.ds.avare.ChartsDownloadActivity$2 -> com.ds.avare.k:
    com.ds.avare.ChartsDownloadActivity this$0 -> J
    void <init>(com.ds.avare.ChartsDownloadActivity) -> <init>
    boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long) -> onChildClick
com.ds.avare.ChartsDownloadActivity$3 -> com.ds.avare.l:
    com.ds.avare.ChartsDownloadActivity this$0 -> J
    void <init>(com.ds.avare.ChartsDownloadActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.ChartsDownloadActivity$4 -> com.ds.avare.m:
    com.ds.avare.ChartsDownloadActivity this$0 -> J
    void <init>(com.ds.avare.ChartsDownloadActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.ChartsDownloadActivity$5 -> com.ds.avare.n:
    com.ds.avare.ChartsDownloadActivity this$0 -> J
    void <init>(com.ds.avare.ChartsDownloadActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.ChartsDownloadActivity$6 -> com.ds.avare.o:
    com.ds.avare.ChartsDownloadActivity this$0 -> J
    void <init>(com.ds.avare.ChartsDownloadActivity) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.ds.avare.ChartsDownloadActivity$7 -> com.ds.avare.p:
    com.ds.avare.ChartsDownloadActivity this$0 -> J
    void <init>(com.ds.avare.ChartsDownloadActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.ChartsDownloadActivity$8 -> com.ds.avare.q:
    com.ds.avare.ChartsDownloadActivity this$0 -> J
    void <init>(com.ds.avare.ChartsDownloadActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.ChartsDownloadActivity$9 -> com.ds.avare.r:
    com.ds.avare.ChartsDownloadActivity this$0 -> J
    void <init>(com.ds.avare.ChartsDownloadActivity) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.ds.avare.ChartsDownloadActivity$9$1 -> com.ds.avare.s:
    com.ds.avare.ChartsDownloadActivity$9 this$1 -> K
    void <init>(com.ds.avare.ChartsDownloadActivity$9) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.ChartsDownloadActivity$9$2 -> com.ds.avare.t:
    com.ds.avare.ChartsDownloadActivity$9 this$1 -> K
    void <init>(com.ds.avare.ChartsDownloadActivity$9) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.ChecklistActivity -> com.ds.avare.ChecklistActivity:
    int INIT -> L
    int MESSAGE -> M
    int SHOW_BUSY -> N
    int UNSHOW_BUSY -> O
    android.widget.Button mBackButton -> P
    android.content.ServiceConnection mConnection -> f
    android.content.Context mContext -> mContext
    android.widget.Button mForwardButton -> Q
    com.ds.avare.gps.GpsInterface mGpsInfc -> i
    android.os.Handler mHandler -> mHandler
    com.ds.avare.webinfc.WebAppListInterface mInfc -> R
    boolean mInited -> S
    boolean mIsPageLoaded -> T
    android.widget.ProgressBar mProgressBarSearch -> U
    com.ds.avare.StorageService mService -> n
    java.util.Timer mTimer -> V
    android.webkit.WebView mWebView -> W
    void <init>() -> <init>
    android.os.Handler access$000(com.ds.avare.ChecklistActivity) -> a
    boolean access$100(com.ds.avare.ChecklistActivity) -> b
    boolean access$102(com.ds.avare.ChecklistActivity,boolean) -> a
    com.ds.avare.webinfc.WebAppListInterface access$200(com.ds.avare.ChecklistActivity) -> c
    com.ds.avare.StorageService access$300(com.ds.avare.ChecklistActivity) -> d
    com.ds.avare.StorageService access$302(com.ds.avare.ChecklistActivity,com.ds.avare.StorageService) -> a
    com.ds.avare.gps.GpsInterface access$400(com.ds.avare.ChecklistActivity) -> e
    java.util.Timer access$500(com.ds.avare.ChecklistActivity) -> f
    java.util.Timer access$502(com.ds.avare.ChecklistActivity,java.util.Timer) -> a
    boolean access$700(com.ds.avare.ChecklistActivity) -> g
    boolean access$702(com.ds.avare.ChecklistActivity,boolean) -> b
    android.widget.ProgressBar access$800(com.ds.avare.ChecklistActivity) -> h
    android.content.Context access$900(com.ds.avare.ChecklistActivity) -> i
    void onBackPressed() -> onBackPressed
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onRestart() -> onRestart
    void onResume() -> onResume
    void onStart() -> onStart
    void onStop() -> onStop
com.ds.avare.ChecklistActivity$1 -> com.ds.avare.u:
    com.ds.avare.ChecklistActivity this$0 -> X
    void <init>(com.ds.avare.ChecklistActivity) -> <init>
    void enabledCallback(boolean) -> a
    void locationCallback(android.location.Location) -> a
    void statusCallback(android.location.GpsStatus) -> a
    void timeoutCallback(boolean) -> b
com.ds.avare.ChecklistActivity$2 -> com.ds.avare.v:
    com.ds.avare.ChecklistActivity this$0 -> X
    void <init>(com.ds.avare.ChecklistActivity) -> <init>
    java.lang.Object callback(java.lang.Object,java.lang.Object) -> a
com.ds.avare.ChecklistActivity$3 -> com.ds.avare.w:
    com.ds.avare.ChecklistActivity this$0 -> X
    void <init>(com.ds.avare.ChecklistActivity) -> <init>
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
com.ds.avare.ChecklistActivity$3$1 -> com.ds.avare.x:
    com.ds.avare.ChecklistActivity$3 this$1 -> Y
    android.webkit.JsResult val$result -> Z
    void <init>(com.ds.avare.ChecklistActivity$3,android.webkit.JsResult) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.ChecklistActivity$3$2 -> com.ds.avare.y:
    com.ds.avare.ChecklistActivity$3 this$1 -> Y
    android.webkit.JsResult val$result -> Z
    void <init>(com.ds.avare.ChecklistActivity$3,android.webkit.JsResult) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.ChecklistActivity$3$3 -> com.ds.avare.z:
    com.ds.avare.ChecklistActivity$3 this$1 -> Y
    android.webkit.JsResult val$result -> Z
    void <init>(com.ds.avare.ChecklistActivity$3,android.webkit.JsResult) -> <init>
    void onCancel(android.content.DialogInterface) -> onCancel
com.ds.avare.ChecklistActivity$4 -> com.ds.avare.aa:
    com.ds.avare.ChecklistActivity this$0 -> X
    void <init>(com.ds.avare.ChecklistActivity) -> <init>
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.ds.avare.ChecklistActivity$5 -> com.ds.avare.ab:
    com.ds.avare.ChecklistActivity this$0 -> X
    void <init>(com.ds.avare.ChecklistActivity) -> <init>
    boolean onLongClick(android.view.View) -> onLongClick
com.ds.avare.ChecklistActivity$6 -> com.ds.avare.ac:
    com.ds.avare.ChecklistActivity this$0 -> X
    void <init>(com.ds.avare.ChecklistActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.ChecklistActivity$7 -> com.ds.avare.ad:
    com.ds.avare.ChecklistActivity this$0 -> X
    void <init>(com.ds.avare.ChecklistActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.ChecklistActivity$8 -> com.ds.avare.ae:
    com.ds.avare.ChecklistActivity this$0 -> X
    void <init>(com.ds.avare.ChecklistActivity) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.ds.avare.ChecklistActivity$9 -> com.ds.avare.af:
    com.ds.avare.ChecklistActivity this$0 -> X
    void <init>(com.ds.avare.ChecklistActivity) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.ds.avare.ChecklistActivity$9$1 -> com.ds.avare.ag:
    com.ds.avare.ChecklistActivity$9 this$1 -> aa
    void <init>(com.ds.avare.ChecklistActivity$9) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.ChecklistActivity$UpdateTask -> com.ds.avare.ah:
    com.ds.avare.ChecklistActivity this$0 -> X
    void <init>(com.ds.avare.ChecklistActivity) -> <init>
    void <init>(com.ds.avare.ChecklistActivity,com.ds.avare.ChecklistActivity$1) -> <init>
    void run() -> run
com.ds.avare.IHelper -> com.ds.avare.ai:
    java.lang.String recvDataText() -> e
    void sendDataText(java.lang.String) -> b
com.ds.avare.IHelper$Stub -> com.ds.avare.aj:
    java.lang.String DESCRIPTOR -> ab
    int TRANSACTION_recvDataText -> ac
    int TRANSACTION_sendDataText -> ad
    void <init>() -> <init>
    com.ds.avare.IHelper asInterface(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.ds.avare.IHelper$Stub$Proxy -> com.ds.avare.ak:
    android.os.IBinder mRemote -> ae
    void <init>(android.os.IBinder) -> <init>
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    java.lang.String recvDataText() -> e
    void sendDataText(java.lang.String) -> b
com.ds.avare.IHelperService -> com.ds.avare.IHelperService:
    com.ds.avare.IHelper$Stub mBinder -> af
    android.content.ServiceConnection mConnection -> f
    android.os.Handler mHandler -> mHandler
    com.ds.avare.StorageService mService -> n
    void <init>() -> <init>
    com.ds.avare.StorageService access$000(com.ds.avare.IHelperService) -> a
    com.ds.avare.StorageService access$002(com.ds.avare.IHelperService,com.ds.avare.StorageService) -> a
    android.os.Handler access$100(com.ds.avare.IHelperService) -> b
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
com.ds.avare.IHelperService$1 -> com.ds.avare.al:
    com.ds.avare.IHelperService this$0 -> ag
    void <init>(com.ds.avare.IHelperService) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.ds.avare.IHelperService$2 -> com.ds.avare.am:
    com.ds.avare.IHelperService this$0 -> ag
    void <init>(com.ds.avare.IHelperService) -> <init>
    java.lang.String recvDataText() -> e
    void sendDataText(java.lang.String) -> b
com.ds.avare.IHelperService$3 -> com.ds.avare.an:
    com.ds.avare.IHelperService this$0 -> ag
    void <init>(com.ds.avare.IHelperService) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.ds.avare.LocationActivity -> com.ds.avare.LocationActivity:
    android.widget.Button mAfdButton -> ah
    java.lang.String mAirportPressed -> ai
    android.app.AlertDialog mAlertDialogDatabase -> aj
    android.app.AlertDialog mAlertDialogExit -> ak
    com.ds.avare.animation.AnimateButton mAnimateChart -> al
    com.ds.avare.animation.AnimateButton mAnimateDownload -> am
    com.ds.avare.animation.AnimateButton mAnimateHelp -> an
    com.ds.avare.animation.AnimateButton mAnimatePref -> ao
    com.ds.avare.animation.AnimateButton mAnimateSim -> ap
    com.ds.avare.animation.AnimateButton mAnimateTrack -> aq
    com.ds.avare.animation.AnimateButton mAnimateTracks -> ar
    com.ds.avare.animation.AnimateButton mAnimateWeb -> as
    com.ds.avare.utils.VerticalSeekBar mBar -> at
    android.widget.Button mCenterButton -> e
    android.widget.Spinner mChartSpinner -> au
    android.content.ServiceConnection mConnection -> f
    android.widget.Button mCrossButton -> av
    android.widget.Button mDestButton -> aw
    android.widget.RelativeLayout mDestLayout -> ax
    com.ds.avare.place.Destination mDestination -> h
    android.widget.Button mDownloadButton -> ay
    com.ds.avare.animation.TwoButton mDrawButton -> az
    android.widget.Button mDrawClearButton -> aA
    android.os.Bundle mExtras -> aB
    com.ds.avare.flight.FlightStatusInterface mFSInfc -> aC
    com.ds.avare.gps.GpsInterface mGpsInfc -> i
    android.app.AlertDialog mGpsWarnDialog -> aD
    android.widget.Button mHelpButton -> aE
    boolean mIsWaypoint -> aF
    android.widget.ExpandableListView mListPopout -> aG
    com.ds.avare.views.LocationView mLocationView -> aH
    android.widget.Button mMenuButton -> aI
    android.widget.Button mPlanButton -> aJ
    android.widget.Button mPlanNext -> aK
    android.widget.ImageButton mPlanPause -> aL
    android.widget.Button mPlanPrev -> aM
    android.widget.Button mPlatesButton -> aN
    com.ds.avare.storage.Preferences mPref -> m
    android.widget.Button mPrefButton -> aO
    com.ds.avare.StorageService mService -> n
    com.ds.avare.animation.TwoButton mSimButton -> aP
    boolean mSpinner -> aQ
    com.ds.avare.LocationActivity$TankObserver mTankObserver -> aR
    android.widget.Toast mToast -> o
    com.ds.avare.animation.TwoButton mTrackButton -> aS
    com.ds.avare.animation.TwoButton mTracksButton -> aT
    android.widget.Button mWebButton -> aU
    void <init>() -> <init>
    com.ds.avare.storage.Preferences access$000(com.ds.avare.LocationActivity) -> a
    com.ds.avare.StorageService access$100(com.ds.avare.LocationActivity) -> b
    android.widget.Button access$1000(com.ds.avare.LocationActivity) -> c
    com.ds.avare.StorageService access$102(com.ds.avare.LocationActivity,com.ds.avare.StorageService) -> a
    android.widget.Button access$1100(com.ds.avare.LocationActivity) -> d
    android.widget.RelativeLayout access$1200(com.ds.avare.LocationActivity) -> e
    boolean access$1300(com.ds.avare.LocationActivity,java.lang.String) -> a
    android.widget.Button access$1400(com.ds.avare.LocationActivity) -> f
    android.widget.ExpandableListView access$1500(com.ds.avare.LocationActivity) -> g
    boolean access$1600(com.ds.avare.LocationActivity) -> h
    boolean access$1602(com.ds.avare.LocationActivity,boolean) -> a
    android.widget.Spinner access$1700(com.ds.avare.LocationActivity) -> i
    void access$1800(com.ds.avare.LocationActivity) -> j
    void access$1900(com.ds.avare.LocationActivity,java.lang.String,java.lang.String) -> a
    com.ds.avare.views.LocationView access$200(com.ds.avare.LocationActivity) -> k
    void access$2000(com.ds.avare.LocationActivity,java.lang.String,java.lang.String) -> b
    com.ds.avare.animation.TwoButton access$2100(com.ds.avare.LocationActivity) -> l
    com.ds.avare.animation.TwoButton access$2200(com.ds.avare.LocationActivity) -> m
    com.ds.avare.animation.TwoButton access$2300(com.ds.avare.LocationActivity) -> n
    android.widget.Button access$2400(com.ds.avare.LocationActivity) -> o
    android.widget.ImageButton access$2500(com.ds.avare.LocationActivity) -> p
    com.ds.avare.gps.GpsInterface access$2700(com.ds.avare.LocationActivity) -> q
    com.ds.avare.flight.FlightStatusInterface access$2800(com.ds.avare.LocationActivity) -> r
    android.app.AlertDialog access$2900(com.ds.avare.LocationActivity) -> s
    android.app.AlertDialog access$2902(com.ds.avare.LocationActivity,android.app.AlertDialog) -> a
    com.ds.avare.utils.VerticalSeekBar access$300(com.ds.avare.LocationActivity) -> t
    com.ds.avare.place.Destination access$3000(com.ds.avare.LocationActivity) -> u
    com.ds.avare.place.Destination access$3002(com.ds.avare.LocationActivity,com.ds.avare.place.Destination) -> a
    android.os.Bundle access$3100(com.ds.avare.LocationActivity) -> v
    android.os.Bundle access$3102(com.ds.avare.LocationActivity,android.os.Bundle) -> a
    android.widget.Toast access$3200(com.ds.avare.LocationActivity) -> w
    void access$3300(com.ds.avare.LocationActivity) -> x
    com.ds.avare.LocationActivity$TankObserver access$3400(com.ds.avare.LocationActivity) -> y
    void access$400(com.ds.avare.LocationActivity) -> z
    void access$500(com.ds.avare.LocationActivity,boolean) -> b
    void access$601(com.ds.avare.LocationActivity) -> A
    void access$700(com.ds.avare.LocationActivity) -> B
    java.lang.String access$800(com.ds.avare.LocationActivity) -> C
    java.lang.String access$802(com.ds.avare.LocationActivity,java.lang.String) -> b
    android.widget.Button access$900(com.ds.avare.LocationActivity) -> D
    void blink() -> f
    void goTo(java.lang.String,java.lang.String) -> a
    void hideMenu() -> g
    boolean isSameDest(java.lang.String) -> c
    void planTo(java.lang.String,java.lang.String) -> b
    void setPlanButtonVis() -> h
    void setTrackState(boolean) -> c
    void showMenu() -> i
    void onBackPressed() -> onBackPressed
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onRestart() -> onRestart
    void onResume() -> onResume
    void onStart() -> onStart
    void onStop() -> onStop
    void update(java.util.Observable,java.lang.Object) -> update
com.ds.avare.LocationActivity$1 -> com.ds.avare.ao:
    com.ds.avare.LocationActivity this$0 -> aV
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void rollout() -> j
com.ds.avare.LocationActivity$10 -> com.ds.avare.ap:
    com.ds.avare.LocationActivity this$0 -> aV
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$11 -> com.ds.avare.aq:
    com.ds.avare.LocationActivity this$0 -> aV
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$12 -> com.ds.avare.ar:
    com.ds.avare.LocationActivity this$0 -> aV
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$13 -> com.ds.avare.as:
    com.ds.avare.LocationActivity this$0 -> aV
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$14 -> com.ds.avare.at:
    com.ds.avare.LocationActivity this$0 -> aV
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$15 -> com.ds.avare.au:
    com.ds.avare.LocationActivity this$0 -> aV
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$16 -> com.ds.avare.av:
    com.ds.avare.LocationActivity this$0 -> aV
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$17 -> com.ds.avare.aw:
    com.ds.avare.LocationActivity this$0 -> aV
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$18 -> com.ds.avare.ax:
    com.ds.avare.LocationActivity this$0 -> aV
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$19 -> com.ds.avare.ay:
    com.ds.avare.LocationActivity this$0 -> aV
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$2 -> com.ds.avare.az:
    com.ds.avare.LocationActivity this$0 -> aV
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void enabledCallback(boolean) -> a
    void locationCallback(android.location.Location) -> a
    void statusCallback(android.location.GpsStatus) -> a
    void timeoutCallback(boolean) -> b
com.ds.avare.LocationActivity$20 -> com.ds.avare.ba:
    com.ds.avare.LocationActivity this$0 -> aV
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$21 -> com.ds.avare.bb:
    com.ds.avare.LocationActivity this$0 -> aV
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$22 -> com.ds.avare.bc:
    com.ds.avare.LocationActivity this$0 -> aV
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$23 -> com.ds.avare.bd:
    com.ds.avare.LocationActivity this$0 -> aV
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$24 -> com.ds.avare.be:
    com.ds.avare.LocationActivity this$0 -> aV
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.LocationActivity$25 -> com.ds.avare.bf:
    com.ds.avare.LocationActivity this$0 -> aV
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.LocationActivity$26 -> com.ds.avare.bg:
    com.ds.avare.LocationActivity this$0 -> aV
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$27 -> com.ds.avare.bh:
    com.ds.avare.LocationActivity this$0 -> aV
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$28 -> com.ds.avare.bi:
    com.ds.avare.LocationActivity this$0 -> aV
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$29 -> com.ds.avare.bj:
    com.ds.avare.LocationActivity this$0 -> aV
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.ds.avare.LocationActivity$29$1 -> com.ds.avare.bk:
    com.ds.avare.LocationActivity$29 this$1 -> aW
    void <init>(com.ds.avare.LocationActivity$29) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.LocationActivity$29$2 -> com.ds.avare.bl:
    com.ds.avare.LocationActivity$29 this$1 -> aW
    void <init>(com.ds.avare.LocationActivity$29) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.LocationActivity$3 -> com.ds.avare.bm:
    com.ds.avare.LocationActivity this$0 -> aV
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.LocationActivity$30 -> com.ds.avare.bn:
    com.ds.avare.LocationActivity this$0 -> aV
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void run() -> run
com.ds.avare.LocationActivity$4 -> com.ds.avare.bo:
    com.ds.avare.LocationActivity this$0 -> aV
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.LocationActivity$5 -> com.ds.avare.bp:
    com.ds.avare.utils.InfoLines$InfoLineFieldLoc _InfoLineFieldLoc -> aX
    int _nNewSelection -> aY
    com.ds.avare.LocationActivity this$0 -> aV
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void gestureCallBack(int,com.ds.avare.touch.LongTouchDestination) -> a
    void gestureCallBack(int,com.ds.avare.utils.InfoLines$InfoLineFieldLoc) -> a
com.ds.avare.LocationActivity$5$1 -> com.ds.avare.bq:
    com.ds.avare.LocationActivity$5 this$1 -> aZ
    void <init>(com.ds.avare.LocationActivity$5) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.LocationActivity$5$2 -> com.ds.avare.br:
    com.ds.avare.LocationActivity$5 this$1 -> aZ
    void <init>(com.ds.avare.LocationActivity$5) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.LocationActivity$5$3 -> com.ds.avare.bs:
    com.ds.avare.LocationActivity$5 this$1 -> aZ
    void <init>(com.ds.avare.LocationActivity$5) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.LocationActivity$6 -> com.ds.avare.bt:
    com.ds.avare.LocationActivity this$0 -> aV
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.ds.avare.LocationActivity$7 -> com.ds.avare.bu:
    com.ds.avare.LocationActivity this$0 -> aV
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
com.ds.avare.LocationActivity$8 -> com.ds.avare.bv:
    com.ds.avare.LocationActivity this$0 -> aV
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$9 -> com.ds.avare.bw:
    com.ds.avare.LocationActivity this$0 -> aV
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.LocationActivity$TankObserver -> com.ds.avare.bx:
    com.ds.avare.LocationActivity this$0 -> aV
    void <init>(com.ds.avare.LocationActivity) -> <init>
    void <init>(com.ds.avare.LocationActivity,com.ds.avare.LocationActivity$1) -> <init>
    void update(java.util.Observable,java.lang.Object) -> update
com.ds.avare.LocationActivity$TankObserver$1 -> com.ds.avare.by:
    com.ds.avare.LocationActivity$TankObserver this$1 -> ba
    com.ds.avare.instruments.FuelTimer val$fuelTimer -> bb
    void <init>(com.ds.avare.LocationActivity$TankObserver,com.ds.avare.instruments.FuelTimer) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.MainActivity -> com.ds.avare.MainActivity:
    int tabAFD -> bc
    int tabChecklist -> bd
    int tabFind -> be
    int tabMain -> bf
    int tabNear -> bg
    int tabPlan -> bh
    int tabPlates -> bi
    int tabTools -> bj
    int tabTrip -> bk
    int tabWXB -> bl
    com.ds.avare.storage.Preferences mPref -> m
    android.widget.HorizontalScrollView mScrollView -> bm
    int mScrollWidth -> bn
    float mTabHeight -> bo
    android.widget.TabHost mTabHost -> bp
    void <init>() -> <init>
    android.view.View createTabView(android.content.Context,java.lang.String) -> a
    void setupTab(android.view.View,java.lang.String,android.content.Intent,android.content.Intent) -> a
    void switchTab(int) -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void showAfdTab() -> k
    void showMapTab() -> l
    void showPlatesTab() -> m
com.ds.avare.MainActivity$1 -> com.ds.avare.bz:
    com.ds.avare.MainActivity this$0 -> bq
    void <init>(com.ds.avare.MainActivity) -> <init>
    void onGlobalLayout() -> onGlobalLayout
com.ds.avare.MessageActivity -> com.ds.avare.MessageActivity:
    android.widget.Spinner mSpinner -> br
    android.webkit.WebView mWebView -> W
    void <init>() -> <init>
    android.webkit.WebView access$000(com.ds.avare.MessageActivity) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
com.ds.avare.MessageActivity$1 -> com.ds.avare.ca:
    com.ds.avare.MessageActivity this$0 -> bs
    void <init>(com.ds.avare.MessageActivity) -> <init>
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.ds.avare.MessageActivity$2 -> com.ds.avare.cb:
    com.ds.avare.MessageActivity this$0 -> bs
    void <init>(com.ds.avare.MessageActivity) -> <init>
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.ds.avare.NearestActivity -> com.ds.avare.NearestActivity:
    com.ds.avare.animation.AnimateButton mAnimateDest -> bt
    com.ds.avare.animation.AnimateButton mAnimatePlates -> bu
    android.widget.Button mButton2000 -> bv
    android.widget.Button mButton4000 -> bw
    android.widget.Button mButton6000 -> bx
    android.widget.Button mButtonFuel -> by
    android.content.ServiceConnection mConnection -> f
    android.widget.Button mDestButton -> aw
    com.ds.avare.place.Destination mDestination -> h
    com.ds.avare.gps.GpsInterface mGpsInfc -> i
    android.widget.ListView mNearest -> bz
    com.ds.avare.adapters.NearestAdapter mNearestAdapter -> bA
    android.widget.Button mPlatesButton -> aN
    com.ds.avare.storage.Preferences mPref -> m
    java.lang.String mSelectedAirportId -> bB
    com.ds.avare.StorageService mService -> n
    android.widget.Toast mToast -> o
    void <init>() -> <init>
    com.ds.avare.StorageService access$000(com.ds.avare.NearestActivity) -> a
    com.ds.avare.StorageService access$002(com.ds.avare.NearestActivity,com.ds.avare.StorageService) -> a
    boolean access$100(com.ds.avare.NearestActivity,android.location.Location) -> a
    com.ds.avare.animation.AnimateButton access$1000(com.ds.avare.NearestActivity) -> b
    com.ds.avare.animation.AnimateButton access$1100(com.ds.avare.NearestActivity) -> c
    com.ds.avare.place.Destination access$200(com.ds.avare.NearestActivity) -> d
    com.ds.avare.place.Destination access$202(com.ds.avare.NearestActivity,com.ds.avare.place.Destination) -> a
    com.ds.avare.storage.Preferences access$300(com.ds.avare.NearestActivity) -> e
    android.widget.Toast access$400(com.ds.avare.NearestActivity) -> f
    java.lang.String access$500(com.ds.avare.NearestActivity) -> g
    java.lang.String access$502(com.ds.avare.NearestActivity,java.lang.String) -> a
    com.ds.avare.adapters.NearestAdapter access$600(com.ds.avare.NearestActivity) -> h
    com.ds.avare.gps.GpsInterface access$700(com.ds.avare.NearestActivity) -> i
    android.widget.ListView access$800(com.ds.avare.NearestActivity) -> j
    android.widget.Button access$900(com.ds.avare.NearestActivity) -> k
    boolean prepareAdapter(android.location.Location) -> b
    void onBackPressed() -> onBackPressed
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onResume() -> onResume
    void update(java.util.Observable,java.lang.Object) -> update
com.ds.avare.NearestActivity$1 -> com.ds.avare.cc:
    com.ds.avare.NearestActivity this$0 -> bC
    void <init>(com.ds.avare.NearestActivity) -> <init>
    void enabledCallback(boolean) -> a
    void locationCallback(android.location.Location) -> a
    void statusCallback(android.location.GpsStatus) -> a
    void timeoutCallback(boolean) -> b
com.ds.avare.NearestActivity$2 -> com.ds.avare.cd:
    com.ds.avare.NearestActivity this$0 -> bC
    void <init>(com.ds.avare.NearestActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.NearestActivity$3 -> com.ds.avare.ce:
    com.ds.avare.NearestActivity this$0 -> bC
    void <init>(com.ds.avare.NearestActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.NearestActivity$4 -> com.ds.avare.cf:
    com.ds.avare.NearestActivity this$0 -> bC
    void <init>(com.ds.avare.NearestActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.NearestActivity$5 -> com.ds.avare.cg:
    com.ds.avare.NearestActivity this$0 -> bC
    void <init>(com.ds.avare.NearestActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.NearestActivity$6 -> com.ds.avare.ch:
    com.ds.avare.NearestActivity this$0 -> bC
    void <init>(com.ds.avare.NearestActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.NearestActivity$7 -> com.ds.avare.ci:
    com.ds.avare.NearestActivity this$0 -> bC
    void <init>(com.ds.avare.NearestActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.NearestActivity$8 -> com.ds.avare.cj:
    com.ds.avare.NearestActivity this$0 -> bC
    void <init>(com.ds.avare.NearestActivity) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.ds.avare.NearestActivity$8$1 -> com.ds.avare.ck:
    com.ds.avare.NearestActivity$8 this$1 -> bD
    void <init>(com.ds.avare.NearestActivity$8) -> <init>
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.ds.avare.PlanActivity -> com.ds.avare.PlanActivity:
    int ACTIVE -> bE
    int INACTIVE -> bF
    int INIT -> L
    int MESSAGE -> M
    int SHOW_BUSY -> N
    int UNSHOW_BUSY -> O
    android.widget.Button mActivateButton -> bG
    android.widget.Button mBackButton -> P
    android.content.ServiceConnection mConnection -> f
    android.content.Context mContext -> mContext
    android.widget.Button mForwardButton -> Q
    com.ds.avare.gps.GpsInterface mGpsInfc -> i
    android.os.Handler mHandler -> mHandler
    com.ds.avare.webinfc.WebAppPlanInterface mInfc -> bH
    boolean mInited -> S
    boolean mIsPageLoaded -> T
    android.widget.ProgressBar mProgressBarSearch -> U
    com.ds.avare.StorageService mService -> n
    java.util.Timer mTimer -> V
    android.webkit.WebView mWebView -> W
    void <init>() -> <init>
    android.os.Handler access$000(com.ds.avare.PlanActivity) -> a
    boolean access$100(com.ds.avare.PlanActivity) -> b
    android.content.Context access$1000(com.ds.avare.PlanActivity) -> c
    boolean access$102(com.ds.avare.PlanActivity,boolean) -> a
    com.ds.avare.webinfc.WebAppPlanInterface access$200(com.ds.avare.PlanActivity) -> d
    com.ds.avare.StorageService access$300(com.ds.avare.PlanActivity) -> e
    com.ds.avare.StorageService access$302(com.ds.avare.PlanActivity,com.ds.avare.StorageService) -> a
    com.ds.avare.gps.GpsInterface access$400(com.ds.avare.PlanActivity) -> f
    java.util.Timer access$500(com.ds.avare.PlanActivity) -> g
    java.util.Timer access$502(com.ds.avare.PlanActivity,java.util.Timer) -> a
    boolean access$700(com.ds.avare.PlanActivity) -> h
    boolean access$702(com.ds.avare.PlanActivity,boolean) -> b
    android.widget.ProgressBar access$800(com.ds.avare.PlanActivity) -> i
    android.widget.Button access$900(com.ds.avare.PlanActivity) -> j
    void onBackPressed() -> onBackPressed
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onRestart() -> onRestart
    void onResume() -> onResume
    void onStart() -> onStart
    void onStop() -> onStop
com.ds.avare.PlanActivity$1 -> com.ds.avare.cl:
    com.ds.avare.PlanActivity this$0 -> bI
    void <init>(com.ds.avare.PlanActivity) -> <init>
    void enabledCallback(boolean) -> a
    void locationCallback(android.location.Location) -> a
    void statusCallback(android.location.GpsStatus) -> a
    void timeoutCallback(boolean) -> b
com.ds.avare.PlanActivity$10 -> com.ds.avare.cm:
    com.ds.avare.PlanActivity this$0 -> bI
    void <init>(com.ds.avare.PlanActivity) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.ds.avare.PlanActivity$10$1 -> com.ds.avare.cn:
    com.ds.avare.PlanActivity$10 this$1 -> bJ
    void <init>(com.ds.avare.PlanActivity$10) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.PlanActivity$2 -> com.ds.avare.co:
    com.ds.avare.PlanActivity this$0 -> bI
    void <init>(com.ds.avare.PlanActivity) -> <init>
    java.lang.Object callback(java.lang.Object,java.lang.Object) -> a
com.ds.avare.PlanActivity$3 -> com.ds.avare.cp:
    com.ds.avare.PlanActivity this$0 -> bI
    void <init>(com.ds.avare.PlanActivity) -> <init>
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
com.ds.avare.PlanActivity$3$1 -> com.ds.avare.cq:
    com.ds.avare.PlanActivity$3 this$1 -> bK
    android.webkit.JsResult val$result -> Z
    void <init>(com.ds.avare.PlanActivity$3,android.webkit.JsResult) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.PlanActivity$3$2 -> com.ds.avare.cr:
    com.ds.avare.PlanActivity$3 this$1 -> bK
    android.webkit.JsResult val$result -> Z
    void <init>(com.ds.avare.PlanActivity$3,android.webkit.JsResult) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.PlanActivity$3$3 -> com.ds.avare.cs:
    com.ds.avare.PlanActivity$3 this$1 -> bK
    android.webkit.JsResult val$result -> Z
    void <init>(com.ds.avare.PlanActivity$3,android.webkit.JsResult) -> <init>
    void onCancel(android.content.DialogInterface) -> onCancel
com.ds.avare.PlanActivity$4 -> com.ds.avare.ct:
    com.ds.avare.PlanActivity this$0 -> bI
    void <init>(com.ds.avare.PlanActivity) -> <init>
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.ds.avare.PlanActivity$5 -> com.ds.avare.cu:
    com.ds.avare.PlanActivity this$0 -> bI
    void <init>(com.ds.avare.PlanActivity) -> <init>
    boolean onLongClick(android.view.View) -> onLongClick
com.ds.avare.PlanActivity$6 -> com.ds.avare.cv:
    com.ds.avare.PlanActivity this$0 -> bI
    void <init>(com.ds.avare.PlanActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.PlanActivity$7 -> com.ds.avare.cw:
    com.ds.avare.PlanActivity this$0 -> bI
    void <init>(com.ds.avare.PlanActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.PlanActivity$8 -> com.ds.avare.cx:
    com.ds.avare.PlanActivity this$0 -> bI
    void <init>(com.ds.avare.PlanActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.PlanActivity$9 -> com.ds.avare.cy:
    com.ds.avare.PlanActivity this$0 -> bI
    void <init>(com.ds.avare.PlanActivity) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.ds.avare.PlanActivity$UpdateTask -> com.ds.avare.cz:
    com.ds.avare.PlanActivity this$0 -> bI
    void <init>(com.ds.avare.PlanActivity) -> <init>
    void <init>(com.ds.avare.PlanActivity,com.ds.avare.PlanActivity$1) -> <init>
    void run() -> run
com.ds.avare.PlatesActivity -> com.ds.avare.PlatesActivity:
    java.lang.String AD -> bL
    android.widget.Button mAirportButton -> b
    android.app.AlertDialog mAirportPopup -> c
    android.widget.Button mCenterButton -> e
    android.widget.Chronometer mChronometer -> bM
    android.content.ServiceConnection mConnection -> f
    boolean mCounting -> bN
    com.ds.avare.place.Destination mDest -> bO
    java.lang.String mDestString -> g
    com.ds.avare.place.Destination mDestination -> h
    com.ds.avare.animation.TwoButton mDrawButton -> az
    android.widget.Button mDrawClearButton -> aA
    com.ds.avare.gps.GpsInterface mGpsInfc -> i
    java.util.ArrayList mListAirports -> j
    java.util.ArrayList mListPlates -> bP
    float[] mMatrix -> bQ
    java.lang.String[] mPlateFound -> bR
    android.widget.Button mPlatesButton -> aN
    android.app.AlertDialog mPlatesPopup -> bS
    android.widget.Button mPlatesTagButton -> bT
    android.widget.Button mPlatesTimerButton -> bU
    com.ds.avare.views.PlatesView mPlatesView -> bV
    com.ds.avare.storage.Preferences mPref -> m
    com.ds.avare.StorageService mService -> n
    com.ds.avare.PlatesActivity$TankObserver mTankObserver -> bW
    android.widget.Toast mToast -> o
    java.lang.String nearString -> bX
    void <init>() -> <init>
    com.ds.avare.views.PlatesView access$000(com.ds.avare.PlatesActivity) -> a
    com.ds.avare.StorageService access$100(com.ds.avare.PlatesActivity) -> b
    com.ds.avare.animation.TwoButton access$1000(com.ds.avare.PlatesActivity) -> c
    com.ds.avare.StorageService access$102(com.ds.avare.PlatesActivity,com.ds.avare.StorageService) -> a
    android.widget.Button access$1100(com.ds.avare.PlatesActivity) -> d
    java.util.ArrayList access$1200(com.ds.avare.PlatesActivity) -> e
    java.util.ArrayList access$1202(com.ds.avare.PlatesActivity,java.util.ArrayList) -> a
    void access$1300(com.ds.avare.PlatesActivity,int) -> a
    android.app.AlertDialog access$1400(com.ds.avare.PlatesActivity) -> f
    android.app.AlertDialog access$1402(com.ds.avare.PlatesActivity,android.app.AlertDialog) -> a
    com.ds.avare.gps.GpsInterface access$1700(com.ds.avare.PlatesActivity) -> g
    java.lang.String access$1800(com.ds.avare.PlatesActivity) -> h
    java.lang.String access$1900(com.ds.avare.PlatesActivity) -> i
    com.ds.avare.storage.Preferences access$200(com.ds.avare.PlatesActivity) -> j
    void access$2000(com.ds.avare.PlatesActivity,java.lang.String) -> a
    com.ds.avare.place.Destination access$2100(com.ds.avare.PlatesActivity) -> k
    com.ds.avare.place.Destination access$2102(com.ds.avare.PlatesActivity,com.ds.avare.place.Destination) -> a
    com.ds.avare.PlatesActivity$TankObserver access$2200(com.ds.avare.PlatesActivity) -> l
    java.util.ArrayList access$300(com.ds.avare.PlatesActivity) -> m
    java.util.ArrayList access$302(com.ds.avare.PlatesActivity,java.util.ArrayList) -> b
    boolean access$400(com.ds.avare.PlatesActivity) -> n
    void access$500(com.ds.avare.PlatesActivity,int) -> b
    android.app.AlertDialog access$600(com.ds.avare.PlatesActivity) -> o
    android.app.AlertDialog access$602(com.ds.avare.PlatesActivity,android.app.AlertDialog) -> b
    boolean access$700(com.ds.avare.PlatesActivity) -> p
    boolean access$702(com.ds.avare.PlatesActivity,boolean) -> a
    android.widget.Chronometer access$800(com.ds.avare.PlatesActivity) -> q
    android.widget.Button access$900(com.ds.avare.PlatesActivity) -> r
    void addAirport(java.lang.String) -> a
    boolean arePopupsShowing() -> a
    boolean doesAirportHaveAirportDiagram(java.lang.String,java.lang.String) -> c
    boolean doesAirportHavePlates(java.lang.String,java.lang.String) -> d
    java.lang.String getLastIfAirport() -> n
    void setAirportFromPos(int) -> d
    void setPlateFromPos(int) -> e
    float[] getMatrix(java.lang.String) -> d
    void onBackPressed() -> onBackPressed
    void onChronometerTick(android.widget.Chronometer) -> onChronometerTick
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onPause() -> onPause
    void onResume() -> onResume
    void update(java.util.Observable,java.lang.Object) -> update
com.ds.avare.PlatesActivity$1 -> com.ds.avare.da:
    com.ds.avare.PlatesActivity this$0 -> bY
    void <init>(com.ds.avare.PlatesActivity) -> <init>
    void enabledCallback(boolean) -> a
    void locationCallback(android.location.Location) -> a
    void statusCallback(android.location.GpsStatus) -> a
    void timeoutCallback(boolean) -> b
com.ds.avare.PlatesActivity$10 -> com.ds.avare.db:
    com.ds.avare.PlatesActivity this$0 -> bY
    void <init>(com.ds.avare.PlatesActivity) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.ds.avare.PlatesActivity$2 -> com.ds.avare.dc:
    com.ds.avare.PlatesActivity this$0 -> bY
    void <init>(com.ds.avare.PlatesActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.PlatesActivity$2$1 -> com.ds.avare.dd:
    com.ds.avare.PlatesActivity$2 this$1 -> bZ
    void <init>(com.ds.avare.PlatesActivity$2) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.PlatesActivity$3 -> com.ds.avare.de:
    com.ds.avare.PlatesActivity this$0 -> bY
    void <init>(com.ds.avare.PlatesActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.PlatesActivity$4 -> com.ds.avare.df:
    com.ds.avare.PlatesActivity this$0 -> bY
    void <init>(com.ds.avare.PlatesActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.PlatesActivity$5 -> com.ds.avare.dg:
    com.ds.avare.PlatesActivity this$0 -> bY
    void <init>(com.ds.avare.PlatesActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.PlatesActivity$6 -> com.ds.avare.dh:
    com.ds.avare.PlatesActivity this$0 -> bY
    void <init>(com.ds.avare.PlatesActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.PlatesActivity$6$1 -> com.ds.avare.di:
    com.ds.avare.PlatesActivity$6 this$1 -> ca
    void <init>(com.ds.avare.PlatesActivity$6) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.PlatesActivity$7 -> com.ds.avare.dj:
    com.ds.avare.PlatesActivity this$0 -> bY
    void <init>(com.ds.avare.PlatesActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.PlatesActivity$8 -> com.ds.avare.dk:
    com.ds.avare.PlatesActivity this$0 -> bY
    void <init>(com.ds.avare.PlatesActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.PlatesActivity$9 -> com.ds.avare.dl:
    com.ds.avare.PlatesActivity this$0 -> bY
    void <init>(com.ds.avare.PlatesActivity) -> <init>
    boolean accept(java.io.File,java.lang.String) -> accept
com.ds.avare.PlatesActivity$PlatesComparable -> com.ds.avare.dm:
    com.ds.avare.PlatesActivity this$0 -> bY
    void <init>(com.ds.avare.PlatesActivity) -> <init>
    void <init>(com.ds.avare.PlatesActivity,com.ds.avare.PlatesActivity$1) -> <init>
    int compare(java.lang.Object,java.lang.Object) -> compare
    int compare(java.lang.String,java.lang.String) -> compare
com.ds.avare.PlatesActivity$TankObserver -> com.ds.avare.dn:
    com.ds.avare.PlatesActivity this$0 -> bY
    void <init>(com.ds.avare.PlatesActivity) -> <init>
    void <init>(com.ds.avare.PlatesActivity,com.ds.avare.PlatesActivity$1) -> <init>
    void update(java.util.Observable,java.lang.Object) -> update
com.ds.avare.PlatesActivity$TankObserver$1 -> com.ds.avare.do:
    com.ds.avare.PlatesActivity$TankObserver this$1 -> cb
    com.ds.avare.instruments.FuelTimer val$fuelTimer -> bb
    void <init>(com.ds.avare.PlatesActivity$TankObserver,com.ds.avare.instruments.FuelTimer) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.PlatesTagActivity -> com.ds.avare.PlatesTagActivity:
    int MAX_DISTANCE_FROM_TOP -> cc
    int MIN_DISTANCE_FROM_TOP -> cd
    double MIN_SEPARATION -> ce
    double MIN_SEPARATION_COORD -> cf
    int POINTS -> cg
    android.os.AsyncTask mPlateTask -> ch
    java.lang.String mAirport -> ci
    android.app.AlertDialog mAlertDialog -> C
    android.widget.Button mClearButton -> cj
    android.content.ServiceConnection mConnection -> f
    com.ds.avare.place.Destination mDest -> bO
    double mDx -> ck
    double mDy -> cl
    android.widget.Button mGeotagButton -> cm
    com.ds.avare.gps.GpsInterface mGpsInfc -> i
    double mLatTopLeft -> cn
    double mLonTopLeft -> co
    java.lang.String mName -> mName
    com.ds.avare.views.PlatesTagView mPlatesView -> cp
    com.ds.avare.position.PixelCoordinate[] mPoint -> cq
    com.ds.avare.position.Coordinate[] mPointLL -> cr
    com.ds.avare.storage.Preferences mPref -> m
    android.widget.Button mReportButton -> cs
    com.ds.avare.StorageService mService -> n
    android.widget.Button mShareButton -> ct
    android.widget.Spinner mSpinner -> br
    boolean mTagged -> cu
    java.util.LinkedList mTags -> cv
    android.widget.EditText mText -> cw
    android.widget.Toast mToast -> o
    android.widget.Button mVerifyButton -> cx
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    boolean access$000(com.ds.avare.PlatesTagActivity) -> a
    boolean access$002(com.ds.avare.PlatesTagActivity,boolean) -> a
    android.widget.Toast access$100(com.ds.avare.PlatesTagActivity) -> b
    double access$1000(com.ds.avare.PlatesTagActivity) -> c
    double access$1002(com.ds.avare.PlatesTagActivity,double) -> a
    double access$1100(com.ds.avare.PlatesTagActivity) -> d
    double access$1102(com.ds.avare.PlatesTagActivity,double) -> b
    com.ds.avare.place.Destination access$1200(com.ds.avare.PlatesTagActivity) -> e
    com.ds.avare.place.Destination access$1202(com.ds.avare.PlatesTagActivity,com.ds.avare.place.Destination) -> a
    void access$1300(com.ds.avare.PlatesTagActivity) -> f
    void access$1400(com.ds.avare.PlatesTagActivity) -> g
    void access$1500(com.ds.avare.PlatesTagActivity) -> h
    android.app.AlertDialog access$1600(com.ds.avare.PlatesTagActivity) -> i
    android.app.AlertDialog access$1602(com.ds.avare.PlatesTagActivity,android.app.AlertDialog) -> a
    java.lang.String access$1700(com.ds.avare.PlatesTagActivity) -> j
    java.lang.String access$1702(com.ds.avare.PlatesTagActivity,java.lang.String) -> a
    com.ds.avare.storage.Preferences access$1800(com.ds.avare.PlatesTagActivity) -> k
    void access$1900(com.ds.avare.PlatesTagActivity) -> l
    android.widget.EditText access$200(com.ds.avare.PlatesTagActivity) -> m
    com.ds.avare.gps.GpsInterface access$2000(com.ds.avare.PlatesTagActivity) -> n
    java.lang.String access$2100(com.ds.avare.PlatesTagActivity) -> o
    java.lang.String access$2102(com.ds.avare.PlatesTagActivity,java.lang.String) -> b
    java.util.LinkedList access$2200(com.ds.avare.PlatesTagActivity) -> p
    android.widget.Spinner access$300(com.ds.avare.PlatesTagActivity) -> q
    com.ds.avare.StorageService access$400(com.ds.avare.PlatesTagActivity) -> r
    com.ds.avare.StorageService access$402(com.ds.avare.PlatesTagActivity,com.ds.avare.StorageService) -> a
    com.ds.avare.position.PixelCoordinate[] access$500(com.ds.avare.PlatesTagActivity) -> s
    com.ds.avare.views.PlatesTagView access$600(com.ds.avare.PlatesTagActivity) -> t
    com.ds.avare.position.Coordinate[] access$700(com.ds.avare.PlatesTagActivity) -> u
    double access$800(com.ds.avare.PlatesTagActivity) -> v
    double access$802(com.ds.avare.PlatesTagActivity,double) -> c
    double access$900(com.ds.avare.PlatesTagActivity) -> w
    double access$902(com.ds.avare.PlatesTagActivity,double) -> d
    void clear() -> clear
    void clearParams() -> o
    void drawAirport() -> p
    java.lang.String getNameFromPath(java.lang.String) -> e
    java.util.LinkedList getTagsStorageFromat(java.lang.String) -> f
    java.lang.String putTagsToStorageFormat(java.util.LinkedList) -> a
    void store() -> q
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onResume() -> onResume
    void update(java.util.Observable,java.lang.Object) -> update
com.ds.avare.PlatesTagActivity$1 -> com.ds.avare.dp:
    com.ds.avare.PlatesTagActivity this$0 -> cy
    void <init>(com.ds.avare.PlatesTagActivity) -> <init>
    void enabledCallback(boolean) -> a
    void locationCallback(android.location.Location) -> a
    void statusCallback(android.location.GpsStatus) -> a
    void timeoutCallback(boolean) -> b
com.ds.avare.PlatesTagActivity$2 -> com.ds.avare.dq:
    com.ds.avare.PlatesTagActivity this$0 -> cy
    void <init>(com.ds.avare.PlatesTagActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.PlatesTagActivity$3 -> com.ds.avare.dr:
    com.ds.avare.PlatesTagActivity this$0 -> cy
    void <init>(com.ds.avare.PlatesTagActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.PlatesTagActivity$4 -> com.ds.avare.ds:
    com.ds.avare.PlatesTagActivity this$0 -> cy
    void <init>(com.ds.avare.PlatesTagActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.PlatesTagActivity$5 -> com.ds.avare.dt:
    com.ds.avare.PlatesTagActivity this$0 -> cy
    void <init>(com.ds.avare.PlatesTagActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.PlatesTagActivity$5$1 -> com.ds.avare.du:
    com.ds.avare.PlatesTagActivity$5 this$1 -> cz
    void <init>(com.ds.avare.PlatesTagActivity$5) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.PlatesTagActivity$5$1$1 -> com.ds.avare.dv:
    java.lang.String err -> cA
    com.ds.avare.PlatesTagActivity$5$1 this$2 -> cB
    void <init>(com.ds.avare.PlatesTagActivity$5$1) -> <init>
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onProgressUpdate(java.lang.Void[]) -> b
com.ds.avare.PlatesTagActivity$5$1$1$1 -> com.ds.avare.dw:
    com.ds.avare.PlatesTagActivity$5$1$1 this$3 -> cC
    void <init>(com.ds.avare.PlatesTagActivity$5$1$1) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.PlatesTagActivity$5$2 -> com.ds.avare.dx:
    com.ds.avare.PlatesTagActivity$5 this$1 -> cz
    void <init>(com.ds.avare.PlatesTagActivity$5) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.PlatesTagActivity$6 -> com.ds.avare.dy:
    com.ds.avare.PlatesTagActivity this$0 -> cy
    void <init>(com.ds.avare.PlatesTagActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.PlatesTagActivity$6$1 -> com.ds.avare.dz:
    com.ds.avare.PlatesTagActivity$6 this$1 -> cD
    void <init>(com.ds.avare.PlatesTagActivity$6) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.PlatesTagActivity$6$1$1 -> com.ds.avare.ea:
    java.lang.String ret -> cE
    com.ds.avare.PlatesTagActivity$6$1 this$2 -> cF
    void <init>(com.ds.avare.PlatesTagActivity$6$1) -> <init>
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onProgressUpdate(java.lang.Void[]) -> b
com.ds.avare.PlatesTagActivity$6$2 -> com.ds.avare.eb:
    com.ds.avare.PlatesTagActivity$6 this$1 -> cD
    void <init>(com.ds.avare.PlatesTagActivity$6) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.PlatesTagActivity$7 -> com.ds.avare.ec:
    com.ds.avare.PlatesTagActivity this$0 -> cy
    void <init>(com.ds.avare.PlatesTagActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.PlatesTagActivity$7$1 -> com.ds.avare.ed:
    com.ds.avare.PlatesTagActivity$7 this$1 -> cG
    void <init>(com.ds.avare.PlatesTagActivity$7) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.PlatesTagActivity$7$2 -> com.ds.avare.ee:
    com.ds.avare.PlatesTagActivity$7 this$1 -> cG
    void <init>(com.ds.avare.PlatesTagActivity$7) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.PlatesTagActivity$8 -> com.ds.avare.ef:
    com.ds.avare.PlatesTagActivity this$0 -> cy
    void <init>(com.ds.avare.PlatesTagActivity) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.ds.avare.PlatesTagActivity$8$1 -> com.ds.avare.eg:
    com.ds.avare.PlatesTagActivity$8 this$1 -> cH
    void <init>(com.ds.avare.PlatesTagActivity$8) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.PlatesTagActivity$8$2 -> com.ds.avare.eh:
    com.ds.avare.PlatesTagActivity$8 this$1 -> cH
    void <init>(com.ds.avare.PlatesTagActivity$8) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.PrefActivity -> com.ds.avare.PrefActivity:
    android.content.ServiceConnection mConnection -> f
    com.ds.avare.gps.GpsInterface mGpsInfc -> i
    com.ds.avare.StorageService mService -> n
    void <init>() -> <init>
    com.ds.avare.StorageService access$000(com.ds.avare.PrefActivity) -> a
    com.ds.avare.StorageService access$002(com.ds.avare.PrefActivity,com.ds.avare.StorageService) -> a
    com.ds.avare.gps.GpsInterface access$100(com.ds.avare.PrefActivity) -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onResume() -> onResume
com.ds.avare.PrefActivity$1 -> com.ds.avare.ei:
    com.ds.avare.PrefActivity this$0 -> cI
    void <init>(com.ds.avare.PrefActivity) -> <init>
    void enabledCallback(boolean) -> a
    void locationCallback(android.location.Location) -> a
    void statusCallback(android.location.GpsStatus) -> a
    void timeoutCallback(boolean) -> b
com.ds.avare.PrefActivity$2 -> com.ds.avare.ej:
    com.ds.avare.PrefActivity this$0 -> cI
    void <init>(com.ds.avare.PrefActivity) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.ds.avare.R -> com.ds.avare.ek:
    void <init>() -> <init>
com.ds.avare.R$anim -> com.ds.avare.R$anim:
    int xlate_left -> xlate_left
    int xlate_left_delay -> xlate_left_delay
    int xlate_left_end -> xlate_left_end
    int xlate_right -> xlate_right
    int xlate_right_end -> xlate_right_end
    int xlate_right_end_delay -> xlate_right_end_delay
    int xlate_up -> xlate_up
    int xlate_up_end -> xlate_up_end
    void <init>() -> <init>
com.ds.avare.R$array -> com.ds.avare.R$array:
    int AdsOptions -> AdsOptions
    int AirSig -> AirSig
    int AirSigColor -> AirSigColor
    int AutoPostTracksPrompts -> AutoPostTracksPrompts
    int AutoPostTracksValues -> AutoPostTracksValues
    int ChartDbNames -> ChartDbNames
    int ChartType -> ChartType
    int ChartTypeValues -> ChartTypeValues
    int CyclePrompt -> CyclePrompt
    int CycleValues -> CycleValues
    int DisplayIconPrompt -> DisplayIconPrompt
    int DisplayIconValues -> DisplayIconValues
    int DistanceRingColors -> DistanceRingColors
    int DistanceRingTypePrompts -> DistanceRingTypePrompts
    int DistanceRingTypeValues -> DistanceRingTypeValues
    int FuelType -> FuelType
    int GpsPosition -> GpsPosition
    int GpsPositionValues -> GpsPositionValues
    int Opacity -> Opacity
    int OpacityValues -> OpacityValues
    int Orientation -> Orientation
    int PointType -> PointType
    int RunwayLengths -> RunwayLengths
    int Server -> Server
    int ServerValues -> ServerValues
    int TextFieldOptionTitles -> TextFieldOptionTitles
    int TextFieldOptions -> TextFieldOptions
    int TimerRingSizePrompt -> TimerRingSizePrompt
    int TimerRingSizeValues -> TimerRingSizeValues
    int UnitsD -> UnitsD
    int UnitsDValues -> UnitsDValues
    int hotel_age_child -> hotel_age_child
    int hotel_count_adults -> hotel_count_adults
    int hotel_max_price -> hotel_max_price
    int hotel_max_radius -> hotel_max_radius
    int hotel_min_stars -> hotel_min_stars
    int resFilesAFD -> resFilesAFD
    int resFilesDatabase -> resFilesDatabase
    int resFilesHeli -> resFilesHeli
    int resFilesIFRArea -> resFilesIFRArea
    int resFilesIFRHE -> resFilesIFRHE
    int resFilesIFRLE -> resFilesIFRLE
    int resFilesPlate -> resFilesPlate
    int resFilesSectional -> resFilesSectional
    int resFilesTAC -> resFilesTAC
    int resFilesTerrain -> resFilesTerrain
    int resFilesTopo -> resFilesTopo
    int resFilesVFRAreaPlate -> resFilesVFRAreaPlate
    int resFilesWAC -> resFilesWAC
    int resFilesWeather -> resFilesWeather
    int resGroups -> resGroups
    int resGroupsPopout -> resGroupsPopout
    int resNameAFD -> resNameAFD
    int resNameDatabase -> resNameDatabase
    int resNameHeli -> resNameHeli
    int resNameIFRArea -> resNameIFRArea
    int resNameIFRHE -> resNameIFRHE
    int resNameIFRLE -> resNameIFRLE
    int resNamePlate -> resNamePlate
    int resNameSectional -> resNameSectional
    int resNameTAC -> resNameTAC
    int resNameTerrain -> resNameTerrain
    int resNameTopo -> resNameTopo
    int resNameVFRAreaPlate -> resNameVFRAreaPlate
    int resNameWAC -> resNameWAC
    int resNameWeather -> resNameWeather
    void <init>() -> <init>
com.ds.avare.R$attr -> com.ds.avare.R$attr:
    void <init>() -> <init>
com.ds.avare.R$dimen -> com.ds.avare.R$dimen:
    int TextSize -> TextSize
    int distanceRingNumberTextSize -> distanceRingNumberTextSize
    int runwayNumberTextSize -> runwayNumberTextSize
    void <init>() -> <init>
com.ds.avare.R$drawable -> com.ds.avare.R$drawable:
    int add -> add
    int aircraft -> aircraft
    int airport -> airport
    int bg_selected -> bg_selected
    int bg_selector -> bg_selector
    int bg_unselected -> bg_unselected
    int border -> border
    int border_green_small -> border_green_small
    int border_red_small -> border_red_small
    int border_transparent -> border_transparent
    int canard -> canard
    int check -> check
    int check_red -> check_red
    int delete -> delete
    int direct -> direct
    int directory_icon -> directory_icon
    int directory_up -> directory_up
    int download -> download
    int edit -> edit
    int erase -> erase
    int file_icon -> file_icon
    int fix -> fix
    int flag -> flag
    int geo -> geo
    int glide -> glide
    int heli -> heli
    int help -> help
    int left -> left
    int line -> line
    int line_heading -> line_heading
    int lock_pink -> lock_pink
    int maps -> maps
    int marker -> marker
    int ndb -> ndb
    int ndbdme -> ndbdme
    int no -> no
    int nochart -> nochart
    int obstacle -> obstacle
    int plan -> plan
    int plane -> plane
    int plane_green -> plane_green
    int planeother -> planeother
    int plates -> plates
    int pushpin -> pushpin
    int remove -> remove
    int right -> right
    int runway_extension -> runway_extension
    int settings -> settings
    int tacan -> tacan
    int text_selector -> text_selector
    int vor -> vor
    int vordme -> vordme
    int vortac -> vortac
    int vot -> vot
    int web -> web
    int white_square -> white_square
    void <init>() -> <init>
com.ds.avare.R$id -> com.ds.avare.R$id:
    int airport_afd -> airport_afd
    int airport_button_airports -> airport_button_airports
    int airport_button_center -> airport_button_center
    int airport_button_views -> airport_button_views
    int airport_list -> airport_list
    int btn_register -> btn_register
    int btn_unregister -> btn_unregister
    int chart_download_button_delete -> chart_download_button_delete
    int chart_download_button_dl -> chart_download_button_dl
    int chart_download_button_lo -> chart_download_button_lo
    int chart_download_button_update -> chart_download_button_update
    int chart_download_list -> chart_download_list
    int chart_download_list_image -> chart_download_list_image
    int chart_download_list_item -> chart_download_list_item
    int chart_download_list_state -> chart_download_list_state
    int comments_submit_airport -> comments_submit_airport
    int comments_submit_button_submit -> comments_submit_button_submit
    int comments_submit_comments -> comments_submit_comments
    int comments_submit_log -> comments_submit_log
    int comments_submit_ratingbar -> comments_submit_ratingbar
    int folder_button_external -> folder_button_external
    int folder_button_internal -> folder_button_internal
    int folder_list -> folder_list
    int folder_text_path -> folder_text_path
    int fuel_submit_airport -> fuel_submit_airport
    int fuel_submit_button_submit -> fuel_submit_button_submit
    int fuel_submit_fbo -> fuel_submit_fbo
    int fuel_submit_fueltype -> fuel_submit_fueltype
    int fuel_submit_log -> fuel_submit_log
    int fuel_submit_price -> fuel_submit_price
    int hotel_adults -> hotel_adults
    int hotel_child_1 -> hotel_child_1
    int hotel_child_2 -> hotel_child_2
    int hotel_child_3 -> hotel_child_3
    int hotel_child_4 -> hotel_child_4
    int hotel_child_5 -> hotel_child_5
    int hotel_datefrom_text -> hotel_datefrom_text
    int hotel_dateto_text -> hotel_dateto_text
    int hotel_layout_ac1 -> hotel_layout_ac1
    int hotel_layout_ac1_text -> hotel_layout_ac1_text
    int hotel_layout_ac2 -> hotel_layout_ac2
    int hotel_layout_ac2_text -> hotel_layout_ac2_text
    int hotel_layout_date -> hotel_layout_date
    int hotel_layout_date_text -> hotel_layout_date_text
    int hotel_layout_type -> hotel_layout_type
    int hotel_layout_type_text -> hotel_layout_type_text
    int hotel_price -> hotel_price
    int hotel_radius -> hotel_radius
    int hotel_stars -> hotel_stars
    int list_bottom_buttons -> list_bottom_buttons
    int list_button_back -> list_button_back
    int list_button_forward -> list_button_forward
    int list_load_progress -> list_load_progress
    int list_mainpage -> list_mainpage
    int list_progress_bar -> list_progress_bar
    int location -> location
    int location_button_ads -> location_button_ads
    int location_button_afd -> location_button_afd
    int location_button_center -> location_button_center
    int location_button_cross -> location_button_cross
    int location_button_dest -> location_button_dest
    int location_button_dl -> location_button_dl
    int location_button_draw -> location_button_draw
    int location_button_draw_clear -> location_button_draw_clear
    int location_button_help -> location_button_help
    int location_button_menu -> location_button_menu
    int location_button_plan -> location_button_plan
    int location_button_plate -> location_button_plate
    int location_button_pref -> location_button_pref
    int location_button_sim -> location_button_sim
    int location_button_track -> location_button_track
    int location_button_tracks -> location_button_tracks
    int location_list_popout -> location_list_popout
    int location_popout_buttons -> location_popout_buttons
    int location_popout_layout -> location_popout_layout
    int location_seekbar_threshold -> location_seekbar_threshold
    int location_spinner_chart -> location_spinner_chart
    int log_text -> log_text
    int longitudems -> longitudems
    int lonlat_button_cancel -> lonlat_button_cancel
    int lonlat_button_ok -> lonlat_button_ok
    int lonlat_latitude -> lonlat_latitude
    int lonlat_latitude_ms -> lonlat_latitude_ms
    int lonlat_longitude -> lonlat_longitude
    int lonlat_longitude_ms -> lonlat_longitude_ms
    int lonlat_textview_degree0 -> lonlat_textview_degree0
    int lonlat_textview_degree1 -> lonlat_textview_degree1
    int lonlat_textview_degree2 -> lonlat_textview_degree2
    int lonlat_textview_degree3 -> lonlat_textview_degree3
    int memory -> memory
    int message_mainpage -> message_mainpage
    int message_type -> message_type
    int nearest_button_2 -> nearest_button_2
    int nearest_button_2000 -> nearest_button_2000
    int nearest_button_3 -> nearest_button_3
    int nearest_button_4000 -> nearest_button_4000
    int nearest_button_6000 -> nearest_button_6000
    int nearest_button_dest -> nearest_button_dest
    int nearest_button_fuel -> nearest_button_fuel
    int nearest_button_gr -> nearest_button_gr
    int nearest_button_plates -> nearest_button_plates
    int nearest_layout_runway -> nearest_layout_runway
    int nearest_list -> nearest_list
    int nearest_list_aid_name -> nearest_list_aid_name
    int nearest_list_bearing -> nearest_list_bearing
    int nearest_list_distance -> nearest_list_distance
    int nearest_list_elevation -> nearest_list_elevation
    int plan_bottom_buttons -> plan_bottom_buttons
    int plan_button_activate -> plan_button_activate
    int plan_button_back -> plan_button_back
    int plan_button_forward -> plan_button_forward
    int plan_load_progress -> plan_load_progress
    int plan_mainpage -> plan_mainpage
    int plan_next -> plan_next
    int plan_pause -> plan_pause
    int plan_prev -> plan_prev
    int plate_button_draw -> plate_button_draw
    int plate_button_draw_clear -> plate_button_draw_clear
    int plates -> plates
    int plates_button_airports -> plates_button_airports
    int plates_button_center -> plates_button_center
    int plates_button_plates -> plates_button_plates
    int plates_button_tag -> plates_button_tag
    int plates_button_timer -> plates_button_timer
    int plates_chronometer -> plates_chronometer
    int plates_header -> plates_header
    int platestag_button_clear -> platestag_button_clear
    int platestag_button_report -> platestag_button_report
    int platestag_button_share -> platestag_button_share
    int platestag_button_tag -> platestag_button_tag
    int platestag_button_verify -> platestag_button_verify
    int platestag_spinner -> platestag_spinner
    int platestag_text_input -> platestag_text_input
    int platestag_view -> platestag_view
    int platestag_view_tag -> platestag_view_tag
    int privacy -> privacy
    int satellite -> satellite
    int satellite_slider -> satellite_slider
    int satellite_text_brightness -> satellite_text_brightness
    int satellite_text_gps_details -> satellite_text_gps_details
    int satellite_text_map_details -> satellite_text_map_details
    int satellite_text_mem_details -> satellite_text_mem_details
    int search_button_delete -> search_button_delete
    int search_button_note -> search_button_note
    int search_button_plan -> search_button_plan
    int search_button_plates -> search_button_plates
    int search_edit_text -> search_edit_text
    int search_list_image -> search_list_image
    int search_list_name -> search_list_name
    int search_list_text -> search_list_text
    int search_list_view -> search_list_view
    int search_progress_bar -> search_progress_bar
    int spinner_register -> spinner_register
    int tabs_bg -> tabs_bg
    int tabs_text -> tabs_text
    int tabscroll -> tabscroll
    int textview_textview -> textview_textview
    int textview_textview_wrap -> textview_textview_wrap
    int textview_wrap_action -> textview_wrap_action
    int tools_table_row1 -> tools_table_row1
    int tools_table_row2 -> tools_table_row2
    int tools_table_row3 -> tools_table_row3
    int tools_table_row4 -> tools_table_row4
    int trip_button_find -> trip_button_find
    int trip_button_last -> trip_button_last
    int trip_button_next -> trip_button_next
    int trip_edit_text -> trip_edit_text
    int trip_load_progress -> trip_load_progress
    int trip_mainpage -> trip_mainpage
    int trip_progress_bar -> trip_progress_bar
    int typevalue_type -> typevalue_type
    int typevalue_value -> typevalue_value
    int weather_load_progress -> weather_load_progress
    int weather_mainpage -> weather_mainpage
    int web_button_last -> web_button_last
    int web_button_next -> web_button_next
    int web_edit_text -> web_edit_text
    int web_mainpage -> web_mainpage
    int web_progress_bar -> web_progress_bar
    void <init>() -> <init>
com.ds.avare.R$layout -> com.ds.avare.R$layout:
    int activity_register -> activity_register
    int airport -> airport
    int chart_download -> chart_download
    int chart_download_list -> chart_download_list
    int checklist -> checklist
    int comments_submit -> comments_submit
    int folder -> folder
    int fuel_submit -> fuel_submit
    int hotel -> hotel
    int input -> input
    int location -> location
    int lonlat -> lonlat
    int main -> main
    int message -> message
    int nearest -> nearest
    int nearest_list -> nearest_list
    int plan -> plan
    int plates -> plates
    int platestag -> platestag
    int preferences -> preferences
    int privacy -> privacy
    int satellite -> satellite
    int search -> search
    int search_list -> search_list
    int tabs_bg -> tabs_bg
    int textview -> textview
    int textview_wrap -> textview_wrap
    int trip -> trip
    int typevalue -> typevalue
    int weather -> weather
    int web -> web
    void <init>() -> <init>
com.ds.avare.R$string -> com.ds.avare.R$string:
    int ADS -> ADS
    int ADSBTraffic -> ADSBTraffic
    int ADSBTrafficLabel -> ADSBTrafficLabel
    int ADSBTrafficSummary -> ADSBTrafficSummary
    int ADSBWeather -> ADSBWeather
    int ADSBWeatherLabel -> ADSBWeatherLabel
    int ADSBWeatherSummary -> ADSBWeatherSummary
    int AFD -> AFD
    int AFDSummary -> AFDSummary
    int APRatings -> APRatings
    int Active -> Active
    int Add -> Add
    int AddAction -> AddAction
    int AddPlan -> AddPlan
    int AddPlanHelp -> AddPlanHelp
    int AddedPoint -> AddedPoint
    int Advertisements -> Advertisements
    int Agree -> Agree
    int AirDia -> AirDia
    int AirSigType -> AirSigType
    int AirSigTypeLabel -> AirSigTypeLabel
    int AirSigTypeSummary -> AirSigTypeSummary
    int AllFacilities -> AllFacilities
    int AllFacilitiesLabel -> AllFacilitiesLabel
    int AllFacilitiesSummary -> AllFacilitiesSummary
    int AlreadyTagged -> AlreadyTagged
    int Altitude -> Altitude
    int AltitudeAccuracy -> AltitudeAccuracy
    int AndLoad -> AndLoad
    int AreaNF -> AreaNF
    int AutoPostTracksDialogText -> AutoPostTracksDialogText
    int AutoPostTracksLabel -> AutoPostTracksLabel
    int AutoPostTracksSubject -> AutoPostTracksSubject
    int AutoPostTracksSummary -> AutoPostTracksSummary
    int AutoPostTracksTitle -> AutoPostTracksTitle
    int AutoShowAirportDiagram -> AutoShowAirportDiagram
    int AutoShowAirportDiagramLabel -> AutoShowAirportDiagramLabel
    int AutoShowAirportDiagramSummary -> AutoShowAirportDiagramSummary
    int AvailableMem -> AvailableMem
    int Back -> Back
    int Background -> Background
    int BackgroundLabel -> BackgroundLabel
    int BackgroundSummary -> BackgroundSummary
    int BadCoords -> BadCoords
    int BestRunway -> BestRunway
    int CAPGrid -> CAPGrid
    int CAPGridLabel -> CAPGridLabel
    int CAPGridSummary -> CAPGridSummary
    int Calibrate -> Calibrate
    int Cancel -> Cancel
    int ChartType -> ChartType
    int ChartTypeLabel -> ChartTypeLabel
    int ChartTypeSummary -> ChartTypeSummary
    int ChecklistSummary -> ChecklistSummary
    int Clear -> Clear
    int Cleared -> Cleared
    int ClearedPrompt -> ClearedPrompt
    int Create -> Create
    int CurrentChecklistName -> CurrentChecklistName
    int CurrentPlanName -> CurrentPlanName
    int CurrentlySetTo -> CurrentlySetTo
    int Cycle -> Cycle
    int CycleLabel -> CycleLabel
    int CycleSummary -> CycleSummary
    int Delete -> Delete
    int DeleteListQuestion -> DeleteListQuestion
    int DensityAltitude -> DensityAltitude
    int Destination -> Destination
    int DestinationNF -> DestinationNF
    int DestinationPrompt -> DestinationPrompt
    int DestinationSet -> DestinationSet
    int DisplayIcon -> DisplayIcon
    int DisplayIconLabel -> DisplayIconLabel
    int DisplayIconSummary -> DisplayIconSummary
    int DistKilometer -> DistKilometer
    int DistKnot -> DistKnot
    int DistMile -> DistMile
    int DistanceRingColorsLabel -> DistanceRingColorsLabel
    int DistanceRingColorsSummary -> DistanceRingColorsSummary
    int DistanceRingTypeLabel -> DistanceRingTypeLabel
    int DistanceRingTypeSummary -> DistanceRingTypeSummary
    int Done -> Done
    int DownloadDB -> DownloadDB
    int DownloadDBShort -> DownloadDBShort
    int DownloadInst -> DownloadInst
    int Downloading -> Downloading
    int Draw -> Draw
    int ETABearing -> ETABearing
    int ETABearingLabel -> ETABearingLabel
    int ETABearingSummary -> ETABearingSummary
    int EdgeTape -> EdgeTape
    int EdgeTapeLabel -> EdgeTapeLabel
    int EdgeTapeSummary -> EdgeTapeSummary
    int Edit -> Edit
    int Email -> Email
    int EnoughPoints -> EnoughPoints
    int Exit -> Exit
    int ExtendInfoLines -> ExtendInfoLines
    int ExtendInfoLinesLabel -> ExtendInfoLinesLabel
    int ExtendInfoLinesSummary -> ExtendInfoLinesSummary
    int ExternalFolder -> ExternalFolder
    int Extracting -> Extracting
    int FBO -> FBO
    int Failed -> Failed
    int FileStore -> FileStore
    int FileStoreInvalid -> FileStoreInvalid
    int Find -> Find
    int FindSummary -> FindSummary
    int Fuel -> Fuel
    int FuelCost -> FuelCost
    int GPS -> GPS
    int GPSEnable -> GPSEnable
    int GPSLost -> GPSLost
    int GPSSummary -> GPSSummary
    int GameTFR -> GameTFR
    int GameTFRLabel -> GameTFRLabel
    int GameTFRSummary -> GameTFRSummary
    int GeoCode -> GeoCode
    int GeoCodeLabel -> GeoCodeLabel
    int GeoCodeSummary -> GeoCodeSummary
    int GeoRefPlates -> GeoRefPlates
    int GeoShareDone -> GeoShareDone
    int GeoShareFailed -> GeoShareFailed
    int GeoShareReportFailed -> GeoShareReportFailed
    int GeoShareReportOK -> GeoShareReportOK
    int GeoShareReportPrompt -> GeoShareReportPrompt
    int GeoShareText -> GeoShareText
    int GeoShareTextAll -> GeoShareTextAll
    int Geotag -> Geotag
    int Get -> Get
    int GetWeather -> GetWeather
    int GlideRatio -> GlideRatio
    int GlideRatioLabel -> GlideRatioLabel
    int GlideRatioSummary -> GlideRatioSummary
    int GoodCoords -> GoodCoords
    int GpsOffWarn -> GpsOffWarn
    int GpsOffWarnLabel -> GpsOffWarnLabel
    int GpsOffWarnSummary -> GpsOffWarnSummary
    int GpsOnly -> GpsOnly
    int GpsTime -> GpsTime
    int GpsTimeLabel -> GpsTimeLabel
    int GpsTimeSummary -> GpsTimeSummary
    int Help -> Help
    int Hotels -> Hotels
    int IconHelicopter -> IconHelicopter
    int IconHelicopterLabel -> IconHelicopterLabel
    int IconHelicopterSummary -> IconHelicopterSummary
    int Import -> Import
    int ImportAction -> ImportAction
    int ImportActionFilePath -> ImportActionFilePath
    int Inactive -> Inactive
    int IncorrectDateFormat -> IncorrectDateFormat
    int Init -> Init
    int InstallPDF -> InstallPDF
    int Instrumentation -> Instrumentation
    int InternalGpsStatus -> InternalGpsStatus
    int InvalidComments -> InvalidComments
    int InvalidFBO -> InvalidFBO
    int InvalidPoint -> InvalidPoint
    int InvalidPrice -> InvalidPrice
    int InvalidText -> InvalidText
    int Label -> Label
    int Last -> Last
    int Lat -> Lat
    int LatitudeLongitude -> LatitudeLongitude
    int LeaveRunning -> LeaveRunning
    int LeaveRunningLabel -> LeaveRunningLabel
    int LeaveRunningSummary -> LeaveRunningSummary
    int Left -> Left
    int List -> List
    int Load -> Load
    int LoadReverse -> LoadReverse
    int LoadingMaps -> LoadingMaps
    int Locked -> Locked
    int Lon -> Lon
    int Main -> Main
    int MapSize -> MapSize
    int Maps -> Maps
    int MapsLabel -> MapsLabel
    int MapsSummary -> MapsSummary
    int MissingMaps -> MissingMaps
    int Navigate -> Navigate
    int Near -> Near
    int NearSummary -> NearSummary
    int Nearest -> Nearest
    int Nearest100LL -> Nearest100LL
    int Nearest2000 -> Nearest2000
    int Nearest4000 -> Nearest4000
    int Nearest6000 -> Nearest6000
    int Next -> Next
    int NightMode -> NightMode
    int NightModeLabel -> NightModeLabel
    int NightModeSummary -> NightModeSummary
    int No -> No
    int NorthUp -> NorthUp
    int NotAvailable -> NotAvailable
    int NotGlideRange -> NotGlideRange
    int NotTagged -> NotTagged
    int NotamsBrowser -> NotamsBrowser
    int NotamsError -> NotamsError
    int NotamsPlan -> NotamsPlan
    int OK -> OK
    int Obstacles -> Obstacles
    int ObstaclesLabel -> ObstaclesLabel
    int ObstaclesSummary -> ObstaclesSummary
    int OrientationP -> OrientationP
    int OrientationPLabel -> OrientationPLabel
    int OrientationPSummary -> OrientationPSummary
    int Pan -> Pan
    int Plan -> Plan
    int PlanDestinationNF -> PlanDestinationNF
    int PlanNoset -> PlanNoset
    int PlanPrompt -> PlanPrompt
    int PlanSet -> PlanSet
    int PlanSummary -> PlanSummary
    int PlanWarning -> PlanWarning
    int Plates -> Plates
    int PlatesNF -> PlatesNF
    int PlatesSummary -> PlatesSummary
    int PointName -> PointName
    int PointNotFound -> PointNotFound
    int PointsTooClose -> PointsTooClose
    int Previous -> Previous
    int PrivateFolder -> PrivateFolder
    int Provider -> Provider
    int Radar -> Radar
    int RadarLabel -> RadarLabel
    int RadarSummary -> RadarSummary
    int Ratings -> Ratings
    int Recent -> Recent
    int Report -> Report
    int Right -> Right
    int Root -> Root
    int RootLabel -> RootLabel
    int RootSummary -> RootSummary
    int Runways -> Runways
    int RunwaysLabel -> RunwaysLabel
    int RunwaysSummary -> RunwaysSummary
    int Save -> Save
    int SavedChecklist -> SavedChecklist
    int SavedLists -> SavedLists
    int SavedPlan -> SavedPlan
    int ScreenBrightness -> ScreenBrightness
    int ScreenOn -> ScreenOn
    int ScreenOnLabel -> ScreenOnLabel
    int ScreenOnSummary -> ScreenOnSummary
    int ScreenSize -> ScreenSize
    int Search -> Search
    int Searching -> Searching
    int SelectOtherPoint -> SelectOtherPoint
    int SelectPlate -> SelectPlate
    int SelectTextFieldTitle -> SelectTextFieldTitle
    int Set -> Set
    int Settings -> Settings
    int Share -> Share
    int Sharing -> Sharing
    int SharingReport -> SharingReport
    int ShortDestination -> ShortDestination
    int ShowCDILabel -> ShowCDILabel
    int ShowCDISummary -> ShowCDISummary
    int ShowTrack -> ShowTrack
    int ShowTrackLabel -> ShowTrackLabel
    int ShowTrackSummary -> ShowTrackSummary
    int SimulationMode -> SimulationMode
    int SpeedKilometer -> SpeedKilometer
    int SpeedKnot -> SpeedKnot
    int SpeedMile -> SpeedMile
    int Stars -> Stars
    int StoredPlans -> StoredPlans
    int Success -> Success
    int TFRReceived -> TFRReceived
    int TFRs -> TFRs
    int TabBarSummary -> TabBarSummary
    int TabBarTitle -> TabBarTitle
    int Tag -> Tag
    int Tagged -> Tagged
    int Time -> Time
    int Timer -> Timer
    int TimerRingSizeLabel -> TimerRingSizeLabel
    int TimerRingSizeSummary -> TimerRingSizeSummary
    int To -> To
    int ToTag -> ToTag
    int Tools -> Tools
    int Total -> Total
    int TrackUp -> TrackUp
    int TracksOff -> TracksOff
    int TracksOn -> TracksOn
    int Trip -> Trip
    int TripSummary -> TripSummary
    int TrkUpdAllow -> TrkUpdAllow
    int TrkUpdAllowLabel -> TrkUpdAllowLabel
    int TrkUpdAllowSummary -> TrkUpdAllowSummary
    int TrkUpdShowHistory -> TrkUpdShowHistory
    int TrkUpdShowHistoryLabel -> TrkUpdShowHistoryLabel
    int TrkUpdShowHistorySummary -> TrkUpdShowHistorySummary
    int Trying -> Trying
    int UDWDescription -> UDWDescription
    int UDWLabel -> UDWLabel
    int UDWLocation -> UDWLocation
    int UDWSearch -> UDWSearch
    int UDWSummary -> UDWSummary
    int Understand -> Understand
    int UnitKilometer -> UnitKilometer
    int UnitKnot -> UnitKnot
    int UnitMile -> UnitMile
    int Units -> Units
    int UnitsLabel -> UnitsLabel
    int UnitsSummary -> UnitsSummary
    int Up -> Up
    int UseDynamicFieldsLabel -> UseDynamicFieldsLabel
    int UseDynamicFieldsSummary -> UseDynamicFieldsSummary
    int ValidDest -> ValidDest
    int Verify -> Verify
    int VerifyMessage -> VerifyMessage
    int VsFpm -> VsFpm
    int WXB -> WXB
    int WXSummary -> WXSummary
    int WarningMsg -> WarningMsg
    int WeatherBrowser -> WeatherBrowser
    int WeatherError -> WeatherError
    int WeatherPlan -> WeatherPlan
    int XlateWeather -> XlateWeather
    int XlateWeatherLabel -> XlateWeatherLabel
    int XlateWeatherSummary -> XlateWeatherSummary
    int Yes -> Yes
    int Zero -> Zero
    int accuracy -> accuracy
    int already_registered -> already_registered
    int already_unregistered -> already_unregistered
    int app_name -> app_name
    int blinkScreen -> blinkScreen
    int blinkScreenLabel -> blinkScreenLabel
    int blinkScreenSummary -> blinkScreenSummary
    int calibratethis -> calibratethis
    int databases -> databases
    int degree -> degree
    int desc -> desc
    int download -> download
    int error -> error
    int error_email -> error_email
    int error_internet -> error_internet
    int externalGps -> externalGps
    int externalGpsLabel -> externalGpsLabel
    int externalGpsSummary -> externalGpsSummary
    int failed_register -> failed_register
    int failed_unregister -> failed_unregister
    int folderHelp -> folderHelp
    int gt_sign -> gt_sign
    int lang -> lang
    int latitude -> latitude
    int listitem -> listitem
    int longitude -> longitude
    int lt_sign -> lt_sign
    int no -> no
    int noZoomIn -> noZoomIn
    int noZoomOut -> noZoomOut
    int online -> online
    int onlineSummary -> onlineSummary
    int prefAppStateCategoryTitle -> prefAppStateCategoryTitle
    int prefAutoPostTracks -> prefAutoPostTracks
    int prefDisplayCategoryTitle -> prefDisplayCategoryTitle
    int prefDistanceRingColors -> prefDistanceRingColors
    int prefDistanceRingType -> prefDistanceRingType
    int prefGetRowFormats -> prefGetRowFormats
    int prefGpsCategoryTitle -> prefGpsCategoryTitle
    int prefLastPlateAirport -> prefLastPlateAirport
    int prefLastPlateIndex -> prefLastPlateIndex
    int prefOdometer -> prefOdometer
    int prefPlanControl -> prefPlanControl
    int prefPlanControlLabel -> prefPlanControlLabel
    int prefPlanControlSummary -> prefPlanControlSummary
    int prefShowCDI -> prefShowCDI
    int prefStorageAndDownloadsCategoryTitle -> prefStorageAndDownloadsCategoryTitle
    int prefTabAFD -> prefTabAFD
    int prefTabChecklist -> prefTabChecklist
    int prefTabFind -> prefTabFind
    int prefTabNear -> prefTabNear
    int prefTabPlan -> prefTabPlan
    int prefTabPlates -> prefTabPlates
    int prefTabTools -> prefTabTools
    int prefTabTrip -> prefTabTrip
    int prefTabWX -> prefTabWX
    int prefTimerRingSize -> prefTimerRingSize
    int prefTracksCategoryTitle -> prefTracksCategoryTitle
    int prefUseDynamicFields -> prefUseDynamicFields
    int prefWeatherCategoryTitle -> prefWeatherCategoryTitle
    int register -> register
    int register_msg -> register_msg
    int registered -> registered
    int registering_server -> registering_server
    int rubberBand -> rubberBand
    int rubberBandLabel -> rubberBandLabel
    int rubberBandSummary -> rubberBandSummary
    int runwayLengths -> runwayLengths
    int runwayLengthsLabel -> runwayLengthsLabel
    int runwayLengthsSummary -> runwayLengthsSummary
    int switchTanks -> switchTanks
    int title_activity_main -> title_activity_main
    int unregister -> unregister
    int unregistered -> unregistered
    int unregistering_server -> unregistering_server
    int update -> update
    int weather -> weather
    int yes -> yes
    void <init>() -> <init>
com.ds.avare.R$style -> com.ds.avare.R$style:
    int AppTheme -> AppTheme
    void <init>() -> <init>
com.ds.avare.R$xml -> com.ds.avare.R$xml:
    int preferences -> preferences
    void <init>() -> <init>
com.ds.avare.RegisterActivity -> com.ds.avare.RegisterActivity:
    int BACKOFF_MILLI_SECONDS -> cJ
    int MAX_ATTEMPTS -> cK
    android.os.AsyncTask mRegisterTask -> cL
    android.widget.Button mButtonRegister -> cM
    android.widget.Button mButtonUnregister -> cN
    android.widget.Spinner mEmailSpinner -> cO
    com.ds.avare.storage.Preferences mPref -> m
    android.webkit.WebView mPrivacy -> cP
    android.app.AlertDialog mRegisterDialog -> cQ
    android.app.AlertDialog mUnregisterDialog -> cR
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    android.widget.Spinner access$000(com.ds.avare.RegisterActivity) -> a
    com.ds.avare.storage.Preferences access$100(com.ds.avare.RegisterActivity) -> b
    void access$200(com.ds.avare.RegisterActivity) -> c
    android.webkit.WebView access$300(com.ds.avare.RegisterActivity) -> d
    android.app.AlertDialog access$400(com.ds.avare.RegisterActivity) -> e
    android.app.AlertDialog access$500(com.ds.avare.RegisterActivity) -> f
    void setChoices() -> r
    void unregister(android.content.Context,java.lang.String) -> b
    void onCreate(android.os.Bundle) -> onCreate
com.ds.avare.RegisterActivity$1 -> com.ds.avare.el:
    com.ds.avare.RegisterActivity this$0 -> cS
    void <init>(com.ds.avare.RegisterActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.RegisterActivity$1$1 -> com.ds.avare.em:
    com.ds.avare.RegisterActivity$1 this$1 -> cT
    java.lang.String val$email -> cU
    void <init>(com.ds.avare.RegisterActivity$1,java.lang.String) -> <init>
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
com.ds.avare.RegisterActivity$2 -> com.ds.avare.en:
    com.ds.avare.RegisterActivity this$0 -> cS
    void <init>(com.ds.avare.RegisterActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.RegisterActivity$3 -> com.ds.avare.eo:
    com.ds.avare.RegisterActivity this$0 -> cS
    void <init>(com.ds.avare.RegisterActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.RegisterActivity$3$1 -> com.ds.avare.ep:
    com.ds.avare.RegisterActivity$3 this$1 -> cV
    void <init>(com.ds.avare.RegisterActivity$3) -> <init>
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
com.ds.avare.RegisterActivity$4 -> com.ds.avare.eq:
    com.ds.avare.RegisterActivity this$0 -> cS
    void <init>(com.ds.avare.RegisterActivity) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.RegisterActivity$5 -> com.ds.avare.er:
    com.ds.avare.RegisterActivity this$0 -> cS
    void <init>(com.ds.avare.RegisterActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.RegisterActivity$5$1 -> com.ds.avare.es:
    com.ds.avare.RegisterActivity$5 this$1 -> cW
    void <init>(com.ds.avare.RegisterActivity$5) -> <init>
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.ds.avare.RegisterActivity$6 -> com.ds.avare.et:
    com.ds.avare.RegisterActivity this$0 -> cS
    void <init>(com.ds.avare.RegisterActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.SatelliteActivity -> com.ds.avare.SatelliteActivity:
    android.widget.SeekBar mBrightnessBar -> cX
    android.content.ServiceConnection mConnection -> f
    com.ds.avare.gps.GpsInterface mGpsInfc -> i
    android.widget.TextView mGpsText -> cY
    android.widget.TextView mMapAreaText -> cZ
    android.widget.TextView mMemText -> da
    com.ds.avare.views.MemView mMemView -> db
    com.ds.avare.views.SatelliteView mSatelliteView -> dc
    com.ds.avare.StorageService mService -> n
    void <init>() -> <init>
    com.ds.avare.views.SatelliteView access$000(com.ds.avare.SatelliteActivity) -> a
    android.widget.TextView access$100(com.ds.avare.SatelliteActivity) -> b
    void access$200(com.ds.avare.SatelliteActivity) -> c
    void access$300(com.ds.avare.SatelliteActivity) -> d
    com.ds.avare.StorageService access$400(com.ds.avare.SatelliteActivity) -> e
    com.ds.avare.StorageService access$402(com.ds.avare.SatelliteActivity,com.ds.avare.StorageService) -> a
    com.ds.avare.gps.GpsInterface access$500(com.ds.avare.SatelliteActivity) -> f
    void updateMapArea() -> s
    void updateMem() -> t
    void onBackPressed() -> onBackPressed
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onResume() -> onResume
com.ds.avare.SatelliteActivity$1 -> com.ds.avare.eu:
    com.ds.avare.SatelliteActivity this$0 -> dd
    void <init>(com.ds.avare.SatelliteActivity) -> <init>
    void enabledCallback(boolean) -> a
    void locationCallback(android.location.Location) -> a
    void statusCallback(android.location.GpsStatus) -> a
    void timeoutCallback(boolean) -> b
com.ds.avare.SatelliteActivity$2 -> com.ds.avare.ev:
    com.ds.avare.SatelliteActivity this$0 -> dd
    void <init>(com.ds.avare.SatelliteActivity) -> <init>
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
com.ds.avare.SatelliteActivity$3 -> com.ds.avare.ew:
    com.ds.avare.SatelliteActivity this$0 -> dd
    void <init>(com.ds.avare.SatelliteActivity) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.ds.avare.SearchActivity -> com.ds.avare.SearchActivity:
    com.ds.avare.adapters.SearchAdapter mAdapter -> de
    android.app.AlertDialog mAlertDialogEdit -> df
    com.ds.avare.animation.AnimateButton mAnimateEdit -> dg
    com.ds.avare.animation.AnimateButton mAnimatePlan -> dh
    com.ds.avare.animation.AnimateButton mAnimatePlates -> bu
    com.ds.avare.animation.AnimateButton mAnimateSelect -> di
    android.content.ServiceConnection mConnection -> f
    com.ds.avare.place.Destination mDestination -> h
    android.widget.Button mEditButton -> dj
    com.ds.avare.gps.GpsInterface mGpsInfc -> i
    boolean mIsWaypoint -> aF
    android.widget.Button mPlanButton -> aJ
    android.widget.Button mPlatesButton -> aN
    com.ds.avare.storage.Preferences mPref -> m
    android.widget.ProgressBar mProgressBar -> dk
    android.widget.ListView mSearchListView -> dl
    com.ds.avare.SearchActivity$SearchTask mSearchTask -> dm
    android.widget.EditText mSearchText -> dn
    java.lang.String mSelected -> do
    android.widget.Button mSelectedButton -> dp
    com.ds.avare.StorageService mService -> n
    android.widget.Toast mToast -> o
    void <init>() -> <init>
    java.lang.String access$000(com.ds.avare.SearchActivity) -> a
    java.lang.String access$002(com.ds.avare.SearchActivity,java.lang.String) -> a
    com.ds.avare.storage.Preferences access$100(com.ds.avare.SearchActivity) -> b
    com.ds.avare.animation.AnimateButton access$1000(com.ds.avare.SearchActivity) -> c
    com.ds.avare.animation.AnimateButton access$1100(com.ds.avare.SearchActivity) -> d
    com.ds.avare.animation.AnimateButton access$1200(com.ds.avare.SearchActivity) -> e
    com.ds.avare.animation.AnimateButton access$1300(com.ds.avare.SearchActivity) -> f
    android.widget.ProgressBar access$1400(com.ds.avare.SearchActivity) -> g
    com.ds.avare.SearchActivity$SearchTask access$1500(com.ds.avare.SearchActivity) -> h
    com.ds.avare.SearchActivity$SearchTask access$1502(com.ds.avare.SearchActivity,com.ds.avare.SearchActivity$SearchTask) -> a
    android.widget.ListView access$1600(com.ds.avare.SearchActivity) -> i
    com.ds.avare.gps.GpsInterface access$1800(com.ds.avare.SearchActivity) -> j
    void access$200(com.ds.avare.SearchActivity) -> k
    android.widget.EditText access$300(com.ds.avare.SearchActivity) -> l
    android.widget.Toast access$400(com.ds.avare.SearchActivity) -> m
    android.app.AlertDialog access$500(com.ds.avare.SearchActivity) -> n
    android.app.AlertDialog access$502(com.ds.avare.SearchActivity,android.app.AlertDialog) -> a
    void access$600(com.ds.avare.SearchActivity,java.lang.String,java.lang.String,java.lang.String) -> a
    com.ds.avare.StorageService access$700(com.ds.avare.SearchActivity) -> o
    com.ds.avare.StorageService access$702(com.ds.avare.SearchActivity,com.ds.avare.StorageService) -> a
    com.ds.avare.adapters.SearchAdapter access$800(com.ds.avare.SearchActivity) -> p
    com.ds.avare.adapters.SearchAdapter access$802(com.ds.avare.SearchActivity,com.ds.avare.adapters.SearchAdapter) -> a
    void access$900(com.ds.avare.SearchActivity,java.lang.String,java.lang.String,java.lang.String) -> b
    void goTo(java.lang.String,java.lang.String,java.lang.String) -> a
    void initList() -> u
    void planTo(java.lang.String,java.lang.String,java.lang.String) -> b
    void onBackPressed() -> onBackPressed
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onRestart() -> onRestart
    void onResume() -> onResume
    void onStart() -> onStart
    void onStop() -> onStop
    void update(java.util.Observable,java.lang.Object) -> update
com.ds.avare.SearchActivity$1 -> com.ds.avare.ex:
    com.ds.avare.SearchActivity this$0 -> dq
    void <init>(com.ds.avare.SearchActivity) -> <init>
    void enabledCallback(boolean) -> a
    void locationCallback(android.location.Location) -> a
    void statusCallback(android.location.GpsStatus) -> a
    void timeoutCallback(boolean) -> b
com.ds.avare.SearchActivity$2 -> com.ds.avare.ey:
    com.ds.avare.SearchActivity this$0 -> dq
    void <init>(com.ds.avare.SearchActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.SearchActivity$3 -> com.ds.avare.ez:
    com.ds.avare.SearchActivity this$0 -> dq
    void <init>(com.ds.avare.SearchActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.SearchActivity$3$1 -> com.ds.avare.fa:
    com.ds.avare.SearchActivity$3 this$1 -> dr
    android.widget.EditText val$edit -> ds
    void <init>(com.ds.avare.SearchActivity$3,android.widget.EditText) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.SearchActivity$3$2 -> com.ds.avare.fb:
    com.ds.avare.SearchActivity$3 this$1 -> dr
    void <init>(com.ds.avare.SearchActivity$3) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.SearchActivity$4 -> com.ds.avare.fc:
    com.ds.avare.SearchActivity this$0 -> dq
    void <init>(com.ds.avare.SearchActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.SearchActivity$5 -> com.ds.avare.fd:
    com.ds.avare.SearchActivity this$0 -> dq
    void <init>(com.ds.avare.SearchActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.SearchActivity$6 -> com.ds.avare.fe:
    com.ds.avare.SearchActivity this$0 -> dq
    void <init>(com.ds.avare.SearchActivity) -> <init>
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.ds.avare.SearchActivity$7 -> com.ds.avare.ff:
    com.ds.avare.SearchActivity this$0 -> dq
    void <init>(com.ds.avare.SearchActivity) -> <init>
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.ds.avare.SearchActivity$8 -> com.ds.avare.fg:
    com.ds.avare.SearchActivity this$0 -> dq
    void <init>(com.ds.avare.SearchActivity) -> <init>
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.ds.avare.SearchActivity$9 -> com.ds.avare.fh:
    com.ds.avare.SearchActivity this$0 -> dq
    void <init>(com.ds.avare.SearchActivity) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.ds.avare.SearchActivity$SearchTask -> com.ds.avare.fi:
    java.lang.String[] selection -> dt
    com.ds.avare.SearchActivity this$0 -> dq
    void <init>(com.ds.avare.SearchActivity) -> <init>
    void <init>(com.ds.avare.SearchActivity,com.ds.avare.SearchActivity$1) -> <init>
    java.lang.Boolean doInBackground(java.lang.Object[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
com.ds.avare.StorageService -> com.ds.avare.StorageService:
    android.os.IBinder binder -> du
    com.ds.avare.weather.AdsbWeatherCache mAdsbWeatherCache -> dv
    int mAfdIndex -> dw
    com.ds.avare.place.Area mArea -> dx
    com.ds.avare.instruments.CDI mCDI -> dy
    com.ds.avare.cap.DrawCapLines mCap -> dz
    java.util.LinkedList mCheckLists -> dA
    com.ds.avare.flight.Checklist mChecklist -> dB
    int mCounter -> dC
    com.ds.avare.place.Destination mDestination -> h
    com.ds.avare.utils.BitmapHolder mDiagramBitmap -> dD
    com.ds.avare.instruments.DistanceRings mDistanceRings -> dE
    boolean mDownloading -> dF
    com.ds.avare.shapes.Draw mDraw -> dG
    com.ds.avare.instruments.EdgeDistanceTape mEdgeDistanceTape -> dH
    double mElev -> dI
    com.ds.avare.shapes.ElevationTile mElevTile -> dJ
    com.ds.avare.externalFlightPlan.ExternalPlanMgr mExternalPlanMgr -> dK
    com.ds.avare.flight.FlightStatus mFlightStatus -> dL
    com.ds.avare.instruments.FlightTimer mFlightTimer -> dM
    com.ds.avare.instruments.FuelTimer mFuelTimer -> dN
    com.ds.avare.gps.Gps mGps -> dO
    java.util.LinkedList mGpsCallbacks -> dP
    com.ds.avare.gps.GpsParams mGpsParams -> dQ
    com.ds.avare.storage.DataSource mImageDataSource -> dR
    com.ds.avare.utils.InfoLines mInfoLines -> dS
    com.ds.avare.weather.InternetWeatherCache mInternetWeatherCache -> dT
    boolean mIsGpsOn -> dU
    com.ds.avare.flightLog.KMLRecorder mKMLRecorder -> dV
    java.lang.String mLastAfdAirport -> dW
    com.ds.avare.place.Destination mLastAfdDestination -> dX
    java.lang.String mLastPlateAirport -> dY
    int mLastPlateIndex -> dZ
    android.location.Location mLocation -> ea
    com.ds.avare.utils.Mutex mLocationSem -> eb
    com.ds.avare.position.Movement mMovement -> ec
    com.ds.avare.utils.NavComments mNavComments -> ed
    com.ds.avare.instruments.Odometer mOdometer -> ee
    com.ds.avare.position.Pan mPan -> ef
    com.ds.avare.shapes.PixelDraw mPixelDraw -> eg
    com.ds.avare.place.Plan mPlan -> eh
    com.ds.avare.shapes.Radar mRadar -> ei
    com.ds.avare.utils.ShadowedText mShadowedText -> ej
    com.ds.avare.network.TFRFetcher mTFRFetcher -> ek
    double mThreshold -> el
    com.ds.avare.shapes.TileMap mTiles -> em
    java.util.Timer mTimer -> V
    com.ds.avare.adsb.TrafficCache mTrafficCache -> en
    com.ds.avare.userDefinedWaypoints.UDWMgr mUDWMgr -> eo
    com.ds.avare.instruments.VNAV mVNAV -> ep
    com.ds.avare.instruments.VSI mVSI -> eq
    void <init>() -> <init>
    java.util.LinkedList access$100(com.ds.avare.StorageService) -> a
    int access$1000(com.ds.avare.StorageService) -> b
    int access$1008(com.ds.avare.StorageService) -> c
    boolean access$1100(com.ds.avare.StorageService) -> d
    boolean access$200(com.ds.avare.StorageService) -> e
    com.ds.avare.gps.Gps access$300(com.ds.avare.StorageService) -> f
    android.location.Location access$402(com.ds.avare.StorageService,android.location.Location) -> a
    com.ds.avare.utils.Mutex access$500(com.ds.avare.StorageService) -> g
    com.ds.avare.place.Area access$600(com.ds.avare.StorageService) -> h
    com.ds.avare.place.Plan access$700(com.ds.avare.StorageService) -> i
    com.ds.avare.gps.GpsParams access$800(com.ds.avare.StorageService) -> j
    com.ds.avare.place.Destination access$900(com.ds.avare.StorageService) -> k
    void deleteInternetWeatherCache() -> v
    void deleteRadar() -> w
    void deleteTFRFetcher() -> x
    com.ds.avare.weather.AdsbWeatherCache getAdsbWeather() -> y
    int getAfdIndex() -> z
    com.ds.avare.place.Area getArea() -> A
    com.ds.avare.instruments.CDI getCDI() -> B
    com.ds.avare.cap.DrawCapLines getCap() -> C
    java.util.LinkedList getCheckLists() -> D
    com.ds.avare.flight.Checklist getChecklist() -> E
    com.ds.avare.storage.DataSource getDBResource() -> F
    com.ds.avare.place.Destination getDestination() -> G
    com.ds.avare.utils.BitmapHolder getDiagram() -> H
    com.ds.avare.instruments.DistanceRings getDistanceRings() -> I
    com.ds.avare.shapes.Draw getDraw() -> J
    com.ds.avare.instruments.EdgeDistanceTape getEdgeTape() -> K
    double getElevation() -> L
    com.ds.avare.utils.BitmapHolder getElevationBitmap() -> M
    com.ds.avare.externalFlightPlan.ExternalPlanMgr getExternalPlanMgr() -> N
    com.ds.avare.flight.FlightStatus getFlightStatus() -> O
    com.ds.avare.instruments.FlightTimer getFlightTimer() -> P
    com.ds.avare.instruments.FuelTimer getFuelTimer() -> Q
    com.ds.avare.gps.Gps getGps() -> R
    com.ds.avare.gps.GpsParams getGpsParams() -> S
    com.ds.avare.utils.InfoLines getInfoLines() -> T
    com.ds.avare.weather.InternetWeatherCache getInternetWeatherCache() -> U
    com.ds.avare.flightLog.KMLRecorder getKMLRecorder() -> V
    java.lang.String getLastAfdAirport() -> W
    com.ds.avare.place.Destination getLastAfdDestination() -> X
    java.lang.String getLastPlateAirport() -> Y
    int getLastPlateIndex() -> Z
    android.location.Location getLocationBlocking() -> aa
    com.ds.avare.position.Movement getMovement() -> ab
    com.ds.avare.utils.NavComments getNavComments() -> ac
    com.ds.avare.instruments.Odometer getOdometer() -> ad
    com.ds.avare.position.Pan getPan() -> ae
    com.ds.avare.shapes.PixelDraw getPixelDraw() -> af
    com.ds.avare.place.Plan getPlan() -> ag
    com.ds.avare.shapes.Radar getRadar() -> ah
    com.ds.avare.utils.ShadowedText getShadowedText() -> ai
    com.ds.avare.network.TFRFetcher getTFRFetcher() -> aj
    java.util.LinkedList getTFRShapes() -> ak
    double getThreshold() -> al
    com.ds.avare.shapes.TileMap getTiles() -> am
    boolean getTracks() -> an
    com.ds.avare.adsb.TrafficCache getTrafficCache() -> ao
    com.ds.avare.userDefinedWaypoints.UDWMgr getUDWMgr() -> ap
    com.ds.avare.instruments.VNAV getVNAV() -> aq
    com.ds.avare.instruments.VSI getVSI() -> ar
    void loadDiagram(java.lang.String) -> g
    void newPlan() -> as
    void newPlanFromStorage(java.lang.String,boolean) -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    boolean onUnbind(android.content.Intent) -> onUnbind
    void registerGpsListener(com.ds.avare.gps.GpsInterface) -> a
    void setAfdIndex(int) -> f
    void setCheckLists(java.util.LinkedList) -> b
    void setChecklist(com.ds.avare.flight.Checklist) -> a
    void setDestination(com.ds.avare.place.Destination) -> a
    void setDestinationPlanNoChange(com.ds.avare.place.Destination) -> b
    void setDownloading(boolean) -> d
    void setElevation(double) -> a
    void setElevationTile(com.ds.avare.shapes.Tile) -> a
    void setGpsParams(com.ds.avare.gps.GpsParams) -> a
    void setLastAfdAirport(java.lang.String) -> h
    void setLastAfdDestination(com.ds.avare.place.Destination) -> c
    void setLastPlateAirport(java.lang.String) -> i
    void setLastPlateIndex(int) -> g
    void setMovement(com.ds.avare.position.Movement) -> a
    void setPan(com.ds.avare.position.Pan) -> a
    void setThreshold(double) -> b
    java.net.URI setTracks(boolean) -> e
    void unregisterGpsListener(com.ds.avare.gps.GpsInterface) -> b
com.ds.avare.StorageService$1 -> com.ds.avare.fj:
    com.ds.avare.StorageService this$0 -> er
    void <init>(com.ds.avare.StorageService) -> <init>
    java.util.LinkedList extracted() -> at
    void enabledCallback(boolean) -> a
    void locationCallback(android.location.Location) -> a
    void statusCallback(android.location.GpsStatus) -> a
    void timeoutCallback(boolean) -> b
com.ds.avare.StorageService$LocalBinder -> com.ds.avare.fk:
    com.ds.avare.StorageService this$0 -> er
    void <init>(com.ds.avare.StorageService) -> <init>
    com.ds.avare.StorageService getService() -> au
com.ds.avare.StorageService$UpdateTask -> com.ds.avare.fl:
    com.ds.avare.StorageService this$0 -> er
    void <init>(com.ds.avare.StorageService) -> <init>
    void <init>(com.ds.avare.StorageService,com.ds.avare.StorageService$1) -> <init>
    void run() -> run
com.ds.avare.SubmitActivity -> com.ds.avare.SubmitActivity:
    int BACKOFF_MILLI_SECONDS -> cJ
    int FUEL -> es
    java.lang.String FUEL_AIRPORT -> et
    int MAX_ATTEMPTS -> cK
    int RATINGS -> eu
    java.lang.String RATINGS_AIRPORT -> ev
    java.lang.String SUBMIT -> ew
    android.os.AsyncTask mSubmitTask -> ex
    android.widget.Button mSubmitButton -> ey
    android.view.View mView -> ez
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
com.ds.avare.SubmitActivity$1 -> com.ds.avare.fm:
    com.ds.avare.SubmitActivity this$0 -> eA
    int val$submitCode -> eB
    void <init>(com.ds.avare.SubmitActivity,int) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.SubmitActivity$1$1 -> com.ds.avare.fn:
    java.lang.String code -> eC
    java.util.Map params -> eD
    java.lang.String serverUrl -> eE
    com.ds.avare.SubmitActivity$1 this$1 -> eF
    void <init>(com.ds.avare.SubmitActivity$1) -> <init>
    boolean setup() -> av
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onProgressUpdate(java.lang.Void[]) -> b
com.ds.avare.TripActivity -> com.ds.avare.TripActivity:
    android.app.AlertDialog mAlertDialog -> C
    android.content.ServiceConnection mConnection -> f
    android.widget.Button mFindButton -> eG
    com.ds.avare.gps.GpsInterface mGpsInfc -> i
    android.widget.Button mLastButton -> eH
    android.widget.Button mNextButton -> eI
    com.ds.avare.storage.Preferences mPref -> m
    android.widget.ProgressBar mProgress -> eJ
    android.widget.ProgressBar mProgressBar -> dk
    android.widget.EditText mSearchText -> dn
    com.ds.avare.StorageService mService -> n
    android.widget.Toast mToast -> o
    android.webkit.WebView mWebView -> W
    void <init>() -> <init>
    com.ds.avare.StorageService access$000(com.ds.avare.TripActivity) -> a
    com.ds.avare.StorageService access$002(com.ds.avare.TripActivity,com.ds.avare.StorageService) -> a
    android.widget.ProgressBar access$100(com.ds.avare.TripActivity) -> b
    com.ds.avare.storage.Preferences access$200(com.ds.avare.TripActivity) -> c
    java.lang.String access$300(com.ds.avare.TripActivity,android.widget.EditText,android.widget.EditText,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner) -> a
    android.webkit.WebView access$400(com.ds.avare.TripActivity) -> d
    android.widget.ProgressBar access$500(com.ds.avare.TripActivity) -> e
    com.ds.avare.gps.GpsInterface access$600(com.ds.avare.TripActivity) -> f
    boolean isDateWrong(java.lang.String) -> j
    java.lang.String makeURL(android.widget.EditText,android.widget.EditText,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner) -> a
    void onBackPressed() -> onBackPressed
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onRestart() -> onRestart
    void onResume() -> onResume
    void onStart() -> onStart
    void onStop() -> onStop
com.ds.avare.TripActivity$1 -> com.ds.avare.fo:
    com.ds.avare.TripActivity this$0 -> eK
    void <init>(com.ds.avare.TripActivity) -> <init>
    void enabledCallback(boolean) -> a
    void locationCallback(android.location.Location) -> a
    void statusCallback(android.location.GpsStatus) -> a
    void timeoutCallback(boolean) -> b
com.ds.avare.TripActivity$2 -> com.ds.avare.fp:
    com.ds.avare.TripActivity this$0 -> eK
    void <init>(com.ds.avare.TripActivity) -> <init>
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
com.ds.avare.TripActivity$3 -> com.ds.avare.fq:
    com.ds.avare.TripActivity this$0 -> eK
    void <init>(com.ds.avare.TripActivity) -> <init>
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.ds.avare.TripActivity$4 -> com.ds.avare.fr:
    com.ds.avare.TripActivity this$0 -> eK
    android.view.LayoutInflater val$layoutInflater -> eL
    void <init>(com.ds.avare.TripActivity,android.view.LayoutInflater) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.TripActivity$4$1 -> com.ds.avare.fs:
    com.ds.avare.TripActivity$4 this$1 -> eM
    android.widget.Spinner val$adults -> eN
    android.widget.Spinner val$child1 -> eO
    android.widget.Spinner val$child2 -> eP
    android.widget.Spinner val$child3 -> eQ
    android.widget.Spinner val$child4 -> eR
    android.widget.Spinner val$child5 -> eS
    android.widget.Spinner val$distance -> eT
    android.widget.EditText val$from -> eU
    android.widget.Spinner val$price -> eV
    android.widget.Spinner val$stars -> eW
    android.widget.EditText val$to -> eX
    void <init>(com.ds.avare.TripActivity$4,android.widget.EditText,android.widget.EditText,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner,android.widget.Spinner) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.TripActivity$4$2 -> com.ds.avare.ft:
    com.ds.avare.TripActivity$4 this$1 -> eM
    void <init>(com.ds.avare.TripActivity$4) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.TripActivity$5 -> com.ds.avare.fu:
    com.ds.avare.TripActivity this$0 -> eK
    void <init>(com.ds.avare.TripActivity) -> <init>
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.ds.avare.TripActivity$6 -> com.ds.avare.fv:
    com.ds.avare.TripActivity this$0 -> eK
    void <init>(com.ds.avare.TripActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.TripActivity$7 -> com.ds.avare.fw:
    com.ds.avare.TripActivity this$0 -> eK
    void <init>(com.ds.avare.TripActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.TripActivity$8 -> com.ds.avare.fx:
    com.ds.avare.TripActivity this$0 -> eK
    void <init>(com.ds.avare.TripActivity) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.ds.avare.WeatherActivity -> com.ds.avare.WeatherActivity:
    int MESSAGE -> M
    int SHOW_BUSY -> N
    int UNSHOW_BUSY -> O
    android.widget.ProgressBar Search -> eY
    android.content.ServiceConnection mConnection -> f
    android.content.Context mContext -> mContext
    com.ds.avare.gps.GpsInterface mGpsInfc -> i
    android.os.Handler mHandler -> mHandler
    com.ds.avare.webinfc.WebAppInterface mInfc -> eZ
    com.ds.avare.StorageService mService -> n
    android.webkit.WebView mWebView -> W
    void <init>() -> <init>
    com.ds.avare.StorageService access$000(com.ds.avare.WeatherActivity) -> a
    com.ds.avare.StorageService access$002(com.ds.avare.WeatherActivity,com.ds.avare.StorageService) -> a
    android.os.Handler access$100(com.ds.avare.WeatherActivity) -> b
    com.ds.avare.webinfc.WebAppInterface access$200(com.ds.avare.WeatherActivity) -> c
    android.widget.ProgressBar access$300(com.ds.avare.WeatherActivity) -> d
    com.ds.avare.gps.GpsInterface access$400(com.ds.avare.WeatherActivity) -> e
    android.content.Context access$500(com.ds.avare.WeatherActivity) -> f
    void onBackPressed() -> onBackPressed
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onRestart() -> onRestart
    void onResume() -> onResume
    void onStart() -> onStart
    void onStop() -> onStop
com.ds.avare.WeatherActivity$1 -> com.ds.avare.fy:
    com.ds.avare.WeatherActivity this$0 -> fa
    void <init>(com.ds.avare.WeatherActivity) -> <init>
    void enabledCallback(boolean) -> a
    void locationCallback(android.location.Location) -> a
    void statusCallback(android.location.GpsStatus) -> a
    void timeoutCallback(boolean) -> b
com.ds.avare.WeatherActivity$2 -> com.ds.avare.fz:
    com.ds.avare.WeatherActivity this$0 -> fa
    void <init>(com.ds.avare.WeatherActivity) -> <init>
    java.lang.Object callback(java.lang.Object,java.lang.Object) -> a
com.ds.avare.WeatherActivity$3 -> com.ds.avare.ga:
    com.ds.avare.WeatherActivity this$0 -> fa
    void <init>(com.ds.avare.WeatherActivity) -> <init>
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
com.ds.avare.WeatherActivity$3$1 -> com.ds.avare.gb:
    com.ds.avare.WeatherActivity$3 this$1 -> fb
    android.webkit.JsResult val$result -> Z
    void <init>(com.ds.avare.WeatherActivity$3,android.webkit.JsResult) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.WeatherActivity$3$2 -> com.ds.avare.gc:
    com.ds.avare.WeatherActivity$3 this$1 -> fb
    android.webkit.JsResult val$result -> Z
    void <init>(com.ds.avare.WeatherActivity$3,android.webkit.JsResult) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.WeatherActivity$3$3 -> com.ds.avare.gd:
    com.ds.avare.WeatherActivity$3 this$1 -> fb
    android.webkit.JsResult val$result -> Z
    void <init>(com.ds.avare.WeatherActivity$3,android.webkit.JsResult) -> <init>
    void onCancel(android.content.DialogInterface) -> onCancel
com.ds.avare.WeatherActivity$4 -> com.ds.avare.ge:
    com.ds.avare.WeatherActivity this$0 -> fa
    void <init>(com.ds.avare.WeatherActivity) -> <init>
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.ds.avare.WeatherActivity$5 -> com.ds.avare.gf:
    com.ds.avare.WeatherActivity this$0 -> fa
    void <init>(com.ds.avare.WeatherActivity) -> <init>
    boolean onLongClick(android.view.View) -> onLongClick
com.ds.avare.WeatherActivity$6 -> com.ds.avare.gg:
    com.ds.avare.WeatherActivity this$0 -> fa
    void <init>(com.ds.avare.WeatherActivity) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.ds.avare.WeatherActivity$7 -> com.ds.avare.gh:
    com.ds.avare.WeatherActivity this$0 -> fa
    void <init>(com.ds.avare.WeatherActivity) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.ds.avare.WeatherActivity$7$1 -> com.ds.avare.gi:
    com.ds.avare.WeatherActivity$7 this$1 -> fc
    void <init>(com.ds.avare.WeatherActivity$7) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.WebActivity -> com.ds.avare.WebActivity:
    android.content.ServiceConnection mConnection -> f
    com.ds.avare.gps.GpsInterface mGpsInfc -> i
    android.widget.Button mLastButton -> eH
    android.widget.Button mNextButton -> eI
    android.widget.ProgressBar mProgressBar -> dk
    android.widget.EditText mSearchText -> dn
    com.ds.avare.StorageService mService -> n
    android.webkit.WebView mWebView -> W
    void <init>() -> <init>
    android.webkit.WebView access$000(com.ds.avare.WebActivity) -> a
    android.widget.ProgressBar access$100(com.ds.avare.WebActivity) -> b
    com.ds.avare.StorageService access$200(com.ds.avare.WebActivity) -> c
    com.ds.avare.StorageService access$202(com.ds.avare.WebActivity,com.ds.avare.StorageService) -> a
    com.ds.avare.gps.GpsInterface access$300(com.ds.avare.WebActivity) -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onResume() -> onResume
com.ds.avare.WebActivity$1 -> com.ds.avare.gj:
    com.ds.avare.WebActivity this$0 -> fd
    void <init>(com.ds.avare.WebActivity) -> <init>
    void enabledCallback(boolean) -> a
    void locationCallback(android.location.Location) -> a
    void statusCallback(android.location.GpsStatus) -> a
    void timeoutCallback(boolean) -> b
com.ds.avare.WebActivity$2 -> com.ds.avare.gk:
    com.ds.avare.WebActivity this$0 -> fd
    void <init>(com.ds.avare.WebActivity) -> <init>
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.ds.avare.WebActivity$3 -> com.ds.avare.gl:
    com.ds.avare.WebActivity this$0 -> fd
    void <init>(com.ds.avare.WebActivity) -> <init>
    boolean onLongClick(android.view.View) -> onLongClick
com.ds.avare.WebActivity$4 -> com.ds.avare.gm:
    com.ds.avare.WebActivity this$0 -> fd
    void <init>(com.ds.avare.WebActivity) -> <init>
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.ds.avare.WebActivity$5 -> com.ds.avare.gn:
    com.ds.avare.WebActivity this$0 -> fd
    void <init>(com.ds.avare.WebActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.WebActivity$6 -> com.ds.avare.go:
    com.ds.avare.WebActivity this$0 -> fd
    void <init>(com.ds.avare.WebActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.WebActivity$7 -> com.ds.avare.gp:
    com.ds.avare.WebActivity this$0 -> fd
    void <init>(com.ds.avare.WebActivity) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.ds.avare.adapters.ChartAdapter -> wy.a:
    int GROUP_AFD -> fe
    int GROUP_DATABASE -> ff
    int GROUP_HELI -> fg
    int GROUP_IFRA -> fh
    int GROUP_IFRHE -> fi
    int GROUP_IFRLE -> fj
    int GROUP_NUM -> fk
    int GROUP_PLATE -> fl
    int GROUP_SECTIONAL -> fm
    int GROUP_TAC -> fn
    int GROUP_TERRAIN -> fo
    int GROUP_TOPO -> fp
    int GROUP_VFRA -> fq
    int GROUP_WAC -> fr
    int GROUP_WEATHER -> fs
    int STATE_CHECKED -> ft
    int STATE_DELETE -> fu
    int STATE_UNCHECKED -> fv
    int blocksize -> fw
    com.ds.avare.utils.BitmapHolder mAddBitmapHolder -> fx
    int[][] mChecked -> fy
    java.lang.String[][] mChildren -> fz
    java.lang.String[][] mChildrenFiles -> fA
    android.content.Context mContext -> mContext
    com.ds.avare.utils.BitmapHolder mDeleteBitmapHolder -> fB
    java.lang.String[] mGroups -> fC
    com.ds.avare.utils.BitmapHolder mNoneBitmapHolder -> fD
    com.ds.avare.utils.BitmapHolder mOkBitmapHolder -> fE
    com.ds.avare.storage.Preferences mPref -> m
    com.ds.avare.utils.BitmapHolder mUpdateBitmapHolder -> fF
    java.lang.String[][] mVers -> fG
    void <init>(android.content.Context) -> <init>
    java.lang.String[][] access$100(com.ds.avare.adapters.ChartAdapter) -> a
    java.lang.String[][] access$102(com.ds.avare.adapters.ChartAdapter,java.lang.String[][]) -> a
    com.ds.avare.storage.Preferences access$200(com.ds.avare.adapters.ChartAdapter) -> b
    java.lang.String[][] access$300(com.ds.avare.adapters.ChartAdapter) -> c
    void checkDone() -> aw
    java.lang.String getChecked() -> ax
    java.lang.Object getChild(int,int) -> getChild
    long getChildId(int,int) -> getChildId
    android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    int getChildrenCount(int) -> getChildrenCount
    java.lang.String getDatabaseName() -> getDatabaseName
    java.lang.String getDeleteChecked() -> ay
    java.lang.Object getGroup(int) -> getGroup
    int getGroupCount() -> getGroupCount
    long getGroupId(int) -> getGroupId
    android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    boolean hasStableIds() -> hasStableIds
    boolean isChildSelectable(int,int) -> isChildSelectable
    void refresh() -> refresh
    void refreshIt() -> az
    void setChecked(java.lang.String) -> k
    void setDelete(java.lang.String) -> l
    void toggleChecked(int,int) -> a
    void unsetChecked(java.lang.String) -> m
    void updateVersion(java.lang.String,java.lang.String) -> e
com.ds.avare.adapters.ChartAdapter$1 -> wy.b:
com.ds.avare.adapters.ChartAdapter$ViewTask -> wy.c:
    com.ds.avare.adapters.ChartAdapter this$0 -> fH
    java.lang.String[][] vers -> fI
    void <init>(com.ds.avare.adapters.ChartAdapter) -> <init>
    void <init>(com.ds.avare.adapters.ChartAdapter,com.ds.avare.adapters.ChartAdapter$1) -> <init>
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
com.ds.avare.adapters.NearestAdapter -> wy.d:
    java.lang.String[] mBearing -> fJ
    android.content.Context mContext -> mContext
    java.lang.String[] mDistance -> fK
    java.lang.String[] mElevation -> fL
    java.lang.String[] mFuel -> fM
    boolean[] mGlide -> fN
    java.lang.String[] mLongestRunway -> fO
    java.lang.String[] mName -> fP
    void <init>(android.content.Context,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],boolean[]) -> <init>
    int getClosestRunwayWithMinLength(int) -> h
    int getClosestWith100LL() -> aA
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void updateList(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],boolean[]) -> a
com.ds.avare.adapters.PopoutAdapter -> wy.e:
    int GROUP_COMM -> fQ
    int GROUP_FUEL -> fR
    int GROUP_METAR -> fS
    int GROUP_METS -> fT
    int GROUP_NUM -> fk
    int GROUP_PERFORMANCE -> fU
    int GROUP_PIREP -> fV
    int GROUP_RADAR -> fW
    int GROUP_RATINGS -> fX
    int GROUP_SUA -> fY
    int GROUP_TAF -> fZ
    int GROUP_TFR -> ga
    int GROUP_WA -> gb
    java.util.LinkedList mAirep -> gc
    java.lang.String mAirport -> ci
    java.lang.String[][] mChildren -> fz
    java.lang.String[] mChildrenText -> gd
    android.content.Context mContext -> mContext
    android.graphics.Typeface mFace -> ge
    java.util.LinkedList mFreq -> gf
    java.lang.String mFuel -> gg
    java.lang.String[] mGroups -> fC
    com.ds.avare.weather.Metar mMetar -> gh
    java.lang.String mMets -> gi
    java.lang.String mPerformance -> gj
    java.lang.String mRadar -> gk
    java.lang.String mRatings -> gl
    java.lang.String mSua -> gm
    com.ds.avare.weather.Taf mTaf -> gn
    java.lang.String mTfr -> go
    com.ds.avare.weather.WindsAloft mWa -> gp
    void <init>(android.content.Context,com.ds.avare.touch.LongTouchDestination) -> <init>
    java.lang.String access$000(com.ds.avare.adapters.PopoutAdapter) -> a
    java.lang.Object getChild(int,int) -> getChild
    long getChildId(int,int) -> getChildId
    android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    int getChildrenCount(int) -> getChildrenCount
    java.lang.Object getGroup(int) -> getGroup
    int getGroupCount() -> getGroupCount
    long getGroupId(int) -> getGroupId
    android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    boolean hasStableIds() -> hasStableIds
    boolean isChildSelectable(int,int) -> isChildSelectable
com.ds.avare.adapters.PopoutAdapter$1 -> wy.f:
    com.ds.avare.adapters.PopoutAdapter this$0 -> gq
    android.view.ViewGroup val$parent -> gr
    void <init>(com.ds.avare.adapters.PopoutAdapter,android.view.ViewGroup) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.adapters.PopoutAdapter$2 -> wy.g:
    com.ds.avare.adapters.PopoutAdapter this$0 -> gq
    android.view.ViewGroup val$parent -> gr
    void <init>(com.ds.avare.adapters.PopoutAdapter,android.view.ViewGroup) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.adapters.SearchAdapter -> wy.h:
    com.ds.avare.utils.BitmapHolder mAirportBitmapHolder -> gs
    android.content.Context mContext -> mContext
    com.ds.avare.utils.BitmapHolder mFixBitmapHolder -> gt
    com.ds.avare.utils.BitmapHolder mGeoBitmapHolder -> gu
    com.ds.avare.utils.BitmapHolder mMakerBitmapHolder -> gv
    com.ds.avare.utils.BitmapHolder mMapBitmapHolder -> gw
    com.ds.avare.utils.BitmapHolder mNDBBitmapHolder -> gx
    com.ds.avare.utils.BitmapHolder mNDBDMEBitmapHolder -> gy
    com.ds.avare.utils.BitmapHolder mNoBitmapHolder -> gz
    com.ds.avare.utils.BitmapHolder mTACANBitmapHolder -> gA
    com.ds.avare.utils.BitmapHolder mUDWBitmapHolder -> gB
    com.ds.avare.utils.BitmapHolder mVORBitmapHolder -> gC
    com.ds.avare.utils.BitmapHolder mVORDMEBitmapHolder -> gD
    com.ds.avare.utils.BitmapHolder mVORTACBitmapHolder -> gE
    com.ds.avare.utils.BitmapHolder mVOTBitmapHolder -> gF
    java.lang.String[] mVals -> gG
    void <init>(android.content.Context,java.lang.String[]) -> <init>
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.ds.avare.adapters.TypeValueAdapter -> wy.i:
    android.content.Context mContext -> mContext
    java.lang.String[] mType -> gH
    java.lang.String[] mValue -> gI
    void <init>(android.content.Context,java.lang.String[],java.lang.String[]) -> <init>
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.ds.avare.adsb.NexradBitmap -> wy.j:
    com.ds.avare.utils.BitmapHolder mBitmap -> gJ
    int mBlock -> gK
    double[] mCoords -> gL
    double mScaleX -> gM
    double mScaleY -> gN
    long timestamp -> timestamp
    void <init>(long,int[],int,boolean,int,int) -> <init>
    void convertBlockNumberToLatLon(int,double[]) -> a
    void discard() -> aB
    com.ds.avare.utils.BitmapHolder getBitmap() -> aC
    int getBlock() -> aD
    double getLatTopLeft() -> aE
    double getLonTopLeft() -> aF
    double getScaleX() -> aG
    double getScaleY() -> aH
com.ds.avare.adsb.NexradImage -> wy.k:
    long EXPIRES -> gO
    int MAX_ENTRIES -> gP
    android.util.SparseArray mImg -> gQ
    long mUpdated -> gR
    void <init>() -> <init>
    java.lang.String getDate() -> aI
    android.util.SparseArray getImages() -> aJ
    boolean isOld() -> aK
    void putImg(long,int,int[],boolean,int[],int,int) -> a
com.ds.avare.adsb.NexradImageConus -> wy.l:
    long EXPIRES -> gO
    int MAX_ENTRIES -> gP
    android.util.SparseArray mImg -> gQ
    long mUpdated -> gR
    void <init>() -> <init>
    java.lang.String getDate() -> aI
    android.util.SparseArray getImages() -> aJ
    boolean isOld() -> aK
    void putImg(long,int,int[],boolean,int[],int,int) -> a
com.ds.avare.adsb.Traffic -> wy.m:
    long EXPIRES -> gO
    double TRAFFIC_ALTITUDE_DIFF_DANGEROUS -> gS
    int mAltitude -> gT
    java.lang.String mCallSign -> gU
    float mHeading -> gV
    int mHorizVelocity -> gW
    int mIcaoAddress -> gX
    long mLastUpdate -> gY
    float mLat -> gZ
    float mLon -> ha
    void <init>(java.lang.String,int,float,float,int,float,int,long) -> <init>
    int getColorFromAltitude(double,double) -> a
    boolean isOld() -> aK
com.ds.avare.adsb.TrafficCache -> wy.n:
    int MAX_ENTRIES -> gP
    android.util.SparseArray mTraffic -> hb
    void <init>() -> <init>
    android.util.SparseArray getTraffic() -> aL
    void putTraffic(java.lang.String,int,float,float,int,float,int,long) -> a
com.ds.avare.animation.AnimateButton -> com.ds.avare.animation.a:
    int DIRECTION_B_U -> hc
    int DIRECTION_L_R -> hd
    int DIRECTION_R_L -> he
    int DIRECTION_U_B -> hf
    android.content.Context mContext -> mContext
    int mDir -> hg
    android.view.View[] mReplaces -> hh
    int[] mReplacesVis -> hi
    boolean mShowing -> hj
    android.view.View mView -> ez
    void <init>(android.content.Context,android.view.View,int,android.view.View[]) -> <init>
    android.view.View access$000(com.ds.avare.animation.AnimateButton) -> a
    android.view.View[] access$100(com.ds.avare.animation.AnimateButton) -> b
    int[] access$200(com.ds.avare.animation.AnimateButton) -> c
    void animate() -> aM
    void animate(boolean) -> f
    void animateBack() -> aN
    void stopAndHide() -> aO
com.ds.avare.animation.AnimateButton$1 -> com.ds.avare.animation.b:
    com.ds.avare.animation.AnimateButton this$0 -> hk
    void <init>(com.ds.avare.animation.AnimateButton) -> <init>
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.ds.avare.animation.AnimateButton$2 -> com.ds.avare.animation.c:
    com.ds.avare.animation.AnimateButton this$0 -> hk
    boolean val$visible -> hl
    void <init>(com.ds.avare.animation.AnimateButton,boolean) -> <init>
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.ds.avare.animation.AnimateButton$3 -> com.ds.avare.animation.d:
    com.ds.avare.animation.AnimateButton this$0 -> hk
    void <init>(com.ds.avare.animation.AnimateButton) -> <init>
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.ds.avare.animation.TwoButton -> com.ds.avare.animation.TwoButton:
    com.ds.avare.animation.TwoButton$TwoClickListener mListener -> hm
    java.lang.String mOffName -> hn
    boolean mOn -> ho
    java.lang.String mOnName -> hp
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setup(android.content.Context,android.util.AttributeSet) -> a
    boolean isChecked() -> isChecked
    void onClick(android.view.View) -> onClick
    void setChecked(boolean) -> setChecked
    void setTwoClickListener(com.ds.avare.animation.TwoButton$TwoClickListener) -> setTwoClickListener
com.ds.avare.animation.TwoButton$TwoClickListener -> com.ds.avare.animation.e:
    void onClick(android.view.View) -> onClick
com.ds.avare.cap.CapChartFetcher -> wy.o:
    double GRID_SIZE -> hq
    com.ds.avare.cap.CapChartFetcher mInstance -> hr
    java.util.LinkedList mCharts -> hs
    void <init>() -> <init>
    com.ds.avare.cap.CapChartFetcher getInstance() -> aP
    java.util.LinkedList getCharts() -> aQ
com.ds.avare.cap.Chart -> wy.p:
    java.lang.String mIdentifier -> ht
    android.graphics.Rect mRect -> hu
    void <init>(java.lang.String,com.ds.avare.position.Coordinate,com.ds.avare.position.Coordinate) -> <init>
    int makeCapCoordinate(double) -> c
    java.lang.String getIdentifier() -> aR
    android.graphics.Rect getRect() -> getRect
com.ds.avare.cap.DrawCapLines -> wy.q:
    java.util.LinkedList mCharts -> hs
    android.graphics.Paint mPaint -> hv
    com.ds.avare.cap.Chart mRecentChart -> hw
    com.ds.avare.StorageService mService -> n
    void <init>(com.ds.avare.StorageService,android.content.Context,float) -> <init>
    java.lang.String getGridName(double,double) -> b
    java.lang.String getName(com.ds.avare.cap.Chart,android.graphics.Rect) -> a
    double snapToGrid(double) -> d
    void draw(android.graphics.Canvas,com.ds.avare.position.Origin,com.ds.avare.position.Scale) -> a
com.ds.avare.externalFlightPlan.ExternalFlightPlan -> wy.r:
    java.lang.String mCmt -> hx
    java.lang.String mFileName -> hy
    java.lang.String mName -> mName
    java.lang.String mType -> hz
    java.util.List mWaypoints -> hA
    void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List) -> <init>
    java.lang.String getCmt() -> aS
    java.lang.String getFileName() -> getFileName
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    java.util.List getWaypoints() -> aT
    void load(com.ds.avare.StorageService) -> l
    void setActive(boolean) -> setActive
    void setFileName(java.lang.String) -> n
    java.lang.String toJSONString() -> aU
    java.lang.String toString() -> toString
    void unload(com.ds.avare.StorageService) -> m
com.ds.avare.externalFlightPlan.ExternalPlanMgr -> wy.s:
    android.content.Context mContext -> mContext
    java.util.List mPlans -> hB
    com.ds.avare.storage.Preferences mPref -> m
    com.ds.avare.StorageService mService -> n
    void <init>(com.ds.avare.StorageService,android.content.Context) -> <init>
    java.lang.String getDir() -> aV
    void clear() -> clear
    boolean delete(java.lang.String) -> o
    void forceReload() -> aW
    com.ds.avare.externalFlightPlan.ExternalFlightPlan get(java.lang.String) -> p
    java.util.ArrayList getPlanFileNames(java.lang.String) -> q
    java.util.ArrayList getPlanNames(java.lang.String) -> r
    java.lang.String[] getPlans() -> aX
    boolean isExternal(java.lang.String) -> s
    void populate(java.lang.String) -> t
com.ds.avare.externalFlightPlan.GpxPlanParser -> wy.t:
    java.lang.String CMT -> hC
    java.lang.String GPX -> hD
    java.lang.String LAT -> hE
    java.lang.String LON -> hF
    java.lang.String NAME -> NAME
    java.lang.String NS -> hG
    java.lang.String RTE -> hH
    java.lang.String RTEPT -> hI
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    java.lang.String readCMT(org.xmlpull.v1.XmlPullParser) -> a
    com.ds.avare.externalFlightPlan.ExternalFlightPlan readGPX(org.xmlpull.v1.XmlPullParser) -> b
    java.lang.String readNAME(org.xmlpull.v1.XmlPullParser) -> c
    com.ds.avare.externalFlightPlan.ExternalFlightPlan readRTE(org.xmlpull.v1.XmlPullParser) -> d
    com.ds.avare.userDefinedWaypoints.Waypoint readRTEPT(org.xmlpull.v1.XmlPullParser) -> e
    java.lang.String readText(org.xmlpull.v1.XmlPullParser) -> f
    void skip(org.xmlpull.v1.XmlPullParser) -> g
    void generate(java.lang.String,java.io.FileOutputStream,com.ds.avare.externalFlightPlan.ExternalFlightPlan) -> a
    java.lang.String getType() -> getType
    com.ds.avare.externalFlightPlan.ExternalFlightPlan parse(java.lang.String,java.io.FileInputStream) -> a
com.ds.avare.externalFlightPlan.PlanFactory -> wy.u:
    void <init>() -> <init>
    com.ds.avare.externalFlightPlan.ExternalFlightPlan parse(java.lang.String) -> u
com.ds.avare.externalFlightPlan.PlanParser -> wy.v:
    java.lang.String gUndef -> hJ
    void <init>() -> <init>
    void generate(java.lang.String,java.io.FileOutputStream,com.ds.avare.externalFlightPlan.ExternalFlightPlan) -> a
    java.lang.String getType() -> getType
    com.ds.avare.externalFlightPlan.ExternalFlightPlan parse(java.lang.String,java.io.FileInputStream) -> a
com.ds.avare.externalFlightPlan.SkvPlanParser -> wy.w:
    java.lang.String ALTFIELDSEP -> hK
    java.lang.String FIELDSEP -> hL
    java.lang.String PLAN -> hM
    java.lang.String SKV -> hN
    java.lang.String WPSEP -> hO
    void <init>() -> <init>
    void generate(java.lang.String,java.io.FileOutputStream,com.ds.avare.externalFlightPlan.ExternalFlightPlan) -> a
    java.lang.String getType() -> getType
    com.ds.avare.externalFlightPlan.ExternalFlightPlan parse(java.lang.String,java.io.FileInputStream) -> a
com.ds.avare.flight.Checklist -> wy.x:
    java.lang.String DELIM -> hP
    java.lang.String mName -> mName
    java.lang.String mSteps -> hQ
    int mWorkingIndex -> hR
    void <clinit>() -> <clinit>
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.String) -> <init>
    void <init>(org.json.JSONObject) -> <init>
    java.util.LinkedList getCheckListsFromStorageFromat(java.lang.String) -> v
    java.lang.String putCheckListsToStorageFormat(java.util.LinkedList) -> c
    void addStep(java.lang.String) -> w
    void changeName(java.lang.String) -> x
    void deleteItem() -> aY
    org.json.JSONObject getJSON() -> aZ
    java.lang.String getName() -> getName
    java.lang.String getSteps() -> ba
    java.lang.String[] getStepsArray() -> bb
    void insertStep(java.lang.String,int) -> a
    boolean isSelected(int) -> i
    void moveBack() -> bc
    void moveForward() -> bd
    void moveItemDown() -> be
    void moveItemUp() -> bf
    void moveStep(int,int) -> b
    void moveTo(int) -> j
    void removeStep(int) -> k
com.ds.avare.flight.FlightStatus -> wy.y:
    double SPEED_FOR_FLIGHT -> hS
    double SPEED_FOR_ROLLOUT -> hT
    java.util.LinkedList mCallbacks -> hU
    boolean mFlying -> hV
    void <init>(com.ds.avare.gps.GpsParams) -> <init>
    void registerListener(com.ds.avare.flight.FlightStatusInterface) -> a
    void unregisterListener(com.ds.avare.flight.FlightStatusInterface) -> b
    void updateLocation(com.ds.avare.gps.GpsParams) -> b
com.ds.avare.flight.FlightStatusInterface -> wy.z:
    void rollout() -> j
com.ds.avare.flightLog.KMLRecorder -> wy.aa:
    java.lang.String KMLCOORDINATESHEADER -> hW
    java.lang.String KMLCOORDINATESTRAILER -> hX
    java.lang.String KMLFILENAMEEXTENTION -> hY
    java.lang.String KMLFILENAMEFORMAT -> hZ
    java.lang.String KMLFILEPREFIX -> ia
    java.lang.String KMLFILESUFFIX -> ib
    java.lang.String KMLTRACKPOINT -> ic
    com.ds.avare.flightLog.KMLRecorder$Config mConfig -> id
    java.io.File mFile -> ie
    java.net.URI mFileURI -> if
    int mFlightStartIndex -> ig
    com.ds.avare.gps.GpsParams mLastFix -> ih
    java.util.LinkedList mPositionHistory -> ii
    com.ds.avare.shapes.CrumbsShape mShape -> ij
    java.io.BufferedWriter mTracksFile -> ik
    void <init>() -> <init>
    void clearPositionHistory() -> bg
    com.ds.avare.shapes.Shape getShape() -> bh
    boolean isRecording() -> bi
    void setGpsParams(com.ds.avare.gps.GpsParams) -> a
    void start() -> start
    void start(com.ds.avare.flightLog.KMLRecorder$Config) -> a
    java.net.URI stop() -> bj
com.ds.avare.flightLog.KMLRecorder$Config -> wy.ab:
    boolean mClearListOnStart -> il
    java.lang.String mFolder -> im
    long mStartSpeed -> in
    long mUpdateTime -> io
    boolean mUseDetailedPositionReporting -> ip
    com.ds.avare.flightLog.KMLRecorder this$0 -> iq
    void <init>(com.ds.avare.flightLog.KMLRecorder,boolean,long,boolean,java.lang.String,long) -> <init>
    boolean access$000(com.ds.avare.flightLog.KMLRecorder$Config) -> b
    java.lang.String access$100(com.ds.avare.flightLog.KMLRecorder$Config) -> c
    boolean access$200(com.ds.avare.flightLog.KMLRecorder$Config) -> d
    long access$300(com.ds.avare.flightLog.KMLRecorder$Config) -> e
    long access$400(com.ds.avare.flightLog.KMLRecorder$Config) -> f
com.ds.avare.gps.Gps -> wy.ac:
    int GPS_PERIOD_LONG_MS -> ir
    double mAltitude -> is
    android.content.Context mContext -> mContext
    com.ds.avare.gps.GpsInterface mGpsCallback -> it
    long mGpsLastUpdate -> iu
    int mGpsPeriod -> iv
    android.location.LocationManager mLocationManager -> iw
    com.ds.avare.storage.Preferences mPref -> m
    java.util.Timer mTimer -> V
    void <init>(android.content.Context,com.ds.avare.gps.GpsInterface) -> <init>
    long access$100(com.ds.avare.gps.Gps) -> a
    com.ds.avare.gps.GpsInterface access$200(com.ds.avare.gps.Gps) -> b
    android.location.Location getLastLocation(android.content.Context) -> a
    boolean isGpsAvailable(android.content.Context) -> b
    boolean isGpsDisabled(android.content.Context,com.ds.avare.storage.Preferences) -> a
    void onGpsStatusChanged(int) -> onGpsStatusChanged
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onLocationChanged(android.location.Location,java.lang.String) -> a
    void onNmeaReceived(long,java.lang.String) -> onNmeaReceived
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void start() -> start
    void stop() -> stop
    void updateTimeout() -> bk
com.ds.avare.gps.Gps$1 -> wy.ad:
com.ds.avare.gps.Gps$UpdateGps -> wy.ae:
    com.ds.avare.gps.Gps this$0 -> ix
    void <init>(com.ds.avare.gps.Gps) -> <init>
    void <init>(com.ds.avare.gps.Gps,com.ds.avare.gps.Gps$1) -> <init>
    void run() -> run
com.ds.avare.gps.GpsInterface -> wy.af:
    void enabledCallback(boolean) -> a
    void locationCallback(android.location.Location) -> a
    void statusCallback(android.location.GpsStatus) -> a
    void timeoutCallback(boolean) -> b
com.ds.avare.gps.GpsParams -> wy.ag:
    double mAltitude -> is
    double mBearing -> iy
    float mDeclination -> iz
    double mLatitude -> iA
    double mLongitude -> iB
    com.ds.avare.position.Scale mScale -> iC
    double mSpeed -> iD
    long mTime -> iE
    void <init>() -> <init>
    void <init>(android.location.Location) -> <init>
    com.ds.avare.gps.GpsParams copy(com.ds.avare.gps.GpsParams) -> c
    java.lang.String getDMS(double) -> e
    double speedConvert(double) -> f
    double getAltitude() -> getAltitude
    double getBearing() -> bl
    double getDeclinition() -> bm
    java.lang.String getLatStringDMS() -> bn
    double getLatitude() -> getLatitude
    java.lang.String getLonStringDMS() -> bo
    double getLongitude() -> getLongitude
    com.ds.avare.position.Scale getScale() -> bp
    double getSpeed() -> bq
    long getTime() -> getTime
com.ds.avare.instruments.CDI -> wy.ah:
    double BAR_DEGREES_LOC -> iF
    double BAR_DEGREES_VOR -> iG
    int mBackColor -> iH
    int mBarCount -> iI
    double mBarDegrees -> iJ
    int mBarHeight -> iK
    int mBarSpace -> iL
    int mBarWidth -> iM
    android.graphics.Paint mCDIPaint -> iN
    int mColorLeft -> iO
    int mColorRight -> iP
    double mDeviation -> iQ
    int mDspOffset -> iR
    int mInstHeight -> iS
    int mInstLeft -> iT
    int mInstTop -> iU
    int mInstWidth -> iV
    android.graphics.Rect mTextSize -> iW
    void <init>() -> <init>
    void drawIndicator(android.graphics.Canvas,int) -> a
    void calcDeviation(com.ds.avare.place.Destination,com.ds.avare.place.Plan) -> a
    void drawCDI(android.graphics.Canvas,int,int) -> a
    double getDeviation() -> br
    boolean isLeft() -> bs
    void setSize(android.graphics.Paint,int) -> a
com.ds.avare.instruments.DistanceRings -> wy.ai:
    int COLOR_SPEED_RING -> iX
    int RINGS_10_20_40 -> iY
    int RINGS_1_2_5 -> iZ
    int RINGS_20_40_80 -> ja
    int RINGS_2_5_10 -> jb
    int RINGS_40_80_160 -> jc
    int RINGS_5_10_20 -> jd
    int RING_INNER -> je
    int[] RING_INNER_SIZE -> jf
    int RING_MIDDLE -> jg
    int[] RING_MIDDLE_SIZE -> jh
    int RING_OUTER -> ji
    int[] RING_OUTER_SIZE -> jj
    int RING_SPEED -> jk
    int STALLSPEED -> jl
    float[] mRings -> jm
    java.lang.String[] mRingsText -> jn
    android.content.Context mContext -> mContext
    float mDipToPix -> jo
    android.graphics.Paint mPaint -> hv
    com.ds.avare.storage.Preferences mPref -> m
    com.ds.avare.StorageService mService -> n
    void <clinit>() -> <clinit>
    void <init>(com.ds.avare.StorageService,android.content.Context,float) -> <init>
    void calculateRings(android.content.Context,com.ds.avare.position.Scale,com.ds.avare.position.Movement,double) -> a
    void draw(android.graphics.Canvas,com.ds.avare.position.Origin,com.ds.avare.position.Scale,com.ds.avare.position.Movement,boolean,com.ds.avare.gps.GpsParams) -> a
com.ds.avare.instruments.EdgeDistanceTape -> wy.aj:
    int mBgndHeight -> jp
    int mBgndWidth -> jq
    int mBotmMargin -> jr
    int mLeftMargin -> js
    android.graphics.Paint mPaint -> hv
    android.graphics.Rect mTextBounds -> jt
    int mTextHeight -> ju
    int mTextWidth -> jv
    void <init>() -> <init>
    void draw(android.graphics.Canvas,com.ds.avare.position.Scale,float,int,int,int,int,int) -> a
    boolean inRangeX(float,float,float) -> a
    boolean inRangeY(float,float,float) -> b
    void setPaint(android.graphics.Paint) -> setPaint
com.ds.avare.instruments.FlightTimer -> wy.ak:
    double mMinFlightSpeed -> jw
    double mSpeed -> iD
    java.util.Timer mTimer -> V
    void <init>() -> <init>
    double access$100(com.ds.avare.instruments.FlightTimer) -> a
    double access$200(com.ds.avare.instruments.FlightTimer) -> b
    void setMinFlightSpeed(double) -> g
    void setSpeed(double) -> h
com.ds.avare.instruments.FlightTimer$1 -> wy.al:
com.ds.avare.instruments.FlightTimer$FlightTimerTask -> wy.am:
    com.ds.avare.instruments.FlightTimer this$0 -> jx
    void <init>(com.ds.avare.instruments.FlightTimer) -> <init>
    void <init>(com.ds.avare.instruments.FlightTimer,com.ds.avare.instruments.FlightTimer$1) -> <init>
    void run() -> run
com.ds.avare.instruments.FuelTimer -> wy.an:
    int REFRESH -> jy
    int SWITCH_TANK -> jz
    boolean mCounting -> bN
    int mCurrentValue -> jA
    int mInterval -> jB
    java.util.List mObservers -> jC
    java.util.Timer mTimer -> V
    void <init>(int) -> <init>
    int access$100(com.ds.avare.instruments.FuelTimer) -> a
    int access$110(com.ds.avare.instruments.FuelTimer) -> b
    void start() -> start
    void stop() -> stop
    void addObserver(java.util.Observer) -> addObserver
    java.lang.String getDisplay() -> bt
    void notifyObservers(int) -> l
    void removeObserver(java.util.Observer) -> a
    void reset() -> reset
    void toggleState() -> bu
com.ds.avare.instruments.FuelTimer$1 -> wy.ao:
com.ds.avare.instruments.FuelTimer$FuelTimerTask -> wy.ap:
    com.ds.avare.instruments.FuelTimer this$0 -> jD
    void <init>(com.ds.avare.instruments.FuelTimer) -> <init>
    void <init>(com.ds.avare.instruments.FuelTimer,com.ds.avare.instruments.FuelTimer$1) -> <init>
    void run() -> run
com.ds.avare.instruments.HobbsMeter -> wy.aq:
    int mHours -> jE
    int mHundredths -> jF
    int mTenths -> jG
    java.util.Timer mTimer -> V
    void <init>() -> <init>
    void setup() -> setup
    java.lang.String getValue() -> getValue
    boolean isRunning() -> isRunning
    void reset() -> reset
    void start() -> start
    void stop() -> stop
com.ds.avare.instruments.HobbsMeter$1 -> wy.ar:
com.ds.avare.instruments.HobbsMeter$HobbsTask -> wy.as:
    com.ds.avare.instruments.HobbsMeter this$0 -> jH
    void <init>(com.ds.avare.instruments.HobbsMeter) -> <init>
    void <init>(com.ds.avare.instruments.HobbsMeter,com.ds.avare.instruments.HobbsMeter$1) -> <init>
    void run() -> run
com.ds.avare.instruments.Odometer -> wy.at:
    com.ds.avare.gps.GpsParams mGpsParams -> dQ
    com.ds.avare.storage.Preferences mPref -> m
    double mValue -> jI
    double mValueSave -> jJ
    void <init>() -> <init>
    double getValue() -> bv
    void reset() -> reset
    void setPref(com.ds.avare.storage.Preferences) -> a
    void updateValue(com.ds.avare.gps.GpsParams) -> d
com.ds.avare.instruments.VNAV -> wy.au:
    double APPROACH_DISTANCE -> jK
    double BAR_DEGREES -> jL
    int mBackColor -> iH
    int mBarCount -> iI
    float mBarHeight -> jM
    float mBarSpace -> jN
    float mBarWidth -> jO
    int mColorHigh -> jP
    int mColorLow -> jQ
    int mColorOn -> jR
    double mConvertToFt -> jS
    int mDspOffset -> iR
    double mGlideSlope -> jT
    float mInstHeight -> jU
    float mInstLeft -> jV
    float mInstTop -> jW
    float mInstWidth -> jX
    boolean mShow -> jY
    android.graphics.Paint mVNAVPaint -> jZ
    void <init>() -> <init>
    void drawIndicator(android.graphics.Canvas,float) -> a
    void calcGlideSlope(com.ds.avare.gps.GpsParams,com.ds.avare.place.Destination) -> a
    void drawVNAV(android.graphics.Canvas,float,float,com.ds.avare.place.Destination) -> a
    void setSize(android.graphics.Paint,int) -> a
com.ds.avare.instruments.VSI -> wy.av:
    double mVSI -> ka
    com.ds.avare.gps.GpsParams mVSIParams -> kb
    void <init>() -> <init>
    double getValue() -> bv
    void updateValue(com.ds.avare.gps.GpsParams) -> d
com.ds.avare.message.Helper -> wy.aw:
    void <init>() -> <init>
    boolean isNetworkAvailable(android.content.Context) -> c
    void showAlert(android.content.Context,java.lang.String,java.lang.String) -> a
com.ds.avare.message.Helper$1 -> wy.ax:
    void <init>() -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.ds.avare.message.Logger -> wy.ay:
    android.os.Handler mHandler -> mHandler
    android.widget.TextView mTv -> kc
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    void Logit(java.lang.String) -> y
    android.widget.TextView access$000() -> bw
    void clear() -> clear
    void setTextView(android.widget.TextView) -> a
com.ds.avare.message.Logger$1 -> wy.az:
    void <init>() -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.ds.avare.message.NetworkHelper -> wy.ba:
    void <init>() -> <init>
    java.lang.String getServer() -> bx
    java.lang.String post(java.lang.String,java.util.Map) -> a
com.ds.avare.network.Delete -> wy.bb:
    int FAILED -> FAILED
    int SUCCESS -> SUCCESS
    com.ds.avare.network.Delete$DeleteTask mDt -> kd
    android.os.Handler mHandler -> mHandler
    boolean mStop -> ke
    java.lang.Thread mThread -> kf
    void <init>(android.os.Handler) -> <init>
    android.os.Handler access$100(com.ds.avare.network.Delete) -> a
    boolean access$200(com.ds.avare.network.Delete) -> b
    void cancel() -> cancel
    void start(java.lang.String,java.lang.String,com.ds.avare.storage.DataSource) -> a
com.ds.avare.network.Delete$1 -> wy.bc:
com.ds.avare.network.Delete$DeleteTask -> wy.bd:
    java.lang.String chart -> kg
    com.ds.avare.storage.DataSource data -> kh
    java.lang.String path -> ki
    com.ds.avare.network.Delete this$0 -> kj
    void <init>(com.ds.avare.network.Delete) -> <init>
    void <init>(com.ds.avare.network.Delete,com.ds.avare.network.Delete$1) -> <init>
    void run() -> run
com.ds.avare.network.Download -> wy.be:
    int FAILED -> FAILED
    int NONEED -> kk
    int SUCCESS -> SUCCESS
    int blocksize -> fw
    java.lang.String mCode -> kl
    int mCycleAdjust -> km
    com.ds.avare.network.Download$DownloadTask mDt -> kn
    android.os.Handler mHandler -> mHandler
    java.lang.String mRoot -> ko
    boolean mStop -> ke
    java.lang.Thread mThread -> kf
    java.lang.String mVersion -> kp
    void <init>(java.lang.String,android.os.Handler,int) -> <init>
    android.os.Handler access$100(com.ds.avare.network.Download) -> a
    java.lang.String access$200(com.ds.avare.network.Download) -> b
    java.lang.String access$202(com.ds.avare.network.Download,java.lang.String) -> a
    java.lang.String access$300(com.ds.avare.network.Download) -> c
    java.lang.String access$302(com.ds.avare.network.Download,java.lang.String) -> b
    java.lang.String access$400(com.ds.avare.network.Download) -> d
    int access$500(com.ds.avare.network.Download) -> e
    boolean access$600(com.ds.avare.network.Download) -> f
    void cancel() -> cancel
    java.lang.String getVersion() -> getVersion
    void start(java.lang.String,java.lang.String) -> f
com.ds.avare.network.Download$1 -> wy.bf:
com.ds.avare.network.Download$DownloadTask -> wy.bg:
    java.lang.String mName -> mName
    java.lang.String path -> ki
    com.ds.avare.network.Download this$0 -> kq
    void <init>(com.ds.avare.network.Download) -> <init>
    void <init>(com.ds.avare.network.Download,com.ds.avare.network.Download$1) -> <init>
    void sendFailure() -> by
    void copyInputStream(java.io.InputStream,java.io.OutputStream) -> a
    void run() -> run
com.ds.avare.network.TFRFetcher -> wy.bh:
    android.content.Context mContext -> mContext
    java.util.LinkedList mShapes -> kr
    com.ds.avare.network.TFRFetcher$TFRTask mTask -> ks
    void <init>(android.content.Context) -> <init>
    java.util.LinkedList access$102(com.ds.avare.network.TFRFetcher,java.util.LinkedList) -> a
    android.content.Context access$200(com.ds.avare.network.TFRFetcher) -> a
    java.util.LinkedList getShapes() -> bz
    void parse() -> bA
com.ds.avare.network.TFRFetcher$1 -> wy.bi:
com.ds.avare.network.TFRFetcher$TFRTask -> wy.bj:
    com.ds.avare.network.TFRFetcher this$0 -> kt
    void <init>(com.ds.avare.network.TFRFetcher) -> <init>
    void <init>(com.ds.avare.network.TFRFetcher,com.ds.avare.network.TFRFetcher$1) -> <init>
    java.lang.Boolean doInBackground(java.lang.Object[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.ds.avare.place.Airport -> wy.bk:
    java.lang.String mElevation -> ku
    java.lang.String mFuel -> gg
    double mHeight -> kv
    java.lang.String mId -> kw
    double mLat -> kx
    double mLon -> ky
    java.lang.String mLongestRunway -> kz
    java.lang.String mName -> mName
    com.ds.avare.position.Projection mProj -> kA
    double mVariation -> kB
    void <init>(java.util.LinkedHashMap,double,double) -> <init>
    boolean canGlide(com.ds.avare.storage.Preferences) -> b
    double getBearing() -> bl
    double getDistance() -> bB
    java.lang.String getElevation() -> bC
    java.lang.String getFuel() -> bD
    java.lang.String getId() -> getId
    java.lang.String getLongestRunway() -> bE
    java.lang.String getName() -> getName
    double getVariation() -> bF
    void setHeight(double) -> i
    void setLongestRunway(java.lang.String) -> z
    void updateLocation(double,double) -> c
com.ds.avare.place.Airway -> wy.bl:
    double MAX_SEGMENT_LENGTH -> kC
    void <init>() -> <init>
    java.util.LinkedList find(com.ds.avare.StorageService,java.lang.String,java.lang.String,java.lang.String) -> a
    com.ds.avare.position.Coordinate findIntersectionOfAirways(com.ds.avare.StorageService,java.lang.String,java.util.LinkedList) -> a
    boolean isSame(com.ds.avare.position.Coordinate,com.ds.avare.position.Coordinate) -> a
com.ds.avare.place.Area -> wy.bm:
    int UPDATE_TIME -> kD
    com.ds.avare.place.Airport[] mAirports -> kE
    double mAltitude -> is
    com.ds.avare.storage.DataSource mDataSource -> kF
    com.ds.avare.place.Area$DataBaseAreaTask mDt -> kG
    boolean mFound -> kH
    long mLastTime -> kI
    double mLat -> kx
    double mLon -> ky
    com.ds.avare.storage.Preferences mPref -> m
    void <init>(com.ds.avare.storage.DataSource,android.content.Context) -> <init>
    com.ds.avare.storage.DataSource access$100(com.ds.avare.place.Area) -> a
    double access$200(com.ds.avare.place.Area) -> b
    double access$300(com.ds.avare.place.Area) -> c
    com.ds.avare.storage.Preferences access$400(com.ds.avare.place.Area) -> d
    boolean access$502(com.ds.avare.place.Area,boolean) -> a
    double access$600(com.ds.avare.place.Area) -> e
    com.ds.avare.place.Airport[] access$702(com.ds.avare.place.Area,com.ds.avare.place.Airport[]) -> a
    com.ds.avare.place.Airport getAirport(int) -> m
    int getAirportsNumber() -> bG
    void updateLocation(com.ds.avare.gps.GpsParams) -> b
com.ds.avare.place.Area$1 -> wy.bn:
com.ds.avare.place.Area$DataBaseAreaTask -> wy.bo:
    com.ds.avare.place.Airport[] airports -> kJ
    com.ds.avare.place.Area this$0 -> kK
    void <init>(com.ds.avare.place.Area) -> <init>
    void <init>(com.ds.avare.place.Area,com.ds.avare.place.Area$1) -> <init>
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.Void doInBackground(java.lang.Object[]) -> b
    void onPostExecute(java.lang.Object) -> onPostExecute
com.ds.avare.place.Awos -> wy.bp:
    float INVALID -> kL
    java.lang.String mFrequency1 -> kM
    java.lang.String mFrequency2 -> kN
    double mLatitude -> iA
    double mLongitude -> iB
    java.lang.String mPhone1 -> kO
    java.lang.String mPhone2 -> kP
    java.lang.String mRemarks -> kQ
    java.lang.String mType -> hz
    void <init>(java.lang.String) -> <init>
    java.lang.String getFreq1() -> bH
    java.lang.String getFreq2() -> bI
    double getLat() -> bJ
    double getLon() -> bK
    java.lang.String getPhone1() -> bL
    java.lang.String getPhone2() -> bM
    java.lang.String getRemarks() -> bN
    java.lang.String getType() -> getType
    void setFreq1(java.lang.String) -> A
    void setFreq2(java.lang.String) -> B
    void setLat(java.lang.String) -> C
    void setLon(java.lang.String) -> D
    void setPhone1(java.lang.String) -> E
    void setPhone2(java.lang.String) -> F
    void setRemark(java.lang.String) -> G
    void setType(java.lang.String) -> H
com.ds.avare.place.Destination -> wy.bq:
    java.lang.String AD -> bL
    java.lang.String BASE -> kR
    java.lang.String FIX -> kS
    java.lang.String GPS -> kT
    java.lang.String MAPS -> kU
    java.lang.String NAVAID -> kV
    java.lang.String UDW -> kW
    java.lang.String[] mAfdFound -> kX
    java.util.LinkedList mAwos -> kY
    double mBearing -> iy
    java.lang.String mCmt -> hx
    com.ds.avare.storage.DataSource mDataSource -> kF
    java.lang.String mDbType -> kZ
    double mDeclination -> la
    java.lang.String mDestType -> lb
    double mDistance -> lc
    java.lang.String mEta -> ld
    java.lang.String mEte -> le
    boolean mFound -> kH
    java.util.LinkedHashMap mFreq -> lf
    boolean mInited -> S
    double mLatInit -> lg
    double mLatd -> lh
    double mLonInit -> li
    double mLond -> lj
    boolean mLooking -> lk
    java.lang.String mName -> mName
    java.util.LinkedHashMap mParams -> ll
    com.ds.avare.storage.Preferences mPref -> m
    java.util.LinkedList mRunways -> lm
    com.ds.avare.StorageService mService -> n
    com.ds.avare.shapes.TrackShape mTrackShape -> ln
    void <init>(com.ds.avare.StorageService,double,double) -> <init>
    void <init>(java.lang.String,java.lang.String,com.ds.avare.storage.Preferences,com.ds.avare.StorageService) -> <init>
    java.lang.String access$100(com.ds.avare.place.Destination) -> d
    java.lang.String[] access$1002(com.ds.avare.place.Destination,java.lang.String[]) -> a
    java.lang.String access$102(com.ds.avare.place.Destination,java.lang.String) -> a
    boolean access$1100(com.ds.avare.place.Destination) -> e
    boolean access$1102(com.ds.avare.place.Destination,boolean) -> a
    boolean access$1202(com.ds.avare.place.Destination,boolean) -> b
    java.lang.String access$1300(com.ds.avare.place.Destination) -> f
    java.lang.String access$1302(com.ds.avare.place.Destination,java.lang.String) -> b
    java.util.LinkedHashMap access$1400(com.ds.avare.place.Destination) -> g
    java.util.LinkedHashMap access$1402(com.ds.avare.place.Destination,java.util.LinkedHashMap) -> a
    java.util.LinkedList access$1500(com.ds.avare.place.Destination) -> h
    java.util.LinkedList access$1502(com.ds.avare.place.Destination,java.util.LinkedList) -> a
    com.ds.avare.storage.DataSource access$1600(com.ds.avare.place.Destination) -> i
    java.util.LinkedList access$1700(com.ds.avare.place.Destination) -> j
    com.ds.avare.storage.Preferences access$1800(com.ds.avare.place.Destination) -> k
    void access$1900(com.ds.avare.place.Destination) -> l
    com.ds.avare.StorageService access$200(com.ds.avare.place.Destination) -> m
    java.lang.String access$300(com.ds.avare.place.Destination) -> n
    java.lang.String access$302(com.ds.avare.place.Destination,java.lang.String) -> c
    void access$400(com.ds.avare.place.Destination,java.lang.String,java.lang.String) -> a
    double access$500(com.ds.avare.place.Destination) -> o
    double access$502(com.ds.avare.place.Destination,double) -> a
    double access$600(com.ds.avare.place.Destination) -> p
    double access$602(com.ds.avare.place.Destination,double) -> b
    java.lang.String access$702(com.ds.avare.place.Destination,java.lang.String) -> d
    java.util.LinkedHashMap access$800(com.ds.avare.place.Destination) -> q
    java.util.LinkedHashMap access$802(com.ds.avare.place.Destination,java.util.LinkedHashMap) -> b
    void access$900(com.ds.avare.place.Destination) -> r
    void addTime() -> bO
    java.lang.String getStorageName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean isGPSValid(java.lang.String) -> I
    void parseGps(java.lang.String,java.lang.String) -> g
    void find() -> bP
    void find(java.lang.String) -> J
    void findGuessType() -> bQ
    java.lang.String[] getAfd() -> bR
    double getAltitudeAboveDest(com.ds.avare.gps.GpsParams) -> e
    java.util.LinkedList getAwos() -> bS
    double getBearing() -> bl
    com.ds.avare.utils.BitmapHolder getBitmap() -> aC
    java.lang.String getCmt() -> aS
    double getDeclination() -> bT
    double getDistance() -> bB
    double getElevation() -> L
    java.lang.String getEta() -> bU
    java.lang.String getEte() -> bV
    java.lang.String getFacilityName() -> bW
    java.lang.String getFlightPathRequired(com.ds.avare.gps.GpsParams) -> f
    java.util.LinkedHashMap getFrequencies() -> bX
    java.lang.String getID() -> getID
    android.location.Location getLocation() -> bY
    android.location.Location getLocationInit() -> bZ
    java.util.LinkedHashMap getParams() -> ca
    java.util.LinkedList getRunways() -> cb
    java.lang.String getStorageName() -> cc
    com.ds.avare.shapes.TrackShape getTrackShape() -> cd
    java.lang.String getType() -> getType
    java.lang.String getVerticalSpeedTo(com.ds.avare.gps.GpsParams) -> g
    long getVerticalSpeedToNoFmt(com.ds.avare.gps.GpsParams) -> h
    boolean isFound() -> ce
    boolean isLooking() -> cf
    java.lang.String toString() -> toString
    void updateTo(com.ds.avare.gps.GpsParams) -> i
com.ds.avare.place.Destination$1 -> wy.br:
com.ds.avare.place.Destination$DataBaseLocationTask -> wy.bs:
    com.ds.avare.place.Destination this$0 -> lo
    void <init>(com.ds.avare.place.Destination) -> <init>
    void <init>(com.ds.avare.place.Destination,com.ds.avare.place.Destination$1) -> <init>
    java.lang.Boolean doInBackground(java.lang.Object[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onPreExecute() -> onPreExecute
com.ds.avare.place.Destination$DataBaseLocationTask$1 -> wy.bt:
    com.ds.avare.place.Destination$DataBaseLocationTask this$1 -> lp
    java.util.LinkedList val$afdName -> lq
    void <init>(com.ds.avare.place.Destination$DataBaseLocationTask,java.util.LinkedList) -> <init>
    boolean accept(java.io.File,java.lang.String) -> accept
com.ds.avare.place.GameTFR -> wy.bu:
    java.lang.String GAME_TEXT -> lr
    double[][] GAME_TFR_COORDS -> ls
    double RADIUS_NM -> lt
    void <clinit>() -> <clinit>
    void <init>() -> <init>
com.ds.avare.place.Obstacle -> wy.bv:
    float HEIGHT_BELOW -> lu
    float RADIUS -> lv
    int mHeight -> lw
    double mLat -> kx
    double mLon -> ky
    void <init>(double,double,int) -> <init>
    int getHeight() -> getHeight
    double getLatitude() -> getLatitude
    double getLongitude() -> getLongitude
com.ds.avare.place.Plan -> wy.bw:
    int MAX_DESTINATIONS -> lx
    int MILES_PER_SEGMENT -> ly
    boolean mActive -> lz
    double mBearing -> iy
    double mDeclination -> la
    boolean mDestChanged -> lA
    com.ds.avare.place.Destination[] mDestination -> lB
    double mDistance -> lc
    boolean mEarlyPass -> lC
    boolean mEarlyPassEvent -> lD
    java.lang.String mEte -> le
    com.ds.avare.gps.GpsParams mLastLocation -> lE
    java.lang.String mName -> mName
    com.ds.avare.place.Plan$Passage mPassage -> lF
    boolean[] mPassed -> lG
    com.ds.avare.storage.Preferences mPref -> m
    int mReplaceId -> lH
    com.ds.avare.StorageService mService -> n
    boolean mSuspend -> lI
    com.ds.avare.shapes.TrackShape mTrackShape -> ln
    void <init>(android.content.Context,com.ds.avare.StorageService) -> <init>
    void <init>(android.content.Context,com.ds.avare.StorageService,java.lang.String,boolean) -> <init>
    com.ds.avare.storage.Preferences access$000(com.ds.avare.place.Plan) -> a
    boolean access$100(com.ds.avare.place.Plan) -> b
    boolean access$102(com.ds.avare.place.Plan,boolean) -> a
    boolean access$202(com.ds.avare.place.Plan,boolean) -> b
    com.ds.avare.place.Destination[] access$300(com.ds.avare.place.Plan) -> c
    com.ds.avare.position.Coordinate[] concat(com.ds.avare.position.Coordinate[],com.ds.avare.position.Coordinate[]) -> a
    java.util.LinkedHashMap getAllPlans(com.ds.avare.StorageService,java.lang.String) -> a
    java.lang.String putAllPlans(com.ds.avare.StorageService,java.util.LinkedHashMap) -> a
    void advance() -> advance
    boolean appendDestination(com.ds.avare.place.Destination) -> s
    void clear() -> clear
    int findClosePointId(double,double,double) -> a
    int findNextNotPassed() -> cg
    com.ds.avare.position.Coordinate[] getCoordinates() -> ch
    com.ds.avare.place.Destination getDestination(int) -> n
    int getDestinationNumber() -> ci
    double getDistance() -> bB
    java.lang.String getName() -> getName
    com.ds.avare.shapes.TrackShape getTrackShape() -> cd
    boolean hasDestinationChanged() -> cj
    boolean insertDestination(com.ds.avare.place.Destination) -> t
    boolean isActive() -> isActive
    boolean isEarlyPass() -> ck
    boolean isPassed(int) -> o
    void makeActive(com.ds.avare.gps.GpsParams) -> j
    void makeInactive() -> cl
    void move(int,int) -> c
    void moveTo(int) -> j
    java.lang.String putPlanToStorageFormat() -> cm
    void regress() -> cn
    void remove(int) -> remove
    void replaceDestination(com.ds.avare.storage.Preferences,int,double,double,boolean) -> a
    void setName(java.lang.String) -> setName
    void setNotPassed(int) -> p
    void setPassed(int) -> q
    void simulate() -> co
    boolean suspendResume() -> cp
    java.lang.String toString() -> toString
    void update(java.util.Observable,java.lang.Object) -> update
    void updateLocation(com.ds.avare.gps.GpsParams) -> b
com.ds.avare.place.Plan$Passage -> wy.bx:
    double EARLY_PASS_THRESHOLD -> lJ
    double PASSAGE_APPROACH_DISTANCE -> lK
    double PASSAGE_APPROACH_MIN -> lL
    double PASSAGE_ENROUTE_DISTANCE_MIN -> lM
    double mCurrentBearing -> lN
    double mCurrentDistance -> lO
    double mLastBearing -> lP
    double mLastDistance -> lQ
    double mSpeed -> iD
    com.ds.avare.place.Plan this$0 -> lR
    void <init>(com.ds.avare.place.Plan) -> <init>
    boolean hasPassed(double) -> j
    boolean updateLocation(com.ds.avare.gps.GpsParams,com.ds.avare.place.Destination) -> b
com.ds.avare.place.Route -> wy.by:
    java.util.LinkedList mDestinations -> lS
    void <init>() -> <init>
    void add(com.ds.avare.place.Destination) -> u
    void clear() -> clear
    com.ds.avare.position.Coordinate[] getCoordinates() -> ch
    com.ds.avare.place.Destination getDestination() -> G
com.ds.avare.place.Runway -> wy.bz:
    float INVALID -> kL
    java.lang.String mElevation -> ku
    java.lang.String mHeading -> lT
    java.lang.String mILS -> lU
    double mLat -> kx
    java.lang.String mLength -> lV
    java.lang.String mLights -> lW
    double mLon -> ky
    java.lang.String mNumber -> lX
    java.lang.String mPattern -> lY
    java.lang.String mSurface -> lZ
    java.lang.String mThreshold -> ma
    java.lang.String mVGSI -> mb
    double mVariation -> kB
    java.lang.String mWidth -> mc
    void <init>(java.lang.String) -> <init>
    java.lang.String getElevation() -> bC
    java.lang.String getILS() -> cq
    double getLatitude() -> getLatitude
    java.lang.String getLength() -> cr
    java.lang.String getLights() -> cs
    double getLongitude() -> getLongitude
    java.lang.String getNumber() -> ct
    java.lang.String getPattern() -> getPattern
    java.lang.String getSurface() -> cu
    java.lang.String getThreshold() -> cv
    float getTrue() -> cw
    java.lang.String getVGSI() -> cx
    java.lang.String getWidth() -> cy
    void setElevation(java.lang.String) -> K
    void setHeading(java.lang.String) -> L
    void setILS(java.lang.String) -> M
    void setLatitude(java.lang.String) -> N
    void setLength(java.lang.String) -> O
    void setLights(java.lang.String) -> P
    void setLongitude(java.lang.String) -> Q
    void setPattern(java.lang.String) -> R
    void setSurface(java.lang.String) -> S
    void setThreshold(java.lang.String) -> T
    void setVGSI(java.lang.String) -> U
    void setVariation(java.lang.String) -> V
    void setWidth(java.lang.String) -> W
com.ds.avare.plan.LmfsInterface -> wy.ca:
    java.lang.String AVARE_LMFS_URL -> md
    android.content.Context mContext -> mContext
    java.lang.String mError -> me
    void <init>(android.content.Context) -> <init>
    java.lang.String parseError(java.lang.String) -> X
    java.lang.String activateFlightPlan(java.lang.String,java.lang.String,java.lang.String) -> c
    java.lang.String amendFlightPlan(com.ds.avare.plan.LmfsPlan) -> a
    java.lang.String cancelFlightPlan(java.lang.String) -> Y
    java.lang.String closeFlightPlan(java.lang.String,java.lang.String) -> h
    java.lang.String fileFlightPlan(com.ds.avare.plan.LmfsPlan) -> b
    void getBriefing(com.ds.avare.plan.LmfsPlan,boolean,java.lang.String) -> a
    java.lang.String getError() -> cz
    com.ds.avare.plan.LmfsPlan getFlightPlan(java.lang.String) -> Z
    com.ds.avare.plan.LmfsPlanList getFlightPlans() -> cA
    com.ds.avare.plan.LmfsPlanLog getNavlog(com.ds.avare.plan.LmfsPlan) -> c
com.ds.avare.plan.LmfsPlan -> wy.cb:
    java.lang.String DIRECT -> mf
    java.lang.String DOMESTIC -> mg
    java.lang.String PROPOSED -> mh
    java.lang.String ROUTE_WIDTH -> mi
    java.lang.String aircraftColor -> mj
    java.lang.String aircraftEquipment -> mk
    java.lang.String aircraftIdentifier -> ml
    java.lang.String aircraftType -> mm
    java.lang.String altDestination1 -> mn
    java.lang.String altDestination2 -> mo
    java.lang.String altitudeFL -> mp
    java.lang.String currentState -> mq
    java.lang.String departure -> mr
    java.lang.String departureInstant -> ms
    java.lang.String destination -> mt
    java.lang.String flightDuration -> mu
    java.lang.String flightRules -> mv
    java.lang.String fuelOnBoard -> mw
    java.lang.String heavyWakeTurbulence -> mx
    java.lang.String mId -> kw
    boolean mValid -> my
    java.lang.String numberOfAircraft -> mz
    java.lang.String peopleOnBoard -> mA
    java.lang.String pilotData -> mB
    java.lang.String remarks -> mC
    java.lang.String route -> mD
    java.lang.String speedKnots -> mE
    java.lang.String type -> type
    java.lang.String versionStamp -> mF
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    java.lang.String convertLocationToGpsCoords(android.location.Location) -> c
    java.lang.String durationToTime(java.lang.String) -> aa
    java.lang.String getDurationFromInput(java.lang.String) -> ab
    java.lang.String getInstanceFromTime(java.lang.String) -> ac
    java.lang.String getTime(java.lang.String) -> ad
    java.lang.String getTimeFromInput(java.lang.String) -> ae
    java.lang.String getTimeFromInstance(java.lang.String) -> af
    void init() -> cB
    void put(java.util.Map,java.lang.String,java.lang.String) -> a
    boolean putJSON(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    java.lang.String timeToDuration(double) -> k
    java.lang.String getId() -> getId
    boolean isValid() -> isValid
    java.util.Map makeHashMap() -> cC
    java.lang.String makeJSON() -> cD
    void setId(java.lang.String) -> ag
com.ds.avare.plan.LmfsPlanList -> wy.cc:
    java.util.LinkedList mPlans -> mG
    int mSelectedIndex -> mH
    void <init>(java.lang.String) -> <init>
    java.util.LinkedList getPlans() -> cE
com.ds.avare.plan.LmfsPlanLog -> wy.cd:
    java.lang.String mLog -> mI
    void <init>(java.lang.String) -> <init>
    long getElapsedTime(java.lang.String) -> ah
    java.lang.String getTimeFromLong(long) -> a
    java.lang.String getLogInHTML() -> cF
com.ds.avare.position.Coordinate -> wy.ce:
    double mLat -> kx
    int mLeg -> mJ
    double mLon -> ky
    boolean mSeparate -> mK
    void <init>(double,double) -> <init>
    void setLeg(com.ds.avare.position.Coordinate[],int) -> a
    double getLatitude() -> getLatitude
    int getLeg() -> cG
    double getLongitude() -> getLongitude
    boolean isSeparate() -> cH
    void makeSeparate() -> cI
    void setSegment(int) -> r
com.ds.avare.position.Movement -> wy.cf:
    double offsetx -> mL
    double offsety -> mM
    double px -> mN
    double py -> mO
    void <init>() -> <init>
    void <init>(double[],double[]) -> <init>
    double getLatitudePerPixel() -> cJ
    double getLongitudePerPixel() -> cK
    float getNMPerLatitude(com.ds.avare.position.Scale) -> a
    double getOffsetLatitude() -> cL
    double getOffsetLongitude() -> cM
com.ds.avare.position.Origin -> wy.cg:
    double mLatC -> mP
    double mLatL -> mQ
    double mLatU -> mR
    double mLonC -> mS
    double mLonL -> mT
    double mLonR -> mU
    double mScaleX -> gM
    double mScaleY -> gN
    void <init>() -> <init>
    double getLatitudeCenter() -> cN
    double getLatitudeLower() -> cO
    double getLatitudeOf(double) -> l
    double getLatitudeUpper() -> cP
    double getLongitudeCenter() -> cQ
    double getLongitudeLeft() -> cR
    double getLongitudeOf(double) -> m
    double getLongitudeRight() -> cS
    double getOffsetX(double) -> n
    double getOffsetY(double) -> o
    boolean isInDisplayRange(com.ds.avare.position.Coordinate) -> a
    void update(com.ds.avare.gps.GpsParams,com.ds.avare.position.Scale,com.ds.avare.position.Pan,double,double,int,int) -> a
com.ds.avare.position.Pan -> wy.ch:
    float mMoveX -> mV
    int mMoveXTile -> mW
    float mMoveXTileOld -> mX
    float mMoveY -> mY
    int mMoveYTile -> mZ
    float mMoveYTileOld -> na
    void <init>() -> <init>
    void <init>(com.ds.avare.position.Pan) -> <init>
    float getMoveX() -> cT
    float getMoveY() -> cU
    int getTileMoveX() -> cV
    int getTileMoveXWithoutTear() -> cW
    int getTileMoveY() -> cX
    int getTileMoveYWithoutTear() -> cY
    boolean setMove(float,float) -> a
    void setTileMove(int,int) -> d
com.ds.avare.position.PixelCoordinate -> wy.ci:
    boolean mSeparate -> mK
    double mX -> nb
    double mY -> nc
    void <init>(double,double) -> <init>
    double rotateX(double,double) -> d
    double rotateY(double,double) -> e
    double getX() -> cZ
    double getY() -> da
    boolean isSeparate() -> cH
    void makeSeparate() -> cI
com.ds.avare.position.Projection -> wy.cj:
    double mBearing -> iy
    double mDistance -> lc
    double mLat1 -> nd
    double mLat2 -> ne
    double mLon1 -> nf
    double mLon2 -> ng
    void <init>(double,double,double,double) -> <init>
    double getStaticBearing(double,double,double,double) -> a
    double getStaticDistance(double,double,double,double) -> b
    com.ds.avare.position.Coordinate[] findPoints(int) -> s
    double getBearing() -> bl
    double getDistance() -> bB
    java.lang.String getGeneralDirectionFrom(double) -> p
com.ds.avare.position.Radial -> wy.ck:
    void <init>() -> <init>
    com.ds.avare.position.Coordinate findCoordinate(double,double,double,double) -> c
com.ds.avare.position.Scale -> wy.cl:
    double MIN_SCALE -> nh
    double mMacroMultiply -> ni
    double mMaxScale -> nj
    double mScaleCorrectY -> nk
    double mScaleFactor -> nl
    void <init>() -> <init>
    void <init>(double) -> <init>
    void adjustZoom(double) -> q
    int downSample() -> db
    int getMacroFactor() -> dc
    float getScaleCorrected() -> dd
    float getScaleFactor() -> getScaleFactor
    float getScaleFactorRaw() -> de
    double getStep() -> df
    void setScaleAt(double) -> r
    void setScaleFactor(float) -> a
    void updateMacro() -> dg
    void zoomOut() -> dh
com.ds.avare.shapes.CrumbsShape -> wy.cm:
    void <init>() -> <init>
    void clearShape() -> di
    void updateShape(com.ds.avare.gps.GpsParams) -> k
com.ds.avare.shapes.Draw -> wy.cn:
    int DRAW_POINT_THRESHOLD -> nm
    int MAX_DRAW_POINTS -> nn
    java.util.LinkedList mDrawPoints -> np
    float mLastXDraw -> nq
    float mLastYDraw -> nr
    void <init>() -> <init>
    void addPoint(float,float,com.ds.avare.position.Origin) -> a
    void addSeparation() -> dj
    void clear() -> clear
    void drawShape(android.graphics.Canvas,android.graphics.Paint,com.ds.avare.position.Origin) -> a
com.ds.avare.shapes.ElevationTile -> wy.co:
    android.content.Context mContext -> mContext
    com.ds.avare.utils.BitmapHolder mElevBitmap -> ns
    com.ds.avare.storage.Preferences mPref -> m
    com.ds.avare.shapes.Tile mTile -> nt
    void <init>(android.content.Context) -> <init>
    com.ds.avare.utils.BitmapHolder getElevationBitmap() -> M
    com.ds.avare.shapes.Tile getTile() -> dk
    void recycleBitmaps() -> dl
    void setElevationTile(com.ds.avare.shapes.Tile) -> a
com.ds.avare.shapes.MetShape -> wy.cp:
    void <init>(java.lang.String) -> <init>
com.ds.avare.shapes.PixelDraw -> wy.cq:
    int DRAW_POINT_THRESHOLD -> nm
    int MAX_DRAW_POINTS -> nn
    java.util.LinkedList mDrawPoints -> np
    float mLastXDraw -> nq
    float mLastYDraw -> nr
    void <init>() -> <init>
    void addPoint(float,float) -> b
    void addSeparation() -> dj
    void clear() -> clear
    void drawShape(android.graphics.Canvas,android.graphics.Paint) -> a
com.ds.avare.shapes.Radar -> wy.cr:
    long EXPIRES -> gO
    com.ds.avare.utils.BitmapHolder mBitmap -> gJ
    android.content.Context mContext -> mContext
    long mDate -> nu
    java.lang.String mImage -> nv
    float mLat -> gZ
    float mLon -> ha
    com.ds.avare.storage.Preferences mPref -> m
    float mPx -> nw
    float mPy -> nx
    java.lang.String mText -> ny
    void <init>(android.content.Context) -> <init>
    void draw(android.graphics.Canvas,android.graphics.Paint,com.ds.avare.position.Origin,com.ds.avare.position.Scale,float,float) -> a
    void flush() -> flush
    java.lang.String getDate() -> aI
    boolean isOld() -> aK
    void parse() -> bA
com.ds.avare.shapes.Shape -> wy.cs:
    java.util.LinkedList mCoords -> nz
    double mLatMax -> nA
    double mLatMin -> nB
    double mLonMax -> nC
    double mLonMin -> nD
    com.sromku.polygon.Polygon mPoly -> nE
    com.sromku.polygon.Polygon$Builder mPolyBuilder -> nF
    java.lang.String mText -> ny
    void <init>(java.lang.String) -> <init>
    void add(double,double,boolean) -> a
    void add(double,double,boolean,int) -> a
    void drawShape(android.graphics.Canvas,com.ds.avare.position.Origin,com.ds.avare.position.Scale,com.ds.avare.position.Movement,android.graphics.Paint,boolean,boolean) -> a
    void drawShape(android.graphics.Canvas,com.ds.avare.position.Origin,com.ds.avare.position.Scale,com.ds.avare.position.Movement,android.graphics.Paint,boolean,boolean,com.ds.avare.place.Plan) -> a
    double getLatitudeMinimum() -> dm
    int getNumCoords() -> dn
    java.lang.String getTextIfTouched(double,double) -> f
    void makePolygon() -> do
com.ds.avare.shapes.TFRShape -> wy.ct:
    void <init>(java.lang.String) -> <init>
com.ds.avare.shapes.Tile -> wy.cu:
    java.lang.String mChart -> nG
    double mHeight -> kv
    double mLatC -> mP
    double mLatLL -> nH
    double mLatLR -> nI
    double mLatUL -> nJ
    double mLatUR -> nK
    double mLonC -> mS
    double mLonLL -> nL
    double mLonLR -> nM
    double mLonUL -> nN
    double mLonUR -> nO
    java.lang.String mName -> mName
    double mWidth -> nP
    void <init>() -> <init>
    void <init>(com.ds.avare.storage.Preferences,java.lang.String,double,double,double,double,double,double,double,double,double,double,java.lang.String) -> <init>
    java.lang.String getChart() -> dp
    double getLatitude() -> getLatitude
    double getLongitude() -> getLongitude
    java.lang.String getName() -> getName
    java.lang.String getNeighbor(int,int) -> e
    double getOffsetTopX(double) -> s
    double getOffsetTopY(double) -> t
    double getOffsetX(double) -> n
    double getOffsetY(double) -> o
    double getPx() -> dq
    double getPy() -> dr
    boolean within(double,double) -> g
com.ds.avare.shapes.TileMap -> wy.cv:
    com.ds.avare.utils.BitmapHolder[] mBitmapCache -> nQ
    android.content.Context mContext -> mContext
    com.ds.avare.utils.BitmapHolder[] mFreeList -> nR
    com.ds.avare.storage.Preferences mPref -> m
    int mXtiles -> nS
    int mYtiles -> nT
    com.ds.avare.utils.BitmapHolder[] mapA -> nU
    com.ds.avare.utils.BitmapHolder[] mapB -> nV
    int numTiles -> nW
    int numTilesMax -> nX
    void <init>(android.content.Context) -> <init>
    void clear() -> clear
    void flip() -> ds
    void forceReload() -> aW
    com.ds.avare.utils.BitmapHolder getTile(int) -> t
    int getTilesNum() -> dt
    int getXTilesNum() -> du
    int getYTilesNum() -> dv
    void recycleBitmaps() -> dl
    void reload(java.lang.String[]) -> a
    void setOrientation() -> dw
com.ds.avare.shapes.TrackShape -> wy.cw:
    int LEG_CURRENT -> nY
    int LEG_NEXT -> nZ
    int LEG_PREV -> oa
    int MILES_PER_SEGMENT -> ly
    void <init>() -> <init>
    int getLegColor(int,int) -> f
    void updateShape(com.ds.avare.gps.GpsParams,com.ds.avare.place.Destination) -> c
    void updateShapeFromPlan(com.ds.avare.position.Coordinate[]) -> a
com.ds.avare.storage.DataBaseHelper -> wy.cx:
    java.lang.String BEACON -> ob
    int BEACON_COL -> oc
    java.lang.String CUSTOMS -> od
    int CUSTOMS_COL -> oe
    java.lang.String ELEVATION -> of
    java.lang.String FACILITY_NAME -> og
    int FACILITY_NAME_COL -> oh
    java.lang.String FACILITY_NAME_DB -> oi
    java.lang.String FSSPHONE -> oj
    int FSSPHONE_COL -> ok
    java.lang.String FUEL_TYPES -> ol
    int FUEL_TYPES_COL -> om
    java.lang.String INFO_DB -> on
    java.lang.String LATITUDE -> LATITUDE
    int LATITUDE_COL -> oo
    java.lang.String LATITUDE_DB -> op
    java.lang.String LOCATION_ID -> oq
    int LOCATION_ID_COL -> or
    java.lang.String LOCATION_ID_DB -> os
    java.lang.String LONGITUDE -> LONGITUDE
    int LONGITUDE_COL -> ot
    java.lang.String LONGITUDE_DB -> ou
    java.lang.String MAGNETIC_VARIATION -> ov
    int MAGNETIC_VARIATION_COL -> ow
    java.lang.String MANAGER_PHONE -> ox
    java.lang.String PROC -> oy
    java.lang.String SEGCIRCLE -> oz
    int SEGCIRCLE_COL -> oA
    java.lang.String TABLE_AFD -> oB
    java.lang.String TABLE_AIRPORTS -> oC
    java.lang.String TABLE_AIRPORT_AWOS -> oD
    java.lang.String TABLE_AIRPORT_DIAGS -> oE
    java.lang.String TABLE_AIRPORT_FREQ -> oF
    java.lang.String TABLE_AIRPORT_RUNWAYS -> oG
    java.lang.String TABLE_AIRWAYS -> oH
    java.lang.String TABLE_ALT -> oI
    java.lang.String TABLE_FILES -> oJ
    java.lang.String TABLE_FIX -> oK
    java.lang.String TABLE_FUEL -> oL
    java.lang.String TABLE_GEOPLATES -> oM
    java.lang.String TABLE_NAV -> oN
    java.lang.String TABLE_OBSTACLES -> oO
    java.lang.String TABLE_PROCEDURE -> oP
    java.lang.String TABLE_RATINGS -> oQ
    java.lang.String TABLE_SUA -> oR
    java.lang.String TABLE_TO -> oS
    java.lang.String TILE_NAME -> oT
    java.lang.String TYPE -> TYPE
    int TYPE_COL -> oU
    java.lang.String TYPE_DB -> oV
    com.ds.avare.shapes.Tile mCenterTile -> oW
    android.content.Context mContext -> mContext
    android.database.sqlite.SQLiteDatabase mDataBase -> oX
    android.database.sqlite.SQLiteDatabase mDataBaseElev -> oY
    android.database.sqlite.SQLiteDatabase mDataBaseFiles -> oZ
    android.database.sqlite.SQLiteDatabase mDataBaseFuel -> pa
    android.database.sqlite.SQLiteDatabase mDataBaseGeoPlates -> pb
    android.database.sqlite.SQLiteDatabase mDataBasePlates -> pc
    android.database.sqlite.SQLiteDatabase mDataBaseProcedures -> pd
    android.database.sqlite.SQLiteDatabase mDataBaseRatings -> pe
    android.database.sqlite.SQLiteDatabase mDataBaseWeather -> pf
    com.ds.avare.storage.Preferences mPref -> m
    java.lang.Integer mUsers -> pg
    java.lang.Integer mUsersElev -> ph
    java.lang.Integer mUsersFiles -> pi
    java.lang.Integer mUsersFuel -> pj
    java.lang.Integer mUsersGeoPlates -> pk
    java.lang.Integer mUsersPlates -> pl
    java.lang.Integer mUsersProcedures -> pm
    java.lang.Integer mUsersRatings -> pn
    java.lang.Integer mUsersWeather -> po
    void <init>(android.content.Context) -> <init>
    java.lang.String addPath(java.lang.String,java.lang.String) -> i
    void closes(android.database.Cursor) -> a
    void closesElev(android.database.Cursor) -> b
    void closesFiles(android.database.Cursor) -> c
    void closesFuel(android.database.Cursor) -> d
    void closesGeoPlates(android.database.Cursor) -> e
    void closesPlates(android.database.Cursor) -> f
    void closesProcedures(android.database.Cursor) -> g
    void closesRatings(android.database.Cursor) -> h
    void closesWeather(android.database.Cursor) -> i
    android.database.Cursor doQuery(java.lang.String,java.lang.String) -> j
    android.database.Cursor doQueryElev(java.lang.String,java.lang.String) -> k
    android.database.Cursor doQueryFiles(java.lang.String,java.lang.String) -> l
    android.database.Cursor doQueryFuel(java.lang.String,java.lang.String) -> m
    android.database.Cursor doQueryGeoPlates(java.lang.String,java.lang.String) -> n
    android.database.Cursor doQueryPlates(java.lang.String,java.lang.String) -> o
    android.database.Cursor doQueryProcedures(java.lang.String,java.lang.String) -> p
    android.database.Cursor doQueryRatings(java.lang.String,java.lang.String) -> q
    android.database.Cursor doQueryWeather(java.lang.String,java.lang.String) -> r
    java.lang.String getFilesDb() -> dx
    java.lang.String getMainDb() -> dy
    java.lang.String getWeatherDb() -> dz
    void searchCity(java.lang.String,java.util.LinkedHashMap) -> a
    com.ds.avare.storage.StringPreference searchRadial(java.lang.String) -> ai
    com.ds.avare.storage.StringPreference stringQuery(java.lang.String,java.lang.String,java.lang.String) -> d
    java.util.LinkedList findAFD(java.lang.String) -> aj
    java.util.LinkedList findAirway(java.lang.String) -> ak
    com.ds.avare.shapes.Tile findClosest(double,double,double[],double[],int) -> a
    java.lang.String findClosestAirportID(double,double) -> h
    com.ds.avare.place.Airport[] findClosestAirports(double,double,java.lang.String) -> a
    void findDestination(java.lang.String,java.lang.String,java.lang.String,java.util.LinkedHashMap,java.util.LinkedList,java.util.LinkedHashMap,java.util.LinkedList) -> a
    float[] findDiagramMatrix(java.lang.String) -> al
    java.lang.String findElev(java.lang.String) -> am
    com.ds.avare.shapes.Tile findElevTile(double,double,double[],double[],int) -> b
    java.util.LinkedList findFilesToDelete(java.lang.String,java.lang.String) -> s
    java.util.LinkedList findFrequencies(java.lang.String) -> an
    java.util.LinkedList findFuelCost(java.lang.String) -> ao
    float[] findGeoPlateMatrix(java.lang.String) -> ap
    java.lang.String findLonLat(java.lang.String,java.lang.String) -> t
    java.lang.String[] findMinimums(java.lang.String) -> aq
    com.ds.avare.position.Coordinate findNavaid(java.lang.String) -> ar
    java.lang.String findObstacle(java.lang.String,com.ds.avare.place.Destination) -> a
    java.util.LinkedList findObstacles(double,double,int) -> a
    java.util.HashMap findPlatesMatrix(java.lang.String) -> as
    java.util.LinkedList findProcedure(java.lang.String,java.lang.String,java.lang.String) -> e
    java.util.LinkedList findRatings(java.lang.String) -> at
    java.util.LinkedList findRunways(java.lang.String) -> au
    com.ds.avare.shapes.Tile findTile(java.lang.String) -> av
    java.util.LinkedList getAirSigMets() -> dA
    java.util.LinkedList getAireps(double,double) -> i
    com.ds.avare.position.Coordinate getCoordinate(java.lang.String) -> aw
    com.ds.avare.weather.Metar getMETAR(java.lang.String) -> ax
    java.lang.String getSua(double,double) -> j
    com.ds.avare.weather.Taf getTAF(java.lang.String) -> ay
    com.ds.avare.weather.WindsAloft getWindsAloft(double,double) -> k
    boolean isPresent() -> isPresent
    boolean isWithin(double,double,double[],double[]) -> a
    void search(java.lang.String,java.util.LinkedHashMap,boolean) -> a
    com.ds.avare.storage.StringPreference searchOne(java.lang.String) -> az
com.ds.avare.storage.DataBaseHelper$1 -> wy.cy:
    com.ds.avare.storage.DataBaseHelper this$0 -> pp
    java.lang.String val$loc -> pq
    void <init>(com.ds.avare.storage.DataBaseHelper,java.lang.String) -> <init>
    boolean accept(java.io.File,java.lang.String) -> accept
com.ds.avare.storage.DataSource -> wy.cz:
    com.ds.avare.storage.DataBaseHelper dbHelper -> pr
    void <init>(android.content.Context) -> <init>
    java.util.LinkedList findAFD(java.lang.String) -> aj
    java.util.LinkedList findAirway(java.lang.String) -> ak
    com.ds.avare.shapes.Tile findClosest(double,double,double[],double[],int) -> a
    java.lang.String findClosestAirportID(double,double) -> h
    com.ds.avare.place.Airport[] findClosestAirports(double,double,java.lang.String) -> a
    void findDestination(java.lang.String,java.lang.String,java.lang.String,java.util.LinkedHashMap,java.util.LinkedList,java.util.LinkedHashMap,java.util.LinkedList) -> a
    float[] findDiagramMatrix(java.lang.String) -> al
    java.lang.String findElev(java.lang.String) -> am
    com.ds.avare.shapes.Tile findElevTile(double,double,double[],double[],int) -> b
    java.util.LinkedList findFilesToDelete(java.lang.String,java.lang.String) -> s
    java.util.LinkedList findFrequencies(java.lang.String) -> an
    java.util.LinkedList findFuelCost(java.lang.String) -> ao
    float[] findGeoPlateMatrix(java.lang.String) -> ap
    java.lang.String findLonLat(java.lang.String,java.lang.String) -> t
    java.lang.String[] findMinimums(java.lang.String) -> aq
    com.ds.avare.position.Coordinate findNavaid(java.lang.String) -> ar
    java.lang.String findObstacle(java.lang.String,com.ds.avare.place.Destination) -> a
    java.util.LinkedList findObstacles(double,double,int) -> a
    java.util.HashMap findPlatesMatrix(java.lang.String) -> as
    java.util.LinkedList findProcedure(java.lang.String,java.lang.String,java.lang.String) -> e
    java.util.LinkedList findRatings(java.lang.String) -> at
    java.util.LinkedList findRunways(java.lang.String) -> au
    com.ds.avare.shapes.Tile findTile(java.lang.String) -> av
    java.util.LinkedList getAirSigMets() -> dA
    java.util.LinkedList getAireps(double,double) -> i
    com.ds.avare.position.Coordinate getCoordinate(java.lang.String) -> aw
    com.ds.avare.weather.Metar getMETAR(java.lang.String) -> ax
    java.lang.String getSua(double,double) -> j
    com.ds.avare.weather.Taf getTAF(java.lang.String) -> ay
    com.ds.avare.weather.WindsAloft getWindsAloft(double,double) -> k
    boolean isPresent() -> isPresent
    boolean isWithin(double,double,double[],double[]) -> a
    void search(java.lang.String,java.util.LinkedHashMap,boolean) -> a
    com.ds.avare.storage.StringPreference searchOne(java.lang.String) -> az
com.ds.avare.storage.Preferences -> wy.da:
    double DISTANCE_TO_AUTO_LOAD_PLATE -> ps
    java.lang.String IMAGE_EXTENSION -> pt
    int MAX_AREA_AIRPORTS -> pu
    int MAX_LISTS -> pv
    int MAX_PLANS -> pw
    int MAX_RECENT -> px
    long MEM_128 -> py
    int MEM_128_X -> pz
    int MEM_128_Y -> pA
    long MEM_16 -> pB
    int MEM_16_X -> pC
    int MEM_16_Y -> pD
    long MEM_192 -> pE
    int MEM_192_X -> pF
    int MEM_192_Y -> pG
    long MEM_32 -> pH
    int MEM_32_X -> pI
    int MEM_32_Y -> pJ
    long MEM_64 -> pK
    int MEM_64_X -> pL
    int MEM_64_Y -> pM
    double MIN_TOUCH_MOVEMENT_SQ_DISTANCE -> pN
    double MS_TO_KT -> pO
    double NM_TO_KM -> pP
    double NM_TO_LATITUDE -> pQ
    double NM_TO_MI -> pR
    java.lang.String distanceConversionUnit -> pS
    double earthRadiusConversion -> pT
    double feetConversion -> pU
    double heightConversion -> pV
    double speedConversion -> pW
    java.lang.String speedConversionUnit -> pX
    java.lang.String vsConversionUnit -> pY
    android.content.Context mContext -> mContext
    android.content.SharedPreferences mPref -> pZ
    void <clinit>() -> <clinit>
    void <init>(android.content.Context) -> <init>
    int[] getTilesNumber() -> dB
    void addToRecent(java.lang.String) -> aA
    boolean allowRubberBanding() -> dC
    int autoPostTracks() -> dD
    void deleteARecent(java.lang.String) -> aB
    java.lang.String getAirSigMetType() -> dE
    java.lang.String getChartType() -> dF
    int getCycleAdjust() -> dG
    int getDisplayIcon() -> dH
    int getDistanceRingColor() -> dI
    int getDistanceRingType() -> dJ
    java.lang.String getDistanceUnit() -> dK
    java.lang.String getExternalGpsSource() -> dL
    java.lang.String getGeoCode() -> dM
    java.lang.String getGeotags() -> dN
    float getGlideRatio() -> dO
    int getHotelAdultsIndex() -> dP
    int getHotelChildIndex(java.lang.String) -> aC
    int getHotelMaxDistanceIndex() -> dQ
    int getHotelMaxPriceIndex() -> dR
    int getHotelMinStarIndex() -> dS
    java.lang.String getLMFSPlan() -> dT
    java.lang.String getLists() -> dU
    java.lang.String getLongestRunway() -> bE
    double getOdometer() -> dV
    java.lang.String getOrientation() -> dW
    boolean getPlanControl() -> dX
    java.lang.String getPlans() -> dY
    java.lang.String[] getRecent() -> dZ
    java.lang.String getRegisteredEmail() -> ea
    java.lang.String getRoot() -> getRoot
    java.lang.String getRowFormats() -> eb
    boolean getShowCDI() -> ec
    long getTabs() -> ed
    int getTimerRingSize() -> ee
    java.lang.String getUDWLocation() -> ef
    boolean isGpsUpdatePeriodShort() -> eg
    boolean isNewerVersion(android.app.Activity) -> a
    boolean isNightMode() -> eh
    boolean isRegistered() -> isRegistered
    boolean isSimulationMode() -> ei
    boolean isTrackEnabled() -> ej
    boolean isWeatherTranslated() -> ek
    java.lang.String loadString(java.lang.String) -> aD
    java.lang.String mapsFolder() -> el
    void modifyARecent(java.lang.String,java.lang.String) -> u
    void putLists(java.lang.String) -> aE
    void putPlans(java.lang.String) -> aF
    void saveLMFSPlan(java.lang.String) -> aG
    void setChartType(java.lang.String) -> aH
    void setGeotags(java.lang.String) -> aI
    void setHotelAdultsIndex(int) -> u
    void setHotelChildIndex(java.lang.String,int) -> b
    void setHotelMaxDistanceIndex(int) -> v
    void setHotelMaxPriceIndex(int) -> w
    void setHotelMinStarIndex(int) -> x
    void setMapsFolder(java.lang.String) -> aJ
    void setOdometer(double) -> u
    void setRegistered(boolean) -> g
    void setRegisteredEmail(java.lang.String) -> aK
    void setRowFormats(java.lang.String) -> aL
    void setSimMode(boolean) -> h
    void setUDWLocation(java.lang.String) -> aM
    boolean shouldAutoDisplayAirportDiagram() -> em
    boolean shouldBlinkScreen() -> en
    boolean shouldDrawTracks() -> eo
    boolean shouldExtendRunways() -> ep
    boolean shouldGpsWarn() -> eq
    boolean shouldLeaveRunning() -> er
    boolean shouldSaveTracks() -> es
    boolean shouldScreenStayOn() -> et
    boolean shouldShowAllFacilities() -> eu
    boolean shouldShowBackground() -> ev
    boolean shouldShowEdgeTape() -> ew
    boolean shouldShowObstacles() -> ex
    boolean showAdsbTraffic() -> ey
    boolean showCAPGrids() -> ez
    boolean showGameTFRs() -> eA
    boolean showPlateInfoLines() -> eB
    int showRadar() -> eC
    boolean useAdsbWeather() -> eD
    boolean useBearingForETEA() -> eE
    boolean useDynamicFields() -> eF
com.ds.avare.storage.StringPreference -> wy.db:
    java.lang.String mDbType -> kZ
    java.lang.String mDestType -> lb
    java.lang.String mId -> kw
    java.lang.String mName -> mName
    void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    java.lang.String formatAddressName(java.lang.String) -> aN
    java.lang.String getHashedName(java.lang.String,java.lang.String) -> v
    java.lang.String joinName() -> eG
    java.lang.String parseHashedNameDbType(java.lang.String) -> aO
    java.lang.String parseHashedNameDesc(java.lang.String) -> aP
    java.lang.String parseHashedNameDestType(java.lang.String) -> aQ
    java.lang.String parseHashedNameFacilityName(java.lang.String) -> aR
    java.lang.String parseHashedNameId(java.lang.String) -> aS
    java.lang.String parseHashedNameIdAfter(java.lang.String) -> aT
    java.lang.String parseHashedNameIdBefore(java.lang.String) -> aU
    java.lang.String getHashedName() -> eH
    java.lang.String getId() -> getId
    java.lang.String getType() -> getType
    void putInHash(java.util.LinkedHashMap) -> a
com.ds.avare.touch.GestureInterface -> wy.dc:
    int DOUBLE_TAP -> qa
    int LONG_PRESS -> LONG_PRESS
    int TOUCH -> qb
    void gestureCallBack(int,com.ds.avare.touch.LongTouchDestination) -> a
    void gestureCallBack(int,com.ds.avare.utils.InfoLines$InfoLineFieldLoc) -> a
com.ds.avare.touch.LongTouchDestination -> wy.dd:
    java.util.LinkedList airep -> qc
    java.lang.String airport -> qd
    java.util.LinkedList freq -> qe
    java.lang.String fuel -> qf
    java.lang.String info -> info
    com.ds.avare.weather.Metar metar -> qg
    java.lang.String mets -> qh
    java.lang.String performance -> qi
    java.lang.String radar -> qj
    java.lang.String ratings -> qk
    java.lang.String sua -> ql
    com.ds.avare.weather.Taf taf -> qm
    java.lang.String tfr -> qn
    com.ds.avare.weather.WindsAloft wa -> qo
    void <init>() -> <init>
com.ds.avare.touch.MultiTouchController -> wy.de:
    int ACTION_POINTER_INDEX_SHIFT -> ACTION_POINTER_INDEX_SHIFT
    int ACTION_POINTER_UP -> ACTION_POINTER_UP
    boolean DEBUG -> DEBUG
    long EVENT_SETTLE_TIME_INTERVAL -> qp
    float MAX_MULTITOUCH_DIM_JUMP_SIZE -> qq
    float MAX_MULTITOUCH_POS_JUMP_SIZE -> qr
    int MAX_TOUCH_POINTS -> qs
    float MIN_MULTITOUCH_SEPARATION -> qt
    int MODE_DRAG -> qu
    int MODE_NOTHING -> qv
    int MODE_PINCH -> qw
    java.lang.reflect.Method m_getHistoricalPressure -> qx
    java.lang.reflect.Method m_getHistoricalX -> qy
    java.lang.reflect.Method m_getHistoricalY -> qz
    java.lang.reflect.Method m_getPointerCount -> qA
    java.lang.reflect.Method m_getPointerId -> qB
    java.lang.reflect.Method m_getPressure -> qC
    java.lang.reflect.Method m_getX -> qD
    java.lang.reflect.Method m_getY -> qE
    boolean multiTouchSupported -> qF
    int[] pointerIds -> qG
    float[] pressureVals -> qH
    float[] xVals -> qI
    float[] yVals -> qJ
    boolean handleSingleTouchEvents -> qK
    com.ds.avare.touch.MultiTouchController$PointInfo mCurrPt -> qL
    float mCurrPtAng -> qM
    float mCurrPtDiam -> qN
    float mCurrPtHeight -> qO
    float mCurrPtWidth -> qP
    float mCurrPtX -> qQ
    float mCurrPtY -> qR
    com.ds.avare.touch.MultiTouchController$PositionAndScale mCurrXform -> qS
    float mMacro -> qT
    int mMode -> qU
    com.ds.avare.touch.MultiTouchController$PointInfo mPrevPt -> qV
    long mSettleEndTime -> qW
    long mSettleStartTime -> qX
    com.ds.avare.touch.MultiTouchController$MultiTouchObjectCanvas objectCanvas -> qY
    java.lang.Object selectedObject -> qZ
    float startAngleMinusPinchAngle -> ra
    float startPosX -> rb
    float startPosY -> rc
    float startScaleOverPinchDiam -> rd
    float startScaleXOverPinchWidth -> re
    float startScaleYOverPinchHeight -> rf
    void <clinit>() -> <clinit>
    void <init>(com.ds.avare.touch.MultiTouchController$MultiTouchObjectCanvas) -> <init>
    void <init>(com.ds.avare.touch.MultiTouchController$MultiTouchObjectCanvas,boolean) -> <init>
    void anchorAtThisPositionAndScale() -> eI
    void decodeTouchEvent(int,float[],float[],float[],int[],int,boolean,long) -> a
    void extractCurrPtInfo() -> eJ
    void multiTouchController() -> eK
    void performDragOrPinch() -> eL
    boolean getHandleSingleTouchEvents() -> eM
    int getMode() -> getMode
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setHandleSingleTouchEvents(boolean) -> i
    void setMacro(float) -> b
com.ds.avare.touch.MultiTouchController$MultiTouchObjectCanvas -> wy.df:
    java.lang.Object getDraggableObjectAtPoint(com.ds.avare.touch.MultiTouchController$PointInfo) -> a
    void getPositionAndScale(java.lang.Object,com.ds.avare.touch.MultiTouchController$PositionAndScale) -> a
    void selectObject(java.lang.Object,com.ds.avare.touch.MultiTouchController$PointInfo) -> a
    boolean setPositionAndScale(java.lang.Object,com.ds.avare.touch.MultiTouchController$PositionAndScale,com.ds.avare.touch.MultiTouchController$PointInfo) -> a
com.ds.avare.touch.MultiTouchController$PointInfo -> wy.dg:
    int action -> action
    float angle -> rg
    boolean angleIsCalculated -> rh
    float diameter -> ri
    boolean diameterIsCalculated -> rj
    float diameterSq -> rk
    boolean diameterSqIsCalculated -> rl
    float dx -> rm
    float dy -> rn
    long eventTime -> ro
    boolean isDown -> rp
    boolean isMultiTouch -> rq
    int numPoints -> rr
    int[] pointerIds -> qG
    float pressureMid -> rs
    float[] pressures -> rt
    float xMid -> ru
    float[] xs -> rv
    float yMid -> rw
    float[] ys -> rx
    void <init>() -> <init>
    long access$1000(com.ds.avare.touch.MultiTouchController$PointInfo) -> b
    void access$300(com.ds.avare.touch.MultiTouchController$PointInfo,int,float[],float[],float[],int[],int,boolean,long) -> a
    int julery_isqrt(int) -> y
    void set(int,float[],float[],float[],int[],int,boolean,long) -> b
    int getAction() -> getAction
    long getEventTime() -> getEventTime
    float getMultiTouchAngle() -> eN
    float getMultiTouchDiameter() -> eO
    float getMultiTouchDiameterSq() -> eP
    float getMultiTouchHeight() -> eQ
    float getMultiTouchWidth() -> eR
    int getNumTouchPoints() -> eS
    int[] getPointerIds() -> eT
    float getPressure() -> getPressure
    float[] getPressures() -> eU
    float getX() -> getX
    float[] getXs() -> eV
    float getY() -> getY
    float[] getYs() -> eW
    boolean isDown() -> eX
    boolean isMultiTouch() -> eY
    void set(com.ds.avare.touch.MultiTouchController$PointInfo) -> c
com.ds.avare.touch.MultiTouchController$PositionAndScale -> wy.dh:
    float angle -> rg
    float scale -> ry
    float scaleX -> rz
    float scaleY -> rA
    boolean updateAngle -> rB
    boolean updateScale -> rC
    boolean updateScaleXY -> rD
    float xOff -> rE
    float yOff -> rF
    void <init>() -> <init>
    boolean access$000(com.ds.avare.touch.MultiTouchController$PositionAndScale) -> a
    boolean access$100(com.ds.avare.touch.MultiTouchController$PositionAndScale) -> b
    boolean access$200(com.ds.avare.touch.MultiTouchController$PositionAndScale) -> c
    float access$400(com.ds.avare.touch.MultiTouchController$PositionAndScale) -> d
    float access$500(com.ds.avare.touch.MultiTouchController$PositionAndScale) -> e
    float access$600(com.ds.avare.touch.MultiTouchController$PositionAndScale) -> f
    float access$700(com.ds.avare.touch.MultiTouchController$PositionAndScale) -> g
    float access$800(com.ds.avare.touch.MultiTouchController$PositionAndScale) -> h
    float access$900(com.ds.avare.touch.MultiTouchController$PositionAndScale) -> i
    float getAngle() -> eZ
    float getScale() -> getScale
    float getScaleX() -> getScaleX
    float getScaleY() -> getScaleY
    float getXOff() -> fa
    float getYOff() -> fb
    void set(float,float,float,float,float,float) -> a
    void set(float,float,boolean,float,boolean,float,float,boolean,float) -> a
com.ds.avare.userDefinedWaypoints.CsvUDWParser -> wy.di:
    void <init>() -> <init>
    java.util.List parse(java.io.FileInputStream) -> a
com.ds.avare.userDefinedWaypoints.GpxUDWParser -> wy.dj:
    java.lang.String CREATOR -> CREATOR
    java.lang.String GPX -> hD
    java.lang.String LAT -> hE
    java.lang.String LON -> hF
    java.lang.String NAME -> NAME
    java.lang.String NS -> hG
    java.lang.String VFRGPSPROCEDURES -> rG
    java.lang.String WPT -> rH
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    java.util.List readGPX(org.xmlpull.v1.XmlPullParser) -> h
    java.lang.String readNAME(org.xmlpull.v1.XmlPullParser) -> c
    java.lang.String readText(org.xmlpull.v1.XmlPullParser) -> f
    com.ds.avare.userDefinedWaypoints.Waypoint readWPT(org.xmlpull.v1.XmlPullParser) -> i
    void skip(org.xmlpull.v1.XmlPullParser) -> g
    java.util.List parse(java.io.FileInputStream) -> a
com.ds.avare.userDefinedWaypoints.KmlUDWParser -> wy.dk:
    java.lang.String COORDINATES -> rI
    java.lang.String DOCUMENT -> rJ
    java.lang.String FOLDER -> rK
    java.lang.String KML -> rL
    java.lang.String NAME -> NAME
    java.lang.String NS -> hG
    java.lang.String PLACEMARK -> rM
    java.lang.String POINT -> rN
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    java.lang.String readCoordinates(org.xmlpull.v1.XmlPullParser) -> j
    java.util.List readDocument(org.xmlpull.v1.XmlPullParser) -> k
    java.util.List readFolder(org.xmlpull.v1.XmlPullParser) -> l
    java.util.List readKmlData(org.xmlpull.v1.XmlPullParser) -> m
    java.lang.String readName(org.xmlpull.v1.XmlPullParser) -> n
    java.lang.String readPoint(org.xmlpull.v1.XmlPullParser) -> o
    java.lang.String readText(org.xmlpull.v1.XmlPullParser) -> f
    com.ds.avare.userDefinedWaypoints.Waypoint readWaypoint(org.xmlpull.v1.XmlPullParser) -> p
    void skip(org.xmlpull.v1.XmlPullParser) -> g
    java.util.List parse(java.io.FileInputStream) -> a
com.ds.avare.userDefinedWaypoints.UDWFactory -> wy.dl:
    java.lang.String CSV -> rO
    java.lang.String GPX -> hD
    java.lang.String KML -> rL
    java.lang.String TXT -> rP
    java.lang.String XML -> rQ
    void <init>() -> <init>
    java.util.List parse(java.lang.String) -> parse
com.ds.avare.userDefinedWaypoints.UDWMgr -> wy.dm:
    int MAXUDW -> rR
    java.lang.String UDWDESCRIPTION -> rS
    float m15Pix -> rT
    float m2Pix -> rU
    android.content.Context mContext -> mContext
    android.graphics.Paint mPaint -> hv
    float mPix -> rV
    java.util.List mPoints -> rW
    com.ds.avare.StorageService mService -> n
    void <init>(com.ds.avare.StorageService,android.content.Context) -> <init>
    void add(com.ds.avare.userDefinedWaypoints.Waypoint) -> a
    void clear() -> clear
    void draw(android.graphics.Canvas,boolean,com.ds.avare.gps.GpsParams,android.graphics.Typeface,com.ds.avare.position.Origin) -> a
    void forceReload() -> aW
    com.ds.avare.userDefinedWaypoints.Waypoint get(java.lang.String) -> aV
    int getCount() -> getCount
    void populate(java.lang.String) -> t
    void remove(com.ds.avare.userDefinedWaypoints.Waypoint) -> b
    void search(java.lang.String,java.util.LinkedHashMap) -> b
    void setDipToPix(float) -> c
    java.lang.String whereAndHowFar(com.ds.avare.userDefinedWaypoints.Waypoint) -> c
com.ds.avare.userDefinedWaypoints.UDWParser -> wy.dn:
    void <init>() -> <init>
    java.util.List parse(java.io.FileInputStream) -> a
com.ds.avare.userDefinedWaypoints.Waypoint -> wy.do:
    int MT_CROSSHAIRS -> rX
    int MT_CYANDOT -> rY
    int MT_NONE -> rZ
    java.lang.String mCmt -> hx
    float mLat -> gZ
    boolean mLocked -> sa
    float mLon -> ha
    int mMarkerType -> sb
    java.lang.String mName -> mName
    boolean mShowDist -> sc
    java.lang.String mType -> hz
    boolean mVisible -> sd
    void <init>(java.lang.String,java.lang.String,float,float,boolean,int,boolean) -> <init>
    void draw(android.graphics.Canvas,com.ds.avare.position.Origin,boolean,com.ds.avare.gps.GpsParams,android.graphics.Paint,com.ds.avare.StorageService,java.lang.String,float) -> a
    java.lang.String getCmt() -> aS
    float getLat() -> fc
    boolean getLocked() -> fd
    float getLon() -> fe
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    boolean getVisible() -> ff
    void setCmt(java.lang.String) -> aW
    void setMarkerType(int) -> z
    void setVisible(boolean) -> setVisible
com.ds.avare.utils.BitmapHolder -> com.ds.avare.utils.a:
    int HEIGHT -> se
    int WIDTH -> sf
    android.graphics.Bitmap mBitmap -> sg
    android.graphics.Canvas mCanvas -> sh
    boolean mFound -> kH
    boolean mFree -> si
    int mHeight -> lw
    java.lang.String mName -> mName
    android.graphics.Matrix mTransform -> sj
    int mWidth -> sk
    void <init>() -> <init>
    void <init>(int,int) -> <init>
    void <init>(android.content.Context,int) -> <init>
    void <init>(android.content.Context,com.ds.avare.storage.Preferences,java.lang.String,int) -> <init>
    void <init>(android.graphics.Bitmap) -> <init>
    void <init>(java.lang.String) -> <init>
    void getTileOptions(java.lang.String,com.ds.avare.storage.Preferences,int[]) -> a
    void drawInBitmap(com.ds.avare.utils.BitmapHolder,java.lang.String,int,int) -> a
    android.graphics.Bitmap getBitmap() -> getBitmap
    boolean getFound() -> fg
    boolean getFree() -> fh
    int getHeight() -> getHeight
    java.lang.String getName() -> getName
    android.graphics.Matrix getTransform() -> fi
    int getWidth() -> getWidth
    void recycle() -> recycle
    void setFound(boolean) -> j
    void setFree(boolean) -> k
com.ds.avare.utils.DisplayIcon -> com.ds.avare.utils.b:
    void <init>() -> <init>
    com.ds.avare.utils.BitmapHolder getDisplayIcon(android.content.Context,com.ds.avare.storage.Preferences) -> b
com.ds.avare.utils.Dms -> com.ds.avare.utils.c:
    void <init>() -> <init>
    double[] fracToDMS(double) -> v
com.ds.avare.utils.EditTextPreferenceWithSummary -> com.ds.avare.utils.d:
    java.lang.String originalSummary -> sl
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setSummary(java.lang.CharSequence) -> setSummary
    void setText(java.lang.String) -> setText
com.ds.avare.utils.FolderPreference -> com.ds.avare.utils.e:
    android.widget.ListAdapter mAdapter -> sm
    android.widget.Button mButton -> sn
    android.widget.Button mButtonSD -> so
    java.lang.String mChosenFile -> sp
    android.content.Context mContext -> mContext
    com.ds.avare.utils.FolderPreference$Item[] mFileList -> sq
    java.lang.Boolean mFirstLevel -> sr
    android.widget.ListView mListView -> ss
    java.io.File mPath -> st
    android.widget.TextView mPathView -> su
    com.ds.avare.storage.Preferences mPref -> m
    java.util.ArrayList mStr -> sv
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    android.content.Context access$000(com.ds.avare.utils.FolderPreference) -> a
    void access$100(com.ds.avare.utils.FolderPreference,java.lang.String) -> a
    void access$200(com.ds.avare.utils.FolderPreference) -> b
    android.widget.ListAdapter access$300(com.ds.avare.utils.FolderPreference) -> c
    android.widget.ListView access$400(com.ds.avare.utils.FolderPreference) -> d
    java.lang.String access$500(com.ds.avare.utils.FolderPreference) -> e
    java.lang.String access$502(com.ds.avare.utils.FolderPreference,java.lang.String) -> b
    com.ds.avare.utils.FolderPreference$Item[] access$600(com.ds.avare.utils.FolderPreference) -> f
    com.ds.avare.utils.FolderPreference$Item[] access$602(com.ds.avare.utils.FolderPreference,com.ds.avare.utils.FolderPreference$Item[]) -> a
    java.io.File access$700(com.ds.avare.utils.FolderPreference) -> g
    java.io.File access$702(com.ds.avare.utils.FolderPreference,java.io.File) -> a
    java.lang.Boolean access$802(com.ds.avare.utils.FolderPreference,java.lang.Boolean) -> a
    java.util.ArrayList access$900(com.ds.avare.utils.FolderPreference) -> h
    void init(java.lang.String) -> aX
    void loadFileList() -> fj
    android.view.View onCreateDialogView() -> onCreateDialogView
    void onDialogClosed(boolean) -> onDialogClosed
com.ds.avare.utils.FolderPreference$1 -> com.ds.avare.utils.f:
    com.ds.avare.utils.FolderPreference this$0 -> sw
    void <init>(com.ds.avare.utils.FolderPreference) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.utils.FolderPreference$2 -> com.ds.avare.utils.g:
    com.ds.avare.utils.FolderPreference this$0 -> sw
    void <init>(com.ds.avare.utils.FolderPreference) -> <init>
    void onClick(android.view.View) -> onClick
com.ds.avare.utils.FolderPreference$3 -> com.ds.avare.utils.h:
    com.ds.avare.utils.FolderPreference this$0 -> sw
    void <init>(com.ds.avare.utils.FolderPreference) -> <init>
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.ds.avare.utils.FolderPreference$4 -> com.ds.avare.utils.i:
    com.ds.avare.utils.FolderPreference this$0 -> sw
    void <init>(com.ds.avare.utils.FolderPreference) -> <init>
    boolean accept(java.io.File,java.lang.String) -> accept
com.ds.avare.utils.FolderPreference$5 -> com.ds.avare.utils.j:
    com.ds.avare.utils.FolderPreference this$0 -> sw
    void <init>(com.ds.avare.utils.FolderPreference,android.content.Context,int,int,com.ds.avare.utils.FolderPreference$Item[]) -> <init>
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.ds.avare.utils.FolderPreference$Item -> com.ds.avare.utils.k:
    java.lang.String file -> sx
    int icon -> icon
    com.ds.avare.utils.FolderPreference this$0 -> sw
    void <init>(com.ds.avare.utils.FolderPreference,java.lang.String,java.lang.Integer) -> <init>
    java.lang.String toString() -> toString
com.ds.avare.utils.GenericCallback -> com.ds.avare.utils.l:
    void <init>() -> <init>
    java.lang.Object callback(java.lang.Object,java.lang.Object) -> a
com.ds.avare.utils.Helper -> com.ds.avare.utils.m:
    void <init>() -> <init>
    double angularDifference(double,double) -> l
    java.lang.String calculateAGLFromThreshold(float,float) -> c
    java.lang.String calculateAltitudeFromThreshold(float) -> d
    java.lang.String calculateEta(boolean,java.util.TimeZone,double,double,double,double) -> a
    java.lang.String calculateEte(boolean,double,double,double,double) -> a
    float calculateThreshold(double) -> w
    java.lang.String centerString(java.lang.String,int) -> c
    java.lang.String correctConvertHeading(long) -> b
    void deleteDir(java.io.File) -> a
    android.text.format.Time fetchRawEte(boolean,double,double,double,double) -> b
    double findElevationFromPixel(int) -> A
    java.lang.String formatJsArgs(java.lang.String) -> aY
    float getDpiToPix(android.content.Context) -> d
    double getMagneticHeading(double,double) -> m
    long getMillisGMT() -> fk
    android.graphics.Bitmap getResizedBitmap(android.graphics.Bitmap,int,int,double) -> a
    java.util.LinkedList getShapesInTFR(android.content.Context) -> e
    double getSpeedInKnots(double) -> x
    java.lang.String getWebViewFile(android.content.Context,java.lang.String) -> c
    java.lang.String incTileName(java.lang.String,int,int) -> a
    void invertCanvasColors(android.graphics.Paint) -> a
    boolean isFrequencyUHF(double) -> y
    boolean isLatitudeSane(double) -> z
    boolean isLongitudeSane(double) -> A
    boolean isSameGPSLocation(double,double,double,double) -> d
    boolean leftOfCourseLine(double,double) -> n
    java.lang.String makeLine(double,java.lang.String,java.lang.String,double,double) -> a
    java.lang.String makeLine2(double,java.lang.String,java.lang.String,double,double) -> b
    java.lang.String makeVariation(double) -> B
    java.lang.String millisToGMT(long) -> c
    double parseVariation(java.lang.String) -> aZ
    java.lang.String readFromAssetsFile(java.lang.String,android.content.Context) -> a
    java.lang.String readFromFile(java.lang.String) -> ba
    java.lang.String removeLeadingZeros(java.lang.String) -> bb
    void restoreCanvasColors(android.graphics.Paint) -> b
    void setOrientationAndOn(android.app.Activity) -> b
    void setTheme(android.app.Activity) -> c
    void setThreshold(android.graphics.Paint,float) -> a
    double truncGeo(double) -> C
    boolean writeFile(java.lang.String,java.lang.String) -> w
com.ds.avare.utils.InfoLines -> com.ds.avare.utils.n:
    int ID_DO_LANDSCAPE -> sy
    int ID_DO_PORTRAIT -> sz
    int ID_FLD_AGL -> sA
    int ID_FLD_BRG -> sB
    int ID_FLD_CDI -> sC
    int ID_FLD_DIS -> sD
    int ID_FLD_DST -> sE
    int ID_FLD_ETA -> sF
    int ID_FLD_ETE -> sG
    int ID_FLD_FPR -> sH
    int ID_FLD_FUL -> sI
    int ID_FLD_GMT -> sJ
    int ID_FLD_HDG -> sK
    int ID_FLD_HOB -> sL
    int ID_FLD_LT -> sM
    int ID_FLD_MAX -> sN
    int ID_FLD_MSL -> sO
    int ID_FLD_NUL -> sP
    int ID_FLD_ODO -> sQ
    int ID_FLD_SPD -> sR
    int ID_FLD_VSI -> sS
    int ID_FLD_VSR -> sT
    int MAX_FIELD_SIZE_IN_CHARS -> sU
    int MAX_INFO_ROWS -> sV
    java.lang.String NOVALUE -> sW
    double TITLE_TO_TEXT_RATIO -> sX
    int mCharWidth -> sY
    android.content.Context mContext -> mContext
    int mDisplayOrientation -> sZ
    int mDisplayWidth -> ta
    float mElev -> tb
    int[][] mFieldLines -> tc
    int[] mFieldPosX -> td
    java.lang.String[] mFieldTitles -> te
    int mFieldWidth -> tf
    java.lang.String[] mOptionList -> tg
    com.ds.avare.storage.Preferences mPref -> m
    int mRowCount -> th
    com.ds.avare.StorageService mService -> n
    float mShadowY -> ti
    float mThreshold -> tj
    void <init>(com.ds.avare.StorageService) -> <init>
    java.lang.String buildConfigString() -> fl
    java.lang.String getDisplayFieldValue(int,boolean) -> a
    java.lang.String getFmtString(double) -> D
    boolean isShowing(int) -> B
    void resizeFields(android.graphics.Paint,int,int) -> a
    void setRowCount() -> fm
    void drawCornerTextsDynamic(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.String,java.lang.String) -> a
    com.ds.avare.utils.InfoLines$InfoLineFieldLoc findField(android.graphics.Paint,float,float) -> a
    float getHeight() -> getHeight
    void longPress(com.ds.avare.utils.InfoLines$InfoLineFieldLoc) -> a
    boolean rangeCheck(com.ds.avare.utils.InfoLines$InfoLineFieldLoc,int) -> a
    void setFieldType(com.ds.avare.utils.InfoLines$InfoLineFieldLoc,int) -> b
    void touch(com.ds.avare.utils.InfoLines$InfoLineFieldLoc) -> b
com.ds.avare.utils.InfoLines$1 -> com.ds.avare.utils.o:
com.ds.avare.utils.InfoLines$InfoLineFieldLoc -> com.ds.avare.utils.p:
    int mFieldIdx -> tk
    java.lang.String[] mOptions -> tl
    int mRowIdx -> tm
    int mSelected -> tn
    com.ds.avare.utils.InfoLines this$0 -> to
    void <init>(com.ds.avare.utils.InfoLines,int,int,java.lang.String[],int) -> <init>
    void <init>(com.ds.avare.utils.InfoLines,int,int,java.lang.String[],int,com.ds.avare.utils.InfoLines$1) -> <init>
    java.lang.String[] access$100(com.ds.avare.utils.InfoLines$InfoLineFieldLoc) -> c
    int access$200(com.ds.avare.utils.InfoLines$InfoLineFieldLoc) -> d
    int access$300(com.ds.avare.utils.InfoLines$InfoLineFieldLoc) -> e
    java.lang.String[] getOptions() -> fn
    int getSelected() -> fo
com.ds.avare.utils.ListPreferenceWithSummary -> com.ds.avare.utils.q:
    java.lang.String originalSummary -> sl
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void setSummary(java.lang.CharSequence) -> setSummary
    void setValue(java.lang.String) -> setValue
com.ds.avare.utils.Mutex -> com.ds.avare.utils.r:
    boolean mAvailable -> tp
    void <init>() -> <init>
    void lock() -> lock
    void unlock() -> unlock
com.ds.avare.utils.NavComments -> com.ds.avare.utils.s:
    java.lang.String mLeftComment -> tq
    java.lang.String mRightComment -> tr
    void <init>() -> <init>
    void clear() -> clear
    void draw(android.view.View,android.graphics.Canvas,android.graphics.Paint,com.ds.avare.utils.ShadowedText) -> a
    void setLeft(java.lang.String) -> bc
    void setRight(java.lang.String) -> bd
com.ds.avare.utils.NetworkHelper -> com.ds.avare.utils.t:
    int EXPIRES -> ts
    void <init>() -> <init>
    java.lang.String findCycleOffset(java.lang.String,int) -> d
    java.lang.String getCycle() -> fp
    java.lang.String getDonationURL(java.lang.String) -> be
    int getFirstDate(int) -> C
    java.lang.String getHelpUrl(android.content.Context) -> f
    java.lang.String getMETAR(java.lang.String) -> bf
    java.lang.String getMETARPlan(java.lang.String,java.lang.String) -> x
    java.lang.String getNAMMET(java.lang.String) -> bg
    java.lang.String getNotams(java.lang.String) -> bh
    java.lang.String getPIREPS(java.lang.String,java.lang.String) -> y
    java.lang.String getPIREPSPlan(java.lang.String,java.lang.String) -> z
    java.lang.String getTAF(java.lang.String) -> bi
    java.lang.String getTAFPlan(java.lang.String,java.lang.String) -> A
    java.lang.String getUrl(java.lang.String,java.lang.String,java.lang.String) -> f
    java.lang.String getVersion(java.lang.String,java.lang.String,boolean[]) -> a
    java.lang.String getVersionNetwork(java.lang.String) -> bj
    java.lang.String getVersionRange(java.lang.String) -> bk
    boolean isExpired(java.lang.String) -> bl
com.ds.avare.utils.PossibleEmail -> com.ds.avare.utils.u:
    void <init>() -> <init>
    java.lang.String get(android.content.Context) -> g
    java.lang.String[] getAll(android.content.Context) -> h
com.ds.avare.utils.RegisterActivityPreference -> com.ds.avare.utils.v:
    android.content.Context mContext -> mContext
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
    void onDialogClosed(boolean) -> onDialogClosed
com.ds.avare.utils.SAXXMLHandlerMETAR -> com.ds.avare.utils.w:
    java.lang.String mTempCategory -> tt
    java.lang.String mTempText -> tu
    java.lang.String mTempVal -> tv
    java.util.List mText -> tw
    void <init>() -> <init>
    void characters(char[],int,int) -> characters
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    java.util.List getText() -> getText
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
com.ds.avare.utils.SAXXMLHandlerPIREP -> com.ds.avare.utils.x:
    java.lang.String mTempText -> tu
    java.lang.String mTempType -> tx
    java.lang.String mTempVal -> tv
    java.util.List mText -> tw
    void <init>() -> <init>
    void characters(char[],int,int) -> characters
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    java.util.List getText() -> getText
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
com.ds.avare.utils.SAXXMLHandlerTAF -> com.ds.avare.utils.y:
    java.lang.String mTempText -> tu
    java.lang.String mTempVal -> tv
    java.util.List mText -> tw
    void <init>() -> <init>
    void characters(char[],int,int) -> characters
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    java.util.List getText() -> getText
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
com.ds.avare.utils.ShadowedText -> com.ds.avare.utils.z:
    int ABOVE -> ABOVE
    int ABOVE_LEFT -> ty
    int ABOVE_RIGHT -> tz
    int BELOW -> BELOW
    int BELOW_LEFT -> tA
    int BELOW_RIGHT -> tB
    int LEFT -> LEFT
    int RIGHT -> RIGHT
    int SHADOWRECTRADIUS -> tC
    int XMARGIN -> tD
    int YMARGIN -> tE
    float mDipToPix -> jo
    android.graphics.RectF mShadowBox -> tF
    android.graphics.Paint mShadowPaint -> tG
    android.graphics.Rect mTextSize -> iW
    void <init>(android.content.Context) -> <init>
    void draw(android.graphics.Canvas,android.graphics.Paint,java.lang.String,int,float,float) -> a
    void draw(android.graphics.Canvas,android.graphics.Paint,java.lang.String,int,int,float,float) -> a
com.ds.avare.utils.TwilightCalculator -> com.ds.avare.utils.aa:
    double ALTIDUTE_CORRECTION_CIVIL_TWILIGHT -> tH
    double C1 -> tI
    double C2 -> tJ
    double C3 -> tK
    int DAY -> tL
    double DEGREES_TO_RADIANS -> tM
    double J0 -> tN
    int NIGHT -> tO
    double OBLIQUITY -> tP
    long UTC_2000 -> tQ
    int mState -> tR
    long mSunrise -> tS
    long mSunset -> tT
    void <init>() -> <init>
    void calculateTwilight(double,double) -> o
    java.lang.String getSunrise() -> fq
    java.lang.String getSunset() -> fr
com.ds.avare.utils.USGSElevation -> com.ds.avare.utils.ab:
    void <init>() -> <init>
    double getAltitude(java.lang.Double,java.lang.Double) -> a
com.ds.avare.utils.VerticalSeekBar -> com.ds.avare.utils.VerticalSeekBar:
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.ds.avare.utils.WeatherHelper -> com.ds.avare.utils.ac:
    void <init>() -> <init>
    java.lang.String decodeWind(java.lang.String) -> bm
    java.lang.String formatMetarHTML(java.lang.String,boolean) -> b
    java.lang.String formatPirepHTML(java.lang.String,boolean) -> c
    java.lang.String formatTafHTML(java.lang.String,boolean) -> d
    java.lang.String formatVisibilityHTML(java.lang.String) -> bn
    java.lang.String formatWeather(java.lang.String) -> bo
    java.lang.String formatWeatherHTML(java.lang.String,boolean) -> e
    java.lang.String formatWindsHTML(java.lang.String,boolean) -> f
    java.lang.String getBestRunway(java.lang.String,java.util.LinkedList) -> a
    java.lang.String getDensityAltitude(java.lang.String,java.lang.String) -> B
    java.lang.String getMetarTime(java.lang.String) -> bp
    java.lang.String getNamMosLegend() -> fs
    int metarColor(java.lang.String) -> bq
    java.lang.String metarColorString(java.lang.String) -> br
com.ds.avare.views.AfdView -> com.ds.avare.views.AfdView:
    double MAX_AFD_SCALE -> tU
    com.ds.avare.utils.BitmapHolder mBitmap -> gJ
    com.ds.avare.touch.MultiTouchController$PointInfo mCurrTouchPoint -> tV
    android.view.GestureDetector mGestureDetector -> tW
    com.ds.avare.touch.MultiTouchController mMultiTouchC -> tX
    android.graphics.Paint mPaint -> hv
    com.ds.avare.position.Pan mPan -> ef
    com.ds.avare.storage.Preferences mPref -> m
    com.ds.avare.position.Scale mScale -> iC
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setup(android.content.Context) -> setup
    void touchPointChanged(com.ds.avare.touch.MultiTouchController$PointInfo) -> d
    void center() -> ft
    java.lang.Object getDraggableObjectAtPoint(com.ds.avare.touch.MultiTouchController$PointInfo) -> a
    void getPositionAndScale(java.lang.Object,com.ds.avare.touch.MultiTouchController$PositionAndScale) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void selectObject(java.lang.Object,com.ds.avare.touch.MultiTouchController$PointInfo) -> a
    void setBitmap(com.ds.avare.utils.BitmapHolder) -> setBitmap
    boolean setPositionAndScale(java.lang.Object,com.ds.avare.touch.MultiTouchController$PositionAndScale,com.ds.avare.touch.MultiTouchController$PointInfo) -> a
com.ds.avare.views.AfdView$1 -> com.ds.avare.views.a:
com.ds.avare.views.AfdView$GestureListener -> com.ds.avare.views.b:
    com.ds.avare.views.AfdView this$0 -> tY
    void <init>(com.ds.avare.views.AfdView) -> <init>
    void <init>(com.ds.avare.views.AfdView,com.ds.avare.views.AfdView$1) -> <init>
    void onLongPress(android.view.MotionEvent) -> onLongPress
com.ds.avare.views.LocationView -> com.ds.avare.views.LocationView:
    int MAX_SCALE -> tZ
    float MOVEMENT_THRESHOLD -> ua
    int TEXT_COLOR -> ub
    int TEXT_COLOR_OPPOSITE -> uc
    com.ds.avare.utils.BitmapHolder mAirplaneBitmap -> ud
    com.ds.avare.views.LocationView$ClosestAirportTask mClosestTask -> ue
    android.content.Context mContext -> mContext
    com.ds.avare.touch.MultiTouchController$PointInfo mCurrTouchPoint -> tV
    float mDipToPix -> jo
    boolean mDoCallbackWhenDone -> uf
    android.graphics.Point mDownFocusPoint -> ug
    int mDragPlanPoint -> uh
    float mDragStartedX -> ui
    float mDragStartedY -> uj
    boolean mDraw -> uk
    long mElevationLastRun -> ul
    com.ds.avare.views.LocationView$ElevationTask mElevationTask -> um
    java.lang.Thread mElevationThread -> un
    java.lang.String mErrorStatus -> uo
    android.graphics.Typeface mFace -> ge
    com.ds.avare.touch.GestureInterface mGestureCallBack -> up
    android.view.GestureDetector mGestureDetector -> tW
    com.ds.avare.gps.GpsParams mGpsParams -> dQ
    android.os.Handler mHandler -> mHandler
    com.ds.avare.storage.DataSource mImageDataSource -> dR
    com.ds.avare.utils.BitmapHolder mLineBitmap -> uq
    com.ds.avare.utils.BitmapHolder mLineHeadingBitmap -> ur
    com.ds.avare.touch.LongTouchDestination mLongTouchDestination -> us
    int mMacro -> ut
    com.ds.avare.position.Movement mMovement -> ec
    android.graphics.Paint mMsgPaint -> uu
    com.ds.avare.touch.MultiTouchController mMultiTouchC -> tX
    com.ds.avare.utils.BitmapHolder mObstacleBitmap -> uv
    java.util.LinkedList mObstacles -> uw
    java.lang.String mOnChart -> ux
    com.ds.avare.position.Origin mOrigin -> uy
    android.graphics.Paint mPaint -> hv
    com.ds.avare.position.Pan mPan -> ef
    com.ds.avare.position.Projection mPointProjection -> uz
    com.ds.avare.storage.Preferences mPref -> m
    float mPx -> nw
    float mPy -> nx
    com.ds.avare.utils.BitmapHolder mRunwayBitmap -> uA
    android.graphics.Paint mRunwayPaint -> uB
    com.ds.avare.position.Scale mScale -> iC
    com.ds.avare.StorageService mService -> n
    android.text.TextPaint mTextPaint -> uC
    com.ds.avare.views.LocationView$TileDrawTask mTileDrawTask -> uD
    java.lang.Thread mTileDrawThread -> uE
    int mTouchSlopSquare -> uF
    boolean mTrackUp -> uG
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    android.os.Handler access$1500(com.ds.avare.views.LocationView) -> a
    com.ds.avare.storage.Preferences access$1600(com.ds.avare.views.LocationView) -> b
    android.content.Context access$1700(com.ds.avare.views.LocationView) -> c
    com.ds.avare.position.Projection access$1800(com.ds.avare.views.LocationView) -> d
    com.ds.avare.position.Projection access$1802(com.ds.avare.views.LocationView,com.ds.avare.position.Projection) -> a
    com.ds.avare.gps.GpsParams access$1900(com.ds.avare.views.LocationView) -> e
    com.ds.avare.touch.GestureInterface access$2000(com.ds.avare.views.LocationView) -> f
    android.graphics.Paint access$2400(com.ds.avare.views.LocationView) -> g
    boolean access$2500(com.ds.avare.views.LocationView) -> h
    java.lang.String access$2702(com.ds.avare.views.LocationView,java.lang.String) -> a
    com.ds.avare.position.Movement access$2800(com.ds.avare.views.LocationView) -> i
    com.ds.avare.position.Movement access$2802(com.ds.avare.views.LocationView,com.ds.avare.position.Movement) -> a
    com.ds.avare.touch.MultiTouchController access$2900(com.ds.avare.views.LocationView) -> j
    com.ds.avare.StorageService access$300(com.ds.avare.views.LocationView) -> k
    float access$3002(com.ds.avare.views.LocationView,float) -> a
    float access$3102(com.ds.avare.views.LocationView,float) -> b
    void access$3200(com.ds.avare.views.LocationView) -> l
    java.util.LinkedList access$3302(com.ds.avare.views.LocationView,java.util.LinkedList) -> a
    com.ds.avare.storage.DataSource access$400(com.ds.avare.views.LocationView) -> m
    com.ds.avare.position.Scale access$500(com.ds.avare.views.LocationView) -> n
    int access$600(com.ds.avare.views.LocationView) -> o
    int access$602(com.ds.avare.views.LocationView,int) -> a
    com.ds.avare.position.Pan access$700(com.ds.avare.views.LocationView) -> p
    void dbquery(boolean) -> l
    void drawAirSigMet(android.graphics.Canvas) -> a
    void drawAircraft(android.graphics.Canvas) -> b
    void drawCDI(android.graphics.Canvas) -> c
    void drawCapGrids(android.graphics.Canvas) -> d
    void drawDistanceRings(android.graphics.Canvas) -> e
    void drawDrawing(android.graphics.Canvas) -> f
    void drawEdgeMarkers(android.graphics.Canvas) -> g
    void drawMap(android.graphics.Canvas) -> h
    void drawNavComments(android.graphics.Canvas) -> i
    void drawNexrad(android.graphics.Canvas) -> j
    void drawObstacles(android.graphics.Canvas) -> k
    void drawRadar(android.graphics.Canvas) -> l
    void drawRunways(android.graphics.Canvas) -> m
    void drawStatusLines(android.graphics.Canvas) -> n
    void drawTFR(android.graphics.Canvas) -> o
    void drawTiles(android.graphics.Canvas) -> p
    void drawTrack(android.graphics.Canvas) -> q
    void drawTracks(android.graphics.Canvas) -> r
    void drawTraffic(android.graphics.Canvas) -> s
    void drawUserDefinedWaypoints(android.graphics.Canvas) -> t
    void drawVASI(android.graphics.Canvas) -> u
    java.lang.String getPriorityMessage() -> getPriorityMessage
    void rotateBitmapIntoPlace(com.ds.avare.utils.BitmapHolder,float,double,double,boolean) -> a
    void rubberBand(float,float,boolean) -> a
    void setup(android.content.Context) -> setup
    void startClosestAirportTask(double,double) -> p
    void touchPointChanged(com.ds.avare.touch.MultiTouchController$PointInfo) -> d
    void updateCoordinates() -> fu
    void center() -> ft
    void cleanup() -> fv
    void forceReload() -> aW
    java.lang.Object getDraggableObjectAtPoint(com.ds.avare.touch.MultiTouchController$PointInfo) -> a
    boolean getDraw() -> getDraw
    android.graphics.Point getFocusPoint(android.view.MotionEvent) -> a
    void getPositionAndScale(java.lang.Object,com.ds.avare.touch.MultiTouchController$PositionAndScale) -> a
    void initParams(com.ds.avare.gps.GpsParams,com.ds.avare.StorageService) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void selectObject(java.lang.Object,com.ds.avare.touch.MultiTouchController$PointInfo) -> a
    void setDraw(boolean) -> setDraw
    void setGestureCallback(com.ds.avare.touch.GestureInterface) -> setGestureCallback
    boolean setPositionAndScale(java.lang.Object,com.ds.avare.touch.MultiTouchController$PositionAndScale,com.ds.avare.touch.MultiTouchController$PointInfo) -> a
    void setTrackUp(boolean) -> setTrackUp
    void updateDestination() -> fw
    void updateErrorStatus(java.lang.String) -> bs
    void updateParams(com.ds.avare.gps.GpsParams) -> l
    void updateThreshold(float) -> e
    void zoomOut() -> dh
com.ds.avare.views.LocationView$1 -> com.ds.avare.views.c:
    com.ds.avare.views.LocationView this$0 -> uH
    void <init>(com.ds.avare.views.LocationView) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.ds.avare.views.LocationView$ClosestAirportTask -> com.ds.avare.views.d:
    java.util.LinkedList aireps -> uI
    java.lang.String elev -> uJ
    java.util.LinkedList freq -> qe
    java.lang.String fuel -> qf
    java.lang.Double lat -> uK
    java.lang.Double lon -> uL
    com.ds.avare.weather.Metar metar -> qg
    java.lang.String radar -> qj
    java.lang.String ratings -> qk
    java.util.LinkedList runways -> uM
    java.lang.String sua -> ql
    com.ds.avare.weather.Taf taf -> qm
    java.lang.String text -> uN
    java.lang.String textMets -> uO
    com.ds.avare.views.LocationView this$0 -> uH
    com.ds.avare.weather.WindsAloft wa -> qo
    void <init>(com.ds.avare.views.LocationView) -> <init>
    void <init>(com.ds.avare.views.LocationView,com.ds.avare.views.LocationView$1) -> <init>
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.String doInBackground(java.lang.Object[]) -> c
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onPostExecute(java.lang.String) -> bt
com.ds.avare.views.LocationView$ElevationTask -> com.ds.avare.views.e:
    double alt -> uP
    double lat -> uQ
    double lon -> uR
    boolean runAgain -> uS
    boolean running -> uT
    com.ds.avare.views.LocationView this$0 -> uH
    void <init>(com.ds.avare.views.LocationView) -> <init>
    void <init>(com.ds.avare.views.LocationView,com.ds.avare.views.LocationView$1) -> <init>
    void run() -> run
com.ds.avare.views.LocationView$ElevationUpdate -> com.ds.avare.views.f:
    double elev -> uU
    java.util.LinkedList obs -> uV
    com.ds.avare.views.LocationView this$0 -> uH
    void <init>(com.ds.avare.views.LocationView) -> <init>
    void <init>(com.ds.avare.views.LocationView,com.ds.avare.views.LocationView$1) -> <init>
    double access$2200(com.ds.avare.views.LocationView$ElevationUpdate) -> a
    double access$2202(com.ds.avare.views.LocationView$ElevationUpdate,double) -> a
    java.util.LinkedList access$2300(com.ds.avare.views.LocationView$ElevationUpdate) -> b
    java.util.LinkedList access$2302(com.ds.avare.views.LocationView$ElevationUpdate,java.util.LinkedList) -> a
com.ds.avare.views.LocationView$GestureListener -> com.ds.avare.views.g:
    com.ds.avare.views.LocationView this$0 -> uH
    void <init>(com.ds.avare.views.LocationView) -> <init>
    void <init>(com.ds.avare.views.LocationView,com.ds.avare.views.LocationView$1) -> <init>
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onDown(android.view.MotionEvent) -> onDown
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
com.ds.avare.views.LocationView$TileDrawTask -> com.ds.avare.views.h:
    com.ds.avare.shapes.Tile centerTile -> uW
    com.ds.avare.shapes.Tile gpsTile -> uX
    double lat -> uQ
    double lon -> uR
    int movex -> uY
    int movey -> uZ
    double[] offsets -> va
    double[] p -> vb
    boolean runAgain -> uS
    boolean running -> uT
    com.ds.avare.views.LocationView this$0 -> uH
    java.lang.String[] tileNames -> vc
    void <init>(com.ds.avare.views.LocationView) -> <init>
    void <init>(com.ds.avare.views.LocationView,com.ds.avare.views.LocationView$1) -> <init>
    void run() -> run
com.ds.avare.views.LocationView$TileUpdate -> com.ds.avare.views.i:
    com.ds.avare.shapes.Tile centerTile -> uW
    float factor -> vd
    int movex -> uY
    int movey -> uZ
    double[] offsets -> va
    double[] p -> vb
    com.ds.avare.views.LocationView this$0 -> uH
    void <init>(com.ds.avare.views.LocationView) -> <init>
    void <init>(com.ds.avare.views.LocationView,com.ds.avare.views.LocationView$1) -> <init>
    int access$1000(com.ds.avare.views.LocationView$TileUpdate) -> a
    int access$1002(com.ds.avare.views.LocationView$TileUpdate,int) -> a
    com.ds.avare.shapes.Tile access$1100(com.ds.avare.views.LocationView$TileUpdate) -> b
    com.ds.avare.shapes.Tile access$1102(com.ds.avare.views.LocationView$TileUpdate,com.ds.avare.shapes.Tile) -> a
    double[] access$1200(com.ds.avare.views.LocationView$TileUpdate) -> c
    double[] access$1202(com.ds.avare.views.LocationView$TileUpdate,double[]) -> a
    double[] access$1300(com.ds.avare.views.LocationView$TileUpdate) -> d
    double[] access$1302(com.ds.avare.views.LocationView$TileUpdate,double[]) -> b
    float access$1400(com.ds.avare.views.LocationView$TileUpdate) -> e
    float access$1402(com.ds.avare.views.LocationView$TileUpdate,float) -> a
    int access$900(com.ds.avare.views.LocationView$TileUpdate) -> f
    int access$902(com.ds.avare.views.LocationView$TileUpdate,int) -> b
com.ds.avare.views.MemView -> com.ds.avare.views.MemView:
    android.content.Context mContext -> mContext
    float mFraction -> ve
    android.graphics.Paint mPaint -> hv
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setup(android.content.Context) -> setup
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateMemStatus(float) -> f
com.ds.avare.views.PlatesTagView -> com.ds.avare.views.PlatesTagView:
    double MAX_PLATE_SCALE -> vf
    java.lang.String mAirportName -> vg
    float mAirportX -> vh
    float mAirportY -> vi
    com.ds.avare.utils.BitmapHolder mBitmap -> gJ
    com.ds.avare.touch.MultiTouchController$PointInfo mCurrTouchPoint -> tV
    com.ds.avare.touch.MultiTouchController mMultiTouchC -> tX
    android.graphics.Paint mPaint -> hv
    com.ds.avare.position.Pan mPan -> ef
    com.ds.avare.position.Scale mScale -> iC
    int mX -> vj
    int mY -> vk
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setup(android.content.Context) -> setup
    void touchPointChanged(com.ds.avare.touch.MultiTouchController$PointInfo) -> d
    void center() -> ft
    java.lang.Object getDraggableObjectAtPoint(com.ds.avare.touch.MultiTouchController$PointInfo) -> a
    void getPositionAndScale(java.lang.Object,com.ds.avare.touch.MultiTouchController$PositionAndScale) -> a
    int getx() -> getx
    int gety() -> gety
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void selectObject(java.lang.Object,com.ds.avare.touch.MultiTouchController$PointInfo) -> a
    void setAirport(java.lang.String,float,float) -> a
    void setBitmap(com.ds.avare.utils.BitmapHolder) -> setBitmap
    boolean setPositionAndScale(java.lang.Object,com.ds.avare.touch.MultiTouchController$PositionAndScale,com.ds.avare.touch.MultiTouchController$PointInfo) -> a
    void unsetAirport() -> fx
    void verify(double,double) -> q
com.ds.avare.views.PlatesView -> com.ds.avare.views.PlatesView:
    double MAX_PLATE_SCALE -> vf
    int SHADOW -> vl
    int TEXT_COLOR -> ub
    int TEXT_COLOR_OPPOSITE -> uc
    com.ds.avare.utils.BitmapHolder mAirplaneBitmap -> ud
    double mAirportLat -> vm
    double mAirportLon -> vn
    com.ds.avare.utils.BitmapHolder mBitmap -> gJ
    com.ds.avare.touch.MultiTouchController$PointInfo mCurrTouchPoint -> tV
    float mDipToPix -> jo
    boolean mDraw -> uk
    java.lang.String mErrorStatus -> uo
    android.view.GestureDetector mGestureDetector -> tW
    com.ds.avare.gps.GpsParams mGpsParams -> dQ
    float[] mMatrix -> bQ
    com.ds.avare.touch.MultiTouchController mMultiTouchC -> tX
    android.graphics.Paint mPaint -> hv
    com.ds.avare.position.Pan mPan -> ef
    com.ds.avare.storage.Preferences mPref -> m
    com.ds.avare.position.Scale mScale -> iC
    com.ds.avare.StorageService mService -> n
    boolean mShowingAD -> vo
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    com.ds.avare.StorageService access$100(com.ds.avare.views.PlatesView) -> a
    void drawDrawing(android.graphics.Canvas) -> f
    void setup(android.content.Context) -> setup
    void touchPointChanged(com.ds.avare.touch.MultiTouchController$PointInfo) -> d
    void adjustZoom(double) -> q
    void center() -> ft
    java.lang.Object getDraggableObjectAtPoint(com.ds.avare.touch.MultiTouchController$PointInfo) -> a
    boolean getDraw() -> getDraw
    void getPositionAndScale(java.lang.Object,com.ds.avare.touch.MultiTouchController$PositionAndScale) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void selectObject(java.lang.Object,com.ds.avare.touch.MultiTouchController$PointInfo) -> a
    void setAirport(java.lang.String,double,double) -> a
    void setBitmap(com.ds.avare.utils.BitmapHolder) -> setBitmap
    void setDraw(boolean) -> setDraw
    void setParams(float[],boolean) -> a
    boolean setPositionAndScale(java.lang.Object,com.ds.avare.touch.MultiTouchController$PositionAndScale,com.ds.avare.touch.MultiTouchController$PointInfo) -> a
    void setService(com.ds.avare.StorageService) -> setService
    void updateErrorStatus(java.lang.String) -> bs
    void updateParams(com.ds.avare.gps.GpsParams) -> l
com.ds.avare.views.PlatesView$1 -> com.ds.avare.views.j:
com.ds.avare.views.PlatesView$GestureListener -> com.ds.avare.views.k:
    com.ds.avare.views.PlatesView this$0 -> vp
    void <init>(com.ds.avare.views.PlatesView) -> <init>
    void <init>(com.ds.avare.views.PlatesView,com.ds.avare.views.PlatesView$1) -> <init>
    boolean onDown(android.view.MotionEvent) -> onDown
    void onLongPress(android.view.MotionEvent) -> onLongPress
com.ds.avare.views.SatelliteView -> com.ds.avare.views.SatelliteView:
    android.content.Context mContext -> mContext
    float mDipToPix -> jo
    android.location.GpsStatus mGpsStatus -> vq
    android.graphics.Paint mPaint -> hv
    float min -> vr
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void setup(android.content.Context) -> setup
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateGpsStatus(android.location.GpsStatus) -> b
com.ds.avare.weather.AdsbWeatherCache -> wy.dp:
    long EXPIRY_PERIOD -> vs
    java.util.HashMap mAirep -> vt
    java.util.HashMap mMetar -> vu
    com.ds.avare.adsb.NexradImage mNexrad -> vv
    com.ds.avare.adsb.NexradImageConus mNexradConus -> vw
    com.ds.avare.storage.Preferences mPref -> m
    java.util.HashMap mTaf -> vx
    java.util.HashMap mWinds -> vy
    void <init>(android.content.Context) -> <init>
    java.util.LinkedList getAireps(double,double) -> i
    com.ds.avare.weather.Metar getMETAR(java.lang.String) -> ax
    com.ds.avare.adsb.NexradImage getNexrad() -> fy
    com.ds.avare.adsb.NexradImageConus getNexradConus() -> fz
    com.ds.avare.weather.Taf getTaf(java.lang.String) -> bu
    com.ds.avare.weather.WindsAloft getWindsAloft(double,double) -> k
    void putAirep(long,java.lang.String,java.lang.String,com.ds.avare.storage.DataSource) -> a
    void putImg(long,int,int[],boolean,int[],int,int) -> a
    void putMetar(long,java.lang.String,java.lang.String) -> a
    void putTaf(long,java.lang.String,java.lang.String) -> b
    void putWinds(long,java.lang.String,java.lang.String) -> c
    void sweep() -> fA
com.ds.avare.weather.AirSigMet -> wy.dq:
    java.lang.String hazard -> vz
    java.lang.String maxFt -> vA
    java.lang.String minFt -> vB
    java.lang.String movementDeg -> vC
    java.lang.String movementKt -> vD
    java.lang.String points -> vE
    java.lang.String rawText -> vF
    java.lang.String reportType -> vG
    java.lang.String severity -> vH
    com.ds.avare.shapes.MetShape shape -> vI
    java.lang.String timeFrom -> vJ
    java.lang.String timeTo -> vK
    void <init>() -> <init>
com.ds.avare.weather.Airep -> wy.dr:
    int RADIUS -> vL
    float lat -> vM
    float lon -> vN
    java.lang.String rawText -> vF
    java.lang.String reportType -> vG
    java.lang.String time -> vO
    long timestamp -> timestamp
    void <init>() -> <init>
    void <init>(com.ds.avare.weather.Airep) -> <init>
    void updateTextWithLocation(double,double,double) -> b
com.ds.avare.weather.InternetWeatherCache -> wy.ds:
    java.util.LinkedList mAirSig -> vP
    com.ds.avare.StorageService mService -> n
    com.ds.avare.weather.InternetWeatherCache$WeatherTask mWeatherTask -> vQ
    java.lang.Thread mWeatherThread -> vR
    void <init>() -> <init>
    java.util.LinkedList access$100(com.ds.avare.weather.InternetWeatherCache) -> a
    java.util.LinkedList access$102(com.ds.avare.weather.InternetWeatherCache,java.util.LinkedList) -> a
    com.ds.avare.StorageService access$200(com.ds.avare.weather.InternetWeatherCache) -> b
    java.util.LinkedList getAirSigMet() -> fB
    void parse(com.ds.avare.StorageService) -> n
com.ds.avare.weather.InternetWeatherCache$1 -> wy.dt:
com.ds.avare.weather.InternetWeatherCache$WeatherTask -> wy.du:
    com.ds.avare.weather.InternetWeatherCache this$0 -> vS
    void <init>(com.ds.avare.weather.InternetWeatherCache) -> <init>
    void <init>(com.ds.avare.weather.InternetWeatherCache,com.ds.avare.weather.InternetWeatherCache$1) -> <init>
    void run() -> run
com.ds.avare.weather.Metar -> wy.dv:
    java.lang.String flightCategory -> vT
    java.lang.String rawText -> vF
    java.lang.String stationId -> vU
    java.lang.String time -> vO
    long timestamp -> timestamp
    void <init>() -> <init>
com.ds.avare.weather.Stations -> wy.dw:
    java.lang.String[] mStations -> vV
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    boolean getStationLocation(java.lang.String,float[]) -> a
com.ds.avare.weather.Taf -> wy.dx:
    java.lang.String rawText -> vF
    java.lang.String stationId -> vU
    java.lang.String time -> vO
    long timestamp -> timestamp
    void <init>() -> <init>
com.ds.avare.weather.WindsAloft -> wy.dy:
    float lat -> vM
    float lon -> vN
    java.lang.String station -> vW
    java.lang.String time -> vO
    long timestamp -> timestamp
    java.lang.String w12k -> vX
    java.lang.String w18k -> vY
    java.lang.String w24k -> vZ
    java.lang.String w30k -> wa
    java.lang.String w34k -> wb
    java.lang.String w39k -> wc
    java.lang.String w3k -> wd
    java.lang.String w6k -> we
    java.lang.String w9k -> wf
    void <init>() -> <init>
    void <init>(com.ds.avare.weather.WindsAloft) -> <init>
    void updateStationWithLocation(double,double,double) -> c
com.ds.avare.webinfc.WebAppInterface -> wy.dz:
    int MSG_BUSY -> wg
    int MSG_ERROR -> wh
    int MSG_FAA_PLANS -> wi
    int MSG_FILL_FORM -> wj
    int MSG_NOTBUSY -> wk
    int MSG_SET_EMAIL -> wl
    int MSG_SET_NAVLOG -> wm
    com.ds.avare.utils.GenericCallback mCallback -> wn
    android.content.Context mContext -> mContext
    com.ds.avare.plan.LmfsPlanList mFaaPlans -> wo
    android.os.Handler mHandler -> mHandler
    com.ds.avare.storage.Preferences mPref -> m
    com.ds.avare.StorageService mService -> n
    android.webkit.WebView mWebView -> W
    void <init>(android.content.Context,android.webkit.WebView,com.ds.avare.utils.GenericCallback) -> <init>
    com.ds.avare.utils.GenericCallback access$000(com.ds.avare.webinfc.WebAppInterface) -> a
    android.webkit.WebView access$100(com.ds.avare.webinfc.WebAppInterface) -> b
    com.ds.avare.plan.LmfsPlanList access$200(com.ds.avare.webinfc.WebAppInterface) -> c
    android.content.Context access$300(com.ds.avare.webinfc.WebAppInterface) -> d
    java.lang.String checkNull(java.lang.String) -> bv
    void amendPlan(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void connect(com.ds.avare.StorageService) -> o
    void filePlan(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    void fillPlan() -> fC
    void getNavlog() -> fD
    void getPlans() -> fE
    void getWeather() -> fF
    void loadPlan() -> fG
    void moveTo(int) -> j
    void planChangeState(java.lang.String,java.lang.String) -> C
    void setEmail() -> fH
com.ds.avare.webinfc.WebAppInterface$1 -> wy.ea:
    com.ds.avare.webinfc.WebAppInterface this$0 -> wp
    void <init>(com.ds.avare.webinfc.WebAppInterface) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.ds.avare.webinfc.WebAppListInterface -> wy.eb:
    int MAX_FILE_LINES -> wq
    int MAX_FILE_LINE_SIZE -> wr
    int MSG_ADD_LIST -> ws
    int MSG_ADD_LIST_SAVE -> wt
    int MSG_BUSY -> wg
    int MSG_CLEAR_LIST -> wu
    int MSG_CLEAR_LIST_SAVE -> wv
    int MSG_NOTBUSY -> wk
    int MSG_UPDATE_LIST -> ww
    com.ds.avare.utils.GenericCallback mCallback -> wn
    android.os.Handler mHandler -> mHandler
    com.ds.avare.webinfc.WebAppListInterface$ImportTask mImportTask -> wx
    com.ds.avare.storage.Preferences mPref -> m
    com.ds.avare.StorageService mService -> n
    android.webkit.WebView mWebView -> W
    void <init>(android.content.Context,android.webkit.WebView,com.ds.avare.utils.GenericCallback) -> <init>
    android.os.Handler access$100(com.ds.avare.webinfc.WebAppListInterface) -> a
    com.ds.avare.StorageService access$200(com.ds.avare.webinfc.WebAppListInterface) -> b
    android.webkit.WebView access$300(com.ds.avare.webinfc.WebAppListInterface) -> c
    com.ds.avare.utils.GenericCallback access$400(com.ds.avare.webinfc.WebAppListInterface) -> d
    void addItemToList(java.lang.String) -> bw
    void addToList(java.lang.String) -> bx
    void clearList() -> fI
    void clearListSave() -> fJ
    void connect(com.ds.avare.StorageService) -> o
    void deleteItem() -> aY
    void discardList() -> fK
    void importFromFile(java.lang.String) -> by
    void loadList(java.lang.String) -> bz
    void moveBack() -> bc
    void moveDownItem() -> fL
    void moveForward() -> bd
    void moveTo(int) -> j
    void moveUpItem() -> fM
    void newList() -> fN
    void newSaveList() -> fO
    void saveDelete(java.lang.String) -> bA
    void saveList(java.lang.String) -> bB
    void updateList() -> fP
com.ds.avare.webinfc.WebAppListInterface$1 -> wy.ec:
    com.ds.avare.webinfc.WebAppListInterface this$0 -> wy
    void <init>(com.ds.avare.webinfc.WebAppListInterface) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.ds.avare.webinfc.WebAppListInterface$ImportTask -> wy.ed:
    com.ds.avare.webinfc.WebAppListInterface this$0 -> wy
    void <init>(com.ds.avare.webinfc.WebAppListInterface) -> <init>
    void <init>(com.ds.avare.webinfc.WebAppListInterface,com.ds.avare.webinfc.WebAppListInterface$1) -> <init>
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.String doInBackground(java.lang.String[]) -> b
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onPostExecute(java.lang.String) -> bt
    void onPreExecute() -> onPreExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onProgressUpdate(java.lang.String[]) -> c
com.ds.avare.webinfc.WebAppPlanInterface -> wy.ee:
    int MAX_PLANS_SHOWN -> wz
    int MSG_ACTIVE -> wA
    int MSG_ADD_PLAN -> wB
    int MSG_ADD_PLAN_SAVE -> wC
    int MSG_ADD_SEARCH -> wD
    int MSG_BUSY -> wg
    int MSG_CLEAR_PLAN -> wE
    int MSG_CLEAR_PLAN_SAVE -> wF
    int MSG_ERROR -> wh
    int MSG_INACTIVE -> wG
    int MSG_NEXT_HIDE -> wH
    int MSG_NOTBUSY -> wk
    int MSG_PLAN_COUNT -> wI
    int MSG_PREV_HIDE -> wJ
    int MSG_SAVE_HIDE -> wK
    int MSG_TIMER -> wL
    com.ds.avare.utils.GenericCallback mCallback -> wn
    android.content.Context mContext -> mContext
    com.ds.avare.webinfc.WebAppPlanInterface$CreateTask mCreateTask -> wM
    int mFilteredSize -> wN
    android.os.Handler mHandler -> mHandler
    com.ds.avare.webinfc.WebAppPlanInterface$NotamsTask mNotamsTask -> wO
    java.lang.Thread mNotamsThread -> wP
    int mPlanCnt -> wQ
    java.lang.String mPlanFilter -> wR
    int mPlanIdx -> wS
    com.ds.avare.storage.Preferences mPref -> m
    java.util.LinkedHashMap mSavedPlans -> wT
    com.ds.avare.webinfc.WebAppPlanInterface$SearchTask mSearchTask -> wU
    com.ds.avare.StorageService mService -> n
    com.ds.avare.webinfc.WebAppPlanInterface$WeatherTask mWeatherTask -> wV
    java.lang.Thread mWeatherThread -> vR
    android.webkit.WebView mWebView -> W
    void <init>(android.content.Context,android.webkit.WebView,com.ds.avare.utils.GenericCallback) -> <init>
    com.ds.avare.utils.GenericCallback access$1000(com.ds.avare.webinfc.WebAppPlanInterface) -> a
    android.content.Context access$1100(com.ds.avare.webinfc.WebAppPlanInterface) -> b
    java.lang.String access$1200(com.ds.avare.webinfc.WebAppPlanInterface,java.lang.String) -> a
    java.lang.String access$1300(com.ds.avare.webinfc.WebAppPlanInterface) -> c
    com.ds.avare.StorageService access$600(com.ds.avare.webinfc.WebAppPlanInterface) -> d
    android.os.Handler access$700(com.ds.avare.webinfc.WebAppPlanInterface) -> e
    com.ds.avare.storage.Preferences access$800(com.ds.avare.webinfc.WebAppPlanInterface) -> f
    android.webkit.WebView access$900(com.ds.avare.webinfc.WebAppPlanInterface) -> g
    boolean containsIgnoreCase(java.lang.String,java.lang.String) -> D
    java.lang.String getNotamsFileName(java.lang.String) -> bC
    java.lang.String getWeatherStoreFileName() -> fQ
    boolean isSame(android.location.Location,android.location.Location) -> a
    void setFilteredSize() -> fR
    void activateToggle() -> fS
    void addToPlan(java.lang.String,java.lang.String,java.lang.String) -> g
    void addWaypointToPlan(java.lang.String,java.lang.String,java.lang.String) -> h
    void cleanup() -> fv
    void clearPlan() -> fT
    void clearPlanSave() -> fU
    void connect(com.ds.avare.StorageService) -> o
    void createPlan(java.lang.String) -> bD
    void deleteWaypoint() -> fV
    void discardPlan() -> fW
    void firstPage() -> fX
    void getNotams() -> fY
    java.lang.String getPlanData() -> fZ
    java.util.ArrayList getPlanNames(int) -> D
    void getWeather() -> fF
    void lastPage() -> ga
    void loadPlan(java.lang.String) -> bE
    void loadPlanReverse(java.lang.String) -> bF
    void moveBack() -> bc
    void moveDown() -> gb
    void moveForward() -> bd
    void moveTo(int) -> j
    void moveUp() -> gc
    void newPlan() -> as
    void newSavePlan() -> gd
    void nextPage() -> ge
    void planFilter(java.lang.String) -> bG
    void prevPage() -> gf
    void refreshPlan() -> gg
    void refreshPlanList() -> gh
    void saveDelete(java.lang.String) -> bA
    void savePlan(java.lang.String) -> bH
    void search(java.lang.String) -> bI
    void timer() -> gi
    void update(java.util.Observable,java.lang.Object) -> update
com.ds.avare.webinfc.WebAppPlanInterface$1 -> wy.ef:
    com.ds.avare.webinfc.WebAppPlanInterface this$0 -> wW
    void <init>(com.ds.avare.webinfc.WebAppPlanInterface) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.ds.avare.webinfc.WebAppPlanInterface$CreateTask -> wy.eg:
    java.util.LinkedList selection -> wX
    com.ds.avare.webinfc.WebAppPlanInterface this$0 -> wW
    void <init>(com.ds.avare.webinfc.WebAppPlanInterface) -> <init>
    void <init>(com.ds.avare.webinfc.WebAppPlanInterface,com.ds.avare.webinfc.WebAppPlanInterface$1) -> <init>
    java.lang.Boolean doInBackground(java.lang.Object[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
com.ds.avare.webinfc.WebAppPlanInterface$NotamsTask -> wy.eh:
    boolean running -> uT
    com.ds.avare.webinfc.WebAppPlanInterface this$0 -> wW
    void <init>(com.ds.avare.webinfc.WebAppPlanInterface) -> <init>
    void <init>(com.ds.avare.webinfc.WebAppPlanInterface,com.ds.avare.webinfc.WebAppPlanInterface$1) -> <init>
    boolean access$300(com.ds.avare.webinfc.WebAppPlanInterface$NotamsTask) -> a
    boolean access$302(com.ds.avare.webinfc.WebAppPlanInterface$NotamsTask,boolean) -> a
    void run() -> run
com.ds.avare.webinfc.WebAppPlanInterface$SearchTask -> wy.ei:
    java.lang.String[] selection -> dt
    com.ds.avare.webinfc.WebAppPlanInterface this$0 -> wW
    void <init>(com.ds.avare.webinfc.WebAppPlanInterface) -> <init>
    void <init>(com.ds.avare.webinfc.WebAppPlanInterface,com.ds.avare.webinfc.WebAppPlanInterface$1) -> <init>
    java.lang.Boolean doInBackground(java.lang.Object[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
com.ds.avare.webinfc.WebAppPlanInterface$WeatherTask -> wy.ej:
    boolean running -> uT
    com.ds.avare.webinfc.WebAppPlanInterface this$0 -> wW
    void <init>(com.ds.avare.webinfc.WebAppPlanInterface) -> <init>
    void <init>(com.ds.avare.webinfc.WebAppPlanInterface,com.ds.avare.webinfc.WebAppPlanInterface$1) -> <init>
    boolean access$100(com.ds.avare.webinfc.WebAppPlanInterface$WeatherTask) -> a
    boolean access$102(com.ds.avare.webinfc.WebAppPlanInterface$WeatherTask,boolean) -> a
    void run() -> run
com.sromku.polygon.Line -> wy.ek:
    float _a -> wY
    float _b -> wZ
    com.sromku.polygon.Point _end -> xa
    com.sromku.polygon.Point _start -> xb
    boolean _vertical -> xc
    void <init>(com.sromku.polygon.Point,com.sromku.polygon.Point) -> <init>
    float getA() -> gj
    float getB() -> gk
    com.sromku.polygon.Point getEnd() -> gl
    com.sromku.polygon.Point getStart() -> gm
    boolean isInside(com.sromku.polygon.Point) -> a
    boolean isVertical() -> gn
    java.lang.String toString() -> toString
com.sromku.polygon.Point -> wy.el:
    float x -> x
    float y -> y
    void <init>(float,float) -> <init>
    java.lang.String toString() -> toString
com.sromku.polygon.Polygon -> wy.em:
    com.sromku.polygon.Polygon$BoundingBox _boundingBox -> xd
    java.util.List _sides -> xe
    void <init>(java.util.List,com.sromku.polygon.Polygon$BoundingBox) -> <init>
    void <init>(java.util.List,com.sromku.polygon.Polygon$BoundingBox,com.sromku.polygon.Polygon$1) -> <init>
    com.sromku.polygon.Polygon$Builder Builder() -> go
    com.sromku.polygon.Line createRay(com.sromku.polygon.Point) -> b
    boolean inBoundingBox(com.sromku.polygon.Point) -> c
    boolean intersect(com.sromku.polygon.Line,com.sromku.polygon.Line) -> a
    boolean contains(com.sromku.polygon.Point) -> d
    java.util.List getSides() -> gp
com.sromku.polygon.Polygon$1 -> wy.en:
com.sromku.polygon.Polygon$BoundingBox -> wy.eo:
    float xMax -> xf
    float xMin -> xg
    float yMax -> xh
    float yMin -> xi
    void <init>() -> <init>
    void <init>(com.sromku.polygon.Polygon$1) -> <init>
com.sromku.polygon.Polygon$Builder -> wy.ep:
    com.sromku.polygon.Polygon$BoundingBox _boundingBox -> xd
    boolean _firstPoint -> xj
    boolean _isClosed -> xk
    java.util.List _sides -> xe
    java.util.List _vertexes -> xl
    void <init>() -> <init>
    void updateBoundingBox(com.sromku.polygon.Point) -> e
    void validate() -> gq
    com.sromku.polygon.Polygon$Builder addVertex(com.sromku.polygon.Point) -> f
    com.sromku.polygon.Polygon build() -> gr
    com.sromku.polygon.Polygon$Builder close() -> gs
