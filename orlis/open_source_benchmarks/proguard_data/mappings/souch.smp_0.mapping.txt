souch.smp.BuildConfig -> souch.smp.a:
    java.lang.String APPLICATION_ID -> a
    java.lang.String BUILD_TYPE -> b
    boolean DEBUG -> DEBUG
    java.lang.String FLAVOR -> c
    int VERSION_CODE -> d
    java.lang.String VERSION_NAME -> e
    void <init>() -> <init>
souch.smp.Filter -> souch.smp.b:
    souch.smp.Filter[] $VALUES -> f
    souch.smp.Filter ARTIST -> g
    souch.smp.Filter FOLDER -> h
    souch.smp.Filter GENRE -> i
    souch.smp.Filter TREE -> j
    void <clinit>() -> <clinit>
    void <init>(java.lang.String,int) -> <init>
    souch.smp.Filter valueOf(java.lang.String) -> valueOf
    souch.smp.Filter[] values() -> values
souch.smp.Main -> souch.smp.Main:
    android.graphics.drawable.AnimationDrawable appAnimation -> k
    android.widget.TextView currDuration -> l
    android.widget.TextView duration -> m
    boolean finishing -> n
    java.lang.Runnable firstScroll -> o
    boolean followSong -> p
    souch.smp.RepeatingImageButton$RepeatListener forwardListener -> q
    android.content.ServiceConnection musicConnection -> r
    souch.smp.MusicService musicSrv -> s
    boolean noLock -> t
    souch.smp.Parameters params -> u
    android.widget.ImageButton playButton -> v
    android.content.Intent playIntent -> w
    souch.smp.RepeatingImageButton$RepeatListener rewindListener -> x
    souch.smp.Rows rows -> y
    android.widget.SeekBar$OnSeekBarChangeListener seekBarChangeListener -> z
    android.widget.SeekBar seekbar -> A
    boolean serviceBound -> B
    souch.smp.RowsAdapter songAdt -> C
    android.widget.ListView songView -> D
    java.util.Timer timer -> E
    android.view.View$OnTouchListener touchListener -> F
    boolean touchSeekbar -> G
    java.lang.Runnable updateInfo -> H
    long updateInterval -> I
    android.os.Vibrator vibrator -> J
    void <init>() -> <init>
    souch.smp.MusicService access$000(souch.smp.Main) -> a
    souch.smp.MusicService access$002(souch.smp.Main,souch.smp.MusicService) -> a
    souch.smp.Rows access$100(souch.smp.Main) -> b
    boolean access$1000(souch.smp.Main) -> c
    boolean access$1002(souch.smp.Main,boolean) -> a
    souch.smp.Rows access$102(souch.smp.Main,souch.smp.Rows) -> a
    boolean access$1100(souch.smp.Main) -> d
    void access$1200(souch.smp.Main) -> e
    souch.smp.RowsAdapter access$200(souch.smp.Main) -> f
    souch.smp.RowsAdapter access$202(souch.smp.Main,souch.smp.RowsAdapter) -> a
    android.widget.ListView access$300(souch.smp.Main) -> g
    boolean access$400(souch.smp.Main) -> h
    boolean access$402(souch.smp.Main,boolean) -> b
    souch.smp.Parameters access$500(souch.smp.Main) -> i
    void access$600(souch.smp.Main) -> j
    void access$700(souch.smp.Main) -> k
    android.widget.SeekBar access$800(souch.smp.Main) -> l
    android.widget.TextView access$900(souch.smp.Main) -> m
    void applyTextSize(souch.smp.Parameters) -> a
    void restore() -> restore
    void save() -> save
    void setChoosedTextSizeItem(android.view.MenuItem) -> a
    void setFilterItem(android.view.MenuItem) -> b
    void setShakeItem(android.view.MenuItem) -> c
    void stopPlayButton() -> a
    void updatePlayButton() -> b
    void vibrate() -> c
    void applyLock() -> d
    souch.smp.MusicService getMusicSrv() -> e
    void gotoCurrSong(android.view.View) -> gotoCurrSong
    void lockUnlock(android.view.View) -> lockUnlock
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void onDestroy() -> onDestroy
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onStart() -> onStart
    void onStop() -> onStop
    void playNext(android.view.View) -> playNext
    void playOrPause(android.view.View) -> playOrPause
    void playPrev(android.view.View) -> playPrev
    void scrollToCurrSong() -> f
    void scrollToSong(int) -> a
    void settings(android.view.View) -> settings
    void unfoldAndscrollToCurrSong() -> g
souch.smp.Main$1 -> souch.smp.c:
    souch.smp.Main this$0 -> K
    void <init>(souch.smp.Main) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
souch.smp.Main$1$1 -> souch.smp.d:
    souch.smp.Main$1 this$1 -> L
    void <init>(souch.smp.Main$1) -> <init>
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
souch.smp.Main$1$2 -> souch.smp.e:
    souch.smp.Main$1 this$1 -> L
    void <init>(souch.smp.Main$1) -> <init>
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
souch.smp.Main$1$3 -> souch.smp.f:
    souch.smp.Main$1 this$1 -> L
    void <init>(souch.smp.Main$1) -> <init>
    void run() -> run
souch.smp.Main$2 -> souch.smp.g:
    souch.smp.Main this$0 -> K
    void <init>(souch.smp.Main) -> <init>
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
souch.smp.Main$3 -> souch.smp.h:
    souch.smp.Main this$0 -> K
    void <init>(souch.smp.Main) -> <init>
    void run() -> run
souch.smp.Main$4 -> souch.smp.i:
    souch.smp.Main this$0 -> K
    void <init>(souch.smp.Main) -> <init>
    void run() -> run
souch.smp.Main$5 -> souch.smp.j:
    souch.smp.Main this$0 -> K
    void <init>(souch.smp.Main) -> <init>
    void run() -> run
souch.smp.Main$6 -> souch.smp.k:
    souch.smp.Main this$0 -> K
    void <init>(souch.smp.Main) -> <init>
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
souch.smp.Main$7 -> souch.smp.l:
    souch.smp.Main this$0 -> K
    void <init>(souch.smp.Main) -> <init>
    void onRepeat(android.view.View,long,int) -> a
souch.smp.Main$8 -> souch.smp.m:
    souch.smp.Main this$0 -> K
    void <init>(souch.smp.Main) -> <init>
    void onRepeat(android.view.View,long,int) -> a
souch.smp.Main$9 -> souch.smp.n:
    int[] $SwitchMap$souch$smp$Filter -> M
    void <clinit>() -> <clinit>
souch.smp.MediaButtonIntentReceiver -> souch.smp.MediaButtonIntentReceiver:
    long mLastClickTime -> N
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
souch.smp.MusicService -> souch.smp.MusicService:
    java.lang.String CMDNAME -> O
    java.lang.String CMDNEXT -> P
    java.lang.String CMDPAUSE -> Q
    java.lang.String CMDPLAY -> R
    java.lang.String CMDPREVIOUS -> S
    java.lang.String CMDSTOP -> T
    java.lang.String CMDTOGGLEPAUSE -> U
    java.lang.String NEXT_ACTION -> V
    int NOTIFY_ID -> W
    java.lang.String PAUSE_ACTION -> X
    java.lang.String PREVIOUS_ACTION -> Y
    java.lang.String SERVICECMD -> Z
    java.lang.String TOGGLEPAUSE_ACTION -> aa
    int MIN_SHAKE_PERIOD -> ab
    double accel -> ac
    double accelCurrent -> ad
    double accelLast -> ae
    android.hardware.Sensor accelerometer -> af
    android.media.AudioManager audioManager -> ag
    boolean changed -> ah
    boolean enableShake -> ai
    boolean foreground -> foreground
    boolean hasAudioFocus -> aj
    long lastUpdate -> ak
    boolean mainIsVisible -> al
    android.os.IBinder musicBind -> am
    souch.smp.Parameters params -> u
    android.media.MediaPlayer player -> an
    android.content.ComponentName remoteControlResponder -> ao
    souch.smp.Rows rows -> y
    int savedSongPos -> ap
    souch.smp.Scrobble scrobble -> aq
    boolean seekFinished -> ar
    int seekPosBug -> as
    int seekPosMaxLoop -> at
    int seekPosNbLoop -> au
    android.hardware.SensorManager sensorManager -> av
    float shakeThreshold -> aw
    souch.smp.PlayerState state -> ax
    boolean wasPlaying -> ay
    void <init>() -> <init>
    int access$010(souch.smp.MusicService) -> a
    int access$100(souch.smp.MusicService) -> b
    int access$102(souch.smp.MusicService,int) -> a
    boolean access$202(souch.smp.MusicService,boolean) -> a
    void getAccelerometer(android.hardware.SensorEvent) -> a
    android.media.MediaPlayer getPlayer() -> h
    void handleCommand(android.content.Intent) -> a
    void releaseAudio() -> i
    void restore() -> restore
    void save() -> save
    void startSensor() -> j
    void stopSensor() -> k
    boolean getChanged() -> l
    int getCurrentPosition() -> getCurrentPosition
    int getDuration() -> getDuration
    boolean getEnableShake() -> m
    souch.smp.Rows getRows() -> n
    boolean getSeekFinished() -> o
    boolean isInState(int) -> b
    boolean isPlaying() -> isPlaying
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onAudioFocusChange(int) -> onAudioFocusChange
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    boolean onError(android.media.MediaPlayer,int,int) -> onError
    void onPrepared(android.media.MediaPlayer) -> onPrepared
    void onSeekComplete(android.media.MediaPlayer) -> onSeekComplete
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void pause() -> pause
    void playNext() -> p
    void playPrev() -> q
    void playSong() -> r
    boolean playingLaunched() -> s
    boolean playingPaused() -> t
    boolean playingStopped() -> u
    void seekTo(int) -> seekTo
    void setChanged() -> setChanged
    void setEnableShake(boolean) -> a
    void setMainIsVisible(boolean) -> b
    void setShakeThreshold(float) -> a
    void start() -> start
    void startNotification() -> v
    void stopNotification() -> w
souch.smp.MusicService$1 -> souch.smp.o:
    souch.smp.MusicService this$0 -> az
    java.util.Timer val$seekPosTimer -> aA
    void <init>(souch.smp.MusicService,java.util.Timer) -> <init>
    void run() -> run
souch.smp.MusicService$MusicBinder -> souch.smp.p:
    souch.smp.MusicService this$0 -> az
    void <init>(souch.smp.MusicService) -> <init>
    souch.smp.MusicService getService() -> x
souch.smp.Parameters -> souch.smp.q:
    int getBigTextSize() -> y
    boolean getChoosedTextSize() -> z
    int getDefaultFold() -> A
    boolean getEnableShake() -> m
    souch.smp.Filter getFilter() -> B
    boolean getFollowSong() -> C
    boolean getMediaButtonStartAppShake() -> D
    boolean getNoLock() -> E
    int getNormalTextSize() -> F
    java.lang.String getRootFolder() -> G
    boolean getSaveSongPos() -> H
    boolean getScrobble() -> I
    float getShakeThreshold() -> J
    boolean getShuffle() -> K
    long getSongID() -> L
    int getSongPos() -> M
    float getTextSizeRatio() -> N
    boolean getUnfoldSubGroup() -> O
    int getUnfoldSubGroupThreshold() -> P
    boolean getVibrate() -> Q
    void setChooseTextSize(boolean) -> c
    void setEnableShake(boolean) -> a
    void setFilter(souch.smp.Filter) -> a
    void setNoLock(boolean) -> d
    void setSongID(long) -> a
    void setSongPos(int) -> c
souch.smp.ParametersImpl -> souch.smp.r:
    android.content.Context context -> aB
    void <init>(android.content.Context) -> <init>
    java.lang.String getDefaultMusicDir() -> R
    android.content.SharedPreferences$Editor getEditor() -> getEditor
    android.content.SharedPreferences getPref() -> S
    int getBigTextSize() -> y
    boolean getChoosedTextSize() -> z
    int getDefaultFold() -> A
    boolean getEnableShake() -> m
    souch.smp.Filter getFilter() -> B
    boolean getFollowSong() -> C
    boolean getMediaButtonStartAppShake() -> D
    boolean getNoLock() -> E
    int getNormalTextSize() -> F
    java.lang.String getRootFolder() -> G
    boolean getSaveSongPos() -> H
    boolean getScrobble() -> I
    float getShakeThreshold() -> J
    boolean getShuffle() -> K
    long getSongID() -> L
    int getSongPos() -> M
    float getTextSizeRatio() -> N
    boolean getUnfoldSubGroup() -> O
    int getUnfoldSubGroupThreshold() -> P
    boolean getVibrate() -> Q
    void setChooseTextSize(boolean) -> c
    void setEnableShake(boolean) -> a
    void setFilter(souch.smp.Filter) -> a
    void setNoLock(boolean) -> d
    void setSongID(long) -> a
    void setSongPos(int) -> c
souch.smp.Path -> souch.smp.s:
    java.lang.String rootFolder -> aC
    char separatorChar -> separatorChar
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    int compareToIgnoreCaseShorterFolderLast(java.lang.String,java.lang.String) -> a
    java.lang.String cutFolder(java.lang.String,java.lang.String) -> b
    char foldCase(char) -> a
    java.lang.String getFolder(java.lang.String) -> a
    java.util.ArrayList tokenizeFolder(java.lang.String) -> b
souch.smp.PlayerState -> souch.smp.t:
    int End -> aD
    int Error -> aE
    int Idle -> aF
    int Initialized -> aG
    int Nope -> aH
    int Paused -> aI
    int PlaybackCompleted -> aJ
    int Prepared -> aK
    int Preparing -> aL
    int Started -> aM
    int Stopped -> aN
    int state -> state
    void <init>() -> <init>
    boolean compare(int) -> d
    int getState() -> getState
    void setState(int) -> setState
souch.smp.PrefKeys -> souch.smp.u:
    souch.smp.PrefKeys[] $VALUES -> aO
    souch.smp.PrefKeys DEFAULT_FOLD -> aP
    souch.smp.PrefKeys ENABLE_SHAKE -> aQ
    souch.smp.PrefKeys FILTER -> aR
    souch.smp.PrefKeys FOLLOW_SONG -> aS
    souch.smp.PrefKeys MEDIA_BUTTON_START_APP -> aT
    souch.smp.PrefKeys NO_LOCK -> aU
    souch.smp.PrefKeys ROOT_FOLDER -> aV
    souch.smp.PrefKeys SAVE_SONG_POS -> aW
    souch.smp.PrefKeys SCROBBLE -> aX
    souch.smp.PrefKeys SHAKE_THRESHOLD -> aY
    souch.smp.PrefKeys SHUFFLE -> aZ
    souch.smp.PrefKeys SONG_ID -> ba
    souch.smp.PrefKeys SONG_POS -> bb
    souch.smp.PrefKeys TEXT_SIZE_BIG -> bc
    souch.smp.PrefKeys TEXT_SIZE_CHOOSED -> bd
    souch.smp.PrefKeys TEXT_SIZE_NORMAL -> be
    souch.smp.PrefKeys TEXT_SIZE_RATIO -> bf
    souch.smp.PrefKeys UNFOLD_SUBGROUP -> bg
    souch.smp.PrefKeys UNFOLD_SUBGROUP_THRESHOLD -> bh
    souch.smp.PrefKeys VIBRATE -> bi
    void <clinit>() -> <clinit>
    void <init>(java.lang.String,int) -> <init>
    souch.smp.PrefKeys valueOf(java.lang.String) -> valueOf
    souch.smp.PrefKeys[] values() -> values
souch.smp.R -> souch.smp.v:
    void <init>() -> <init>
souch.smp.R$array -> souch.smp.R$array:
    int settings_fold_entries -> settings_fold_entries
    int settings_fold_values -> settings_fold_values
    void <init>() -> <init>
souch.smp.R$attr -> souch.smp.R$attr:
    void <init>() -> <init>
souch.smp.R$color -> souch.smp.R$color:
    int RowBackground -> RowBackground
    int RowGroupArtistAlbumBackground -> RowGroupArtistAlbumBackground
    int RowGroupArtistBackground -> RowGroupArtistBackground
    int RowGroupFolderArtistBackground -> RowGroupFolderArtistBackground
    int RowGroupFolderBackground -> RowGroupFolderBackground
    int RowGroupTextNormal -> RowGroupTextNormal
    int RowGroupTextPlaying -> RowGroupTextPlaying
    int RowGroupTreeBackground -> RowGroupTreeBackground
    int RowSongTextDuration -> RowSongTextDuration
    int RowSongTextNormal -> RowSongTextNormal
    int apptheme_color -> apptheme_color
    void <init>() -> <init>
souch.smp.R$dimen -> souch.smp.R$dimen:
    int activity_horizontal_margin -> activity_horizontal_margin
    int activity_vertical_margin -> activity_vertical_margin
    void <init>() -> <init>
souch.smp.R$drawable -> souch.smp.R$drawable:
    int action_goto_play -> action_goto_play
    int action_next -> action_next
    int action_play -> action_play
    int action_prev -> action_prev
    int fastscroll_thumb_default_holo -> fastscroll_thumb_default_holo
    int fastscroll_thumb_holo -> fastscroll_thumb_holo
    int fastscroll_thumb_pressed_holo -> fastscroll_thumb_pressed_holo
    int ic_action_goto_play -> ic_action_goto_play
    int ic_action_goto_play_press -> ic_action_goto_play_press
    int ic_action_locked -> ic_action_locked
    int ic_action_next -> ic_action_next
    int ic_action_next_press -> ic_action_next_press
    int ic_action_pause -> ic_action_pause
    int ic_action_play -> ic_action_play
    int ic_action_play_press -> ic_action_play_press
    int ic_action_prev -> ic_action_prev
    int ic_action_prev_press -> ic_action_prev_press
    int ic_action_unlocked -> ic_action_unlocked
    int ic_actionbar_launcher -> ic_actionbar_launcher
    int ic_actionbar_launcher_0 -> ic_actionbar_launcher_0
    int ic_actionbar_launcher_1 -> ic_actionbar_launcher_1
    int ic_actionbar_launcher_2 -> ic_actionbar_launcher_2
    int ic_actionbar_launcher_3 -> ic_actionbar_launcher_3
    int ic_actionbar_launcher_4 -> ic_actionbar_launcher_4
    int ic_actionbar_launcher_5 -> ic_actionbar_launcher_5
    int ic_actionbar_launcher_anim -> ic_actionbar_launcher_anim
    int ic_actionbar_overflow -> ic_actionbar_overflow
    int ic_actionbar_sublauncher -> ic_actionbar_sublauncher
    int ic_curr_pause -> ic_curr_pause
    int ic_curr_play -> ic_curr_play
    int ic_launcher -> ic_launcher
    int ic_menu_artist -> ic_menu_artist
    int ic_menu_folded -> ic_menu_folded
    int ic_menu_folder -> ic_menu_folder
    int ic_menu_settings -> ic_menu_settings
    int ic_menu_shake -> ic_menu_shake
    int ic_menu_shake_checked -> ic_menu_shake_checked
    int ic_menu_text_big -> ic_menu_text_big
    int ic_menu_text_regular -> ic_menu_text_regular
    int ic_menu_tree -> ic_menu_tree
    int ic_menu_unfolded -> ic_menu_unfolded
    int seekbar_control_disabled_holo -> seekbar_control_disabled_holo
    int seekbar_control_focused_holo -> seekbar_control_focused_holo
    int seekbar_control_normal_holo -> seekbar_control_normal_holo
    int seekbar_control_pressed_holo -> seekbar_control_pressed_holo
    int seekbar_control_selector_holo_light -> seekbar_control_selector_holo_light
    int seekbar_horizontal_holo_light -> seekbar_horizontal_holo_light
    int seekbar_primary_holo -> seekbar_primary_holo
    int seekbar_secondary_holo -> seekbar_secondary_holo
    int seekbar_track_holo_light -> seekbar_track_holo_light
    void <init>() -> <init>
souch.smp.R$id -> souch.smp.R$id:
    int action_bar -> action_bar
    int action_button -> action_button
    int action_fold -> action_fold
    int action_settings -> action_settings
    int action_shake -> action_shake
    int action_sort -> action_sort
    int action_text_size -> action_text_size
    int action_unfold -> action_unfold
    int app_button -> app_button
    int curr_duration -> curr_duration
    int curr_play -> curr_play
    int duration -> duration
    int goto_button -> goto_button
    int lock_button -> lock_button
    int next_button -> next_button
    int play_button -> play_button
    int prev_button -> prev_button
    int seek_bar -> seek_bar
    int selected -> selected
    int settings -> settings
    int song_duration -> song_duration
    int song_layout -> song_layout
    int song_list -> song_list
    int song_title -> song_title
    void <init>() -> <init>
souch.smp.R$layout -> souch.smp.R$layout:
    int activity_main -> activity_main
    int song -> song
    void <init>() -> <init>
souch.smp.R$menu -> souch.smp.R$menu:
    int menu_main -> menu_main
    void <init>() -> <init>
souch.smp.R$string -> souch.smp.R$string:
    int action_fold -> action_fold
    int action_settings -> action_settings
    int action_shake_disabled -> action_shake_disabled
    int action_shake_enabled -> action_shake_enabled
    int action_sort_artist -> action_sort_artist
    int action_sort_folder -> action_sort_folder
    int action_sort_tree -> action_sort_tree
    int action_unfold -> action_unfold
    int app_name -> app_name
    int app_playing -> app_playing
    int focus_error -> focus_error
    int help_background -> help_background
    int help_background_summary -> help_background_summary
    int help_lock -> help_lock
    int help_lock_summary -> help_lock_summary
    int help_mediabutton -> help_mediabutton
    int help_mediabutton_autostart -> help_mediabutton_autostart
    int help_mediabutton_autostart_summary -> help_mediabutton_autostart_summary
    int help_mediabutton_summary -> help_mediabutton_summary
    int help_quit -> help_quit
    int help_quit_summary -> help_quit_summary
    int help_root_folder -> help_root_folder
    int help_root_folder_summary -> help_root_folder_summary
    int help_scroll -> help_scroll
    int help_scroll_summary -> help_scroll_summary
    int help_start_group -> help_start_group
    int help_start_group_summary -> help_start_group_summary
    int help_start_song -> help_start_song
    int help_start_song_summary -> help_start_song_summary
    int help_stop -> help_stop
    int help_stop_summary -> help_stop_summary
    int help_unfold_group -> help_unfold_group
    int help_unfold_group_summary -> help_unfold_group_summary
    int settings_about -> settings_about
    int settings_about_summary -> settings_about_summary
    int settings_accelerometer -> settings_accelerometer
    int settings_accelerometer_summary -> settings_accelerometer_summary
    int settings_accelerometer_threshold -> settings_accelerometer_threshold
    int settings_author -> settings_author
    int settings_author_title -> settings_author_title
    int settings_autoscroll -> settings_autoscroll
    int settings_autoscroll_summary -> settings_autoscroll_summary
    int settings_default_shake_threshold -> settings_default_shake_threshold
    int settings_donate_key -> settings_donate_key
    int settings_donate_summary -> settings_donate_summary
    int settings_donate_title -> settings_donate_title
    int settings_donate_www -> settings_donate_www
    int settings_fold_title -> settings_fold_title
    int settings_help -> settings_help
    int settings_help_summary -> settings_help_summary
    int settings_licence -> settings_licence
    int settings_licence_title -> settings_licence_title
    int settings_media_button_start_app -> settings_media_button_start_app
    int settings_media_button_start_app_title -> settings_media_button_start_app_title
    int settings_misc -> settings_misc
    int settings_no_accelerometer -> settings_no_accelerometer
    int settings_opensource -> settings_opensource
    int settings_rescan -> settings_rescan
    int settings_rescan_disabled -> settings_rescan_disabled
    int settings_rescan_key -> settings_rescan_key
    int settings_rescan_title -> settings_rescan_title
    int settings_rescan_triggered -> settings_rescan_triggered
    int settings_root_folder -> settings_root_folder
    int settings_root_folder_summary1 -> settings_root_folder_summary1
    int settings_root_folder_summary2 -> settings_root_folder_summary2
    int settings_scrobble -> settings_scrobble
    int settings_scrobble_title -> settings_scrobble_title
    int settings_shuffle -> settings_shuffle
    int settings_shuffle_title -> settings_shuffle_title
    int settings_song_view -> settings_song_view
    int settings_song_view_font -> settings_song_view_font
    int settings_songpos -> settings_songpos
    int settings_songpos_title -> settings_songpos_title
    int settings_source -> settings_source
    int settings_source_title -> settings_source_title
    int settings_text_size_big -> settings_text_size_big
    int settings_text_size_big_default -> settings_text_size_big_default
    int settings_text_size_choosed -> settings_text_size_choosed
    int settings_text_size_choosed_default -> settings_text_size_choosed_default
    int settings_text_size_ratio -> settings_text_size_ratio
    int settings_text_size_ratio_default -> settings_text_size_ratio_default
    int settings_text_size_regular -> settings_text_size_regular
    int settings_text_size_regular_default -> settings_text_size_regular_default
    int settings_thanks -> settings_thanks
    int settings_thanks_doc -> settings_thanks_doc
    int settings_thanks_doc_summary -> settings_thanks_doc_summary
    int settings_thanks_i15n -> settings_thanks_i15n
    int settings_thanks_i15n_summary -> settings_thanks_i15n_summary
    int settings_thanks_icons -> settings_thanks_icons
    int settings_thanks_icons_summary -> settings_thanks_icons_summary
    int settings_title -> settings_title
    int settings_unfold_subgroup -> settings_unfold_subgroup
    int settings_unfold_subgroup_summary -> settings_unfold_subgroup_summary
    int settings_unfold_subgroup_threshold -> settings_unfold_subgroup_threshold
    int settings_unfold_subgroup_threshold_default -> settings_unfold_subgroup_threshold_default
    int settings_unfold_subgroup_threshold_summary1 -> settings_unfold_subgroup_threshold_summary1
    int settings_unfold_subgroup_threshold_summary2 -> settings_unfold_subgroup_threshold_summary2
    int settings_version -> settings_version
    int settings_version_title -> settings_version_title
    int settings_vibrate -> settings_vibrate
    int settings_vibrate_title -> settings_vibrate_title
    void <init>() -> <init>
souch.smp.R$style -> souch.smp.R$style:
    int AppTheme -> AppTheme
    int BottomButton -> BottomButton
    int PreferenceTheme -> PreferenceTheme
    int SeekBarAppTheme -> SeekBarAppTheme
    int Theme_AppTheme -> Theme_AppTheme
    int _AppTheme -> _AppTheme
    void <init>() -> <init>
souch.smp.R$xml -> souch.smp.R$xml:
    int preferences -> preferences
    void <init>() -> <init>
souch.smp.RepeatingImageButton -> souch.smp.RepeatingImageButton:
    long mInterval -> bj
    souch.smp.RepeatingImageButton$RepeatListener mListener -> bk
    int mRepeatCount -> bl
    java.lang.Runnable mRepeater -> bm
    long mStartTime -> bn
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    void access$000(souch.smp.RepeatingImageButton,boolean) -> a
    long access$100(souch.smp.RepeatingImageButton) -> a
    void doRepeat(boolean) -> e
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performLongClick() -> performLongClick
    void setRepeatListener(souch.smp.RepeatingImageButton$RepeatListener,long) -> a
souch.smp.RepeatingImageButton$1 -> souch.smp.w:
    souch.smp.RepeatingImageButton this$0 -> bo
    void <init>(souch.smp.RepeatingImageButton) -> <init>
    void run() -> run
souch.smp.RepeatingImageButton$RepeatListener -> souch.smp.x:
    void onRepeat(android.view.View,long,int) -> a
souch.smp.Row -> souch.smp.y:
    int backgroundColor -> backgroundColor
    java.util.Map converted -> bp
    int levelOffset -> bq
    int genuinePos -> br
    int level -> level
    souch.smp.Row parent -> bs
    int typeface -> typeface
    void <clinit>() -> <clinit>
    void <init>(int,int,int) -> <init>
    int convertDpToPixels(int,android.content.res.Resources) -> a
    int getGenuinePos() -> T
    int getLevel() -> getLevel
    souch.smp.Row getParent() -> U
    java.lang.String getStringOffset() -> V
    void setGenuinePos(int) -> e
    void setLevel(int) -> setLevel
    void setParent(souch.smp.Row) -> a
    void setView(souch.smp.RowViewHolder,souch.smp.Main,int) -> a
souch.smp.RowGroup -> souch.smp.z:
    int normalTextColor -> bt
    int playingTextColor -> bu
    souch.smp.Filter rowType -> bv
    int textSize -> textSize
    int color -> color
    boolean folded -> bw
    java.lang.String name -> name
    int nbRowSong -> bx
    boolean selected -> by
    void <clinit>() -> <clinit>
    void <init>(int,int,java.lang.String,int,int) -> <init>
    void setDuration(android.widget.TextView) -> a
    void setText(android.widget.TextView) -> b
    java.lang.String getName() -> getName
    void incNbRowSong() -> W
    boolean isFolded() -> X
    boolean isSelected() -> isSelected
    int nbRowSong() -> Y
    void setFolded(boolean) -> f
    void setSelected(boolean) -> setSelected
    void setView(souch.smp.RowViewHolder,souch.smp.Main,int) -> a
    java.lang.String toString() -> toString
souch.smp.RowSong -> souch.smp.aa:
    int normalSongDurationTextColor -> bz
    int normalSongTextColor -> bA
    int textSize -> textSize
    java.lang.String album -> bB
    java.lang.String artist -> bC
    int duration -> duration
    java.lang.String folder -> bD
    long id -> id
    java.lang.String path -> bE
    java.lang.String title -> bF
    int track -> track
    void <clinit>() -> <clinit>
    void <init>(int,int,long,java.lang.String,java.lang.String,java.lang.String,int,int,java.lang.String) -> <init>
    java.lang.String secondsToMinutes(int) -> f
    void setCurrIcon(android.widget.ImageView,souch.smp.Main) -> a
    void setDuration(android.widget.TextView) -> a
    void setText(android.widget.TextView) -> b
    java.lang.String getAlbum() -> Z
    java.lang.String getArtist() -> aa
    int getDuration() -> getDuration
    java.lang.String getFolder() -> ab
    long getID() -> getID
    java.lang.String getPath() -> getPath
    java.lang.String getTitle() -> getTitle
    int getTrack() -> ac
    void setView(souch.smp.RowViewHolder,souch.smp.Main,int) -> a
    java.lang.String toString() -> toString
souch.smp.RowViewHolder -> souch.smp.ab:
    android.widget.TextView duration -> m
    android.widget.ImageView image -> bG
    android.widget.RelativeLayout layout -> bH
    android.widget.TextView text -> bI
    void <init>(android.view.View) -> <init>
souch.smp.Rows -> souch.smp.ac:
    java.lang.String defaultStr -> bJ
    int currPos -> bK
    souch.smp.Filter filter -> bL
    android.content.ContentResolver musicResolver -> bM
    souch.smp.Parameters params -> u
    java.util.Random random -> bN
    android.content.res.Resources resources -> bO
    java.util.ArrayList rows -> bP
    java.util.ArrayList rowsUnfolded -> bQ
    long savedID -> bR
    java.util.ArrayList shuffleSavedPos -> bS
    void <init>(android.content.ContentResolver,souch.smp.Parameters,android.content.res.Resources) -> <init>
    void fold(souch.smp.RowGroup,int) -> a
    java.lang.String getDefaultStrIfNull(java.lang.String) -> c
    boolean hasOneSubGroup(souch.smp.RowGroup,int) -> b
    void initByArtist(android.database.Cursor) -> a
    void initByPath(android.database.Cursor) -> b
    void initByTree(android.database.Cursor) -> c
    void initRowsFolded() -> ad
    void restore() -> restore
    void setCurrPos(int) -> g
    void setGroupSelectedState(int,boolean) -> a
    void unfold(souch.smp.RowGroup,int) -> c
    void unfoldTree(souch.smp.RowGroup,int) -> d
    void updateSavedId() -> ae
    void fold() -> af
    souch.smp.Row get(int) -> h
    int getCurrPos() -> ag
    souch.smp.RowSong getCurrSong() -> ah
    souch.smp.Filter getFilter() -> B
    void init() -> ai
    void invertFold(int) -> i
    boolean isLastRow(int) -> j
    void moveToNextSong() -> aj
    void moveToPrevSong() -> ak
    void moveToRandomSong() -> al
    void moveToRandomSongBack() -> am
    void save() -> save
    void selectNearestSong(int) -> k
    void setFilter(souch.smp.Filter) -> a
    boolean setRootFolder(java.lang.String) -> d
    int size() -> size
    void unfold() -> an
    boolean unfoldCurrPos() -> ao
souch.smp.Rows$1 -> souch.smp.ad:
    souch.smp.Rows this$0 -> bT
    void <init>(souch.smp.Rows) -> <init>
    int compare(java.lang.Object,java.lang.Object) -> compare
    int compare(souch.smp.Row,souch.smp.Row) -> a
souch.smp.Rows$2 -> souch.smp.ae:
    souch.smp.Rows this$0 -> bT
    void <init>(souch.smp.Rows) -> <init>
    int compare(java.lang.Object,java.lang.Object) -> compare
    int compare(souch.smp.Row,souch.smp.Row) -> a
souch.smp.Rows$3 -> souch.smp.af:
    int[] $SwitchMap$souch$smp$Filter -> M
    void <clinit>() -> <clinit>
souch.smp.RowsAdapter -> souch.smp.ag:
    souch.smp.Main main -> bU
    souch.smp.Rows rows -> y
    android.view.LayoutInflater songInf -> bV
    void <init>(android.content.Context,souch.smp.Rows,souch.smp.Main) -> <init>
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
souch.smp.Scrobble -> souch.smp.ah:
    int SCROBBLE_COMPLETE -> bW
    int SCROBBLE_PAUSE -> bX
    int SCROBBLE_RESUME -> bY
    int SCROBBLE_START -> bZ
    java.lang.String album -> bB
    java.lang.String artist -> bC
    android.content.Context context -> aB
    int duration -> duration
    souch.smp.Parameters params -> u
    souch.smp.Rows rows -> y
    boolean started -> started
    java.lang.String track -> ca
    void <init>(souch.smp.Rows,souch.smp.Parameters,android.content.Context) -> <init>
    void send(int) -> send
souch.smp.Settings -> souch.smp.Settings:
    android.content.ServiceConnection musicConnection -> r
    souch.smp.MusicService musicSrv -> s
    souch.smp.Parameters params -> u
    android.content.Intent playIntent -> w
    boolean serviceBound -> B
    void <init>() -> <init>
    souch.smp.MusicService access$002(souch.smp.Settings,souch.smp.MusicService) -> a
    boolean access$102(souch.smp.Settings,boolean) -> a
    void setChoosedTextSizeSummary() -> ap
    void setFoldSummary() -> aq
    void setUnfoldSubgroup() -> ar
    void setUnfoldThresholdSummary() -> as
    void showDonateWebsite() -> at
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
    void onResume() -> onResume
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
    void rescan() -> au
souch.smp.Settings$1 -> souch.smp.ai:
    souch.smp.Settings this$0 -> cb
    void <init>(souch.smp.Settings) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
