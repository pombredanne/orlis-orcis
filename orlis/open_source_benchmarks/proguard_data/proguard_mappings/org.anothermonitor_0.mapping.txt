com.jaredrummler.android.processes.BuildConfig -> wy.a:
    java.lang.String APPLICATION_ID -> a
    java.lang.String BUILD_TYPE -> b
    boolean DEBUG -> DEBUG
    java.lang.String FLAVOR -> c
    int VERSION_CODE -> d
    java.lang.String VERSION_NAME -> e
    void <init>() -> <init>
com.jaredrummler.android.processes.ProcessManager -> wy.b:
    void <init>() -> <init>
    java.util.List getRunningAppProcessInfo(android.content.Context) -> a
    java.util.List getRunningAppProcesses() -> getRunningAppProcesses
    java.util.List getRunningForegroundApps(android.content.Context) -> b
    java.util.List getRunningProcesses() -> a
    boolean isMyProcessInTheForeground() -> b
com.jaredrummler.android.processes.ProcessManager$Filter -> wy.c:
    boolean apps -> f
    java.lang.String name -> name
    int pid -> pid
    int ppid -> g
    void <init>() -> <init>
    java.util.List run() -> c
    com.jaredrummler.android.processes.ProcessManager$Filter setApps(boolean) -> a
    com.jaredrummler.android.processes.ProcessManager$Filter setName(java.lang.String) -> a
    com.jaredrummler.android.processes.ProcessManager$Filter setPid(int) -> a
    com.jaredrummler.android.processes.ProcessManager$Filter setPpid(int) -> b
com.jaredrummler.android.processes.ProcessManager$ProcessComparator -> wy.d:
    void <init>() -> <init>
    int compare(com.jaredrummler.android.processes.models.AndroidProcess,com.jaredrummler.android.processes.models.AndroidProcess) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.jaredrummler.android.processes.models.AndroidAppProcess -> wy.e:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.jaredrummler.android.processes.models.Cgroup cgroup -> h
    boolean foreground -> foreground
    int uid -> uid
    void <clinit>() -> <clinit>
    void <init>(int) -> <init>
    void <init>(android.os.Parcel) -> <init>
    com.jaredrummler.android.processes.models.Cgroup cgroup() -> d
    android.content.pm.PackageInfo getPackageInfo(android.content.Context,int) -> a
    java.lang.String getPackageName() -> getPackageName
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.jaredrummler.android.processes.models.AndroidAppProcess$1 -> wy.f:
    void <init>() -> <init>
    com.jaredrummler.android.processes.models.AndroidAppProcess createFromParcel(android.os.Parcel) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    com.jaredrummler.android.processes.models.AndroidAppProcess[] newArray(int) -> c
    java.lang.Object[] newArray(int) -> newArray
com.jaredrummler.android.processes.models.AndroidAppProcess$NotAndroidAppProcessException -> wy.g:
    void <init>(int) -> <init>
com.jaredrummler.android.processes.models.AndroidProcess -> wy.h:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String name -> name
    int pid -> pid
    void <clinit>() -> <clinit>
    void <init>(int) -> <init>
    void <init>(android.os.Parcel) -> <init>
    java.lang.String getProcessName(int) -> d
    java.lang.String attr_current() -> e
    com.jaredrummler.android.processes.models.Cgroup cgroup() -> d
    java.lang.String cmdline() -> f
    int describeContents() -> describeContents
    int oom_adj() -> g
    int oom_score_adj() -> h
    java.lang.String read(java.lang.String) -> b
    com.jaredrummler.android.processes.models.Stat stat() -> i
    com.jaredrummler.android.processes.models.Statm statm() -> j
    com.jaredrummler.android.processes.models.Status status() -> k
    java.lang.String wchan() -> l
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.jaredrummler.android.processes.models.AndroidProcess$1 -> wy.i:
    void <init>() -> <init>
    com.jaredrummler.android.processes.models.AndroidProcess createFromParcel(android.os.Parcel) -> b
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    com.jaredrummler.android.processes.models.AndroidProcess[] newArray(int) -> e
    java.lang.Object[] newArray(int) -> newArray
com.jaredrummler.android.processes.models.Cgroup -> wy.j:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.ArrayList groups -> i
    void <clinit>() -> <clinit>
    void <init>(android.os.Parcel) -> <init>
    void <init>(android.os.Parcel,com.jaredrummler.android.processes.models.Cgroup$1) -> <init>
    void <init>(java.lang.String) -> <init>
    com.jaredrummler.android.processes.models.Cgroup get(int) -> f
    com.jaredrummler.android.processes.models.ControlGroup getGroup(java.lang.String) -> c
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.jaredrummler.android.processes.models.Cgroup$1 -> wy.k:
    void <init>() -> <init>
    com.jaredrummler.android.processes.models.Cgroup createFromParcel(android.os.Parcel) -> c
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    com.jaredrummler.android.processes.models.Cgroup[] newArray(int) -> g
    java.lang.Object[] newArray(int) -> newArray
com.jaredrummler.android.processes.models.ControlGroup -> wy.l:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String group -> group
    int id -> id
    java.lang.String subsystems -> j
    void <clinit>() -> <clinit>
    void <init>(android.os.Parcel) -> <init>
    void <init>(java.lang.String) -> <init>
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.jaredrummler.android.processes.models.ControlGroup$1 -> wy.m:
    void <init>() -> <init>
    com.jaredrummler.android.processes.models.ControlGroup createFromParcel(android.os.Parcel) -> d
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    com.jaredrummler.android.processes.models.ControlGroup[] newArray(int) -> h
    java.lang.Object[] newArray(int) -> newArray
com.jaredrummler.android.processes.models.ProcFile -> wy.n:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String content -> k
    void <clinit>() -> <clinit>
    void <init>(android.os.Parcel) -> <init>
    void <init>(java.lang.String) -> <init>
    java.lang.String readFile(java.lang.String) -> d
    int describeContents() -> describeContents
    long length() -> length
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.jaredrummler.android.processes.models.ProcFile$1 -> wy.o:
    void <init>() -> <init>
    com.jaredrummler.android.processes.models.ProcFile createFromParcel(android.os.Parcel) -> e
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    com.jaredrummler.android.processes.models.ProcFile[] newArray(int) -> i
    java.lang.Object[] newArray(int) -> newArray
com.jaredrummler.android.processes.models.Stat -> wy.p:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String[] fields -> l
    void <clinit>() -> <clinit>
    void <init>(android.os.Parcel) -> <init>
    void <init>(android.os.Parcel,com.jaredrummler.android.processes.models.Stat$1) -> <init>
    void <init>(java.lang.String) -> <init>
    com.jaredrummler.android.processes.models.Stat get(int) -> j
    long arg_end() -> m
    long arg_start() -> n
    long blocked() -> o
    long cguest_time() -> p
    long cmajflt() -> q
    long cminflt() -> r
    long cnswap() -> s
    long cstime() -> t
    long cutime() -> u
    long delayacct_blkio_ticks() -> v
    long end_data() -> w
    long endcode() -> x
    long env_end() -> y
    long env_start() -> z
    int exit_code() -> A
    int exit_signal() -> B
    int flags() -> flags
    java.lang.String getComm() -> C
    int getPid() -> getPid
    long guest_time() -> D
    long itrealvalue() -> E
    long kstkeip() -> F
    long kstkesp() -> G
    long majflt() -> H
    long minflt() -> I
    int nice() -> J
    long nswap() -> K
    long num_threads() -> L
    int pgrp() -> M
    int policy() -> N
    int ppid() -> O
    long priority() -> P
    int processor() -> Q
    long rss() -> R
    long rsslim() -> S
    int rt_priority() -> T
    int session() -> U
    long sigcatch() -> V
    long sigignore() -> W
    long signal() -> X
    long start_brk() -> Y
    long start_data() -> Z
    long startcode() -> aa
    long startstack() -> ab
    long starttime() -> ac
    char state() -> ad
    long stime() -> ae
    int tpgid() -> af
    int tty_nr() -> ag
    long utime() -> ah
    long vsize() -> ai
    long wchan() -> aj
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.jaredrummler.android.processes.models.Stat$1 -> wy.q:
    void <init>() -> <init>
    com.jaredrummler.android.processes.models.Stat createFromParcel(android.os.Parcel) -> f
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    com.jaredrummler.android.processes.models.Stat[] newArray(int) -> k
    java.lang.Object[] newArray(int) -> newArray
com.jaredrummler.android.processes.models.Statm -> wy.r:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String[] fields -> l
    void <clinit>() -> <clinit>
    void <init>(android.os.Parcel) -> <init>
    void <init>(android.os.Parcel,com.jaredrummler.android.processes.models.Statm$1) -> <init>
    void <init>(java.lang.String) -> <init>
    com.jaredrummler.android.processes.models.Statm get(int) -> l
    long getResidentSetSize() -> ak
    long getSize() -> getSize
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.jaredrummler.android.processes.models.Statm$1 -> wy.s:
    void <init>() -> <init>
    com.jaredrummler.android.processes.models.Statm createFromParcel(android.os.Parcel) -> g
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    com.jaredrummler.android.processes.models.Statm[] newArray(int) -> m
    java.lang.Object[] newArray(int) -> newArray
com.jaredrummler.android.processes.models.Status -> wy.t:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void <clinit>() -> <clinit>
    void <init>(android.os.Parcel) -> <init>
    void <init>(android.os.Parcel,com.jaredrummler.android.processes.models.Status$1) -> <init>
    void <init>(java.lang.String) -> <init>
    com.jaredrummler.android.processes.models.Status get(int) -> n
    int getGid() -> getGid
    int getUid() -> getUid
    java.lang.String getValue(java.lang.String) -> getValue
com.jaredrummler.android.processes.models.Status$1 -> wy.u:
    void <init>() -> <init>
    com.jaredrummler.android.processes.models.Status createFromParcel(android.os.Parcel) -> h
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    com.jaredrummler.android.processes.models.Status[] newArray(int) -> o
    java.lang.Object[] newArray(int) -> newArray
org.anothermonitor.ActivityAbout -> org.anothermonitor.ActivityAbout:
    android.content.BroadcastReceiver receiverFinish -> m
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onStart() -> onStart
org.anothermonitor.ActivityAbout$1 -> org.anothermonitor.ActivityAbout$1:
    org.anothermonitor.ActivityAbout this$0 -> n
    void <init>(org.anothermonitor.ActivityAbout) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.anothermonitor.ActivityAbout$2 -> org.anothermonitor.a:
    org.anothermonitor.ActivityAbout this$0 -> n
    void <init>(org.anothermonitor.ActivityAbout) -> <init>
    void onClick(android.view.View) -> onClick
org.anothermonitor.ActivityHelp -> org.anothermonitor.ActivityHelp:
    android.content.BroadcastReceiver receiverFinish -> m
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onStart() -> onStart
org.anothermonitor.ActivityHelp$1 -> org.anothermonitor.ActivityHelp$1:
    org.anothermonitor.ActivityHelp this$0 -> o
    void <init>(org.anothermonitor.ActivityHelp) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.anothermonitor.ActivityMain -> org.anothermonitor.ActivityMain:
    int animDuration -> p
    boolean cached -> q
    boolean canvasLocked -> r
    boolean cpuAM -> s
    boolean cpuTotal -> t
    java.lang.Runnable drawRunnable -> u
    java.lang.Runnable drawRunnableGraphic -> v
    int graphicMode -> w
    int intervalRead -> x
    int intervalUpdate -> y
    int intervalWidth -> z
    android.widget.Button mBChooseProcess -> A
    android.widget.ToggleButton mBHide -> B
    android.widget.Button mBMemory -> C
    android.widget.Button mBRemoveAll -> D
    android.widget.FrameLayout mCloseSettings -> E
    java.text.DecimalFormat mFormat -> F
    java.text.DecimalFormat mFormatPercent -> G
    java.text.DecimalFormat mFormatTime -> H
    android.os.Handler mHandler -> mHandler
    android.os.Handler mHandlerVG -> I
    android.widget.ImageView mLButtonMenu -> J
    android.widget.ImageView mLButtonRecord -> K
    android.widget.LinearLayout mLCPUAM -> L
    android.widget.LinearLayout mLCPUTotal -> M
    android.widget.LinearLayout mLCached -> N
    android.widget.LinearLayout mLFeedback -> O
    android.widget.FrameLayout mLGraphicSurface -> P
    android.widget.LinearLayout mLMemAvailable -> Q
    android.widget.LinearLayout mLMemFree -> R
    android.widget.LinearLayout mLMemUsed -> S
    android.widget.LinearLayout mLMenu -> T
    android.widget.LinearLayout mLParent -> U
    android.widget.LinearLayout mLProcessContainer -> V
    android.widget.FrameLayout mLSettings -> W
    android.widget.LinearLayout mLThreshold -> X
    android.widget.LinearLayout mLTopBar -> Y
    android.widget.LinearLayout mLWelcome -> Z
    java.util.List mListSelected -> aa
    android.widget.PopupWindow mPWMenu -> ab
    android.content.SharedPreferences mPrefs -> ac
    android.widget.SeekBar mSBRead -> ad
    org.anothermonitor.ServiceReader mSR -> ae
    android.content.ServiceConnection mServiceConnection -> af
    android.widget.TextView mTVCPUAMP -> ag
    android.widget.TextView mTVCPUTotalP -> ah
    android.widget.TextView mTVCached -> ai
    android.widget.TextView mTVCachedP -> aj
    android.widget.TextView mTVMemAvailable -> ak
    android.widget.TextView mTVMemAvailableP -> al
    android.widget.TextView mTVMemFree -> am
    android.widget.TextView mTVMemFreeP -> an
    android.widget.TextView mTVMemTotal -> ao
    android.widget.TextView mTVMemUsed -> ap
    android.widget.TextView mTVMemUsedP -> aq
    android.widget.TextView mTVMemoryAM -> ar
    android.widget.TextView mTVThreshold -> as
    android.widget.TextView mTVThresholdP -> at
    java.lang.Thread mThread -> au
    org.anothermonitor.ViewGraphic mVG -> av
    boolean memAvailable -> aw
    boolean memFree -> ax
    boolean memUsed -> ay
    int navigationBarHeight -> az
    int orientation -> orientation
    boolean orientationChanged -> aA
    int processesMode -> aB
    android.content.BroadcastReceiver receiverDeadProcess -> aC
    android.content.BroadcastReceiver receiverFinish -> m
    android.content.BroadcastReceiver receiverSetIconRecord -> aD
    android.content.res.Resources res -> aE
    float sD -> aF
    int settingsHeight -> aG
    boolean settingsShown -> aH
    int statusBarHeight -> aI
    android.content.Intent tempIntent -> aJ
    boolean threshold -> aK
    void <init>() -> <init>
    int access$000(org.anothermonitor.ActivityMain) -> a
    int access$002(org.anothermonitor.ActivityMain,int) -> a
    android.os.Handler access$100(org.anothermonitor.ActivityMain) -> b
    android.widget.TextView access$1000(org.anothermonitor.ActivityMain) -> c
    void access$1100(org.anothermonitor.ActivityMain,android.widget.TextView,android.widget.TextView,java.util.List) -> a
    android.widget.TextView access$1200(org.anothermonitor.ActivityMain) -> d
    android.widget.TextView access$1300(org.anothermonitor.ActivityMain) -> e
    android.widget.TextView access$1400(org.anothermonitor.ActivityMain) -> f
    android.widget.TextView access$1500(org.anothermonitor.ActivityMain) -> g
    android.widget.TextView access$1600(org.anothermonitor.ActivityMain) -> h
    android.widget.TextView access$1700(org.anothermonitor.ActivityMain) -> i
    android.widget.TextView access$1800(org.anothermonitor.ActivityMain) -> j
    android.widget.TextView access$1900(org.anothermonitor.ActivityMain) -> k
    org.anothermonitor.ServiceReader access$200(org.anothermonitor.ActivityMain) -> l
    android.widget.LinearLayout access$2000(org.anothermonitor.ActivityMain) -> m
    org.anothermonitor.ServiceReader access$202(org.anothermonitor.ActivityMain,org.anothermonitor.ServiceReader) -> a
    void access$2100(org.anothermonitor.ActivityMain,android.widget.LinearLayout) -> a
    void access$2200(org.anothermonitor.ActivityMain,android.widget.LinearLayout) -> b
    java.lang.Thread access$2300(org.anothermonitor.ActivityMain) -> n
    java.lang.Thread access$2302(org.anothermonitor.ActivityMain,java.lang.Thread) -> a
    boolean access$2400(org.anothermonitor.ActivityMain) -> o
    boolean access$2402(org.anothermonitor.ActivityMain,boolean) -> a
    org.anothermonitor.ViewGraphic access$2500(org.anothermonitor.ActivityMain) -> p
    boolean access$2600(org.anothermonitor.ActivityMain) -> q
    boolean access$2602(org.anothermonitor.ActivityMain,boolean) -> b
    boolean access$2700(org.anothermonitor.ActivityMain) -> r
    boolean access$2702(org.anothermonitor.ActivityMain,boolean) -> c
    boolean access$2800(org.anothermonitor.ActivityMain) -> s
    boolean access$2802(org.anothermonitor.ActivityMain,boolean) -> d
    boolean access$2900(org.anothermonitor.ActivityMain) -> t
    boolean access$2902(org.anothermonitor.ActivityMain,boolean) -> e
    java.lang.Runnable access$300(org.anothermonitor.ActivityMain) -> u
    boolean access$3000(org.anothermonitor.ActivityMain) -> v
    boolean access$3002(org.anothermonitor.ActivityMain,boolean) -> f
    boolean access$3100(org.anothermonitor.ActivityMain) -> w
    boolean access$3102(org.anothermonitor.ActivityMain,boolean) -> g
    boolean access$3200(org.anothermonitor.ActivityMain) -> x
    boolean access$3202(org.anothermonitor.ActivityMain,boolean) -> h
    void access$3300(org.anothermonitor.ActivityMain) -> y
    java.text.DecimalFormat access$3400(org.anothermonitor.ActivityMain) -> z
    android.widget.TextView access$3500(org.anothermonitor.ActivityMain) -> A
    android.widget.LinearLayout access$3600(org.anothermonitor.ActivityMain) -> B
    void access$3700(org.anothermonitor.ActivityMain,boolean,android.widget.LinearLayout) -> a
    android.widget.LinearLayout access$3800(org.anothermonitor.ActivityMain) -> C
    android.widget.LinearLayout access$3900(org.anothermonitor.ActivityMain) -> D
    android.os.Handler access$400(org.anothermonitor.ActivityMain) -> E
    android.widget.LinearLayout access$4000(org.anothermonitor.ActivityMain) -> F
    android.widget.LinearLayout access$4100(org.anothermonitor.ActivityMain) -> G
    android.widget.LinearLayout access$4200(org.anothermonitor.ActivityMain) -> H
    android.widget.LinearLayout access$4300(org.anothermonitor.ActivityMain) -> I
    java.lang.Runnable access$4400(org.anothermonitor.ActivityMain) -> J
    android.content.Intent access$4500(org.anothermonitor.ActivityMain) -> K
    android.content.Intent access$4502(org.anothermonitor.ActivityMain,android.content.Intent) -> a
    void access$4600(org.anothermonitor.ActivityMain,java.util.Map) -> a
    int access$4700(org.anothermonitor.ActivityMain) -> L
    int access$4702(org.anothermonitor.ActivityMain,int) -> b
    android.content.SharedPreferences access$4800(org.anothermonitor.ActivityMain) -> M
    android.widget.ToggleButton access$4900(org.anothermonitor.ActivityMain) -> N
    android.widget.TextView access$500(org.anothermonitor.ActivityMain) -> O
    android.widget.Button access$5000(org.anothermonitor.ActivityMain) -> P
    android.widget.PopupWindow access$5100(org.anothermonitor.ActivityMain) -> Q
    android.widget.LinearLayout access$5200(org.anothermonitor.ActivityMain) -> R
    int access$5300(org.anothermonitor.ActivityMain) -> S
    android.widget.FrameLayout access$5400(org.anothermonitor.ActivityMain) -> T
    int access$5500(org.anothermonitor.ActivityMain) -> U
    int access$5502(org.anothermonitor.ActivityMain,int) -> c
    void access$5600(org.anothermonitor.ActivityMain) -> V
    android.widget.FrameLayout access$5700(org.anothermonitor.ActivityMain) -> W
    int access$5800(org.anothermonitor.ActivityMain) -> X
    java.util.List access$5900(org.anothermonitor.ActivityMain) -> Y
    void access$600(org.anothermonitor.ActivityMain,android.widget.TextView,android.widget.TextView,java.util.List,java.util.List[]) -> a
    android.widget.Button access$6000(org.anothermonitor.ActivityMain) -> Z
    android.widget.SeekBar access$6100(org.anothermonitor.ActivityMain) -> aa
    java.text.DecimalFormat access$6200(org.anothermonitor.ActivityMain) -> ab
    void access$6300(org.anothermonitor.ActivityMain) -> ac
    int access$6400(org.anothermonitor.ActivityMain) -> ad
    int access$6402(org.anothermonitor.ActivityMain,int) -> d
    int access$6502(org.anothermonitor.ActivityMain,int) -> e
    float access$6600(org.anothermonitor.ActivityMain) -> ae
    android.widget.LinearLayout access$6700(org.anothermonitor.ActivityMain) -> af
    android.widget.LinearLayout access$6702(org.anothermonitor.ActivityMain,android.widget.LinearLayout) -> c
    int access$6800(org.anothermonitor.ActivityMain) -> ag
    android.content.res.Resources access$6900(org.anothermonitor.ActivityMain) -> ah
    int access$700(org.anothermonitor.ActivityMain) -> ai
    android.widget.LinearLayout access$7000(org.anothermonitor.ActivityMain) -> aj
    android.widget.LinearLayout access$7002(org.anothermonitor.ActivityMain,android.widget.LinearLayout) -> d
    int access$702(org.anothermonitor.ActivityMain,int) -> f
    android.widget.TextView access$800(org.anothermonitor.ActivityMain) -> ak
    android.widget.TextView access$900(org.anothermonitor.ActivityMain) -> al
    int getColourForProcess(int) -> p
    void hideSettings() -> al
    void setIconRecording() -> am
    void setTextLabelCPU(android.widget.TextView,android.widget.TextView,java.util.List,java.util.List[]) -> a
    void setTextLabelCPUProcess(android.widget.LinearLayout) -> a
    void setTextLabelMemory(android.widget.TextView,android.widget.TextView,java.util.List) -> a
    void setTextLabelMemoryProcesses(android.widget.LinearLayout) -> b
    void showSettings() -> an
    void switchParameter(boolean,android.widget.LinearLayout) -> a
    void switchParameterForProcess(java.util.Map) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onPause() -> onPause
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
org.anothermonitor.ActivityMain$1 -> org.anothermonitor.b:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void run() -> run
org.anothermonitor.ActivityMain$10 -> org.anothermonitor.c:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void onClick(android.view.View) -> onClick
org.anothermonitor.ActivityMain$11 -> org.anothermonitor.d:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    boolean onLongClick(android.view.View) -> onLongClick
org.anothermonitor.ActivityMain$12 -> org.anothermonitor.e:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
org.anothermonitor.ActivityMain$13 -> org.anothermonitor.f:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void onClick(android.view.View) -> onClick
org.anothermonitor.ActivityMain$14 -> org.anothermonitor.g:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void onClick(android.view.View) -> onClick
org.anothermonitor.ActivityMain$15 -> org.anothermonitor.h:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void onClick(android.view.View) -> onClick
org.anothermonitor.ActivityMain$16 -> org.anothermonitor.i:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void onClick(android.view.View) -> onClick
org.anothermonitor.ActivityMain$17 -> org.anothermonitor.j:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void onClick(android.view.View) -> onClick
org.anothermonitor.ActivityMain$18 -> org.anothermonitor.k:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void onClick(android.view.View) -> onClick
org.anothermonitor.ActivityMain$19 -> org.anothermonitor.l:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void onClick(android.view.View) -> onClick
org.anothermonitor.ActivityMain$2 -> org.anothermonitor.m:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void run() -> run
org.anothermonitor.ActivityMain$2$1 -> org.anothermonitor.n:
    org.anothermonitor.ActivityMain$2 this$1 -> aM
    void <init>(org.anothermonitor.ActivityMain$2) -> <init>
    void run() -> run
org.anothermonitor.ActivityMain$20 -> org.anothermonitor.o:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void onClick(android.view.View) -> onClick
org.anothermonitor.ActivityMain$21 -> org.anothermonitor.p:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void onClick(android.view.View) -> onClick
org.anothermonitor.ActivityMain$22 -> org.anothermonitor.q:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void onClick(android.view.View) -> onClick
org.anothermonitor.ActivityMain$23 -> org.anothermonitor.r:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void onGlobalLayout() -> onGlobalLayout
org.anothermonitor.ActivityMain$24 -> org.anothermonitor.s:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void onClick(android.view.View) -> onClick
org.anothermonitor.ActivityMain$25 -> org.anothermonitor.t:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    boolean onLongClick(android.view.View) -> onLongClick
org.anothermonitor.ActivityMain$26 -> org.anothermonitor.u:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureAvailable
    boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture) -> onSurfaceTextureDestroyed
    void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureSizeChanged
    void onSurfaceTextureUpdated(android.graphics.SurfaceTexture) -> onSurfaceTextureUpdated
org.anothermonitor.ActivityMain$27 -> org.anothermonitor.v:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void onGlobalLayout() -> onGlobalLayout
org.anothermonitor.ActivityMain$28 -> org.anothermonitor.w:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void onClick(android.view.View) -> onClick
org.anothermonitor.ActivityMain$29 -> org.anothermonitor.x:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void onClick(android.view.View) -> onClick
org.anothermonitor.ActivityMain$29$1 -> org.anothermonitor.y:
    org.anothermonitor.ActivityMain$29 this$1 -> aN
    void <init>(org.anothermonitor.ActivityMain$29) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
org.anothermonitor.ActivityMain$3 -> org.anothermonitor.z:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
org.anothermonitor.ActivityMain$3$1 -> org.anothermonitor.aa:
    org.anothermonitor.ActivityMain$3 this$1 -> aO
    void <init>(org.anothermonitor.ActivityMain$3) -> <init>
    void onGlobalLayout() -> onGlobalLayout
org.anothermonitor.ActivityMain$30 -> org.anothermonitor.ab:
    org.anothermonitor.ActivityMain this$0 -> aL
    android.widget.TextView val$mTVIntervalRead -> aP
    void <init>(org.anothermonitor.ActivityMain,android.widget.TextView) -> <init>
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
org.anothermonitor.ActivityMain$31 -> org.anothermonitor.ac:
    org.anothermonitor.ActivityMain this$0 -> aL
    android.widget.SeekBar val$mSBUpdate -> aQ
    android.widget.TextView val$mTVIntervalUpdate -> aR
    void <init>(org.anothermonitor.ActivityMain,android.widget.SeekBar,android.widget.TextView) -> <init>
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
org.anothermonitor.ActivityMain$32 -> org.anothermonitor.ad:
    org.anothermonitor.ActivityMain this$0 -> aL
    android.widget.SeekBar val$mSBWidth -> aS
    android.widget.TextView val$mTVIntervalWidth -> aT
    void <init>(org.anothermonitor.ActivityMain,android.widget.SeekBar,android.widget.TextView) -> <init>
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
org.anothermonitor.ActivityMain$33 -> org.anothermonitor.ae:
    org.anothermonitor.ActivityMain this$0 -> aL
    android.widget.SeekBar val$mSBUpdate -> aQ
    android.widget.SeekBar val$mSBWidth -> aS
    void <init>(org.anothermonitor.ActivityMain,android.widget.SeekBar,android.widget.SeekBar) -> <init>
    void onClick(android.view.View) -> onClick
org.anothermonitor.ActivityMain$34 -> org.anothermonitor.af:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void onGlobalLayout() -> onGlobalLayout
org.anothermonitor.ActivityMain$35 -> org.anothermonitor.ag:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void onGlobalLayout() -> onGlobalLayout
org.anothermonitor.ActivityMain$36 -> org.anothermonitor.ah:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void onClick(android.view.View) -> onClick
org.anothermonitor.ActivityMain$36$1 -> org.anothermonitor.ai:
    org.anothermonitor.ActivityMain$36 this$1 -> aU
    void <init>(org.anothermonitor.ActivityMain$36) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
org.anothermonitor.ActivityMain$37 -> org.anothermonitor.aj:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void onClick(android.view.View) -> onClick
org.anothermonitor.ActivityMain$37$1 -> org.anothermonitor.ak:
    org.anothermonitor.ActivityMain$37 this$1 -> aV
    void <init>(org.anothermonitor.ActivityMain$37) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
org.anothermonitor.ActivityMain$38 -> org.anothermonitor.al:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void onClick(android.view.View) -> onClick
org.anothermonitor.ActivityMain$38$1 -> org.anothermonitor.am:
    org.anothermonitor.ActivityMain$38 this$1 -> aW
    void <init>(org.anothermonitor.ActivityMain$38) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
org.anothermonitor.ActivityMain$39 -> org.anothermonitor.an:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void onClick(android.view.View) -> onClick
org.anothermonitor.ActivityMain$39$1 -> org.anothermonitor.ao:
    org.anothermonitor.ActivityMain$39 this$1 -> aX
    void <init>(org.anothermonitor.ActivityMain$39) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
org.anothermonitor.ActivityMain$4 -> org.anothermonitor.ActivityMain$4:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.anothermonitor.ActivityMain$40 -> org.anothermonitor.ap:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
org.anothermonitor.ActivityMain$41 -> org.anothermonitor.aq:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
org.anothermonitor.ActivityMain$42 -> org.anothermonitor.ar:
    org.anothermonitor.ActivityMain this$0 -> aL
    android.widget.LinearLayout val$l -> aY
    java.util.Map val$process -> aZ
    void <init>(org.anothermonitor.ActivityMain,java.util.Map,android.widget.LinearLayout) -> <init>
    boolean onLongClick(android.view.View) -> onLongClick
org.anothermonitor.ActivityMain$43 -> org.anothermonitor.as:
    org.anothermonitor.ActivityMain this$0 -> aL
    java.util.Map val$process -> aZ
    void <init>(org.anothermonitor.ActivityMain,java.util.Map) -> <init>
    void onClick(android.view.View) -> onClick
org.anothermonitor.ActivityMain$44 -> org.anothermonitor.at:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void onClick(android.view.View) -> onClick
org.anothermonitor.ActivityMain$44$1 -> org.anothermonitor.au:
    org.anothermonitor.ActivityMain$44 this$1 -> ba
    void <init>(org.anothermonitor.ActivityMain$44) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
org.anothermonitor.ActivityMain$45 -> org.anothermonitor.av:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
org.anothermonitor.ActivityMain$46 -> org.anothermonitor.aw:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
org.anothermonitor.ActivityMain$5 -> org.anothermonitor.ActivityMain$5:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.anothermonitor.ActivityMain$6 -> org.anothermonitor.ActivityMain$6:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.anothermonitor.ActivityMain$7 -> org.anothermonitor.ax:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void onClick(android.view.View) -> onClick
org.anothermonitor.ActivityMain$8 -> org.anothermonitor.ay:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void onClick(android.view.View) -> onClick
org.anothermonitor.ActivityMain$9 -> org.anothermonitor.az:
    org.anothermonitor.ActivityMain this$0 -> aL
    void <init>(org.anothermonitor.ActivityMain) -> <init>
    void onClick(android.view.View) -> onClick
org.anothermonitor.ActivityProcesses -> org.anothermonitor.ActivityProcesses:
    android.widget.ListView mLV -> bb
    java.util.List mListProcesses -> bc
    java.util.List mListSelected -> aa
    android.widget.SimpleAdapter mSA -> bd
    int navigationBarHeight -> az
    android.content.BroadcastReceiver receiverFinish -> m
    void <init>() -> <init>
    java.util.List access$000(org.anothermonitor.ActivityProcesses) -> a
    java.util.List access$100(org.anothermonitor.ActivityProcesses) -> b
    android.widget.SimpleAdapter access$200(org.anothermonitor.ActivityProcesses) -> c
    int access$300(org.anothermonitor.ActivityProcesses) -> d
    java.util.Map mapDataForPlacesList(boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
org.anothermonitor.ActivityProcesses$1 -> org.anothermonitor.ActivityProcesses$1:
    org.anothermonitor.ActivityProcesses this$0 -> be
    void <init>(org.anothermonitor.ActivityProcesses) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.anothermonitor.ActivityProcesses$2 -> org.anothermonitor.ba:
    org.anothermonitor.ActivityProcesses this$0 -> be
    void <init>(org.anothermonitor.ActivityProcesses) -> <init>
    int compare(java.lang.Object,java.lang.Object) -> compare
    int compare(java.util.Map,java.util.Map) -> a
org.anothermonitor.ActivityProcesses$3 -> org.anothermonitor.bb:
    org.anothermonitor.ActivityProcesses this$0 -> be
    void <init>(org.anothermonitor.ActivityProcesses) -> <init>
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
org.anothermonitor.ActivityProcesses$4 -> org.anothermonitor.bc:
    org.anothermonitor.ActivityProcesses this$0 -> be
    void <init>(org.anothermonitor.ActivityProcesses) -> <init>
    void onClick(android.view.View) -> onClick
org.anothermonitor.ActivityProcesses$SimpleAdapterCustomised -> org.anothermonitor.bd:
    org.anothermonitor.ActivityProcesses this$0 -> be
    void <init>(org.anothermonitor.ActivityProcesses,android.content.Context,java.util.List,int,java.lang.String[],int[]) -> <init>
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
org.anothermonitor.ActivityProcesses$SimpleAdapterCustomised$Tag -> org.anothermonitor.be:
    android.widget.ImageView iv -> bf
    android.widget.LinearLayout l -> bg
    boolean selected -> bh
    org.anothermonitor.ActivityProcesses$SimpleAdapterCustomised this$1 -> bi
    android.widget.TextView tvPAppName -> bj
    android.widget.TextView tvPName -> bk
    void <init>(org.anothermonitor.ActivityProcesses$SimpleAdapterCustomised) -> <init>
org.anothermonitor.BuildConfig -> org.anothermonitor.bf:
    java.lang.String APPLICATION_ID -> a
    java.lang.String BUILD_TYPE -> b
    boolean DEBUG -> DEBUG
    java.lang.String FLAVOR -> c
    int VERSION_CODE -> d
    java.lang.String VERSION_NAME -> e
    void <init>() -> <init>
org.anothermonitor.C -> org.anothermonitor.bg:
    java.lang.String actionClose -> bl
    java.lang.String actionDeadProcess -> bm
    java.lang.String actionFinishActivity -> bn
    java.lang.String actionSetIconRecord -> bo
    java.lang.String actionStartRecord -> bp
    java.lang.String actionStopRecord -> bq
    java.lang.String android -> br
    java.lang.String cached -> bs
    java.lang.String canvasLocked -> bt
    java.lang.String cpuAM -> bu
    java.lang.String cpuTotal -> bv
    java.lang.String currentItem -> bw
    int defaultIntervalRead -> bx
    int defaultIntervalUpdate -> by
    int defaultIntervalWidth -> bz
    java.lang.String dimen -> bA
    java.lang.String europeLondon -> bB
    java.lang.String feedbackDone -> bC
    java.lang.String feedbackFirstTime -> bD
    java.lang.String firstTimeProcesses -> bE
    java.lang.String graphicMode -> bF
    int graphicModeHideMemory -> bG
    int graphicModeShowMemory -> bH
    java.lang.String intervalRead -> bI
    java.lang.String intervalUpdate -> bJ
    java.lang.String intervalWidth -> bK
    java.lang.String kB -> bL
    java.lang.String listProcesses -> bM
    java.lang.String listSelected -> bN
    java.lang.String mCBActiveD -> bO
    java.lang.String mCBBuffersD -> bP
    java.lang.String mCBCachedD -> bQ
    java.lang.String mCBCpuAMD -> bR
    java.lang.String mCBCpuTotalD -> bS
    java.lang.String mCBDirtyD -> bT
    java.lang.String mCBInactiveD -> bU
    java.lang.String mCBMemFreeD -> bV
    java.lang.String mCBSwapTotalD -> bW
    java.lang.String mSRead -> bX
    java.lang.String mSUpdate -> bY
    java.lang.String mSWidth -> bZ
    java.lang.String marketDetails -> ca
    java.lang.String memAvailable -> cb
    java.lang.String memFree -> cc
    java.lang.String memUsed -> cd
    java.lang.String menuShown -> ce
    java.lang.String nbh -> cf
    java.lang.String orientation -> cg
    java.lang.String pAppName -> ch
    java.lang.String pColour -> ci
    java.lang.String pDead -> cj
    java.lang.String pFinalValue -> ck
    java.lang.String pId -> cl
    java.lang.String pName -> cm
    java.lang.String pPackage -> cn
    java.lang.String pSelected -> co
    java.lang.String pTPD -> cp
    java.lang.String percent -> cq
    java.lang.String prefs -> cr
    java.lang.String process -> process
    java.lang.String processMode -> cs
    java.lang.String processesMode -> ct
    int processesModeShowCPU -> cu
    int processesModeShowMemory -> cv
    java.lang.String readThread -> cw
    java.lang.String sbh -> cx
    java.lang.String screenRotated -> cy
    java.lang.String settingsShown -> cz
    java.lang.String threshold -> cA
    java.lang.String welcome -> cB
    java.lang.String welcomeDate -> cC
    java.lang.String work -> cD
    java.lang.String workBefore -> cE
    void <init>() -> <init>
org.anothermonitor.LinearLayoutCustomised -> org.anothermonitor.LinearLayoutCustomised:
    boolean touchEventsDisabled -> cF
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void interceptChildTouchEvents(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
org.anothermonitor.R -> org.anothermonitor.bh:
    void <init>() -> <init>
org.anothermonitor.R$anim -> org.anothermonitor.R$anim:
    int grow_from_bottomcentre_to_topcentre -> grow_from_bottomcentre_to_topcentre
    int grow_from_topright_to_bottomleft -> grow_from_topright_to_bottomleft
    int shrink_from_bottomleft_to_topright -> shrink_from_bottomleft_to_topright
    int shrink_from_topcentre_to_bottomcentre -> shrink_from_topcentre_to_bottomcentre
    void <init>() -> <init>
org.anothermonitor.R$array -> org.anothermonitor.R$array:
    int read_interval_array -> read_interval_array
    int update_interval_array -> update_interval_array
    int width_interval_array -> width_interval_array
    void <init>() -> <init>
org.anothermonitor.R$attr -> org.anothermonitor.R$attr:
    void <init>() -> <init>
org.anothermonitor.R$color -> org.anothermonitor.R$color:
    int AliceBlue -> AliceBlue
    int AntiqueWhite -> AntiqueWhite
    int Aqua -> Aqua
    int Aquamarine -> Aquamarine
    int Azure -> Azure
    int Beige -> Beige
    int Bisque -> Bisque
    int Black -> Black
    int BlanchedAlmond -> BlanchedAlmond
    int Blue -> Blue
    int BlueViolet -> BlueViolet
    int Brown -> Brown
    int BurlyWood -> BurlyWood
    int CadetBlue -> CadetBlue
    int Chartreuse -> Chartreuse
    int Chocolate -> Chocolate
    int Coral -> Coral
    int CornflowerBlue -> CornflowerBlue
    int Cornsilk -> Cornsilk
    int Crimson -> Crimson
    int Cyan -> Cyan
    int DarkBlue -> DarkBlue
    int DarkCyan -> DarkCyan
    int DarkGoldenrod -> DarkGoldenrod
    int DarkGray -> DarkGray
    int DarkGreen -> DarkGreen
    int DarkKhaki -> DarkKhaki
    int DarkMagenta -> DarkMagenta
    int DarkOliveGreen -> DarkOliveGreen
    int DarkOrange -> DarkOrange
    int DarkOrchid -> DarkOrchid
    int DarkRed -> DarkRed
    int DarkSalmon -> DarkSalmon
    int DarkSeaGreen -> DarkSeaGreen
    int DarkSlateBlue -> DarkSlateBlue
    int DarkSlateGray -> DarkSlateGray
    int DarkTurquoise -> DarkTurquoise
    int DarkViolet -> DarkViolet
    int DeepPink -> DeepPink
    int DeepSkyBlue -> DeepSkyBlue
    int DimGray -> DimGray
    int DodgerBlue -> DodgerBlue
    int FireBrick -> FireBrick
    int FloralWhite -> FloralWhite
    int ForestGreen -> ForestGreen
    int Fuchsia -> Fuchsia
    int Gainsboro -> Gainsboro
    int GhostWhite -> GhostWhite
    int Gold -> Gold
    int Goldenrod -> Goldenrod
    int Gray -> Gray
    int GrayBG -> GrayBG
    int GrayMyPlaces -> GrayMyPlaces
    int GrayMyPlacesTop -> GrayMyPlacesTop
    int GrayMyPlacesTopTrans -> GrayMyPlacesTopTrans
    int GrayMyPlacesTrans -> GrayMyPlacesTrans
    int Green -> Green
    int GreenYellow -> GreenYellow
    int Honeydew -> Honeydew
    int HotPink -> HotPink
    int IndianRed -> IndianRed
    int Indigo -> Indigo
    int Ivory -> Ivory
    int Khaki -> Khaki
    int Lavender -> Lavender
    int LavenderBlush -> LavenderBlush
    int LawnGreen -> LawnGreen
    int LemonChiffon -> LemonChiffon
    int LightBlue -> LightBlue
    int LightCoral -> LightCoral
    int LightCyan -> LightCyan
    int LightGoldenrodYellow -> LightGoldenrodYellow
    int LightGreen -> LightGreen
    int LightGrey -> LightGrey
    int LightPink -> LightPink
    int LightSalmon -> LightSalmon
    int LightSeaGreen -> LightSeaGreen
    int LightSkyBlue -> LightSkyBlue
    int LightSlateGray -> LightSlateGray
    int LightSteelBlue -> LightSteelBlue
    int LightYellow -> LightYellow
    int Lime -> Lime
    int LimeGreen -> LimeGreen
    int Linen -> Linen
    int Magenta -> Magenta
    int Maroon -> Maroon
    int MediumAquamarine -> MediumAquamarine
    int MediumBlue -> MediumBlue
    int MediumOrchid -> MediumOrchid
    int MediumPurple -> MediumPurple
    int MediumSeaGreen -> MediumSeaGreen
    int MediumSlateBlue -> MediumSlateBlue
    int MediumSpringGreen -> MediumSpringGreen
    int MediumTurquoise -> MediumTurquoise
    int MediumVioletRed -> MediumVioletRed
    int MidnightBlue -> MidnightBlue
    int MintCream -> MintCream
    int MistyRose -> MistyRose
    int Moccasin -> Moccasin
    int NavajoWhite -> NavajoWhite
    int Navy -> Navy
    int OldLace -> OldLace
    int Olive -> Olive
    int OliveDrab -> OliveDrab
    int Orange -> Orange
    int OrangeRed -> OrangeRed
    int Orchid -> Orchid
    int PaleGoldenrod -> PaleGoldenrod
    int PaleGreen -> PaleGreen
    int PaleTurquoise -> PaleTurquoise
    int PaleVioletRed -> PaleVioletRed
    int PapayaWhip -> PapayaWhip
    int PeachPuff -> PeachPuff
    int Peru -> Peru
    int Pink -> Pink
    int Plum -> Plum
    int PowderBlue -> PowderBlue
    int Purple -> Purple
    int Red -> Red
    int RosyBrown -> RosyBrown
    int RoyalBlue -> RoyalBlue
    int SaddleBrown -> SaddleBrown
    int Salmon -> Salmon
    int SandyBrown -> SandyBrown
    int SeaGreen -> SeaGreen
    int Seashell -> Seashell
    int Sienna -> Sienna
    int Silver -> Silver
    int SkyBlue -> SkyBlue
    int SlateBlue -> SlateBlue
    int SlateGray -> SlateGray
    int Snow -> Snow
    int SpringGreen -> SpringGreen
    int SteelBlue -> SteelBlue
    int Tan -> Tan
    int Teal -> Teal
    int Thistle -> Thistle
    int Tomato -> Tomato
    int Turquoise -> Turquoise
    int VeryDarkGray -> VeryDarkGray
    int Violet -> Violet
    int Wheat -> Wheat
    int White -> White
    int WhiteSmoke -> WhiteSmoke
    int Yellow -> Yellow
    int YellowGreen -> YellowGreen
    int actv -> actv
    int androidBlue -> androidBlue
    int androidBlue2 -> androidBlue2
    int androidBlue2trans -> androidBlue2trans
    int androidBlue3 -> androidBlue3
    int aqua -> aqua
    int bgProcessessSelected -> bgProcessessSelected
    int bgProcessessUnderline -> bgProcessessUnderline
    int bgSettings -> bgSettings
    int bgSettingsUnderline -> bgSettingsUnderline
    int bgTopBar -> bgTopBar
    int bgTopBarUnderline -> bgTopBarUnderline
    int black -> black
    int blue -> blue
    int blueIcon -> blueIcon
    int blueMyPlaces -> blueMyPlaces
    int buttonMenu1 -> buttonMenu1
    int buttonMenu1b -> buttonMenu1b
    int buttonMenu1c -> buttonMenu1c
    int buttonMenu2 -> buttonMenu2
    int c02 -> c02
    int c1012 -> c1012
    int c108 -> c108
    int c1210 -> c1210
    int c1214 -> c1214
    int c1412 -> c1412
    int c1416 -> c1416
    int c1614 -> c1614
    int c1618 -> c1618
    int c1816 -> c1816
    int c1820 -> c1820
    int c20 -> c20
    int c2018 -> c2018
    int c2022 -> c2022
    int c2220 -> c2220
    int c2224 -> c2224
    int c24 -> c24
    int c2422 -> c2422
    int c2426 -> c2426
    int c2624 -> c2624
    int c2628 -> c2628
    int c2826 -> c2826
    int c2830 -> c2830
    int c30 -> c30
    int c3028 -> c3028
    int c3032 -> c3032
    int c3234 -> c3234
    int c3436 -> c3436
    int c36 -> c36
    int c42 -> c42
    int c46 -> c46
    int c64 -> c64
    int c68 -> c68
    int c810 -> c810
    int c86 -> c86
    int dateBlack -> dateBlack
    int dateTransparent -> dateTransparent
    int fuchsia -> fuchsia
    int gray -> gray
    int grayIcon -> grayIcon
    int green -> green
    int lime -> lime
    int maroon -> maroon
    int menuEntry -> menuEntry
    int navy -> navy
    int olive -> olive
    int process1 -> process1
    int process2 -> process2
    int process3 -> process3
    int process4 -> process4
    int process5 -> process5
    int process6 -> process6
    int process7 -> process7
    int process8 -> process8
    int purple -> purple
    int red -> red
    int separatorLine -> separatorLine
    int shadow -> shadow
    int silver -> silver
    int teal -> teal
    int titleHelp -> titleHelp
    int transparentGray -> transparentGray
    int white -> white
    int yellow -> yellow
    int yellowIcon -> yellowIcon
    int yellowMyPlaces -> yellowMyPlaces
    void <init>() -> <init>
org.anothermonitor.R$drawable -> org.anothermonitor.R$drawable:
    int bg_about -> bg_about
    int bg_menu_white -> bg_menu_white
    int bg_parameter_row -> bg_parameter_row
    int button_close_settings -> button_close_settings
    int button_graphic -> button_graphic
    int button_menu -> button_menu
    int button_menu_entry -> button_menu_entry
    int button_start_record -> button_start_record
    int button_stop_record -> button_stop_record
    int gradient_bg -> gradient_bg
    int gradient_nb -> gradient_nb
    int gradient_oval -> gradient_oval
    int gradient_process -> gradient_process
    int gradient_process_top -> gradient_process_top
    int gradient_tab_selected -> gradient_tab_selected
    int icon -> icon
    int icon_angle_down -> icon_angle_down
    int icon_bw -> icon_bw
    int icon_circle_pressed -> icon_circle_pressed
    int icon_circle_red -> icon_circle_red
    int icon_circle_sb -> icon_circle_sb
    int icon_ellipsis_vertical -> icon_ellipsis_vertical
    int icon_ellipsis_vertical_pressed -> icon_ellipsis_vertical_pressed
    int icon_info_circle -> icon_info_circle
    int icon_pause -> icon_pause
    int icon_play -> icon_play
    int icon_question_circle -> icon_question_circle
    int icon_recording -> icon_recording
    int icon_recording_bw -> icon_recording_bw
    int icon_stop -> icon_stop
    int icon_stop_pressed -> icon_stop_pressed
    int icon_stop_sb -> icon_stop_sb
    int icon_times -> icon_times
    int icon_times_ai -> icon_times_ai
    int logo_app -> logo_app
    int subtlepatterns_escheresque_ste -> subtlepatterns_escheresque_ste
    int transparent_pixel -> transparent_pixel
    void <init>() -> <init>
org.anothermonitor.R$id -> org.anothermonitor.R$id:
    int ANGraphic -> ANGraphic
    int BChooseProcess -> BChooseProcess
    int BFeedbackDone -> BFeedbackDone
    int BFeedbackNo -> BFeedbackNo
    int BFeedbackYes -> BFeedbackYes
    int BGooglePlay -> BGooglePlay
    int BHideMemory -> BHideMemory
    int BHint -> BHint
    int BMemory -> BMemory
    int BOK -> BOK
    int BRemoveAll -> BRemoveAll
    int BReset -> BReset
    int BSelectAllDraw -> BSelectAllDraw
    int BUnselectAllDraw -> BUnselectAllDraw
    int CBCachedD -> CBCachedD
    int CBCpuAMD -> CBCpuAMD
    int CBCpuTotalD -> CBCpuTotalD
    int CBMemFreeD -> CBMemFreeD
    int IVCPUAMPS -> IVCPUAMPS
    int IVCPUTotalPS -> IVCPUTotalPS
    int IVCachedS -> IVCachedS
    int IVMemAvailableS -> IVMemAvailableS
    int IVMemFreeS -> IVMemFreeS
    int IVMemUsedS -> IVMemUsedS
    int IVThresholdS -> IVThresholdS
    int IVpIconBig -> IVpIconBig
    int LAbout -> LAbout
    int LButtonMenu -> LButtonMenu
    int LButtonRecord -> LButtonRecord
    int LCPUAM -> LCPUAM
    int LCPUTotal -> LCPUTotal
    int LCached -> LCached
    int LClose -> LClose
    int LFeedback -> LFeedback
    int LGraphicButton -> LGraphicButton
    int LHelp -> LHelp
    int LHint -> LHint
    int LMemAvailable -> LMemAvailable
    int LMemFree -> LMemFree
    int LMemUsed -> LMemUsed
    int LNavigationBar -> LNavigationBar
    int LOK -> LOK
    int LParent -> LParent
    int LProcessContainer -> LProcessContainer
    int LProcessesProblem -> LProcessesProblem
    int LSettings -> LSettings
    int LTabs -> LTabs
    int LThreshold -> LThreshold
    int LTopBar -> LTopBar
    int LWindowMyPlacesTopBar -> LWindowMyPlacesTopBar
    int LpBG -> LpBG
    int SBIntervalRead -> SBIntervalRead
    int SBIntervalUpdate -> SBIntervalUpdate
    int SBIntervalWidth -> SBIntervalWidth
    int SRead -> SRead
    int SUpdate -> SUpdate
    int SWidth -> SWidth
    int TVAboutText -> TVAboutText
    int TVCPUAMP -> TVCPUAMP
    int TVCPUTotalP -> TVCPUTotalP
    int TVCached -> TVCached
    int TVCachedP -> TVCachedP
    int TVError -> TVError
    int TVFirstTimeText -> TVFirstTimeText
    int TVHelpText -> TVHelpText
    int TVIntervalRead -> TVIntervalRead
    int TVIntervalUpdate -> TVIntervalUpdate
    int TVIntervalWidth -> TVIntervalWidth
    int TVMemAvailable -> TVMemAvailable
    int TVMemAvailableP -> TVMemAvailableP
    int TVMemFree -> TVMemFree
    int TVMemFreeP -> TVMemFreeP
    int TVMemTotal -> TVMemTotal
    int TVMemUsed -> TVMemUsed
    int TVMemUsedP -> TVMemUsedP
    int TVMemoryAM -> TVMemoryAM
    int TVTabMain -> TVTabMain
    int TVTabShowRecord -> TVTabShowRecord
    int TVThreshold -> TVThreshold
    int TVThresholdP -> TVThresholdP
    int TVpAbsolute -> TVpAbsolute
    int TVpAppName -> TVpAppName
    int TVpName -> TVpName
    int TVpPercentage -> TVpPercentage
    int VP -> VP
    int VSFeedback -> VSFeedback
    int VSFirstTimeProcesses -> VSFirstTimeProcesses
    int VSWelcome -> VSWelcome
    int listView -> listView
    void <init>() -> <init>
org.anothermonitor.R$layout -> org.anothermonitor.R$layout:
    int activity_about -> activity_about
    int activity_help -> activity_help
    int activity_main -> activity_main
    int activity_preferences -> activity_preferences
    int activity_preferences_tab1 -> activity_preferences_tab1
    int activity_preferences_tab2 -> activity_preferences_tab2
    int activity_processes -> activity_processes
    int activity_processes_entry -> activity_processes_entry
    int layer_feedback -> layer_feedback
    int layer_hint -> layer_hint
    int layer_menu -> layer_menu
    int layer_process_entry -> layer_process_entry
    int layer_welcome -> layer_welcome
    void <init>() -> <init>
org.anothermonitor.R$string -> org.anothermonitor.R$string:
    int about_feedback_button -> about_feedback_button
    int about_feedback_text -> about_feedback_text
    int about_gnugpl_link -> about_gnugpl_link
    int about_gnugpl_text -> about_gnugpl_text
    int about_text -> about_text
    int about_text_title -> about_text_title
    int about_title -> about_title
    int anim_time -> anim_time
    int app_name -> app_name
    int button_cancel -> button_cancel
    int button_ok -> button_ok
    int button_reset -> button_reset
    int cd_paramter_status_icon -> cd_paramter_status_icon
    int content_description_logo_app -> content_description_logo_app
    int google_play_app_site -> google_play_app_site
    int graphic_paused -> graphic_paused
    int graphic_recording -> graphic_recording
    int graphic_update_interval -> graphic_update_interval
    int interval_read -> interval_read
    int interval_update -> interval_update
    int interval_width -> interval_width
    int menu_about -> menu_about
    int menu_close -> menu_close
    int menu_help -> menu_help
    int menu_record -> menu_record
    int menu_record_description -> menu_record_description
    int menu_record_stop_description -> menu_record_stop_description
    int menu_settings_description -> menu_settings_description
    int menu_stop_record -> menu_stop_record
    int notify_read -> notify_read
    int notify_read2 -> notify_read2
    int notify_record -> notify_record
    int notify_record2 -> notify_record2
    int notify_toast_error -> notify_toast_error
    int notify_toast_error_2 -> notify_toast_error_2
    int notify_toast_saved -> notify_toast_saved
    int p_cached -> p_cached
    int p_cpuanothermonitor -> p_cpuanothermonitor
    int p_cputotalusage -> p_cputotalusage
    int p_cpuusage -> p_cpuusage
    int p_kb -> p_kb
    int p_memavailable -> p_memavailable
    int p_memfree -> p_memfree
    int p_memtotal -> p_memtotal
    int p_memused -> p_memused
    int p_percentage -> p_percentage
    int p_threshold -> p_threshold
    int read_interval_prompt -> read_interval_prompt
    int read_interval_text -> read_interval_text
    int tab_main -> tab_main
    int tab_main_alert_ok -> tab_main_alert_ok
    int tab_main_alert_text -> tab_main_alert_text
    int tab_main_alert_title -> tab_main_alert_title
    int tab_main_text -> tab_main_text
    int tab_show -> tab_show
    int tab_show_select_all -> tab_show_select_all
    int tab_show_text -> tab_show_text
    int tab_show_unselect_all -> tab_show_unselect_all
    int update_interval_prompt -> update_interval_prompt
    int update_interval_text -> update_interval_text
    int w_help_text -> w_help_text
    int w_help_title -> w_help_title
    int w_main_choose_process -> w_main_choose_process
    int w_main_feedback_done -> w_main_feedback_done
    int w_main_feedback_done_thanks -> w_main_feedback_done_thanks
    int w_main_feedback_no -> w_main_feedback_no
    int w_main_feedback_no_remind -> w_main_feedback_no_remind
    int w_main_feedback_text -> w_main_feedback_text
    int w_main_feedback_title -> w_main_feedback_title
    int w_main_feedback_yes -> w_main_feedback_yes
    int w_main_hide -> w_main_hide
    int w_main_hint -> w_main_hint
    int w_main_hint_title -> w_main_hint_title
    int w_main_memory -> w_main_memory
    int w_main_mp_button_text -> w_main_mp_button_text
    int w_main_processes -> w_main_processes
    int w_main_remove_all -> w_main_remove_all
    int w_main_welcome -> w_main_welcome
    int w_processes_android_51_problem -> w_processes_android_51_problem
    int w_processes_dead -> w_processes_dead
    int w_processes_dead_notification -> w_processes_dead_notification
    int w_processes_empty -> w_processes_empty
    int w_processes_first_time -> w_processes_first_time
    int w_processes_select_some_process -> w_processes_select_some_process
    int w_processes_title -> w_processes_title
    int width_interval_prompt -> width_interval_prompt
    int width_interval_text -> width_interval_text
    void <init>() -> <init>
org.anothermonitor.R$style -> org.anothermonitor.R$style:
    int Animations -> Animations
    int Animations_PopDownMenu -> Animations_PopDownMenu
    int Animations_PopDownMenuBottom -> Animations_PopDownMenuBottom
    int CBParameters -> CBParameters
    int FirstColumn -> FirstColumn
    int LFeedbackLayerWidth -> LFeedbackLayerWidth
    int MainWindowArrangement -> MainWindowArrangement
    int MenuEntry -> MenuEntry
    int MenuEntryIcon -> MenuEntryIcon
    int MenuEntryText -> MenuEntryText
    int ParameterRow -> ParameterRow
    int ParameterStatusIcon -> ParameterStatusIcon
    int SBInterval -> SBInterval
    int SecondColumn -> SecondColumn
    int TVInterval -> TVInterval
    int TVTab -> TVTab
    int ThirdColumn -> ThirdColumn
    int ViewGraphicTopShadow -> ViewGraphicTopShadow
    int mTheme -> mTheme
    void <init>() -> <init>
org.anothermonitor.ServiceReader -> org.anothermonitor.ServiceReader:
    android.app.ActivityManager am -> cG
    android.os.Debug$MemoryInfo[] amMI -> cH
    java.util.List cached -> cI
    java.util.List cpuAM -> cJ
    java.util.List cpuTotal -> cK
    boolean firstRead -> cL
    int intervalRead -> x
    int intervalUpdate -> y
    int intervalWidth -> z
    java.io.File mFile -> cM
    java.util.List mListSelected -> aa
    android.app.NotificationManager mNM -> cN
    android.app.Notification mNotificationRead -> cO
    android.app.Notification mNotificationRecord -> cP
    android.content.SharedPreferences mPrefs -> ac
    java.io.BufferedWriter mW -> cQ
    int maxSamples -> cR
    java.util.List memAvailable -> cS
    java.util.List memFree -> cT
    int memTotal -> cU
    java.util.List memUsed -> cV
    java.util.List memoryAM -> cW
    android.app.ActivityManager$MemoryInfo mi -> cX
    int pId -> cY
    java.lang.Runnable readRunnable -> cZ
    java.lang.Thread readThread -> da
    java.io.BufferedReader reader -> db
    android.content.BroadcastReceiver receiverClose -> dc
    android.content.BroadcastReceiver receiverStartRecord -> dd
    android.content.BroadcastReceiver receiverStopRecord -> de
    boolean recording -> df
    java.lang.String s -> dg
    java.lang.String[] sa -> dh
    java.util.List threshold -> di
    boolean topRow -> dj
    long total -> dk
    long totalBefore -> dl
    long totalT -> dm
    long work -> dn
    long workAM -> do
    long workAMBefore -> dp
    long workAMT -> dq
    long workBefore -> dr
    long workT -> ds
    void <init>() -> <init>
    java.lang.Thread access$000(org.anothermonitor.ServiceReader) -> a
    void access$100(org.anothermonitor.ServiceReader) -> b
    int access$200(org.anothermonitor.ServiceReader) -> c
    java.lang.String getDate() -> ao
    void read() -> ap
    void record() -> aq
    float restrictPercentage(float) -> a
    void addProcess(java.util.Map) -> b
    java.util.List getCPUAMP() -> ar
    java.util.List getCPUTotalP() -> as
    java.util.List getCached() -> at
    int getIntervalRead() -> au
    int getIntervalUpdate() -> av
    int getIntervalWidth() -> aw
    java.util.List getMemAvailable() -> ax
    java.util.List getMemFree() -> ay
    int getMemTotal() -> az
    java.util.List getMemUsed() -> aA
    java.util.List getMemoryAM() -> aB
    java.util.List getProcesses() -> aC
    java.util.List getThreshold() -> aD
    boolean isRecording() -> aE
    void notifyError(java.io.IOException) -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void removeProcess(java.util.Map) -> c
    void setIntervals(int,int,int) -> a
    void startRecord() -> aF
    void stopRecord() -> aG
org.anothermonitor.ServiceReader$1 -> org.anothermonitor.bi:
    org.anothermonitor.ServiceReader this$0 -> dt
    void <init>(org.anothermonitor.ServiceReader) -> <init>
    void run() -> run
org.anothermonitor.ServiceReader$2 -> org.anothermonitor.ServiceReader$2:
    org.anothermonitor.ServiceReader this$0 -> dt
    void <init>(org.anothermonitor.ServiceReader) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.anothermonitor.ServiceReader$3 -> org.anothermonitor.ServiceReader$3:
    org.anothermonitor.ServiceReader this$0 -> dt
    void <init>(org.anothermonitor.ServiceReader) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.anothermonitor.ServiceReader$4 -> org.anothermonitor.ServiceReader$4:
    org.anothermonitor.ServiceReader this$0 -> dt
    void <init>(org.anothermonitor.ServiceReader) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.anothermonitor.ServiceReader$5 -> org.anothermonitor.bj:
    org.anothermonitor.ServiceReader this$0 -> dt
    java.io.IOException val$e -> du
    void <init>(org.anothermonitor.ServiceReader,java.io.IOException) -> <init>
    void run() -> run
org.anothermonitor.ServiceReader$ServiceReaderDataBinder -> org.anothermonitor.bk:
    org.anothermonitor.ServiceReader this$0 -> dt
    void <init>(org.anothermonitor.ServiceReader) -> <init>
    org.anothermonitor.ServiceReader getService() -> aH
org.anothermonitor.ViewGraphic -> org.anothermonitor.ViewGraphic:
    android.graphics.Paint bgPaint -> dv
    android.graphics.Rect bgRect -> dw
    java.util.List cached -> cI
    boolean cachedD -> dx
    android.graphics.Paint cachedPaint -> dy
    android.graphics.Paint circlePaint -> dz
    java.util.List cpuAM -> cJ
    boolean cpuAMD -> dA
    android.graphics.Paint cpuAMPaint -> dB
    java.util.List cpuTotal -> cK
    boolean cpuTotalD -> dC
    android.graphics.Paint cpuTotalPaint -> dD
    int graphicHeight -> dE
    boolean graphicInitialised -> dF
    java.lang.String graphicIntervaWidthlText -> dG
    int graphicMode -> w
    int graphicWidth -> dH
    int intervalTotalNumber -> dI
    android.graphics.Paint linesEdgePaint -> dJ
    android.graphics.Paint linesGridPaint -> dK
    java.text.DecimalFormat mFormatPercent -> G
    org.anothermonitor.ServiceReader mSR -> ae
    java.lang.Thread mThread -> au
    java.util.List memAvailable -> cS
    boolean memAvailableD -> dL
    android.graphics.Paint memAvailablePaint -> dM
    java.util.List memFree -> cT
    boolean memFreeD -> dN
    android.graphics.Paint memFreePaint -> dO
    int memTotal -> cU
    java.util.List memUsed -> cV
    boolean memUsedD -> dP
    android.graphics.Paint memUsedPaint -> dQ
    java.util.List memoryAM -> cW
    int minutes -> dR
    java.util.Map paints -> dS
    int processesMode -> aB
    java.lang.String readIntervalText -> dT
    java.lang.String recordingText -> dU
    android.content.res.Resources res -> aE
    int seconds -> dV
    int tempVar -> dW
    android.graphics.Paint textPaintInside -> dX
    android.graphics.Paint textPaintLegend -> dY
    android.graphics.Paint textPaintLegendV -> dZ
    android.graphics.Paint textPaintRecording -> ea
    int textSize -> textSize
    int textSizeLegend -> eb
    int thickEdges -> ec
    int thickGrid -> ed
    int thickParam -> ee
    java.util.List threshold -> di
    boolean thresholdD -> ef
    android.graphics.Paint thresholdPaint -> eg
    java.lang.String updateIntervalText -> eh
    int xLeft -> ei
    int xLeftTextSpace -> ej
    int xRight -> ek
    int yBottom -> el
    int yBottomTextSpace -> em
    int yLegendSpace -> en
    int yTop -> eo
    int yTopSeparation -> ep
    void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void drawLine(java.util.List,android.graphics.Canvas,android.graphics.Paint) -> a
    void drawLineFloat(java.util.List,android.graphics.Canvas,android.graphics.Paint) -> b
    void drawLineInteger(java.util.List,android.graphics.Canvas,android.graphics.Paint) -> c
    android.graphics.Paint getPaint(int,android.graphics.Paint$Align,int,boolean,float) -> a
    void initializeGraphic() -> aI
    void calculateInnerVariables() -> aJ
    void onDrawCustomised(android.graphics.Canvas,java.lang.Thread) -> a
    void setGraphicMode(int) -> setGraphicMode
    void setParameters(boolean,boolean,boolean,boolean,boolean,boolean,boolean) -> a
    void setProcessesMode(int) -> setProcessesMode
    void setService(org.anothermonitor.ServiceReader) -> setService
