New Name                         Original Name
-------------------------------------------------------------------------------
be.brunoparmentier.apkshare.z    public final android.support.v4.BuildConfig
be.brunoparmentier.apkshare.eval__       public android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator$NullPointerException
be.brunoparmentier.apkshare.eval_a       public android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$HoneycombValueAnimatorCompat$ParseException
be.brunoparmentier.apkshare.eval_b       public android.support.v4.animation.AnimatorListenerCompat$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_c       public android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$NullPointerException
be.brunoparmentier.apkshare.eval_d       android.support.v4.app.ActionBarDrawerToggleHoneycomb
be.brunoparmentier.apkshare.eval_e       public android.support.v4.animation.AnimatorCompatHelper$Exception
be.brunoparmentier.apkshare.eval_f       public abstract interface android.support.v4.animation.AnimatorListenerCompat
be.brunoparmentier.apkshare.eval_g       public android.support.v4.animation.AnimatorUpdateListenerCompat$ParseException
be.brunoparmentier.apkshare.eval_h       android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2
be.brunoparmentier.apkshare.eval_i       public abstract interface android.support.v4.animation.AnimatorUpdateListenerCompat
be.brunoparmentier.apkshare.eval_j       public android.support.v4.animation.ValueAnimatorCompat$IOException
be.brunoparmentier.apkshare.eval_k       abstract interface android.support.v4.animation.AnimatorProvider
be.brunoparmentier.apkshare.eval_l       public android.support.v4.animation.DonutAnimatorCompatProvider$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_m       public abstract interface android.support.v4.animation.ValueAnimatorCompat
be.brunoparmentier.apkshare.eval_n       android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs
be.brunoparmentier.apkshare.eval_o       public android.support.v4.app.ActionBarDrawerToggle
be.brunoparmentier.apkshare.eval_p       public android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$IOException
be.brunoparmentier.apkshare.eval_q       public android.support.v4.BuildConfig$NullPointerException
be.brunoparmentier.apkshare.eval_r       android.support.v4.animation.DonutAnimatorCompatProvider
be.brunoparmentier.apkshare.eval_s       android.support.v4.animation.HoneycombMr1AnimatorCompatProvider
be.brunoparmentier.apkshare.eval_t       public android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2$ParseException
be.brunoparmentier.apkshare.eval_u       public android.support.v4.animation.AnimatorProvider$NullPointerException
be.brunoparmentier.apkshare.eval_v       public android.support.v4.app.ActionBarDrawerToggle$Exception
be.brunoparmentier.apkshare.eval_w       public android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs$IOException
be.brunoparmentier.apkshare.eval_x       public abstract android.support.v4.animation.AnimatorCompatHelper
be.brunoparmentier.apkshare.eval_y       public android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat
be.brunoparmentier.apkshare.eval__0      public android.support.v7.widget.PopupMenu
be.brunoparmentier.apkshare.eval__1      public android.support.v7.internal.view.menu.BaseMenuWrapper$IOException
be.brunoparmentier.apkshare.eval__2      public android.support.v4.media.TransportMediator
be.brunoparmentier.apkshare.eval__3      public abstract android.support.v4.app.NotificationCompatSideChannelService
be.brunoparmentier.apkshare.eval__4      public android.support.v7.internal.widget.AppCompatPopupWindow
be.brunoparmentier.apkshare.eval__5      public android.support.v4.media.RatingCompat$ParseException
be.brunoparmentier.apkshare.eval__6      public android.support.v7.app.AppCompatActivity$NullPointerException
be.brunoparmentier.apkshare.eval__7      android.support.v4.widget.EdgeEffectCompatIcs
be.brunoparmentier.apkshare.eval__8      public android.support.v7.app.ActionBarActivity
be.brunoparmentier.apkshare.eval__9      public android.support.v4.util.Pair$IOException
be.brunoparmentier.apkshare.eval___      public android.support.v7.internal.widget.AbsSpinnerCompat$SavedState$ParseException
be.brunoparmentier.apkshare.eval__a      public android.support.v4.app.ShareCompat
be.brunoparmentier.apkshare.eval__b      public android.support.v7.internal.view.menu.BaseMenuPresenter$NullPointerException
be.brunoparmentier.apkshare.eval__c      public android.support.v4.app.RemoteInput$Exception
be.brunoparmentier.apkshare.eval__d      public android.support.v4.media.session.MediaSessionCompatApi14
be.brunoparmentier.apkshare.eval__e      public android.support.v4.content.IntentCompatIcsMr1$NullPointerException
be.brunoparmentier.apkshare.eval__f      public android.support.v7.widget.RecyclerView$LayoutManager$ParseException
be.brunoparmentier.apkshare.eval__g      public android.support.v4.widget.PopupWindowCompat
be.brunoparmentier.apkshare.eval__h      public android.support.v4.media.session.MediaSessionCompatApi19
be.brunoparmentier.apkshare.eval__i      public android.support.v4.view.ViewConfigurationCompatFroyo$ParseException
be.brunoparmentier.apkshare.eval__j      public android.support.v7.internal.widget.TintInfo$IOException
be.brunoparmentier.apkshare.eval__k      public android.support.v4.widget.CursorFilter$IOException
be.brunoparmentier.apkshare.eval__l      public android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$NullPointerException
be.brunoparmentier.apkshare.eval__m      public android.support.v7.internal.widget.ContentFrameLayout$IOException
be.brunoparmentier.apkshare.eval__n      public android.support.v4.os.AsyncTaskCompat
be.brunoparmentier.apkshare.eval__o      public android.support.v4.view.ViewPropertyAnimatorListenerAdapter
be.brunoparmentier.apkshare.eval__p      public android.support.v7.widget.ListPopupWindow$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval__q      public android.support.v4.provider.RawDocumentFile$IOException
be.brunoparmentier.apkshare.eval__r      android.support.v7.internal.widget.SpinnerCompat
be.brunoparmentier.apkshare.eval__s      public android.support.v4.util.LogWriter
be.brunoparmentier.apkshare.eval__t      android.support.v4.view.PagerTitleStripIcs
be.brunoparmentier.apkshare.eval__u      android.support.v7.internal.view.menu.MenuWrapperICS
be.brunoparmentier.apkshare.eval__v      public android.support.v4.media.session.MediaSessionCompatApi18
be.brunoparmentier.apkshare.eval__w      public android.support.v4.media.session.IMediaControllerCallback$ParseException
be.brunoparmentier.apkshare.eval__x      public final android.support.v7.internal.view.menu.ExpandedMenuView
be.brunoparmentier.apkshare.eval__y      public android.support.v4.graphics.drawable.RoundedBitmapDrawable21$NullPointerException
be.brunoparmentier.apkshare.eval__z      public android.support.v4.media.session.MediaSessionCompatApi14$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_a0      abstract interface android.support.v7.widget.CardViewImpl
be.brunoparmentier.apkshare.eval_a1      public android.support.v7.recyclerview.BuildConfig$IOException
be.brunoparmentier.apkshare.eval_a2      public android.support.v4.view.ViewParentCompat$NullPointerException
be.brunoparmentier.apkshare.eval_a3      public android.support.v7.internal.view.menu.MenuWrapperICS$ParseException
be.brunoparmentier.apkshare.eval_a4      public android.support.v7.internal.view.StandaloneActionMode$IOException
be.brunoparmentier.apkshare.eval_a5      public android.support.v4.widget.ScrollerCompat
be.brunoparmentier.apkshare.eval_a6      android.support.v4.view.KeyEventCompatEclair
be.brunoparmentier.apkshare.eval_a7      public android.support.v7.internal.VersionUtils$NullPointerException
be.brunoparmentier.apkshare.eval_a8      public android.support.v4.app.FragmentActivity$Exception
be.brunoparmentier.apkshare.eval_a9      public android.support.v4.app.RemoteInput
be.brunoparmentier.apkshare.eval_a_      public android.support.v7.internal.view.ActionBarPolicy$IOException
be.brunoparmentier.apkshare.eval_aa      public android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean$ParseException
be.brunoparmentier.apkshare.eval_ab      android.support.v4.app.ActivityOptionsCompatJB
be.brunoparmentier.apkshare.eval_ac      public android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$ParseException
be.brunoparmentier.apkshare.eval_ad      public android.support.v4.widget.SwipeProgressBar$ParseException
be.brunoparmentier.apkshare.eval_ae      public android.support.v4.app.ActivityOptionsCompat$Exception
be.brunoparmentier.apkshare.eval_af      public android.support.v4.media.MediaDescriptionCompat$ParseException
be.brunoparmentier.apkshare.eval_ag      android.support.v4.app.RemoteInputCompatApi20
be.brunoparmentier.apkshare.eval_ah      android.support.v4.view.ViewGroupCompatLollipop
be.brunoparmentier.apkshare.eval_ai      android.support.v4.app.NotificationManagerCompatEclair
be.brunoparmentier.apkshare.eval_aj      public android.support.v4.app.BackStackState$ParseException
be.brunoparmentier.apkshare.eval_ak      android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1
be.brunoparmentier.apkshare.eval_al      public android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$NullPointerException
be.brunoparmentier.apkshare.eval_am      public android.support.v4.app.ActivityOptionsCompat21$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_an      public android.support.v4.view.TintableBackgroundView$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_ao      public android.support.v7.internal.view.menu.SubMenuBuilder$ParseException
be.brunoparmentier.apkshare.eval_ap      public android.support.v4.app.NotificationManagerCompat$IOException
be.brunoparmentier.apkshare.eval_aq      public android.support.v7.widget.CardViewApi21$Exception
be.brunoparmentier.apkshare.eval_ar      public android.support.v4.view.AccessibilityDelegateCompat$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_as      abstract android.support.v7.internal.widget.AbsSpinnerCompat
be.brunoparmentier.apkshare.eval_at      public android.support.v7.internal.widget.FitWindowsFrameLayout
be.brunoparmentier.apkshare.eval_au      public android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$NullPointerException
be.brunoparmentier.apkshare.eval_av      public android.support.v4.content.ContextCompatHoneycomb$Exception
be.brunoparmentier.apkshare.eval_aw      public android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$ParseException
be.brunoparmentier.apkshare.eval_ax      public android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$NullPointerException
be.brunoparmentier.apkshare.eval_ay      android.support.v4.view.ViewCompatBase
be.brunoparmentier.apkshare.eval_az      android.support.v4.view.MenuItemCompatIcs
be.brunoparmentier.apkshare.eval_b0      public android.support.v4.app.ActivityOptionsCompat
be.brunoparmentier.apkshare.eval_b1      public android.support.v7.internal.view.SupportActionModeWrapper
be.brunoparmentier.apkshare.eval_b2      public android.support.v4.view.ViewParentCompatICS
be.brunoparmentier.apkshare.eval_b3      android.support.v4.view.accessibility.AccessibilityManagerCompatIcs
be.brunoparmentier.apkshare.eval_b4      android.support.v7.internal.view.menu.MenuItemWrapperJB
be.brunoparmentier.apkshare.eval_b5      public android.support.v7.widget.GridLayoutManager
be.brunoparmentier.apkshare.eval_b6      public android.support.v4.view.LayoutInflaterCompat
be.brunoparmentier.apkshare.eval_b7      public android.support.v7.app.AppCompatDelegate$NullPointerException
be.brunoparmentier.apkshare.eval_b8      android.support.v4.widget.EdgeEffectCompatLollipop
be.brunoparmentier.apkshare.eval_b9      public android.support.v4.view.NestedScrollingChildHelper$NullPointerException
be.brunoparmentier.apkshare.eval_b_      public android.support.v4.view.MotionEventCompatHoneycombMr1$IOException
be.brunoparmentier.apkshare.eval_ba      public android.support.v7.internal.view.ViewPropertyAnimatorCompatSet$ParseException
be.brunoparmentier.apkshare.eval_bb      public android.support.v4.view.WindowCompat
be.brunoparmentier.apkshare.eval_bc      public android.support.v4.view.animation.LinearOutSlowInInterpolator
be.brunoparmentier.apkshare.eval_bd      public android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation$NullPointerException
be.brunoparmentier.apkshare.eval_be      android.support.v4.view.ViewCompatGingerbread
be.brunoparmentier.apkshare.eval_bf      public android.support.v4.media.session.MediaSessionCompatApi21$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_bg      public android.support.v7.internal.widget.ThemeUtils
be.brunoparmentier.apkshare.eval_bh      public android.support.v7.internal.view.menu.ActionMenuItemView
be.brunoparmentier.apkshare.eval_bi      public android.support.v7.widget.AppCompatTextView
be.brunoparmentier.apkshare.eval_bj      public android.support.v7.widget.RecyclerView
be.brunoparmentier.apkshare.eval_bk      public android.support.v7.internal.app.WindowDecorActionBar$ParseException
be.brunoparmentier.apkshare.eval_bl      public android.support.v7.widget.helper.ItemTouchHelper
be.brunoparmentier.apkshare.eval_bm      public android.support.v7.widget.CardView$Exception
be.brunoparmentier.apkshare.eval_bn      public android.support.v7.internal.app.WindowDecorActionBar
be.brunoparmentier.apkshare.eval_bo      public abstract android.support.v4.app.FragmentStatePagerAdapter
be.brunoparmentier.apkshare.eval_bp      public android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_bq      android.support.v7.widget.SuggestionsAdapter
be.brunoparmentier.apkshare.eval_br      public android.support.v4.widget.MaterialProgressDrawable$NullPointerException
be.brunoparmentier.apkshare.eval_bs      public abstract interface android.support.v4.os.ParcelableCompatCreatorCallbacks
be.brunoparmentier.apkshare.eval_bt      public android.support.v4.content.LocalBroadcastManager
be.brunoparmentier.apkshare.eval_bu      public android.support.v4.content.Loader$IOException
be.brunoparmentier.apkshare.eval_bv      android.support.v4.media.session.MediaSessionCompatApi21
be.brunoparmentier.apkshare.eval_bw      public android.support.v4.widget.ListPopupWindowCompat$ParseException
be.brunoparmentier.apkshare.eval_bx      public abstract interface android.support.v7.internal.widget.DecorContentParent
be.brunoparmentier.apkshare.eval_by      public final android.support.v4.util.CircularIntArray
be.brunoparmentier.apkshare.eval_bz      public android.support.v4.media.TransportMediator$ParseException
be.brunoparmentier.apkshare.eval_c0      public android.support.v4.view.ViewPropertyAnimatorCompatJB$ParseException
be.brunoparmentier.apkshare.eval_c1      public android.support.v4.view.WindowInsetsCompat$ParseException
be.brunoparmentier.apkshare.eval_c2      public abstract interface android.support.v7.internal.view.menu.MenuView
be.brunoparmentier.apkshare.eval_c3      public android.support.v7.widget.CardView
be.brunoparmentier.apkshare.eval_c4      public android.support.v4.view.OnApplyWindowInsetsListener$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_c5      public final be.brunoparmentier.apkshare.R
be.brunoparmentier.apkshare.eval_c6      public android.support.v4.widget.SwipeRefreshLayout
be.brunoparmentier.apkshare.eval_c7      public android.support.v4.app.NotificationCompatExtras$ParseException
be.brunoparmentier.apkshare.eval_c8      android.support.v4.view.ViewPropertyAnimatorCompatJellybeanMr2
be.brunoparmentier.apkshare.eval_c9      public be.brunoparmentier.apkshare.AppListActivity$IOException
be.brunoparmentier.apkshare.eval_c_      android.support.v4.view.ViewGroupCompatIcs
be.brunoparmentier.apkshare.eval_ca      public android.support.v4.text.BidiFormatter$ParseException
be.brunoparmentier.apkshare.eval_cb      public android.support.v4.app.TaskStackBuilderHoneycomb$IOException
be.brunoparmentier.apkshare.eval_cc      public android.support.v4.content.AsyncTaskLoader$ParseException
be.brunoparmentier.apkshare.eval_cd      public android.support.v4.view.LayoutInflaterCompatLollipop$ParseException
be.brunoparmentier.apkshare.eval_ce      public android.support.v4.app.NavUtils$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_cf      android.support.v4.content.IntentCompatIcsMr1
be.brunoparmentier.apkshare.eval_cg      android.support.v4.content.IntentCompatHoneycomb
be.brunoparmentier.apkshare.eval_ch      public final android.support.v4.media.session.PlaybackStateCompat
be.brunoparmentier.apkshare.eval_ci      public abstract interface android.support.v7.internal.widget.DecorToolbar
be.brunoparmentier.apkshare.eval_cj      public android.support.v4.widget.NestedScrollView$SavedState$IOException
be.brunoparmentier.apkshare.eval_ck      public final android.support.v7.recyclerview.BuildConfig
be.brunoparmentier.apkshare.eval_cl      android.support.v4.view.accessibility.AccessibilityEventCompatIcs
be.brunoparmentier.apkshare.eval_cm      public android.support.v4.net.ConnectivityManagerCompatHoneycombMR2$NullPointerException
be.brunoparmentier.apkshare.eval_cn      public android.support.v4.app.NotificationManagerCompatEclair$Exception
be.brunoparmentier.apkshare.eval_co      public android.support.v4.view.ViewParentCompatICS$IOException
be.brunoparmentier.apkshare.eval_cp      public android.support.v4.graphics.drawable.DrawableCompatBase$NullPointerException
be.brunoparmentier.apkshare.eval_cq      public android.support.v4.app.ServiceCompat
be.brunoparmentier.apkshare.eval_cr      public android.support.v4.app.BackStackRecord$IOException
be.brunoparmentier.apkshare.eval_cs      android.support.v4.view.AccessibilityDelegateCompatIcs
be.brunoparmentier.apkshare.eval_ct      public android.support.v7.widget.LinearLayoutCompat
be.brunoparmentier.apkshare.eval_cu      public android.support.v4.app.NotificationManagerCompat$SideChannelManager$ParseException
be.brunoparmentier.apkshare.eval_cv      public android.support.v7.widget.CardViewDelegate$ParseException
be.brunoparmentier.apkshare.eval_cw      public android.support.v4.view.ScrollingView$ParseException
be.brunoparmentier.apkshare.eval_cx      public android.support.v7.appcompat.BuildConfig$NullPointerException
be.brunoparmentier.apkshare.eval_cy      public android.support.v7.internal.widget.AdapterViewCompat$ParseException
be.brunoparmentier.apkshare.eval_cz      public android.support.v4.util.LongSparseArray$Exception
be.brunoparmentier.apkshare.eval_d0      android.support.v4.os.AsyncTaskCompatHoneycomb
be.brunoparmentier.apkshare.eval_d1      public android.support.v4.media.session.MediaSessionCompat$Token$ParseException
be.brunoparmentier.apkshare.eval_d2      public android.support.v4.view.ViewCompatEclairMr1$IOException
be.brunoparmentier.apkshare.eval_d3      public android.support.v4.app.ActivityCompatJB$Exception
be.brunoparmentier.apkshare.eval_d4      public android.support.v4.widget.SimpleCursorAdapter
be.brunoparmentier.apkshare.eval_d5      public android.support.v7.internal.widget.FitWindowsLinearLayout
be.brunoparmentier.apkshare.eval_d6      android.support.v4.view.LayoutInflaterCompatHC
be.brunoparmentier.apkshare.eval_d7      public android.support.v7.internal.widget.ListViewCompat$Exception
be.brunoparmentier.apkshare.eval_d8      public be.brunoparmentier.apkshare.AppListActivityFragment$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_d9      public android.support.v7.widget.AppCompatRadioButton
be.brunoparmentier.apkshare.eval_d_      public android.support.v4.view.animation.FastOutLinearInInterpolator$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_da      public android.support.v7.internal.widget.TintContextWrapper
be.brunoparmentier.apkshare.eval_db      public android.support.v4.app.NotificationCompatBase$UnreadConversation$Exception
be.brunoparmentier.apkshare.eval_dc      public abstract interface android.support.v4.view.TintableBackgroundView
be.brunoparmentier.apkshare.eval_dd      public android.support.v7.widget.AppCompatCheckedTextView$NullPointerException
be.brunoparmentier.apkshare.eval_de      android.support.v4.app.ActivityCompatHoneycomb
be.brunoparmentier.apkshare.eval_df      public abstract android.support.v4.view.PagerAdapter
be.brunoparmentier.apkshare.eval_dg      android.support.v4.app.ActivityCompatJB
be.brunoparmentier.apkshare.eval_dh      public android.support.v4.text.ICUCompat
be.brunoparmentier.apkshare.eval_di      public android.support.v4.view.ViewGroupCompat$Exception
be.brunoparmentier.apkshare.eval_dj      public android.support.v7.internal.widget.TintImageView
be.brunoparmentier.apkshare.eval_dk      public android.support.v7.widget.SearchView$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_dl      public android.support.v4.app.SuperNotCalledException$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_dm      public android.support.v4.view.NestedScrollingParent$NullPointerException
be.brunoparmentier.apkshare.eval_dn      public android.support.v4.view.animation.PathInterpolatorCompat$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_do      public android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$IOException
be.brunoparmentier.apkshare.eval_dp      public android.support.v4.view.GestureDetectorCompat$NullPointerException
be.brunoparmentier.apkshare.eval_dq      public abstract interface android.support.v4.graphics.drawable.DrawableWrapper
be.brunoparmentier.apkshare.eval_dr      public android.support.v4.text.TextUtilsCompat
be.brunoparmentier.apkshare.eval_ds      public android.support.v4.widget.SlidingPaneLayout$SavedState$Exception
be.brunoparmentier.apkshare.eval_dt      public android.support.v4.os.AsyncTaskCompatHoneycomb$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_du      public android.support.v4.view.ViewCompat$Exception
be.brunoparmentier.apkshare.eval_dv      public android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21$NullPointerException
be.brunoparmentier.apkshare.eval_dw      public android.support.v4.content.FileProvider$Exception
be.brunoparmentier.apkshare.eval_dx      public android.support.v4.graphics.ColorUtils$IOException
be.brunoparmentier.apkshare.eval_dy      public android.support.v7.widget.Toolbar
be.brunoparmentier.apkshare.eval_dz      public android.support.v4.graphics.drawable.DrawableCompatKitKat$ParseException
be.brunoparmentier.apkshare.eval_e0      public android.support.v4.view.ScaleGestureDetectorCompat
be.brunoparmentier.apkshare.eval_e1      public android.support.v4.view.accessibility.AccessibilityEventCompatKitKat$IOException
be.brunoparmentier.apkshare.eval_e2      public android.support.v4.widget.ViewDragHelper
be.brunoparmentier.apkshare.eval_e3      public android.support.v4.view.accessibility.AccessibilityNodeInfoCompat
be.brunoparmentier.apkshare.eval_e4      public android.support.v7.internal.widget.TintManager$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_e5      public android.support.v4.app.NotificationCompatBase$NullPointerException
be.brunoparmentier.apkshare.eval_e6      public android.support.v7.widget.LinearLayoutCompat$Exception
be.brunoparmentier.apkshare.eval_e7      android.support.v4.content.ContextCompatJellybean
be.brunoparmentier.apkshare.eval_e8      android.support.v4.graphics.BitmapCompatKitKat
be.brunoparmentier.apkshare.eval_e9      public android.support.v4.util.DebugUtils
be.brunoparmentier.apkshare.eval_e_      public android.support.v4.view.PagerTabStrip$ParseException
be.brunoparmentier.apkshare.eval_ea      public android.support.v4.view.ViewPropertyAnimatorCompatICS$IOException
be.brunoparmentier.apkshare.eval_eb      android.support.v7.internal.app.NavItemSelectedListener
be.brunoparmentier.apkshare.eval_ec      android.support.v4.app.TaskStackBuilderJellybean
be.brunoparmentier.apkshare.eval_ed      public android.support.v4.text.ICUCompatIcs$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_ee      public final be.brunoparmentier.apkshare.BuildConfig
be.brunoparmentier.apkshare.eval_ef      public android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory
be.brunoparmentier.apkshare.eval_eg      public android.support.v4.view.InputDeviceCompat
be.brunoparmentier.apkshare.eval_eh      public android.support.v4.speech.tts.TextToSpeechICSMR1$IOException
be.brunoparmentier.apkshare.eval_ei      public android.support.v4.view.ViewParentCompat
be.brunoparmentier.apkshare.eval_ej      public android.support.v7.internal.view.menu.MenuDialogHelper$Exception
be.brunoparmentier.apkshare.eval_ek      android.support.v7.widget.CardViewEclairMr1
be.brunoparmentier.apkshare.eval_el      public android.support.v4.util.AtomicFile
be.brunoparmentier.apkshare.eval_em      android.support.v7.widget.OpReorderer
be.brunoparmentier.apkshare.eval_en      public android.support.v4.view.accessibility.AccessibilityRecordCompat
be.brunoparmentier.apkshare.eval_eo      android.support.v4.view.ViewCompatLollipop
be.brunoparmentier.apkshare.eval_ep      public android.support.v4.internal.view.SupportMenu$Exception
be.brunoparmentier.apkshare.eval_eq      public android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean$Exception
be.brunoparmentier.apkshare.eval_er      public android.support.v4.graphics.drawable.DrawableWrapperLollipop$NullPointerException
be.brunoparmentier.apkshare.eval_es      public android.support.v4.content.pm.ActivityInfoCompat$IOException
be.brunoparmentier.apkshare.eval_et      public android.support.v7.internal.view.StandaloneActionMode
be.brunoparmentier.apkshare.eval_eu      public android.support.v4.app.Fragment$SavedState$ParseException
be.brunoparmentier.apkshare.eval_ev      public android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1$Exception
be.brunoparmentier.apkshare.eval_ew      android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean
be.brunoparmentier.apkshare.eval_ex      public android.support.v4.app.ShareCompatICS$ParseException
be.brunoparmentier.apkshare.eval_ey      public android.support.v4.app.NotificationCompatGingerbread$ParseException
be.brunoparmentier.apkshare.eval_ez      public android.support.v7.widget.StaggeredGridLayoutManager$ParseException
be.brunoparmentier.apkshare.eval_f0      public android.support.v4.app.NotificationCompatKitKat$ParseException
be.brunoparmentier.apkshare.eval_f1      android.support.v4.graphics.drawable.DrawableWrapperKitKat
be.brunoparmentier.apkshare.eval_f2      public android.support.v7.widget.AppCompatButton
be.brunoparmentier.apkshare.eval_f3      android.support.v4.content.ContextCompatKitKat
be.brunoparmentier.apkshare.eval_f4      public android.support.v4.media.session.MediaSessionCompat$QueueItem$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_f5      public android.support.v7.widget.ActionMenuPresenter$NullPointerException
be.brunoparmentier.apkshare.eval_f6      public abstract android.support.v7.internal.widget.AdapterViewCompat
be.brunoparmentier.apkshare.eval_f7      public android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi22$NullPointerException
be.brunoparmentier.apkshare.eval_f8      public android.support.v4.net.TrafficStatsCompatIcs$Exception
be.brunoparmentier.apkshare.eval_f9      public android.support.v4.media.routing.MediaRouterJellybeanMr1$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_f_      public android.support.v7.internal.widget.ActionBarBackgroundDrawable$ParseException
be.brunoparmentier.apkshare.eval_fa      public android.support.v4.app.NotificationBuilderWithBuilderAccessor$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_fb      public android.support.v4.view.ViewPager
be.brunoparmentier.apkshare.eval_fc      public android.support.v4.view.MenuItemCompatIcs$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_fd      public android.support.v7.widget.RecyclerView$SavedState$Exception
be.brunoparmentier.apkshare.eval_fe      public android.support.v4.graphics.drawable.DrawableCompatLollipop$Exception
be.brunoparmentier.apkshare.eval_ff      public abstract interface android.support.v4.internal.view.SupportSubMenu
be.brunoparmentier.apkshare.eval_fg      public abstract android.support.v7.widget.OrientationHelper
be.brunoparmentier.apkshare.eval_fh      public android.support.v7.widget.AppCompatAutoCompleteTextView$NullPointerException
be.brunoparmentier.apkshare.eval_fi      public android.support.v4.view.ViewConfigurationCompatICS$NullPointerException
be.brunoparmentier.apkshare.eval_fj      public android.support.v7.internal.widget.ToolbarWidgetWrapper$NullPointerException
be.brunoparmentier.apkshare.eval_fk      android.support.v4.app.RemoteInputCompatBase
be.brunoparmentier.apkshare.eval_fl      public android.support.v4.view.MenuCompat$Exception
be.brunoparmentier.apkshare.eval_fm      public android.support.v7.widget.RecyclerView$IOException
be.brunoparmentier.apkshare.eval_fn      public android.support.v7.widget.CardViewJellybeanMr1$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_fo      public android.support.v4.graphics.drawable.DrawableCompatApi22$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_fp      public abstract android.support.v4.app.LoaderManager
be.brunoparmentier.apkshare.eval_fq      public android.support.v4.app.NotificationCompat$CarExtender$IOException
be.brunoparmentier.apkshare.eval_fr      android.support.v7.app.AppCompatDelegateImplV11
be.brunoparmentier.apkshare.eval_fs      public android.support.v7.internal.widget.ListViewCompat
be.brunoparmentier.apkshare.eval_ft      public android.support.v4.widget.ScrollerCompat$NullPointerException
be.brunoparmentier.apkshare.eval_fu      public android.support.v7.widget.ChildHelper$ParseException
be.brunoparmentier.apkshare.eval_fv      public android.support.v7.widget.DefaultItemAnimator
be.brunoparmentier.apkshare.eval_fw      public android.support.v4.app.FragmentPagerAdapter$IOException
be.brunoparmentier.apkshare.eval_fx      public abstract android.support.v4.provider.DocumentFile
be.brunoparmentier.apkshare.eval_fy      public android.support.v4.view.GravityCompat$ParseException
be.brunoparmentier.apkshare.eval_g0      public android.support.v4.app.FragmentManager$IOException
be.brunoparmentier.apkshare.eval_g1      public android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2$ParseException
be.brunoparmentier.apkshare.eval_g2      public android.support.v7.widget.CardViewEclairMr1$IOException
be.brunoparmentier.apkshare.eval_g3      android.support.v4.graphics.drawable.DrawableCompatLollipop
be.brunoparmentier.apkshare.eval_g4      public android.support.v7.app.AppCompatDelegateImplV14$ParseException
be.brunoparmentier.apkshare.eval_g5      public android.support.v4.database.DatabaseUtilsCompat$ParseException
be.brunoparmentier.apkshare.eval_g6      public android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs$IOException
be.brunoparmentier.apkshare.eval_g7      public android.support.v7.internal.view.menu.MenuPresenter$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_g8      public android.support.v4.content.IntentCompat$Exception
be.brunoparmentier.apkshare.eval_g9      public android.support.v4.util.MapCollections$IOException
be.brunoparmentier.apkshare.eval_g_      android.support.v7.widget.PositionMap
be.brunoparmentier.apkshare.eval_ga      public android.support.v4.view.GravityCompat
be.brunoparmentier.apkshare.eval_gb      public abstract interface android.support.v7.view.CollapsibleActionView
be.brunoparmentier.apkshare.eval_gc      public android.support.v7.view.ActionMode$Exception
be.brunoparmentier.apkshare.eval_gd      public android.support.v4.app.NavUtilsJB$IOException
be.brunoparmentier.apkshare.eval_ge      public abstract interface android.support.v4.internal.view.SupportMenu
be.brunoparmentier.apkshare.eval_gf      public android.support.v7.widget.OpReorderer$ParseException
be.brunoparmentier.apkshare.eval_gg      public android.support.v4.view.WindowInsetsCompatApi21$ParseException
be.brunoparmentier.apkshare.eval_gh      public android.support.v4.content.FileProvider
be.brunoparmentier.apkshare.eval_gi      public android.support.v4.view.ViewPropertyAnimatorCompatKK$ParseException
be.brunoparmentier.apkshare.eval_gj      android.support.v4.view.KeyEventCompatHoneycomb
be.brunoparmentier.apkshare.eval_gk      public android.support.v4.view.KeyEventCompat
be.brunoparmentier.apkshare.eval_gl      public android.support.v7.internal.widget.AbsSpinnerCompat$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_gm      final android.support.v4.app.FragmentManagerImpl
be.brunoparmentier.apkshare.eval_gn      public android.support.v4.media.session.PlaybackStateCompatApi22$ParseException
be.brunoparmentier.apkshare.eval_go      public android.support.v4.content.CursorLoader$Exception
be.brunoparmentier.apkshare.eval_gp      public android.support.v4.content.res.ResourcesCompatApi21$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_gq      public android.support.v4.media.VolumeProviderCompatApi21$NullPointerException
be.brunoparmentier.apkshare.eval_gr      public android.support.v4.os.EnvironmentCompat
be.brunoparmentier.apkshare.eval_gs      public android.support.v4.app.ActivityManagerCompat$Exception
be.brunoparmentier.apkshare.eval_gt      public android.support.v7.widget.AppCompatCheckedTextView
be.brunoparmentier.apkshare.eval_gu      public android.support.v4.content.Loader
be.brunoparmentier.apkshare.eval_gv      public abstract interface android.support.v7.internal.view.menu.MenuPresenter
be.brunoparmentier.apkshare.eval_gw      public android.support.v4.app.NotificationCompatBase
be.brunoparmentier.apkshare.eval_gx      public android.support.v7.internal.view.menu.MenuBuilder
be.brunoparmentier.apkshare.eval_gy      public android.support.v4.content.ContextCompatApi21$NullPointerException
be.brunoparmentier.apkshare.eval_gz      public final android.support.v7.internal.view.menu.MenuItemImpl
be.brunoparmentier.apkshare.eval_h0      public android.support.v4.print.PrintHelperKitkat$2$Exception
be.brunoparmentier.apkshare.eval_h1      public android.support.v4.text.TextDirectionHeuristicCompat$ParseException
be.brunoparmentier.apkshare.eval_h2      android.support.v4.view.ViewCompatEclairMr1
be.brunoparmentier.apkshare.eval_h3      android.support.v4.view.ScaleGestureDetectorCompatKitKat
be.brunoparmentier.apkshare.eval_h4      public android.support.v4.view.NestedScrollingChildHelper
be.brunoparmentier.apkshare.eval_h5      public android.support.v7.internal.widget.ActionBarContextView
be.brunoparmentier.apkshare.eval_h6      public android.support.v4.app.FragmentManagerImpl$ParseException
be.brunoparmentier.apkshare.eval_h7      public abstract android.support.v4.widget.ResourceCursorAdapter
be.brunoparmentier.apkshare.eval_h8      android.support.v4.widget.ListPopupWindowCompatKitKat
be.brunoparmentier.apkshare.eval_h9      android.support.v4.app.NotificationManagerCompatIceCreamSandwich
be.brunoparmentier.apkshare.eval_h_      android.support.v4.view.ViewCompatKitKat
be.brunoparmentier.apkshare.eval_ha      public android.support.v4.util.TimeUtils
be.brunoparmentier.apkshare.eval_hb      public abstract android.support.v4.graphics.drawable.RoundedBitmapDrawable
be.brunoparmentier.apkshare.eval_hc      public android.support.v7.internal.widget.ActionBarContextView$NullPointerException
be.brunoparmentier.apkshare.eval_hd      public android.support.v4.app.NotificationCompatBase$Action$ParseException
be.brunoparmentier.apkshare.eval_he      public android.support.v4.widget.AutoScrollHelper$ParseException
be.brunoparmentier.apkshare.eval_hf      public android.support.v4.util.LruCache$ParseException
be.brunoparmentier.apkshare.eval_hg      android.support.v7.internal.widget.ActionBarBackgroundDrawable
be.brunoparmentier.apkshare.eval_hh      public android.support.v7.internal.widget.FitWindowsLinearLayout$ParseException
be.brunoparmentier.apkshare.eval_hi      public android.support.v4.media.session.PlaybackStateCompat$ParseException
be.brunoparmentier.apkshare.eval_hj      public android.support.v4.view.ViewCompatLollipop$ParseException
be.brunoparmentier.apkshare.eval_hk      public android.support.v7.internal.VersionUtils
be.brunoparmentier.apkshare.eval_hl      public android.support.v7.widget.AppCompatSpinner
be.brunoparmentier.apkshare.eval_hm      public abstract interface android.support.v7.app.AppCompatCallback
be.brunoparmentier.apkshare.eval_hn      public abstract interface android.support.v4.view.OnApplyWindowInsetsListener
be.brunoparmentier.apkshare.eval_ho      public android.support.v7.internal.view.menu.MenuItemWrapperJB$NullPointerException
be.brunoparmentier.apkshare.eval_hp      public abstract interface android.support.v4.app.NotificationBuilderWithBuilderAccessor
be.brunoparmentier.apkshare.eval_hq      public android.support.v7.app.ActionBar$ParseException
be.brunoparmentier.apkshare.eval_hr      public android.support.v4.view.VelocityTrackerCompat$NullPointerException
be.brunoparmentier.apkshare.eval_hs      public android.support.v7.internal.view.menu.MenuWrapperFactory$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_ht      public android.support.v4.view.accessibility.AccessibilityManagerCompat
be.brunoparmentier.apkshare.eval_hu      public android.support.v4.graphics.BitmapCompatJellybeanMR2$ParseException
be.brunoparmentier.apkshare.eval_hv      public android.support.v4.content.res.ResourcesCompatIcsMr1$ParseException
be.brunoparmentier.apkshare.eval_hw      android.support.v4.graphics.BitmapCompatJellybeanMR2
be.brunoparmentier.apkshare.eval_hx      public android.support.v4.widget.EdgeEffectCompatLollipop$NullPointerException
be.brunoparmentier.apkshare.eval_hy      android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi22
be.brunoparmentier.apkshare.eval_hz      public android.support.v4.app.LoaderManagerImpl$NullPointerException
be.brunoparmentier.apkshare.eval_i0      public android.support.v4.content.res.ResourcesCompat
be.brunoparmentier.apkshare.eval_i1      public android.support.v4.speech.tts.TextToSpeechICS$NullPointerException
be.brunoparmentier.apkshare.eval_i2      public android.support.v4.util.ContainerHelpers$NullPointerException
be.brunoparmentier.apkshare.eval_i3      public android.support.v4.graphics.drawable.DrawableWrapper$ParseException
be.brunoparmentier.apkshare.eval_i4      public android.support.v7.widget.ShareActionProvider$NullPointerException
be.brunoparmentier.apkshare.eval_i5      public android.support.v4.app.NotificationCompat$Action$IOException
be.brunoparmentier.apkshare.eval_i6      public android.support.v7.internal.view.menu.MenuPopupHelper
be.brunoparmentier.apkshare.eval_i7      public android.support.v4.view.ViewCompatJB$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_i8      public android.support.v4.net.ConnectivityManagerCompat
be.brunoparmentier.apkshare.eval_i9      public android.support.v4.widget.EdgeEffectCompatIcs$NullPointerException
be.brunoparmentier.apkshare.eval_i_      public android.support.v7.app.AppCompatDelegateImplBase$IOException
be.brunoparmentier.apkshare.eval_ia      public android.support.v7.internal.view.menu.MenuDialogHelper
be.brunoparmentier.apkshare.eval_ib      public be.brunoparmentier.apkshare.AppAdapter$2
be.brunoparmentier.apkshare.eval_ic      public android.support.v4.view.ViewGroupCompatLollipop$ParseException
be.brunoparmentier.apkshare.eval_id      android.support.v4.graphics.drawable.DrawableWrapperHoneycomb
be.brunoparmentier.apkshare.eval_ie      public android.support.v4.view.InputDeviceCompat$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_if      android.support.v4.app.ActivityOptionsCompat21
be.brunoparmentier.apkshare.eval_ig      android.support.v4.provider.RawDocumentFile
be.brunoparmentier.apkshare.eval_ih      public android.support.v4.media.session.MediaSessionCompat$Callback$NullPointerException
be.brunoparmentier.apkshare.eval_ii      public android.support.v7.internal.view.SupportMenuInflater$ParseException
be.brunoparmentier.apkshare.eval_ij      public android.support.v4.content.res.ResourcesCompat$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_ik      public android.support.v4.media.TransportStateListener
be.brunoparmentier.apkshare.eval_il      public android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$IOException
be.brunoparmentier.apkshare.eval_im      public android.support.v4.view.ViewPropertyAnimatorUpdateListener$IOException
be.brunoparmentier.apkshare.eval_in      public android.support.v4.view.ViewPager$IOException
be.brunoparmentier.apkshare.eval_io      public android.support.v4.app.FragmentTabHost$SavedState$Exception
be.brunoparmentier.apkshare.eval_ip      android.support.v4.widget.SearchViewCompatIcs
be.brunoparmentier.apkshare.eval_iq      android.support.v4.view.MotionEventCompatEclair
be.brunoparmentier.apkshare.eval_ir      public android.support.v7.internal.widget.ViewUtils$Exception
be.brunoparmentier.apkshare.eval_is      public android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$ParseException
be.brunoparmentier.apkshare.eval_it      android.support.v4.media.MediaMetadataCompatApi21
be.brunoparmentier.apkshare.eval_iu      public android.support.v7.widget.RecyclerViewAccessibilityDelegate$Exception
be.brunoparmentier.apkshare.eval_iv      public android.support.v7.app.DrawerArrowDrawable$ParseException
be.brunoparmentier.apkshare.eval_iw      android.support.v4.net.ConnectivityManagerCompatGingerbread
be.brunoparmentier.apkshare.eval_ix      final android.support.v4.widget.SwipeProgressBar
be.brunoparmentier.apkshare.eval_iy      android.support.v7.widget.RoundRectDrawableWithShadow
be.brunoparmentier.apkshare.eval_iz      public android.support.v4.media.session.MediaSessionCompatApi8
be.brunoparmentier.apkshare.eval_j0      public android.support.v4.view.ViewParentCompatLollipop$IOException
be.brunoparmentier.apkshare.eval_j1      android.support.v4.app.FragmentTransitionCompat21
be.brunoparmentier.apkshare.eval_j2      final android.support.v4.app.BackStackRecord
be.brunoparmentier.apkshare.eval_j3      public android.support.v7.internal.view.menu.ActionMenuItem$ParseException
be.brunoparmentier.apkshare.eval_j4      public android.support.v4.os.TraceCompat$IOException
be.brunoparmentier.apkshare.eval_j5      public final android.support.v7.appcompat.BuildConfig
be.brunoparmentier.apkshare.eval_j6      public android.support.v7.internal.widget.TintTypedArray$Exception
be.brunoparmentier.apkshare.eval_j7      public abstract android.support.v4.app.SharedElementCallback
be.brunoparmentier.apkshare.eval_j8      public android.support.v7.internal.app.NotificationCompatImplBase$IOException
be.brunoparmentier.apkshare.eval_j9      public android.support.v4.view.MenuCompat
be.brunoparmentier.apkshare.eval_j_      public android.support.v4.media.session.IMediaSession$Stub$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_ja      public android.support.v4.os.EnvironmentCompatKitKat$NullPointerException
be.brunoparmentier.apkshare.eval_jb      public android.support.v4.app.Fragment$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_jc      public android.support.v7.internal.widget.ActivityChooserModel
be.brunoparmentier.apkshare.eval_jd      public android.support.v4.app.NotificationCompat$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_je      public android.support.v7.internal.widget.ViewStubCompat$Exception
be.brunoparmentier.apkshare.eval_jf      public final android.support.v4.media.MediaMetadataCompat
be.brunoparmentier.apkshare.eval_jg      public android.support.v4.app.ActivityCompat$ParseException
be.brunoparmentier.apkshare.eval_jh      public android.support.v4.widget.CircleImageView$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_ji      public android.support.v7.widget.LinearLayoutManager$NullPointerException
be.brunoparmentier.apkshare.eval_jj      public android.support.v7.widget.AppCompatEditText
be.brunoparmentier.apkshare.eval_jk      public android.support.v4.print.PrintHelper$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_jl      android.support.v4.view.ViewConfigurationCompatICS
be.brunoparmentier.apkshare.eval_jm      public android.support.v4.graphics.drawable.DrawableWrapperHoneycomb$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_jn      public android.support.v4.app.ShareCompatJB$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_jo      public android.support.v4.text.ICUCompat$IOException
be.brunoparmentier.apkshare.eval_jp      public android.support.v4.widget.PopupWindowCompatKitKat$Exception
be.brunoparmentier.apkshare.eval_jq      public android.support.v4.content.ContextCompat$NullPointerException
be.brunoparmentier.apkshare.eval_jr      public abstract interface android.support.v4.view.ViewPropertyAnimatorUpdateListener
be.brunoparmentier.apkshare.eval_js      android.support.v4.widget.TextViewCompatJbMr2
be.brunoparmentier.apkshare.eval_jt      public android.support.v7.internal.text.AllCapsTransformationMethod$NullPointerException
be.brunoparmentier.apkshare.eval_ju      public android.support.v4.view.MarginLayoutParamsCompat
be.brunoparmentier.apkshare.eval_jv      final android.support.v4.app.SuperNotCalledException
be.brunoparmentier.apkshare.eval_jw      public android.support.v7.internal.widget.ActionBarContainer
be.brunoparmentier.apkshare.eval_jx      final android.support.v4.app.BackStackState
be.brunoparmentier.apkshare.eval_jy      android.support.v7.internal.widget.ActionBarBackgroundDrawableV21
be.brunoparmentier.apkshare.eval_jz      public be.brunoparmentier.apkshare.BuildConfig$Exception
be.brunoparmentier.apkshare.eval_k0      android.support.v4.view.ViewParentCompatKitKat
be.brunoparmentier.apkshare.eval_k1      public android.support.v7.internal.app.AppCompatViewInflater
be.brunoparmentier.apkshare.eval_k2      public android.support.v4.util.Pools$Exception
be.brunoparmentier.apkshare.eval_k3      public android.support.v4.app.NotificationBuilderWithActions$IOException
be.brunoparmentier.apkshare.eval_k4      public android.support.v4.app.SharedElementCallback$Exception
be.brunoparmentier.apkshare.eval_k5      public android.support.v7.internal.widget.ViewUtils
be.brunoparmentier.apkshare.eval_k6      android.support.v4.widget.MaterialProgressDrawable
be.brunoparmentier.apkshare.eval_k7      public android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton$Exception
be.brunoparmentier.apkshare.eval_k8      public android.support.v4.view.ViewPropertyAnimatorListener$ParseException
be.brunoparmentier.apkshare.eval_k9      android.support.v4.speech.tts.TextToSpeechICSMR1
be.brunoparmentier.apkshare.eval_k_      public android.support.v4.widget.TextViewCompatJbMr1$NullPointerException
be.brunoparmentier.apkshare.eval_ka      android.support.v4.content.res.ResourcesCompatIcsMr1
be.brunoparmentier.apkshare.eval_kb      public abstract android.support.v4.media.VolumeProviderCompat
be.brunoparmentier.apkshare.eval_kc      android.support.v4.view.ViewGroupCompatHC
be.brunoparmentier.apkshare.eval_kd      abstract android.support.v4.util.MapCollections
be.brunoparmentier.apkshare.eval_ke      public android.support.v7.internal.text.AllCapsTransformationMethod
be.brunoparmentier.apkshare.eval_kf      public android.support.v7.internal.view.menu.ActionMenuItemView$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_kg      public android.support.v4.app.FragmentState$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_kh      public android.support.v4.media.session.MediaSessionCompat
be.brunoparmentier.apkshare.eval_ki      public android.support.v7.internal.widget.ActivityChooserView
be.brunoparmentier.apkshare.eval_kj      public android.support.v7.internal.widget.ActionBarBackgroundDrawableV21$NullPointerException
be.brunoparmentier.apkshare.eval_kk      android.support.v4.view.VelocityTrackerCompatHoneycomb
be.brunoparmentier.apkshare.eval_kl      public android.support.v7.widget.AdapterHelper$Exception
be.brunoparmentier.apkshare.eval_km      public android.support.v4.app.INotificationSideChannel$ParseException
be.brunoparmentier.apkshare.eval_kn      android.support.v4.app.NoSaveStateFrameLayout
be.brunoparmentier.apkshare.eval_ko      public android.support.v4.text.TextUtilsCompat$Exception
be.brunoparmentier.apkshare.eval_kp      android.support.v4.view.MotionEventCompatGingerbread
be.brunoparmentier.apkshare.eval_kq      public final android.support.v4.print.PrintHelper
be.brunoparmentier.apkshare.eval_kr      android.support.v4.app.NotificationCompatKitKat
be.brunoparmentier.apkshare.eval_ks      public android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$Exception
be.brunoparmentier.apkshare.eval_kt      public android.support.v4.view.ViewCompatBase$IOException
be.brunoparmentier.apkshare.eval_ku      public android.support.v4.media.session.MediaControllerCompat$Exception
be.brunoparmentier.apkshare.eval_kv      public android.support.v7.internal.widget.ThemeUtils$NullPointerException
be.brunoparmentier.apkshare.eval_kw      public android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$NullPointerException
be.brunoparmentier.apkshare.eval_kx      public android.support.v4.app.ActionBarDrawerToggleJellybeanMR2$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_ky      abstract android.support.v7.app.DrawerArrowDrawable
be.brunoparmentier.apkshare.eval_kz      public android.support.v4.view.NestedScrollingParentHelper
be.brunoparmentier.apkshare.eval_l0      public abstract android.support.v4.widget.AutoScrollHelper
be.brunoparmentier.apkshare.eval_l1      android.support.v4.view.ViewCompatHC
be.brunoparmentier.apkshare.eval_l2      android.support.v4.view.LayoutInflaterCompatBase
be.brunoparmentier.apkshare.eval_l3      public android.support.v4.content.ContextCompat
be.brunoparmentier.apkshare.eval_l4      abstract interface android.support.v4.widget.DrawerLayoutImpl
be.brunoparmentier.apkshare.eval_l5      public android.support.v4.view.AccessibilityDelegateCompatIcs$Exception
be.brunoparmentier.apkshare.eval_l6      public android.support.v4.app.TaskStackBuilder$Exception
be.brunoparmentier.apkshare.eval_l7      public android.support.v7.internal.app.ToolbarActionBar
be.brunoparmentier.apkshare.eval_l8      public final android.support.v4.util.Pools
be.brunoparmentier.apkshare.eval_l9      public android.support.v7.app.AlertDialog
be.brunoparmentier.apkshare.eval_l_      public android.support.v4.media.session.PlaybackStateCompatApi21$ParseException
be.brunoparmentier.apkshare.eval_la      public android.support.v4.view.accessibility.AccessibilityEventCompatIcs$NullPointerException
be.brunoparmentier.apkshare.eval_lb      public android.support.v4.view.animation.PathInterpolatorCompatBase$NullPointerException
be.brunoparmentier.apkshare.eval_lc      public android.support.v7.graphics.drawable.DrawableWrapper$ParseException
be.brunoparmentier.apkshare.eval_ld      public android.support.v4.view.PagerAdapter$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_le      public android.support.v4.widget.PopupMenuCompat
be.brunoparmentier.apkshare.eval_lf      public abstract android.support.v4.media.TransportPerformer
be.brunoparmentier.apkshare.eval_lg      public abstract interface android.support.v7.widget.helper.ItemTouchUIUtil
be.brunoparmentier.apkshare.eval_lh      final android.support.v4.app.FragmentState
be.brunoparmentier.apkshare.eval_li      android.support.v4.app.ActivityCompat21
be.brunoparmentier.apkshare.eval_lj      public android.support.v4.graphics.drawable.DrawableCompatHoneycomb$NullPointerException
be.brunoparmentier.apkshare.eval_lk      public android.support.v4.app.ActivityManagerCompatKitKat$NullPointerException
be.brunoparmentier.apkshare.eval_ll      android.support.v4.app.ShareCompatICS
be.brunoparmentier.apkshare.eval_lm      android.support.v7.app.AppCompatDelegateImplV7
be.brunoparmentier.apkshare.eval_ln      public android.support.v4.view.LayoutInflaterCompatHC$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_lo      public android.support.v7.widget.AppCompatRatingBar$Exception
be.brunoparmentier.apkshare.eval_lp      public android.support.v4.graphics.drawable.DrawableWrapperKitKat$IOException
be.brunoparmentier.apkshare.eval_lq      public android.support.v4.util.CircularIntArray$NullPointerException
be.brunoparmentier.apkshare.eval_lr      public android.support.v4.view.WindowInsetsCompat
be.brunoparmentier.apkshare.eval_ls      android.support.v4.media.session.MediaSessionCompatApi22
be.brunoparmentier.apkshare.eval_lt      public android.support.v4.os.ParcelableCompat$IOException
be.brunoparmentier.apkshare.eval_lu      public android.support.v7.widget.ActionMenuPresenter
be.brunoparmentier.apkshare.eval_lv      public android.support.v4.widget.TextViewCompatJbMr2$NullPointerException
be.brunoparmentier.apkshare.eval_lw      public android.support.v7.util.SortedList$Exception
be.brunoparmentier.apkshare.eval_lx      public android.support.v4.view.animation.PathInterpolatorCompatApi21$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_ly      android.support.v4.view.MotionEventCompatHoneycombMr1
be.brunoparmentier.apkshare.eval_lz      public android.support.v7.widget.SwitchCompat$IOException
be.brunoparmentier.apkshare.eval_m0      public android.support.v7.internal.widget.ActionBarOverlayLayout$ParseException
be.brunoparmentier.apkshare.eval_m1      public android.support.v4.app.RemoteInputCompatBase$Exception
be.brunoparmentier.apkshare.eval_m2      public android.support.v7.app.AppCompatCallback$NullPointerException
be.brunoparmentier.apkshare.eval_m3      public android.support.v4.media.VolumeProviderCompat$NullPointerException
be.brunoparmentier.apkshare.eval_m4      public android.support.v7.internal.widget.ContentFrameLayout
be.brunoparmentier.apkshare.eval_m5      public android.support.v7.widget.Toolbar$SavedState$Exception
be.brunoparmentier.apkshare.eval_m6      public android.support.v4.app.NotificationCompatApi20$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_m7      public android.support.v7.internal.widget.TintImageView$IOException
be.brunoparmentier.apkshare.eval_m8      public abstract android.support.v4.hardware.display.DisplayManagerCompat
be.brunoparmentier.apkshare.eval_m9      public android.support.v4.widget.PopupMenuCompat$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_m_      public android.support.v4.internal.view.SupportSubMenu$ParseException
be.brunoparmentier.apkshare.eval_ma      public android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$IOException
be.brunoparmentier.apkshare.eval_mb      public android.support.v7.internal.widget.FitWindowsFrameLayout$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_mc      public android.support.v7.widget.StaggeredGridLayoutManager$SavedState$IOException
be.brunoparmentier.apkshare.eval_md      public android.support.v4.widget.PopupMenuCompatKitKat$ParseException
be.brunoparmentier.apkshare.eval_me      public android.support.v4.content.CursorLoader
be.brunoparmentier.apkshare.eval_mf      public android.support.v4.view.MotionEventCompat$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_mg      public android.support.v4.provider.DocumentsContractApi21$NullPointerException
be.brunoparmentier.apkshare.eval_mh      android.support.v4.os.EnvironmentCompatKitKat
be.brunoparmentier.apkshare.eval_mi      public android.support.v4.graphics.BitmapCompatKitKat$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_mj      public android.support.v4.widget.DrawerLayoutImpl$ParseException
be.brunoparmentier.apkshare.eval_mk      public android.support.v4.widget.SearchViewCompatIcs$NullPointerException
be.brunoparmentier.apkshare.eval_ml      android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1
be.brunoparmentier.apkshare.eval_mm      public android.support.v4.app.RemoteInputCompatBase$RemoteInput$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_mn      public android.support.v7.widget.SuggestionsAdapter$Exception
be.brunoparmentier.apkshare.eval_mo      public android.support.v4.view.MotionEventCompat
be.brunoparmentier.apkshare.eval_mp      public android.support.v4.view.GestureDetectorCompat
be.brunoparmentier.apkshare.eval_mq      android.support.v4.app.NotificationCompatGingerbread
be.brunoparmentier.apkshare.eval_mr      android.support.v4.app.ActionBarDrawerToggleJellybeanMR2
be.brunoparmentier.apkshare.eval_ms      android.support.v4.view.animation.PathInterpolatorDonut
be.brunoparmentier.apkshare.eval_mt      public android.support.v7.widget.SwitchCompat
be.brunoparmentier.apkshare.eval_mu      public android.support.v7.internal.view.SupportMenuInflater
be.brunoparmentier.apkshare.eval_mv      public android.support.v4.view.ViewPropertyAnimatorListenerAdapter$Exception
be.brunoparmentier.apkshare.eval_mw      android.support.v4.app.ActivityManagerCompatKitKat
be.brunoparmentier.apkshare.eval_mx      public abstract android.support.v4.app.FragmentPagerAdapter
be.brunoparmentier.apkshare.eval_my      public android.support.v7.graphics.drawable.DrawableWrapper
be.brunoparmentier.apkshare.eval_mz      public android.support.v7.app.ActionBarDrawerToggle$Exception
be.brunoparmentier.apkshare.eval_n0      public android.support.v4.view.accessibility.AccessibilityEventCompat$ParseException
be.brunoparmentier.apkshare.eval_n1      public android.support.v7.app.AppCompatDialog$IOException
be.brunoparmentier.apkshare.eval_n2      android.support.v7.app.AlertController
be.brunoparmentier.apkshare.eval_n3      public android.support.v4.view.MenuItemCompatHoneycomb$ParseException
be.brunoparmentier.apkshare.eval_n4      public android.support.v7.widget.StaggeredGridLayoutManager
be.brunoparmentier.apkshare.eval_n5      public android.support.v4.widget.ListPopupWindowCompat
be.brunoparmentier.apkshare.eval_n6      public android.support.v7.internal.widget.ActionBarContainer$IOException
be.brunoparmentier.apkshare.eval_n7      public android.support.v4.view.PagerTitleStrip$Exception
be.brunoparmentier.apkshare.eval_n8      public abstract android.support.v4.content.AsyncTaskLoader
be.brunoparmentier.apkshare.eval_n9      public android.support.v4.view.WindowCompat$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_n_      public android.support.v4.app.NoSaveStateFrameLayout$NullPointerException
be.brunoparmentier.apkshare.eval_na      android.support.v4.view.ViewCompatJellybeanMr1
be.brunoparmentier.apkshare.eval_nb      public android.support.v7.internal.widget.ActionBarOverlayLayout
be.brunoparmentier.apkshare.eval_nc      public android.support.v7.internal.view.ContextThemeWrapper
be.brunoparmentier.apkshare.eval_nd      android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean
be.brunoparmentier.apkshare.eval_ne      public android.support.v4.media.session.MediaSessionCompatApi22$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_nf      public android.support.v7.widget.AppCompatRatingBar
be.brunoparmentier.apkshare.eval_ng      public android.support.v4.view.ViewGroupCompatJellybeanMR2$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_nh      android.support.v4.view.ViewGroupCompatJellybeanMR2
be.brunoparmentier.apkshare.eval_ni      public android.support.v7.internal.widget.ActivityChooserView$Exception
be.brunoparmentier.apkshare.eval_nj      android.support.v7.widget.ChildHelper
be.brunoparmentier.apkshare.eval_nk      public android.support.v7.app.ActionBarDrawerToggleHoneycomb$IOException
be.brunoparmentier.apkshare.eval_nl      public abstract interface android.support.v4.media.session.IMediaSession
be.brunoparmentier.apkshare.eval_nm      android.support.v4.text.ICUCompatIcs
be.brunoparmentier.apkshare.eval_nn      public android.support.v4.app.FragmentActivity
be.brunoparmentier.apkshare.eval_no      public android.support.v4.widget.Space
be.brunoparmentier.apkshare.eval_np      public android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState$SavedState$NullPointerException
be.brunoparmentier.apkshare.eval_nq      public android.support.v4.media.session.MediaSessionCompatApi8$NullPointerException
be.brunoparmentier.apkshare.eval_nr      public android.support.v4.content.ContextCompatFroyo$NullPointerException
be.brunoparmentier.apkshare.eval_ns      android.support.v7.internal.view.menu.BaseWrapper
be.brunoparmentier.apkshare.eval_nt      android.support.v4.widget.CircleImageView
be.brunoparmentier.apkshare.eval_nu      android.support.v7.widget.ScrollbarHelper
be.brunoparmentier.apkshare.eval_nv      android.support.v4.content.ContextCompatHoneycomb
be.brunoparmentier.apkshare.eval_nw      public android.support.v4.os.TraceJellybeanMR2$Exception
be.brunoparmentier.apkshare.eval_nx      public android.support.v7.internal.view.menu.ListMenuItemView$Exception
be.brunoparmentier.apkshare.eval_ny      public final android.support.v4.app.NotificationCompatExtras
be.brunoparmentier.apkshare.eval_nz      android.support.v7.widget.AdapterHelper
be.brunoparmentier.apkshare.eval_o0      public android.support.v7.app.AlertDialog$Exception
be.brunoparmentier.apkshare.eval_o1      android.support.v4.content.res.ResourcesCompatApi21
be.brunoparmentier.apkshare.eval_o2      public android.support.v4.app.ActivityCompatHoneycomb$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_o3      public android.support.v4.media.TransportPerformer$IOException
be.brunoparmentier.apkshare.eval_o4      public android.support.v4.widget.EdgeEffectCompat$ParseException
be.brunoparmentier.apkshare.eval_o5      public android.support.v7.widget.AppCompatEditText$IOException
be.brunoparmentier.apkshare.eval_o6      public abstract interface android.support.v4.media.session.IMediaControllerCallback
be.brunoparmentier.apkshare.eval_o7      android.support.v4.provider.SingleDocumentFile
be.brunoparmentier.apkshare.eval_o8      public android.support.v4.widget.NestedScrollView
be.brunoparmentier.apkshare.eval_o9      public android.support.v4.app.FragmentStatePagerAdapter$IOException
be.brunoparmentier.apkshare.eval_o_      public android.support.v4.app.FragmentContainer$NullPointerException
be.brunoparmentier.apkshare.eval_oa      android.support.v4.content.ContextCompatApi21
be.brunoparmentier.apkshare.eval_ob      public android.support.v4.view.ScaleGestureDetectorCompat$NullPointerException
be.brunoparmentier.apkshare.eval_oc      public android.support.v7.internal.view.menu.MenuView$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_od      public android.support.v4.widget.ViewDragHelper$NullPointerException
be.brunoparmentier.apkshare.eval_oe      public android.support.v4.os.TraceCompat
be.brunoparmentier.apkshare.eval_of      public android.support.v7.internal.widget.TintContextWrapper$IOException
be.brunoparmentier.apkshare.eval_og      public abstract android.support.v4.media.TransportController
be.brunoparmentier.apkshare.eval_oh      public android.support.v4.widget.ContentLoadingProgressBar
be.brunoparmentier.apkshare.eval_oi      public android.support.v4.view.ViewGroupCompatHC$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_oj      public android.support.v4.graphics.ColorUtils
be.brunoparmentier.apkshare.eval_ok      android.support.v4.widget.DrawerLayoutCompatApi21
be.brunoparmentier.apkshare.eval_ol      public android.support.v7.internal.widget.ResourcesWrapper$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_om      public android.support.v4.app.ActivityOptionsCompatJB$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_on      public android.support.v4.print.PrintHelperKitkat$2$1$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_oo      abstract android.support.v7.internal.widget.AbsActionBarView
be.brunoparmentier.apkshare.eval_op      public android.support.v4.app.NotificationCompat
be.brunoparmentier.apkshare.eval_oq      public android.support.v4.media.session.ParcelableVolumeInfo
be.brunoparmentier.apkshare.eval_or      public android.support.v4.widget.ListViewAutoScrollHelper$NullPointerException
be.brunoparmentier.apkshare.eval_os      public android.support.v7.internal.app.NavItemSelectedListener$NullPointerException
be.brunoparmentier.apkshare.eval_ot      public android.support.v4.media.routing.MediaRouterJellybeanMr2$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_ou      public android.support.v7.widget.AppCompatSpinner$ParseException
be.brunoparmentier.apkshare.eval_ov      public abstract interface android.support.v4.view.LayoutInflaterFactory
be.brunoparmentier.apkshare.eval_ow      public android.support.v4.util.LruCache
be.brunoparmentier.apkshare.eval_ox      public android.support.v7.widget.SearchView
be.brunoparmentier.apkshare.eval_oy      android.support.v4.widget.PopupWindowCompatKitKat
be.brunoparmentier.apkshare.eval_oz      public android.support.v7.widget.CardViewImpl$IOException
be.brunoparmentier.apkshare.eval_p0      public android.support.v7.internal.view.menu.MenuBuilder$Exception
be.brunoparmentier.apkshare.eval_p1      public android.support.v4.widget.ListViewAutoScrollHelper
be.brunoparmentier.apkshare.eval_p2      public android.support.v4.graphics.drawable.DrawableCompat
be.brunoparmentier.apkshare.eval_p3      public android.support.v4.provider.DocumentsContractApi19$NullPointerException
be.brunoparmentier.apkshare.eval_p4      android.support.v4.view.ViewCompatJB
be.brunoparmentier.apkshare.eval_p5      android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21
be.brunoparmentier.apkshare.eval_p6      android.support.v4.app.NotificationCompatApi21
be.brunoparmentier.apkshare.eval_p7      android.support.v4.media.session.MediaControllerCompatApi21
be.brunoparmentier.apkshare.eval_p8      public android.support.v4.widget.SearchViewCompat
be.brunoparmentier.apkshare.eval_p9      public android.support.v7.app.AppCompatDelegateImplV7$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_p_      public android.support.v4.view.ViewPager$SavedState$Exception
be.brunoparmentier.apkshare.eval_pa      public android.support.v4.view.ActionProvider$IOException
be.brunoparmentier.apkshare.eval_pb      public android.support.v7.widget.RoundRectDrawable$IOException
be.brunoparmentier.apkshare.eval_pc      android.support.v4.app.ShareCompatJB
be.brunoparmentier.apkshare.eval_pd      public be.brunoparmentier.apkshare.R$Exception
be.brunoparmentier.apkshare.eval_pe      public android.support.v7.internal.widget.TintTypedArray
be.brunoparmentier.apkshare.eval_pf      public final be.brunoparmentier.apkshare.App
be.brunoparmentier.apkshare.eval_pg      public android.support.v4.text.TextDirectionHeuristicsCompat
be.brunoparmentier.apkshare.eval_ph      android.support.v4.graphics.drawable.DrawableCompatKitKat
be.brunoparmentier.apkshare.eval_pi      android.support.v7.widget.CardViewJellybeanMr1
be.brunoparmentier.apkshare.eval_pj      android.support.v4.net.ConnectivityManagerCompatHoneycombMR2
be.brunoparmentier.apkshare.eval_pk      public android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_pl      public android.support.v4.widget.SearchViewCompatHoneycomb$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_pm      public android.support.v4.app.TaskStackBuilder
be.brunoparmentier.apkshare.eval_pn      public android.support.v4.widget.TextViewCompat$NullPointerException
be.brunoparmentier.apkshare.eval_po      public android.support.v7.widget.AppCompatMultiAutoCompleteTextView$NullPointerException
be.brunoparmentier.apkshare.eval_pp      public android.support.v7.internal.widget.DialogTitle
be.brunoparmentier.apkshare.eval_pq      public android.support.v4.util.SimpleArrayMap
be.brunoparmentier.apkshare.eval_pr      public android.support.v7.internal.app.NotificationCompatImplBase
be.brunoparmentier.apkshare.eval_ps      public android.support.v4.media.session.ParcelableVolumeInfo$IOException
be.brunoparmentier.apkshare.eval_pt      public final android.support.v4.text.BidiFormatter
be.brunoparmentier.apkshare.eval_pu      android.support.v4.widget.PopupMenuCompatKitKat
be.brunoparmentier.apkshare.eval_pv      public android.support.v7.internal.view.menu.SubMenuWrapperICS$NullPointerException
be.brunoparmentier.apkshare.eval_pw      public android.support.v7.internal.widget.RtlSpacingHelper$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_px      public android.support.v4.view.ViewPropertyAnimatorCompatJellybeanMr2$ParseException
be.brunoparmentier.apkshare.eval_py      public android.support.v7.widget.AppCompatCheckBox$IOException
be.brunoparmentier.apkshare.eval_pz      public android.support.v4.widget.NestedScrollView$ParseException
be.brunoparmentier.apkshare.eval_q0      public android.support.v4.media.MediaDescriptionCompatApi21$ParseException
be.brunoparmentier.apkshare.eval_q1      public android.support.v4.content.pm.ActivityInfoCompat
be.brunoparmentier.apkshare.eval_q2      public android.support.v4.media.session.PlaybackStateCompat$CustomAction$NullPointerException
be.brunoparmentier.apkshare.eval_q3      public abstract android.support.v7.widget.LinearSmoothScroller
be.brunoparmentier.apkshare.eval_q4      public android.support.v4.content.IntentCompatHoneycomb$IOException
be.brunoparmentier.apkshare.eval_q5      public android.support.v4.view.ViewPropertyAnimatorCompat
be.brunoparmentier.apkshare.eval_q6      public android.support.v4.widget.Space$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_q7      public final android.support.v4.media.session.MediaControllerCompat
be.brunoparmentier.apkshare.eval_q8      public android.support.v4.view.accessibility.AccessibilityRecordCompatIcs$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_q9      public android.support.v7.internal.widget.RtlSpacingHelper
be.brunoparmentier.apkshare.eval_q_      android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub
be.brunoparmentier.apkshare.eval_qa      public android.support.v4.view.ViewConfigurationCompat
be.brunoparmentier.apkshare.eval_qb      public android.support.v4.hardware.display.DisplayManagerJellybeanMr1$ParseException
be.brunoparmentier.apkshare.eval_qc      public final android.support.v7.cardview.BuildConfig
be.brunoparmentier.apkshare.eval_qd      public android.support.v7.internal.view.menu.MenuItemWrapperICS
be.brunoparmentier.apkshare.eval_qe      public abstract android.support.v7.widget.util.SortedListAdapterCallback
be.brunoparmentier.apkshare.eval_qf      public android.support.v4.view.LayoutInflaterCompatBase$IOException
be.brunoparmentier.apkshare.eval_qg      android.support.v4.util.ContainerHelpers
be.brunoparmentier.apkshare.eval_qh      android.support.v4.view.animation.PathInterpolatorCompatApi21
be.brunoparmentier.apkshare.eval_qi      public abstract android.support.v4.widget.CursorAdapter
be.brunoparmentier.apkshare.eval_qj      public android.support.v4.util.SparseArrayCompat
be.brunoparmentier.apkshare.eval_qk      android.support.v4.widget.SearchViewCompatHoneycomb
be.brunoparmentier.apkshare.eval_ql      public android.support.v4.media.session.MediaSessionCompatApi18$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_qm      public android.support.v7.widget.AppCompatButton$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_qn      android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean
be.brunoparmentier.apkshare.eval_qo      public abstract interface android.support.v4.view.NestedScrollingParent
be.brunoparmentier.apkshare.eval_qp      android.support.v4.widget.CursorFilter
be.brunoparmentier.apkshare.eval_qq      android.support.v4.graphics.drawable.DrawableCompatHoneycomb
be.brunoparmentier.apkshare.eval_qr      android.support.v4.app.BundleUtil
be.brunoparmentier.apkshare.eval_qs      public android.support.v7.internal.widget.DrawableUtils
be.brunoparmentier.apkshare.eval_qt      abstract interface android.support.v4.media.TransportMediatorCallback
be.brunoparmentier.apkshare.eval_qu      android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2
be.brunoparmentier.apkshare.eval_qv      public android.support.v4.provider.SingleDocumentFile$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_qw      android.support.v4.view.ViewConfigurationCompatFroyo
be.brunoparmentier.apkshare.eval_qx      public android.support.v4.text.TextDirectionHeuristicsCompat$IOException
be.brunoparmentier.apkshare.eval_qy      public android.support.v4.view.accessibility.AccessibilityNodeProviderCompat
be.brunoparmentier.apkshare.eval_qz      public android.support.v4.app.RemoteInputCompatApi20$NullPointerException
be.brunoparmentier.apkshare.eval_r0      public android.support.v7.widget.AppCompatRadioButton$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_r1      public android.support.v4.app.NotificationCompatSideChannelService$Exception
be.brunoparmentier.apkshare.eval_r2      public android.support.v4.util.CircularArray$ParseException
be.brunoparmentier.apkshare.eval_r3      public android.support.v4.view.MotionEventCompatEclair$ParseException
be.brunoparmentier.apkshare.eval_r4      public android.support.v4.view.KeyEventCompatEclair$Exception
be.brunoparmentier.apkshare.eval_r5      public android.support.v7.internal.widget.SpinnerCompat$DropdownPopup$ParseException
be.brunoparmentier.apkshare.eval_r6      public android.support.v4.view.animation.LookupTableInterpolator$ParseException
be.brunoparmentier.apkshare.eval_r7      android.support.v7.widget.CardViewApi21
be.brunoparmentier.apkshare.eval_r8      public android.support.v4.view.animation.FastOutLinearInInterpolator
be.brunoparmentier.apkshare.eval_r9      public android.support.v4.os.EnvironmentCompat$Exception
be.brunoparmentier.apkshare.eval_r_      public android.support.v4.internal.view.SupportMenuItem$IOException
be.brunoparmentier.apkshare.eval_ra      public android.support.v4.view.AccessibilityDelegateCompatJellyBean$NullPointerException
be.brunoparmentier.apkshare.eval_rb      public android.support.v7.internal.widget.ScrollingTabContainerView
be.brunoparmentier.apkshare.eval_rc      public android.support.v4.os.ParcelableCompat
be.brunoparmentier.apkshare.eval_rd      public abstract android.support.v4.widget.ExploreByTouchHelper
be.brunoparmentier.apkshare.eval_re      android.support.v4.graphics.drawable.DrawableWrapperDonut
be.brunoparmentier.apkshare.eval_rf      android.support.v4.app.NotificationCompatHoneycomb
be.brunoparmentier.apkshare.eval_rg      public android.support.v4.view.accessibility.AccessibilityManagerCompat$Exception
be.brunoparmentier.apkshare.eval_rh      android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs
be.brunoparmentier.apkshare.eval_ri      public be.brunoparmentier.apkshare.AppAdapter$IOException
be.brunoparmentier.apkshare.eval_rj      android.support.v4.provider.DocumentsContractApi19
be.brunoparmentier.apkshare.eval_rk      public android.support.v4.media.MediaDescriptionCompatApi21
be.brunoparmentier.apkshare.eval_rl      android.support.v4.view.WindowInsetsCompatApi21
be.brunoparmentier.apkshare.eval_rm      public android.support.v7.internal.widget.FitWindowsViewGroup$Exception
be.brunoparmentier.apkshare.eval_rn      public android.support.v4.widget.ContentLoadingProgressBar$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_ro      public android.support.v4.media.session.MediaControllerCompatApi21$Exception
be.brunoparmentier.apkshare.eval_rp      public android.support.v4.media.TransportController$Exception
be.brunoparmentier.apkshare.eval_rq      public android.support.v4.app.TaskStackBuilderJellybean$IOException
be.brunoparmentier.apkshare.eval_rr      public final android.support.v7.internal.widget.ViewStubCompat
be.brunoparmentier.apkshare.eval_rs      public android.support.v7.widget.PopupMenu$NullPointerException
be.brunoparmentier.apkshare.eval_rt      public android.support.v4.app.ListFragment$NullPointerException
be.brunoparmentier.apkshare.eval_ru      public android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl$NullPointerException
be.brunoparmentier.apkshare.eval_rv      public android.support.v4.media.session.IMediaControllerCallback$Stub$ParseException
be.brunoparmentier.apkshare.eval_rw      public android.support.v4.app.FragmentTransaction$ParseException
be.brunoparmentier.apkshare.eval_rx      public android.support.v4.widget.PopupWindowCompat$IOException
be.brunoparmentier.apkshare.eval_ry      public android.support.v4.widget.EdgeEffectCompat
be.brunoparmentier.apkshare.eval_rz      public android.support.v7.internal.view.menu.BaseWrapper$Exception
be.brunoparmentier.apkshare.eval_s0      android.support.v4.widget.ScrollerCompatGingerbread
be.brunoparmentier.apkshare.eval_s1      public android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$ParseException
be.brunoparmentier.apkshare.eval_s2      public android.support.v4.graphics.BitmapCompat
be.brunoparmentier.apkshare.eval_s3      public android.support.v4.provider.TreeDocumentFile$Exception
be.brunoparmentier.apkshare.eval_s4      public android.support.v7.internal.widget.SpinnerCompat$IOException
be.brunoparmentier.apkshare.eval_s5      public android.support.v4.widget.ListPopupWindowCompatKitKat$IOException
be.brunoparmentier.apkshare.eval_s6      public android.support.v7.widget.RecyclerViewAccessibilityDelegate
be.brunoparmentier.apkshare.eval_s7      public be.brunoparmentier.apkshare.App$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_s8      public android.support.v4.app.DialogFragment$ParseException
be.brunoparmentier.apkshare.eval_s9      public android.support.v7.internal.view.menu.ListMenuItemView
be.brunoparmentier.apkshare.eval_s_      public android.support.v4.view.GravityCompatJellybeanMr1$Exception
be.brunoparmentier.apkshare.eval_sa      public android.support.v7.internal.app.NotificationCompatImpl21
be.brunoparmentier.apkshare.eval_sb      public abstract android.support.v7.app.AppCompatDelegate
be.brunoparmentier.apkshare.eval_sc      public android.support.v7.internal.view.ActionBarPolicy
be.brunoparmentier.apkshare.eval_sd      public android.support.v4.app.NavUtils
be.brunoparmentier.apkshare.eval_se      public android.support.v4.view.MenuItemCompat
be.brunoparmentier.apkshare.eval_sf      android.support.v4.os.TraceJellybeanMR2
be.brunoparmentier.apkshare.eval_sg      android.support.v4.graphics.drawable.DrawableWrapperLollipop
be.brunoparmentier.apkshare.eval_sh      public android.support.v7.app.ActionBarDrawerToggle
be.brunoparmentier.apkshare.eval_si      public android.support.v4.widget.CursorAdapter$Exception
be.brunoparmentier.apkshare.eval_sj      public android.support.v7.internal.view.menu.ListMenuPresenter$NullPointerException
be.brunoparmentier.apkshare.eval_sk      public android.support.v7.widget.ScrollbarHelper$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_sl      public android.support.v7.internal.widget.SpinnerCompat$SavedState$Exception
be.brunoparmentier.apkshare.eval_sm      public android.support.v4.view.VelocityTrackerCompatHoneycomb$Exception
be.brunoparmentier.apkshare.eval_sn      public android.support.v4.app.RemoteInputCompatJellybean$Exception
be.brunoparmentier.apkshare.eval_so      public android.support.v4.view.MotionEventCompatGingerbread$ParseException
be.brunoparmentier.apkshare.eval_sp      public android.support.v7.widget.helper.ItemTouchUIUtilImpl$ParseException
be.brunoparmentier.apkshare.eval_sq      public android.support.v7.widget.RecyclerView$ItemAnimator$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_sr      android.support.v4.provider.DocumentsContractApi21
be.brunoparmentier.apkshare.eval_ss      public android.support.v4.os.ParcelableCompatCreatorCallbacks$Exception
be.brunoparmentier.apkshare.eval_st      public android.support.v7.internal.view.ContextThemeWrapper$ParseException
be.brunoparmentier.apkshare.eval_su      public be.brunoparmentier.apkshare.AppAdapter
be.brunoparmentier.apkshare.eval_sv      public android.support.v4.widget.DrawerLayout
be.brunoparmentier.apkshare.eval_sw      public android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$IOException
be.brunoparmentier.apkshare.eval_sx      android.support.v4.os.ParcelableCompatCreatorHoneycombMR2
be.brunoparmentier.apkshare.eval_sy      public android.support.v7.widget.helper.ItemTouchUIUtil$IOException
be.brunoparmentier.apkshare.eval_sz      public android.support.v4.os.AsyncTaskCompat$ParseException
be.brunoparmentier.apkshare.eval_t0      public android.support.v4.widget.SwipeRefreshLayout$Exception
be.brunoparmentier.apkshare.eval_t1      public android.support.v7.widget.AppCompatCheckBox
be.brunoparmentier.apkshare.eval_t2      public android.support.v4.app.FragmentManagerState$IOException
be.brunoparmentier.apkshare.eval_t3      public android.support.v4.view.PagerTitleStripIcs$ParseException
be.brunoparmentier.apkshare.eval_t4      public android.support.v4.util.SparseArrayCompat$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_t5      public android.support.v7.internal.widget.ScrollingTabContainerView$NullPointerException
be.brunoparmentier.apkshare.eval_t6      android.support.v4.app.NotificationCompatJellybean
be.brunoparmentier.apkshare.eval_t7      public android.support.v7.internal.view.WindowCallbackWrapper$Exception
be.brunoparmentier.apkshare.eval_t8      public android.support.v4.view.animation.FastOutSlowInInterpolator$Exception
be.brunoparmentier.apkshare.eval_t9      public android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$ParseException
be.brunoparmentier.apkshare.eval_t_      public android.support.v4.view.ViewGroupCompatIcs$ParseException
be.brunoparmentier.apkshare.eval_ta      public android.support.v4.view.ViewCompatKitKat$NullPointerException
be.brunoparmentier.apkshare.eval_tb      public android.support.v4.widget.ResourceCursorAdapter$ParseException
be.brunoparmentier.apkshare.eval_tc      public android.support.v4.app.NotificationCompatIceCreamSandwich$ParseException
be.brunoparmentier.apkshare.eval_td      public android.support.v4.util.ArrayMap$ParseException
be.brunoparmentier.apkshare.eval_te      public android.support.v7.internal.view.menu.MenuPopupHelper$IOException
be.brunoparmentier.apkshare.eval_tf      public final android.support.v4.media.MediaDescriptionCompat
be.brunoparmentier.apkshare.eval_tg      public android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState$Exception
be.brunoparmentier.apkshare.eval_th      android.support.v4.app.TaskStackBuilderHoneycomb
be.brunoparmentier.apkshare.eval_ti      android.support.v4.content.ContextCompatFroyo
be.brunoparmentier.apkshare.eval_tj      public android.support.v4.view.ViewCompatJellybeanMr1$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_tk      abstract android.support.v4.content.ModernAsyncTask
be.brunoparmentier.apkshare.eval_tl      abstract android.support.v7.app.AppCompatDelegateImplBase
be.brunoparmentier.apkshare.eval_tm      public android.support.v4.view.accessibility.AccessibilityEventCompat
be.brunoparmentier.apkshare.eval_tn      public abstract android.support.v7.internal.view.menu.BaseMenuPresenter
be.brunoparmentier.apkshare.eval_to      public abstract android.support.v4.content.WakefulBroadcastReceiver
be.brunoparmentier.apkshare.eval_tp      public abstract interface android.support.v4.app.INotificationSideChannel
be.brunoparmentier.apkshare.eval_tq      public abstract interface android.support.v4.view.ScrollingView
be.brunoparmentier.apkshare.eval_tr      public android.support.v7.widget.ActionMenuPresenter$SavedState$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_ts      public android.support.v7.widget.helper.ItemTouchHelper$Callback$ParseException
be.brunoparmentier.apkshare.eval_tt      public android.support.v4.widget.ExploreByTouchHelper$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_tu      public android.support.v4.view.ScaleGestureDetectorCompatKitKat$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_tv      public android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory$NullPointerException
be.brunoparmentier.apkshare.eval_tw      public android.support.v7.internal.view.ViewPropertyAnimatorCompatSet
be.brunoparmentier.apkshare.eval_tx      android.support.v4.app.RemoteInputCompatJellybean
be.brunoparmentier.apkshare.eval_ty      public abstract interface android.support.v4.text.TextDirectionHeuristicCompat
be.brunoparmentier.apkshare.eval_tz      android.support.v4.view.ViewCompatICS
be.brunoparmentier.apkshare.eval_u0      public android.support.v7.widget.ActionMenuView$NullPointerException
be.brunoparmentier.apkshare.eval_u1      public android.support.v4.database.DatabaseUtilsCompat
be.brunoparmentier.apkshare.eval_u2      public android.support.v4.media.TransportStateListener$ParseException
be.brunoparmentier.apkshare.eval_u3      android.support.v4.media.routing.MediaRouterJellybeanMr1
be.brunoparmentier.apkshare.eval_u4      public android.support.v7.internal.widget.AbsActionBarView$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_u5      public android.support.v7.internal.widget.DecorContentParent$IOException
be.brunoparmentier.apkshare.eval_u6      public android.support.v4.view.MarginLayoutParamsCompat$IOException
be.brunoparmentier.apkshare.eval_u7      android.support.v4.view.LayoutInflaterCompatLollipop
be.brunoparmentier.apkshare.eval_u8      public android.support.v7.widget.Toolbar$IOException
be.brunoparmentier.apkshare.eval_u9      public android.support.v4.media.session.MediaSessionCompatApi19$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_u_      public android.support.v4.media.TransportMediatorCallback$NullPointerException
be.brunoparmentier.apkshare.eval_ua      public android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$NullPointerException
be.brunoparmentier.apkshare.eval_ub      public android.support.v4.provider.DocumentFile$NullPointerException
be.brunoparmentier.apkshare.eval_uc      public android.support.v4.media.routing.MediaRouterJellybean$IOException
be.brunoparmentier.apkshare.eval_ud      public android.support.v4.app.NotificationCompatHoneycomb$NullPointerException
be.brunoparmentier.apkshare.eval_ue      public android.support.v4.net.ConnectivityManagerCompatJellyBean$ParseException
be.brunoparmentier.apkshare.eval_uf      public android.support.v4.graphics.drawable.DrawableWrapperDonut$ParseException
be.brunoparmentier.apkshare.eval_ug      public final android.support.v7.internal.widget.TintManager
be.brunoparmentier.apkshare.eval_uh      abstract interface android.support.v7.widget.CardViewDelegate
be.brunoparmentier.apkshare.eval_ui      public android.support.v4.widget.DrawerLayout$ViewDragCallback$NullPointerException
be.brunoparmentier.apkshare.eval_uj      public android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$IOException
be.brunoparmentier.apkshare.eval_uk      public android.support.v7.widget.GridLayoutManager$IOException
be.brunoparmentier.apkshare.eval_ul      public android.support.v7.widget.ShareActionProvider
be.brunoparmentier.apkshare.eval_um      android.support.v4.view.ViewPropertyAnimatorCompatJB
be.brunoparmentier.apkshare.eval_un      public android.support.v4.widget.DrawerLayout$IOException
be.brunoparmentier.apkshare.eval_uo      public android.support.v4.view.animation.LinearOutSlowInInterpolator$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_up      public final android.support.v4.util.CircularArray
be.brunoparmentier.apkshare.eval_uq      android.support.v7.internal.widget.ResourcesWrapper
be.brunoparmentier.apkshare.eval_ur      public android.support.v7.widget.AppCompatTextView$IOException
be.brunoparmentier.apkshare.eval_us      public android.support.v7.app.ActionBarActivity$NullPointerException
be.brunoparmentier.apkshare.eval_ut      public android.support.v4.view.ViewGroupCompat
be.brunoparmentier.apkshare.eval_uu      public android.support.v4.view.LayoutInflaterFactory$NullPointerException
be.brunoparmentier.apkshare.eval_uv      android.support.v7.app.AppCompatDelegateImplV14
be.brunoparmentier.apkshare.eval_uw      public android.support.v4.util.DebugUtils$Exception
be.brunoparmentier.apkshare.eval_ux      public android.support.v4.media.RatingCompatApi21$ParseException
be.brunoparmentier.apkshare.eval_uy      public android.support.v7.internal.view.menu.ListMenuPresenter
be.brunoparmentier.apkshare.eval_uz      public android.support.v4.app.LoaderManager$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_v0      public android.support.v4.media.session.MediaSessionCompat$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_v1      android.support.v4.graphics.drawable.DrawableCompatApi22
be.brunoparmentier.apkshare.eval_v2      public android.support.v4.hardware.display.DisplayManagerCompat$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_v3      public android.support.v4.view.ViewParentCompatKitKat$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_v4      public android.support.v4.app.NotificationManagerCompat
be.brunoparmentier.apkshare.eval_v5      public android.support.v4.media.MediaMetadataCompat$Exception
be.brunoparmentier.apkshare.eval_v6      public android.support.v4.app.ActivityCompat
be.brunoparmentier.apkshare.eval_v7      public android.support.v7.app.NotificationCompat$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_v8      final android.support.v4.hardware.display.DisplayManagerJellybeanMr1
be.brunoparmentier.apkshare.eval_v9      public android.support.v4.util.AtomicFile$Exception
be.brunoparmentier.apkshare.eval_v_      public android.support.v7.internal.widget.DecorToolbar$ParseException
be.brunoparmentier.apkshare.eval_va      public android.support.v7.widget.PositionMap$ParseException
be.brunoparmentier.apkshare.eval_vb      android.support.v4.media.session.PlaybackStateCompatApi21
be.brunoparmentier.apkshare.eval_vc      abstract android.support.v4.view.animation.LookupTableInterpolator
be.brunoparmentier.apkshare.eval_vd      android.support.v7.internal.view.menu.SubMenuWrapperICS
be.brunoparmentier.apkshare.eval_ve      public android.support.v4.graphics.BitmapCompatHoneycombMr1$ParseException
be.brunoparmentier.apkshare.eval_vf      public android.support.v7.app.AlertController$IOException
be.brunoparmentier.apkshare.eval_vg      public android.support.v4.app.BundleUtil$IOException
be.brunoparmentier.apkshare.eval_vh      android.support.v4.app.NotificationCompatApi20
be.brunoparmentier.apkshare.eval_vi      public android.support.v4.widget.SlidingPaneLayout
be.brunoparmentier.apkshare.eval_vj      android.support.v7.widget.helper.ItemTouchUIUtilImpl
be.brunoparmentier.apkshare.eval_vk      public android.support.v4.content.ContextCompatKitKat$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_vl      public android.support.v7.internal.view.SupportActionModeWrapper$ParseException
be.brunoparmentier.apkshare.eval_vm      public abstract android.support.v7.view.ActionMode
be.brunoparmentier.apkshare.eval_vn      public android.support.v7.app.AppCompatDelegateImplV11$ParseException
be.brunoparmentier.apkshare.eval_vo      public android.support.v4.view.animation.FastOutSlowInInterpolator
be.brunoparmentier.apkshare.eval_vp      public android.support.v7.app.AlertController$AlertParams$NullPointerException
be.brunoparmentier.apkshare.eval_vq      public android.support.v4.view.PagerTitleStrip
be.brunoparmentier.apkshare.eval_vr      android.support.v4.view.accessibility.AccessibilityEventCompatKitKat
be.brunoparmentier.apkshare.eval_vs      android.support.v4.graphics.drawable.DrawableCompatBase
be.brunoparmentier.apkshare.eval_vt      public android.support.v4.view.ViewPropertyAnimatorCompatLollipop$IOException
be.brunoparmentier.apkshare.eval_vu      public android.support.v4.view.KeyEventCompat$IOException
be.brunoparmentier.apkshare.eval_vv      public android.support.v4.graphics.BitmapCompat$NullPointerException
be.brunoparmentier.apkshare.eval_vw      public android.support.v4.app.Fragment
be.brunoparmentier.apkshare.eval_vx      public android.support.v4.app.INotificationSideChannel$Stub$ParseException
be.brunoparmentier.apkshare.eval_vy      public android.support.v7.internal.widget.AppCompatPopupWindow$NullPointerException
be.brunoparmentier.apkshare.eval_vz      android.support.v4.media.VolumeProviderCompatApi21
be.brunoparmentier.apkshare.eval_w0      public android.support.v4.view.ViewCompatGingerbread$NullPointerException
be.brunoparmentier.apkshare.eval_w1      public android.support.v7.widget.OrientationHelper$IOException
be.brunoparmentier.apkshare.eval_w2      public android.support.v4.net.ConnectivityManagerCompatGingerbread$Exception
be.brunoparmentier.apkshare.eval_w3      public final android.support.v4.app.ActivityManagerCompat
be.brunoparmentier.apkshare.eval_w4      android.support.v4.view.MenuItemCompatHoneycomb
be.brunoparmentier.apkshare.eval_w5      android.support.v4.media.RatingCompatApi21
be.brunoparmentier.apkshare.eval_w6      public android.support.v4.net.TrafficStatsCompat
be.brunoparmentier.apkshare.eval_w7      public android.support.v4.print.PrintHelperKitkat$ParseException
be.brunoparmentier.apkshare.eval_w8      public android.support.v7.util.SortedList
be.brunoparmentier.apkshare.eval_w9      public android.support.v4.content.WakefulBroadcastReceiver$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_w_      public android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$Exception
be.brunoparmentier.apkshare.eval_wa      public android.support.v4.widget.ScrollerCompatIcs$IOException
be.brunoparmentier.apkshare.eval_wb      public android.support.v4.view.ViewCompatICS$ParseException
be.brunoparmentier.apkshare.eval_wc      android.support.v4.net.TrafficStatsCompatIcs
be.brunoparmentier.apkshare.eval_wd      public abstract interface android.support.v4.view.NestedScrollingChild
be.brunoparmentier.apkshare.eval_we      public abstract android.support.v4.view.ActionProvider
be.brunoparmentier.apkshare.eval_wf      android.support.v4.view.ViewParentCompatLollipop
be.brunoparmentier.apkshare.eval_wg      android.support.v4.view.accessibility.AccessibilityRecordCompatIcs
be.brunoparmentier.apkshare.eval_wh      public android.support.v4.os.ParcelableCompatCreatorHoneycombMR2$ParseException
be.brunoparmentier.apkshare.eval_wi      public android.support.v7.view.CollapsibleActionView$NullPointerException
be.brunoparmentier.apkshare.eval_wj      public final android.support.v4.media.RatingCompat
be.brunoparmentier.apkshare.eval_wk      public android.support.v4.app.FragmentTabHost$IOException
be.brunoparmentier.apkshare.eval_wl      public android.support.v4.app.NotificationCompatJellybean$NullPointerException
be.brunoparmentier.apkshare.eval_wm      public android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$ParseException
be.brunoparmentier.apkshare.eval_wn      public abstract interface android.support.v7.internal.widget.FitWindowsViewGroup
be.brunoparmentier.apkshare.eval_wo      public android.support.v4.widget.ScrollerCompatGingerbread$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_wp      public android.support.v4.widget.TextViewCompat
be.brunoparmentier.apkshare.eval_wq      public android.support.v4.view.LayoutInflaterCompat$Exception
be.brunoparmentier.apkshare.eval_wr      public android.support.v4.widget.SlidingPaneLayout$IOException
be.brunoparmentier.apkshare.eval_ws      public android.support.v4.graphics.drawable.DrawableCompat$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_wt      public abstract android.support.v4.app.FragmentTransaction
be.brunoparmentier.apkshare.eval_wu      public android.support.v7.internal.widget.ToolbarWidgetWrapper
be.brunoparmentier.apkshare.eval_wv      public android.support.v7.internal.widget.ActivityChooserModel$NullPointerException
be.brunoparmentier.apkshare.eval_ww      public final android.support.v7.internal.view.menu.MenuWrapperFactory
be.brunoparmentier.apkshare.eval_wx      public android.support.v4.media.session.MediaControllerCompat$Callback$IOException
be.brunoparmentier.apkshare.eval_wy      android.support.v4.app.NavUtilsJB
be.brunoparmentier.apkshare.eval_wz      public android.support.v7.internal.view.menu.SubMenuBuilder
be.brunoparmentier.apkshare.eval_x0      public android.support.v4.net.ConnectivityManagerCompat$IOException
be.brunoparmentier.apkshare.eval_x1      public android.support.v7.app.AppCompatDialog
be.brunoparmentier.apkshare.eval_x2      public android.support.v4.app.ShareCompat$Exception
be.brunoparmentier.apkshare.eval_x3      android.support.v4.view.ViewPropertyAnimatorCompatKK
be.brunoparmentier.apkshare.eval_x4      public android.support.v4.util.LogWriter$IOException
be.brunoparmentier.apkshare.eval_x5      public android.support.v7.widget.AppCompatAutoCompleteTextView
be.brunoparmentier.apkshare.eval_x6      final android.support.v4.app.FragmentManagerState
be.brunoparmentier.apkshare.eval_x7      public android.support.v4.widget.DrawerLayout$SavedState$Exception
be.brunoparmentier.apkshare.eval_x8      public android.support.v4.view.NestedScrollingChild$Exception
be.brunoparmentier.apkshare.eval_x9      public android.support.v7.internal.view.menu.ActionMenuItem
be.brunoparmentier.apkshare.eval_x_      public android.support.v4.content.IntentCompat
be.brunoparmentier.apkshare.eval_xa      android.support.v4.view.AccessibilityDelegateCompatJellyBean
be.brunoparmentier.apkshare.eval_xb      public android.support.v7.internal.view.menu.MenuItemWrapperICS$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_xc      public android.support.v7.widget.LinearSmoothScroller$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_xd      public android.support.v4.net.TrafficStatsCompat$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_xe      public android.support.v4.util.LongSparseArray
be.brunoparmentier.apkshare.eval_xf      public android.support.v7.internal.widget.DialogTitle$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_xg      public android.support.v4.view.accessibility.AccessibilityRecordCompat$IOException
be.brunoparmentier.apkshare.eval_xh      android.support.v7.app.ActionBarDrawerToggleHoneycomb
be.brunoparmentier.apkshare.eval_xi      public android.support.v4.content.LocalBroadcastManager$IOException
be.brunoparmentier.apkshare.eval_xj      android.support.v4.view.GravityCompatJellybeanMr1
be.brunoparmentier.apkshare.eval_xk      abstract interface android.support.v4.app.FragmentContainer
be.brunoparmentier.apkshare.eval_xl      public android.support.v7.widget.ListPopupWindow
be.brunoparmentier.apkshare.eval_xm      android.support.v4.media.routing.MediaRouterJellybean
be.brunoparmentier.apkshare.eval_xn      public android.support.v4.media.MediaMetadataCompatApi21$Exception
be.brunoparmentier.apkshare.eval_xo      android.support.v4.media.routing.MediaRouterJellybeanMr2
be.brunoparmentier.apkshare.eval_xp      public android.support.v4.util.TimeUtils$IOException
be.brunoparmentier.apkshare.eval_xq      public android.support.v4.util.SimpleArrayMap$IOException
be.brunoparmentier.apkshare.eval_xr      public abstract android.support.v4.app.FragmentManager
be.brunoparmentier.apkshare.eval_xs      android.support.v4.widget.ScrollerCompatIcs
be.brunoparmentier.apkshare.eval_xt      public android.support.v7.widget.LayoutState$ParseException
be.brunoparmentier.apkshare.eval_xu      public android.support.v7.widget.helper.ItemTouchHelper$IOException
be.brunoparmentier.apkshare.eval_xv      android.support.v4.provider.TreeDocumentFile
be.brunoparmentier.apkshare.eval_xw      abstract interface android.support.v4.app.NotificationBuilderWithActions
be.brunoparmentier.apkshare.eval_xx      android.support.v4.graphics.drawable.RoundedBitmapDrawable21
be.brunoparmentier.apkshare.eval_xy      android.support.v4.media.session.PlaybackStateCompatApi22
be.brunoparmentier.apkshare.eval_xz      public android.support.v4.widget.SimpleCursorAdapter$NullPointerException
be.brunoparmentier.apkshare.eval_y0      public android.support.v4.app.NotificationManagerCompatIceCreamSandwich$Exception
be.brunoparmentier.apkshare.eval_y1      android.support.v7.widget.RoundRectDrawable
be.brunoparmentier.apkshare.eval_y2      android.support.v4.media.TransportMediatorJellybeanMR2
be.brunoparmentier.apkshare.eval_y3      public abstract interface android.support.v4.internal.view.SupportMenuItem
be.brunoparmentier.apkshare.eval_y4      public android.support.v7.internal.transition.ActionBarTransition
be.brunoparmentier.apkshare.eval_y5      public android.support.v7.widget.DefaultItemAnimator$NullPointerException
be.brunoparmentier.apkshare.eval_y6      public android.support.v7.internal.widget.TintInfo
be.brunoparmentier.apkshare.eval_y7      public android.support.v7.widget.util.SortedListAdapterCallback$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_y8      public android.support.v4.view.AccessibilityDelegateCompat
be.brunoparmentier.apkshare.eval_y9      android.support.v7.widget.LayoutState
be.brunoparmentier.apkshare.eval_y_      public android.support.v4.view.VelocityTrackerCompat
be.brunoparmentier.apkshare.eval_ya      android.support.v4.app.LoaderManagerImpl
be.brunoparmentier.apkshare.eval_yb      public android.support.v7.app.AppCompatActivity
be.brunoparmentier.apkshare.eval_yc      public android.support.v7.internal.view.menu.ExpandedMenuView$Exception
be.brunoparmentier.apkshare.eval_yd      public android.support.v4.content.ModernAsyncTask$ParseException
be.brunoparmentier.apkshare.eval_ye      public android.support.v7.internal.app.NotificationCompatImpl21$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_yf      public android.support.v7.widget.LinearLayoutManager
be.brunoparmentier.apkshare.eval_yg      public android.support.v4.view.MenuItemCompat$IOException
be.brunoparmentier.apkshare.eval_yh      public android.support.v7.cardview.BuildConfig$Exception
be.brunoparmentier.apkshare.eval_yi      public android.support.v4.app.ActivityCompat21$Exception
be.brunoparmentier.apkshare.eval_yj      public android.support.v7.widget.RecyclerView$SmoothScroller$IOException
be.brunoparmentier.apkshare.eval_yk      public android.support.v4.view.KeyEventCompatHoneycomb$ParseException
be.brunoparmentier.apkshare.eval_yl      public android.support.v4.media.session.IMediaSession$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_ym      public be.brunoparmentier.apkshare.App$1
be.brunoparmentier.apkshare.eval_yn      public android.support.v4.app.ActionBarDrawerToggleHoneycomb$IOException
be.brunoparmentier.apkshare.eval_yo      public android.support.v4.media.TransportMediatorJellybeanMR2$Exception
be.brunoparmentier.apkshare.eval_yp      public android.support.v4.view.NestedScrollingParentHelper$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_yq      public android.support.v7.widget.LinearLayoutManager$SavedState$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_yr      android.support.v4.widget.TextViewCompatJbMr1
be.brunoparmentier.apkshare.eval_ys      public android.support.v7.widget.ListPopupWindow$ForwardingListener$NullPointerException
be.brunoparmentier.apkshare.eval_yt      public android.support.v7.internal.app.AppCompatViewInflater$IOException
be.brunoparmentier.apkshare.eval_yu      public android.support.v7.widget.AppCompatMultiAutoCompleteTextView
be.brunoparmentier.apkshare.eval_yv      public android.support.v4.app.FragmentTransitionCompat21$Exception
be.brunoparmentier.apkshare.eval_yw      public android.support.v4.content.ContextCompatJellybean$Exception
be.brunoparmentier.apkshare.eval_yx      public android.support.v4.view.ViewCompatHC$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_yy      public android.support.v7.internal.widget.DrawableUtils$IOException
be.brunoparmentier.apkshare.eval_yz      public android.support.v4.app.NotificationCompatApi21$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_z0      public android.support.v4.app.FragmentTabHost
be.brunoparmentier.apkshare.eval_z1      public android.support.v4.graphics.drawable.RoundedBitmapDrawable$IOException
be.brunoparmentier.apkshare.eval_z2      public android.support.v7.app.NotificationCompat
be.brunoparmentier.apkshare.eval_z3      abstract android.support.v7.internal.view.menu.BaseMenuWrapper
be.brunoparmentier.apkshare.eval_z4      android.support.v4.net.ConnectivityManagerCompatJellyBean
be.brunoparmentier.apkshare.eval_z5      public android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1$NullPointerException
be.brunoparmentier.apkshare.eval_z6      public android.support.v4.view.ViewConfigurationCompat$ParseException
be.brunoparmentier.apkshare.eval_z7      public abstract android.support.v7.app.ActionBar
be.brunoparmentier.apkshare.eval_z8      public android.support.v4.view.ViewPropertyAnimatorCompat$NullPointerException
be.brunoparmentier.apkshare.eval_z9      public android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_z_      public android.support.v7.internal.transition.ActionBarTransition$IOException
be.brunoparmentier.apkshare.eval_za      android.support.v4.app.NotificationCompatIceCreamSandwich
be.brunoparmentier.apkshare.eval_zb      public android.support.v7.widget.RoundRectDrawableWithShadow$IOException
be.brunoparmentier.apkshare.eval_zc      public android.support.v4.view.ViewCompat
be.brunoparmentier.apkshare.eval_zd      android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat
be.brunoparmentier.apkshare.eval_ze      public android.support.v4.view.PagerTabStrip
be.brunoparmentier.apkshare.eval_zf      public android.support.v4.util.Pair
be.brunoparmentier.apkshare.eval_zg      public android.support.v7.widget.ActionMenuView
be.brunoparmentier.apkshare.eval_zh      android.support.v4.view.ViewPropertyAnimatorCompatLollipop
be.brunoparmentier.apkshare.eval_zi      android.support.v4.view.animation.PathInterpolatorCompatBase
be.brunoparmentier.apkshare.eval_zj      public android.support.v4.view.animation.PathInterpolatorDonut$NullPointerException
be.brunoparmentier.apkshare.eval_zk      android.support.v4.print.PrintHelperKitkat
be.brunoparmentier.apkshare.eval_zl      public android.support.v4.widget.SearchViewCompat$ParseException
be.brunoparmentier.apkshare.eval_zn      public android.support.v4.widget.DrawerLayoutCompatApi21$Exception
be.brunoparmentier.apkshare.eval_zo      public android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$ParseException
be.brunoparmentier.apkshare.eval_zp      public abstract interface android.support.v4.view.ViewPropertyAnimatorListener
be.brunoparmentier.apkshare.eval_zq      android.support.v4.graphics.BitmapCompatHoneycombMr1
be.brunoparmentier.apkshare.eval_zr      public android.support.v4.app.ServiceCompat$ArrayOutOfBoundsException
be.brunoparmentier.apkshare.eval_zs      public android.support.v7.internal.app.ToolbarActionBar$IOException
be.brunoparmentier.apkshare.eval_zt      public android.support.v7.internal.view.WindowCallbackWrapper
be.brunoparmentier.apkshare.eval_zu      public android.support.v4.view.animation.PathInterpolatorCompat
be.brunoparmentier.apkshare.eval_zv      android.support.v4.view.ViewPropertyAnimatorCompatICS
be.brunoparmentier.apkshare.eval_zw      public android.support.v7.internal.view.menu.MenuItemImpl$NullPointerException
be.brunoparmentier.apkshare.eval_zx      android.support.v4.speech.tts.TextToSpeechICS
be.brunoparmentier.apkshare.eval_zy      public android.support.v4.util.ArrayMap
be.brunoparmentier.apkshare.eval_zz      android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat
be.brunoparmentier.apkshare.eval_d$_     android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo
be.brunoparmentier.apkshare.eval_o$1     android.support.v4.app.ActionBarDrawerToggle$1
be.brunoparmentier.apkshare.eval_o$a     android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC
be.brunoparmentier.apkshare.eval_o$c     android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase
be.brunoparmentier.apkshare.eval_o$f     public abstract interface android.support.v4.app.ActionBarDrawerToggle$DelegateProvider
be.brunoparmentier.apkshare.eval_o$k     android.support.v4.app.ActionBarDrawerToggle$SlideDrawable
be.brunoparmentier.apkshare.eval_o$s     public abstract interface android.support.v4.app.ActionBarDrawerToggle$Delegate
be.brunoparmentier.apkshare.eval_o$v     android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2
be.brunoparmentier.apkshare.eval_o$x     abstract interface android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl
be.brunoparmentier.apkshare.eval_r$u     android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator
be.brunoparmentier.apkshare.eval_s$o     android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$AnimatorListenerCompatWrapper
be.brunoparmentier.apkshare.eval_y$b     abstract interface android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl
be.brunoparmentier.apkshare.eval_y$j     android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl
be.brunoparmentier.apkshare.eval_y$k     android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl
be.brunoparmentier.apkshare.eval_y$l     android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2
be.brunoparmentier.apkshare.eval__0$1    android.support.v7.widget.PopupMenu$1
be.brunoparmentier.apkshare.eval__0$j    public abstract interface android.support.v7.widget.PopupMenu$OnDismissListener
be.brunoparmentier.apkshare.eval__0$n    public abstract interface android.support.v7.widget.PopupMenu$OnMenuItemClickListener
be.brunoparmentier.apkshare.eval__2$1    android.support.v4.media.TransportMediator$1
be.brunoparmentier.apkshare.eval__2$2    android.support.v4.media.TransportMediator$2
be.brunoparmentier.apkshare.eval__3$1    android.support.v4.app.NotificationCompatSideChannelService$1
be.brunoparmentier.apkshare.eval__3$b    android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub
be.brunoparmentier.apkshare.eval__4$1    final android.support.v7.internal.widget.AppCompatPopupWindow$1
be.brunoparmentier.apkshare.eval__a$c    abstract interface android.support.v4.app.ShareCompat$ShareCompatImpl
be.brunoparmentier.apkshare.eval__a$d    android.support.v4.app.ShareCompat$ShareCompatImplBase
be.brunoparmentier.apkshare.eval__a$f    public android.support.v4.app.ShareCompat$IntentBuilder
be.brunoparmentier.apkshare.eval__a$i    android.support.v4.app.ShareCompat$ShareCompatImplICS
be.brunoparmentier.apkshare.eval__a$k    public android.support.v4.app.ShareCompat$IntentReader
be.brunoparmentier.apkshare.eval__a$u    android.support.v4.app.ShareCompat$ShareCompatImplJB
be.brunoparmentier.apkshare.eval__d$l    public abstract interface android.support.v4.media.session.MediaSessionCompatApi14$Callback
be.brunoparmentier.apkshare.eval__g$_    android.support.v4.widget.PopupWindowCompat$KitKatPopupWindowImpl
be.brunoparmentier.apkshare.eval__g$l    abstract interface android.support.v4.widget.PopupWindowCompat$PopupWindowImpl
be.brunoparmentier.apkshare.eval__g$y    android.support.v4.widget.PopupWindowCompat$BasePopupWindowImpl
be.brunoparmentier.apkshare.eval__h$c    android.support.v4.media.session.MediaSessionCompatApi19$OnMetadataUpdateListener
be.brunoparmentier.apkshare.eval__r$1    android.support.v7.internal.widget.SpinnerCompat$1
be.brunoparmentier.apkshare.eval__r$2    android.support.v7.internal.widget.SpinnerCompat$2
be.brunoparmentier.apkshare.eval__r$b    android.support.v7.internal.widget.SpinnerCompat$DropdownPopup
be.brunoparmentier.apkshare.eval__r$d    android.support.v7.internal.widget.SpinnerCompat$DropDownAdapter
be.brunoparmentier.apkshare.eval__r$e    android.support.v7.internal.widget.SpinnerCompat$SavedState
be.brunoparmentier.apkshare.eval__r$q    abstract interface android.support.v7.internal.widget.SpinnerCompat$SpinnerPopup
be.brunoparmentier.apkshare.eval__r$t    android.support.v7.internal.widget.SpinnerCompat$DialogPopup
be.brunoparmentier.apkshare.eval__t$c    android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform
be.brunoparmentier.apkshare.eval__v$t    android.support.v4.media.session.MediaSessionCompatApi18$OnPlaybackPositionUpdateListener
be.brunoparmentier.apkshare.eval_a5$_    android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase
be.brunoparmentier.apkshare.eval_a5$o    abstract interface android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl
be.brunoparmentier.apkshare.eval_a5$p    android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread
be.brunoparmentier.apkshare.eval_a5$q    android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs
be.brunoparmentier.apkshare.eval_a9$1    final android.support.v4.app.RemoteInput$1
be.brunoparmentier.apkshare.eval_a9$e    android.support.v4.app.RemoteInput$ImplBase
be.brunoparmentier.apkshare.eval_a9$g    android.support.v4.app.RemoteInput$ImplApi20
be.brunoparmentier.apkshare.eval_a9$l    public final android.support.v4.app.RemoteInput$Builder
be.brunoparmentier.apkshare.eval_a9$y    abstract interface android.support.v4.app.RemoteInput$Impl
be.brunoparmentier.apkshare.eval_a9$z    android.support.v4.app.RemoteInput$ImplJellybean
be.brunoparmentier.apkshare.eval_as$i    android.support.v7.internal.widget.AbsSpinnerCompat$SavedState
be.brunoparmentier.apkshare.eval_as$y    android.support.v7.internal.widget.AbsSpinnerCompat$RecycleBin
be.brunoparmentier.apkshare.eval_az$_    android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper
be.brunoparmentier.apkshare.eval_az$v    abstract interface android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy
be.brunoparmentier.apkshare.eval_b0$a    android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImpl21
be.brunoparmentier.apkshare.eval_b0$f    android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB
be.brunoparmentier.apkshare.eval_b1$w    public android.support.v7.internal.view.SupportActionModeWrapper$CallbackWrapper
be.brunoparmentier.apkshare.eval_b3$1    final android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1
be.brunoparmentier.apkshare.eval_b3$j    abstract interface android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge
be.brunoparmentier.apkshare.eval_b4$j    android.support.v7.internal.view.menu.MenuItemWrapperJB$ActionProviderWrapperJB
be.brunoparmentier.apkshare.eval_b5$a    public final android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup
be.brunoparmentier.apkshare.eval_b5$w    public android.support.v7.widget.GridLayoutManager$LayoutParams
be.brunoparmentier.apkshare.eval_b6$_    android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV11
be.brunoparmentier.apkshare.eval_b6$k    android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplBase
be.brunoparmentier.apkshare.eval_b6$m    android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV21
be.brunoparmentier.apkshare.eval_b6$w    abstract interface android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImpl
be.brunoparmentier.apkshare.eval_bh$e    public abstract android.support.v7.internal.view.menu.ActionMenuItemView$PopupCallback
be.brunoparmentier.apkshare.eval_bh$j    android.support.v7.internal.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener
be.brunoparmentier.apkshare.eval_bj$1    android.support.v7.widget.RecyclerView$1
be.brunoparmentier.apkshare.eval_bj$2    android.support.v7.widget.RecyclerView$2
be.brunoparmentier.apkshare.eval_bj$3    final android.support.v7.widget.RecyclerView$3
be.brunoparmentier.apkshare.eval_bj$4    android.support.v7.widget.RecyclerView$4
be.brunoparmentier.apkshare.eval_bj$5    android.support.v7.widget.RecyclerView$5
be.brunoparmentier.apkshare.eval_bj$a    android.support.v7.widget.RecyclerView$AdapterDataObservable
be.brunoparmentier.apkshare.eval_bj$b    android.support.v7.widget.RecyclerView$ItemAnimatorRestoreListener
be.brunoparmentier.apkshare.eval_bj$d    public abstract android.support.v7.widget.RecyclerView$ViewHolder
be.brunoparmentier.apkshare.eval_bj$f    public abstract interface android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener
be.brunoparmentier.apkshare.eval_bj$g    public abstract interface android.support.v7.widget.RecyclerView$OnItemTouchListener
be.brunoparmentier.apkshare.eval_bj$i    android.support.v7.widget.RecyclerView$ItemHolderInfo
be.brunoparmentier.apkshare.eval_bj$j    public abstract android.support.v7.widget.RecyclerView$AdapterDataObserver
be.brunoparmentier.apkshare.eval_bj$m    public abstract android.support.v7.widget.RecyclerView$ItemDecoration
be.brunoparmentier.apkshare.eval_bj$n    public abstract android.support.v7.widget.RecyclerView$OnScrollListener
be.brunoparmentier.apkshare.eval_bj$r    public android.support.v7.widget.RecyclerView$State
be.brunoparmentier.apkshare.eval_bj$s    android.support.v7.widget.RecyclerView$RecyclerViewDataObserver
be.brunoparmentier.apkshare.eval_bj$t    public android.support.v7.widget.RecyclerView$LayoutParams
be.brunoparmentier.apkshare.eval_bj$u    public abstract android.support.v7.widget.RecyclerView$Adapter
be.brunoparmentier.apkshare.eval_bj$x    public abstract interface android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback
be.brunoparmentier.apkshare.eval_bj$y    public abstract android.support.v7.widget.RecyclerView$LayoutManager
be.brunoparmentier.apkshare.eval_bj$z    public android.support.v7.widget.RecyclerView$SimpleOnItemTouchListener
be.brunoparmentier.apkshare.eval_bl$1    android.support.v7.widget.helper.ItemTouchHelper$1
be.brunoparmentier.apkshare.eval_bl$2    android.support.v7.widget.helper.ItemTouchHelper$2
be.brunoparmentier.apkshare.eval_bl$3    android.support.v7.widget.helper.ItemTouchHelper$3
be.brunoparmentier.apkshare.eval_bl$4    android.support.v7.widget.helper.ItemTouchHelper$4
be.brunoparmentier.apkshare.eval_bl$5    android.support.v7.widget.helper.ItemTouchHelper$5
be.brunoparmentier.apkshare.eval_bl$a    android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation
be.brunoparmentier.apkshare.eval_bl$f    android.support.v7.widget.helper.ItemTouchHelper$ItemTouchHelperGestureListener
be.brunoparmentier.apkshare.eval_bl$k    public abstract android.support.v7.widget.helper.ItemTouchHelper$SimpleCallback
be.brunoparmentier.apkshare.eval_bl$m    public abstract interface android.support.v7.widget.helper.ItemTouchHelper$ViewDropHandler
be.brunoparmentier.apkshare.eval_bl$n    public abstract android.support.v7.widget.helper.ItemTouchHelper$Callback
be.brunoparmentier.apkshare.eval_bn$1    android.support.v7.internal.app.WindowDecorActionBar$1
be.brunoparmentier.apkshare.eval_bn$2    android.support.v7.internal.app.WindowDecorActionBar$2
be.brunoparmentier.apkshare.eval_bn$3    android.support.v7.internal.app.WindowDecorActionBar$3
be.brunoparmentier.apkshare.eval_bn$f    public android.support.v7.internal.app.WindowDecorActionBar$TabImpl
be.brunoparmentier.apkshare.eval_bn$u    public android.support.v7.internal.app.WindowDecorActionBar$ActionModeImpl
be.brunoparmentier.apkshare.eval_bq$i    final android.support.v7.widget.SuggestionsAdapter$ChildViewCache
be.brunoparmentier.apkshare.eval_bt$1    android.support.v4.content.LocalBroadcastManager$1
be.brunoparmentier.apkshare.eval_bt$d    android.support.v4.content.LocalBroadcastManager$BroadcastRecord
be.brunoparmentier.apkshare.eval_bt$s    android.support.v4.content.LocalBroadcastManager$ReceiverRecord
be.brunoparmentier.apkshare.eval_bv$j    android.support.v4.media.session.MediaSessionCompatApi21$QueueItem
be.brunoparmentier.apkshare.eval_bv$p    android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy
be.brunoparmentier.apkshare.eval_bv$v    public abstract interface android.support.v4.media.session.MediaSessionCompatApi21$Callback
be.brunoparmentier.apkshare.eval_c2$g    public abstract interface android.support.v7.internal.view.menu.MenuView$ItemView
be.brunoparmentier.apkshare.eval_c5$a    public final be.brunoparmentier.apkshare.R$attr
be.brunoparmentier.apkshare.eval_c5$b    public final be.brunoparmentier.apkshare.R$mipmap
be.brunoparmentier.apkshare.eval_c5$g    public final be.brunoparmentier.apkshare.R$string
be.brunoparmentier.apkshare.eval_c5$h    public final be.brunoparmentier.apkshare.R$styleable
be.brunoparmentier.apkshare.eval_c5$i    public final be.brunoparmentier.apkshare.R$bool
be.brunoparmentier.apkshare.eval_c5$m    public final be.brunoparmentier.apkshare.R$anim
be.brunoparmentier.apkshare.eval_c5$r    public final be.brunoparmentier.apkshare.R$dimen
be.brunoparmentier.apkshare.eval_c5$v    public final be.brunoparmentier.apkshare.R$style
be.brunoparmentier.apkshare.eval_c5$w    public final be.brunoparmentier.apkshare.R$drawable
be.brunoparmentier.apkshare.eval_c5$y    public final be.brunoparmentier.apkshare.R$id
be.brunoparmentier.apkshare.eval_c5$z    public final be.brunoparmentier.apkshare.R$integer
be.brunoparmentier.apkshare.eval_c6$1    android.support.v4.widget.SwipeRefreshLayout$1
be.brunoparmentier.apkshare.eval_c6$2    android.support.v4.widget.SwipeRefreshLayout$2
be.brunoparmentier.apkshare.eval_c6$3    android.support.v4.widget.SwipeRefreshLayout$3
be.brunoparmentier.apkshare.eval_c6$4    android.support.v4.widget.SwipeRefreshLayout$4
be.brunoparmentier.apkshare.eval_c6$5    android.support.v4.widget.SwipeRefreshLayout$5
be.brunoparmentier.apkshare.eval_c6$6    android.support.v4.widget.SwipeRefreshLayout$6
be.brunoparmentier.apkshare.eval_c6$7    android.support.v4.widget.SwipeRefreshLayout$7
be.brunoparmentier.apkshare.eval_c6$8    android.support.v4.widget.SwipeRefreshLayout$8
be.brunoparmentier.apkshare.eval_c6$r    public abstract interface android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener
be.brunoparmentier.apkshare.eval_ch$1    final android.support.v4.media.session.PlaybackStateCompat$1
be.brunoparmentier.apkshare.eval_ch$k    public final android.support.v4.media.session.PlaybackStateCompat$Builder
be.brunoparmentier.apkshare.eval_ch$v    public final android.support.v4.media.session.PlaybackStateCompat$CustomAction
be.brunoparmentier.apkshare.eval_cs$1    final android.support.v4.view.AccessibilityDelegateCompatIcs$1
be.brunoparmentier.apkshare.eval_cs$r    public abstract interface android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge
be.brunoparmentier.apkshare.eval_ct$b    public abstract interface android.support.v7.widget.LinearLayoutCompat$DividerMode
be.brunoparmentier.apkshare.eval_ct$m    public android.support.v7.widget.LinearLayoutCompat$LayoutParams
be.brunoparmentier.apkshare.eval_ct$x    public abstract interface android.support.v7.widget.LinearLayoutCompat$OrientationMode
be.brunoparmentier.apkshare.eval_d4$l    public abstract interface android.support.v4.widget.SimpleCursorAdapter$ViewBinder
be.brunoparmentier.apkshare.eval_d4$t    public abstract interface android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter
be.brunoparmentier.apkshare.eval_d6$e    android.support.v4.view.LayoutInflaterCompatHC$FactoryWrapperHC
be.brunoparmentier.apkshare.eval_da$n    android.support.v7.internal.widget.TintContextWrapper$TintResources
be.brunoparmentier.apkshare.eval_dh$a    android.support.v4.text.ICUCompat$ICUCompatImplBase
be.brunoparmentier.apkshare.eval_dh$b    android.support.v4.text.ICUCompat$ICUCompatImplIcs
be.brunoparmentier.apkshare.eval_dh$i    abstract interface android.support.v4.text.ICUCompat$ICUCompatImpl
be.brunoparmentier.apkshare.eval_dy$1    android.support.v7.widget.Toolbar$1
be.brunoparmentier.apkshare.eval_dy$2    android.support.v7.widget.Toolbar$2
be.brunoparmentier.apkshare.eval_dy$3    android.support.v7.widget.Toolbar$3
be.brunoparmentier.apkshare.eval_dy$e    public abstract interface android.support.v7.widget.Toolbar$OnMenuItemClickListener
be.brunoparmentier.apkshare.eval_dy$j    public android.support.v7.widget.Toolbar$LayoutParams
be.brunoparmentier.apkshare.eval_dy$m    android.support.v7.widget.Toolbar$SavedState
be.brunoparmentier.apkshare.eval_dy$z    android.support.v7.widget.Toolbar$ExpandedActionViewMenuPresenter
be.brunoparmentier.apkshare.eval_e0$1    android.support.v4.view.ScaleGestureDetectorCompat$1
be.brunoparmentier.apkshare.eval_e0$i    android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl
be.brunoparmentier.apkshare.eval_e0$u    abstract interface android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl
be.brunoparmentier.apkshare.eval_e2$1    final android.support.v4.widget.ViewDragHelper$1
be.brunoparmentier.apkshare.eval_e2$2    android.support.v4.widget.ViewDragHelper$2
be.brunoparmentier.apkshare.eval_e2$k    public abstract android.support.v4.widget.ViewDragHelper$Callback
be.brunoparmentier.apkshare.eval_e3$1    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$1
be.brunoparmentier.apkshare.eval_e3$c    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl
be.brunoparmentier.apkshare.eval_e3$f    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl
be.brunoparmentier.apkshare.eval_e3$h    abstract interface android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl
be.brunoparmentier.apkshare.eval_e3$i    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl
be.brunoparmentier.apkshare.eval_e3$m    public android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat
be.brunoparmentier.apkshare.eval_e3$p    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl
be.brunoparmentier.apkshare.eval_e3$q    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi22Impl
be.brunoparmentier.apkshare.eval_e3$r    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi21Impl
be.brunoparmentier.apkshare.eval_e3$s    public android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat
be.brunoparmentier.apkshare.eval_e3$v    public android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat
be.brunoparmentier.apkshare.eval_ef$c    android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable
be.brunoparmentier.apkshare.eval_ei$c    android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl
be.brunoparmentier.apkshare.eval_ei$m    abstract interface android.support.v4.view.ViewParentCompat$ViewParentCompatImpl
be.brunoparmentier.apkshare.eval_ei$p    android.support.v4.view.ViewParentCompat$ViewParentCompatKitKatImpl
be.brunoparmentier.apkshare.eval_ei$s    android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl
be.brunoparmentier.apkshare.eval_ei$v    android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl
be.brunoparmentier.apkshare.eval_ek$1    android.support.v7.widget.CardViewEclairMr1$1
be.brunoparmentier.apkshare.eval_em$v    abstract interface android.support.v7.widget.OpReorderer$Callback
be.brunoparmentier.apkshare.eval_en$d    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl
be.brunoparmentier.apkshare.eval_en$h    abstract interface android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl
be.brunoparmentier.apkshare.eval_en$l    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl
be.brunoparmentier.apkshare.eval_en$m    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl
be.brunoparmentier.apkshare.eval_en$w    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl
be.brunoparmentier.apkshare.eval_eo$1    final android.support.v4.view.ViewCompatLollipop$1
be.brunoparmentier.apkshare.eval_ew$1    final android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1
be.brunoparmentier.apkshare.eval_ew$v    abstract interface android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge
be.brunoparmentier.apkshare.eval_f6$1    android.support.v7.internal.widget.AdapterViewCompat$1
be.brunoparmentier.apkshare.eval_f6$c    android.support.v7.internal.widget.AdapterViewCompat$OnItemClickListenerWrapper
be.brunoparmentier.apkshare.eval_f6$d    public android.support.v7.internal.widget.AdapterViewCompat$AdapterContextMenuInfo
be.brunoparmentier.apkshare.eval_f6$m    android.support.v7.internal.widget.AdapterViewCompat$AdapterDataSetObserver
be.brunoparmentier.apkshare.eval_f6$q    public abstract interface android.support.v7.internal.widget.AdapterViewCompat$OnItemClickListener
be.brunoparmentier.apkshare.eval_f6$u    public abstract interface android.support.v7.internal.widget.AdapterViewCompat$OnItemLongClickListener
be.brunoparmentier.apkshare.eval_f6$y    android.support.v7.internal.widget.AdapterViewCompat$SelectionNotifier
be.brunoparmentier.apkshare.eval_fb$1    final android.support.v4.view.ViewPager$1
be.brunoparmentier.apkshare.eval_fb$2    final android.support.v4.view.ViewPager$2
be.brunoparmentier.apkshare.eval_fb$3    android.support.v4.view.ViewPager$3
be.brunoparmentier.apkshare.eval_fb$d    abstract interface android.support.v4.view.ViewPager$OnAdapterChangeListener
be.brunoparmentier.apkshare.eval_fb$e    public abstract interface android.support.v4.view.ViewPager$OnPageChangeListener
be.brunoparmentier.apkshare.eval_fb$n    public android.support.v4.view.ViewPager$LayoutParams
be.brunoparmentier.apkshare.eval_fb$p    android.support.v4.view.ViewPager$ItemInfo
be.brunoparmentier.apkshare.eval_fb$q    public android.support.v4.view.ViewPager$SavedState
be.brunoparmentier.apkshare.eval_fb$t    public abstract interface android.support.v4.view.ViewPager$PageTransformer
be.brunoparmentier.apkshare.eval_fb$w    android.support.v4.view.ViewPager$MyAccessibilityDelegate
be.brunoparmentier.apkshare.eval_fb$x    public android.support.v4.view.ViewPager$SimpleOnPageChangeListener
be.brunoparmentier.apkshare.eval_fb$y    abstract interface android.support.v4.view.ViewPager$Decor
be.brunoparmentier.apkshare.eval_fg$1    final android.support.v7.widget.OrientationHelper$1
be.brunoparmentier.apkshare.eval_fg$2    final android.support.v7.widget.OrientationHelper$2
be.brunoparmentier.apkshare.eval_fk$k    public abstract android.support.v4.app.RemoteInputCompatBase$RemoteInput
be.brunoparmentier.apkshare.eval_fp$o    public abstract interface android.support.v4.app.LoaderManager$LoaderCallbacks
be.brunoparmentier.apkshare.eval_fs$v    android.support.v7.internal.widget.ListViewCompat$GateKeeperDrawable
be.brunoparmentier.apkshare.eval_fv$1    android.support.v7.widget.DefaultItemAnimator$1
be.brunoparmentier.apkshare.eval_fv$2    android.support.v7.widget.DefaultItemAnimator$2
be.brunoparmentier.apkshare.eval_fv$3    android.support.v7.widget.DefaultItemAnimator$3
be.brunoparmentier.apkshare.eval_fv$4    android.support.v7.widget.DefaultItemAnimator$4
be.brunoparmentier.apkshare.eval_fv$5    android.support.v7.widget.DefaultItemAnimator$5
be.brunoparmentier.apkshare.eval_fv$6    android.support.v7.widget.DefaultItemAnimator$6
be.brunoparmentier.apkshare.eval_fv$7    android.support.v7.widget.DefaultItemAnimator$7
be.brunoparmentier.apkshare.eval_fv$8    android.support.v7.widget.DefaultItemAnimator$8
be.brunoparmentier.apkshare.eval_fv$g    android.support.v7.widget.DefaultItemAnimator$MoveInfo
be.brunoparmentier.apkshare.eval_fv$n    android.support.v7.widget.DefaultItemAnimator$ChangeInfo
be.brunoparmentier.apkshare.eval_fv$t    android.support.v7.widget.DefaultItemAnimator$VpaListenerAdapter
be.brunoparmentier.apkshare.eval_g_$m    android.support.v7.widget.PositionMap$ContainerHelpers
be.brunoparmentier.apkshare.eval_ga$c    abstract interface android.support.v4.view.GravityCompat$GravityCompatImpl
be.brunoparmentier.apkshare.eval_ga$f    android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1
be.brunoparmentier.apkshare.eval_ga$u    android.support.v4.view.GravityCompat$GravityCompatImplBase
be.brunoparmentier.apkshare.eval_gh$c    abstract interface android.support.v4.content.FileProvider$PathStrategy
be.brunoparmentier.apkshare.eval_gh$f    android.support.v4.content.FileProvider$SimplePathStrategy
be.brunoparmentier.apkshare.eval_gk$a    android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl
be.brunoparmentier.apkshare.eval_gk$i    abstract interface android.support.v4.view.KeyEventCompat$KeyEventVersionImpl
be.brunoparmentier.apkshare.eval_gk$v    android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl
be.brunoparmentier.apkshare.eval_gm$1    android.support.v4.app.FragmentManagerImpl$1
be.brunoparmentier.apkshare.eval_gm$2    android.support.v4.app.FragmentManagerImpl$2
be.brunoparmentier.apkshare.eval_gm$3    android.support.v4.app.FragmentManagerImpl$3
be.brunoparmentier.apkshare.eval_gm$4    android.support.v4.app.FragmentManagerImpl$4
be.brunoparmentier.apkshare.eval_gm$5    android.support.v4.app.FragmentManagerImpl$5
be.brunoparmentier.apkshare.eval_gm$k    android.support.v4.app.FragmentManagerImpl$FragmentTag
be.brunoparmentier.apkshare.eval_gu$j    public abstract interface android.support.v4.content.Loader$OnLoadCompleteListener
be.brunoparmentier.apkshare.eval_gu$m    public final android.support.v4.content.Loader$ForceLoadContentObserver
be.brunoparmentier.apkshare.eval_gv$q    public abstract interface android.support.v7.internal.view.menu.MenuPresenter$Callback
be.brunoparmentier.apkshare.eval_gw$t    public abstract android.support.v4.app.NotificationCompatBase$UnreadConversation
be.brunoparmentier.apkshare.eval_gw$y    public abstract android.support.v4.app.NotificationCompatBase$Action
be.brunoparmentier.apkshare.eval_gx$n    public abstract interface android.support.v7.internal.view.menu.MenuBuilder$Callback
be.brunoparmentier.apkshare.eval_gx$w    public abstract interface android.support.v7.internal.view.menu.MenuBuilder$ItemInvoker
be.brunoparmentier.apkshare.eval_gz$1    android.support.v7.internal.view.menu.MenuItemImpl$1
be.brunoparmentier.apkshare.eval_h5$1    android.support.v7.internal.widget.ActionBarContextView$1
be.brunoparmentier.apkshare.eval_ht$c    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl
be.brunoparmentier.apkshare.eval_ht$j    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl
be.brunoparmentier.apkshare.eval_ht$p    public abstract android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat
be.brunoparmentier.apkshare.eval_ht$q    abstract interface android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl
be.brunoparmentier.apkshare.eval_i6$m    android.support.v7.internal.view.menu.MenuPopupHelper$MenuAdapter
be.brunoparmentier.apkshare.eval_i8$_    android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl
be.brunoparmentier.apkshare.eval_i8$a    abstract interface android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl
be.brunoparmentier.apkshare.eval_i8$g    android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl
be.brunoparmentier.apkshare.eval_i8$m    android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl
be.brunoparmentier.apkshare.eval_i8$o    android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl
be.brunoparmentier.apkshare.eval_ip$f    public android.support.v4.widget.SearchViewCompatIcs$MySearchView
be.brunoparmentier.apkshare.eval_it$y    public android.support.v4.media.MediaMetadataCompatApi21$Builder
be.brunoparmentier.apkshare.eval_iy$w    abstract interface android.support.v7.widget.RoundRectDrawableWithShadow$RoundRectHelper
be.brunoparmentier.apkshare.eval_j1$1    final android.support.v4.app.FragmentTransitionCompat21$1
be.brunoparmentier.apkshare.eval_j1$2    final android.support.v4.app.FragmentTransitionCompat21$2
be.brunoparmentier.apkshare.eval_j1$3    final android.support.v4.app.FragmentTransitionCompat21$3
be.brunoparmentier.apkshare.eval_j1$4    final android.support.v4.app.FragmentTransitionCompat21$4
be.brunoparmentier.apkshare.eval_j1$k    public android.support.v4.app.FragmentTransitionCompat21$EpicenterView
be.brunoparmentier.apkshare.eval_j2$1    android.support.v4.app.BackStackRecord$1
be.brunoparmentier.apkshare.eval_j2$2    android.support.v4.app.BackStackRecord$2
be.brunoparmentier.apkshare.eval_j2$3    android.support.v4.app.BackStackRecord$3
be.brunoparmentier.apkshare.eval_j2$e    final android.support.v4.app.BackStackRecord$Op
be.brunoparmentier.apkshare.eval_j2$z    public android.support.v4.app.BackStackRecord$TransitionState
be.brunoparmentier.apkshare.eval_jc$1    android.support.v7.internal.widget.ActivityChooserModel$1
be.brunoparmentier.apkshare.eval_jc$g    final android.support.v7.internal.widget.ActivityChooserModel$PersistHistoryAsyncTask
be.brunoparmentier.apkshare.eval_jc$i    public abstract interface android.support.v7.internal.widget.ActivityChooserModel$ActivityChooserModelClient
be.brunoparmentier.apkshare.eval_jc$k    final android.support.v7.internal.widget.ActivityChooserModel$DefaultSorter
be.brunoparmentier.apkshare.eval_jc$o    public abstract interface android.support.v7.internal.widget.ActivityChooserModel$ActivitySorter
be.brunoparmentier.apkshare.eval_jc$r    public abstract interface android.support.v7.internal.widget.ActivityChooserModel$OnChooseActivityListener
be.brunoparmentier.apkshare.eval_jc$v    public final android.support.v7.internal.widget.ActivityChooserModel$ActivityResolveInfo
be.brunoparmentier.apkshare.eval_jf$1    final android.support.v4.media.MediaMetadataCompat$1
be.brunoparmentier.apkshare.eval_jf$k    public final android.support.v4.media.MediaMetadataCompat$Builder
be.brunoparmentier.apkshare.eval_ju$f    android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1
be.brunoparmentier.apkshare.eval_ju$g    abstract interface android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl
be.brunoparmentier.apkshare.eval_ju$j    android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase
be.brunoparmentier.apkshare.eval_jx$1    final android.support.v4.app.BackStackState$1
be.brunoparmentier.apkshare.eval_k6$1    android.support.v4.widget.MaterialProgressDrawable$1
be.brunoparmentier.apkshare.eval_k6$2    android.support.v4.widget.MaterialProgressDrawable$2
be.brunoparmentier.apkshare.eval_k6$3    android.support.v4.widget.MaterialProgressDrawable$3
be.brunoparmentier.apkshare.eval_k6$h    android.support.v4.widget.MaterialProgressDrawable$Ring
be.brunoparmentier.apkshare.eval_k6$x    public abstract interface android.support.v4.widget.MaterialProgressDrawable$ProgressDrawableSize
be.brunoparmentier.apkshare.eval_k9$1    final android.support.v4.speech.tts.TextToSpeechICSMR1$1
be.brunoparmentier.apkshare.eval_k9$2    final android.support.v4.speech.tts.TextToSpeechICSMR1$2
be.brunoparmentier.apkshare.eval_k9$c    abstract interface android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1
be.brunoparmentier.apkshare.eval_kb$1    android.support.v4.media.VolumeProviderCompat$1
be.brunoparmentier.apkshare.eval_kb$z    public abstract android.support.v4.media.VolumeProviderCompat$Callback
be.brunoparmentier.apkshare.eval_kd$b    final android.support.v4.util.MapCollections$MapIterator
be.brunoparmentier.apkshare.eval_kd$l    final android.support.v4.util.MapCollections$ValuesCollection
be.brunoparmentier.apkshare.eval_kd$n    final android.support.v4.util.MapCollections$ArrayIterator
be.brunoparmentier.apkshare.eval_kd$p    final android.support.v4.util.MapCollections$KeySet
be.brunoparmentier.apkshare.eval_kh$1    android.support.v4.media.session.MediaSessionCompat$1
be.brunoparmentier.apkshare.eval_kh$d    abstract interface android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl
be.brunoparmentier.apkshare.eval_kh$l    public abstract android.support.v4.media.session.MediaSessionCompat$Callback
be.brunoparmentier.apkshare.eval_kh$p    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase
be.brunoparmentier.apkshare.eval_kh$q    public final android.support.v4.media.session.MediaSessionCompat$QueueItem
be.brunoparmentier.apkshare.eval_kh$t    public abstract interface android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener
be.brunoparmentier.apkshare.eval_kh$w    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21
be.brunoparmentier.apkshare.eval_kh$y    public final android.support.v4.media.session.MediaSessionCompat$Token
be.brunoparmentier.apkshare.eval_ki$1    android.support.v7.internal.widget.ActivityChooserView$1
be.brunoparmentier.apkshare.eval_ki$2    android.support.v7.internal.widget.ActivityChooserView$2
be.brunoparmentier.apkshare.eval_ki$3    android.support.v7.internal.widget.ActivityChooserView$3
be.brunoparmentier.apkshare.eval_ki$4    android.support.v7.internal.widget.ActivityChooserView$4
be.brunoparmentier.apkshare.eval_ki$i    android.support.v7.internal.widget.ActivityChooserView$Callbacks
be.brunoparmentier.apkshare.eval_ki$q    android.support.v7.internal.widget.ActivityChooserView$ActivityChooserViewAdapter
be.brunoparmentier.apkshare.eval_ki$y    public android.support.v7.internal.widget.ActivityChooserView$InnerLayout
be.brunoparmentier.apkshare.eval_kq$1    android.support.v4.print.PrintHelper$1
be.brunoparmentier.apkshare.eval_kq$g    final android.support.v4.print.PrintHelper$PrintHelperStubImpl
be.brunoparmentier.apkshare.eval_kq$n    final android.support.v4.print.PrintHelper$PrintHelperKitkatImpl
be.brunoparmentier.apkshare.eval_kq$v    public abstract interface android.support.v4.print.PrintHelper$OnPrintFinishCallback
be.brunoparmentier.apkshare.eval_kq$x    abstract interface android.support.v4.print.PrintHelper$PrintHelperVersionImpl
be.brunoparmentier.apkshare.eval_kr$p    public android.support.v4.app.NotificationCompatKitKat$Builder
be.brunoparmentier.apkshare.eval_l0$1    android.support.v4.widget.AutoScrollHelper$1
be.brunoparmentier.apkshare.eval_l0$b    android.support.v4.widget.AutoScrollHelper$ClampedScroller
be.brunoparmentier.apkshare.eval_l0$m    android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable
be.brunoparmentier.apkshare.eval_l2$i    android.support.v4.view.LayoutInflaterCompatBase$FactoryWrapper
be.brunoparmentier.apkshare.eval_l7$1    android.support.v7.internal.app.ToolbarActionBar$1
be.brunoparmentier.apkshare.eval_l7$2    android.support.v7.internal.app.ToolbarActionBar$2
be.brunoparmentier.apkshare.eval_l7$d    final android.support.v7.internal.app.ToolbarActionBar$PanelMenuPresenterCallback
be.brunoparmentier.apkshare.eval_l7$k    final android.support.v7.internal.app.ToolbarActionBar$ActionMenuPresenterCallback
be.brunoparmentier.apkshare.eval_l7$u    final android.support.v7.internal.app.ToolbarActionBar$MenuBuilderCallback
be.brunoparmentier.apkshare.eval_l7$z    android.support.v7.internal.app.ToolbarActionBar$ToolbarCallbackWrapper
be.brunoparmentier.apkshare.eval_l8$c    public android.support.v4.util.Pools$SimplePool
be.brunoparmentier.apkshare.eval_l8$q    public abstract interface android.support.v4.util.Pools$Pool
be.brunoparmentier.apkshare.eval_l8$v    public android.support.v4.util.Pools$SynchronizedPool
be.brunoparmentier.apkshare.eval_l9$j    public android.support.v7.app.AlertDialog$Builder
be.brunoparmentier.apkshare.eval_le$c    android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl
be.brunoparmentier.apkshare.eval_le$p    android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl
be.brunoparmentier.apkshare.eval_le$s    abstract interface android.support.v4.widget.PopupMenuCompat$PopupMenuImpl
be.brunoparmentier.apkshare.eval_lh$1    final android.support.v4.app.FragmentState$1
be.brunoparmentier.apkshare.eval_li$v    android.support.v4.app.ActivityCompat21$SharedElementCallbackImpl
be.brunoparmentier.apkshare.eval_li$x    public abstract android.support.v4.app.ActivityCompat21$SharedElementCallback21
be.brunoparmentier.apkshare.eval_lm$1    android.support.v7.app.AppCompatDelegateImplV7$1
be.brunoparmentier.apkshare.eval_lm$2    android.support.v7.app.AppCompatDelegateImplV7$2
be.brunoparmentier.apkshare.eval_lm$3    android.support.v7.app.AppCompatDelegateImplV7$3
be.brunoparmentier.apkshare.eval_lm$4    android.support.v7.app.AppCompatDelegateImplV7$4
be.brunoparmentier.apkshare.eval_lm$l    final android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState
be.brunoparmentier.apkshare.eval_lm$m    final android.support.v7.app.AppCompatDelegateImplV7$ActionMenuPresenterCallback
be.brunoparmentier.apkshare.eval_lm$o    android.support.v7.app.AppCompatDelegateImplV7$ActionModeCallbackWrapperV7
be.brunoparmentier.apkshare.eval_lm$u    android.support.v7.app.AppCompatDelegateImplV7$ListMenuDecorView
be.brunoparmentier.apkshare.eval_lu$1    android.support.v7.widget.ActionMenuPresenter$1
be.brunoparmentier.apkshare.eval_lu$d    android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu
be.brunoparmentier.apkshare.eval_lu$i    android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton
be.brunoparmentier.apkshare.eval_lu$n    android.support.v7.widget.ActionMenuPresenter$OverflowPopup
be.brunoparmentier.apkshare.eval_lu$r    android.support.v7.widget.ActionMenuPresenter$ActionMenuPopupCallback
be.brunoparmentier.apkshare.eval_lu$t    android.support.v7.widget.ActionMenuPresenter$PopupPresenterCallback
be.brunoparmentier.apkshare.eval_lu$w    android.support.v7.widget.ActionMenuPresenter$SavedState
be.brunoparmentier.apkshare.eval_m8$m    android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl
be.brunoparmentier.apkshare.eval_m8$x    android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl
be.brunoparmentier.apkshare.eval_mo$_    android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl
be.brunoparmentier.apkshare.eval_mo$a    android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl
be.brunoparmentier.apkshare.eval_mo$o    android.support.v4.view.MotionEventCompat$GingerbreadMotionEventVersionImpl
be.brunoparmentier.apkshare.eval_mo$p    abstract interface android.support.v4.view.MotionEventCompat$MotionEventVersionImpl
be.brunoparmentier.apkshare.eval_mo$u    android.support.v4.view.MotionEventCompat$HoneycombMr1MotionEventVersionImpl
be.brunoparmentier.apkshare.eval_mp$k    abstract interface android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl
be.brunoparmentier.apkshare.eval_mp$o    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase
be.brunoparmentier.apkshare.eval_mp$s    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2
be.brunoparmentier.apkshare.eval_mt$1    android.support.v7.widget.SwitchCompat$1
be.brunoparmentier.apkshare.eval_mu$a    android.support.v7.internal.view.SupportMenuInflater$MenuState
be.brunoparmentier.apkshare.eval_mu$e    android.support.v7.internal.view.SupportMenuInflater$InflatedOnMenuItemClickListener
be.brunoparmentier.apkshare.eval_n2$1    android.support.v7.app.AlertController$1
be.brunoparmentier.apkshare.eval_n2$b    final android.support.v7.app.AlertController$ButtonHandler
be.brunoparmentier.apkshare.eval_n2$t    android.support.v7.app.AlertController$CheckedItemAdapter
be.brunoparmentier.apkshare.eval_n2$x    public android.support.v7.app.AlertController$AlertParams
be.brunoparmentier.apkshare.eval_n4$1    android.support.v7.widget.StaggeredGridLayoutManager$1
be.brunoparmentier.apkshare.eval_n4$2    android.support.v7.widget.StaggeredGridLayoutManager$2
be.brunoparmentier.apkshare.eval_n4$_    public android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams
be.brunoparmentier.apkshare.eval_n4$j    android.support.v7.widget.StaggeredGridLayoutManager$Span
be.brunoparmentier.apkshare.eval_n4$l    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup
be.brunoparmentier.apkshare.eval_n4$n    android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo
be.brunoparmentier.apkshare.eval_n5$_    android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl
be.brunoparmentier.apkshare.eval_n5$h    android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl
be.brunoparmentier.apkshare.eval_n5$o    abstract interface android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl
be.brunoparmentier.apkshare.eval_n8$c    final android.support.v4.content.AsyncTaskLoader$LoadTask
be.brunoparmentier.apkshare.eval_nb$1    android.support.v7.internal.widget.ActionBarOverlayLayout$1
be.brunoparmentier.apkshare.eval_nb$2    android.support.v7.internal.widget.ActionBarOverlayLayout$2
be.brunoparmentier.apkshare.eval_nb$3    android.support.v7.internal.widget.ActionBarOverlayLayout$3
be.brunoparmentier.apkshare.eval_nb$4    android.support.v7.internal.widget.ActionBarOverlayLayout$4
be.brunoparmentier.apkshare.eval_nb$l    public abstract interface android.support.v7.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback
be.brunoparmentier.apkshare.eval_nj$e    android.support.v7.widget.ChildHelper$Bucket
be.brunoparmentier.apkshare.eval_nj$z    abstract interface android.support.v7.widget.ChildHelper$Callback
be.brunoparmentier.apkshare.eval_nl$o    public abstract android.support.v4.media.session.IMediaSession$Stub
be.brunoparmentier.apkshare.eval_nn$1    android.support.v4.app.FragmentActivity$1
be.brunoparmentier.apkshare.eval_nn$2    android.support.v4.app.FragmentActivity$2
be.brunoparmentier.apkshare.eval_nn$t    final android.support.v4.app.FragmentActivity$NonConfigurationInstances
be.brunoparmentier.apkshare.eval_nt$s    android.support.v4.widget.CircleImageView$OvalShadow
be.brunoparmentier.apkshare.eval_nz$n    abstract interface android.support.v7.widget.AdapterHelper$Callback
be.brunoparmentier.apkshare.eval_nz$u    android.support.v7.widget.AdapterHelper$UpdateOp
be.brunoparmentier.apkshare.eval_o6$v    public abstract android.support.v4.media.session.IMediaControllerCallback$Stub
be.brunoparmentier.apkshare.eval_o8$_    android.support.v4.widget.NestedScrollView$AccessibilityDelegate
be.brunoparmentier.apkshare.eval_o8$j    android.support.v4.widget.NestedScrollView$SavedState
be.brunoparmentier.apkshare.eval_oh$1    android.support.v4.widget.ContentLoadingProgressBar$1
be.brunoparmentier.apkshare.eval_oh$2    android.support.v4.widget.ContentLoadingProgressBar$2
be.brunoparmentier.apkshare.eval_ok$o    android.support.v4.widget.DrawerLayoutCompatApi21$InsetsListener
be.brunoparmentier.apkshare.eval_oo$1    android.support.v7.internal.widget.AbsActionBarView$1
be.brunoparmentier.apkshare.eval_oo$m    public android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener
be.brunoparmentier.apkshare.eval_op$1    android.support.v4.app.NotificationCompat$1
be.brunoparmentier.apkshare.eval_op$_    abstract interface android.support.v4.app.NotificationCompat$NotificationCompatImpl
be.brunoparmentier.apkshare.eval_op$a    public android.support.v4.app.NotificationCompat$Builder
be.brunoparmentier.apkshare.eval_op$e    android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich
be.brunoparmentier.apkshare.eval_op$g    android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread
be.brunoparmentier.apkshare.eval_op$h    public android.support.v4.app.NotificationCompat$BuilderExtender
be.brunoparmentier.apkshare.eval_op$i    public abstract android.support.v4.app.NotificationCompat$Style
be.brunoparmentier.apkshare.eval_op$l    public android.support.v4.app.NotificationCompat$BigTextStyle
be.brunoparmentier.apkshare.eval_op$m    android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb
be.brunoparmentier.apkshare.eval_op$p    android.support.v4.app.NotificationCompat$NotificationCompatImplApi20
be.brunoparmentier.apkshare.eval_op$q    public final android.support.v4.app.NotificationCompat$WearableExtender
be.brunoparmentier.apkshare.eval_op$r    public android.support.v4.app.NotificationCompat$Action
be.brunoparmentier.apkshare.eval_op$u    public android.support.v4.app.NotificationCompat$InboxStyle
be.brunoparmentier.apkshare.eval_op$v    public abstract interface android.support.v4.app.NotificationCompat$Extender
be.brunoparmentier.apkshare.eval_op$w    android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat
be.brunoparmentier.apkshare.eval_op$x    android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean
be.brunoparmentier.apkshare.eval_op$y    public android.support.v4.app.NotificationCompat$BigPictureStyle
be.brunoparmentier.apkshare.eval_oq$1    final android.support.v4.media.session.ParcelableVolumeInfo$1
be.brunoparmentier.apkshare.eval_ox$1    android.support.v7.widget.SearchView$1
be.brunoparmentier.apkshare.eval_ox$2    android.support.v7.widget.SearchView$2
be.brunoparmentier.apkshare.eval_ox$3    android.support.v7.widget.SearchView$3
be.brunoparmentier.apkshare.eval_ox$4    android.support.v7.widget.SearchView$4
be.brunoparmentier.apkshare.eval_ox$5    android.support.v7.widget.SearchView$5
be.brunoparmentier.apkshare.eval_ox$6    android.support.v7.widget.SearchView$6
be.brunoparmentier.apkshare.eval_ox$7    android.support.v7.widget.SearchView$7
be.brunoparmentier.apkshare.eval_ox$8    android.support.v7.widget.SearchView$8
be.brunoparmentier.apkshare.eval_ox$9    android.support.v7.widget.SearchView$9
be.brunoparmentier.apkshare.eval_ox$g    public abstract interface android.support.v7.widget.SearchView$OnQueryTextListener
be.brunoparmentier.apkshare.eval_ox$m    android.support.v7.widget.SearchView$AutoCompleteTextViewReflector
be.brunoparmentier.apkshare.eval_ox$n    public abstract interface android.support.v7.widget.SearchView$OnCloseListener
be.brunoparmentier.apkshare.eval_ox$p    public abstract interface android.support.v7.widget.SearchView$OnSuggestionListener
be.brunoparmentier.apkshare.eval_ox$v    public android.support.v7.widget.SearchView$SearchAutoComplete
be.brunoparmentier.apkshare.eval_p2$j    android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl
be.brunoparmentier.apkshare.eval_p2$s    android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl
be.brunoparmentier.apkshare.eval_p2$u    android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl
be.brunoparmentier.apkshare.eval_p2$x    abstract interface android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl
be.brunoparmentier.apkshare.eval_p2$y    android.support.v4.graphics.drawable.DrawableCompat$LollipopMr1DrawableImpl
be.brunoparmentier.apkshare.eval_p2$z    android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl
be.brunoparmentier.apkshare.eval_p5$q    android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21$CollectionItemInfo
be.brunoparmentier.apkshare.eval_p6$j    public android.support.v4.app.NotificationCompatApi21$Builder
be.brunoparmentier.apkshare.eval_p7$a    android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy
be.brunoparmentier.apkshare.eval_p7$d    public android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo
be.brunoparmentier.apkshare.eval_p7$i    public android.support.v4.media.session.MediaControllerCompatApi21$TransportControls
be.brunoparmentier.apkshare.eval_p7$r    public abstract interface android.support.v4.media.session.MediaControllerCompatApi21$Callback
be.brunoparmentier.apkshare.eval_p8$_    abstract interface android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl
be.brunoparmentier.apkshare.eval_p8$f    android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl
be.brunoparmentier.apkshare.eval_p8$g    android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl
be.brunoparmentier.apkshare.eval_p8$p    public abstract android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat
be.brunoparmentier.apkshare.eval_p8$r    public abstract android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat
be.brunoparmentier.apkshare.eval_p8$s    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl
be.brunoparmentier.apkshare.eval_pg$1    android.support.v4.text.TextDirectionHeuristicsCompat$1
be.brunoparmentier.apkshare.eval_pg$c    android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong
be.brunoparmentier.apkshare.eval_pg$h    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale
be.brunoparmentier.apkshare.eval_pg$o    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal
be.brunoparmentier.apkshare.eval_pg$r    abstract interface android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm
be.brunoparmentier.apkshare.eval_pg$u    abstract android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl
be.brunoparmentier.apkshare.eval_pg$v    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong
be.brunoparmentier.apkshare.eval_pi$1    android.support.v7.widget.CardViewJellybeanMr1$1
be.brunoparmentier.apkshare.eval_pm$b    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase
be.brunoparmentier.apkshare.eval_pm$c    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb
be.brunoparmentier.apkshare.eval_pm$g    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean
be.brunoparmentier.apkshare.eval_pm$n    abstract interface android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl
be.brunoparmentier.apkshare.eval_pm$o    public abstract interface android.support.v4.app.TaskStackBuilder$SupportParentable
be.brunoparmentier.apkshare.eval_pt$1    android.support.v4.text.BidiFormatter$1
be.brunoparmentier.apkshare.eval_pt$m    public final android.support.v4.text.BidiFormatter$Builder
be.brunoparmentier.apkshare.eval_pt$q    android.support.v4.text.BidiFormatter$DirectionalityEstimator
be.brunoparmentier.apkshare.eval_q5$1    android.support.v4.view.ViewPropertyAnimatorCompat$1
be.brunoparmentier.apkshare.eval_q5$c    android.support.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl
be.brunoparmentier.apkshare.eval_q5$g    android.support.v4.view.ViewPropertyAnimatorCompat$LollipopViewPropertyAnimatorCompatImpl
be.brunoparmentier.apkshare.eval_q5$i    android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl
be.brunoparmentier.apkshare.eval_q5$p    abstract interface android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl
be.brunoparmentier.apkshare.eval_q5$w    android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl
be.brunoparmentier.apkshare.eval_q5$y    android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl
be.brunoparmentier.apkshare.eval_q7$1    android.support.v4.media.session.MediaControllerCompat$1
be.brunoparmentier.apkshare.eval_q7$b    abstract interface android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl
be.brunoparmentier.apkshare.eval_q7$f    public abstract android.support.v4.media.session.MediaControllerCompat$Callback
be.brunoparmentier.apkshare.eval_q7$g    android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase
be.brunoparmentier.apkshare.eval_q7$h    public final android.support.v4.media.session.MediaControllerCompat$PlaybackInfo
be.brunoparmentier.apkshare.eval_q7$k    android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21
be.brunoparmentier.apkshare.eval_q7$q    android.support.v4.media.session.MediaControllerCompat$TransportControlsApi21
be.brunoparmentier.apkshare.eval_qa$b    abstract interface android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl
be.brunoparmentier.apkshare.eval_qa$j    android.support.v4.view.ViewConfigurationCompat$HoneycombViewConfigurationVersionImpl
be.brunoparmentier.apkshare.eval_qa$k    android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl
be.brunoparmentier.apkshare.eval_qa$w    android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl
be.brunoparmentier.apkshare.eval_qa$y    android.support.v4.view.ViewConfigurationCompat$IcsViewConfigurationVersionImpl
be.brunoparmentier.apkshare.eval_qd$k    android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper
be.brunoparmentier.apkshare.eval_qd$o    android.support.v7.internal.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper
be.brunoparmentier.apkshare.eval_qd$q    android.support.v7.internal.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper
be.brunoparmentier.apkshare.eval_qd$z    android.support.v7.internal.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper
be.brunoparmentier.apkshare.eval_qi$1    android.support.v4.widget.CursorAdapter$1
be.brunoparmentier.apkshare.eval_qi$g    android.support.v4.widget.CursorAdapter$MyDataSetObserver
be.brunoparmentier.apkshare.eval_qi$o    android.support.v4.widget.CursorAdapter$ChangeObserver
be.brunoparmentier.apkshare.eval_qk$1    final android.support.v4.widget.SearchViewCompatHoneycomb$1
be.brunoparmentier.apkshare.eval_qk$2    final android.support.v4.widget.SearchViewCompatHoneycomb$2
be.brunoparmentier.apkshare.eval_qk$_    abstract interface android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge
be.brunoparmentier.apkshare.eval_qk$w    abstract interface android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge
be.brunoparmentier.apkshare.eval_qp$m    abstract interface android.support.v4.widget.CursorFilter$CursorFilterClient
be.brunoparmentier.apkshare.eval_qy$h    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl
be.brunoparmentier.apkshare.eval_qy$l    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl
be.brunoparmentier.apkshare.eval_qy$u    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl
be.brunoparmentier.apkshare.eval_qy$w    abstract interface android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl
be.brunoparmentier.apkshare.eval_rb$1    android.support.v7.internal.widget.ScrollingTabContainerView$1
be.brunoparmentier.apkshare.eval_rb$o    public android.support.v7.internal.widget.ScrollingTabContainerView$VisibilityAnimListener
be.brunoparmentier.apkshare.eval_rb$r    android.support.v7.internal.widget.ScrollingTabContainerView$TabAdapter
be.brunoparmentier.apkshare.eval_rb$v    android.support.v7.internal.widget.ScrollingTabContainerView$TabView
be.brunoparmentier.apkshare.eval_rb$x    android.support.v7.internal.widget.ScrollingTabContainerView$TabClickListener
be.brunoparmentier.apkshare.eval_rc$v    android.support.v4.os.ParcelableCompat$CompatCreator
be.brunoparmentier.apkshare.eval_rd$1    android.support.v4.widget.ExploreByTouchHelper$1
be.brunoparmentier.apkshare.eval_rd$z    android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider
be.brunoparmentier.apkshare.eval_rk$j    public android.support.v4.media.MediaDescriptionCompatApi21$Builder
be.brunoparmentier.apkshare.eval_rr$w    public abstract interface android.support.v7.internal.widget.ViewStubCompat$OnInflateListener
be.brunoparmentier.apkshare.eval_ry$k    android.support.v4.widget.EdgeEffectCompat$EdgeEffectLollipopImpl
be.brunoparmentier.apkshare.eval_ry$n    abstract interface android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl
be.brunoparmentier.apkshare.eval_ry$p    android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl
be.brunoparmentier.apkshare.eval_ry$s    android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl
be.brunoparmentier.apkshare.eval_s2$a    android.support.v4.graphics.BitmapCompat$KitKatBitmapCompatImpl
be.brunoparmentier.apkshare.eval_s2$b    android.support.v4.graphics.BitmapCompat$BaseBitmapImpl
be.brunoparmentier.apkshare.eval_s2$i    android.support.v4.graphics.BitmapCompat$HcMr1BitmapCompatImpl
be.brunoparmentier.apkshare.eval_s2$o    android.support.v4.graphics.BitmapCompat$JbMr2BitmapCompatImpl
be.brunoparmentier.apkshare.eval_s2$y    abstract interface android.support.v4.graphics.BitmapCompat$BitmapImpl
be.brunoparmentier.apkshare.eval_s6$1    android.support.v7.widget.RecyclerViewAccessibilityDelegate$1
be.brunoparmentier.apkshare.eval_sd$b    android.support.v4.app.NavUtils$NavUtilsImplJB
be.brunoparmentier.apkshare.eval_sd$m    android.support.v4.app.NavUtils$NavUtilsImplBase
be.brunoparmentier.apkshare.eval_sd$t    abstract interface android.support.v4.app.NavUtils$NavUtilsImpl
be.brunoparmentier.apkshare.eval_se$b    android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl
be.brunoparmentier.apkshare.eval_se$f    abstract interface android.support.v4.view.MenuItemCompat$MenuVersionImpl
be.brunoparmentier.apkshare.eval_se$r    public abstract interface android.support.v4.view.MenuItemCompat$OnActionExpandListener
be.brunoparmentier.apkshare.eval_se$s    android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl
be.brunoparmentier.apkshare.eval_se$u    android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl
be.brunoparmentier.apkshare.eval_sh$1    android.support.v7.app.ActionBarDrawerToggle$1
be.brunoparmentier.apkshare.eval_sh$_    public abstract interface android.support.v7.app.ActionBarDrawerToggle$Delegate
be.brunoparmentier.apkshare.eval_sh$c    abstract interface android.support.v7.app.ActionBarDrawerToggle$DrawerToggle
be.brunoparmentier.apkshare.eval_sh$n    android.support.v7.app.ActionBarDrawerToggle$HoneycombDelegate
be.brunoparmentier.apkshare.eval_sh$o    android.support.v7.app.ActionBarDrawerToggle$DummyDelegate
be.brunoparmentier.apkshare.eval_sh$v    public abstract interface android.support.v7.app.ActionBarDrawerToggle$DelegateProvider
be.brunoparmentier.apkshare.eval_sh$x    android.support.v7.app.ActionBarDrawerToggle$ToolbarCompatDelegate
be.brunoparmentier.apkshare.eval_sh$y    android.support.v7.app.ActionBarDrawerToggle$DrawerArrowDrawableToggle
be.brunoparmentier.apkshare.eval_su$1    be.brunoparmentier.apkshare.AppAdapter$1
be.brunoparmentier.apkshare.eval_su$t    public be.brunoparmentier.apkshare.AppAdapter$AppViewHolder
be.brunoparmentier.apkshare.eval_sv$e    android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplApi21
be.brunoparmentier.apkshare.eval_sv$f    android.support.v4.widget.DrawerLayout$AccessibilityDelegate
be.brunoparmentier.apkshare.eval_sv$j    public abstract android.support.v4.widget.DrawerLayout$SimpleDrawerListener
be.brunoparmentier.apkshare.eval_sv$m    public android.support.v4.widget.DrawerLayout$SavedState
be.brunoparmentier.apkshare.eval_sv$n    abstract interface android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl
be.brunoparmentier.apkshare.eval_sv$q    final android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate
be.brunoparmentier.apkshare.eval_sv$x    public abstract interface android.support.v4.widget.DrawerLayout$DrawerListener
be.brunoparmentier.apkshare.eval_sv$z    android.support.v4.widget.DrawerLayout$ViewDragCallback
be.brunoparmentier.apkshare.eval_t6$s    public android.support.v4.app.NotificationCompatJellybean$Builder
be.brunoparmentier.apkshare.eval_tf$1    final android.support.v4.media.MediaDescriptionCompat$1
be.brunoparmentier.apkshare.eval_tf$c    public final android.support.v4.media.MediaDescriptionCompat$Builder
be.brunoparmentier.apkshare.eval_tk$1    final android.support.v4.content.ModernAsyncTask$1
be.brunoparmentier.apkshare.eval_tk$2    android.support.v4.content.ModernAsyncTask$2
be.brunoparmentier.apkshare.eval_tk$3    android.support.v4.content.ModernAsyncTask$3
be.brunoparmentier.apkshare.eval_tk$4    android.support.v4.content.ModernAsyncTask$4
be.brunoparmentier.apkshare.eval_tk$j    public final android.support.v4.content.ModernAsyncTask$Status
be.brunoparmentier.apkshare.eval_tk$l    android.support.v4.content.ModernAsyncTask$InternalHandler
be.brunoparmentier.apkshare.eval_tk$o    abstract android.support.v4.content.ModernAsyncTask$WorkerRunnable
be.brunoparmentier.apkshare.eval_tk$r    android.support.v4.content.ModernAsyncTask$AsyncTaskResult
be.brunoparmentier.apkshare.eval_tl$1    android.support.v7.app.AppCompatDelegateImplBase$1
be.brunoparmentier.apkshare.eval_tl$a    android.support.v7.app.AppCompatDelegateImplBase$AppCompatWindowCallbackBase
be.brunoparmentier.apkshare.eval_tl$u    android.support.v7.app.AppCompatDelegateImplBase$ActionBarDrawableToggleImpl
be.brunoparmentier.apkshare.eval_tm$a    abstract interface android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl
be.brunoparmentier.apkshare.eval_tm$k    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl
be.brunoparmentier.apkshare.eval_tm$u    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventKitKatImpl
be.brunoparmentier.apkshare.eval_tm$v    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl
be.brunoparmentier.apkshare.eval_tp$e    public abstract android.support.v4.app.INotificationSideChannel$Stub
be.brunoparmentier.apkshare.eval_tw$1    android.support.v7.internal.view.ViewPropertyAnimatorCompatSet$1
be.brunoparmentier.apkshare.eval_u3$e    public final android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround
be.brunoparmentier.apkshare.eval_u3$l    public final android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround
be.brunoparmentier.apkshare.eval_u3$r    android.support.v4.media.routing.MediaRouterJellybeanMr1$CallbackProxy
be.brunoparmentier.apkshare.eval_u3$u    public abstract interface android.support.v4.media.routing.MediaRouterJellybeanMr1$Callback
be.brunoparmentier.apkshare.eval_u3$v    public final android.support.v4.media.routing.MediaRouterJellybeanMr1$RouteInfo
be.brunoparmentier.apkshare.eval_ug$d    android.support.v7.internal.widget.TintManager$ColorFilterLruCache
be.brunoparmentier.apkshare.eval_ul$1    android.support.v7.widget.ShareActionProvider$1
be.brunoparmentier.apkshare.eval_ul$q    public abstract interface android.support.v7.widget.ShareActionProvider$OnShareTargetSelectedListener
be.brunoparmentier.apkshare.eval_ul$r    android.support.v7.widget.ShareActionProvider$ShareActivityChooserModelPolicy
be.brunoparmentier.apkshare.eval_ul$y    android.support.v7.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener
be.brunoparmentier.apkshare.eval_um$1    final android.support.v4.view.ViewPropertyAnimatorCompatJB$1
be.brunoparmentier.apkshare.eval_ut$d    android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl
be.brunoparmentier.apkshare.eval_ut$f    android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl
be.brunoparmentier.apkshare.eval_ut$m    android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl
be.brunoparmentier.apkshare.eval_ut$u    abstract interface android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl
be.brunoparmentier.apkshare.eval_ut$y    android.support.v4.view.ViewGroupCompat$ViewGroupCompatLollipopImpl
be.brunoparmentier.apkshare.eval_uv$s    android.support.v7.app.AppCompatDelegateImplV14$AppCompatWindowCallbackV14
be.brunoparmentier.apkshare.eval_uy$b    android.support.v7.internal.view.menu.ListMenuPresenter$MenuAdapter
be.brunoparmentier.apkshare.eval_v4$d    android.support.v4.app.NotificationManagerCompat$ImplEclair
be.brunoparmentier.apkshare.eval_v4$f    abstract interface android.support.v4.app.NotificationManagerCompat$Impl
be.brunoparmentier.apkshare.eval_v4$g    abstract interface android.support.v4.app.NotificationManagerCompat$Task
be.brunoparmentier.apkshare.eval_v4$j    android.support.v4.app.NotificationManagerCompat$CancelTask
be.brunoparmentier.apkshare.eval_v4$l    android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent
be.brunoparmentier.apkshare.eval_v4$m    android.support.v4.app.NotificationManagerCompat$NotifyTask
be.brunoparmentier.apkshare.eval_v4$r    android.support.v4.app.NotificationManagerCompat$SideChannelManager
be.brunoparmentier.apkshare.eval_v4$t    android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich
be.brunoparmentier.apkshare.eval_v6$t    android.support.v4.app.ActivityCompat$SharedElementCallback21Impl
be.brunoparmentier.apkshare.eval_vb$t    final android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction
be.brunoparmentier.apkshare.eval_vh$q    public android.support.v4.app.NotificationCompatApi20$Builder
be.brunoparmentier.apkshare.eval_vi$1    android.support.v4.widget.SlidingPaneLayout$1
be.brunoparmentier.apkshare.eval_vi$f    public android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener
be.brunoparmentier.apkshare.eval_vi$l    android.support.v4.widget.SlidingPaneLayout$SavedState
be.brunoparmentier.apkshare.eval_vi$m    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB
be.brunoparmentier.apkshare.eval_vi$t    android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate
be.brunoparmentier.apkshare.eval_vi$u    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1
be.brunoparmentier.apkshare.eval_vi$v    android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable
be.brunoparmentier.apkshare.eval_vi$w    android.support.v4.widget.SlidingPaneLayout$DragHelperCallback
be.brunoparmentier.apkshare.eval_vi$x    public android.support.v4.widget.SlidingPaneLayout$LayoutParams
be.brunoparmentier.apkshare.eval_vi$z    abstract interface android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl
be.brunoparmentier.apkshare.eval_vj$b    android.support.v7.widget.helper.ItemTouchUIUtilImpl$Gingerbread
be.brunoparmentier.apkshare.eval_vj$u    android.support.v7.widget.helper.ItemTouchUIUtilImpl$Lollipop
be.brunoparmentier.apkshare.eval_vj$v    android.support.v7.widget.helper.ItemTouchUIUtilImpl$Honeycomb
be.brunoparmentier.apkshare.eval_vm$_    public abstract interface android.support.v7.view.ActionMode$Callback
be.brunoparmentier.apkshare.eval_vq$1    android.support.v4.view.PagerTitleStrip$1
be.brunoparmentier.apkshare.eval_vq$_    android.support.v4.view.PagerTitleStrip$PageListener
be.brunoparmentier.apkshare.eval_vq$e    android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase
be.brunoparmentier.apkshare.eval_vq$f    abstract interface android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl
be.brunoparmentier.apkshare.eval_vq$y    android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs
be.brunoparmentier.apkshare.eval_vw$1    android.support.v4.app.Fragment$1
be.brunoparmentier.apkshare.eval_vw$r    public android.support.v4.app.Fragment$InstantiationException
be.brunoparmentier.apkshare.eval_vw$y    public android.support.v4.app.Fragment$SavedState
be.brunoparmentier.apkshare.eval_vz$1    final android.support.v4.media.VolumeProviderCompatApi21$1
be.brunoparmentier.apkshare.eval_vz$f    public abstract interface android.support.v4.media.VolumeProviderCompatApi21$Delegate
be.brunoparmentier.apkshare.eval_w6$1    android.support.v4.net.TrafficStatsCompat$1
be.brunoparmentier.apkshare.eval_w6$c    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl
be.brunoparmentier.apkshare.eval_w6$x    abstract interface android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl
be.brunoparmentier.apkshare.eval_w8$e    public abstract android.support.v7.util.SortedList$Callback
be.brunoparmentier.apkshare.eval_w8$n    public android.support.v7.util.SortedList$BatchedCallback
be.brunoparmentier.apkshare.eval_we$q    public abstract interface android.support.v4.view.ActionProvider$SubUiVisibilityListener
be.brunoparmentier.apkshare.eval_we$t    public abstract interface android.support.v4.view.ActionProvider$VisibilityListener
be.brunoparmentier.apkshare.eval_wj$1    final android.support.v4.media.RatingCompat$1
be.brunoparmentier.apkshare.eval_wn$l    public abstract interface android.support.v7.internal.widget.FitWindowsViewGroup$OnFitSystemWindowsListener
be.brunoparmentier.apkshare.eval_wp$d    abstract interface android.support.v4.widget.TextViewCompat$TextViewCompatImpl
be.brunoparmentier.apkshare.eval_wp$f    android.support.v4.widget.TextViewCompat$JbMr1TextViewCompatImpl
be.brunoparmentier.apkshare.eval_wp$g    android.support.v4.widget.TextViewCompat$JbMr2TextViewCompatImpl
be.brunoparmentier.apkshare.eval_wp$q    android.support.v4.widget.TextViewCompat$BaseTextViewCompatImpl
be.brunoparmentier.apkshare.eval_wu$1    android.support.v7.internal.widget.ToolbarWidgetWrapper$1
be.brunoparmentier.apkshare.eval_wu$2    android.support.v7.internal.widget.ToolbarWidgetWrapper$2
be.brunoparmentier.apkshare.eval_wu$3    android.support.v7.internal.widget.ToolbarWidgetWrapper$3
be.brunoparmentier.apkshare.eval_x3$1    final android.support.v4.view.ViewPropertyAnimatorCompatKK$1
be.brunoparmentier.apkshare.eval_x6$1    final android.support.v4.app.FragmentManagerState$1
be.brunoparmentier.apkshare.eval_x_$c    android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1
be.brunoparmentier.apkshare.eval_x_$e    android.support.v4.content.IntentCompat$IntentCompatImplHC
be.brunoparmentier.apkshare.eval_x_$s    android.support.v4.content.IntentCompat$IntentCompatImplBase
be.brunoparmentier.apkshare.eval_x_$w    abstract interface android.support.v4.content.IntentCompat$IntentCompatImpl
be.brunoparmentier.apkshare.eval_xa$1    final android.support.v4.view.AccessibilityDelegateCompatJellyBean$1
be.brunoparmentier.apkshare.eval_xa$v    public abstract interface android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean
be.brunoparmentier.apkshare.eval_xh$i    android.support.v7.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo
be.brunoparmentier.apkshare.eval_xl$1    android.support.v7.widget.ListPopupWindow$1
be.brunoparmentier.apkshare.eval_xl$2    android.support.v7.widget.ListPopupWindow$2
be.brunoparmentier.apkshare.eval_xl$3    android.support.v7.widget.ListPopupWindow$3
be.brunoparmentier.apkshare.eval_xl$_    public abstract android.support.v7.widget.ListPopupWindow$ForwardingListener
be.brunoparmentier.apkshare.eval_xl$a    android.support.v7.widget.ListPopupWindow$DropDownListView
be.brunoparmentier.apkshare.eval_xl$b    android.support.v7.widget.ListPopupWindow$PopupDataSetObserver
be.brunoparmentier.apkshare.eval_xl$l    android.support.v7.widget.ListPopupWindow$ListSelectorHider
be.brunoparmentier.apkshare.eval_xl$n    android.support.v7.widget.ListPopupWindow$PopupScrollListener
be.brunoparmentier.apkshare.eval_xl$q    android.support.v7.widget.ListPopupWindow$PopupTouchInterceptor
be.brunoparmentier.apkshare.eval_xm$_    public final android.support.v4.media.routing.MediaRouterJellybean$RouteCategory
be.brunoparmentier.apkshare.eval_xm$c    public abstract interface android.support.v4.media.routing.MediaRouterJellybean$Callback
be.brunoparmentier.apkshare.eval_xm$f    public final android.support.v4.media.routing.MediaRouterJellybean$RouteInfo
be.brunoparmentier.apkshare.eval_xm$j    public final android.support.v4.media.routing.MediaRouterJellybean$SelectRouteWorkaround
be.brunoparmentier.apkshare.eval_xm$l    public final android.support.v4.media.routing.MediaRouterJellybean$RouteGroup
be.brunoparmentier.apkshare.eval_xm$m    public final android.support.v4.media.routing.MediaRouterJellybean$GetDefaultRouteWorkaround
be.brunoparmentier.apkshare.eval_xm$r    android.support.v4.media.routing.MediaRouterJellybean$VolumeCallbackProxy
be.brunoparmentier.apkshare.eval_xm$s    android.support.v4.media.routing.MediaRouterJellybean$CallbackProxy
be.brunoparmentier.apkshare.eval_xo$u    public final android.support.v4.media.routing.MediaRouterJellybeanMr2$UserRouteInfo
be.brunoparmentier.apkshare.eval_xo$y    public final android.support.v4.media.routing.MediaRouterJellybeanMr2$RouteInfo
be.brunoparmentier.apkshare.eval_xr$e    public abstract interface android.support.v4.app.FragmentManager$OnBackStackChangedListener
be.brunoparmentier.apkshare.eval_xr$g    public abstract interface android.support.v4.app.FragmentManager$BackStackEntry
be.brunoparmentier.apkshare.eval_y2$1    android.support.v4.media.TransportMediatorJellybeanMR2$1
be.brunoparmentier.apkshare.eval_y2$2    android.support.v4.media.TransportMediatorJellybeanMR2$2
be.brunoparmentier.apkshare.eval_y2$3    android.support.v4.media.TransportMediatorJellybeanMR2$3
be.brunoparmentier.apkshare.eval_y2$4    android.support.v4.media.TransportMediatorJellybeanMR2$4
be.brunoparmentier.apkshare.eval_y8$a    abstract interface android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl
be.brunoparmentier.apkshare.eval_y8$f    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl
be.brunoparmentier.apkshare.eval_y8$h    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl
be.brunoparmentier.apkshare.eval_y8$i    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl
be.brunoparmentier.apkshare.eval_y_$f    abstract interface android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl
be.brunoparmentier.apkshare.eval_y_$h    android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl
be.brunoparmentier.apkshare.eval_y_$j    android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl
be.brunoparmentier.apkshare.eval_ya$u    final android.support.v4.app.LoaderManagerImpl$LoaderInfo
be.brunoparmentier.apkshare.eval_yf$1    android.support.v7.widget.LinearLayoutManager$1
be.brunoparmentier.apkshare.eval_yf$e    android.support.v7.widget.LinearLayoutManager$SavedState
be.brunoparmentier.apkshare.eval_yf$h    android.support.v7.widget.LinearLayoutManager$LayoutState
be.brunoparmentier.apkshare.eval_yf$k    public android.support.v7.widget.LinearLayoutManager$LayoutChunkResult
be.brunoparmentier.apkshare.eval_yf$p    android.support.v7.widget.LinearLayoutManager$AnchorInfo
be.brunoparmentier.apkshare.eval_z0$1    android.support.v4.app.FragmentTabHost$1
be.brunoparmentier.apkshare.eval_z0$l    android.support.v4.app.FragmentTabHost$DummyTabFactory
be.brunoparmentier.apkshare.eval_z0$o    android.support.v4.app.FragmentTabHost$SavedState
be.brunoparmentier.apkshare.eval_z0$q    final android.support.v4.app.FragmentTabHost$TabInfo
be.brunoparmentier.apkshare.eval_z2$1    android.support.v7.app.NotificationCompat$1
be.brunoparmentier.apkshare.eval_z2$f    android.support.v7.app.NotificationCompat$JellybeanExtender
be.brunoparmentier.apkshare.eval_z2$h    android.support.v7.app.NotificationCompat$LollipopExtender
be.brunoparmentier.apkshare.eval_z2$m    public android.support.v7.app.NotificationCompat$Builder
be.brunoparmentier.apkshare.eval_z2$w    android.support.v7.app.NotificationCompat$IceCreamSandwichExtender
be.brunoparmentier.apkshare.eval_z7$e    public abstract android.support.v7.app.ActionBar$Tab
be.brunoparmentier.apkshare.eval_z7$f    public abstract interface android.support.v7.app.ActionBar$NavigationMode
be.brunoparmentier.apkshare.eval_z7$h    public abstract interface android.support.v7.app.ActionBar$TabListener
be.brunoparmentier.apkshare.eval_z7$k    public abstract interface android.support.v7.app.ActionBar$OnNavigationListener
be.brunoparmentier.apkshare.eval_z7$m    public abstract interface android.support.v7.app.ActionBar$OnMenuVisibilityListener
be.brunoparmentier.apkshare.eval_z7$p    public abstract interface android.support.v7.app.ActionBar$DisplayOptions
be.brunoparmentier.apkshare.eval_z7$r    public android.support.v7.app.ActionBar$LayoutParams
be.brunoparmentier.apkshare.eval_za$c    public android.support.v4.app.NotificationCompatIceCreamSandwich$Builder
be.brunoparmentier.apkshare.eval_zc$f    android.support.v4.view.ViewCompat$BaseViewCompatImpl
be.brunoparmentier.apkshare.eval_zc$h    android.support.v4.view.ViewCompat$LollipopViewCompatImpl
be.brunoparmentier.apkshare.eval_zc$j    android.support.v4.view.ViewCompat$HCViewCompatImpl
be.brunoparmentier.apkshare.eval_zc$l    android.support.v4.view.ViewCompat$GBViewCompatImpl
be.brunoparmentier.apkshare.eval_zc$n    android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl
be.brunoparmentier.apkshare.eval_zc$p    android.support.v4.view.ViewCompat$JBViewCompatImpl
be.brunoparmentier.apkshare.eval_zc$q    android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl
be.brunoparmentier.apkshare.eval_zc$s    android.support.v4.view.ViewCompat$ICSViewCompatImpl
be.brunoparmentier.apkshare.eval_zd$a    android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionInfo
be.brunoparmentier.apkshare.eval_zd$k    android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$RangeInfo
be.brunoparmentier.apkshare.eval_zd$n    android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionItemInfo
be.brunoparmentier.apkshare.eval_ze$1    android.support.v4.view.PagerTabStrip$1
be.brunoparmentier.apkshare.eval_ze$2    android.support.v4.view.PagerTabStrip$2
be.brunoparmentier.apkshare.eval_zg$1    android.support.v7.widget.ActionMenuView$1
be.brunoparmentier.apkshare.eval_zg$e    public abstract interface android.support.v7.widget.ActionMenuView$OnMenuItemClickListener
be.brunoparmentier.apkshare.eval_zg$i    android.support.v7.widget.ActionMenuView$MenuBuilderCallback
be.brunoparmentier.apkshare.eval_zg$o    android.support.v7.widget.ActionMenuView$ActionMenuPresenterCallback
be.brunoparmentier.apkshare.eval_zg$p    public android.support.v7.widget.ActionMenuView$LayoutParams
be.brunoparmentier.apkshare.eval_zg$q    public abstract interface android.support.v7.widget.ActionMenuView$ActionMenuChildView
be.brunoparmentier.apkshare.eval_zk$1    android.support.v4.print.PrintHelperKitkat$1
be.brunoparmentier.apkshare.eval_zk$2    android.support.v4.print.PrintHelperKitkat$2
be.brunoparmentier.apkshare.eval_zk$l    public abstract interface android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback
be.brunoparmentier.apkshare.eval_zv$1    final android.support.v4.view.ViewPropertyAnimatorCompatICS$1
be.brunoparmentier.apkshare.eval_zy$1    android.support.v4.util.ArrayMap$1
be.brunoparmentier.apkshare.eval_zz$1    final android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1
be.brunoparmentier.apkshare.eval_zz$j    abstract interface android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge
be.brunoparmentier.apkshare.eval_ox$10   android.support.v7.widget.SearchView$10
be.brunoparmentier.apkshare.eval_ox$11   android.support.v7.widget.SearchView$11
be.brunoparmentier.apkshare.eval_ox$12   android.support.v7.widget.SearchView$12
be.brunoparmentier.apkshare.eval_r$u$1   android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator$1
be.brunoparmentier.apkshare.eval__r$b$1  android.support.v7.internal.widget.SpinnerCompat$DropdownPopup$1
be.brunoparmentier.apkshare.eval__r$b$2  android.support.v7.internal.widget.SpinnerCompat$DropdownPopup$2
be.brunoparmentier.apkshare.eval__r$b$3  android.support.v7.internal.widget.SpinnerCompat$DropdownPopup$3
be.brunoparmentier.apkshare.eval__r$e$1  final android.support.v7.internal.widget.SpinnerCompat$SavedState$1
be.brunoparmentier.apkshare.eval_as$i$1  final android.support.v7.internal.widget.AbsSpinnerCompat$SavedState$1
be.brunoparmentier.apkshare.eval_bj$y$r  public android.support.v7.widget.RecyclerView$LayoutManager$Properties
be.brunoparmentier.apkshare.eval_bl$a$1  android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation$1
be.brunoparmentier.apkshare.eval_bl$n$1  final android.support.v7.widget.helper.ItemTouchHelper$Callback$1
be.brunoparmentier.apkshare.eval_bl$n$2  final android.support.v7.widget.helper.ItemTouchHelper$Callback$2
be.brunoparmentier.apkshare.eval_ch$v$1  final android.support.v4.media.session.PlaybackStateCompat$CustomAction$1
be.brunoparmentier.apkshare.eval_ch$v$a  public final android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder
be.brunoparmentier.apkshare.eval_dy$m$1  final android.support.v7.widget.Toolbar$SavedState$1
be.brunoparmentier.apkshare.eval_fb$q$1  final android.support.v4.view.ViewPager$SavedState$1
be.brunoparmentier.apkshare.eval_fk$k$f  public abstract interface android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory
be.brunoparmentier.apkshare.eval_gw$t$e  public abstract interface android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory
be.brunoparmentier.apkshare.eval_gw$y$v  public abstract interface android.support.v4.app.NotificationCompatBase$Action$Factory
be.brunoparmentier.apkshare.eval_ht$c$1  android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1
be.brunoparmentier.apkshare.eval_kh$l$t  android.support.v4.media.session.MediaSessionCompat$Callback$StubApi21
be.brunoparmentier.apkshare.eval_kh$p$1  android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1
be.brunoparmentier.apkshare.eval_kh$p$2  android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$2
be.brunoparmentier.apkshare.eval_kh$p$d  final android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$Command
be.brunoparmentier.apkshare.eval_kh$p$e  android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub
be.brunoparmentier.apkshare.eval_kh$q$1  final android.support.v4.media.session.MediaSessionCompat$QueueItem$1
be.brunoparmentier.apkshare.eval_kh$y$1  final android.support.v4.media.session.MediaSessionCompat$Token$1
be.brunoparmentier.apkshare.eval_kq$n$1  android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$1
be.brunoparmentier.apkshare.eval_kq$n$2  android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$2
be.brunoparmentier.apkshare.eval_lm$l$k  android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState$SavedState
be.brunoparmentier.apkshare.eval_lu$i$1  android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton$1
be.brunoparmentier.apkshare.eval_lu$w$1  final android.support.v7.widget.ActionMenuPresenter$SavedState$1
be.brunoparmentier.apkshare.eval_mp$o$g  android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler
be.brunoparmentier.apkshare.eval_n2$x$1  android.support.v7.app.AlertController$AlertParams$1
be.brunoparmentier.apkshare.eval_n2$x$2  android.support.v7.app.AlertController$AlertParams$2
be.brunoparmentier.apkshare.eval_n2$x$3  android.support.v7.app.AlertController$AlertParams$3
be.brunoparmentier.apkshare.eval_n2$x$4  android.support.v7.app.AlertController$AlertParams$4
be.brunoparmentier.apkshare.eval_n2$x$h  public abstract interface android.support.v7.app.AlertController$AlertParams$OnPrepareListViewListener
be.brunoparmentier.apkshare.eval_n4$l$o  android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem
be.brunoparmentier.apkshare.eval_nl$o$l  android.support.v4.media.session.IMediaSession$Stub$Proxy
be.brunoparmentier.apkshare.eval_o6$v$p  android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy
be.brunoparmentier.apkshare.eval_o8$j$1  final android.support.v4.widget.NestedScrollView$SavedState$1
be.brunoparmentier.apkshare.eval_op$r$1  final android.support.v4.app.NotificationCompat$Action$1
be.brunoparmentier.apkshare.eval_op$r$a  public final android.support.v4.app.NotificationCompat$Action$WearableExtender
be.brunoparmentier.apkshare.eval_op$r$b  public final android.support.v4.app.NotificationCompat$Action$Builder
be.brunoparmentier.apkshare.eval_op$r$p  public abstract interface android.support.v4.app.NotificationCompat$Action$Extender
be.brunoparmentier.apkshare.eval_p8$s$1  android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1
be.brunoparmentier.apkshare.eval_p8$s$2  android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2
be.brunoparmentier.apkshare.eval_q5$i$g  android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl$Starter
be.brunoparmentier.apkshare.eval_q5$y$j  android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$MyVpaListener
be.brunoparmentier.apkshare.eval_q7$f$e  android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler
be.brunoparmentier.apkshare.eval_q7$f$m  android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21
be.brunoparmentier.apkshare.eval_q7$f$z  android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat
be.brunoparmentier.apkshare.eval_qy$h$1  android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1
be.brunoparmentier.apkshare.eval_qy$u$1  android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1
be.brunoparmentier.apkshare.eval_se$u$1  android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1
be.brunoparmentier.apkshare.eval_sv$m$1  final android.support.v4.widget.DrawerLayout$SavedState$1
be.brunoparmentier.apkshare.eval_sv$z$1  android.support.v4.widget.DrawerLayout$ViewDragCallback$1
be.brunoparmentier.apkshare.eval_tp$e$e  android.support.v4.app.INotificationSideChannel$Stub$Proxy
be.brunoparmentier.apkshare.eval_v4$r$j  android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord
be.brunoparmentier.apkshare.eval_vi$l$1  final android.support.v4.widget.SlidingPaneLayout$SavedState$1
be.brunoparmentier.apkshare.eval_vw$y$1  final android.support.v4.app.Fragment$SavedState$1
be.brunoparmentier.apkshare.eval_w6$c$1  android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1
be.brunoparmentier.apkshare.eval_w6$c$y  android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags
be.brunoparmentier.apkshare.eval_xl$_$b  android.support.v7.widget.ListPopupWindow$ForwardingListener$TriggerLongPress
be.brunoparmentier.apkshare.eval_xl$_$o  android.support.v7.widget.ListPopupWindow$ForwardingListener$DisallowIntercept
be.brunoparmentier.apkshare.eval_y8$f$1  android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1
be.brunoparmentier.apkshare.eval_y8$h$1  android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1
be.brunoparmentier.apkshare.eval_yf$e$1  final android.support.v7.widget.LinearLayoutManager$SavedState$1
be.brunoparmentier.apkshare.eval_z0$o$1  final android.support.v4.app.FragmentTabHost$SavedState$1
be.brunoparmentier.apkshare.eval_zk$2$1  android.support.v4.print.PrintHelperKitkat$2$1
be.brunoparmentier.apkshare.eval_lm$l$k$1        final android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState$SavedState$1
be.brunoparmentier.apkshare.eval_n4$l$o$1        final android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1
be.brunoparmentier.apkshare.eval_s$eval_j        android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$HoneycombValueAnimatorCompat
be.brunoparmentier.apkshare.eval_zk$2$1$1        android.support.v4.print.PrintHelperKitkat$2$1$1
be.brunoparmentier.apkshare.eval_b5$eval__       public abstract android.support.v7.widget.GridLayoutManager$SpanSizeLookup
be.brunoparmentier.apkshare.eval_bj$eval_c       public abstract android.support.v7.widget.RecyclerView$ViewCacheExtension
be.brunoparmentier.apkshare.eval_bj$eval_d       public abstract android.support.v7.widget.RecyclerView$SmoothScroller
be.brunoparmentier.apkshare.eval_bj$eval_g       public abstract interface android.support.v7.widget.RecyclerView$RecyclerListener
be.brunoparmentier.apkshare.eval_bj$eval_k       android.support.v7.widget.RecyclerView$ViewFlinger
be.brunoparmentier.apkshare.eval_bj$eval_p       public abstract android.support.v7.widget.RecyclerView$ItemAnimator
be.brunoparmentier.apkshare.eval_bj$eval_q       public android.support.v7.widget.RecyclerView$RecycledViewPool
be.brunoparmentier.apkshare.eval_bj$eval_s       android.support.v7.widget.RecyclerView$SavedState
be.brunoparmentier.apkshare.eval_bj$eval_v       public final android.support.v7.widget.RecyclerView$Recycler
be.brunoparmentier.apkshare.eval_c5$eval_e       public final be.brunoparmentier.apkshare.R$layout
be.brunoparmentier.apkshare.eval_c5$eval_f       public final be.brunoparmentier.apkshare.R$menu
be.brunoparmentier.apkshare.eval_c5$eval_n       public final be.brunoparmentier.apkshare.R$color
be.brunoparmentier.apkshare.eval_e0$eval_a       android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl
be.brunoparmentier.apkshare.eval_e3$eval_x       android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl
be.brunoparmentier.apkshare.eval_e3$eval_y       public android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat
be.brunoparmentier.apkshare.eval_f6$eval_c       public abstract interface android.support.v7.internal.widget.AdapterViewCompat$OnItemSelectedListener
be.brunoparmentier.apkshare.eval_fb$eval_a       android.support.v4.view.ViewPager$PagerObserver
be.brunoparmentier.apkshare.eval_fb$eval_z       android.support.v4.view.ViewPager$ViewPositionComparator
be.brunoparmentier.apkshare.eval_gk$eval_j       android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl
be.brunoparmentier.apkshare.eval_j1$eval_x       public abstract interface android.support.v4.app.FragmentTransitionCompat21$ViewRetriever
be.brunoparmentier.apkshare.eval_jc$eval_h       public final android.support.v7.internal.widget.ActivityChooserModel$HistoricalRecord
be.brunoparmentier.apkshare.eval_kd$eval_o       final android.support.v4.util.MapCollections$EntrySet
be.brunoparmentier.apkshare.eval_kh$eval_y       final android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper
be.brunoparmentier.apkshare.eval_lm$eval_v       final android.support.v7.app.AppCompatDelegateImplV7$PanelMenuPresenterCallback
be.brunoparmentier.apkshare.eval_lu$eval_k       android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable
be.brunoparmentier.apkshare.eval_n4$eval_s       android.support.v7.widget.StaggeredGridLayoutManager$SavedState
be.brunoparmentier.apkshare.eval_nb$eval_c       public android.support.v7.internal.widget.ActionBarOverlayLayout$LayoutParams
be.brunoparmentier.apkshare.eval_op$eval_m       android.support.v4.app.NotificationCompat$NotificationCompatImplApi21
be.brunoparmentier.apkshare.eval_op$eval_n       android.support.v4.app.NotificationCompat$NotificationCompatImplBase
be.brunoparmentier.apkshare.eval_op$eval_w       public final android.support.v4.app.NotificationCompat$CarExtender
be.brunoparmentier.apkshare.eval_q5$eval_w       android.support.v4.view.ViewPropertyAnimatorCompat$KitKatViewPropertyAnimatorCompatImpl
be.brunoparmentier.apkshare.eval_q7$eval_c       android.support.v4.media.session.MediaControllerCompat$TransportControlsBase
be.brunoparmentier.apkshare.eval_q7$eval_w       public abstract android.support.v4.media.session.MediaControllerCompat$TransportControls
be.brunoparmentier.apkshare.eval_sh$eval_u       android.support.v7.app.ActionBarDrawerToggle$JellybeanMr2Delegate
be.brunoparmentier.apkshare.eval_sv$eval_a       android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplBase
be.brunoparmentier.apkshare.eval_sv$eval_r       public android.support.v4.widget.DrawerLayout$LayoutParams
be.brunoparmentier.apkshare.eval_ut$eval_e       android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl
be.brunoparmentier.apkshare.eval_v4$eval_u       android.support.v4.app.NotificationManagerCompat$ImplBase
be.brunoparmentier.apkshare.eval_vi$eval_k       public abstract interface android.support.v4.widget.SlidingPaneLayout$PanelSlideListener
be.brunoparmentier.apkshare.eval_vi$eval_x       android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase
be.brunoparmentier.apkshare.eval_w6$eval_r       android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl
be.brunoparmentier.apkshare.eval_xl$eval_j       android.support.v7.widget.ListPopupWindow$ResizePopupRunnable
be.brunoparmentier.apkshare.eval_xm$eval_e       public abstract interface android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback
be.brunoparmentier.apkshare.eval_xm$eval_h       public final android.support.v4.media.routing.MediaRouterJellybean$UserRouteInfo
be.brunoparmentier.apkshare.eval_z2$eval_x       public android.support.v7.app.NotificationCompat$MediaStyle
be.brunoparmentier.apkshare.eval_zc$eval_b       android.support.v4.view.ViewCompat$KitKatViewCompatImpl
be.brunoparmentier.apkshare.eval_zc$eval_e       abstract interface android.support.v4.view.ViewCompat$ViewCompatImpl
be.brunoparmentier.apkshare.eval_s$eval_j$1      android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$HoneycombValueAnimatorCompat$1
be.brunoparmentier.apkshare.eval_bj$eval_d$c     public android.support.v7.widget.RecyclerView$SmoothScroller$Action
be.brunoparmentier.apkshare.eval_bj$eval_p$l     public abstract interface android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener
be.brunoparmentier.apkshare.eval_bj$eval_s$1     final android.support.v7.widget.RecyclerView$SavedState$1
be.brunoparmentier.apkshare.eval_kh$eval_y$1     final android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1
be.brunoparmentier.apkshare.eval_kh$p$eval_i     android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler
be.brunoparmentier.apkshare.eval_n4$eval_s$1     final android.support.v7.widget.StaggeredGridLayoutManager$SavedState$1
be.brunoparmentier.apkshare.eval_op$eval_w$n     public android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation
be.brunoparmentier.apkshare.eval_op$eval_w$n$1   final android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$1
be.brunoparmentier.apkshare.eval_op$eval_w$n$e   public android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder
be.brunoparmentier.apkshare.eval_bj$eval_p$eval_b        abstract interface android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener
-------------------------------------------------------------------------------

android.support.v4.BuildConfig   (be.brunoparmentier.apkshare.z)
===============================================================================
  No methods

android.support.v4.BuildConfig$NullPointerException      (be.brunoparmentier.apkshare.eval_q)
===============================================================================
  No methods

android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat   (be.brunoparmentier.apkshare.eval_y)
===============================================================================
  b        public static feedbackTypeToString(int)
  e        public static capabilityToString(int)
  eval_t   public static getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo)
  f        public static getDescription(android.accessibilityservice.AccessibilityServiceInfo)
  j        public static getId(android.accessibilityservice.AccessibilityServiceInfo)
  n        public static getCapabilities(android.accessibilityservice.AccessibilityServiceInfo)
  s        public static flagToString(int)
  v        public static getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo)
  y        public static getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo)

android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl   (be.brunoparmentier.apkshare.eval_y$j)
===============================================================================
  e    public getCapabilities(android.accessibilityservice.AccessibilityServiceInfo)
  g    public getDescription(android.accessibilityservice.AccessibilityServiceInfo)
  k    public getId(android.accessibilityservice.AccessibilityServiceInfo)
  o    public getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo)
  s    public getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo)
  w    public getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo)

android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2      (be.brunoparmentier.apkshare.eval_y$l)
===============================================================================
  e    public getCapabilities(android.accessibilityservice.AccessibilityServiceInfo)

android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl  (be.brunoparmentier.apkshare.eval_y$k)
===============================================================================
  e    public getCapabilities(android.accessibilityservice.AccessibilityServiceInfo)
  g    public getDescription(android.accessibilityservice.AccessibilityServiceInfo)
  k    public getId(android.accessibilityservice.AccessibilityServiceInfo)
  o    public getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo)
  s    public getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo)
  w    public getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo)

android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl       (be.brunoparmentier.apkshare.eval_y$b)
===============================================================================
  e    public abstract getCapabilities(android.accessibilityservice.AccessibilityServiceInfo)
  g    public abstract getDescription(android.accessibilityservice.AccessibilityServiceInfo)
  k    public abstract getId(android.accessibilityservice.AccessibilityServiceInfo)
  o    public abstract getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo)
  s    public abstract getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo)
  w    public abstract getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo)

android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$NullPointerException      (be.brunoparmentier.apkshare.eval_c)
===============================================================================
  No methods

android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs        (be.brunoparmentier.apkshare.eval_n)
===============================================================================
  e        public static getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo)
  eval_l   public static getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo)
  i        public static getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo)
  s        public static getDescription(android.accessibilityservice.AccessibilityServiceInfo)
  z        public static getId(android.accessibilityservice.AccessibilityServiceInfo)

android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs$IOException    (be.brunoparmentier.apkshare.eval_w)
===============================================================================
  No methods

android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2       (be.brunoparmentier.apkshare.eval_h)
===============================================================================
  e    public static getCapabilities(android.accessibilityservice.AccessibilityServiceInfo)

android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2$ParseException        (be.brunoparmentier.apkshare.eval_t)
===============================================================================
  No methods

android.support.v4.animation.AnimatorCompatHelper        (be.brunoparmentier.apkshare.eval_x)
===============================================================================
  q    public static emptyValueAnimator()

android.support.v4.animation.AnimatorCompatHelper$Exception      (be.brunoparmentier.apkshare.eval_e)
===============================================================================
  No methods

android.support.v4.animation.AnimatorListenerCompat      (be.brunoparmentier.apkshare.eval_f)
===============================================================================
  h    public abstract onAnimationRepeat(android.support.v4.animation.ValueAnimatorCompat)
  i    public abstract onAnimationEnd(android.support.v4.animation.ValueAnimatorCompat)
  t    public abstract onAnimationCancel(android.support.v4.animation.ValueAnimatorCompat)
  v    public abstract onAnimationStart(android.support.v4.animation.ValueAnimatorCompat)

android.support.v4.animation.AnimatorListenerCompat$ArrayOutOfBoundsException    (be.brunoparmentier.apkshare.eval_b)
===============================================================================
  No methods

android.support.v4.animation.AnimatorProvider    (be.brunoparmentier.apkshare.eval_k)
===============================================================================
  z    public abstract emptyValueAnimator()

android.support.v4.animation.AnimatorProvider$NullPointerException       (be.brunoparmentier.apkshare.eval_u)
===============================================================================
  No methods

android.support.v4.animation.AnimatorUpdateListenerCompat        (be.brunoparmentier.apkshare.eval_i)
===============================================================================
  u    public abstract onAnimationUpdate(android.support.v4.animation.ValueAnimatorCompat)

android.support.v4.animation.AnimatorUpdateListenerCompat$ParseException (be.brunoparmentier.apkshare.eval_g)
===============================================================================
  No methods

android.support.v4.animation.DonutAnimatorCompatProvider (be.brunoparmentier.apkshare.eval_r)
===============================================================================
  z    public emptyValueAnimator()

android.support.v4.animation.DonutAnimatorCompatProvider$ArrayOutOfBoundsException       (be.brunoparmentier.apkshare.eval_l)
===============================================================================
  No methods

android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator (be.brunoparmentier.apkshare.eval_r$u)
===============================================================================
  b        private notifyUpdateListeners()
  c        public setTarget(android.view.View)
  eval_g   public cancel()
  eval_h   static access$200(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator)
  eval_m   private dispatchEnd()
  eval_s   private dispatchCancel()
  f        public addListener(android.support.v4.animation.AnimatorListenerCompat)
  g        static access$300(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator)
  h        public start()
  i        static access$302(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator,float)
  j        static access$400(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator)
  m        public addUpdateListener(android.support.v4.animation.AnimatorUpdateListenerCompat)
  m        static access$000(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator)
  n        private getTime()
  o        public getAnimatedFraction()
  p        public setDuration(long)
  r        static access$600(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator)
  s        static access$100(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator)
  u        private dispatchStart()
  y        static access$500(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator)

android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator$1       (be.brunoparmentier.apkshare.eval_r$u$1)
===============================================================================
  run  public run()

android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator$NullPointerException    (be.brunoparmentier.apkshare.eval__)
===============================================================================
  No methods

android.support.v4.animation.HoneycombMr1AnimatorCompatProvider  (be.brunoparmentier.apkshare.eval_s)
===============================================================================
  z    public emptyValueAnimator()

android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$AnimatorListenerCompatWrapper    (be.brunoparmentier.apkshare.eval_s$o)
===============================================================================
  onAnimationCancel    public onAnimationCancel(android.animation.Animator)
  onAnimationEnd       public onAnimationEnd(android.animation.Animator)
  onAnimationRepeat    public onAnimationRepeat(android.animation.Animator)
  onAnimationStart     public onAnimationStart(android.animation.Animator)

android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$HoneycombValueAnimatorCompat     (be.brunoparmentier.apkshare.eval_s$eval_j)
===============================================================================
  c        public setTarget(android.view.View)
  eval_g   public cancel()
  f        public addListener(android.support.v4.animation.AnimatorListenerCompat)
  h        public start()
  m        public addUpdateListener(android.support.v4.animation.AnimatorUpdateListenerCompat)
  o        public getAnimatedFraction()
  p        public setDuration(long)

android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$HoneycombValueAnimatorCompat$1   (be.brunoparmentier.apkshare.eval_s$eval_j$1)
===============================================================================
  onAnimationUpdate    public onAnimationUpdate(android.animation.ValueAnimator)

android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$HoneycombValueAnimatorCompat$ParseException      (be.brunoparmentier.apkshare.eval_a)
===============================================================================
  No methods

android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$IOException      (be.brunoparmentier.apkshare.eval_p)
===============================================================================
  No methods

android.support.v4.animation.ValueAnimatorCompat (be.brunoparmentier.apkshare.eval_m)
===============================================================================
  c        public abstract setTarget(android.view.View)
  eval_g   public abstract cancel()
  f        public abstract addListener(android.support.v4.animation.AnimatorListenerCompat)
  h        public abstract start()
  m        public abstract addUpdateListener(android.support.v4.animation.AnimatorUpdateListenerCompat)
  o        public abstract getAnimatedFraction()
  p        public abstract setDuration(long)

android.support.v4.animation.ValueAnimatorCompat$IOException     (be.brunoparmentier.apkshare.eval_j)
===============================================================================
  No methods

android.support.v4.app.ActionBarDrawerToggle     (be.brunoparmentier.apkshare.eval_o)
===============================================================================
  c    public isDrawerIndicatorEnabled()
  c    public setHomeAsUpIndicator(int)
  e    private static assumeMaterial(android.content.Context)
  e    public onConfigurationChanged(android.content.res.Configuration)
  h    public syncState()
  i    static access$400(android.support.v4.app.ActionBarDrawerToggle)
  j    public onDrawerOpened(android.view.View)
  k    public onDrawerSlide(android.view.View,float)
  n    public setDrawerIndicatorEnabled(boolean)
  r    public onOptionsItemSelected(android.view.MenuItem)
  r    setActionBarDescription(int)
  s    public onDrawerClosed(android.view.View)
  t    public setHomeAsUpIndicator(android.graphics.drawable.Drawable)
  u    getThemeUpIndicator()
  v    public onDrawerStateChanged(int)
  y    setActionBarUpIndicator(android.graphics.drawable.Drawable,int)

android.support.v4.app.ActionBarDrawerToggle$1   (be.brunoparmentier.apkshare.eval_o$1)
===============================================================================
  No methods

android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl   (be.brunoparmentier.apkshare.eval_o$x)
===============================================================================
  h    public abstract setActionBarDescription(java.lang.Object,android.app.Activity,int)
  j    public abstract setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int)
  u    public abstract getThemeUpIndicator(android.app.Activity)

android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase       (be.brunoparmentier.apkshare.eval_o$c)
===============================================================================
  h    public setActionBarDescription(java.lang.Object,android.app.Activity,int)
  j    public setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int)
  u    public getThemeUpIndicator(android.app.Activity)

android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC (be.brunoparmentier.apkshare.eval_o$a)
===============================================================================
  h    public setActionBarDescription(java.lang.Object,android.app.Activity,int)
  j    public setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int)
  u    public getThemeUpIndicator(android.app.Activity)

android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2       (be.brunoparmentier.apkshare.eval_o$v)
===============================================================================
  h    public setActionBarDescription(java.lang.Object,android.app.Activity,int)
  j    public setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int)
  u    public getThemeUpIndicator(android.app.Activity)

android.support.v4.app.ActionBarDrawerToggle$Delegate    (be.brunoparmentier.apkshare.eval_o$s)
===============================================================================
  q    public abstract setActionBarUpIndicator(android.graphics.drawable.Drawable,int)
  q    public abstract setActionBarDescription(int)
  y    public abstract getThemeUpIndicator()

android.support.v4.app.ActionBarDrawerToggle$DelegateProvider    (be.brunoparmentier.apkshare.eval_o$f)
===============================================================================
  w    public abstract getDrawerToggleDelegate()

android.support.v4.app.ActionBarDrawerToggle$Exception   (be.brunoparmentier.apkshare.eval_v)
===============================================================================
  No methods

android.support.v4.app.ActionBarDrawerToggle$SlideDrawable       (be.brunoparmentier.apkshare.eval_o$k)
===============================================================================
  c    public getPosition()
  c    public setPosition(float)
  n    public setOffset(float)
  draw public draw(android.graphics.Canvas)

android.support.v4.app.ActionBarDrawerToggleHoneycomb    (be.brunoparmentier.apkshare.eval_d)
===============================================================================
  d    public static getThemeUpIndicator(android.app.Activity)
  v    public static setActionBarDescription(java.lang.Object,android.app.Activity,int)
  y    public static setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int)

android.support.v4.app.ActionBarDrawerToggleHoneycomb$IOException        (be.brunoparmentier.apkshare.eval_yn)
===============================================================================
  No methods

android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo   (be.brunoparmentier.apkshare.eval_d$_)
===============================================================================
  No methods

android.support.v4.app.ActionBarDrawerToggleJellybeanMR2 (be.brunoparmentier.apkshare.eval_mr)
===============================================================================
  f    public static setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int)
  s    public static getThemeUpIndicator(android.app.Activity)
  y    public static setActionBarDescription(java.lang.Object,android.app.Activity,int)

android.support.v4.app.ActionBarDrawerToggleJellybeanMR2$ArrayOutOfBoundsException       (be.brunoparmentier.apkshare.eval_kx)
===============================================================================
  No methods

android.support.v4.app.ActivityCompat    (be.brunoparmentier.apkshare.eval_v6)
===============================================================================
  a    public static setEnterSharedElementCallback(android.app.Activity,android.support.v4.app.SharedElementCallback)
  b    public static invalidateOptionsMenu(android.app.Activity)
  e    public static startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)
  g    public static finishAffinity(android.app.Activity)
  h    public static startActivity(android.app.Activity,android.content.Intent,android.os.Bundle)
  j    public static setExitSharedElementCallback(android.app.Activity,android.support.v4.app.SharedElementCallback)
  k    private static createCallback(android.support.v4.app.SharedElementCallback)
  l    public static startPostponedEnterTransition(android.app.Activity)
  m    public static finishAfterTransition(android.app.Activity)
  s    public static postponeEnterTransition(android.app.Activity)

android.support.v4.app.ActivityCompat$ParseException     (be.brunoparmentier.apkshare.eval_jg)
===============================================================================
  No methods

android.support.v4.app.ActivityCompat$SharedElementCallback21Impl        (be.brunoparmentier.apkshare.eval_v6$t)
===============================================================================
  b    public onCreateSnapshotView(android.content.Context,android.os.Parcelable)
  b    public onMapSharedElements(java.util.List,java.util.Map)
  d    public onRejectSharedElements(java.util.List)
  f    public onSharedElementStart(java.util.List,java.util.List,java.util.List)
  n    public onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)
  y    public onSharedElementEnd(java.util.List,java.util.List,java.util.List)

android.support.v4.app.ActivityCompat21  (be.brunoparmentier.apkshare.eval_li)
===============================================================================
  a    public static setEnterSharedElementCallback(android.app.Activity,android.support.v4.app.ActivityCompat21$SharedElementCallback21)
  c    public static startPostponedEnterTransition(android.app.Activity)
  t    public static finishAfterTransition(android.app.Activity)
  w    private static createCallback(android.support.v4.app.ActivityCompat21$SharedElementCallback21)
  y    public static setExitSharedElementCallback(android.app.Activity,android.support.v4.app.ActivityCompat21$SharedElementCallback21)
  z    public static postponeEnterTransition(android.app.Activity)

android.support.v4.app.ActivityCompat21$Exception        (be.brunoparmentier.apkshare.eval_yi)
===============================================================================
  No methods

android.support.v4.app.ActivityCompat21$SharedElementCallback21  (be.brunoparmentier.apkshare.eval_li$x)
===============================================================================
  b    public abstract onCreateSnapshotView(android.content.Context,android.os.Parcelable)
  b    public abstract onMapSharedElements(java.util.List,java.util.Map)
  d    public abstract onRejectSharedElements(java.util.List)
  f    public abstract onSharedElementStart(java.util.List,java.util.List,java.util.List)
  n    public abstract onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)
  y    public abstract onSharedElementEnd(java.util.List,java.util.List,java.util.List)

android.support.v4.app.ActivityCompat21$SharedElementCallbackImpl        (be.brunoparmentier.apkshare.eval_li$v)
===============================================================================
  onCaptureSharedElementSnapshot   public onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)
  onCreateSnapshotView             public onCreateSnapshotView(android.content.Context,android.os.Parcelable)
  onMapSharedElements              public onMapSharedElements(java.util.List,java.util.Map)
  onRejectSharedElements           public onRejectSharedElements(java.util.List)
  onSharedElementEnd               public onSharedElementEnd(java.util.List,java.util.List,java.util.List)
  onSharedElementStart             public onSharedElementStart(java.util.List,java.util.List,java.util.List)

android.support.v4.app.ActivityCompatHoneycomb   (be.brunoparmentier.apkshare.eval_de)
===============================================================================
  i    static invalidateOptionsMenu(android.app.Activity)
  y    static dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])

android.support.v4.app.ActivityCompatHoneycomb$ArrayOutOfBoundsException (be.brunoparmentier.apkshare.eval_o2)
===============================================================================
  No methods

android.support.v4.app.ActivityCompatJB  (be.brunoparmentier.apkshare.eval_dg)
===============================================================================
  f    public static startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)
  g    public static finishAffinity(android.app.Activity)
  z    public static startActivity(android.content.Context,android.content.Intent,android.os.Bundle)

android.support.v4.app.ActivityCompatJB$Exception        (be.brunoparmentier.apkshare.eval_d3)
===============================================================================
  No methods

android.support.v4.app.ActivityManagerCompat     (be.brunoparmentier.apkshare.eval_w3)
===============================================================================
  k    public static isLowRamDevice(android.app.ActivityManager)

android.support.v4.app.ActivityManagerCompat$Exception   (be.brunoparmentier.apkshare.eval_gs)
===============================================================================
  No methods

android.support.v4.app.ActivityManagerCompatKitKat       (be.brunoparmentier.apkshare.eval_mw)
===============================================================================
  o    public static isLowRamDevice(android.app.ActivityManager)

android.support.v4.app.ActivityManagerCompatKitKat$NullPointerException  (be.brunoparmentier.apkshare.eval_lk)
===============================================================================
  No methods

android.support.v4.app.ActivityOptionsCompat     (be.brunoparmentier.apkshare.eval_b0)
===============================================================================
  k    public update(android.support.v4.app.ActivityOptionsCompat)
  l    public static makeCustomAnimation(android.content.Context,int,int)
  p    public static transient makeSceneTransitionAnimation(android.app.Activity,android.support.v4.util.Pair[])
  q    public toBundle()
  t    public static makeScaleUpAnimation(android.view.View,int,int,int,int)
  v    public static makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String)
  v    public static makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int)

android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImpl21       (be.brunoparmentier.apkshare.eval_b0$a)
===============================================================================
  k    public update(android.support.v4.app.ActivityOptionsCompat)
  q    public toBundle()

android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB       (be.brunoparmentier.apkshare.eval_b0$f)
===============================================================================
  k    public update(android.support.v4.app.ActivityOptionsCompat)
  q    public toBundle()

android.support.v4.app.ActivityOptionsCompat$Exception   (be.brunoparmentier.apkshare.eval_ae)
===============================================================================
  No methods

android.support.v4.app.ActivityOptionsCompat21   (be.brunoparmentier.apkshare.eval_if)
===============================================================================
  b    public static makeSceneTransitionAnimation(android.app.Activity,android.view.View[],java.lang.String[])
  m    public static makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String)
  t    public toBundle()
  u    public update(android.support.v4.app.ActivityOptionsCompat21)

android.support.v4.app.ActivityOptionsCompat21$ArrayOutOfBoundsException (be.brunoparmentier.apkshare.eval_am)
===============================================================================
  No methods

android.support.v4.app.ActivityOptionsCompatJB   (be.brunoparmentier.apkshare.eval_ab)
===============================================================================
  k    public static makeCustomAnimation(android.content.Context,int,int)
  r    public update(android.support.v4.app.ActivityOptionsCompatJB)
  t    public static makeScaleUpAnimation(android.view.View,int,int,int,int)
  x    public toBundle()
  y    public static makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int)

android.support.v4.app.ActivityOptionsCompatJB$ArrayOutOfBoundsException (be.brunoparmentier.apkshare.eval_om)
===============================================================================
  No methods

android.support.v4.app.BackStackRecord   (be.brunoparmentier.apkshare.eval_j2)
===============================================================================
  a        private static setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,java.util.ArrayList,java.util.ArrayList)
  a        public remove(android.support.v4.app.Fragment)
  a        private setEpicenterIn(android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState)
  a        private static remapNames(java.util.ArrayList,java.util.ArrayList,android.support.v4.util.ArrayMap)
  b        public commitAllowingStateLoss()
  b        private static getExitTransition(android.support.v4.app.Fragment,boolean)
  b        private configureTransitions(int,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.util.SparseArray,android.util.SparseArray)
  b        public setCustomAnimations(int,int)
  b        public dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
  c        public attach(android.support.v4.app.Fragment)
  c        private setLastIn(android.util.SparseArray,android.support.v4.app.Fragment)
  c        public setBreadCrumbTitle(java.lang.CharSequence)
  d        public setTransition(int)
  e        public commit()
  eval_g   public setBreadCrumbShortTitle(int)
  eval_i   public getName()
  eval_i   public detach(android.support.v4.app.Fragment)
  eval_j   public add(int,android.support.v4.app.Fragment)
  eval_o   public getTransition()
  eval_s   private mapSharedElementsIn(android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment)
  f        public isAddToBackStackAllowed()
  f        public add(android.support.v4.app.Fragment,java.lang.String)
  g        public getBreadCrumbTitle()
  g        static access$300(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object)
  g        public setBreadCrumbTitle(int)
  h        static access$100(android.support.v4.app.BackStackRecord,android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState)
  h        private excludeHiddenFragmentsAfterEnter(android.view.View,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object)
  h        public dump(java.lang.String,java.io.PrintWriter,boolean)
  i        public isEmpty()
  i        private setBackNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean)
  i        public setBreadCrumbShortTitle(java.lang.CharSequence)
  i        private static captureExitingViews(java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList,android.support.v4.util.ArrayMap,android.view.View)
  j        static access$000(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment)
  j        private static getEnterTransition(android.support.v4.app.Fragment,boolean)
  j        public setCustomAnimations(int,int,int,int)
  k        public hide(android.support.v4.app.Fragment)
  k        public replace(int,android.support.v4.app.Fragment,java.lang.String)
  l        public getId()
  l        private calculateFragments(android.util.SparseArray,android.util.SparseArray)
  l        public addToBackStack(java.lang.String)
  m        public getBreadCrumbShortTitleRes()
  m        public setTransitionStyle(int)
  o        public calculateBackFragments(android.util.SparseArray,android.util.SparseArray)
  o        public add(int,android.support.v4.app.Fragment,java.lang.String)
  p        static access$200(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap)
  p        private static setNameOverride(android.support.v4.util.ArrayMap,java.lang.String,java.lang.String)
  p        public addSharedElement(android.view.View,java.lang.String)
  q        public getTransitionStyle()
  q        private callSharedElementEnd(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap)
  q        private static getSharedElementTransition(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean)
  r        public getBreadCrumbTitleRes()
  r        private excludeHiddenFragments(android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object)
  r        private beginTransition(android.util.SparseArray,android.util.SparseArray,boolean)
  s        public popFromBackStack(boolean,android.support.v4.app.BackStackRecord$TransitionState,android.util.SparseArray,android.util.SparseArray)
  u        private remapSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean)
  u        private prepareSharedElementTransition(android.support.v4.app.BackStackRecord$TransitionState,android.view.View,java.lang.Object,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,java.util.ArrayList)
  v        private static setFirstOut(android.util.SparseArray,android.support.v4.app.Fragment)
  v        commitInternal(boolean)
  v        private doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)
  w        addOp(android.support.v4.app.BackStackRecord$Op)
  w        private mapEnteringSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean)
  w        private setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean)
  x        public disallowAddToBackStack()
  x        public replace(int,android.support.v4.app.Fragment)
  y        public getBreadCrumbShortTitle()
  z        public show(android.support.v4.app.Fragment)
  z        bumpBackStackNesting(int)
  run      public run()
  toString public toString()

android.support.v4.app.BackStackRecord$1 (be.brunoparmentier.apkshare.eval_j2$1)
===============================================================================
  eval_x   public getView()

android.support.v4.app.BackStackRecord$2 (be.brunoparmentier.apkshare.eval_j2$2)
===============================================================================
  onPreDraw    public onPreDraw()

android.support.v4.app.BackStackRecord$3 (be.brunoparmentier.apkshare.eval_j2$3)
===============================================================================
  onPreDraw    public onPreDraw()

android.support.v4.app.BackStackRecord$IOException       (be.brunoparmentier.apkshare.eval_cr)
===============================================================================
  No methods

android.support.v4.app.BackStackRecord$Op        (be.brunoparmentier.apkshare.eval_j2$e)
===============================================================================
  No methods

android.support.v4.app.BackStackRecord$TransitionState   (be.brunoparmentier.apkshare.eval_j2$z)
===============================================================================
  No methods

android.support.v4.app.BackStackState    (be.brunoparmentier.apkshare.eval_jx)
===============================================================================
  k                public instantiate(android.support.v4.app.FragmentManagerImpl)
  describeContents public describeContents()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.app.BackStackState$1  (be.brunoparmentier.apkshare.eval_jx$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.app.BackStackState$ParseException     (be.brunoparmentier.apkshare.eval_aj)
===============================================================================
  No methods

android.support.v4.app.BundleUtil        (be.brunoparmentier.apkshare.eval_qr)
===============================================================================
  g    public static getBundleArrayFromBundle(android.os.Bundle,java.lang.String)

android.support.v4.app.BundleUtil$IOException    (be.brunoparmentier.apkshare.eval_vg)
===============================================================================
  No methods

android.support.v4.app.DialogFragment
===============================================================================
  a            public onCreate(android.os.Bundle)
  b            public onDestroyView()
  c            public onStart()
  c            public onAttach(android.app.Activity)
  d            public onStop()
  eval__       public getDialog()
  eval_m       public show(android.support.v4.app.FragmentManager,java.lang.String)
  g            public isCancelable()
  i            public onActivityCreated(android.os.Bundle)
  k            public getShowsDialog()
  k            public onSaveInstanceState(android.os.Bundle)
  n            public setCancelable(boolean)
  o            public getLayoutInflater(android.os.Bundle)
  p            public dismiss()
  p            public setStyle(int,int)
  r            public dismissAllowingStateLoss()
  r            public show(android.support.v4.app.FragmentTransaction,java.lang.String)
  r            public setShowsDialog(boolean)
  s            public getTheme()
  t            public onCreateDialog(android.os.Bundle)
  u            public onDetach()
  u            dismissInternal(boolean)
  onCancel     public onCancel(android.content.DialogInterface)
  onDismiss    public onDismiss(android.content.DialogInterface)

android.support.v4.app.DialogFragment$ParseException     (be.brunoparmentier.apkshare.eval_s8)
===============================================================================
  No methods

android.support.v4.app.Fragment  (be.brunoparmentier.apkshare.eval_vw)
===============================================================================
  a                        public final getArguments()
  a                        public onCreate(android.os.Bundle)
  b                        public onDestroyView()
  b                        public setEnterSharedElementCallback(android.support.v4.app.SharedElementCallback)
  b                        performOptionsMenuClosed(android.view.Menu)
  c                        public onStart()
  c                        public onAttach(android.app.Activity)
  c                        public setHasOptionsMenu(boolean)
  c                        public onActivityResult(int,int,android.content.Intent)
  d                        public onStop()
  d                        public setRetainInstance(boolean)
  e                        public final isMenuVisible()
  e                        performActivityCreated(android.os.Bundle)
  eval__3                  performReallyStop()
  eval_a                   public onPause()
  eval_b                   public final isRemoving()
  eval_c                   public onDestroy()
  eval_cl                  performStop()
  eval_d                   public getAllowEnterTransitionOverlap()
  eval_d                   public setReturnTransition(java.lang.Object)
  eval_e                   initState()
  eval_f                   public final isVisible()
  eval_g                   public getSharedElementReturnTransition()
  eval_h                   public final hasOptionsMenu()
  eval_i                   public final getId()
  eval_j                   public final isDetached()
  eval_j                   performSaveInstanceState(android.os.Bundle)
  eval_k                   instantiateChildFragmentManager()
  eval_l                   public getSharedElementEnterTransition()
  eval_ln                  performPause()
  eval_m                   public getLoaderManager()
  eval_n                   public getReenterTransition()
  eval_nx                  performDestroyView()
  eval_o                   public final getRetainInstance()
  eval_o                   public setUserVisibleHint(boolean)
  eval_p                   public final isHidden()
  eval_p                   public setSharedElementEnterTransition(java.lang.Object)
  eval_q                   public getEnterTransition()
  eval_r                   performResume()
  eval_s                   public getReturnTransition()
  eval_s                   final restoreViewState(android.os.Bundle)
  eval_t                   public final getParentFragment()
  eval_t                   public setSharedElementReturnTransition(java.lang.Object)
  eval_u                   public final getTargetFragment()
  eval_v                   public getUserVisibleHint()
  eval_vw                  performLowMemory()
  eval_vz                  performDestroy()
  eval_w                   public final getTag()
  eval_x                   performStart()
  eval_y                   public getExitTransition()
  eval_z                   public final isInLayout()
  f                        public getAllowReturnTransitionOverlap()
  f                        static isSupportFragmentClass(android.content.Context,java.lang.String)
  f                        public onViewStateRestored(android.os.Bundle)
  f                        public setTargetFragment(android.support.v4.app.Fragment,int)
  f                        public setEnterTransition(java.lang.Object)
  h                        final isInBackStack()
  h                        public onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)
  h                        public static instantiate(android.content.Context,java.lang.String,android.os.Bundle)
  h                        performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
  i                        public final getChildFragmentManager()
  i                        public onActivityCreated(android.os.Bundle)
  i                        public onOptionsMenuClosed(android.view.Menu)
  i                        public unregisterForContextMenu(android.view.View)
  i                        public final transient getString(int,java.lang.Object[])
  j                        public final getActivity()
  j                        final setIndex(int,android.support.v4.app.Fragment)
  j                        public setExitTransition(java.lang.Object)
  k                        public onSaveInstanceState(android.os.Bundle)
  k                        public final getString(int)
  l                        public onContextItemSelected(android.view.MenuItem)
  l                        public setMenuVisibility(boolean)
  m                        public onDestroyOptionsMenu()
  m                        public dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
  n                        public onResume()
  n                        performPrepareOptionsMenu(android.view.Menu)
  n                        public onCreateAnimation(int,boolean,int)
  o                        public final isResumed()
  o                        public getLayoutInflater(android.os.Bundle)
  o                        public onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
  p                        public startActivity(android.content.Intent)
  p                        performCreate(android.os.Bundle)
  p                        public onPrepareOptionsMenu(android.view.Menu)
  p                        public onHiddenChanged(boolean)
  p                        findFragmentByWho(java.lang.String)
  q                        public final getFragmentManager()
  q                        public onViewCreated(android.view.View,android.os.Bundle)
  q                        public setReenterTransition(java.lang.Object)
  r                        performOptionsItemSelected(android.view.MenuItem)
  s                        performConfigurationChanged(android.content.res.Configuration)
  s                        public onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
  s                        performContextItemSelected(android.view.MenuItem)
  s                        public final getText(int)
  t                        public final getTargetRequestCode()
  t                        public onOptionsItemSelected(android.view.MenuItem)
  u                        public onDetach()
  u                        public setArguments(android.os.Bundle)
  u                        public setExitSharedElementCallback(android.support.v4.app.SharedElementCallback)
  v                        public getView()
  v                        public startActivityForResult(android.content.Intent,int)
  w                        public final getResources()
  x                        public setInitialSavedState(android.support.v4.app.Fragment$SavedState)
  x                        public registerForContextMenu(android.view.View)
  y                        public final isAdded()
  y                        public static instantiate(android.content.Context,java.lang.String)
  y                        public setAllowEnterTransitionOverlap(boolean)
  z                        performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
  z                        public setAllowReturnTransitionOverlap(boolean)
  equals                   public final equals(java.lang.Object)
  hashCode                 public final hashCode()
  onConfigurationChanged   public onConfigurationChanged(android.content.res.Configuration)
  onCreateContextMenu      public onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)
  onLowMemory              public onLowMemory()
  toString                 public toString()

android.support.v4.app.Fragment$1        (be.brunoparmentier.apkshare.eval_vw$1)
===============================================================================
  q    public findViewById(int)
  w    public hasView()

android.support.v4.app.Fragment$ArrayOutOfBoundsException        (be.brunoparmentier.apkshare.eval_jb)
===============================================================================
  No methods

android.support.v4.app.Fragment$InstantiationException   (be.brunoparmentier.apkshare.eval_vw$r)
===============================================================================
  No methods

android.support.v4.app.Fragment$SavedState       (be.brunoparmentier.apkshare.eval_vw$y)
===============================================================================
  describeContents public describeContents()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.app.Fragment$SavedState$1     (be.brunoparmentier.apkshare.eval_vw$y$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.app.Fragment$SavedState$ParseException        (be.brunoparmentier.apkshare.eval_eu)
===============================================================================
  No methods

android.support.v4.app.FragmentActivity  (be.brunoparmentier.apkshare.eval_nn)
===============================================================================
  b                                protected onResumeFragments()
  d                                invalidateSupportFragment(java.lang.String)
  e                                protected onPrepareOptionsPanel(android.view.View,android.view.Menu)
  e                                private dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View)
  eval_i                           onReallyStop()
  eval_r                           public getSupportLoaderManager()
  f                                private static viewToString(android.view.View)
  i                                public onRetainCustomNonConfigurationInstance()
  j                                public supportStartPostponedEnterTransition()
  j                                public setExitSharedElementCallback(android.support.v4.app.SharedElementCallback)
  j                                doReallyStop(boolean)
  l                                public supportInvalidateOptionsMenu()
  l                                public setEnterSharedElementCallback(android.support.v4.app.SharedElementCallback)
  n                                public supportPostponeEnterTransition()
  o                                public supportFinishAfterTransition()
  q                                public getSupportFragmentManager()
  r                                public getLastCustomNonConfigurationInstance()
  w                                public onAttachFragment(android.support.v4.app.Fragment)
  z                                public startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int)
  z                                getLoaderManager(java.lang.String,boolean,boolean)
  dump                             public dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
  onActivityResult                 protected onActivityResult(int,int,android.content.Intent)
  onBackPressed                    public onBackPressed()
  onConfigurationChanged           public onConfigurationChanged(android.content.res.Configuration)
  onCreate                         protected onCreate(android.os.Bundle)
  onCreatePanelMenu                public onCreatePanelMenu(int,android.view.Menu)
  onCreateView                     public onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
  onDestroy                        protected onDestroy()
  onKeyDown                        public onKeyDown(int,android.view.KeyEvent)
  onLowMemory                      public onLowMemory()
  onMenuItemSelected               public onMenuItemSelected(int,android.view.MenuItem)
  onNewIntent                      protected onNewIntent(android.content.Intent)
  onPanelClosed                    public onPanelClosed(int,android.view.Menu)
  onPause                          protected onPause()
  onPostResume                     protected onPostResume()
  onPreparePanel                   public onPreparePanel(int,android.view.View,android.view.Menu)
  onResume                         protected onResume()
  onRetainNonConfigurationInstance public final onRetainNonConfigurationInstance()
  onSaveInstanceState              protected onSaveInstanceState(android.os.Bundle)
  onStart                          protected onStart()
  onStop                           protected onStop()
  startActivityForResult           public startActivityForResult(android.content.Intent,int)

android.support.v4.app.FragmentActivity$1        (be.brunoparmentier.apkshare.eval_nn$1)
===============================================================================
  handleMessage    public handleMessage(android.os.Message)

android.support.v4.app.FragmentActivity$2        (be.brunoparmentier.apkshare.eval_nn$2)
===============================================================================
  q    public findViewById(int)
  w    public hasView()

android.support.v4.app.FragmentActivity$Exception        (be.brunoparmentier.apkshare.eval_a8)
===============================================================================
  No methods

android.support.v4.app.FragmentActivity$NonConfigurationInstances        (be.brunoparmentier.apkshare.eval_nn$t)
===============================================================================
  No methods

android.support.v4.app.FragmentContainer (be.brunoparmentier.apkshare.eval_xk)
===============================================================================
  q    public abstract findViewById(int)
  w    public abstract hasView()

android.support.v4.app.FragmentContainer$NullPointerException    (be.brunoparmentier.apkshare.eval_o_)
===============================================================================
  No methods

android.support.v4.app.FragmentManager   (be.brunoparmentier.apkshare.eval_xr)
===============================================================================
  a        public abstract beginTransaction()
  a        public static enableDebugLogging(boolean)
  b        public abstract findFragmentByTag(java.lang.String)
  eval_g   public abstract getFragments()
  eval_y   public abstract popBackStackImmediate(java.lang.String,int)
  f        public abstract putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment)
  f        public abstract dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
  k        public abstract getBackStackEntryAt(int)
  n        public abstract isDestroyed()
  n        public abstract findFragmentById(int)
  o        public abstract addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener)
  o        public abstract popBackStack(int,int)
  p        public abstract popBackStackImmediate(int,int)
  q        public abstract popBackStack()
  r        public abstract popBackStackImmediate()
  r        public abstract saveFragmentInstanceState(android.support.v4.app.Fragment)
  s        public abstract removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener)
  t        public abstract getBackStackEntryCount()
  v        public openTransaction()
  w        public abstract executePendingTransactions()
  x        public abstract getFragment(android.os.Bundle,java.lang.String)
  x        public abstract popBackStack(java.lang.String,int)

android.support.v4.app.FragmentManager$BackStackEntry    (be.brunoparmentier.apkshare.eval_xr$g)
===============================================================================
  eval_i   public abstract getName()
  g        public abstract getBreadCrumbTitle()
  l        public abstract getId()
  m        public abstract getBreadCrumbShortTitleRes()
  r        public abstract getBreadCrumbTitleRes()
  y        public abstract getBreadCrumbShortTitle()

android.support.v4.app.FragmentManager$IOException       (be.brunoparmentier.apkshare.eval_g0)
===============================================================================
  No methods

android.support.v4.app.FragmentManager$OnBackStackChangedListener        (be.brunoparmentier.apkshare.eval_xr$e)
===============================================================================
  d    public abstract onBackStackChanged()

android.support.v4.app.FragmentManagerImpl       (be.brunoparmentier.apkshare.eval_gm)
===============================================================================
  a        public beginTransaction()
  a        addBackStackState(android.support.v4.app.BackStackRecord)
  a        makeActive(android.support.v4.app.Fragment)
  a        public enqueueAction(java.lang.Runnable,boolean)
  b        public execPendingActions()
  b        public findFragmentByTag(java.lang.String)
  d        public attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment)
  d        public dispatchOptionsMenuClosed(android.view.Menu)
  d        public static transitToStyleIndex(int,boolean)
  d        private throwException(java.lang.RuntimeException)
  eval_a   moveToState(android.support.v4.app.Fragment)
  eval_f   public findFragmentByWho(java.lang.String)
  eval_g   public getFragments()
  eval_h   moveToState(android.support.v4.app.Fragment,int,int,int,boolean)
  eval_j   saveAllState()
  eval_l   public dispatchDestroy()
  eval_n   public dispatchPause()
  eval_p   public dispatchLowMemory()
  eval_r   public dispatchStart()
  eval_r   saveFragmentBasicState(android.support.v4.app.Fragment)
  eval_s   public dispatchReallyStop()
  eval_w   public dispatchCreate()
  eval_x   getLayoutInflaterFactory()
  eval_y   public popBackStackImmediate(java.lang.String,int)
  f        public putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment)
  f        public dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
  g        private checkStateLoss()
  g        public dispatchConfigurationChanged(android.content.res.Configuration)
  g        public hideFragment(android.support.v4.app.Fragment,int,int)
  h        startPendingDeferredFragments()
  j        public noteStateNotSaved()
  j        public addFragment(android.support.v4.app.Fragment,boolean)
  j        public dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
  k        public dispatchResume()
  k        makeInactive(android.support.v4.app.Fragment)
  k        loadAnimation(android.support.v4.app.Fragment,int,boolean,int)
  k        public getBackStackEntryAt(int)
  l        retainNonConfig()
  l        public static reverseTransit(int)
  m        popBackStackState(android.os.Handler,java.lang.String,int,int)
  n        public isDestroyed()
  n        public attachFragment(android.support.v4.app.Fragment,int,int)
  n        public dispatchPrepareOptionsMenu(android.view.Menu)
  n        public findFragmentById(int)
  o        public dispatchDestroyView()
  o        static makeOpenCloseAnimation(android.content.Context,float,float,float,float)
  o        public addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener)
  o        public popBackStack(int,int)
  p        public popBackStackImmediate(int,int)
  q        public popBackStack()
  q        restoreAllState(android.os.Parcelable,java.util.ArrayList)
  q        public allocBackStackIndex(android.support.v4.app.BackStackRecord)
  q        public performPendingDeferredStart(android.support.v4.app.Fragment)
  q        public showFragment(android.support.v4.app.Fragment,int,int)
  r        public popBackStackImmediate()
  r        public saveFragmentInstanceState(android.support.v4.app.Fragment)
  r        moveToState(int,int,int,boolean)
  s        reportBackStackChanged()
  s        saveFragmentViewState(android.support.v4.app.Fragment)
  s        public removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener)
  s        public onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
  s        public freeBackStackIndex(int)
  s        moveToState(int,boolean)
  t        public getBackStackEntryCount()
  t        public removeFragment(android.support.v4.app.Fragment,int,int)
  u        public dispatchContextItemSelected(android.view.MenuItem)
  w        public executePendingTransactions()
  w        public detachFragment(android.support.v4.app.Fragment,int,int)
  w        public dispatchOptionsItemSelected(android.view.MenuItem)
  x        public getFragment(android.os.Bundle,java.lang.String)
  x        public setBackStackIndex(int,android.support.v4.app.BackStackRecord)
  x        public popBackStack(java.lang.String,int)
  y        public dispatchActivityCreated()
  y        static makeFadeAnimation(android.content.Context,float,float)
  z        public dispatchStop()
  toString public toString()

android.support.v4.app.FragmentManagerImpl$1     (be.brunoparmentier.apkshare.eval_gm$1)
===============================================================================
  run  public run()

android.support.v4.app.FragmentManagerImpl$2     (be.brunoparmentier.apkshare.eval_gm$2)
===============================================================================
  run  public run()

android.support.v4.app.FragmentManagerImpl$3     (be.brunoparmentier.apkshare.eval_gm$3)
===============================================================================
  run  public run()

android.support.v4.app.FragmentManagerImpl$4     (be.brunoparmentier.apkshare.eval_gm$4)
===============================================================================
  run  public run()

android.support.v4.app.FragmentManagerImpl$5     (be.brunoparmentier.apkshare.eval_gm$5)
===============================================================================
  onAnimationEnd       public onAnimationEnd(android.view.animation.Animation)
  onAnimationRepeat    public onAnimationRepeat(android.view.animation.Animation)
  onAnimationStart     public onAnimationStart(android.view.animation.Animation)

android.support.v4.app.FragmentManagerImpl$FragmentTag   (be.brunoparmentier.apkshare.eval_gm$k)
===============================================================================
  No methods

android.support.v4.app.FragmentManagerImpl$ParseException        (be.brunoparmentier.apkshare.eval_h6)
===============================================================================
  No methods

android.support.v4.app.FragmentManagerState      (be.brunoparmentier.apkshare.eval_x6)
===============================================================================
  describeContents public describeContents()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.app.FragmentManagerState$1    (be.brunoparmentier.apkshare.eval_x6$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.app.FragmentManagerState$IOException  (be.brunoparmentier.apkshare.eval_t2)
===============================================================================
  No methods

android.support.v4.app.FragmentPagerAdapter      (be.brunoparmentier.apkshare.eval_mx)
===============================================================================
  a        private static makeFragmentName(int,long)
  eval_c   public getItemId(int)
  f        public setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)
  g        public instantiateItem(android.view.ViewGroup,int)
  k        public startUpdate(android.view.ViewGroup)
  n        public destroyItem(android.view.ViewGroup,int,java.lang.Object)
  p        public restoreState(android.os.Parcelable,java.lang.ClassLoader)
  p        public abstract getItem(int)
  r        public saveState()
  t        public isViewFromObject(android.view.View,java.lang.Object)
  u        public finishUpdate(android.view.ViewGroup)

android.support.v4.app.FragmentPagerAdapter$IOException  (be.brunoparmentier.apkshare.eval_fw)
===============================================================================
  No methods

android.support.v4.app.FragmentState     (be.brunoparmentier.apkshare.eval_lh)
===============================================================================
  b                public instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment)
  describeContents public describeContents()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.app.FragmentState$1   (be.brunoparmentier.apkshare.eval_lh$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.app.FragmentState$ArrayOutOfBoundsException   (be.brunoparmentier.apkshare.eval_kg)
===============================================================================
  No methods

android.support.v4.app.FragmentStatePagerAdapter (be.brunoparmentier.apkshare.eval_bo)
===============================================================================
  f    public setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)
  g    public instantiateItem(android.view.ViewGroup,int)
  k    public startUpdate(android.view.ViewGroup)
  m    public abstract getItem(int)
  n    public destroyItem(android.view.ViewGroup,int,java.lang.Object)
  p    public restoreState(android.os.Parcelable,java.lang.ClassLoader)
  r    public saveState()
  t    public isViewFromObject(android.view.View,java.lang.Object)
  u    public finishUpdate(android.view.ViewGroup)

android.support.v4.app.FragmentStatePagerAdapter$IOException     (be.brunoparmentier.apkshare.eval_o9)
===============================================================================
  No methods

android.support.v4.app.FragmentTabHost   (be.brunoparmentier.apkshare.eval_z0)
===============================================================================
  c                        private ensureContent()
  d                        private ensureHierarchy(android.content.Context)
  eval_u                   private doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction)
  t                        private initFragmentTabHost(android.content.Context,android.util.AttributeSet)
  v                        public setup(android.content.Context,android.support.v4.app.FragmentManager)
  w                        public addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle)
  y                        public setup(android.content.Context,android.support.v4.app.FragmentManager,int)
  onAttachedToWindow       protected onAttachedToWindow()
  onDetachedFromWindow     protected onDetachedFromWindow()
  onRestoreInstanceState   protected onRestoreInstanceState(android.os.Parcelable)
  onSaveInstanceState      protected onSaveInstanceState()
  onTabChanged             public onTabChanged(java.lang.String)
  setOnTabChangedListener  public setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener)
  setup                    public setup()

android.support.v4.app.FragmentTabHost$1 (be.brunoparmentier.apkshare.eval_z0$1)
===============================================================================
  No methods

android.support.v4.app.FragmentTabHost$DummyTabFactory   (be.brunoparmentier.apkshare.eval_z0$l)
===============================================================================
  createTabContent public createTabContent(java.lang.String)

android.support.v4.app.FragmentTabHost$IOException       (be.brunoparmentier.apkshare.eval_wk)
===============================================================================
  No methods

android.support.v4.app.FragmentTabHost$SavedState        (be.brunoparmentier.apkshare.eval_z0$o)
===============================================================================
  toString         public toString()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.app.FragmentTabHost$SavedState$1      (be.brunoparmentier.apkshare.eval_z0$o$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.app.FragmentTabHost$SavedState$Exception      (be.brunoparmentier.apkshare.eval_io)
===============================================================================
  No methods

android.support.v4.app.FragmentTabHost$TabInfo   (be.brunoparmentier.apkshare.eval_z0$q)
===============================================================================
  c    static access$400(android.support.v4.app.FragmentTabHost$TabInfo)
  g    static access$300(android.support.v4.app.FragmentTabHost$TabInfo)
  j    static access$100(android.support.v4.app.FragmentTabHost$TabInfo)
  v    static access$200(android.support.v4.app.FragmentTabHost$TabInfo)
  z    static access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment)

android.support.v4.app.FragmentTransaction       (be.brunoparmentier.apkshare.eval_wt)
===============================================================================
  a        public abstract remove(android.support.v4.app.Fragment)
  b        public abstract commitAllowingStateLoss()
  b        public abstract setCustomAnimations(int,int)
  c        public abstract attach(android.support.v4.app.Fragment)
  c        public abstract setBreadCrumbTitle(java.lang.CharSequence)
  d        public abstract setTransition(int)
  e        public abstract commit()
  eval_g   public abstract setBreadCrumbShortTitle(int)
  eval_i   public abstract detach(android.support.v4.app.Fragment)
  eval_j   public abstract add(int,android.support.v4.app.Fragment)
  f        public abstract isAddToBackStackAllowed()
  f        public abstract add(android.support.v4.app.Fragment,java.lang.String)
  g        public abstract setBreadCrumbTitle(int)
  i        public abstract isEmpty()
  i        public abstract setBreadCrumbShortTitle(java.lang.CharSequence)
  j        public abstract setCustomAnimations(int,int,int,int)
  k        public abstract hide(android.support.v4.app.Fragment)
  k        public abstract replace(int,android.support.v4.app.Fragment,java.lang.String)
  l        public abstract addToBackStack(java.lang.String)
  m        public abstract setTransitionStyle(int)
  o        public abstract add(int,android.support.v4.app.Fragment,java.lang.String)
  p        public abstract addSharedElement(android.view.View,java.lang.String)
  x        public abstract disallowAddToBackStack()
  x        public abstract replace(int,android.support.v4.app.Fragment)
  z        public abstract show(android.support.v4.app.Fragment)

android.support.v4.app.FragmentTransaction$ParseException        (be.brunoparmentier.apkshare.eval_rw)
===============================================================================
  No methods

android.support.v4.app.FragmentTransitionCompat21        (be.brunoparmentier.apkshare.eval_j1)
===============================================================================
  a    public static getTransitionName(android.view.View)
  d    public static addTransitionTargets(java.lang.Object,java.lang.Object,android.view.View,android.support.v4.app.FragmentTransitionCompat21$ViewRetriever,android.view.View,android.support.v4.app.FragmentTransitionCompat21$EpicenterView,java.util.Map,java.util.ArrayList,java.util.Map,java.util.ArrayList)
  d    private static isNullOrEmpty(java.util.List)
  e    public static cloneTransition(java.lang.Object)
  f    private static hasSimpleTarget(android.transition.Transition)
  j    static access$100(android.view.View)
  j    public static excludeTarget(java.lang.Object,android.view.View,boolean)
  j    public static mergeTransitions(java.lang.Object,java.lang.Object,java.lang.Object,boolean)
  j    private static captureTransitioningViews(java.util.ArrayList,android.view.View)
  o    public static captureExitingViews(java.lang.Object,android.view.View,java.util.ArrayList,java.util.Map,android.view.View)
  r    public static setEpicenter(java.lang.Object,android.view.View)
  r    public static removeTargets(java.lang.Object,java.util.ArrayList)
  t    public static beginDelayedTransition(android.view.ViewGroup,java.lang.Object)
  u    private static setSharedElementEpicenter(android.transition.Transition,android.support.v4.app.FragmentTransitionCompat21$EpicenterView)
  u    private static getBoundsOnScreen(android.view.View)
  w    static access$000(java.util.ArrayList,android.view.View)
  y    public static cleanupTransitions(android.view.View,android.view.View,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.util.Map)
  y    public static addTargets(java.lang.Object,java.util.ArrayList)
  y    public static findNamedViews(java.util.Map,android.view.View)

android.support.v4.app.FragmentTransitionCompat21$1      (be.brunoparmentier.apkshare.eval_j1$1)
===============================================================================
  onGetEpicenter   public onGetEpicenter(android.transition.Transition)

android.support.v4.app.FragmentTransitionCompat21$2      (be.brunoparmentier.apkshare.eval_j1$2)
===============================================================================
  onPreDraw    public onPreDraw()

android.support.v4.app.FragmentTransitionCompat21$3      (be.brunoparmentier.apkshare.eval_j1$3)
===============================================================================
  onGetEpicenter   public onGetEpicenter(android.transition.Transition)

android.support.v4.app.FragmentTransitionCompat21$4      (be.brunoparmentier.apkshare.eval_j1$4)
===============================================================================
  onPreDraw    public onPreDraw()

android.support.v4.app.FragmentTransitionCompat21$EpicenterView  (be.brunoparmentier.apkshare.eval_j1$k)
===============================================================================
  No methods

android.support.v4.app.FragmentTransitionCompat21$Exception      (be.brunoparmentier.apkshare.eval_yv)
===============================================================================
  No methods

android.support.v4.app.FragmentTransitionCompat21$ViewRetriever  (be.brunoparmentier.apkshare.eval_j1$eval_x)
===============================================================================
  eval_x   public abstract getView()

android.support.v4.app.INotificationSideChannel  (be.brunoparmentier.apkshare.eval_tp)
===============================================================================
  g    public abstract notify(java.lang.String,int,java.lang.String,android.app.Notification)
  u    public abstract cancelAll(java.lang.String)
  x    public abstract cancel(java.lang.String,int,java.lang.String)

android.support.v4.app.INotificationSideChannel$ParseException   (be.brunoparmentier.apkshare.eval_km)
===============================================================================
  No methods

android.support.v4.app.INotificationSideChannel$Stub     (be.brunoparmentier.apkshare.eval_tp$e)
===============================================================================
  g            public abstract notify(java.lang.String,int,java.lang.String,android.app.Notification)
  u            public abstract cancelAll(java.lang.String)
  w            public static asInterface(android.os.IBinder)
  x            public abstract cancel(java.lang.String,int,java.lang.String)
  asBinder     public asBinder()
  onTransact   public onTransact(int,android.os.Parcel,android.os.Parcel,int)

android.support.v4.app.INotificationSideChannel$Stub$ParseException      (be.brunoparmentier.apkshare.eval_vx)
===============================================================================
  No methods

android.support.v4.app.INotificationSideChannel$Stub$Proxy       (be.brunoparmentier.apkshare.eval_tp$e$e)
===============================================================================
  g        public notify(java.lang.String,int,java.lang.String,android.app.Notification)
  u        public getInterfaceDescriptor()
  u        public cancelAll(java.lang.String)
  x        public cancel(java.lang.String,int,java.lang.String)
  asBinder public asBinder()

android.support.v4.app.ListFragment
===============================================================================
  b        public onDestroyView()
  e        public setListShownNoAnimation(boolean)
  eval__   public getSelectedItemId()
  eval_b   private setListShown(boolean,boolean)
  eval_cm  private ensureList()
  eval_yd  public getListAdapter()
  g        public getSelectedItemPosition()
  g        public setSelection(int)
  k        public onListItemClick(android.widget.ListView,android.view.View,int,long)
  o        public onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
  q        public onViewCreated(android.view.View,android.os.Bundle)
  s        public setListAdapter(android.widget.ListAdapter)
  u        public setListShown(boolean)
  u        public setEmptyText(java.lang.CharSequence)
  z        public getListView()

android.support.v4.app.ListFragment$1
===============================================================================
  run  public run()

android.support.v4.app.ListFragment$2
===============================================================================
  onItemClick  public onItemClick(android.widget.AdapterView,android.view.View,int,long)

android.support.v4.app.ListFragment$NullPointerException (be.brunoparmentier.apkshare.eval_rt)
===============================================================================
  No methods

android.support.v4.app.LoaderManager     (be.brunoparmentier.apkshare.eval_fp)
===============================================================================
  c    public hasRunningLoaders()
  g    public static enableDebugLogging(boolean)
  g    public abstract getLoader(int)
  h    public abstract initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)
  n    public abstract destroyLoader(int)
  t    public abstract dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
  z    public abstract restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)

android.support.v4.app.LoaderManager$ArrayOutOfBoundsException   (be.brunoparmentier.apkshare.eval_uz)
===============================================================================
  No methods

android.support.v4.app.LoaderManager$LoaderCallbacks     (be.brunoparmentier.apkshare.eval_fp$o)
===============================================================================
  eval_b   public abstract onCreateLoader(int,android.os.Bundle)
  g        public abstract onLoadFinished(android.support.v4.content.Loader,java.lang.Object)
  o        public abstract onLoaderReset(android.support.v4.content.Loader)

android.support.v4.app.LoaderManagerImpl (be.brunoparmentier.apkshare.eval_ya)
===============================================================================
  a        doStart()
  c        public hasRunningLoaders()
  eval_f   doDestroy()
  g        public getLoader(int)
  h        doReportStart()
  h        public initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)
  m        updateActivity(android.support.v4.app.FragmentActivity)
  n        doStop()
  n        public destroyLoader(int)
  o        doRetain()
  q        installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo)
  s        private createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)
  t        public dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
  u        private createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)
  w        doReportNextStart()
  z        finishRetain()
  z        public restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)
  toString public toString()

android.support.v4.app.LoaderManagerImpl$LoaderInfo      (be.brunoparmentier.apkshare.eval_ya$u)
===============================================================================
  b        retain()
  eval_l   start()
  eval_z   stop()
  f        public onLoadComplete(android.support.v4.content.Loader,java.lang.Object)
  r        public dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
  u        finishRetain()
  w        callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object)
  y        reportStart()
  z        destroy()
  toString public toString()

android.support.v4.app.LoaderManagerImpl$NullPointerException    (be.brunoparmentier.apkshare.eval_hz)
===============================================================================
  No methods

android.support.v4.app.NavUtils  (be.brunoparmentier.apkshare.eval_sd)
===============================================================================
  b        public static getParentActivityName(android.app.Activity)
  eval_q   public static getParentActivityIntent(android.app.Activity)
  f        public static getParentActivityIntent(android.content.Context,android.content.ComponentName)
  g        public static shouldUpRecreateTask(android.app.Activity,android.content.Intent)
  j        public static getParentActivityIntent(android.content.Context,java.lang.Class)
  m        public static navigateUpTo(android.app.Activity,android.content.Intent)
  r        public static getParentActivityName(android.content.Context,android.content.ComponentName)
  t        public static navigateUpFromSameTask(android.app.Activity)

android.support.v4.app.NavUtils$ArrayOutOfBoundsException        (be.brunoparmentier.apkshare.eval_ce)
===============================================================================
  No methods

android.support.v4.app.NavUtils$NavUtilsImpl     (be.brunoparmentier.apkshare.eval_sd$t)
===============================================================================
  m    public abstract shouldUpRecreateTask(android.app.Activity,android.content.Intent)
  p    public abstract getParentActivityIntent(android.app.Activity)
  t    public abstract navigateUpTo(android.app.Activity,android.content.Intent)
  v    public abstract getParentActivityName(android.content.Context,android.content.pm.ActivityInfo)

android.support.v4.app.NavUtils$NavUtilsImplBase (be.brunoparmentier.apkshare.eval_sd$m)
===============================================================================
  m    public shouldUpRecreateTask(android.app.Activity,android.content.Intent)
  p    public getParentActivityIntent(android.app.Activity)
  t    public navigateUpTo(android.app.Activity,android.content.Intent)
  v    public getParentActivityName(android.content.Context,android.content.pm.ActivityInfo)

android.support.v4.app.NavUtils$NavUtilsImplJB   (be.brunoparmentier.apkshare.eval_sd$b)
===============================================================================
  m    public shouldUpRecreateTask(android.app.Activity,android.content.Intent)
  p    public getParentActivityIntent(android.app.Activity)
  t    public navigateUpTo(android.app.Activity,android.content.Intent)
  v    public getParentActivityName(android.content.Context,android.content.pm.ActivityInfo)
  z    superGetParentActivityIntent(android.app.Activity)

android.support.v4.app.NavUtilsJB        (be.brunoparmentier.apkshare.eval_wy)
===============================================================================
  eval_a   public static shouldUpRecreateTask(android.app.Activity,android.content.Intent)
  eval_l   public static getParentActivityName(android.content.pm.ActivityInfo)
  eval_p   public static navigateUpTo(android.app.Activity,android.content.Intent)
  f        public static getParentActivityIntent(android.app.Activity)

android.support.v4.app.NavUtilsJB$IOException    (be.brunoparmentier.apkshare.eval_gd)
===============================================================================
  No methods

android.support.v4.app.NoSaveStateFrameLayout    (be.brunoparmentier.apkshare.eval_kn)
===============================================================================
  x                            static wrap(android.view.View)
  dispatchRestoreInstanceState protected dispatchRestoreInstanceState(android.util.SparseArray)
  dispatchSaveInstanceState    protected dispatchSaveInstanceState(android.util.SparseArray)

android.support.v4.app.NoSaveStateFrameLayout$NullPointerException       (be.brunoparmentier.apkshare.eval_n_)
===============================================================================
  No methods

android.support.v4.app.NotificationBuilderWithActions    (be.brunoparmentier.apkshare.eval_xw)
===============================================================================
  l    public abstract addAction(android.support.v4.app.NotificationCompatBase$Action)

android.support.v4.app.NotificationBuilderWithActions$IOException        (be.brunoparmentier.apkshare.eval_k3)
===============================================================================
  No methods

android.support.v4.app.NotificationBuilderWithBuilderAccessor    (be.brunoparmentier.apkshare.eval_hp)
===============================================================================
  c    public abstract getBuilder()
  z    public abstract build()

android.support.v4.app.NotificationBuilderWithBuilderAccessor$ArrayOutOfBoundsException  (be.brunoparmentier.apkshare.eval_fa)
===============================================================================
  No methods

android.support.v4.app.NotificationCompat        (be.brunoparmentier.apkshare.eval_op)
===============================================================================
  c        public static isGroupSummary(android.app.Notification)
  eval_k   public static getSortKey(android.app.Notification)
  eval_v   public static getCategory(android.app.Notification)
  h        public static getExtras(android.app.Notification)
  h        public static getAction(android.app.Notification,int)
  i        static access$200()
  j        public static getGroup(android.app.Notification)
  m        public static getLocalOnly(android.app.Notification)
  m        private static addActionsToBuilder(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList)
  s        static access$500(android.os.Bundle,java.lang.String)
  t        static access$000(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList)
  t        private static addStyleToBuilderJellybean(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style)
  x        public static getActionCount(android.app.Notification)
  y        private static getNotificationArrayFromBundle(android.os.Bundle,java.lang.String)
  z        static access$100(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style)

android.support.v4.app.NotificationCompat$1      (be.brunoparmentier.apkshare.eval_op$1)
===============================================================================
  No methods

android.support.v4.app.NotificationCompat$Action (be.brunoparmentier.apkshare.eval_op$r)
===============================================================================
  b        public getTitle()
  d        public getRemoteInputs()
  eval__   public getExtras()
  l        public getIcon()
  t        public getActionIntent()
  v        static access$300(android.support.v4.app.NotificationCompat$Action)

android.support.v4.app.NotificationCompat$Action$1       (be.brunoparmentier.apkshare.eval_op$r$1)
===============================================================================
  c    public build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[])
  f    public newArray(int)

android.support.v4.app.NotificationCompat$Action$Builder (be.brunoparmentier.apkshare.eval_op$r$b)
===============================================================================
  f    public addRemoteInput(android.support.v4.app.RemoteInput)
  i    public getExtras()
  j    public build()
  m    public addExtras(android.os.Bundle)
  z    public extend(android.support.v4.app.NotificationCompat$Action$Extender)

android.support.v4.app.NotificationCompat$Action$Extender        (be.brunoparmentier.apkshare.eval_op$r$p)
===============================================================================
  p    public abstract extend(android.support.v4.app.NotificationCompat$Action$Builder)

android.support.v4.app.NotificationCompat$Action$IOException     (be.brunoparmentier.apkshare.eval_i5)
===============================================================================
  No methods

android.support.v4.app.NotificationCompat$Action$WearableExtender        (be.brunoparmentier.apkshare.eval_op$r$a)
===============================================================================
  clone    public clone()
  f        public setAvailableOffline(boolean)
  g        public getInProgressLabel()
  k        private setFlag(int,boolean)
  k        public setCancelLabel(java.lang.CharSequence)
  m        public isAvailableOffline()
  p        public getCancelLabel()
  p        public extend(android.support.v4.app.NotificationCompat$Action$Builder)
  p        public setConfirmLabel(java.lang.CharSequence)
  w        public setInProgressLabel(java.lang.CharSequence)
  y        public getConfirmLabel()
  clone    public volatile clone()

android.support.v4.app.NotificationCompat$ArrayOutOfBoundsException      (be.brunoparmentier.apkshare.eval_jd)
===============================================================================
  No methods

android.support.v4.app.NotificationCompat$BigPictureStyle        (be.brunoparmentier.apkshare.eval_op$y)
===============================================================================
  a    public setSummaryText(java.lang.CharSequence)
  c    public bigLargeIcon(android.graphics.Bitmap)
  i    public setBigContentTitle(java.lang.CharSequence)
  z    public bigPicture(android.graphics.Bitmap)

android.support.v4.app.NotificationCompat$BigTextStyle   (be.brunoparmentier.apkshare.eval_op$l)
===============================================================================
  g    public bigText(java.lang.CharSequence)
  l    public setBigContentTitle(java.lang.CharSequence)
  o    public setSummaryText(java.lang.CharSequence)

android.support.v4.app.NotificationCompat$Builder        (be.brunoparmentier.apkshare.eval_op$a)
===============================================================================
  a        public setProgress(int,int,boolean)
  a        public setSubText(java.lang.CharSequence)
  a        public setGroup(java.lang.String)
  b        public setExtras(android.os.Bundle)
  c        public setUsesChronometer(boolean)
  c        public setSmallIcon(int)
  d        public addExtras(android.os.Bundle)
  e        public setOngoing(boolean)
  e        public setColor(int)
  eval_b   public setTicker(java.lang.CharSequence)
  eval_f   public setPublicVersion(android.app.Notification)
  eval_l   public setVisibility(int)
  eval_o   public setSound(android.net.Uri,int)
  eval_u   protected getExtender()
  f        public setLargeIcon(android.graphics.Bitmap)
  f        public extend(android.support.v4.app.NotificationCompat$Extender)
  f        public setWhen(long)
  g        public setContentInfo(java.lang.CharSequence)
  h        public setSmallIcon(int,int)
  i        public setAutoCancel(boolean)
  i        public setDefaults(int)
  k        public getNotification()
  k        public setStyle(android.support.v4.app.NotificationCompat$Style)
  l        public setNumber(int)
  l        protected static limitCharSequenceLength(java.lang.CharSequence)
  l        public setSortKey(java.lang.String)
  n        public setFullScreenIntent(android.app.PendingIntent,boolean)
  n        public setContentText(java.lang.CharSequence)
  n        public setTicker(java.lang.CharSequence,android.widget.RemoteViews)
  o        public setGroupSummary(boolean)
  p        public addAction(android.support.v4.app.NotificationCompat$Action)
  s        public setDeleteIntent(android.app.PendingIntent)
  s        public setContent(android.widget.RemoteViews)
  t        public build()
  t        public setSound(android.net.Uri)
  t        public setLocalOnly(boolean)
  t        public setPriority(int)
  t        private setFlag(int,boolean)
  u        public setContentIntent(android.app.PendingIntent)
  u        public addPerson(java.lang.String)
  v        public setOnlyAlertOnce(boolean)
  w        public setShowWhen(boolean)
  x        public setLights(int,int,int)
  x        public setVibrate(long[])
  y        public getExtras()
  y        public addAction(int,java.lang.CharSequence,android.app.PendingIntent)
  y        public setCategory(java.lang.String)
  z        public setContentTitle(java.lang.CharSequence)

android.support.v4.app.NotificationCompat$BuilderExtender        (be.brunoparmentier.apkshare.eval_op$h)
===============================================================================
  f    public build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationBuilderWithBuilderAccessor)

android.support.v4.app.NotificationCompat$CarExtender    (be.brunoparmentier.apkshare.eval_op$eval_w)
===============================================================================
  c    public setLargeIcon(android.graphics.Bitmap)
  d    public extend(android.support.v4.app.NotificationCompat$Builder)
  h    public getLargeIcon()
  i    public getColor()
  o    public setColor(int)
  x    public setUnreadConversation(android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation)
  z    public getUnreadConversation()

android.support.v4.app.NotificationCompat$CarExtender$IOException        (be.brunoparmentier.apkshare.eval_fq)
===============================================================================
  No methods

android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation (be.brunoparmentier.apkshare.eval_op$eval_w$n)
===============================================================================
  d        public getMessages()
  eval__   public getReadPendingIntent()
  eval_p   public getParticipants()
  h        public getParticipant()
  j        public getLatestTimestamp()
  n        public getRemoteInput()
  r        public getReplyPendingIntent()

android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$1       (be.brunoparmentier.apkshare.eval_op$eval_w$n$1)
===============================================================================
  u    public build(java.lang.String[],android.support.v4.app.RemoteInputCompatBase$RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long)

android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder (be.brunoparmentier.apkshare.eval_op$eval_w$n$e)
===============================================================================
  eval_q   public build()
  j        public setReplyAction(android.app.PendingIntent,android.support.v4.app.RemoteInput)
  m        public addMessage(java.lang.String)
  v        public setLatestTimestamp(long)
  w        public setReadPendingIntent(android.app.PendingIntent)

android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$ParseException  (be.brunoparmentier.apkshare.eval_s1)
===============================================================================
  No methods

android.support.v4.app.NotificationCompat$Extender       (be.brunoparmentier.apkshare.eval_op$v)
===============================================================================
  d    public abstract extend(android.support.v4.app.NotificationCompat$Builder)

android.support.v4.app.NotificationCompat$InboxStyle     (be.brunoparmentier.apkshare.eval_op$u)
===============================================================================
  k    public addLine(java.lang.CharSequence)
  t    public setSummaryText(java.lang.CharSequence)
  v    public setBigContentTitle(java.lang.CharSequence)

android.support.v4.app.NotificationCompat$NotificationCompatImpl (be.brunoparmentier.apkshare.eval_op$_)
===============================================================================
  a        public abstract build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender)
  d        public abstract getSortKey(android.app.Notification)
  e        public abstract isGroupSummary(android.app.Notification)
  eval_i   public abstract getLocalOnly(android.app.Notification)
  j        public abstract getActionCount(android.app.Notification)
  m        public abstract getGroup(android.app.Notification)
  n        public abstract getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[])
  r        public abstract getExtras(android.app.Notification)
  s        public abstract getActionsFromParcelableArrayList(java.util.ArrayList)
  v        public abstract getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory)
  x        public abstract getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation)
  y        public abstract getAction(android.app.Notification,int)
  z        public abstract getCategory(android.app.Notification)

android.support.v4.app.NotificationCompat$NotificationCompatImplApi20    (be.brunoparmentier.apkshare.eval_op$p)
===============================================================================
  a        public build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender)
  d        public getSortKey(android.app.Notification)
  e        public isGroupSummary(android.app.Notification)
  eval_i   public getLocalOnly(android.app.Notification)
  m        public getGroup(android.app.Notification)
  n        public getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[])
  s        public getActionsFromParcelableArrayList(java.util.ArrayList)
  y        public getAction(android.app.Notification,int)

android.support.v4.app.NotificationCompat$NotificationCompatImplApi21    (be.brunoparmentier.apkshare.eval_op$eval_m)
===============================================================================
  a    public build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender)
  v    public getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory)
  x    public getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation)
  z    public getCategory(android.app.Notification)

android.support.v4.app.NotificationCompat$NotificationCompatImplBase     (be.brunoparmentier.apkshare.eval_op$eval_n)
===============================================================================
  a        public build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender)
  d        public getSortKey(android.app.Notification)
  e        public isGroupSummary(android.app.Notification)
  eval_i   public getLocalOnly(android.app.Notification)
  j        public getActionCount(android.app.Notification)
  m        public getGroup(android.app.Notification)
  n        public getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[])
  r        public getExtras(android.app.Notification)
  s        public getActionsFromParcelableArrayList(java.util.ArrayList)
  v        public getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory)
  x        public getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation)
  y        public getAction(android.app.Notification,int)
  z        public getCategory(android.app.Notification)

android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread      (be.brunoparmentier.apkshare.eval_op$g)
===============================================================================
  a    public build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender)

android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb        (be.brunoparmentier.apkshare.eval_op$m)
===============================================================================
  a    public build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender)

android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich (be.brunoparmentier.apkshare.eval_op$e)
===============================================================================
  a    public build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender)

android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean        (be.brunoparmentier.apkshare.eval_op$x)
===============================================================================
  a        public build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender)
  d        public getSortKey(android.app.Notification)
  e        public isGroupSummary(android.app.Notification)
  eval_i   public getLocalOnly(android.app.Notification)
  j        public getActionCount(android.app.Notification)
  m        public getGroup(android.app.Notification)
  n        public getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[])
  r        public getExtras(android.app.Notification)
  s        public getActionsFromParcelableArrayList(java.util.ArrayList)
  y        public getAction(android.app.Notification,int)

android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat   (be.brunoparmentier.apkshare.eval_op$w)
===============================================================================
  a        public build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender)
  d        public getSortKey(android.app.Notification)
  e        public isGroupSummary(android.app.Notification)
  eval_i   public getLocalOnly(android.app.Notification)
  j        public getActionCount(android.app.Notification)
  m        public getGroup(android.app.Notification)
  r        public getExtras(android.app.Notification)
  y        public getAction(android.app.Notification,int)

android.support.v4.app.NotificationCompat$Style  (be.brunoparmentier.apkshare.eval_op$i)
===============================================================================
  r    public build()
  t    public setBuilder(android.support.v4.app.NotificationCompat$Builder)

android.support.v4.app.NotificationCompat$WearableExtender       (be.brunoparmentier.apkshare.eval_op$q)
===============================================================================
  a        public setContentIntentAvailableOffline(boolean)
  b        public addPages(java.util.List)
  c        public getBackground()
  c        public addPage(android.app.Notification)
  c        public setStartScrollBottom(boolean)
  clone    public clone()
  d        public getDisplayIntent()
  d        public extend(android.support.v4.app.NotificationCompat$Builder)
  e        public getActions()
  eval_f   public getGravity()
  eval_g   public getHintAvoidBackgroundClipping()
  eval_h   public getContentAction()
  eval_o   public getHintShowBackgroundOnly()
  eval_q   public setContentAction(int)
  eval_u   public getHintHideIcon()
  eval_u   public setHintScreenTimeout(int)
  eval_y   public clearPages()
  f        public getPages()
  g        public getCustomSizePreset()
  h        public setDisplayIntent(android.app.PendingIntent)
  i        public addAction(android.support.v4.app.NotificationCompat$Action)
  j        public addActions(java.util.List)
  k        public setHintHideIcon(boolean)
  l        public getStartScrollBottom()
  l        public setGravity(int)
  n        public clearActions()
  o        public getContentIconGravity()
  o        public setCustomSizePreset(int)
  o        private setFlag(int,boolean)
  p        public getContentIcon()
  r        public setContentIcon(int)
  s        public setHintAvoidBackgroundClipping(boolean)
  s        public setContentIconGravity(int)
  t        public getHintScreenTimeout()
  v        public getCustomContentHeight()
  v        public setBackground(android.graphics.Bitmap)
  v        public setHintShowBackgroundOnly(boolean)
  y        public setCustomContentHeight(int)
  z        public getContentIntentAvailableOffline()
  clone    public volatile clone()

android.support.v4.app.NotificationCompatApi20   (be.brunoparmentier.apkshare.eval_vh)
===============================================================================
  a        public static getSortKey(android.app.Notification)
  b        private static getActionCompatFromAction(android.app.Notification$Action,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory)
  e        public static getLocalOnly(android.app.Notification)
  eval_h   private static getActionFromActionCompat(android.support.v4.app.NotificationCompatBase$Action)
  k        public static getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory)
  n        public static addAction(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action)
  u        public static isGroupSummary(android.app.Notification)
  u        public static getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[])
  x        public static getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory)
  y        public static getGroup(android.app.Notification)

android.support.v4.app.NotificationCompatApi20$ArrayOutOfBoundsException (be.brunoparmentier.apkshare.eval_m6)
===============================================================================
  No methods

android.support.v4.app.NotificationCompatApi20$Builder   (be.brunoparmentier.apkshare.eval_vh$q)
===============================================================================
  c    public getBuilder()
  l    public addAction(android.support.v4.app.NotificationCompatBase$Action)
  z    public build()

android.support.v4.app.NotificationCompatApi21   (be.brunoparmentier.apkshare.eval_p6)
===============================================================================
  eval_a   static getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation)
  j        static getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory)
  q        private static toCompatRemoteInput(android.app.RemoteInput,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory)
  w        private static fromCompatRemoteInput(android.support.v4.app.RemoteInputCompatBase$RemoteInput)
  y        public static getCategory(android.app.Notification)

android.support.v4.app.NotificationCompatApi21$ArrayOutOfBoundsException (be.brunoparmentier.apkshare.eval_yz)
===============================================================================
  No methods

android.support.v4.app.NotificationCompatApi21$Builder   (be.brunoparmentier.apkshare.eval_p6$j)
===============================================================================
  c    public getBuilder()
  l    public addAction(android.support.v4.app.NotificationCompatBase$Action)
  z    public build()

android.support.v4.app.NotificationCompatBase    (be.brunoparmentier.apkshare.eval_gw)
===============================================================================
  No methods

android.support.v4.app.NotificationCompatBase$Action     (be.brunoparmentier.apkshare.eval_gw$y)
===============================================================================
  b        public abstract getTitle()
  d        public abstract getRemoteInputs()
  eval__   public abstract getExtras()
  l        public abstract getIcon()
  t        public abstract getActionIntent()

android.support.v4.app.NotificationCompatBase$Action$Factory     (be.brunoparmentier.apkshare.eval_gw$y$v)
===============================================================================
  c    public abstract build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[])
  f    public abstract newArray(int)

android.support.v4.app.NotificationCompatBase$Action$ParseException      (be.brunoparmentier.apkshare.eval_hd)
===============================================================================
  No methods

android.support.v4.app.NotificationCompatBase$NullPointerException       (be.brunoparmentier.apkshare.eval_e5)
===============================================================================
  No methods

android.support.v4.app.NotificationCompatBase$UnreadConversation (be.brunoparmentier.apkshare.eval_gw$t)
===============================================================================
  d        abstract getMessages()
  eval__   abstract getReadPendingIntent()
  eval_p   abstract getParticipants()
  h        abstract getParticipant()
  j        abstract getLatestTimestamp()
  n        abstract getRemoteInput()
  r        abstract getReplyPendingIntent()

android.support.v4.app.NotificationCompatBase$UnreadConversation$Exception       (be.brunoparmentier.apkshare.eval_db)
===============================================================================
  No methods

android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory (be.brunoparmentier.apkshare.eval_gw$t$e)
===============================================================================
  u    public abstract build(java.lang.String[],android.support.v4.app.RemoteInputCompatBase$RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long)

android.support.v4.app.NotificationCompatExtras  (be.brunoparmentier.apkshare.eval_ny)
===============================================================================
  No methods

android.support.v4.app.NotificationCompatExtras$ParseException   (be.brunoparmentier.apkshare.eval_c7)
===============================================================================
  No methods

android.support.v4.app.NotificationCompatGingerbread     (be.brunoparmentier.apkshare.eval_mq)
===============================================================================
  p    public static add(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,android.app.PendingIntent)

android.support.v4.app.NotificationCompatGingerbread$ParseException      (be.brunoparmentier.apkshare.eval_ey)
===============================================================================
  No methods

android.support.v4.app.NotificationCompatHoneycomb       (be.brunoparmentier.apkshare.eval_rf)
===============================================================================
  j    static add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap)

android.support.v4.app.NotificationCompatHoneycomb$NullPointerException  (be.brunoparmentier.apkshare.eval_ud)
===============================================================================
  No methods

android.support.v4.app.NotificationCompatIceCreamSandwich        (be.brunoparmentier.apkshare.eval_za)
===============================================================================
  No methods

android.support.v4.app.NotificationCompatIceCreamSandwich$Builder        (be.brunoparmentier.apkshare.eval_za$c)
===============================================================================
  c    public getBuilder()
  z    public build()

android.support.v4.app.NotificationCompatIceCreamSandwich$ParseException (be.brunoparmentier.apkshare.eval_tc)
===============================================================================
  No methods

android.support.v4.app.NotificationCompatJellybean       (be.brunoparmentier.apkshare.eval_t6)
===============================================================================
  c        public static addBigTextStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence)
  eval_d   public static isGroupSummary(android.app.Notification)
  h        public static writeActionAndGetExtras(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action)
  h        public static addBigPictureStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean)
  h        public static buildActionExtrasMap(java.util.List)
  i        private static ensureActionReflectionReadyLocked()
  k        public static getActionCount(android.app.Notification)
  k        public static getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory)
  m        public static getGroup(android.app.Notification)
  m        public static getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory)
  n        public static readAction(android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory,int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle)
  q        public static getLocalOnly(android.app.Notification)
  r        public static getSortKey(android.app.Notification)
  s        private static getBundleForAction(android.support.v4.app.NotificationCompatBase$Action)
  u        public static getExtras(android.app.Notification)
  u        private static getActionFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory)
  y        private static getActionObjectsLocked(android.app.Notification)
  y        public static addInboxStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList)
  y        public static getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[])

android.support.v4.app.NotificationCompatJellybean$Builder       (be.brunoparmentier.apkshare.eval_t6$s)
===============================================================================
  c    public getBuilder()
  l    public addAction(android.support.v4.app.NotificationCompatBase$Action)
  z    public build()

android.support.v4.app.NotificationCompatJellybean$NullPointerException  (be.brunoparmentier.apkshare.eval_wl)
===============================================================================
  No methods

android.support.v4.app.NotificationCompatKitKat  (be.brunoparmentier.apkshare.eval_kr)
===============================================================================
  e        public static getExtras(android.app.Notification)
  eval_n   public static isGroupSummary(android.app.Notification)
  f        public static getActionCount(android.app.Notification)
  j        public static getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory)
  o        public static getLocalOnly(android.app.Notification)
  t        public static getSortKey(android.app.Notification)
  w        public static getGroup(android.app.Notification)

android.support.v4.app.NotificationCompatKitKat$Builder  (be.brunoparmentier.apkshare.eval_kr$p)
===============================================================================
  c    public getBuilder()
  l    public addAction(android.support.v4.app.NotificationCompatBase$Action)
  z    public build()

android.support.v4.app.NotificationCompatKitKat$ParseException   (be.brunoparmentier.apkshare.eval_f0)
===============================================================================
  No methods

android.support.v4.app.NotificationCompatSideChannelService      (be.brunoparmentier.apkshare.eval__3)
===============================================================================
  eval_x   public abstract cancel(java.lang.String,int,java.lang.String)
  i        private checkPermission(int,java.lang.String)
  m        static access$100(android.support.v4.app.NotificationCompatSideChannelService,int,java.lang.String)
  t        public abstract cancelAll(java.lang.String)
  t        public abstract notify(java.lang.String,int,java.lang.String,android.app.Notification)
  onBind   public onBind(android.content.Intent)

android.support.v4.app.NotificationCompatSideChannelService$1    (be.brunoparmentier.apkshare.eval__3$1)
===============================================================================
  No methods

android.support.v4.app.NotificationCompatSideChannelService$Exception    (be.brunoparmentier.apkshare.eval_r1)
===============================================================================
  No methods

android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub  (be.brunoparmentier.apkshare.eval__3$b)
===============================================================================
  g    public notify(java.lang.String,int,java.lang.String,android.app.Notification)
  u    public cancelAll(java.lang.String)
  x    public cancel(java.lang.String,int,java.lang.String)

android.support.v4.app.NotificationManagerCompat (be.brunoparmentier.apkshare.eval_v4)
===============================================================================
  eval_t   public notify(java.lang.String,int,android.app.Notification)
  f        public static from(android.content.Context)
  g        public static getEnabledListenerPackages(android.content.Context)
  j        private static useSideChannelForNotification(android.app.Notification)
  j        public cancel(int)
  j        public cancel(java.lang.String,int)
  m        public cancelAll()
  m        private pushSideChannelQueue(android.support.v4.app.NotificationManagerCompat$Task)
  n        public notify(int,android.app.Notification)
  z        static access$000()

android.support.v4.app.NotificationManagerCompat$CancelTask      (be.brunoparmentier.apkshare.eval_v4$j)
===============================================================================
  c        public send(android.support.v4.app.INotificationSideChannel)
  toString public toString()

android.support.v4.app.NotificationManagerCompat$IOException     (be.brunoparmentier.apkshare.eval_ap)
===============================================================================
  No methods

android.support.v4.app.NotificationManagerCompat$Impl    (be.brunoparmentier.apkshare.eval_v4$f)
===============================================================================
  n    public abstract getSideChannelBindFlags()
  o    public abstract cancelNotification(android.app.NotificationManager,java.lang.String,int)
  t    public abstract postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification)

android.support.v4.app.NotificationManagerCompat$ImplBase        (be.brunoparmentier.apkshare.eval_v4$eval_u)
===============================================================================
  n    public getSideChannelBindFlags()
  o    public cancelNotification(android.app.NotificationManager,java.lang.String,int)
  t    public postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification)

android.support.v4.app.NotificationManagerCompat$ImplEclair      (be.brunoparmentier.apkshare.eval_v4$d)
===============================================================================
  o    public cancelNotification(android.app.NotificationManager,java.lang.String,int)
  t    public postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification)

android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich    (be.brunoparmentier.apkshare.eval_v4$t)
===============================================================================
  n    public getSideChannelBindFlags()

android.support.v4.app.NotificationManagerCompat$NotifyTask      (be.brunoparmentier.apkshare.eval_v4$m)
===============================================================================
  c        public send(android.support.v4.app.INotificationSideChannel)
  toString public toString()

android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent   (be.brunoparmentier.apkshare.eval_v4$l)
===============================================================================
  No methods

android.support.v4.app.NotificationManagerCompat$SideChannelManager      (be.brunoparmentier.apkshare.eval_v4$r)
===============================================================================
  a                        private handleRetryListenerQueue(android.content.ComponentName)
  a                        private scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
  b                        private handleQueueTask(android.support.v4.app.NotificationManagerCompat$Task)
  j                        private updateListenerMap()
  m                        private handleServiceDisconnected(android.content.ComponentName)
  o                        private ensureServiceUnbound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
  p                        private processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
  r                        public queueTask(android.support.v4.app.NotificationManagerCompat$Task)
  t                        private ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
  z                        private handleServiceConnected(android.content.ComponentName,android.os.IBinder)
  handleMessage            public handleMessage(android.os.Message)
  onServiceConnected       public onServiceConnected(android.content.ComponentName,android.os.IBinder)
  onServiceDisconnected    public onServiceDisconnected(android.content.ComponentName)

android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord       (be.brunoparmentier.apkshare.eval_v4$r$j)
===============================================================================
  No methods

android.support.v4.app.NotificationManagerCompat$SideChannelManager$ParseException       (be.brunoparmentier.apkshare.eval_cu)
===============================================================================
  No methods

android.support.v4.app.NotificationManagerCompat$Task    (be.brunoparmentier.apkshare.eval_v4$g)
===============================================================================
  c    public abstract send(android.support.v4.app.INotificationSideChannel)

android.support.v4.app.NotificationManagerCompatEclair   (be.brunoparmentier.apkshare.eval_ai)
===============================================================================
  y    public static postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification)
  z    static cancelNotification(android.app.NotificationManager,java.lang.String,int)

android.support.v4.app.NotificationManagerCompatEclair$Exception (be.brunoparmentier.apkshare.eval_cn)
===============================================================================
  No methods

android.support.v4.app.NotificationManagerCompatIceCreamSandwich (be.brunoparmentier.apkshare.eval_h9)
===============================================================================
  No methods

android.support.v4.app.NotificationManagerCompatIceCreamSandwich$Exception       (be.brunoparmentier.apkshare.eval_y0)
===============================================================================
  No methods

android.support.v4.app.RemoteInput       (be.brunoparmentier.apkshare.eval_a9)
===============================================================================
  c        public getLabel()
  eval_j   public getAllowFreeFormInput()
  i        public static addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle)
  k        public static getResultsFromIntent(android.content.Intent)
  n        public getResultKey()
  o        public getExtras()
  p        public getChoices()

android.support.v4.app.RemoteInput$1     (be.brunoparmentier.apkshare.eval_a9$1)
===============================================================================
  eval_v   public build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle)
  o        public newArray(int)

android.support.v4.app.RemoteInput$Builder       (be.brunoparmentier.apkshare.eval_a9$l)
===============================================================================
  l    public setChoices(java.lang.CharSequence[])
  o    public build()
  p    public setAllowFreeFormInput(boolean)
  r    public setLabel(java.lang.CharSequence)
  t    public addExtras(android.os.Bundle)
  v    public getExtras()

android.support.v4.app.RemoteInput$Exception     (be.brunoparmentier.apkshare.eval__c)
===============================================================================
  No methods

android.support.v4.app.RemoteInput$Impl  (be.brunoparmentier.apkshare.eval_a9$y)
===============================================================================
  l    public abstract getResultsFromIntent(android.content.Intent)
  r    public abstract addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle)

android.support.v4.app.RemoteInput$ImplApi20     (be.brunoparmentier.apkshare.eval_a9$g)
===============================================================================
  l    public getResultsFromIntent(android.content.Intent)
  r    public addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle)

android.support.v4.app.RemoteInput$ImplBase      (be.brunoparmentier.apkshare.eval_a9$e)
===============================================================================
  l    public getResultsFromIntent(android.content.Intent)
  r    public addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle)

android.support.v4.app.RemoteInput$ImplJellybean (be.brunoparmentier.apkshare.eval_a9$z)
===============================================================================
  l    public getResultsFromIntent(android.content.Intent)
  r    public addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle)

android.support.v4.app.RemoteInputCompatApi20    (be.brunoparmentier.apkshare.eval_ag)
===============================================================================
  b    static fromCompat(android.support.v4.app.RemoteInputCompatBase$RemoteInput[])
  i    static toCompat(android.app.RemoteInput[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory)
  n    static addResultsToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.content.Intent,android.os.Bundle)
  y    static getResultsFromIntent(android.content.Intent)

android.support.v4.app.RemoteInputCompatApi20$NullPointerException       (be.brunoparmentier.apkshare.eval_qz)
===============================================================================
  No methods

android.support.v4.app.RemoteInputCompatBase     (be.brunoparmentier.apkshare.eval_fk)
===============================================================================
  No methods

android.support.v4.app.RemoteInputCompatBase$Exception   (be.brunoparmentier.apkshare.eval_m1)
===============================================================================
  No methods

android.support.v4.app.RemoteInputCompatBase$RemoteInput (be.brunoparmentier.apkshare.eval_fk$k)
===============================================================================
  c        protected abstract getLabel()
  eval_j   protected abstract getAllowFreeFormInput()
  n        protected abstract getResultKey()
  o        protected abstract getExtras()
  p        protected abstract getChoices()

android.support.v4.app.RemoteInputCompatBase$RemoteInput$ArrayOutOfBoundsException       (be.brunoparmentier.apkshare.eval_mm)
===============================================================================
  No methods

android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory (be.brunoparmentier.apkshare.eval_fk$k$f)
===============================================================================
  eval_v   public abstract build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle)
  o        public abstract newArray(int)

android.support.v4.app.RemoteInputCompatJellybean        (be.brunoparmentier.apkshare.eval_tx)
===============================================================================
  a    static fromBundle(android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory)
  b    static addResultsToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.content.Intent,android.os.Bundle)
  k    static toBundleArray(android.support.v4.app.RemoteInputCompatBase$RemoteInput[])
  n    static fromBundleArray(android.os.Bundle[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory)
  n    static toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput)
  t    static getResultsFromIntent(android.content.Intent)

android.support.v4.app.RemoteInputCompatJellybean$Exception      (be.brunoparmentier.apkshare.eval_sn)
===============================================================================
  No methods

android.support.v4.app.ServiceCompat     (be.brunoparmentier.apkshare.eval_cq)
===============================================================================
  No methods

android.support.v4.app.ServiceCompat$ArrayOutOfBoundsException   (be.brunoparmentier.apkshare.eval_zr)
===============================================================================
  No methods

android.support.v4.app.ShareCompat       (be.brunoparmentier.apkshare.eval__a)
===============================================================================
  a    public static configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder)
  l    public static getCallingActivity(android.app.Activity)
  n    public static configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder)
  s    static access$000()
  w    public static getCallingPackage(android.app.Activity)

android.support.v4.app.ShareCompat$Exception     (be.brunoparmentier.apkshare.eval_x2)
===============================================================================
  No methods

android.support.v4.app.ShareCompat$IntentBuilder (be.brunoparmentier.apkshare.eval__a$f)
===============================================================================
  e        private combineArrayExtra(java.lang.String,java.util.ArrayList)
  eval_e   public startChooser()
  eval_q   public addEmailBcc(java.lang.String)
  f        public addEmailCc(java.lang.String)
  g        public addEmailTo(java.lang.String)
  h        public setChooserTitle(int)
  h        public setText(java.lang.CharSequence)
  h        public setEmailCc(java.lang.String[])
  i        public addEmailBcc(java.lang.String[])
  j        public setType(java.lang.String)
  k        public setEmailBcc(java.lang.String[])
  m        public setChooserTitle(java.lang.CharSequence)
  o        public setSubject(java.lang.String)
  r        getActivity()
  r        public addStream(android.net.Uri)
  r        private combineArrayExtra(java.lang.String,java.lang.String[])
  s        public addEmailCc(java.lang.String[])
  t        public setHtmlText(java.lang.String)
  v        public getIntent()
  w        public setStream(android.net.Uri)
  x        public static from(android.app.Activity)
  x        public addEmailTo(java.lang.String[])
  y        public setEmailTo(java.lang.String[])
  z        public createChooserIntent()

android.support.v4.app.ShareCompat$IntentReader  (be.brunoparmentier.apkshare.eval__a$k)
===============================================================================
  a        public getText()
  c        public getHtmlText()
  c        public static from(android.app.Activity)
  eval_b   public getStream()
  eval_c   public getSubject()
  eval_n   public getCallingPackage()
  f        public isShareIntent()
  g        public getCallingActivity()
  i        public getStream(int)
  l        public getCallingApplicationIcon()
  p        public isMultipleShare()
  q        public isSingleShare()
  r        public getCallingActivityIcon()
  s        public getEmailTo()
  t        public getEmailCc()
  u        public getEmailBcc()
  v        public getType()
  x        public getStreamCount()
  z        public getCallingApplicationLabel()

android.support.v4.app.ShareCompat$ShareCompatImpl       (be.brunoparmentier.apkshare.eval__a$c)
===============================================================================
  i    public abstract escapeHtml(java.lang.CharSequence)
  w    public abstract configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder)

android.support.v4.app.ShareCompat$ShareCompatImplBase   (be.brunoparmentier.apkshare.eval__a$d)
===============================================================================
  f    private static withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int)
  i    public escapeHtml(java.lang.CharSequence)
  w    public configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder)

android.support.v4.app.ShareCompat$ShareCompatImplICS    (be.brunoparmentier.apkshare.eval__a$i)
===============================================================================
  w    public configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder)
  x    shouldAddChooserIntent(android.view.MenuItem)

android.support.v4.app.ShareCompat$ShareCompatImplJB     (be.brunoparmentier.apkshare.eval__a$u)
===============================================================================
  i    public escapeHtml(java.lang.CharSequence)
  x    shouldAddChooserIntent(android.view.MenuItem)

android.support.v4.app.ShareCompatICS    (be.brunoparmentier.apkshare.eval_ll)
===============================================================================
  k    public static configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent)

android.support.v4.app.ShareCompatICS$ParseException     (be.brunoparmentier.apkshare.eval_ex)
===============================================================================
  No methods

android.support.v4.app.ShareCompatJB     (be.brunoparmentier.apkshare.eval_pc)
===============================================================================
  j    public static escapeHtml(java.lang.CharSequence)

android.support.v4.app.ShareCompatJB$ArrayOutOfBoundsException   (be.brunoparmentier.apkshare.eval_jn)
===============================================================================
  No methods

android.support.v4.app.SharedElementCallback     (be.brunoparmentier.apkshare.eval_j7)
===============================================================================
  n    public onRejectSharedElements(java.util.List)
  o    public onCreateSnapshotView(android.content.Context,android.os.Parcelable)
  o    public onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)
  q    private static createDrawableBitmap(android.graphics.drawable.Drawable)
  q    public onMapSharedElements(java.util.List,java.util.Map)
  t    public onSharedElementEnd(java.util.List,java.util.List,java.util.List)
  x    public onSharedElementStart(java.util.List,java.util.List,java.util.List)

android.support.v4.app.SharedElementCallback$Exception   (be.brunoparmentier.apkshare.eval_k4)
===============================================================================
  No methods

android.support.v4.app.SuperNotCalledException   (be.brunoparmentier.apkshare.eval_jv)
===============================================================================
  No methods

android.support.v4.app.SuperNotCalledException$ArrayOutOfBoundsException (be.brunoparmentier.apkshare.eval_dl)
===============================================================================
  No methods

android.support.v4.app.TaskStackBuilder  (be.brunoparmentier.apkshare.eval_pm)
===============================================================================
  b        public startActivities(android.os.Bundle)
  eval_q   public static create(android.content.Context)
  eval_u   public getIntents()
  h        public static from(android.content.Context)
  i        public addParentStack(android.app.Activity)
  i        public getIntent(int)
  j        public editIntentAt(int)
  m        public startActivities()
  n        public getPendingIntent(int,int)
  o        public addNextIntent(android.content.Intent)
  q        public getPendingIntent(int,int,android.os.Bundle)
  v        public addParentStack(android.content.ComponentName)
  v        public addNextIntentWithParentStack(android.content.Intent)
  v        public addParentStack(java.lang.Class)
  x        public getIntentCount()
  iterator public iterator()

android.support.v4.app.TaskStackBuilder$Exception        (be.brunoparmentier.apkshare.eval_l6)
===============================================================================
  No methods

android.support.v4.app.TaskStackBuilder$SupportParentable        (be.brunoparmentier.apkshare.eval_pm$o)
===============================================================================
  g    public abstract getSupportParentActivityIntent()

android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl     (be.brunoparmentier.apkshare.eval_pm$n)
===============================================================================
  d    public abstract getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle)

android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase (be.brunoparmentier.apkshare.eval_pm$b)
===============================================================================
  d    public getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle)

android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb    (be.brunoparmentier.apkshare.eval_pm$c)
===============================================================================
  d    public getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle)

android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean    (be.brunoparmentier.apkshare.eval_pm$g)
===============================================================================
  d    public getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle)

android.support.v4.app.TaskStackBuilderHoneycomb (be.brunoparmentier.apkshare.eval_th)
===============================================================================
  i    public static getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int)

android.support.v4.app.TaskStackBuilderHoneycomb$IOException     (be.brunoparmentier.apkshare.eval_cb)
===============================================================================
  No methods

android.support.v4.app.TaskStackBuilderJellybean (be.brunoparmentier.apkshare.eval_ec)
===============================================================================
  l    public static getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle)

android.support.v4.app.TaskStackBuilderJellybean$IOException     (be.brunoparmentier.apkshare.eval_rq)
===============================================================================
  No methods

android.support.v4.content.AsyncTaskLoader       (be.brunoparmentier.apkshare.eval_n8)
===============================================================================
  b    public setUpdateThrottle(long)
  f    protected onForceLoad()
  g    public waitForLoader()
  h    public cancelLoad()
  i    protected onLoadInBackground()
  j    dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object)
  k    public onCanceled(java.lang.Object)
  m    public abstract loadInBackground()
  r    public dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
  t    dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object)
  w    executePendingTask()

android.support.v4.content.AsyncTaskLoader$LoadTask      (be.brunoparmentier.apkshare.eval_n8$c)
===============================================================================
  eval_x   protected transient doInBackground(java.lang.Void[])
  g        protected onCancelled()
  g        protected onPostExecute(java.lang.Object)
  n        static access$000(android.support.v4.content.AsyncTaskLoader$LoadTask)
  w        protected volatile doInBackground(java.lang.Object[])
  run      public run()

android.support.v4.content.AsyncTaskLoader$ParseException        (be.brunoparmentier.apkshare.eval_cc)
===============================================================================
  No methods

android.support.v4.content.ContextCompat (be.brunoparmentier.apkshare.eval_l3)
===============================================================================
  c    public static startActivities(android.content.Context,android.content.Intent[])
  i    public static startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
  k    public final getNoBackupFilesDir(android.content.Context)
  l    public static getExternalCacheDirs(android.content.Context)
  l    private static transient buildPath(java.io.File,java.lang.String[])
  s    public static getObbDirs(android.content.Context)
  w    public final getCodeCacheDir(android.content.Context)
  y    public static getExternalFilesDirs(android.content.Context,java.lang.String)
  y    private static synchronized createFilesDir(java.io.File)
  z    public static final getDrawable(android.content.Context,int)

android.support.v4.content.ContextCompat$NullPointerException    (be.brunoparmentier.apkshare.eval_jq)
===============================================================================
  No methods

android.support.v4.content.ContextCompatApi21    (be.brunoparmentier.apkshare.eval_oa)
===============================================================================
  e    public static getNoBackupFilesDir(android.content.Context)
  p    public static getCodeCacheDir(android.content.Context)
  p    public static getDrawable(android.content.Context,int)

android.support.v4.content.ContextCompatApi21$NullPointerException       (be.brunoparmentier.apkshare.eval_gy)
===============================================================================
  No methods

android.support.v4.content.ContextCompatFroyo    (be.brunoparmentier.apkshare.eval_ti)
===============================================================================
  t    public static getExternalFilesDir(android.content.Context,java.lang.String)
  u    public static getExternalCacheDir(android.content.Context)

android.support.v4.content.ContextCompatFroyo$NullPointerException       (be.brunoparmentier.apkshare.eval_nr)
===============================================================================
  No methods

android.support.v4.content.ContextCompatHoneycomb        (be.brunoparmentier.apkshare.eval_nv)
===============================================================================
  c    public static getObbDir(android.content.Context)
  l    static startActivities(android.content.Context,android.content.Intent[])

android.support.v4.content.ContextCompatHoneycomb$Exception      (be.brunoparmentier.apkshare.eval_av)
===============================================================================
  No methods

android.support.v4.content.ContextCompatJellybean        (be.brunoparmentier.apkshare.eval_e7)
===============================================================================
  z    public static startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)

android.support.v4.content.ContextCompatJellybean$Exception      (be.brunoparmentier.apkshare.eval_yw)
===============================================================================
  No methods

android.support.v4.content.ContextCompatKitKat   (be.brunoparmentier.apkshare.eval_f3)
===============================================================================
  b    public static getExternalFilesDirs(android.content.Context,java.lang.String)
  i    public static getObbDirs(android.content.Context)
  v    public static getExternalCacheDirs(android.content.Context)

android.support.v4.content.ContextCompatKitKat$ArrayOutOfBoundsException (be.brunoparmentier.apkshare.eval_vk)
===============================================================================
  No methods

android.support.v4.content.CursorLoader  (be.brunoparmentier.apkshare.eval_me)
===============================================================================
  d        public getSelection()
  e        public deliverResult(android.database.Cursor)
  eval_g   public setSortOrder(java.lang.String)
  eval_n   public setSelectionArgs(java.lang.String[])
  eval_t   public getProjection()
  f        public setProjection(java.lang.String[])
  k        public volatile onCanceled(java.lang.Object)
  m        public loadInBackground()
  n        public getSortOrder()
  p        protected onStartLoading()
  q        public getUri()
  q        public onCanceled(android.database.Cursor)
  r        protected onStopLoading()
  r        public dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
  s        public setSelection(java.lang.String)
  t        protected onReset()
  w        public volatile deliverResult(java.lang.Object)
  y        public setUri(android.net.Uri)
  z        public getSelectionArgs()

android.support.v4.content.CursorLoader$Exception        (be.brunoparmentier.apkshare.eval_go)
===============================================================================
  No methods

android.support.v4.content.FileProvider  (be.brunoparmentier.apkshare.eval_gh)
===============================================================================
  d            private static copyOf(java.lang.Object[],int)
  f            private static parsePathStrategy(android.content.Context,java.lang.String)
  g            public static getUriForFile(android.content.Context,java.lang.String,java.io.File)
  i            private static transient buildPath(java.io.File,java.lang.String[])
  j            private static modeToMode(java.lang.String)
  w            private static getPathStrategy(android.content.Context,java.lang.String)
  z            private static copyOf(java.lang.String[],int)
  attachInfo   public attachInfo(android.content.Context,android.content.pm.ProviderInfo)
  delete       public delete(android.net.Uri,java.lang.String,java.lang.String[])
  getType      public getType(android.net.Uri)
  insert       public insert(android.net.Uri,android.content.ContentValues)
  onCreate     public onCreate()
  openFile     public openFile(android.net.Uri,java.lang.String)
  query        public query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
  update       public update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])

android.support.v4.content.FileProvider$Exception        (be.brunoparmentier.apkshare.eval_dw)
===============================================================================
  No methods

android.support.v4.content.FileProvider$PathStrategy     (be.brunoparmentier.apkshare.eval_gh$c)
===============================================================================
  z    public abstract getFileForUri(android.net.Uri)
  z    public abstract getUriForFile(java.io.File)

android.support.v4.content.FileProvider$SimplePathStrategy       (be.brunoparmentier.apkshare.eval_gh$f)
===============================================================================
  w    public addRoot(java.lang.String,java.io.File)
  z    public getFileForUri(android.net.Uri)
  z    public getUriForFile(java.io.File)

android.support.v4.content.IntentCompat  (be.brunoparmentier.apkshare.eval_x_)
===============================================================================
  c    public static makeRestartActivityTask(android.content.ComponentName)
  t    public static makeMainSelectorActivity(java.lang.String,java.lang.String)
  x    public static makeMainActivity(android.content.ComponentName)

android.support.v4.content.IntentCompat$Exception        (be.brunoparmentier.apkshare.eval_g8)
===============================================================================
  No methods

android.support.v4.content.IntentCompat$IntentCompatImpl (be.brunoparmentier.apkshare.eval_x_$w)
===============================================================================
  q    public abstract makeRestartActivityTask(android.content.ComponentName)
  u    public abstract makeMainSelectorActivity(java.lang.String,java.lang.String)
  z    public abstract makeMainActivity(android.content.ComponentName)

android.support.v4.content.IntentCompat$IntentCompatImplBase     (be.brunoparmentier.apkshare.eval_x_$s)
===============================================================================
  q    public makeRestartActivityTask(android.content.ComponentName)
  u    public makeMainSelectorActivity(java.lang.String,java.lang.String)
  z    public makeMainActivity(android.content.ComponentName)

android.support.v4.content.IntentCompat$IntentCompatImplHC       (be.brunoparmentier.apkshare.eval_x_$e)
===============================================================================
  q    public makeRestartActivityTask(android.content.ComponentName)
  z    public makeMainActivity(android.content.ComponentName)

android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1   (be.brunoparmentier.apkshare.eval_x_$c)
===============================================================================
  u    public makeMainSelectorActivity(java.lang.String,java.lang.String)

android.support.v4.content.IntentCompatHoneycomb (be.brunoparmentier.apkshare.eval_cg)
===============================================================================
  a    public static makeRestartActivityTask(android.content.ComponentName)
  w    public static makeMainActivity(android.content.ComponentName)

android.support.v4.content.IntentCompatHoneycomb$IOException     (be.brunoparmentier.apkshare.eval_q4)
===============================================================================
  No methods

android.support.v4.content.IntentCompatIcsMr1    (be.brunoparmentier.apkshare.eval_cf)
===============================================================================
  l    public static makeMainSelectorActivity(java.lang.String,java.lang.String)

android.support.v4.content.IntentCompatIcsMr1$NullPointerException       (be.brunoparmentier.apkshare.eval__e)
===============================================================================
  No methods

android.support.v4.content.Loader        (be.brunoparmentier.apkshare.eval_gu)
===============================================================================
  a        public isStarted()
  a        public dataToString(java.lang.Object)
  c        public abandon()
  e        public getId()
  e        public registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener)
  eval__   protected onAbandon()
  eval_a   public commitContentChanged()
  eval_b   public takeContentChanged()
  eval_f   public onContentChanged()
  eval_l   public getContext()
  eval_n   public rollbackContentChanged()
  eval_s   public isReset()
  eval_w   public stopLoading()
  eval_x   public isAbandoned()
  eval_y   public final startLoading()
  f        protected onForceLoad()
  k        public reset()
  p        protected onStartLoading()
  q        public unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener)
  r        protected onStopLoading()
  r        public dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
  s        public forceLoad()
  t        protected onReset()
  w        public deliverResult(java.lang.Object)
  toString public toString()

android.support.v4.content.Loader$ForceLoadContentObserver       (be.brunoparmentier.apkshare.eval_gu$m)
===============================================================================
  deliverSelfNotifications public deliverSelfNotifications()
  onChange                 public onChange(boolean)

android.support.v4.content.Loader$IOException    (be.brunoparmentier.apkshare.eval_bu)
===============================================================================
  No methods

android.support.v4.content.Loader$OnLoadCompleteListener (be.brunoparmentier.apkshare.eval_gu$j)
===============================================================================
  f    public abstract onLoadComplete(android.support.v4.content.Loader,java.lang.Object)

android.support.v4.content.LocalBroadcastManager (be.brunoparmentier.apkshare.eval_bt)
===============================================================================
  b        public sendBroadcastSync(android.content.Intent)
  d        public sendBroadcast(android.content.Intent)
  eval_d   public unregisterReceiver(android.content.BroadcastReceiver)
  j        static access$000(android.support.v4.content.LocalBroadcastManager)
  o        public registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)
  r        private executePendingBroadcasts()
  t        public static getInstance(android.content.Context)

android.support.v4.content.LocalBroadcastManager$1       (be.brunoparmentier.apkshare.eval_bt$1)
===============================================================================
  handleMessage    public handleMessage(android.os.Message)

android.support.v4.content.LocalBroadcastManager$BroadcastRecord (be.brunoparmentier.apkshare.eval_bt$d)
===============================================================================
  No methods

android.support.v4.content.LocalBroadcastManager$IOException     (be.brunoparmentier.apkshare.eval_xi)
===============================================================================
  No methods

android.support.v4.content.LocalBroadcastManager$ReceiverRecord  (be.brunoparmentier.apkshare.eval_bt$s)
===============================================================================
  toString public toString()

android.support.v4.content.ModernAsyncTask       (be.brunoparmentier.apkshare.eval_tk)
===============================================================================
  a    private postResultIfNotInvoked(java.lang.Object)
  a    public final transient execute(java.lang.Object[])
  a    public final get(long,java.util.concurrent.TimeUnit)
  e    protected transient onProgressUpdate(java.lang.Object[])
  g    protected onCancelled()
  g    protected onPostExecute(java.lang.Object)
  h    protected onCancelled(java.lang.Object)
  h    public static setDefaultExecutor(java.util.concurrent.Executor)
  i    public final isCancelled()
  j    static access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object)
  k    static access$200(android.support.v4.content.ModernAsyncTask)
  m    public static init()
  q    static access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object)
  q    private finish(java.lang.Object)
  r    public final getStatus()
  s    static access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object)
  t    protected final transient publishProgress(java.lang.Object[])
  v    public static execute(java.lang.Runnable)
  w    public final get()
  w    protected abstract transient doInBackground(java.lang.Object[])
  x    protected onPreExecute()
  x    private postResult(java.lang.Object)
  y    public final cancel(boolean)
  z    public final transient executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])

android.support.v4.content.ModernAsyncTask$1     (be.brunoparmentier.apkshare.eval_tk$1)
===============================================================================
  newThread    public newThread(java.lang.Runnable)

android.support.v4.content.ModernAsyncTask$2     (be.brunoparmentier.apkshare.eval_tk$2)
===============================================================================
  call public call()

android.support.v4.content.ModernAsyncTask$3     (be.brunoparmentier.apkshare.eval_tk$3)
===============================================================================
  done protected done()

android.support.v4.content.ModernAsyncTask$4     (be.brunoparmentier.apkshare.eval_tk$4)
===============================================================================
  No methods

android.support.v4.content.ModernAsyncTask$AsyncTaskResult       (be.brunoparmentier.apkshare.eval_tk$r)
===============================================================================
  No methods

android.support.v4.content.ModernAsyncTask$InternalHandler       (be.brunoparmentier.apkshare.eval_tk$l)
===============================================================================
  handleMessage    public handleMessage(android.os.Message)

android.support.v4.content.ModernAsyncTask$ParseException        (be.brunoparmentier.apkshare.eval_yd)
===============================================================================
  No methods

android.support.v4.content.ModernAsyncTask$Status        (be.brunoparmentier.apkshare.eval_tk$j)
===============================================================================
  valueOf  public static valueOf(java.lang.String)
  values   public static values()

android.support.v4.content.ModernAsyncTask$WorkerRunnable        (be.brunoparmentier.apkshare.eval_tk$o)
===============================================================================
  No methods

android.support.v4.content.WakefulBroadcastReceiver      (be.brunoparmentier.apkshare.eval_to)
===============================================================================
  e    public static startWakefulService(android.content.Context,android.content.Intent)
  l    public static completeWakefulIntent(android.content.Intent)

android.support.v4.content.WakefulBroadcastReceiver$ArrayOutOfBoundsException    (be.brunoparmentier.apkshare.eval_w9)
===============================================================================
  No methods

android.support.v4.content.pm.ActivityInfoCompat (be.brunoparmentier.apkshare.eval_q1)
===============================================================================
  No methods

android.support.v4.content.pm.ActivityInfoCompat$IOException     (be.brunoparmentier.apkshare.eval_es)
===============================================================================
  No methods

android.support.v4.content.res.ResourcesCompat   (be.brunoparmentier.apkshare.eval_i0)
===============================================================================
  a    public static getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
  n    public static getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)

android.support.v4.content.res.ResourcesCompat$ArrayOutOfBoundsException (be.brunoparmentier.apkshare.eval_ij)
===============================================================================
  No methods

android.support.v4.content.res.ResourcesCompatApi21      (be.brunoparmentier.apkshare.eval_o1)
===============================================================================
  e    public static getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
  z    public static getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)

android.support.v4.content.res.ResourcesCompatApi21$ArrayOutOfBoundsException    (be.brunoparmentier.apkshare.eval_gp)
===============================================================================
  No methods

android.support.v4.content.res.ResourcesCompatIcsMr1     (be.brunoparmentier.apkshare.eval_ka)
===============================================================================
  j    public static getDrawableForDensity(android.content.res.Resources,int,int)

android.support.v4.content.res.ResourcesCompatIcsMr1$ParseException      (be.brunoparmentier.apkshare.eval_hv)
===============================================================================
  No methods

android.support.v4.database.DatabaseUtilsCompat  (be.brunoparmentier.apkshare.eval_u1)
===============================================================================
  h    public static appendSelectionArgs(java.lang.String[],java.lang.String[])
  y    public static concatenateWhere(java.lang.String,java.lang.String)

android.support.v4.database.DatabaseUtilsCompat$ParseException   (be.brunoparmentier.apkshare.eval_g5)
===============================================================================
  No methods

android.support.v4.graphics.BitmapCompat (be.brunoparmentier.apkshare.eval_s2)
===============================================================================
  c    public static getAllocationByteCount(android.graphics.Bitmap)
  f    public static hasMipMap(android.graphics.Bitmap)
  z    public static setHasMipMap(android.graphics.Bitmap,boolean)

android.support.v4.graphics.BitmapCompat$BaseBitmapImpl  (be.brunoparmentier.apkshare.eval_s2$b)
===============================================================================
  c    public setHasMipMap(android.graphics.Bitmap,boolean)
  f    public hasMipMap(android.graphics.Bitmap)
  z    public getAllocationByteCount(android.graphics.Bitmap)

android.support.v4.graphics.BitmapCompat$BitmapImpl      (be.brunoparmentier.apkshare.eval_s2$y)
===============================================================================
  c    public abstract setHasMipMap(android.graphics.Bitmap,boolean)
  f    public abstract hasMipMap(android.graphics.Bitmap)
  z    public abstract getAllocationByteCount(android.graphics.Bitmap)

android.support.v4.graphics.BitmapCompat$HcMr1BitmapCompatImpl   (be.brunoparmentier.apkshare.eval_s2$i)
===============================================================================
  z    public getAllocationByteCount(android.graphics.Bitmap)

android.support.v4.graphics.BitmapCompat$JbMr2BitmapCompatImpl   (be.brunoparmentier.apkshare.eval_s2$o)
===============================================================================
  c    public setHasMipMap(android.graphics.Bitmap,boolean)
  f    public hasMipMap(android.graphics.Bitmap)

android.support.v4.graphics.BitmapCompat$KitKatBitmapCompatImpl  (be.brunoparmentier.apkshare.eval_s2$a)
===============================================================================
  z    public getAllocationByteCount(android.graphics.Bitmap)

android.support.v4.graphics.BitmapCompat$NullPointerException    (be.brunoparmentier.apkshare.eval_vv)
===============================================================================
  No methods

android.support.v4.graphics.BitmapCompatHoneycombMr1     (be.brunoparmentier.apkshare.eval_zq)
===============================================================================
  n    static getAllocationByteCount(android.graphics.Bitmap)

android.support.v4.graphics.BitmapCompatHoneycombMr1$ParseException      (be.brunoparmentier.apkshare.eval_ve)
===============================================================================
  No methods

android.support.v4.graphics.BitmapCompatJellybeanMR2     (be.brunoparmentier.apkshare.eval_hw)
===============================================================================
  e    public static setHasMipMap(android.graphics.Bitmap,boolean)
  j    public static hasMipMap(android.graphics.Bitmap)

android.support.v4.graphics.BitmapCompatJellybeanMR2$ParseException      (be.brunoparmentier.apkshare.eval_hu)
===============================================================================
  No methods

android.support.v4.graphics.BitmapCompatKitKat   (be.brunoparmentier.apkshare.eval_e8)
===============================================================================
  f    static getAllocationByteCount(android.graphics.Bitmap)

android.support.v4.graphics.BitmapCompatKitKat$ArrayOutOfBoundsException (be.brunoparmentier.apkshare.eval_mi)
===============================================================================
  No methods

android.support.v4.graphics.ColorUtils   (be.brunoparmentier.apkshare.eval_oj)
===============================================================================
  c    private static compositeAlpha(int,int)
  c    private static compositeComponent(int,int,int,int,int)
  h    private static constrain(float,float,float)
  l    public static setAlphaComponent(int,int)
  o    public static calculateMinimumAlpha(int,int,float)
  p    public static compositeColors(int,int)
  r    public static calculateLuminance(int)
  t    public static HSLToColor(float[])
  u    public static RGBToHSL(int,int,int,float[])
  v    public static colorToHSL(int,float[])
  v    private static constrain(int,int,int)
  y    public static calculateContrast(int,int)

android.support.v4.graphics.ColorUtils$IOException       (be.brunoparmentier.apkshare.eval_dx)
===============================================================================
  No methods

android.support.v4.graphics.drawable.DrawableCompat      (be.brunoparmentier.apkshare.eval_p2)
===============================================================================
  a        public static setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
  c        public static unwrap(android.graphics.drawable.Drawable)
  d        public static wrap(android.graphics.drawable.Drawable)
  e        public static jumpToCurrentState(android.graphics.drawable.Drawable)
  eval_h   public static setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
  g        public static setHotspot(android.graphics.drawable.Drawable,float,float)
  k        public static setAutoMirrored(android.graphics.drawable.Drawable,boolean)
  q        public static setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
  t        public static isAutoMirrored(android.graphics.drawable.Drawable)
  y        public static setTint(android.graphics.drawable.Drawable,int)

android.support.v4.graphics.drawable.DrawableCompat$ArrayOutOfBoundsException    (be.brunoparmentier.apkshare.eval_ws)
===============================================================================
  No methods

android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl     (be.brunoparmentier.apkshare.eval_p2$j)
===============================================================================
  c    public wrap(android.graphics.drawable.Drawable)
  g    public setHotspot(android.graphics.drawable.Drawable,float,float)
  j    public setAutoMirrored(android.graphics.drawable.Drawable,boolean)
  n    public isAutoMirrored(android.graphics.drawable.Drawable)
  o    public setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
  r    public setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
  s    public setTint(android.graphics.drawable.Drawable,int)
  w    public jumpToCurrentState(android.graphics.drawable.Drawable)
  z    public setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)

android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl (be.brunoparmentier.apkshare.eval_p2$x)
===============================================================================
  c    public abstract wrap(android.graphics.drawable.Drawable)
  g    public abstract setHotspot(android.graphics.drawable.Drawable,float,float)
  j    public abstract setAutoMirrored(android.graphics.drawable.Drawable,boolean)
  n    public abstract isAutoMirrored(android.graphics.drawable.Drawable)
  o    public abstract setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
  r    public abstract setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
  s    public abstract setTint(android.graphics.drawable.Drawable,int)
  w    public abstract jumpToCurrentState(android.graphics.drawable.Drawable)
  z    public abstract setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)

android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl        (be.brunoparmentier.apkshare.eval_p2$z)
===============================================================================
  c    public wrap(android.graphics.drawable.Drawable)
  w    public jumpToCurrentState(android.graphics.drawable.Drawable)

android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl   (be.brunoparmentier.apkshare.eval_p2$u)
===============================================================================
  c    public wrap(android.graphics.drawable.Drawable)
  j    public setAutoMirrored(android.graphics.drawable.Drawable,boolean)
  n    public isAutoMirrored(android.graphics.drawable.Drawable)

android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl (be.brunoparmentier.apkshare.eval_p2$s)
===============================================================================
  c    public wrap(android.graphics.drawable.Drawable)
  g    public setHotspot(android.graphics.drawable.Drawable,float,float)
  o    public setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
  r    public setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
  s    public setTint(android.graphics.drawable.Drawable,int)
  z    public setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)

android.support.v4.graphics.drawable.DrawableCompat$LollipopMr1DrawableImpl      (be.brunoparmentier.apkshare.eval_p2$y)
===============================================================================
  c    public wrap(android.graphics.drawable.Drawable)

android.support.v4.graphics.drawable.DrawableCompatApi22 (be.brunoparmentier.apkshare.eval_v1)
===============================================================================
  j    public static wrapForTinting(android.graphics.drawable.Drawable)

android.support.v4.graphics.drawable.DrawableCompatApi22$ArrayOutOfBoundsException       (be.brunoparmentier.apkshare.eval_fo)
===============================================================================
  No methods

android.support.v4.graphics.drawable.DrawableCompatBase  (be.brunoparmentier.apkshare.eval_vs)
===============================================================================
  f    public static setTint(android.graphics.drawable.Drawable,int)
  j    public static wrapForTinting(android.graphics.drawable.Drawable)
  q    public static setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
  q    public static setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)

android.support.v4.graphics.drawable.DrawableCompatBase$NullPointerException     (be.brunoparmentier.apkshare.eval_cp)
===============================================================================
  No methods

android.support.v4.graphics.drawable.DrawableCompatHoneycomb     (be.brunoparmentier.apkshare.eval_qq)
===============================================================================
  h    public static wrapForTinting(android.graphics.drawable.Drawable)
  k    public static jumpToCurrentState(android.graphics.drawable.Drawable)

android.support.v4.graphics.drawable.DrawableCompatHoneycomb$NullPointerException        (be.brunoparmentier.apkshare.eval_lj)
===============================================================================
  No methods

android.support.v4.graphics.drawable.DrawableCompatKitKat        (be.brunoparmentier.apkshare.eval_ph)
===============================================================================
  m    public static setAutoMirrored(android.graphics.drawable.Drawable,boolean)
  q    public static wrapForTinting(android.graphics.drawable.Drawable)
  z    public static isAutoMirrored(android.graphics.drawable.Drawable)

android.support.v4.graphics.drawable.DrawableCompatKitKat$ParseException (be.brunoparmentier.apkshare.eval_dz)
===============================================================================
  No methods

android.support.v4.graphics.drawable.DrawableCompatLollipop      (be.brunoparmentier.apkshare.eval_g3)
===============================================================================
  f    public static setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
  f    public static setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
  g    public static wrapForTinting(android.graphics.drawable.Drawable)
  o    public static setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
  q    public static setTint(android.graphics.drawable.Drawable,int)
  v    public static setHotspot(android.graphics.drawable.Drawable,float,float)

android.support.v4.graphics.drawable.DrawableCompatLollipop$Exception    (be.brunoparmentier.apkshare.eval_fe)
===============================================================================
  No methods

android.support.v4.graphics.drawable.DrawableWrapper     (be.brunoparmentier.apkshare.eval_dq)
===============================================================================
  setTint      public abstract setTint(int)
  setTintList  public abstract setTintList(android.content.res.ColorStateList)
  setTintMode  public abstract setTintMode(android.graphics.PorterDuff$Mode)
  z            public abstract getWrappedDrawable()
  z            public abstract setWrappedDrawable(android.graphics.drawable.Drawable)

android.support.v4.graphics.drawable.DrawableWrapper$ParseException      (be.brunoparmentier.apkshare.eval_i3)
===============================================================================
  No methods

android.support.v4.graphics.drawable.DrawableWrapperDonut        (be.brunoparmentier.apkshare.eval_re)
===============================================================================
  eval_o                       private updateTint(int[])
  z                            public getWrappedDrawable()
  z                            public setWrappedDrawable(android.graphics.drawable.Drawable)
  draw                         public draw(android.graphics.Canvas)
  getChangingConfigurations    public getChangingConfigurations()
  getCurrent                   public getCurrent()
  getIntrinsicHeight           public getIntrinsicHeight()
  getIntrinsicWidth            public getIntrinsicWidth()
  getMinimumHeight             public getMinimumHeight()
  getMinimumWidth              public getMinimumWidth()
  getOpacity                   public getOpacity()
  getPadding                   public getPadding(android.graphics.Rect)
  getState                     public getState()
  getTransparentRegion         public getTransparentRegion()
  invalidateDrawable           public invalidateDrawable(android.graphics.drawable.Drawable)
  isStateful                   public isStateful()
  mutate                       public mutate()
  onBoundsChange               protected onBoundsChange(android.graphics.Rect)
  onLevelChange                protected onLevelChange(int)
  scheduleDrawable             public scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
  setAlpha                     public setAlpha(int)
  setChangingConfigurations    public setChangingConfigurations(int)
  setColorFilter               public setColorFilter(android.graphics.ColorFilter)
  setDither                    public setDither(boolean)
  setFilterBitmap              public setFilterBitmap(boolean)
  setState                     public setState(int[])
  setTint                      public setTint(int)
  setTintList                  public setTintList(android.content.res.ColorStateList)
  setTintMode                  public setTintMode(android.graphics.PorterDuff$Mode)
  setVisible                   public setVisible(boolean,boolean)
  unscheduleDrawable           public unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)

android.support.v4.graphics.drawable.DrawableWrapperDonut$ParseException (be.brunoparmentier.apkshare.eval_uf)
===============================================================================
  No methods

android.support.v4.graphics.drawable.DrawableWrapperHoneycomb    (be.brunoparmentier.apkshare.eval_id)
===============================================================================
  jumpToCurrentState   public jumpToCurrentState()

android.support.v4.graphics.drawable.DrawableWrapperHoneycomb$ArrayOutOfBoundsException  (be.brunoparmentier.apkshare.eval_jm)
===============================================================================
  No methods

android.support.v4.graphics.drawable.DrawableWrapperKitKat       (be.brunoparmentier.apkshare.eval_f1)
===============================================================================
  isAutoMirrored   public isAutoMirrored()
  setAutoMirrored  public setAutoMirrored(boolean)

android.support.v4.graphics.drawable.DrawableWrapperKitKat$IOException   (be.brunoparmentier.apkshare.eval_lp)
===============================================================================
  No methods

android.support.v4.graphics.drawable.DrawableWrapperLollipop     (be.brunoparmentier.apkshare.eval_sg)
===============================================================================
  applyTheme       public applyTheme(android.content.res.Resources$Theme)
  canApplyTheme    public canApplyTheme()
  getDirtyBounds   public getDirtyBounds()
  getOutline       public getOutline(android.graphics.Outline)
  setHotspot       public setHotspot(float,float)
  setHotspotBounds public setHotspotBounds(int,int,int,int)

android.support.v4.graphics.drawable.DrawableWrapperLollipop$NullPointerException        (be.brunoparmentier.apkshare.eval_er)
===============================================================================
  No methods

android.support.v4.graphics.drawable.RoundedBitmapDrawable       (be.brunoparmentier.apkshare.eval_hb)
===============================================================================
  d                    public final getBitmap()
  eval_e               public hasAntiAlias()
  eval_i               public getCornerRadius()
  g                    public setMipMap(boolean)
  i                    private static isGreaterThanZero(float)
  j                    updateDstRect()
  j                    public setTargetDensity(int)
  m                    public setTargetDensity(android.util.DisplayMetrics)
  m                    gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect)
  n                    public setTargetDensity(android.graphics.Canvas)
  o                    public final getPaint()
  p                    public hasMipMap()
  u                    public getGravity()
  u                    public setCornerRadius(float)
  v                    private computeBitmapSize()
  x                    public setAntiAlias(boolean)
  x                    public setGravity(int)
  draw                 public draw(android.graphics.Canvas)
  getAlpha             public getAlpha()
  getColorFilter       public getColorFilter()
  getIntrinsicHeight   public getIntrinsicHeight()
  getIntrinsicWidth    public getIntrinsicWidth()
  getOpacity           public getOpacity()
  setAlpha             public setAlpha(int)
  setColorFilter       public setColorFilter(android.graphics.ColorFilter)
  setDither            public setDither(boolean)
  setFilterBitmap      public setFilterBitmap(boolean)

android.support.v4.graphics.drawable.RoundedBitmapDrawable$IOException   (be.brunoparmentier.apkshare.eval_z1)
===============================================================================
  No methods

android.support.v4.graphics.drawable.RoundedBitmapDrawable21     (be.brunoparmentier.apkshare.eval_xx)
===============================================================================
  g            public setMipMap(boolean)
  m            gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect)
  p            public hasMipMap()
  getOutline   public getOutline(android.graphics.Outline)

android.support.v4.graphics.drawable.RoundedBitmapDrawable21$NullPointerException        (be.brunoparmentier.apkshare.eval__y)
===============================================================================
  No methods

android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory        (be.brunoparmentier.apkshare.eval_ef)
===============================================================================
  n    public static create(android.content.res.Resources,android.graphics.Bitmap)
  t    public static create(android.content.res.Resources,java.io.InputStream)
  z    public static create(android.content.res.Resources,java.lang.String)

android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable   (be.brunoparmentier.apkshare.eval_ef$c)
===============================================================================
  g    public setMipMap(boolean)
  m    gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect)
  p    public hasMipMap()

android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory$NullPointerException   (be.brunoparmentier.apkshare.eval_tv)
===============================================================================
  No methods

android.support.v4.hardware.display.DisplayManagerCompat (be.brunoparmentier.apkshare.eval_m8)
===============================================================================
  g    public abstract getDisplays()
  i    public abstract getDisplays(java.lang.String)
  n    public static getInstance(android.content.Context)
  s    public abstract getDisplay(int)

android.support.v4.hardware.display.DisplayManagerCompat$ArrayOutOfBoundsException       (be.brunoparmentier.apkshare.eval_v2)
===============================================================================
  No methods

android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl        (be.brunoparmentier.apkshare.eval_m8$m)
===============================================================================
  g    public getDisplays()
  i    public getDisplays(java.lang.String)
  s    public getDisplay(int)

android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl      (be.brunoparmentier.apkshare.eval_m8$x)
===============================================================================
  g    public getDisplays()
  i    public getDisplays(java.lang.String)
  s    public getDisplay(int)

android.support.v4.hardware.display.DisplayManagerJellybeanMr1   (be.brunoparmentier.apkshare.eval_v8)
===============================================================================
  a    public static getDisplay(java.lang.Object,int)
  l    public static getDisplays(java.lang.Object,java.lang.String)
  s    public static getDisplays(java.lang.Object)
  z    public static getDisplayManager(android.content.Context)

android.support.v4.hardware.display.DisplayManagerJellybeanMr1$ParseException    (be.brunoparmentier.apkshare.eval_qb)
===============================================================================
  No methods

android.support.v4.internal.view.SupportMenu     (be.brunoparmentier.apkshare.eval_ge)
===============================================================================
  No methods

android.support.v4.internal.view.SupportMenu$Exception   (be.brunoparmentier.apkshare.eval_ep)
===============================================================================
  No methods

android.support.v4.internal.view.SupportMenuItem (be.brunoparmentier.apkshare.eval_y3)
===============================================================================
  d                    public abstract setSupportActionProvider(android.support.v4.view.ActionProvider)
  p                    public abstract setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener)
  w                    public abstract getSupportActionProvider()
  collapseActionView   public abstract collapseActionView()
  expandActionView     public abstract expandActionView()
  getActionView        public abstract getActionView()
  isActionViewExpanded public abstract isActionViewExpanded()
  setActionView        public abstract setActionView(android.view.View)
  setActionView        public abstract setActionView(int)
  setShowAsAction      public abstract setShowAsAction(int)
  setShowAsActionFlags public abstract setShowAsActionFlags(int)

android.support.v4.internal.view.SupportMenuItem$IOException     (be.brunoparmentier.apkshare.eval_r_)
===============================================================================
  No methods

android.support.v4.internal.view.SupportSubMenu  (be.brunoparmentier.apkshare.eval_ff)
===============================================================================
  No methods

android.support.v4.internal.view.SupportSubMenu$ParseException   (be.brunoparmentier.apkshare.eval_m_)
===============================================================================
  No methods

android.support.v4.media.MediaDescriptionCompat  (be.brunoparmentier.apkshare.eval_tf)
===============================================================================
  eval_c           public getIconUri()
  h                public getTitle()
  i                public getIconBitmap()
  k                public getMediaId()
  l                public getDescription()
  q                public getSubtitle()
  t                public static fromMediaDescription(java.lang.Object)
  w                public getMediaDescription()
  z                public getExtras()
  describeContents public describeContents()
  toString         public toString()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.media.MediaDescriptionCompat$1        (be.brunoparmentier.apkshare.eval_tf$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.media.MediaDescriptionCompat$Builder  (be.brunoparmentier.apkshare.eval_tf$c)
===============================================================================
  eval_x   public setMediaId(java.lang.String)
  h        public build()
  s        public setIconBitmap(android.graphics.Bitmap)
  v        public setTitle(java.lang.CharSequence)
  w        public setExtras(android.os.Bundle)
  w        public setSubtitle(java.lang.CharSequence)
  x        public setIconUri(android.net.Uri)
  y        public setDescription(java.lang.CharSequence)

android.support.v4.media.MediaDescriptionCompat$ParseException   (be.brunoparmentier.apkshare.eval_af)
===============================================================================
  No methods

android.support.v4.media.MediaDescriptionCompatApi21     (be.brunoparmentier.apkshare.eval_rk)
===============================================================================
  b        public static getSubtitle(java.lang.Object)
  d        public static getIconBitmap(java.lang.Object)
  eval_f   public static getIconUri(java.lang.Object)
  h        public static writeToParcel(java.lang.Object,android.os.Parcel,int)
  j        public static getExtras(java.lang.Object)
  k        public static getMediaId(java.lang.Object)
  p        public static getDescription(java.lang.Object)
  q        public static fromParcel(android.os.Parcel)
  u        public static getTitle(java.lang.Object)

android.support.v4.media.MediaDescriptionCompatApi21$Builder     (be.brunoparmentier.apkshare.eval_rk$j)
===============================================================================
  a    public static setMediaId(java.lang.Object,java.lang.String)
  l    public static newInstance()
  m    public static setSubtitle(java.lang.Object,java.lang.CharSequence)
  p    public static build(java.lang.Object)
  q    public static setExtras(java.lang.Object,android.os.Bundle)
  r    public static setIconUri(java.lang.Object,android.net.Uri)
  s    public static setIconBitmap(java.lang.Object,android.graphics.Bitmap)
  u    public static setTitle(java.lang.Object,java.lang.CharSequence)
  y    public static setDescription(java.lang.Object,java.lang.CharSequence)

android.support.v4.media.MediaDescriptionCompatApi21$ParseException      (be.brunoparmentier.apkshare.eval_q0)
===============================================================================
  No methods

android.support.v4.media.MediaMetadataCompat     (be.brunoparmentier.apkshare.eval_jf)
===============================================================================
  e                static access$200()
  e                public getText(java.lang.String)
  f                public getDescription()
  g                public getMediaMetadata()
  g                public getRating(java.lang.String)
  i                public size()
  j                public getBitmap(java.lang.String)
  k                public getBundle()
  l                public keySet()
  r                public getString(java.lang.String)
  t                static access$100(android.support.v4.media.MediaMetadataCompat)
  u                public containsKey(java.lang.String)
  w                public static fromMediaMetadata(java.lang.Object)
  x                public getLong(java.lang.String)
  describeContents public describeContents()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.media.MediaMetadataCompat$1   (be.brunoparmentier.apkshare.eval_jf$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.media.MediaMetadataCompat$Builder     (be.brunoparmentier.apkshare.eval_jf$k)
===============================================================================
  f    public putBitmap(java.lang.String,android.graphics.Bitmap)
  i    public putRating(java.lang.String,android.support.v4.media.RatingCompat)
  i    public putText(java.lang.String,java.lang.CharSequence)
  i    public putLong(java.lang.String,long)
  t    public putString(java.lang.String,java.lang.String)
  y    public build()

android.support.v4.media.MediaMetadataCompat$Exception   (be.brunoparmentier.apkshare.eval_v5)
===============================================================================
  No methods

android.support.v4.media.MediaMetadataCompatApi21        (be.brunoparmentier.apkshare.eval_it)
===============================================================================
  eval_m   public static getText(java.lang.Object,java.lang.String)
  eval_w   public static getRating(java.lang.Object,java.lang.String)
  g        public static keySet(java.lang.Object)
  g        public static getLong(java.lang.Object,java.lang.String)
  h        public static getBitmap(java.lang.Object,java.lang.String)

android.support.v4.media.MediaMetadataCompatApi21$Builder        (be.brunoparmentier.apkshare.eval_it$y)
===============================================================================
  b    public static putRating(java.lang.Object,java.lang.String,java.lang.Object)
  e    public static putString(java.lang.Object,java.lang.String,java.lang.String)
  g    public static putText(java.lang.Object,java.lang.String,java.lang.CharSequence)
  l    public static newInstance()
  p    public static putLong(java.lang.Object,java.lang.String,long)
  z    public static build(java.lang.Object)
  z    public static putBitmap(java.lang.Object,java.lang.String,android.graphics.Bitmap)

android.support.v4.media.MediaMetadataCompatApi21$Exception      (be.brunoparmentier.apkshare.eval_xn)
===============================================================================
  No methods

android.support.v4.media.RatingCompat    (be.brunoparmentier.apkshare.eval_wj)
===============================================================================
  a                public getPercentRating()
  b                public isRated()
  c                public static newUnratedRating(int)
  e                public getStarRating()
  f                public getRatingStyle()
  g                public static fromRating(java.lang.Object)
  n                public hasHeart()
  o                public static newThumbRating(boolean)
  q                public isThumbUp()
  s                public static newPercentageRating(float)
  v                public getRating()
  z                public static newHeartRating(boolean)
  z                public static newStarRating(int,float)
  describeContents public describeContents()
  toString         public toString()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.media.RatingCompat$1  (be.brunoparmentier.apkshare.eval_wj$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.media.RatingCompat$ParseException     (be.brunoparmentier.apkshare.eval__5)
===============================================================================
  No methods

android.support.v4.media.RatingCompatApi21       (be.brunoparmentier.apkshare.eval_w5)
===============================================================================
  b        public static newHeartRating(boolean)
  eval_c   public static hasHeart(java.lang.Object)
  h        public static newThumbRating(boolean)
  i        public static getPercentRating(java.lang.Object)
  k        public static isThumbUp(java.lang.Object)
  l        public static getRatingStyle(java.lang.Object)
  n        public static newUnratedRating(int)
  q        public static newStarRating(int,float)
  t        public static newPercentageRating(float)
  u        public static isRated(java.lang.Object)
  x        public static getStarRating(java.lang.Object)

android.support.v4.media.RatingCompatApi21$ParseException        (be.brunoparmentier.apkshare.eval_ux)
===============================================================================
  No methods

android.support.v4.media.TransportController     (be.brunoparmentier.apkshare.eval_og)
===============================================================================
  c        public abstract registerStateListener(android.support.v4.media.TransportStateListener)
  d        public abstract getBufferPercentage()
  eval_c   public abstract getTransportControlFlags()
  h        public abstract stopPlaying()
  i        public abstract getCurrentPosition()
  q        public abstract getDuration()
  r        public abstract pausePlaying()
  u        public abstract startPlaying()
  v        public abstract seekTo(long)
  w        public abstract unregisterStateListener(android.support.v4.media.TransportStateListener)
  x        public abstract isPlaying()

android.support.v4.media.TransportController$Exception   (be.brunoparmentier.apkshare.eval_rp)
===============================================================================
  No methods

android.support.v4.media.TransportMediator       (be.brunoparmentier.apkshare.eval__2)
===============================================================================
  c        public registerStateListener(android.support.v4.media.TransportStateListener)
  d        public getBufferPercentage()
  e        private getListeners()
  eval_c   public getTransportControlFlags()
  eval_f   private reportTransportControlsChanged()
  f        public dispatchKeyEvent(android.view.KeyEvent)
  f        static isMediaKey(int)
  h        public stopPlaying()
  i        public getCurrentPosition()
  o        public refreshState()
  q        public getDuration()
  r        public pausePlaying()
  s        private reportPlayingChanged()
  t        public getRemoteControlClient()
  u        public startPlaying()
  v        public seekTo(long)
  w        private pushControllerState()
  w        public unregisterStateListener(android.support.v4.media.TransportStateListener)
  x        public isPlaying()
  y        public destroy()

android.support.v4.media.TransportMediator$1     (be.brunoparmentier.apkshare.eval__2$1)
===============================================================================
  g    public playbackPositionUpdate(long)
  k    public handleKey(android.view.KeyEvent)
  r    public handleAudioFocusChange(int)
  t    public getPlaybackPosition()

android.support.v4.media.TransportMediator$2     (be.brunoparmentier.apkshare.eval__2$2)
===============================================================================
  onKeyDown        public onKeyDown(int,android.view.KeyEvent)
  onKeyLongPress   public onKeyLongPress(int,android.view.KeyEvent)
  onKeyMultiple    public onKeyMultiple(int,int,android.view.KeyEvent)
  onKeyUp          public onKeyUp(int,android.view.KeyEvent)

android.support.v4.media.TransportMediator$ParseException        (be.brunoparmentier.apkshare.eval_bz)
===============================================================================
  No methods

android.support.v4.media.TransportMediatorCallback       (be.brunoparmentier.apkshare.eval_qt)
===============================================================================
  g    public abstract playbackPositionUpdate(long)
  k    public abstract handleKey(android.view.KeyEvent)
  r    public abstract handleAudioFocusChange(int)
  t    public abstract getPlaybackPosition()

android.support.v4.media.TransportMediatorCallback$NullPointerException  (be.brunoparmentier.apkshare.eval_u_)
===============================================================================
  No methods

android.support.v4.media.TransportMediatorJellybeanMR2   (be.brunoparmentier.apkshare.eval_y2)
===============================================================================
  d                        takeAudioFocus()
  eval_m                   dropAudioFocus()
  eval_w                   public startPlaying()
  eval_x                   public stopPlaying()
  h                        loseFocus()
  i                        windowDetached()
  j                        public getRemoteControlClient()
  l                        public pausePlaying()
  p                        windowAttached()
  r                        public refreshState(boolean,long,int)
  v                        public destroy()
  x                        gainFocus()
  onGetPlaybackPosition    public onGetPlaybackPosition()
  onPlaybackPositionUpdate public onPlaybackPositionUpdate(long)

android.support.v4.media.TransportMediatorJellybeanMR2$1 (be.brunoparmentier.apkshare.eval_y2$1)
===============================================================================
  onWindowAttached public onWindowAttached()
  onWindowDetached public onWindowDetached()

android.support.v4.media.TransportMediatorJellybeanMR2$2 (be.brunoparmentier.apkshare.eval_y2$2)
===============================================================================
  onWindowFocusChanged public onWindowFocusChanged(boolean)

android.support.v4.media.TransportMediatorJellybeanMR2$3 (be.brunoparmentier.apkshare.eval_y2$3)
===============================================================================
  onReceive    public onReceive(android.content.Context,android.content.Intent)

android.support.v4.media.TransportMediatorJellybeanMR2$4 (be.brunoparmentier.apkshare.eval_y2$4)
===============================================================================
  onAudioFocusChange   public onAudioFocusChange(int)

android.support.v4.media.TransportMediatorJellybeanMR2$Exception (be.brunoparmentier.apkshare.eval_yo)
===============================================================================
  No methods

android.support.v4.media.TransportPerformer      (be.brunoparmentier.apkshare.eval_lf)
===============================================================================
  eval_y   public abstract onGetCurrentPosition()
  j        public abstract onSeekTo(long)
  k        public abstract onIsPlaying()
  n        public abstract onStop()
  o        public onMediaButtonUp(int,android.view.KeyEvent)
  p        public onGetTransportControlFlags()
  p        public onAudioFocusChange(int)
  u        public abstract onPause()
  w        public abstract onStart()
  x        public onMediaButtonDown(int,android.view.KeyEvent)
  y        public abstract onGetDuration()
  z        public onGetBufferPercentage()

android.support.v4.media.TransportPerformer$IOException  (be.brunoparmentier.apkshare.eval_o3)
===============================================================================
  No methods

android.support.v4.media.TransportStateListener  (be.brunoparmentier.apkshare.eval_ik)
===============================================================================
  l    public onPlayingChanged(android.support.v4.media.TransportController)
  t    public onTransportControlsChanged(android.support.v4.media.TransportController)

android.support.v4.media.TransportStateListener$ParseException   (be.brunoparmentier.apkshare.eval_u2)
===============================================================================
  No methods

android.support.v4.media.VolumeProviderCompat    (be.brunoparmentier.apkshare.eval_kb)
===============================================================================
  a        public setCallback(android.support.v4.media.VolumeProviderCompat$Callback)
  b        public final getMaxVolume()
  eval_b   public onAdjustVolume(int)
  eval_u   public onSetVolumeTo(int)
  m        public final setCurrentVolume(int)
  q        public final getVolumeControl()
  r        public final getCurrentVolume()
  s        public getVolumeProvider()

android.support.v4.media.VolumeProviderCompat$1  (be.brunoparmentier.apkshare.eval_kb$1)
===============================================================================
  v    public onAdjustVolume(int)
  x    public onSetVolumeTo(int)

android.support.v4.media.VolumeProviderCompat$Callback   (be.brunoparmentier.apkshare.eval_kb$z)
===============================================================================
  q    public abstract onVolumeChanged(android.support.v4.media.VolumeProviderCompat)

android.support.v4.media.VolumeProviderCompat$NullPointerException       (be.brunoparmentier.apkshare.eval_m3)
===============================================================================
  No methods

android.support.v4.media.VolumeProviderCompatApi21       (be.brunoparmentier.apkshare.eval_vz)
===============================================================================
  j    public static setCurrentVolume(java.lang.Object,int)
  w    public static createVolumeProvider(int,int,int,android.support.v4.media.VolumeProviderCompatApi21$Delegate)

android.support.v4.media.VolumeProviderCompatApi21$1     (be.brunoparmentier.apkshare.eval_vz$1)
===============================================================================
  onAdjustVolume   public onAdjustVolume(int)
  onSetVolumeTo    public onSetVolumeTo(int)

android.support.v4.media.VolumeProviderCompatApi21$Delegate      (be.brunoparmentier.apkshare.eval_vz$f)
===============================================================================
  v    public abstract onAdjustVolume(int)
  x    public abstract onSetVolumeTo(int)

android.support.v4.media.VolumeProviderCompatApi21$NullPointerException  (be.brunoparmentier.apkshare.eval_gq)
===============================================================================
  No methods

android.support.v4.media.routing.MediaRouterJellybean    (be.brunoparmentier.apkshare.eval_xm)
===============================================================================
  b        public static addCallback(java.lang.Object,int,java.lang.Object)
  e        public static createCallback(android.support.v4.media.routing.MediaRouterJellybean$Callback)
  e        public static addUserRoute(java.lang.Object,java.lang.Object)
  eval_x   public static selectRoute(java.lang.Object,int,java.lang.Object)
  f        public static getMediaRouter(android.content.Context)
  f        public static removeUserRoute(java.lang.Object,java.lang.Object)
  h        public static getRoutes(java.lang.Object)
  h        public static createUserRoute(java.lang.Object,java.lang.Object)
  l        public static removeCallback(java.lang.Object,java.lang.Object)
  n        public static createVolumeCallback(android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback)
  o        public static createRouteCategory(java.lang.Object,java.lang.String,boolean)
  r        public static getCategories(java.lang.Object)
  t        public static getSelectedRoute(java.lang.Object,int)

android.support.v4.media.routing.MediaRouterJellybean$Callback   (be.brunoparmentier.apkshare.eval_xm$c)
===============================================================================
  a    public abstract onRouteUnselected(int,java.lang.Object)
  f    public abstract onRouteGrouped(java.lang.Object,java.lang.Object,int)
  i    public abstract onRouteRemoved(java.lang.Object)
  j    public abstract onRouteVolumeChanged(java.lang.Object)
  l    public abstract onRouteUngrouped(java.lang.Object,java.lang.Object)
  p    public abstract onRouteAdded(java.lang.Object)
  s    public abstract onRouteSelected(int,java.lang.Object)
  t    public abstract onRouteChanged(java.lang.Object)

android.support.v4.media.routing.MediaRouterJellybean$CallbackProxy      (be.brunoparmentier.apkshare.eval_xm$s)
===============================================================================
  onRouteAdded         public onRouteAdded(android.media.MediaRouter,android.media.MediaRouter$RouteInfo)
  onRouteChanged       public onRouteChanged(android.media.MediaRouter,android.media.MediaRouter$RouteInfo)
  onRouteGrouped       public onRouteGrouped(android.media.MediaRouter,android.media.MediaRouter$RouteInfo,android.media.MediaRouter$RouteGroup,int)
  onRouteRemoved       public onRouteRemoved(android.media.MediaRouter,android.media.MediaRouter$RouteInfo)
  onRouteSelected      public onRouteSelected(android.media.MediaRouter,int,android.media.MediaRouter$RouteInfo)
  onRouteUngrouped     public onRouteUngrouped(android.media.MediaRouter,android.media.MediaRouter$RouteInfo,android.media.MediaRouter$RouteGroup)
  onRouteUnselected    public onRouteUnselected(android.media.MediaRouter,int,android.media.MediaRouter$RouteInfo)
  onRouteVolumeChanged public onRouteVolumeChanged(android.media.MediaRouter,android.media.MediaRouter$RouteInfo)

android.support.v4.media.routing.MediaRouterJellybean$GetDefaultRouteWorkaround  (be.brunoparmentier.apkshare.eval_xm$m)
===============================================================================
  p    public getDefaultRoute(java.lang.Object)

android.support.v4.media.routing.MediaRouterJellybean$IOException        (be.brunoparmentier.apkshare.eval_uc)
===============================================================================
  No methods

android.support.v4.media.routing.MediaRouterJellybean$RouteCategory      (be.brunoparmentier.apkshare.eval_xm$_)
===============================================================================
  b    public static getName(java.lang.Object,android.content.Context)
  m    public static getSupportedTypes(java.lang.Object)
  t    public static isGroupable(java.lang.Object)
  y    public static getRoutes(java.lang.Object)

android.support.v4.media.routing.MediaRouterJellybean$RouteGroup (be.brunoparmentier.apkshare.eval_xm$l)
===============================================================================
  h    public static getGroupedRoutes(java.lang.Object)

android.support.v4.media.routing.MediaRouterJellybean$RouteInfo  (be.brunoparmentier.apkshare.eval_xm$f)
===============================================================================
  a        public static getStatus(java.lang.Object)
  c        public static getTag(java.lang.Object)
  d        public static getSupportedTypes(java.lang.Object)
  eval_n   public static isGroup(java.lang.Object)
  eval_x   public static getVolumeMax(java.lang.Object)
  f        public static getCategory(java.lang.Object)
  h        public static getPlaybackStream(java.lang.Object)
  i        public static requestSetVolume(java.lang.Object,int)
  k        public static getName(java.lang.Object,android.content.Context)
  l        public static getGroup(java.lang.Object)
  r        public static setTag(java.lang.Object,java.lang.Object)
  u        public static getIconDrawable(java.lang.Object)
  v        public static getPlaybackType(java.lang.Object)
  w        public static requestUpdateVolume(java.lang.Object,int)
  x        public static getVolumeHandling(java.lang.Object)
  y        public static getVolume(java.lang.Object)

android.support.v4.media.routing.MediaRouterJellybean$SelectRouteWorkaround      (be.brunoparmentier.apkshare.eval_xm$j)
===============================================================================
  x    public selectRoute(java.lang.Object,int,java.lang.Object)

android.support.v4.media.routing.MediaRouterJellybean$UserRouteInfo      (be.brunoparmentier.apkshare.eval_xm$eval_h)
===============================================================================
  a    public static setRemoteControlClient(java.lang.Object,java.lang.Object)
  e    public static setIconDrawable(java.lang.Object,android.graphics.drawable.Drawable)
  g    public static setVolume(java.lang.Object,int)
  i    public static setPlaybackStream(java.lang.Object,int)
  k    public static setVolumeMax(java.lang.Object,int)
  m    public static setVolumeCallback(java.lang.Object,java.lang.Object)
  n    public static setStatus(java.lang.Object,java.lang.CharSequence)
  r    public static setName(java.lang.Object,java.lang.CharSequence)
  s    public static setVolumeHandling(java.lang.Object,int)
  x    public static setPlaybackType(java.lang.Object,int)

android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback     (be.brunoparmentier.apkshare.eval_xm$eval_e)
===============================================================================
  u    public abstract onVolumeSetRequest(java.lang.Object,int)
  x    public abstract onVolumeUpdateRequest(java.lang.Object,int)

android.support.v4.media.routing.MediaRouterJellybean$VolumeCallbackProxy        (be.brunoparmentier.apkshare.eval_xm$r)
===============================================================================
  onVolumeSetRequest       public onVolumeSetRequest(android.media.MediaRouter$RouteInfo,int)
  onVolumeUpdateRequest    public onVolumeUpdateRequest(android.media.MediaRouter$RouteInfo,int)

android.support.v4.media.routing.MediaRouterJellybeanMr1 (be.brunoparmentier.apkshare.eval_u3)
===============================================================================
  q    public static createCallback(android.support.v4.media.routing.MediaRouterJellybeanMr1$Callback)

android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround    (be.brunoparmentier.apkshare.eval_u3$l)
===============================================================================
  j    public setActiveScanRouteTypes(int)
  run  public run()

android.support.v4.media.routing.MediaRouterJellybeanMr1$ArrayOutOfBoundsException       (be.brunoparmentier.apkshare.eval_f9)
===============================================================================
  No methods

android.support.v4.media.routing.MediaRouterJellybeanMr1$Callback        (be.brunoparmentier.apkshare.eval_u3$u)
===============================================================================
  h    public abstract onRoutePresentationDisplayChanged(java.lang.Object)

android.support.v4.media.routing.MediaRouterJellybeanMr1$CallbackProxy   (be.brunoparmentier.apkshare.eval_u3$r)
===============================================================================
  onRoutePresentationDisplayChanged    public onRoutePresentationDisplayChanged(android.media.MediaRouter,android.media.MediaRouter$RouteInfo)

android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround  (be.brunoparmentier.apkshare.eval_u3$e)
===============================================================================
  l    public isConnecting(java.lang.Object)

android.support.v4.media.routing.MediaRouterJellybeanMr1$RouteInfo       (be.brunoparmentier.apkshare.eval_u3$v)
===============================================================================
  i    public static isEnabled(java.lang.Object)
  z    public static getPresentationDisplay(java.lang.Object)

android.support.v4.media.routing.MediaRouterJellybeanMr2 (be.brunoparmentier.apkshare.eval_xo)
===============================================================================
  n    public static addCallback(java.lang.Object,int,java.lang.Object,int)
  q    public static getDefaultRoute(java.lang.Object)

android.support.v4.media.routing.MediaRouterJellybeanMr2$ArrayOutOfBoundsException       (be.brunoparmentier.apkshare.eval_ot)
===============================================================================
  No methods

android.support.v4.media.routing.MediaRouterJellybeanMr2$RouteInfo       (be.brunoparmentier.apkshare.eval_xo$y)
===============================================================================
  n    public static isConnecting(java.lang.Object)
  x    public static getDescription(java.lang.Object)

android.support.v4.media.routing.MediaRouterJellybeanMr2$UserRouteInfo   (be.brunoparmentier.apkshare.eval_xo$u)
===============================================================================
  u    public static setDescription(java.lang.Object,java.lang.CharSequence)

android.support.v4.media.session.IMediaControllerCallback        (be.brunoparmentier.apkshare.eval_o6)
===============================================================================
  b        public abstract onExtrasChanged(android.os.Bundle)
  c        public abstract onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)
  c        public abstract onQueueChanged(java.util.List)
  eval_g   public abstract onMetadataChanged(android.support.v4.media.MediaMetadataCompat)
  o        public abstract onQueueTitleChanged(java.lang.CharSequence)
  t        public abstract onEvent(java.lang.String,android.os.Bundle)
  w        public abstract onSessionDestroyed()
  z        public abstract onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat)

android.support.v4.media.session.IMediaControllerCallback$ParseException (be.brunoparmentier.apkshare.eval__w)
===============================================================================
  No methods

android.support.v4.media.session.IMediaControllerCallback$Stub   (be.brunoparmentier.apkshare.eval_o6$v)
===============================================================================
  b            public abstract onExtrasChanged(android.os.Bundle)
  c            public abstract onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)
  c            public abstract onQueueChanged(java.util.List)
  eval_g       public abstract onMetadataChanged(android.support.v4.media.MediaMetadataCompat)
  m            public static asInterface(android.os.IBinder)
  o            public abstract onQueueTitleChanged(java.lang.CharSequence)
  t            public abstract onEvent(java.lang.String,android.os.Bundle)
  w            public abstract onSessionDestroyed()
  z            public abstract onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat)
  asBinder     public asBinder()
  onTransact   public onTransact(int,android.os.Parcel,android.os.Parcel,int)

android.support.v4.media.session.IMediaControllerCallback$Stub$ParseException    (be.brunoparmentier.apkshare.eval_rv)
===============================================================================
  No methods

android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy     (be.brunoparmentier.apkshare.eval_o6$v$p)
===============================================================================
  b        public onExtrasChanged(android.os.Bundle)
  c        public onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)
  c        public onQueueChanged(java.util.List)
  eval_g   public onMetadataChanged(android.support.v4.media.MediaMetadataCompat)
  j        public getInterfaceDescriptor()
  o        public onQueueTitleChanged(java.lang.CharSequence)
  t        public onEvent(java.lang.String,android.os.Bundle)
  w        public onSessionDestroyed()
  z        public onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat)
  asBinder public asBinder()

android.support.v4.media.session.IMediaSession   (be.brunoparmentier.apkshare.eval_nl)
===============================================================================
  a        public abstract getVolumeAttributes()
  a        public abstract setVolumeTo(int,int,java.lang.String)
  b        public abstract getMetadata()
  c        public abstract rate(android.support.v4.media.RatingCompat)
  d        public abstract play()
  e        public abstract getQueueTitle()
  eval_a   public abstract unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback)
  eval_d   public abstract getExtras()
  eval_g   public abstract next()
  eval_l   public abstract getQueue()
  eval_o   public abstract getPlaybackState()
  f        public abstract getTag()
  f        public abstract seekTo(long)
  g        public abstract playFromSearch(java.lang.String,android.os.Bundle)
  i        public abstract sendMediaButton(android.view.KeyEvent)
  l        public abstract adjustVolume(int,int,java.lang.String)
  m        public abstract previous()
  n        public abstract fastForward()
  p        public abstract isTransportControlEnabled()
  p        public abstract sendCustomAction(java.lang.String,android.os.Bundle)
  q        public abstract getRatingType()
  s        public abstract pause()
  t        public abstract stop()
  t        public abstract skipToQueueItem(long)
  v        public abstract getFlags()
  v        public abstract playFromMediaId(java.lang.String,android.os.Bundle)
  w        public abstract rewind()
  y        public abstract getLaunchPendingIntent()
  y        public abstract sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper)
  z        public abstract getPackageName()
  z        public abstract registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback)

android.support.v4.media.session.IMediaSession$ArrayOutOfBoundsException (be.brunoparmentier.apkshare.eval_yl)
===============================================================================
  No methods

android.support.v4.media.session.IMediaSession$Stub      (be.brunoparmentier.apkshare.eval_nl$o)
===============================================================================
  a            public abstract getVolumeAttributes()
  a            public abstract setVolumeTo(int,int,java.lang.String)
  b            public abstract getMetadata()
  c            public abstract rate(android.support.v4.media.RatingCompat)
  d            public abstract play()
  e            public abstract getQueueTitle()
  e            public static asInterface(android.os.IBinder)
  eval_a       public abstract unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback)
  eval_d       public abstract getExtras()
  eval_g       public abstract next()
  eval_l       public abstract getQueue()
  eval_o       public abstract getPlaybackState()
  f            public abstract getTag()
  f            public abstract seekTo(long)
  g            public abstract playFromSearch(java.lang.String,android.os.Bundle)
  i            public abstract sendMediaButton(android.view.KeyEvent)
  l            public abstract adjustVolume(int,int,java.lang.String)
  m            public abstract previous()
  n            public abstract fastForward()
  p            public abstract isTransportControlEnabled()
  p            public abstract sendCustomAction(java.lang.String,android.os.Bundle)
  q            public abstract getRatingType()
  s            public abstract pause()
  t            public abstract stop()
  t            public abstract skipToQueueItem(long)
  v            public abstract getFlags()
  v            public abstract playFromMediaId(java.lang.String,android.os.Bundle)
  w            public abstract rewind()
  y            public abstract getLaunchPendingIntent()
  y            public abstract sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper)
  z            public abstract getPackageName()
  z            public abstract registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback)
  asBinder     public asBinder()
  onTransact   public onTransact(int,android.os.Parcel,android.os.Parcel,int)

android.support.v4.media.session.IMediaSession$Stub$ArrayOutOfBoundsException    (be.brunoparmentier.apkshare.eval_j_)
===============================================================================
  No methods

android.support.v4.media.session.IMediaSession$Stub$Proxy        (be.brunoparmentier.apkshare.eval_nl$o$l)
===============================================================================
  a        public getVolumeAttributes()
  a        public setVolumeTo(int,int,java.lang.String)
  b        public getMetadata()
  c        public rate(android.support.v4.media.RatingCompat)
  d        public play()
  e        public getQueueTitle()
  eval_a   public unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback)
  eval_d   public getExtras()
  eval_g   public next()
  eval_l   public getQueue()
  eval_o   public getPlaybackState()
  f        public getTag()
  f        public seekTo(long)
  g        public playFromSearch(java.lang.String,android.os.Bundle)
  i        public sendMediaButton(android.view.KeyEvent)
  l        public adjustVolume(int,int,java.lang.String)
  m        public previous()
  n        public fastForward()
  p        public isTransportControlEnabled()
  p        public sendCustomAction(java.lang.String,android.os.Bundle)
  q        public getRatingType()
  r        public getInterfaceDescriptor()
  s        public pause()
  t        public stop()
  t        public skipToQueueItem(long)
  v        public getFlags()
  v        public playFromMediaId(java.lang.String,android.os.Bundle)
  w        public rewind()
  y        public getLaunchPendingIntent()
  y        public sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper)
  z        public getPackageName()
  z        public registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback)
  asBinder public asBinder()

android.support.v4.media.session.MediaControllerCompat   (be.brunoparmentier.apkshare.eval_q7)
===============================================================================
  a        public getQueueTitle()
  b        public getExtras()
  d        public registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback)
  eval_b   public getPackageName()
  eval_g   public getRatingType()
  eval_i   public getSessionActivity()
  eval_l   public getPlaybackInfo()
  j        public getFlags()
  k        public dispatchMediaButtonEvent(android.view.KeyEvent)
  l        public getMetadata()
  m        public getPlaybackState()
  r        public getTransportControls()
  r        public setVolumeTo(int,int)
  t        public getSessionToken()
  t        public sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)
  u        public registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler)
  v        public getMediaController()
  v        public adjustVolume(int,int)
  w        public unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback)
  y        public getQueue()

android.support.v4.media.session.MediaControllerCompat$1 (be.brunoparmentier.apkshare.eval_q7$1)
===============================================================================
  No methods

android.support.v4.media.session.MediaControllerCompat$Callback  (be.brunoparmentier.apkshare.eval_q7$f)
===============================================================================
  a            public onSessionDestroyed()
  f            public onSessionEvent(java.lang.String,android.os.Bundle)
  h            public onExtrasChanged(android.os.Bundle)
  h            public onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat)
  l            private setHandler(android.os.Handler)
  l            static access$300(android.support.v4.media.session.MediaControllerCompat$Callback)
  l            public onQueueChanged(java.util.List)
  o            public onMetadataChanged(android.support.v4.media.MediaMetadataCompat)
  o            public onQueueTitleChanged(java.lang.CharSequence)
  p            static access$200(android.support.v4.media.session.MediaControllerCompat$Callback)
  u            static access$302(android.support.v4.media.session.MediaControllerCompat$Callback,boolean)
  v            public onAudioInfoChanged(android.support.v4.media.session.MediaControllerCompat$PlaybackInfo)
  z            static access$400(android.support.v4.media.session.MediaControllerCompat$Callback)
  z            static access$500(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler)
  binderDied   public binderDied()

android.support.v4.media.session.MediaControllerCompat$Callback$IOException      (be.brunoparmentier.apkshare.eval_wx)
===============================================================================
  No methods

android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler   (be.brunoparmentier.apkshare.eval_q7$f$e)
===============================================================================
  m                public post(int,java.lang.Object,android.os.Bundle)
  handleMessage    public handleMessage(android.os.Message)

android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21        (be.brunoparmentier.apkshare.eval_q7$f$m)
===============================================================================
  j    public onSessionEvent(java.lang.String,android.os.Bundle)
  k    public onPlaybackStateChanged(java.lang.Object)
  o    public onMetadataChanged(java.lang.Object)
  s    public onSessionDestroyed()

android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat       (be.brunoparmentier.apkshare.eval_q7$f$z)
===============================================================================
  b        public onExtrasChanged(android.os.Bundle)
  c        public onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)
  c        public onQueueChanged(java.util.List)
  eval_g   public onMetadataChanged(android.support.v4.media.MediaMetadataCompat)
  o        public onQueueTitleChanged(java.lang.CharSequence)
  t        public onEvent(java.lang.String,android.os.Bundle)
  w        public onSessionDestroyed()
  z        public onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat)

android.support.v4.media.session.MediaControllerCompat$Exception (be.brunoparmentier.apkshare.eval_ku)
===============================================================================
  No methods

android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl       (be.brunoparmentier.apkshare.eval_q7$b)
===============================================================================
  b        public abstract dispatchMediaButtonEvent(android.view.KeyEvent)
  d        public abstract getSessionActivity()
  eval_b   public abstract getFlags()
  eval_h   public abstract getRatingType()
  eval_j   public abstract getMetadata()
  eval_z   public abstract getQueueTitle()
  f        public abstract getMediaController()
  i        public abstract getQueue()
  m        public abstract registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler)
  n        public abstract getTransportControls()
  p        public abstract getPlaybackInfo()
  q        public abstract getExtras()
  q        public abstract adjustVolume(int,int)
  t        public abstract getPlaybackState()
  t        public abstract setVolumeTo(int,int)
  u        public abstract getPackageName()
  u        public abstract sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)
  v        public abstract unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback)

android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21  (be.brunoparmentier.apkshare.eval_q7$k)
===============================================================================
  b        public dispatchMediaButtonEvent(android.view.KeyEvent)
  d        public getSessionActivity()
  eval_b   public getFlags()
  eval_h   public getRatingType()
  eval_j   public getMetadata()
  eval_z   public getQueueTitle()
  f        public getMediaController()
  i        public getQueue()
  m        public registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler)
  n        public getTransportControls()
  p        public getPlaybackInfo()
  q        public getExtras()
  q        public adjustVolume(int,int)
  t        public getPlaybackState()
  t        public setVolumeTo(int,int)
  u        public getPackageName()
  u        public sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)
  v        public unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback)

android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase   (be.brunoparmentier.apkshare.eval_q7$g)
===============================================================================
  b        public dispatchMediaButtonEvent(android.view.KeyEvent)
  d        public getSessionActivity()
  eval_b   public getFlags()
  eval_h   public getRatingType()
  eval_j   public getMetadata()
  eval_z   public getQueueTitle()
  f        public getMediaController()
  i        public getQueue()
  m        public registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler)
  n        public getTransportControls()
  p        public getPlaybackInfo()
  q        public getExtras()
  q        public adjustVolume(int,int)
  t        public getPlaybackState()
  t        public setVolumeTo(int,int)
  u        public getPackageName()
  u        public sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)
  v        public unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback)

android.support.v4.media.session.MediaControllerCompat$PlaybackInfo      (be.brunoparmentier.apkshare.eval_q7$h)
===============================================================================
  b        public getAudioStream()
  eval_q   public getVolumeControl()
  m        public getCurrentVolume()
  s        public getPlaybackType()
  z        public getMaxVolume()

android.support.v4.media.session.MediaControllerCompat$TransportControls (be.brunoparmentier.apkshare.eval_q7$eval_w)
===============================================================================
  eval_v   public abstract play()
  f        public abstract sendCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction,android.os.Bundle)
  f        public abstract seekTo(long)
  j        public abstract pause()
  k        public abstract skipToNext()
  m        public abstract fastForward()
  m        public abstract setRating(android.support.v4.media.RatingCompat)
  m        public abstract playFromMediaId(java.lang.String,android.os.Bundle)
  n        public abstract rewind()
  r        public abstract skipToPrevious()
  r        public abstract skipToQueueItem(long)
  t        public abstract sendCustomAction(java.lang.String,android.os.Bundle)
  u        public abstract stop()
  v        public abstract playFromSearch(java.lang.String,android.os.Bundle)

android.support.v4.media.session.MediaControllerCompat$TransportControlsApi21    (be.brunoparmentier.apkshare.eval_q7$q)
===============================================================================
  eval_v   public play()
  f        public sendCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction,android.os.Bundle)
  f        public seekTo(long)
  j        public pause()
  k        public skipToNext()
  m        public fastForward()
  m        public setRating(android.support.v4.media.RatingCompat)
  m        public playFromMediaId(java.lang.String,android.os.Bundle)
  n        public rewind()
  r        public skipToPrevious()
  r        public skipToQueueItem(long)
  t        public sendCustomAction(java.lang.String,android.os.Bundle)
  u        public stop()
  v        public playFromSearch(java.lang.String,android.os.Bundle)

android.support.v4.media.session.MediaControllerCompat$TransportControlsBase     (be.brunoparmentier.apkshare.eval_q7$eval_c)
===============================================================================
  eval_v   public play()
  f        public sendCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction,android.os.Bundle)
  f        public seekTo(long)
  j        public pause()
  k        public skipToNext()
  m        public fastForward()
  m        public setRating(android.support.v4.media.RatingCompat)
  m        public playFromMediaId(java.lang.String,android.os.Bundle)
  n        public rewind()
  r        public skipToPrevious()
  r        public skipToQueueItem(long)
  t        public sendCustomAction(java.lang.String,android.os.Bundle)
  u        public stop()
  v        public playFromSearch(java.lang.String,android.os.Bundle)

android.support.v4.media.session.MediaControllerCompatApi21      (be.brunoparmentier.apkshare.eval_p7)
===============================================================================
  b        public static getExtras(java.lang.Object)
  c        public static setVolumeTo(java.lang.Object,int,int)
  eval_h   public static getRatingType(java.lang.Object)
  f        public static getMetadata(java.lang.Object)
  f        public static registerCallback(java.lang.Object,java.lang.Object,android.os.Handler)
  h        public static fromToken(android.content.Context,java.lang.Object)
  i        public static dispatchMediaButtonEvent(java.lang.Object,android.view.KeyEvent)
  j        public static getPlaybackState(java.lang.Object)
  j        public static unregisterCallback(java.lang.Object,java.lang.Object)
  k        public static getSessionActivity(java.lang.Object)
  l        public static getPlaybackInfo(java.lang.Object)
  m        public static createCallback(android.support.v4.media.session.MediaControllerCompatApi21$Callback)
  m        public static getFlags(java.lang.Object)
  n        public static getTransportControls(java.lang.Object)
  p        public static getPackageName(java.lang.Object)
  s        public static getQueueTitle(java.lang.Object)
  s        public static adjustVolume(java.lang.Object,int,int)
  s        public static sendCommand(java.lang.Object,java.lang.String,android.os.Bundle,android.os.ResultReceiver)
  t        public static getQueue(java.lang.Object)

android.support.v4.media.session.MediaControllerCompatApi21$Callback     (be.brunoparmentier.apkshare.eval_p7$r)
===============================================================================
  j    public abstract onSessionEvent(java.lang.String,android.os.Bundle)
  k    public abstract onPlaybackStateChanged(java.lang.Object)
  o    public abstract onMetadataChanged(java.lang.Object)
  s    public abstract onSessionDestroyed()

android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy        (be.brunoparmentier.apkshare.eval_p7$a)
===============================================================================
  onMetadataChanged        public onMetadataChanged(android.media.MediaMetadata)
  onPlaybackStateChanged   public onPlaybackStateChanged(android.media.session.PlaybackState)
  onSessionDestroyed       public onSessionDestroyed()
  onSessionEvent           public onSessionEvent(java.lang.String,android.os.Bundle)

android.support.v4.media.session.MediaControllerCompatApi21$Exception    (be.brunoparmentier.apkshare.eval_ro)
===============================================================================
  No methods

android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo (be.brunoparmentier.apkshare.eval_p7$d)
===============================================================================
  e    public static getPlaybackType(java.lang.Object)
  g    public static getCurrentVolume(java.lang.Object)
  k    public static getMaxVolume(java.lang.Object)
  n    public static getVolumeControl(java.lang.Object)
  r    public static getLegacyAudioStream(java.lang.Object)
  u    public static getAudioAttributes(java.lang.Object)
  x    private static toLegacyStreamType(android.media.AudioAttributes)

android.support.v4.media.session.MediaControllerCompatApi21$TransportControls    (be.brunoparmentier.apkshare.eval_p7$i)
===============================================================================
  a    public static fastForward(java.lang.Object)
  a    public static setRating(java.lang.Object,java.lang.Object)
  b    public static skipToQueueItem(java.lang.Object,long)
  f    public static skipToPrevious(java.lang.Object)
  h    public static pause(java.lang.Object)
  n    public static seekTo(java.lang.Object,long)
  p    public static skipToNext(java.lang.Object)
  q    public static sendCustomAction(java.lang.Object,java.lang.String,android.os.Bundle)
  u    public static play(java.lang.Object)
  w    public static playFromSearch(java.lang.Object,java.lang.String,android.os.Bundle)
  x    public static stop(java.lang.Object)
  y    public static rewind(java.lang.Object)
  y    public static playFromMediaId(java.lang.Object,java.lang.String,android.os.Bundle)

android.support.v4.media.session.MediaSessionCompat      (be.brunoparmentier.apkshare.eval_kh)
===============================================================================
  a        public removeOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener)
  eval_g   public getSessionToken()
  f        public getController()
  g        public getRemoteControlClient()
  h        public setMediaButtonReceiver(android.app.PendingIntent)
  h        public sendSessionEvent(java.lang.String,android.os.Bundle)
  i        public setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat)
  i        public setRatingType(int)
  j        public setActive(boolean)
  k        public setMetadata(android.support.v4.media.MediaMetadataCompat)
  k        public setPlaybackToLocal(int)
  k        public setQueueTitle(java.lang.CharSequence)
  m        public setExtras(android.os.Bundle)
  m        public setQueue(java.util.List)
  n        public static obtain(android.content.Context,java.lang.Object)
  n        public setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)
  o        public setSessionActivity(android.app.PendingIntent)
  q        public setFlags(int)
  r        public getMediaSession()
  t        public setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler)
  v        public addOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener)
  y        public isActive()
  y        public setCallback(android.support.v4.media.session.MediaSessionCompat$Callback)
  z        public release()

android.support.v4.media.session.MediaSessionCompat$1    (be.brunoparmentier.apkshare.eval_kh$1)
===============================================================================
  No methods

android.support.v4.media.session.MediaSessionCompat$ArrayOutOfBoundsException    (be.brunoparmentier.apkshare.eval_v0)
===============================================================================
  No methods

android.support.v4.media.session.MediaSessionCompat$Callback     (be.brunoparmentier.apkshare.eval_kh$l)
===============================================================================
  c        public onStop()
  d        public onSkipToNext()
  d        public onMediaButtonEvent(android.content.Intent)
  eval_m   public onFastForward()
  eval_v   public onRewind()
  eval_v   public onCustomAction(java.lang.String,android.os.Bundle)
  g        public onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)
  h        public onPlayFromSearch(java.lang.String,android.os.Bundle)
  k        public onSkipToQueueItem(long)
  m        public onPlay()
  m        public onSeekTo(long)
  q        public onSkipToPrevious()
  s        public onPlayFromMediaId(java.lang.String,android.os.Bundle)
  t        public onPause()
  v        public onSetRating(android.support.v4.media.RatingCompat)

android.support.v4.media.session.MediaSessionCompat$Callback$NullPointerException        (be.brunoparmentier.apkshare.eval_ih)
===============================================================================
  No methods

android.support.v4.media.session.MediaSessionCompat$Callback$StubApi21   (be.brunoparmentier.apkshare.eval_kh$l$t)
===============================================================================
  b        public onSkipToPrevious()
  e        public onSetRating(java.lang.Object)
  eval_d   public onSeekTo(long)
  f        public onStop()
  f        public onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)
  h        public onPlay()
  i        public onCustomAction(java.lang.String,android.os.Bundle)
  j        public onSkipToNext()
  m        public onMediaButtonEvent(android.content.Intent)
  p        public onPlayFromMediaId(java.lang.String,android.os.Bundle)
  q        public onRewind()
  q        public onSkipToQueueItem(long)
  r        public onPause()
  v        public onFastForward()
  w        public onPlayFromSearch(java.lang.String,android.os.Bundle)

android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl     (be.brunoparmentier.apkshare.eval_kh$d)
===============================================================================
  a    public abstract setMediaButtonReceiver(android.app.PendingIntent)
  c    public abstract release()
  d    public abstract getMediaSession()
  d    public abstract setFlags(int)
  f    public abstract setQueue(java.util.List)
  i    public abstract setSessionActivity(android.app.PendingIntent)
  i    public abstract setRatingType(int)
  l    public abstract getSessionToken()
  n    public abstract isActive()
  o    public abstract setQueueTitle(java.lang.CharSequence)
  p    public abstract setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)
  q    public abstract setPlaybackToLocal(int)
  s    public abstract setMetadata(android.support.v4.media.MediaMetadataCompat)
  t    public abstract setExtras(android.os.Bundle)
  t    public abstract setActive(boolean)
  v    public abstract setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler)
  w    public abstract sendSessionEvent(java.lang.String,android.os.Bundle)
  y    public abstract setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat)
  z    public abstract getRemoteControlClient()

android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21        (be.brunoparmentier.apkshare.eval_kh$w)
===============================================================================
  a    public setMediaButtonReceiver(android.app.PendingIntent)
  c    public release()
  d    public getMediaSession()
  d    public setFlags(int)
  f    public setQueue(java.util.List)
  i    public setSessionActivity(android.app.PendingIntent)
  i    public setRatingType(int)
  l    public getSessionToken()
  n    public isActive()
  o    public setQueueTitle(java.lang.CharSequence)
  p    public setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)
  q    public setPlaybackToLocal(int)
  s    public setMetadata(android.support.v4.media.MediaMetadataCompat)
  t    public setExtras(android.os.Bundle)
  t    public setActive(boolean)
  v    public setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler)
  w    public sendSessionEvent(java.lang.String,android.os.Bundle)
  y    public setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat)
  z    public getRemoteControlClient()

android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase (be.brunoparmentier.apkshare.eval_kh$p)
===============================================================================
  a        public setMediaButtonReceiver(android.app.PendingIntent)
  a        static access$700(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  a        private sendState(android.support.v4.media.session.PlaybackStateCompat)
  b        static access$200(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  c        public release()
  d        public getMediaSession()
  d        public setFlags(int)
  e        private sendEvent(java.lang.String,android.os.Bundle)
  eval__   static access$2200(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  eval_f   static access$1000(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  eval_o   static access$2300(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  eval_r   private sendSessionDestroyed()
  eval_r   static access$1500(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  eval_s   static access$1700(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase,int,int)
  eval_u   static access$2100(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  eval_v   static access$2000(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  eval_x   static access$1900(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  f        public setQueue(java.util.List)
  g        private getStateWithUpdatedPosition()
  g        private sendMetadata(android.support.v4.media.MediaMetadataCompat)
  h        private update()
  h        private sendQueueTitle(java.lang.CharSequence)
  i        public setSessionActivity(android.app.PendingIntent)
  i        static access$2400(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  i        public setRatingType(int)
  j        static access$1400(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  l        public getSessionToken()
  n        public isActive()
  n        static access$300(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  n        private adjustVolume(int,int)
  o        static access$1300(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  o        public setQueueTitle(java.lang.CharSequence)
  p        static access$400(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  p        public setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)
  q        static access$1100(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  q        public setPlaybackToLocal(int)
  q        private sendQueue(java.util.List)
  r        static access$800(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  s        public setMetadata(android.support.v4.media.MediaMetadataCompat)
  s        static access$1200(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  s        private setVolumeTo(int,int)
  t        public setExtras(android.os.Bundle)
  t        public setActive(boolean)
  v        public setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler)
  v        static access$900(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  w        static access$500(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase,android.support.v4.media.session.ParcelableVolumeInfo)
  w        public sendSessionEvent(java.lang.String,android.os.Bundle)
  y        public setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat)
  y        static access$1800(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  y        static access$1600(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase,int,int)
  z        public getRemoteControlClient()
  z        private sendVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)

android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1       (be.brunoparmentier.apkshare.eval_kh$p$1)
===============================================================================
  q    public onVolumeChanged(android.support.v4.media.VolumeProviderCompat)

android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$2       (be.brunoparmentier.apkshare.eval_kh$p$2)
===============================================================================
  b        public onSetRating(java.lang.Object)
  d        public onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)
  eval_u   public onRewind()
  j        public onSkipToPrevious()
  k        public onSeekTo(long)
  m        public onFastForward()
  n        public onStop()
  q        public onSkipToNext()
  t        public onPlay()
  y        public onMediaButtonEvent(android.content.Intent)
  z        public onPause()

android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$Command (be.brunoparmentier.apkshare.eval_kh$p$d)
===============================================================================
  No methods

android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub        (be.brunoparmentier.apkshare.eval_kh$p$e)
===============================================================================
  a        public getVolumeAttributes()
  a        public setVolumeTo(int,int,java.lang.String)
  b        public getMetadata()
  c        public rate(android.support.v4.media.RatingCompat)
  d        public play()
  e        public getQueueTitle()
  eval_a   public unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback)
  eval_d   public getExtras()
  eval_g   public next()
  eval_l   public getQueue()
  eval_o   public getPlaybackState()
  f        public getTag()
  f        public seekTo(long)
  g        public playFromSearch(java.lang.String,android.os.Bundle)
  i        public sendMediaButton(android.view.KeyEvent)
  l        public adjustVolume(int,int,java.lang.String)
  m        public previous()
  n        public fastForward()
  p        public isTransportControlEnabled()
  p        public sendCustomAction(java.lang.String,android.os.Bundle)
  q        public getRatingType()
  s        public pause()
  t        public stop()
  t        public skipToQueueItem(long)
  v        public getFlags()
  v        public playFromMediaId(java.lang.String,android.os.Bundle)
  w        public rewind()
  y        public getLaunchPendingIntent()
  y        public sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper)
  z        public getPackageName()
  z        public registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback)

android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler  (be.brunoparmentier.apkshare.eval_kh$p$eval_i)
===============================================================================
  c                public post(int,java.lang.Object,int)
  d                public post(int,java.lang.Object)
  f                public post(int)
  m                public post(int,java.lang.Object,android.os.Bundle)
  handleMessage    public handleMessage(android.os.Message)

android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$ParseException  (be.brunoparmentier.apkshare.eval_aw)
===============================================================================
  No methods

android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener       (be.brunoparmentier.apkshare.eval_kh$t)
===============================================================================
  l    public abstract onActiveChanged()

android.support.v4.media.session.MediaSessionCompat$QueueItem    (be.brunoparmentier.apkshare.eval_kh$q)
===============================================================================
  e                public getQueueItem()
  l                public static obtain(java.lang.Object)
  p                public getQueueId()
  z                public getDescription()
  describeContents public describeContents()
  toString         public toString()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.media.session.MediaSessionCompat$QueueItem$1  (be.brunoparmentier.apkshare.eval_kh$q$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.media.session.MediaSessionCompat$QueueItem$ArrayOutOfBoundsException  (be.brunoparmentier.apkshare.eval_f4)
===============================================================================
  No methods

android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper        (be.brunoparmentier.apkshare.eval_kh$eval_y)
===============================================================================
  t                static access$600(android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper)
  describeContents public describeContents()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1      (be.brunoparmentier.apkshare.eval_kh$eval_y$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$IOException    (be.brunoparmentier.apkshare.eval_il)
===============================================================================
  No methods

android.support.v4.media.session.MediaSessionCompat$Token        (be.brunoparmentier.apkshare.eval_kh$y)
===============================================================================
  p                public static fromToken(java.lang.Object)
  y                public getToken()
  describeContents public describeContents()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.media.session.MediaSessionCompat$Token$1      (be.brunoparmentier.apkshare.eval_kh$y$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.media.session.MediaSessionCompat$Token$ParseException (be.brunoparmentier.apkshare.eval_d1)
===============================================================================
  No methods

android.support.v4.media.session.MediaSessionCompatApi14 (be.brunoparmentier.apkshare.eval__d)
===============================================================================
  d    static getRccStateFromState(int)
  f    static getRccTransportControlFlagsFromActions(long)
  k    public static unregisterRemoteControlClient(android.content.Context,java.lang.Object)
  k    public static setTransportControlFlags(java.lang.Object,long)
  n    public static registerRemoteControlClient(android.content.Context,java.lang.Object)
  p    public static setMetadata(java.lang.Object,android.os.Bundle)
  v    static buildOldMetadata(android.os.Bundle,android.media.RemoteControlClient$MetadataEditor)
  x    public static setState(java.lang.Object,int)
  z    public static createRemoteControlClient(android.app.PendingIntent)

android.support.v4.media.session.MediaSessionCompatApi14$ArrayOutOfBoundsException       (be.brunoparmentier.apkshare.eval__z)
===============================================================================
  No methods

android.support.v4.media.session.MediaSessionCompatApi14$Callback        (be.brunoparmentier.apkshare.eval__d$l)
===============================================================================
  b        public abstract onSetRating(java.lang.Object)
  d        public abstract onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)
  eval_u   public abstract onRewind()
  j        public abstract onSkipToPrevious()
  k        public abstract onSeekTo(long)
  m        public abstract onFastForward()
  n        public abstract onStop()
  q        public abstract onSkipToNext()
  t        public abstract onPlay()
  y        public abstract onMediaButtonEvent(android.content.Intent)
  z        public abstract onPause()

android.support.v4.media.session.MediaSessionCompatApi18 (be.brunoparmentier.apkshare.eval__v)
===============================================================================
  a        public static setState(java.lang.Object,int,long,float,long)
  b        public static setTransportControlFlags(java.lang.Object,long)
  e        public static createPlaybackPositionUpdateListener(android.support.v4.media.session.MediaSessionCompatApi14$Callback)
  eval_y   public static unregisterMediaButtonEventReceiver(android.content.Context,android.app.PendingIntent)
  r        public static registerMediaButtonEventReceiver(android.content.Context,android.app.PendingIntent)
  t        static getRccTransportControlFlagsFromActions(long)
  v        public static setOnPlaybackPositionUpdateListener(java.lang.Object,java.lang.Object)

android.support.v4.media.session.MediaSessionCompatApi18$ArrayOutOfBoundsException       (be.brunoparmentier.apkshare.eval_ql)
===============================================================================
  No methods

android.support.v4.media.session.MediaSessionCompatApi18$OnPlaybackPositionUpdateListener        (be.brunoparmentier.apkshare.eval__v$t)
===============================================================================
  onPlaybackPositionUpdate public onPlaybackPositionUpdate(long)

android.support.v4.media.session.MediaSessionCompatApi19 (be.brunoparmentier.apkshare.eval__h)
===============================================================================
  a    public static createMetadataUpdateListener(android.support.v4.media.session.MediaSessionCompatApi14$Callback)
  c    static getRccTransportControlFlagsFromActions(long)
  h    public static setOnMetadataUpdateListener(java.lang.Object,java.lang.Object)
  j    public static setTransportControlFlags(java.lang.Object,long)
  r    static addNewMetadata(android.os.Bundle,android.media.RemoteControlClient$MetadataEditor)
  t    public static setMetadata(java.lang.Object,android.os.Bundle,long)

android.support.v4.media.session.MediaSessionCompatApi19$ArrayOutOfBoundsException       (be.brunoparmentier.apkshare.eval_u9)
===============================================================================
  No methods

android.support.v4.media.session.MediaSessionCompatApi19$OnMetadataUpdateListener        (be.brunoparmentier.apkshare.eval__h$c)
===============================================================================
  onMetadataUpdate public onMetadataUpdate(int,java.lang.Object)

android.support.v4.media.session.MediaSessionCompatApi21 (be.brunoparmentier.apkshare.eval_bv)
===============================================================================
  a    public static createSession(android.content.Context,java.lang.String)
  a    public static setExtras(java.lang.Object,android.os.Bundle)
  c    public static verifyToken(java.lang.Object)
  d    public static setQueueTitle(java.lang.Object,java.lang.CharSequence)
  d    public static setPlaybackToRemote(java.lang.Object,java.lang.Object)
  e    public static createCallback(android.support.v4.media.session.MediaSessionCompatApi21$Callback)
  f    public static getSessionToken(java.lang.Object)
  h    public static isActive(java.lang.Object)
  k    public static verifySession(java.lang.Object)
  k    public static setCallback(java.lang.Object,java.lang.Object,android.os.Handler)
  m    public static sendSessionEvent(java.lang.Object,java.lang.String,android.os.Bundle)
  o    public static release(java.lang.Object)
  p    public static setActive(java.lang.Object,boolean)
  r    public static setSessionActivity(java.lang.Object,android.app.PendingIntent)
  s    public static setFlags(java.lang.Object,int)
  u    public static setPlaybackToLocal(java.lang.Object,int)
  u    public static setPlaybackState(java.lang.Object,java.lang.Object)
  y    public static setMediaButtonReceiver(java.lang.Object,android.app.PendingIntent)
  y    public static setQueue(java.lang.Object,java.util.List)
  z    public static setMetadata(java.lang.Object,java.lang.Object)

android.support.v4.media.session.MediaSessionCompatApi21$ArrayOutOfBoundsException       (be.brunoparmentier.apkshare.eval_bf)
===============================================================================
  No methods

android.support.v4.media.session.MediaSessionCompatApi21$Callback        (be.brunoparmentier.apkshare.eval_bv$v)
===============================================================================
  b        public abstract onSkipToPrevious()
  e        public abstract onSetRating(java.lang.Object)
  eval_d   public abstract onSeekTo(long)
  f        public abstract onStop()
  f        public abstract onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)
  h        public abstract onPlay()
  i        public abstract onCustomAction(java.lang.String,android.os.Bundle)
  j        public abstract onSkipToNext()
  m        public abstract onMediaButtonEvent(android.content.Intent)
  p        public abstract onPlayFromMediaId(java.lang.String,android.os.Bundle)
  q        public abstract onRewind()
  q        public abstract onSkipToQueueItem(long)
  r        public abstract onPause()
  v        public abstract onFastForward()
  w        public abstract onPlayFromSearch(java.lang.String,android.os.Bundle)

android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy   (be.brunoparmentier.apkshare.eval_bv$p)
===============================================================================
  onCommand            public onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)
  onCustomAction       public onCustomAction(java.lang.String,android.os.Bundle)
  onFastForward        public onFastForward()
  onMediaButtonEvent   public onMediaButtonEvent(android.content.Intent)
  onPause              public onPause()
  onPlay               public onPlay()
  onPlayFromMediaId    public onPlayFromMediaId(java.lang.String,android.os.Bundle)
  onPlayFromSearch     public onPlayFromSearch(java.lang.String,android.os.Bundle)
  onRewind             public onRewind()
  onSeekTo             public onSeekTo(long)
  onSetRating          public onSetRating(android.media.Rating)
  onSkipToNext         public onSkipToNext()
  onSkipToPrevious     public onSkipToPrevious()
  onSkipToQueueItem    public onSkipToQueueItem(long)
  onStop               public onStop()

android.support.v4.media.session.MediaSessionCompatApi21$QueueItem       (be.brunoparmentier.apkshare.eval_bv$j)
===============================================================================
  b        public static createItem(java.lang.Object,long)
  eval_q   public static getDescription(java.lang.Object)
  v        public static getQueueId(java.lang.Object)

android.support.v4.media.session.MediaSessionCompatApi22 (be.brunoparmentier.apkshare.eval_ls)
===============================================================================
  l    public static setRatingType(java.lang.Object,int)

android.support.v4.media.session.MediaSessionCompatApi22$ArrayOutOfBoundsException       (be.brunoparmentier.apkshare.eval_ne)
===============================================================================
  No methods

android.support.v4.media.session.MediaSessionCompatApi8  (be.brunoparmentier.apkshare.eval_iz)
===============================================================================
  e    public static registerMediaButtonEventReceiver(android.content.Context,android.content.ComponentName)
  u    public static unregisterMediaButtonEventReceiver(android.content.Context,android.content.ComponentName)

android.support.v4.media.session.MediaSessionCompatApi8$NullPointerException     (be.brunoparmentier.apkshare.eval_nq)
===============================================================================
  No methods

android.support.v4.media.session.ParcelableVolumeInfo    (be.brunoparmentier.apkshare.eval_oq)
===============================================================================
  describeContents public describeContents()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.media.session.ParcelableVolumeInfo$1  (be.brunoparmentier.apkshare.eval_oq$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.media.session.ParcelableVolumeInfo$IOException        (be.brunoparmentier.apkshare.eval_ps)
===============================================================================
  No methods

android.support.v4.media.session.PlaybackStateCompat     (be.brunoparmentier.apkshare.eval_ch)
===============================================================================
  b                public getActions()
  c                static access$600(android.support.v4.media.session.PlaybackStateCompat)
  d                public getActiveQueueItemId()
  eval_k           static access$900(android.support.v4.media.session.PlaybackStateCompat)
  eval_l           public getPlaybackState()
  eval_m           static access$1200(android.support.v4.media.session.PlaybackStateCompat)
  eval_q           static access$700(android.support.v4.media.session.PlaybackStateCompat)
  eval_v           public getErrorMessage()
  h                static access$400(android.support.v4.media.session.PlaybackStateCompat)
  i                public getCustomActions()
  k                public getState()
  l                static access$1100(android.support.v4.media.session.PlaybackStateCompat)
  l                public static fromPlaybackState(java.lang.Object)
  r                public getBufferedPosition()
  s                public getPosition()
  s                static access$300(android.support.v4.media.session.PlaybackStateCompat)
  t                public getLastPositionUpdateTime()
  u                public getPlaybackSpeed()
  w                static access$500(android.support.v4.media.session.PlaybackStateCompat)
  y                static access$1000(android.support.v4.media.session.PlaybackStateCompat)
  z                public getExtras()
  z                static access$800(android.support.v4.media.session.PlaybackStateCompat)
  describeContents public describeContents()
  toString         public toString()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.media.session.PlaybackStateCompat$1   (be.brunoparmentier.apkshare.eval_ch$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.media.session.PlaybackStateCompat$Builder     (be.brunoparmentier.apkshare.eval_ch$k)
===============================================================================
  c    public setState(int,long,float)
  d    public setErrorMessage(java.lang.CharSequence)
  h    public setActiveQueueItemId(long)
  i    public setExtras(android.os.Bundle)
  i    public addCustomAction(java.lang.String,java.lang.String,int)
  j    public setBufferedPosition(long)
  k    public build()
  s    public setActions(long)
  t    public setState(int,long,float,long)
  u    public addCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction)

android.support.v4.media.session.PlaybackStateCompat$CustomAction        (be.brunoparmentier.apkshare.eval_ch$v)
===============================================================================
  a                public static fromCustomAction(java.lang.Object)
  d                public getCustomAction()
  i                public getAction()
  k                public getExtras()
  u                public getName()
  y                public getIcon()
  describeContents public describeContents()
  toString         public toString()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.media.session.PlaybackStateCompat$CustomAction$1      (be.brunoparmentier.apkshare.eval_ch$v$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder        (be.brunoparmentier.apkshare.eval_ch$v$a)
===============================================================================
  eval_v   public build()
  v        public setExtras(android.os.Bundle)

android.support.v4.media.session.PlaybackStateCompat$CustomAction$NullPointerException   (be.brunoparmentier.apkshare.eval_q2)
===============================================================================
  No methods

android.support.v4.media.session.PlaybackStateCompat$ParseException      (be.brunoparmentier.apkshare.eval_hi)
===============================================================================
  No methods

android.support.v4.media.session.PlaybackStateCompatApi21        (be.brunoparmentier.apkshare.eval_vb)
===============================================================================
  c        public static getActions(java.lang.Object)
  eval_j   public static getErrorMessage(java.lang.Object)
  i        public static newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long)
  i        public static getState(java.lang.Object)
  k        public static getActiveQueueItemId(java.lang.Object)
  m        public static getBufferedPosition(java.lang.Object)
  s        public static getCustomActions(java.lang.Object)
  v        public static getPosition(java.lang.Object)
  x        public static getLastPositionUpdateTime(java.lang.Object)
  z        public static getPlaybackSpeed(java.lang.Object)

android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction   (be.brunoparmentier.apkshare.eval_vb$t)
===============================================================================
  f    public static getIcon(java.lang.Object)
  k    public static newInstance(java.lang.String,java.lang.CharSequence,int,android.os.Bundle)
  o    public static getAction(java.lang.Object)
  p    public static getName(java.lang.Object)
  q    public static getExtras(java.lang.Object)

android.support.v4.media.session.PlaybackStateCompatApi21$ParseException (be.brunoparmentier.apkshare.eval_l_)
===============================================================================
  No methods

android.support.v4.media.session.PlaybackStateCompatApi22        (be.brunoparmentier.apkshare.eval_xy)
===============================================================================
  b    public static getExtras(java.lang.Object)
  s    public static newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle)

android.support.v4.media.session.PlaybackStateCompatApi22$ParseException (be.brunoparmentier.apkshare.eval_gn)
===============================================================================
  No methods

android.support.v4.net.ConnectivityManagerCompat (be.brunoparmentier.apkshare.eval_i8)
===============================================================================
  g    public static isActiveNetworkMetered(android.net.ConnectivityManager)
  t    public static getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent)

android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl       (be.brunoparmentier.apkshare.eval_i8$o)
===============================================================================
  l    public isActiveNetworkMetered(android.net.ConnectivityManager)

android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl   (be.brunoparmentier.apkshare.eval_i8$a)
===============================================================================
  l    public abstract isActiveNetworkMetered(android.net.ConnectivityManager)

android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl        (be.brunoparmentier.apkshare.eval_i8$_)
===============================================================================
  l    public isActiveNetworkMetered(android.net.ConnectivityManager)

android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl       (be.brunoparmentier.apkshare.eval_i8$g)
===============================================================================
  l    public isActiveNetworkMetered(android.net.ConnectivityManager)

android.support.v4.net.ConnectivityManagerCompat$IOException     (be.brunoparmentier.apkshare.eval_x0)
===============================================================================
  No methods

android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl  (be.brunoparmentier.apkshare.eval_i8$m)
===============================================================================
  l    public isActiveNetworkMetered(android.net.ConnectivityManager)

android.support.v4.net.ConnectivityManagerCompatGingerbread      (be.brunoparmentier.apkshare.eval_iw)
===============================================================================
  i    public static isActiveNetworkMetered(android.net.ConnectivityManager)

android.support.v4.net.ConnectivityManagerCompatGingerbread$Exception    (be.brunoparmentier.apkshare.eval_w2)
===============================================================================
  No methods

android.support.v4.net.ConnectivityManagerCompatHoneycombMR2     (be.brunoparmentier.apkshare.eval_pj)
===============================================================================
  z    public static isActiveNetworkMetered(android.net.ConnectivityManager)

android.support.v4.net.ConnectivityManagerCompatHoneycombMR2$NullPointerException        (be.brunoparmentier.apkshare.eval_cm)
===============================================================================
  No methods

android.support.v4.net.ConnectivityManagerCompatJellyBean        (be.brunoparmentier.apkshare.eval_z4)
===============================================================================
  z    public static isActiveNetworkMetered(android.net.ConnectivityManager)

android.support.v4.net.ConnectivityManagerCompatJellyBean$ParseException (be.brunoparmentier.apkshare.eval_ue)
===============================================================================
  No methods

android.support.v4.net.TrafficStatsCompat        (be.brunoparmentier.apkshare.eval_w6)
===============================================================================
  d        public static clearThreadStatsTag()
  d        public static incrementOperationCount(int,int)
  eval_r   public static setThreadStatsTag(int)
  h        public static tagSocket(java.net.Socket)
  k        public static getThreadStatsTag()
  m        public static incrementOperationCount(int)
  p        public static untagSocket(java.net.Socket)

android.support.v4.net.TrafficStatsCompat$1      (be.brunoparmentier.apkshare.eval_w6$1)
===============================================================================
  No methods

android.support.v4.net.TrafficStatsCompat$ArrayOutOfBoundsException      (be.brunoparmentier.apkshare.eval_xd)
===============================================================================
  No methods

android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl     (be.brunoparmentier.apkshare.eval_w6$c)
===============================================================================
  c    public incrementOperationCount(int)
  d    public incrementOperationCount(int,int)
  d    public tagSocket(java.net.Socket)
  u    public setThreadStatsTag(int)
  u    public untagSocket(java.net.Socket)
  v    public clearThreadStatsTag()
  z    public getThreadStatsTag()

android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1   (be.brunoparmentier.apkshare.eval_w6$c$1)
===============================================================================
  initialValue protected initialValue()
  initialValue protected volatile initialValue()

android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$IOException (be.brunoparmentier.apkshare.eval_ma)
===============================================================================
  No methods

android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags  (be.brunoparmentier.apkshare.eval_w6$c$y)
===============================================================================
  No methods

android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl      (be.brunoparmentier.apkshare.eval_w6$eval_r)
===============================================================================
  c    public incrementOperationCount(int)
  d    public incrementOperationCount(int,int)
  d    public tagSocket(java.net.Socket)
  u    public setThreadStatsTag(int)
  u    public untagSocket(java.net.Socket)
  v    public clearThreadStatsTag()
  z    public getThreadStatsTag()

android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl (be.brunoparmentier.apkshare.eval_w6$x)
===============================================================================
  c    public abstract incrementOperationCount(int)
  d    public abstract incrementOperationCount(int,int)
  d    public abstract tagSocket(java.net.Socket)
  u    public abstract setThreadStatsTag(int)
  u    public abstract untagSocket(java.net.Socket)
  v    public abstract clearThreadStatsTag()
  z    public abstract getThreadStatsTag()

android.support.v4.net.TrafficStatsCompatIcs     (be.brunoparmentier.apkshare.eval_wc)
===============================================================================
  d    public static setThreadStatsTag(int)
  k    public static incrementOperationCount(int,int)
  p    public static getThreadStatsTag()
  v    public static incrementOperationCount(int)
  w    public static clearThreadStatsTag()
  x    public static tagSocket(java.net.Socket)
  y    public static untagSocket(java.net.Socket)

android.support.v4.net.TrafficStatsCompatIcs$Exception   (be.brunoparmentier.apkshare.eval_f8)
===============================================================================
  No methods

android.support.v4.os.AsyncTaskCompat    (be.brunoparmentier.apkshare.eval__n)
===============================================================================
  eval_r   public static transient executeParallel(android.os.AsyncTask,java.lang.Object[])

android.support.v4.os.AsyncTaskCompat$ParseException     (be.brunoparmentier.apkshare.eval_sz)
===============================================================================
  No methods

android.support.v4.os.AsyncTaskCompatHoneycomb   (be.brunoparmentier.apkshare.eval_d0)
===============================================================================
  o    static transient executeParallel(android.os.AsyncTask,java.lang.Object[])

android.support.v4.os.AsyncTaskCompatHoneycomb$ArrayOutOfBoundsException (be.brunoparmentier.apkshare.eval_dt)
===============================================================================
  No methods

android.support.v4.os.EnvironmentCompat  (be.brunoparmentier.apkshare.eval_gr)
===============================================================================
  s    public static getStorageState(java.io.File)

android.support.v4.os.EnvironmentCompat$Exception        (be.brunoparmentier.apkshare.eval_r9)
===============================================================================
  No methods

android.support.v4.os.EnvironmentCompatKitKat    (be.brunoparmentier.apkshare.eval_mh)
===============================================================================
  z    public static getStorageState(java.io.File)

android.support.v4.os.EnvironmentCompatKitKat$NullPointerException       (be.brunoparmentier.apkshare.eval_ja)
===============================================================================
  No methods

android.support.v4.os.ParcelableCompat   (be.brunoparmentier.apkshare.eval_rc)
===============================================================================
  i    public static newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks)

android.support.v4.os.ParcelableCompat$CompatCreator     (be.brunoparmentier.apkshare.eval_rc$v)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)

android.support.v4.os.ParcelableCompat$IOException       (be.brunoparmentier.apkshare.eval_lt)
===============================================================================
  No methods

android.support.v4.os.ParcelableCompatCreatorCallbacks   (be.brunoparmentier.apkshare.eval_bs)
===============================================================================
  eval_i   public abstract createFromParcel(android.os.Parcel,java.lang.ClassLoader)
  f        public abstract newArray(int)

android.support.v4.os.ParcelableCompatCreatorCallbacks$Exception (be.brunoparmentier.apkshare.eval_ss)
===============================================================================
  No methods

android.support.v4.os.ParcelableCompatCreatorHoneycombMR2        (be.brunoparmentier.apkshare.eval_sx)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  createFromParcel public createFromParcel(android.os.Parcel,java.lang.ClassLoader)
  newArray         public newArray(int)

android.support.v4.os.ParcelableCompatCreatorHoneycombMR2$ParseException (be.brunoparmentier.apkshare.eval_wh)
===============================================================================
  No methods

android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub    (be.brunoparmentier.apkshare.eval_q_)
===============================================================================
  x    static instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks)

android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub$ArrayOutOfBoundsException  (be.brunoparmentier.apkshare.eval_bp)
===============================================================================
  No methods

android.support.v4.os.TraceCompat        (be.brunoparmentier.apkshare.eval_oe)
===============================================================================
  e    public static beginSection(java.lang.String)
  o    public static endSection()

android.support.v4.os.TraceCompat$IOException    (be.brunoparmentier.apkshare.eval_j4)
===============================================================================
  No methods

android.support.v4.os.TraceJellybeanMR2  (be.brunoparmentier.apkshare.eval_sf)
===============================================================================
  a    public static endSection()
  b    public static beginSection(java.lang.String)

android.support.v4.os.TraceJellybeanMR2$Exception        (be.brunoparmentier.apkshare.eval_nw)
===============================================================================
  No methods

android.support.v4.print.PrintHelper     (be.brunoparmentier.apkshare.eval_kq)
===============================================================================
  a    public static systemSupportsPrint()
  a    public printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback)
  b    public getOrientation()
  d    public getColorMode()
  d    public printBitmap(java.lang.String,android.graphics.Bitmap)
  g    public setColorMode(int)
  g    public printBitmap(java.lang.String,android.net.Uri)
  l    public setScaleMode(int)
  q    public printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback)
  r    public setOrientation(int)
  y    public getScaleMode()

android.support.v4.print.PrintHelper$1   (be.brunoparmentier.apkshare.eval_kq$1)
===============================================================================
  No methods

android.support.v4.print.PrintHelper$ArrayOutOfBoundsException   (be.brunoparmentier.apkshare.eval_jk)
===============================================================================
  No methods

android.support.v4.print.PrintHelper$OnPrintFinishCallback       (be.brunoparmentier.apkshare.eval_kq$v)
===============================================================================
  v    public abstract onFinish()

android.support.v4.print.PrintHelper$PrintHelperKitkatImpl       (be.brunoparmentier.apkshare.eval_kq$n)
===============================================================================
  eval_t   public getColorMode()
  h        public getScaleMode()
  h        public setScaleMode(int)
  j        public getOrientation()
  k        public printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback)
  n        public printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback)
  v        public setOrientation(int)
  w        public setColorMode(int)

android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$1     (be.brunoparmentier.apkshare.eval_kq$n$1)
===============================================================================
  i    public onFinish()

android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$2     (be.brunoparmentier.apkshare.eval_kq$n$2)
===============================================================================
  i    public onFinish()

android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$IOException   (be.brunoparmentier.apkshare.eval_sw)
===============================================================================
  No methods

android.support.v4.print.PrintHelper$PrintHelperStubImpl (be.brunoparmentier.apkshare.eval_kq$g)
===============================================================================
  eval_t   public getColorMode()
  h        public getScaleMode()
  h        public setScaleMode(int)
  j        public getOrientation()
  k        public printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback)
  n        public printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback)
  v        public setOrientation(int)
  w        public setColorMode(int)

android.support.v4.print.PrintHelper$PrintHelperVersionImpl      (be.brunoparmentier.apkshare.eval_kq$x)
===============================================================================
  eval_t   public abstract getColorMode()
  h        public abstract getScaleMode()
  h        public abstract setScaleMode(int)
  j        public abstract getOrientation()
  k        public abstract printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback)
  n        public abstract printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback)
  v        public abstract setOrientation(int)
  w        public abstract setColorMode(int)

android.support.v4.print.PrintHelperKitkat       (be.brunoparmentier.apkshare.eval_zk)
===============================================================================
  a        public printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback)
  d        static access$000(android.support.v4.print.PrintHelperKitkat,int,int,android.graphics.RectF,int)
  d        public printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback)
  eval_r   public setOrientation(int)
  eval_y   static access$200(android.support.v4.print.PrintHelperKitkat,android.net.Uri,int)
  f        private loadBitmap(android.net.Uri,android.graphics.BitmapFactory$Options)
  m        public getScaleMode()
  m        private loadConstrainedBitmap(android.net.Uri,int)
  o        private getMatrix(int,int,android.graphics.RectF,int)
  r        public getOrientation()
  s        public setColorMode(int)
  v        static access$300(android.support.v4.print.PrintHelperKitkat)
  z        public getColorMode()
  z        public setScaleMode(int)

android.support.v4.print.PrintHelperKitkat$1     (be.brunoparmentier.apkshare.eval_zk$1)
===============================================================================
  onFinish public onFinish()
  onLayout public onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle)
  onWrite  public onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)

android.support.v4.print.PrintHelperKitkat$2     (be.brunoparmentier.apkshare.eval_zk$2)
===============================================================================
  a        static access$100(android.support.v4.print.PrintHelperKitkat$2)
  k        private cancelLoad()
  onFinish public onFinish()
  onLayout public onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle)
  onWrite  public onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)

android.support.v4.print.PrintHelperKitkat$2$1   (be.brunoparmentier.apkshare.eval_zk$2$1)
===============================================================================
  k                protected onCancelled(android.graphics.Bitmap)
  n                protected transient doInBackground(android.net.Uri[])
  p                protected onPostExecute(android.graphics.Bitmap)
  doInBackground   protected volatile doInBackground(java.lang.Object[])
  onCancelled      protected volatile onCancelled(java.lang.Object)
  onPostExecute    protected volatile onPostExecute(java.lang.Object)
  onPreExecute     protected onPreExecute()

android.support.v4.print.PrintHelperKitkat$2$1$1 (be.brunoparmentier.apkshare.eval_zk$2$1$1)
===============================================================================
  onCancel public onCancel()

android.support.v4.print.PrintHelperKitkat$2$1$ArrayOutOfBoundsException (be.brunoparmentier.apkshare.eval_on)
===============================================================================
  No methods

android.support.v4.print.PrintHelperKitkat$2$Exception   (be.brunoparmentier.apkshare.eval_h0)
===============================================================================
  No methods

android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback (be.brunoparmentier.apkshare.eval_zk$l)
===============================================================================
  i    public abstract onFinish()

android.support.v4.print.PrintHelperKitkat$ParseException        (be.brunoparmentier.apkshare.eval_w7)
===============================================================================
  No methods

android.support.v4.provider.DocumentFile (be.brunoparmentier.apkshare.eval_fx)
===============================================================================
  a        public abstract getUri()
  b        public abstract createFile(java.lang.String,java.lang.String)
  c        public abstract listFiles()
  c        public findFile(java.lang.String)
  d        public abstract isFile()
  d        public abstract createDirectory(java.lang.String)
  eval_b   public abstract delete()
  eval_i   public abstract lastModified()
  eval_m   public abstract canWrite()
  eval_w   public abstract canRead()
  f        public abstract renameTo(java.lang.String)
  g        public static fromFile(java.io.File)
  h        public abstract getName()
  i        public abstract getType()
  l        public static fromTreeUri(android.content.Context,android.net.Uri)
  o        public getParentFile()
  o        public static fromSingleUri(android.content.Context,android.net.Uri)
  q        public static isDocumentUri(android.content.Context,android.net.Uri)
  r        public abstract isDirectory()
  u        public abstract exists()
  y        public abstract length()

android.support.v4.provider.DocumentFile$NullPointerException    (be.brunoparmentier.apkshare.eval_ub)
===============================================================================
  No methods

android.support.v4.provider.DocumentsContractApi19       (be.brunoparmentier.apkshare.eval_rj)
===============================================================================
  eval_l   public static isDirectory(android.content.Context,android.net.Uri)
  eval_o   public static isFile(android.content.Context,android.net.Uri)
  eval_s   public static exists(android.content.Context,android.net.Uri)
  f        public static lastModified(android.content.Context,android.net.Uri)
  j        public static length(android.content.Context,android.net.Uri)
  j        private static closeQuietly(java.lang.AutoCloseable)
  k        public static getType(android.content.Context,android.net.Uri)
  k        private static queryForInt(android.content.Context,android.net.Uri,java.lang.String,int)
  l        public static canWrite(android.content.Context,android.net.Uri)
  n        public static getName(android.content.Context,android.net.Uri)
  o        private static queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)
  o        private static queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)
  p        public static canRead(android.content.Context,android.net.Uri)
  s        public static delete(android.content.Context,android.net.Uri)
  t        private static getRawType(android.content.Context,android.net.Uri)
  y        public static isDocumentUri(android.content.Context,android.net.Uri)

android.support.v4.provider.DocumentsContractApi19$NullPointerException  (be.brunoparmentier.apkshare.eval_p3)
===============================================================================
  No methods

android.support.v4.provider.DocumentsContractApi21       (be.brunoparmentier.apkshare.eval_sr)
===============================================================================
  c    public static createDirectory(android.content.Context,android.net.Uri,java.lang.String)
  h    public static createFile(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)
  m    public static listFiles(android.content.Context,android.net.Uri)
  p    public static renameTo(android.content.Context,android.net.Uri,java.lang.String)
  q    public static prepareTreeUri(android.net.Uri)
  w    private static closeQuietly(java.lang.AutoCloseable)

android.support.v4.provider.DocumentsContractApi21$NullPointerException  (be.brunoparmentier.apkshare.eval_mg)
===============================================================================
  No methods

android.support.v4.provider.RawDocumentFile      (be.brunoparmentier.apkshare.eval_ig)
===============================================================================
  a        public getUri()
  b        public createFile(java.lang.String,java.lang.String)
  c        public listFiles()
  d        public isFile()
  d        public createDirectory(java.lang.String)
  eval_b   public delete()
  eval_i   public lastModified()
  eval_m   public canWrite()
  eval_w   public canRead()
  f        public renameTo(java.lang.String)
  h        public getName()
  i        public getType()
  r        public isDirectory()
  t        private static deleteContents(java.io.File)
  u        public exists()
  u        private static getTypeForName(java.lang.String)
  y        public length()

android.support.v4.provider.RawDocumentFile$IOException  (be.brunoparmentier.apkshare.eval__q)
===============================================================================
  No methods

android.support.v4.provider.SingleDocumentFile   (be.brunoparmentier.apkshare.eval_o7)
===============================================================================
  a        public getUri()
  b        public createFile(java.lang.String,java.lang.String)
  c        public listFiles()
  d        public isFile()
  d        public createDirectory(java.lang.String)
  eval_b   public delete()
  eval_i   public lastModified()
  eval_m   public canWrite()
  eval_w   public canRead()
  f        public renameTo(java.lang.String)
  h        public getName()
  i        public getType()
  r        public isDirectory()
  u        public exists()
  y        public length()

android.support.v4.provider.SingleDocumentFile$ArrayOutOfBoundsException (be.brunoparmentier.apkshare.eval_qv)
===============================================================================
  No methods

android.support.v4.provider.TreeDocumentFile     (be.brunoparmentier.apkshare.eval_xv)
===============================================================================
  a        public getUri()
  b        public createFile(java.lang.String,java.lang.String)
  c        public listFiles()
  d        public isFile()
  d        public createDirectory(java.lang.String)
  eval_b   public delete()
  eval_i   public lastModified()
  eval_m   public canWrite()
  eval_w   public canRead()
  f        public renameTo(java.lang.String)
  h        public getName()
  i        public getType()
  r        public isDirectory()
  u        public exists()
  y        public length()

android.support.v4.provider.TreeDocumentFile$Exception   (be.brunoparmentier.apkshare.eval_s3)
===============================================================================
  No methods

android.support.v4.speech.tts.TextToSpeechICS    (be.brunoparmentier.apkshare.eval_zx)
===============================================================================
  e    static construct(android.content.Context,android.speech.tts.TextToSpeech$OnInitListener,java.lang.String)

android.support.v4.speech.tts.TextToSpeechICS$NullPointerException       (be.brunoparmentier.apkshare.eval_i1)
===============================================================================
  No methods

android.support.v4.speech.tts.TextToSpeechICSMR1 (be.brunoparmentier.apkshare.eval_k9)
===============================================================================
  q    static setUtteranceProgressListener(android.speech.tts.TextToSpeech,android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1)
  w    static getFeatures(android.speech.tts.TextToSpeech,java.util.Locale)

android.support.v4.speech.tts.TextToSpeechICSMR1$1       (be.brunoparmentier.apkshare.eval_k9$1)
===============================================================================
  onDone   public onDone(java.lang.String)
  onError  public onError(java.lang.String)
  onStart  public onStart(java.lang.String)

android.support.v4.speech.tts.TextToSpeechICSMR1$2       (be.brunoparmentier.apkshare.eval_k9$2)
===============================================================================
  onUtteranceCompleted public onUtteranceCompleted(java.lang.String)

android.support.v4.speech.tts.TextToSpeechICSMR1$IOException     (be.brunoparmentier.apkshare.eval_eh)
===============================================================================
  No methods

android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1 (be.brunoparmentier.apkshare.eval_k9$c)
===============================================================================
  n    public abstract onError(java.lang.String)
  r    public abstract onStart(java.lang.String)
  y    public abstract onDone(java.lang.String)

android.support.v4.text.BidiFormatter    (be.brunoparmentier.apkshare.eval_pt)
===============================================================================
  e        public unicodeWrap(java.lang.String,boolean)
  eval_a   static access$300()
  eval_d   private static getEntryDir(java.lang.String)
  eval_i   public isRtl(java.lang.String)
  f        public isRtlContext()
  f        public static getInstance(java.util.Locale)
  g        public static getInstance(boolean)
  h        static access$200()
  i        private markBefore(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat)
  i        private static isRtlLocale(java.util.Locale)
  j        private markAfter(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat)
  m        public getStereoReset()
  p        static access$000(java.util.Locale)
  q        public unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat,boolean)
  s        public static getInstance()
  u        static access$100()
  x        public unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat)
  y        private static getExitDir(java.lang.String)
  z        public unicodeWrap(java.lang.String)

android.support.v4.text.BidiFormatter$1  (be.brunoparmentier.apkshare.eval_pt$1)
===============================================================================
  No methods

android.support.v4.text.BidiFormatter$Builder    (be.brunoparmentier.apkshare.eval_pt$m)
===============================================================================
  f    public build()
  i    public stereoReset(boolean)
  m    private initialize(boolean)
  o    public setTextDirectionHeuristic(android.support.v4.text.TextDirectionHeuristicCompat)
  y    private static getDefaultInstanceFromContext(boolean)

android.support.v4.text.BidiFormatter$DirectionalityEstimator    (be.brunoparmentier.apkshare.eval_pt$q)
===============================================================================
  a        private skipEntityForward()
  b        private skipTagBackward()
  eval_r   private skipEntityBackward()
  eval_u   dirTypeBackward()
  m        dirTypeForward()
  n        private skipTagForward()
  n        private static getCachedDirectionality(char)
  o        getExitDir()
  z        getEntryDir()

android.support.v4.text.BidiFormatter$ParseException     (be.brunoparmentier.apkshare.eval_ca)
===============================================================================
  No methods

android.support.v4.text.ICUCompat        (be.brunoparmentier.apkshare.eval_dh)
===============================================================================
  o    public static getScript(java.lang.String)
  z    public static addLikelySubtags(java.lang.String)

android.support.v4.text.ICUCompat$ICUCompatImpl  (be.brunoparmentier.apkshare.eval_dh$i)
===============================================================================
  a    public abstract getScript(java.lang.String)
  l    public abstract addLikelySubtags(java.lang.String)

android.support.v4.text.ICUCompat$ICUCompatImplBase      (be.brunoparmentier.apkshare.eval_dh$a)
===============================================================================
  a    public getScript(java.lang.String)
  l    public addLikelySubtags(java.lang.String)

android.support.v4.text.ICUCompat$ICUCompatImplIcs       (be.brunoparmentier.apkshare.eval_dh$b)
===============================================================================
  a    public getScript(java.lang.String)
  l    public addLikelySubtags(java.lang.String)

android.support.v4.text.ICUCompat$IOException    (be.brunoparmentier.apkshare.eval_jo)
===============================================================================
  No methods

android.support.v4.text.ICUCompatIcs     (be.brunoparmentier.apkshare.eval_nm)
===============================================================================
  j    public static addLikelySubtags(java.lang.String)
  n    public static getScript(java.lang.String)

android.support.v4.text.ICUCompatIcs$ArrayOutOfBoundsException   (be.brunoparmentier.apkshare.eval_ed)
===============================================================================
  No methods

android.support.v4.text.TextDirectionHeuristicCompat     (be.brunoparmentier.apkshare.eval_ty)
===============================================================================
  a    public abstract isRtl(char[],int,int)
  f    public abstract isRtl(java.lang.CharSequence,int,int)

android.support.v4.text.TextDirectionHeuristicCompat$ParseException      (be.brunoparmentier.apkshare.eval_h1)
===============================================================================
  No methods

android.support.v4.text.TextDirectionHeuristicsCompat    (be.brunoparmentier.apkshare.eval_pg)
===============================================================================
  t    private static isRtlText(int)
  u    static access$200(int)
  x    static access$100(int)
  y    private static isRtlTextOrFormat(int)

android.support.v4.text.TextDirectionHeuristicsCompat$1  (be.brunoparmentier.apkshare.eval_pg$1)
===============================================================================
  No methods

android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong  (be.brunoparmentier.apkshare.eval_pg$v)
===============================================================================
  m    public checkRtl(java.lang.CharSequence,int,int)

android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong        (be.brunoparmentier.apkshare.eval_pg$c)
===============================================================================
  m    public checkRtl(java.lang.CharSequence,int,int)

android.support.v4.text.TextDirectionHeuristicsCompat$IOException        (be.brunoparmentier.apkshare.eval_qx)
===============================================================================
  No methods

android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm     (be.brunoparmentier.apkshare.eval_pg$r)
===============================================================================
  m    public abstract checkRtl(java.lang.CharSequence,int,int)

android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl (be.brunoparmentier.apkshare.eval_pg$u)
===============================================================================
  a    public isRtl(char[],int,int)
  f    public isRtl(java.lang.CharSequence,int,int)
  o    private doCheck(java.lang.CharSequence,int,int)
  p    protected abstract defaultIsRtl()

android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal     (be.brunoparmentier.apkshare.eval_pg$o)
===============================================================================
  p    protected defaultIsRtl()

android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale       (be.brunoparmentier.apkshare.eval_pg$h)
===============================================================================
  p    protected defaultIsRtl()

android.support.v4.text.TextUtilsCompat  (be.brunoparmentier.apkshare.eval_dr)
===============================================================================
  p    public static htmlEncode(java.lang.String)
  w    public static getLayoutDirectionFromLocale(java.util.Locale)
  y    private static getLayoutDirectionFromFirstChar(java.util.Locale)

android.support.v4.text.TextUtilsCompat$Exception        (be.brunoparmentier.apkshare.eval_ko)
===============================================================================
  No methods

android.support.v4.util.ArrayMap (be.brunoparmentier.apkshare.eval_zy)
===============================================================================
  d        public removeAll(java.util.Collection)
  e        private getCollection()
  f        public containsAll(java.util.Collection)
  r        public retainAll(java.util.Collection)
  entrySet public entrySet()
  keySet   public keySet()
  putAll   public putAll(java.util.Map)
  values   public values()

android.support.v4.util.ArrayMap$1       (be.brunoparmentier.apkshare.eval_zy$1)
===============================================================================
  e    protected colGetEntry(int,int)
  f    protected colClear()
  j    protected colGetSize()
  j    protected colRemoveAt(int)
  m    protected colGetMap()
  m    protected colPut(java.lang.Object,java.lang.Object)
  u    protected colIndexOfKey(java.lang.Object)
  v    protected colSetValue(int,java.lang.Object)
  y    protected colIndexOfValue(java.lang.Object)

android.support.v4.util.ArrayMap$ParseException  (be.brunoparmentier.apkshare.eval_td)
===============================================================================
  No methods

android.support.v4.util.AtomicFile       (be.brunoparmentier.apkshare.eval_el)
===============================================================================
  b        public finishWrite(java.io.FileOutputStream)
  eval_b   public startWrite()
  f        public getBaseFile()
  g        public delete()
  l        public openRead()
  o        static sync(java.io.FileOutputStream)
  s        public failWrite(java.io.FileOutputStream)
  u        public readFully()

android.support.v4.util.AtomicFile$Exception     (be.brunoparmentier.apkshare.eval_v9)
===============================================================================
  No methods

android.support.v4.util.CircularArray    (be.brunoparmentier.apkshare.eval_up)
===============================================================================
  b        public getLast()
  e        private doubleCapacity()
  eval_g   public size()
  eval_t   public isEmpty()
  i        public get(int)
  n        public removeFromEnd(int)
  n        public addFirst(java.lang.Object)
  p        public clear()
  r        public popFirst()
  u        public popLast()
  z        public getFirst()
  z        public removeFromStart(int)
  z        public addLast(java.lang.Object)

android.support.v4.util.CircularArray$ParseException     (be.brunoparmentier.apkshare.eval_r2)
===============================================================================
  No methods

android.support.v4.util.CircularIntArray (be.brunoparmentier.apkshare.eval_by)
===============================================================================
  a        public getFirst()
  a        public removeFromEnd(int)
  d        public addFirst(int)
  eval_e   public clear()
  f        public removeFromStart(int)
  i        public get(int)
  o        public getLast()
  p        public addLast(int)
  u        public popFirst()
  v        public isEmpty()
  w        public size()
  x        private doubleCapacity()
  z        public popLast()

android.support.v4.util.CircularIntArray$NullPointerException    (be.brunoparmentier.apkshare.eval_lq)
===============================================================================
  No methods

android.support.v4.util.ContainerHelpers (be.brunoparmentier.apkshare.eval_qg)
===============================================================================
  c    public static idealByteArraySize(int)
  i    public static idealLongArraySize(int)
  u    static binarySearch(long[],int,long)
  v    public static idealIntArraySize(int)
  z    static binarySearch(int[],int,int)
  z    public static equal(java.lang.Object,java.lang.Object)

android.support.v4.util.ContainerHelpers$NullPointerException    (be.brunoparmentier.apkshare.eval_i2)
===============================================================================
  No methods

android.support.v4.util.DebugUtils       (be.brunoparmentier.apkshare.eval_e9)
===============================================================================
  b    public static buildShortClassTag(java.lang.Object,java.lang.StringBuilder)

android.support.v4.util.DebugUtils$Exception     (be.brunoparmentier.apkshare.eval_uw)
===============================================================================
  No methods

android.support.v4.util.LogWriter        (be.brunoparmentier.apkshare.eval__s)
===============================================================================
  c        private flushBuilder()
  close    public close()
  flush    public flush()
  write    public write(char[],int,int)

android.support.v4.util.LogWriter$IOException    (be.brunoparmentier.apkshare.eval_x4)
===============================================================================
  No methods

android.support.v4.util.LongSparseArray  (be.brunoparmentier.apkshare.eval_xe)
===============================================================================
  a        public indexOfKey(long)
  b        public indexOfValue(java.lang.Object)
  c        private gc()
  clone    public clone()
  e        public get(long,java.lang.Object)
  eval_l   public removeAt(int)
  i        public remove(long)
  j        public delete(long)
  m        public keyAt(int)
  m        public append(long,java.lang.Object)
  n        public get(long)
  q        public setValueAt(int,java.lang.Object)
  v        public size()
  w        public clear()
  w        public valueAt(int)
  w        public put(long,java.lang.Object)
  clone    public volatile clone()
  toString public toString()

android.support.v4.util.LongSparseArray$Exception        (be.brunoparmentier.apkshare.eval_cz)
===============================================================================
  No methods

android.support.v4.util.LruCache (be.brunoparmentier.apkshare.eval_ow)
===============================================================================
  b        protected sizeOf(java.lang.Object,java.lang.Object)
  c        public final evictAll()
  d        public final synchronized createCount()
  e        protected entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)
  eval_e   public final put(java.lang.Object,java.lang.Object)
  eval_r   public final synchronized snapshot()
  f        public final synchronized putCount()
  f        public resize(int)
  g        public final synchronized missCount()
  g        public final remove(java.lang.Object)
  i        public final synchronized hitCount()
  o        public final synchronized evictionCount()
  r        public final synchronized size()
  t        protected create(java.lang.Object)
  u        public final synchronized maxSize()
  v        public trimToSize(int)
  x        public final get(java.lang.Object)
  y        private safeSizeOf(java.lang.Object,java.lang.Object)
  toString public final synchronized toString()

android.support.v4.util.LruCache$ParseException  (be.brunoparmentier.apkshare.eval_hf)
===============================================================================
  No methods

android.support.v4.util.MapCollections   (be.brunoparmentier.apkshare.eval_kd)
===============================================================================
  e    protected abstract colGetEntry(int,int)
  f    protected abstract colClear()
  g    public getKeySet()
  j    protected abstract colGetSize()
  j    protected abstract colRemoveAt(int)
  l    public static retainAllHelper(java.util.Map,java.util.Collection)
  m    protected abstract colGetMap()
  m    protected abstract colPut(java.lang.Object,java.lang.Object)
  m    public toArrayHelper(java.lang.Object[],int)
  m    public static removeAllHelper(java.util.Map,java.util.Collection)
  p    public getValues()
  p    public static containsAllHelper(java.util.Map,java.util.Collection)
  r    public toArrayHelper(int)
  u    protected abstract colIndexOfKey(java.lang.Object)
  v    protected abstract colSetValue(int,java.lang.Object)
  y    public getEntrySet()
  y    protected abstract colIndexOfValue(java.lang.Object)
  y    public static equalsSetHelper(java.util.Set,java.lang.Object)

android.support.v4.util.MapCollections$ArrayIterator     (be.brunoparmentier.apkshare.eval_kd$n)
===============================================================================
  hasNext  public hasNext()
  next     public next()
  remove   public remove()

android.support.v4.util.MapCollections$EntrySet  (be.brunoparmentier.apkshare.eval_kd$eval_o)
===============================================================================
  f            public add(java.util.Map$Entry)
  add          public volatile add(java.lang.Object)
  addAll       public addAll(java.util.Collection)
  clear        public clear()
  contains     public contains(java.lang.Object)
  containsAll  public containsAll(java.util.Collection)
  equals       public equals(java.lang.Object)
  hashCode     public hashCode()
  isEmpty      public isEmpty()
  iterator     public iterator()
  remove       public remove(java.lang.Object)
  removeAll    public removeAll(java.util.Collection)
  retainAll    public retainAll(java.util.Collection)
  size         public size()
  toArray      public toArray()
  toArray      public toArray(java.lang.Object[])

android.support.v4.util.MapCollections$IOException       (be.brunoparmentier.apkshare.eval_g9)
===============================================================================
  No methods

android.support.v4.util.MapCollections$KeySet    (be.brunoparmentier.apkshare.eval_kd$p)
===============================================================================
  add          public add(java.lang.Object)
  addAll       public addAll(java.util.Collection)
  clear        public clear()
  contains     public contains(java.lang.Object)
  containsAll  public containsAll(java.util.Collection)
  equals       public equals(java.lang.Object)
  hashCode     public hashCode()
  isEmpty      public isEmpty()
  iterator     public iterator()
  remove       public remove(java.lang.Object)
  removeAll    public removeAll(java.util.Collection)
  retainAll    public retainAll(java.util.Collection)
  size         public size()
  toArray      public toArray()
  toArray      public toArray(java.lang.Object[])

android.support.v4.util.MapCollections$MapIterator       (be.brunoparmentier.apkshare.eval_kd$b)
===============================================================================
  next     public next()
  equals   public final equals(java.lang.Object)
  getKey   public getKey()
  getValue public getValue()
  hasNext  public hasNext()
  hashCode public final hashCode()
  next     public volatile next()
  remove   public remove()
  setValue public setValue(java.lang.Object)
  toString public final toString()

android.support.v4.util.MapCollections$ValuesCollection  (be.brunoparmentier.apkshare.eval_kd$l)
===============================================================================
  add          public add(java.lang.Object)
  addAll       public addAll(java.util.Collection)
  clear        public clear()
  contains     public contains(java.lang.Object)
  containsAll  public containsAll(java.util.Collection)
  isEmpty      public isEmpty()
  iterator     public iterator()
  remove       public remove(java.lang.Object)
  removeAll    public removeAll(java.util.Collection)
  retainAll    public retainAll(java.util.Collection)
  size         public size()
  toArray      public toArray()
  toArray      public toArray(java.lang.Object[])

android.support.v4.util.Pair     (be.brunoparmentier.apkshare.eval_zf)
===============================================================================
  h        private static objectsEqual(java.lang.Object,java.lang.Object)
  v        public static create(java.lang.Object,java.lang.Object)
  equals   public equals(java.lang.Object)
  hashCode public hashCode()

android.support.v4.util.Pair$IOException (be.brunoparmentier.apkshare.eval__9)
===============================================================================
  No methods

android.support.v4.util.Pools    (be.brunoparmentier.apkshare.eval_l8)
===============================================================================
  No methods

android.support.v4.util.Pools$Exception  (be.brunoparmentier.apkshare.eval_k2)
===============================================================================
  No methods

android.support.v4.util.Pools$Pool       (be.brunoparmentier.apkshare.eval_l8$q)
===============================================================================
  h    public abstract release(java.lang.Object)
  i    public abstract acquire()

android.support.v4.util.Pools$SimplePool (be.brunoparmentier.apkshare.eval_l8$c)
===============================================================================
  d    private isInPool(java.lang.Object)
  h    public release(java.lang.Object)
  i    public acquire()

android.support.v4.util.Pools$SynchronizedPool   (be.brunoparmentier.apkshare.eval_l8$v)
===============================================================================
  h    public release(java.lang.Object)
  i    public acquire()

android.support.v4.util.SimpleArrayMap   (be.brunoparmentier.apkshare.eval_pq)
===============================================================================
  b                public keyAt(int)
  c                indexOf(java.lang.Object,int)
  d                public setValueAt(int,java.lang.Object)
  eval_r           public valueAt(int)
  h                public ensureCapacity(int)
  i                public putAll(android.support.v4.util.SimpleArrayMap)
  l                indexOfNull()
  m                private static freeArrays(int[],java.lang.Object[],int)
  o                private allocArrays(int)
  u                public indexOfKey(java.lang.Object)
  w                indexOfValue(java.lang.Object)
  y                public removeAt(int)
  clear            public clear()
  containsKey      public containsKey(java.lang.Object)
  containsValue    public containsValue(java.lang.Object)
  equals           public equals(java.lang.Object)
  get              public get(java.lang.Object)
  hashCode         public hashCode()
  isEmpty          public isEmpty()
  put              public put(java.lang.Object,java.lang.Object)
  remove           public remove(java.lang.Object)
  size             public size()
  toString         public toString()

android.support.v4.util.SimpleArrayMap$IOException       (be.brunoparmentier.apkshare.eval_xq)
===============================================================================
  No methods

android.support.v4.util.SparseArrayCompat        (be.brunoparmentier.apkshare.eval_qj)
===============================================================================
  clone    public clone()
  d        public remove(int)
  eval_e   public removeAtRange(int,int)
  eval_m   public valueAt(int)
  g        public removeAt(int)
  g        public get(int,java.lang.Object)
  i        public delete(int)
  j        public keyAt(int)
  n        public size()
  n        public setValueAt(int,java.lang.Object)
  q        private gc()
  r        public put(int,java.lang.Object)
  w        public clear()
  x        public get(int)
  x        public append(int,java.lang.Object)
  z        public indexOfKey(int)
  z        public indexOfValue(java.lang.Object)
  clone    public volatile clone()
  toString public toString()

android.support.v4.util.SparseArrayCompat$ArrayOutOfBoundsException      (be.brunoparmentier.apkshare.eval_t4)
===============================================================================
  No methods

android.support.v4.util.TimeUtils        (be.brunoparmentier.apkshare.eval_ha)
===============================================================================
  b        public static formatDuration(long,java.io.PrintWriter)
  d        private static accumField(int,int,boolean,int)
  d        private static formatDurationLocked(long,int)
  eval_e   public static formatDuration(long,java.lang.StringBuilder)
  l        public static formatDuration(long,long,java.io.PrintWriter)
  u        private static printField(char[],int,char,int,boolean,int)
  z        public static formatDuration(long,java.io.PrintWriter,int)

android.support.v4.util.TimeUtils$IOException    (be.brunoparmentier.apkshare.eval_xp)
===============================================================================
  No methods

android.support.v4.view.AccessibilityDelegateCompat      (be.brunoparmentier.apkshare.eval_y8)
===============================================================================
  d    public dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  e    getBridge()
  g    public onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
  j    public performAccessibilityAction(android.view.View,int,android.os.Bundle)
  m    public getAccessibilityNodeProvider(android.view.View)
  n    public onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  p    public sendAccessibilityEvent(android.view.View,int)
  u    public onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  v    public sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
  z    public onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)

android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl (be.brunoparmentier.apkshare.eval_y8$h)
===============================================================================
  d    public newAccessiblityDelegateDefaultImpl()
  h    public onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
  i    public onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  j    public sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
  k    public onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
  l    public newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat)
  r    public onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
  s    public dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
  t    public sendAccessibilityEvent(java.lang.Object,android.view.View,int)

android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1       (be.brunoparmentier.apkshare.eval_y8$h$1)
===============================================================================
  f    public onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
  j    public dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  t    public sendAccessibilityEvent(android.view.View,int)
  u    public onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object)
  w    public onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  x    public sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
  y    public onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)

android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$NullPointerException    (be.brunoparmentier.apkshare.eval__l)
===============================================================================
  No methods

android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl    (be.brunoparmentier.apkshare.eval_y8$a)
===============================================================================
  d    public abstract newAccessiblityDelegateDefaultImpl()
  e    public abstract getAccessibilityNodeProvider(java.lang.Object,android.view.View)
  h    public abstract performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle)
  h    public abstract onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
  i    public abstract onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  j    public abstract sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
  k    public abstract onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
  l    public abstract newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat)
  r    public abstract onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
  s    public abstract dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
  t    public abstract sendAccessibilityEvent(java.lang.Object,android.view.View,int)

android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl   (be.brunoparmentier.apkshare.eval_y8$f)
===============================================================================
  e    public getAccessibilityNodeProvider(java.lang.Object,android.view.View)
  h    public performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle)
  l    public newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat)

android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 (be.brunoparmentier.apkshare.eval_y8$f$1)
===============================================================================
  eval_h   public sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
  f        public getAccessibilityNodeProvider(android.view.View)
  f        public onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
  g        public onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  k        public performAccessibilityAction(android.view.View,int,android.os.Bundle)
  u        public onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  w        public sendAccessibilityEvent(android.view.View,int)
  x        public onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object)
  y        public dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)

android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$ArrayOutOfBoundsException (be.brunoparmentier.apkshare.eval_pk)
===============================================================================
  No methods

android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl        (be.brunoparmentier.apkshare.eval_y8$i)
===============================================================================
  d    public newAccessiblityDelegateDefaultImpl()
  e    public getAccessibilityNodeProvider(java.lang.Object,android.view.View)
  h    public performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle)
  h    public onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
  i    public onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  j    public sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
  k    public onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
  l    public newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat)
  r    public onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
  s    public dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
  t    public sendAccessibilityEvent(java.lang.Object,android.view.View,int)

android.support.v4.view.AccessibilityDelegateCompat$ArrayOutOfBoundsException    (be.brunoparmentier.apkshare.eval_ar)
===============================================================================
  No methods

android.support.v4.view.AccessibilityDelegateCompatIcs   (be.brunoparmentier.apkshare.eval_cs)
===============================================================================
  eval_i   public static onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
  eval_l   public static sendAccessibilityEvent(java.lang.Object,android.view.View,int)
  h        public static onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
  k        public static onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
  t        public static dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
  u        public static newAccessibilityDelegateDefaultImpl()
  w        public static sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
  y        public static onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object)
  z        public static newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge)

android.support.v4.view.AccessibilityDelegateCompatIcs$1 (be.brunoparmentier.apkshare.eval_cs$1)
===============================================================================
  dispatchPopulateAccessibilityEvent   public dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  onInitializeAccessibilityEvent   public onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  onInitializeAccessibilityNodeInfo    public onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)
  onPopulateAccessibilityEvent     public onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  onRequestSendAccessibilityEvent  public onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
  sendAccessibilityEvent           public sendAccessibilityEvent(android.view.View,int)
  sendAccessibilityEventUnchecked  public sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)

android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge       (be.brunoparmentier.apkshare.eval_cs$r)
===============================================================================
  f    public abstract onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
  j    public abstract dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  t    public abstract sendAccessibilityEvent(android.view.View,int)
  u    public abstract onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object)
  w    public abstract onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  x    public abstract sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
  y    public abstract onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)

android.support.v4.view.AccessibilityDelegateCompatIcs$Exception (be.brunoparmentier.apkshare.eval_l5)
===============================================================================
  No methods

android.support.v4.view.AccessibilityDelegateCompatJellyBean     (be.brunoparmentier.apkshare.eval_xa)
===============================================================================
  c    public static newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean)
  m    public static getAccessibilityNodeProvider(java.lang.Object,android.view.View)
  n    public static performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle)

android.support.v4.view.AccessibilityDelegateCompatJellyBean$1   (be.brunoparmentier.apkshare.eval_xa$1)
===============================================================================
  dispatchPopulateAccessibilityEvent   public dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  getAccessibilityNodeProvider     public getAccessibilityNodeProvider(android.view.View)
  onInitializeAccessibilityEvent   public onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  onInitializeAccessibilityNodeInfo    public onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)
  onPopulateAccessibilityEvent     public onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  onRequestSendAccessibilityEvent  public onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
  performAccessibilityAction       public performAccessibilityAction(android.view.View,int,android.os.Bundle)
  sendAccessibilityEvent           public sendAccessibilityEvent(android.view.View,int)
  sendAccessibilityEventUnchecked  public sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)

android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean        (be.brunoparmentier.apkshare.eval_xa$v)
===============================================================================
  eval_h   public abstract sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
  f        public abstract getAccessibilityNodeProvider(android.view.View)
  f        public abstract onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
  g        public abstract onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  k        public abstract performAccessibilityAction(android.view.View,int,android.os.Bundle)
  u        public abstract onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  w        public abstract sendAccessibilityEvent(android.view.View,int)
  x        public abstract onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object)
  y        public abstract dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)

android.support.v4.view.AccessibilityDelegateCompatJellyBean$NullPointerException        (be.brunoparmentier.apkshare.eval_ra)
===============================================================================
  No methods

android.support.v4.view.ActionProvider   (be.brunoparmentier.apkshare.eval_we)
===============================================================================
  c        public getContext()
  e        public onPrepareSubMenu(android.view.SubMenu)
  eval__   public hasSubMenu()
  g        public onPerformDefaultAction()
  h        public setSubUiVisibilityListener(android.support.v4.view.ActionProvider$SubUiVisibilityListener)
  k        public refreshVisibility()
  o        public subUiVisibilityChanged(boolean)
  p        public onCreateActionView(android.view.MenuItem)
  q        public abstract onCreateActionView()
  u        public isVisible()
  w        public overridesItemVisibility()
  x        public setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener)

android.support.v4.view.ActionProvider$IOException       (be.brunoparmentier.apkshare.eval_pa)
===============================================================================
  No methods

android.support.v4.view.ActionProvider$SubUiVisibilityListener   (be.brunoparmentier.apkshare.eval_we$q)
===============================================================================
  eval_l   public abstract onSubUiVisibilityChanged(boolean)

android.support.v4.view.ActionProvider$VisibilityListener        (be.brunoparmentier.apkshare.eval_we$t)
===============================================================================
  n    public abstract onActionProviderVisibilityChanged(boolean)

android.support.v4.view.GestureDetectorCompat    (be.brunoparmentier.apkshare.eval_mp)
===============================================================================
  f    public isLongpressEnabled()
  i    public setIsLongpressEnabled(boolean)
  m    public onTouchEvent(android.view.MotionEvent)
  q    public setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)

android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl  (be.brunoparmentier.apkshare.eval_mp$k)
===============================================================================
  b    public abstract setIsLongpressEnabled(boolean)
  l    public abstract onTouchEvent(android.view.MotionEvent)
  v    public abstract setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)
  y    public abstract isLongpressEnabled()

android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase      (be.brunoparmentier.apkshare.eval_mp$o)
===============================================================================
  a        private init(android.content.Context)
  a        static access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase)
  b        public setIsLongpressEnabled(boolean)
  d        private cancel()
  eval_m   static access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase)
  k        private cancelTaps()
  l        public onTouchEvent(android.view.MotionEvent)
  m        private dispatchLongPress()
  m        static access$502(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase,boolean)
  n        static access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase)
  p        private isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent)
  s        static access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase)
  u        static access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase)
  v        public setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)
  y        public isLongpressEnabled()

android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler       (be.brunoparmentier.apkshare.eval_mp$o$g)
===============================================================================
  handleMessage    public handleMessage(android.os.Message)

android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$NullPointerException (be.brunoparmentier.apkshare.eval_au)
===============================================================================
  No methods

android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2      (be.brunoparmentier.apkshare.eval_mp$s)
===============================================================================
  b    public setIsLongpressEnabled(boolean)
  l    public onTouchEvent(android.view.MotionEvent)
  v    public setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)
  y    public isLongpressEnabled()

android.support.v4.view.GestureDetectorCompat$NullPointerException       (be.brunoparmentier.apkshare.eval_dp)
===============================================================================
  No methods

android.support.v4.view.GravityCompat    (be.brunoparmentier.apkshare.eval_ga)
===============================================================================
  c    public static getAbsoluteGravity(int,int)
  c    public static apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)
  n    public static applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)
  n    public static apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)

android.support.v4.view.GravityCompat$GravityCompatImpl  (be.brunoparmentier.apkshare.eval_ga$c)
===============================================================================
  d    public abstract apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)
  i    public abstract applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)
  l    public abstract getAbsoluteGravity(int,int)
  l    public abstract apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)

android.support.v4.view.GravityCompat$GravityCompatImplBase      (be.brunoparmentier.apkshare.eval_ga$u)
===============================================================================
  d    public apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)
  i    public applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)
  l    public getAbsoluteGravity(int,int)
  l    public apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)

android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1      (be.brunoparmentier.apkshare.eval_ga$f)
===============================================================================
  d    public apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)
  i    public applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)
  l    public getAbsoluteGravity(int,int)
  l    public apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)

android.support.v4.view.GravityCompat$ParseException     (be.brunoparmentier.apkshare.eval_fy)
===============================================================================
  No methods

android.support.v4.view.GravityCompatJellybeanMr1        (be.brunoparmentier.apkshare.eval_xj)
===============================================================================
  a    public static apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)
  h    public static applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)
  h    public static apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)
  p    public static getAbsoluteGravity(int,int)

android.support.v4.view.GravityCompatJellybeanMr1$Exception      (be.brunoparmentier.apkshare.eval_s_)
===============================================================================
  No methods

android.support.v4.view.InputDeviceCompat        (be.brunoparmentier.apkshare.eval_eg)
===============================================================================
  No methods

android.support.v4.view.InputDeviceCompat$ArrayOutOfBoundsException      (be.brunoparmentier.apkshare.eval_ie)
===============================================================================
  No methods

android.support.v4.view.KeyEventCompat   (be.brunoparmentier.apkshare.eval_gk)
===============================================================================
  d    public static hasNoModifiers(android.view.KeyEvent)
  h    public static hasModifiers(android.view.KeyEvent,int)
  j    public static dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object)
  o    public static getKeyDispatcherState(android.view.View)
  p    public static startTracking(android.view.KeyEvent)
  s    public static metaStateHasNoModifiers(int)
  y    public static isTracking(android.view.KeyEvent)
  y    public static metaStateHasModifiers(int,int)
  z    public static normalizeMetaState(int)

android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl   (be.brunoparmentier.apkshare.eval_gk$v)
===============================================================================
  e    public normalizeMetaState(int)
  g    public dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object)
  j    public metaStateHasNoModifiers(int)
  q    public startTracking(android.view.KeyEvent)
  r    private static metaStateFilterDirectionalModifiers(int,int,int,int,int)
  s    public isTracking(android.view.KeyEvent)
  y    public metaStateHasModifiers(int,int)
  z    public getKeyDispatcherState(android.view.View)

android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl (be.brunoparmentier.apkshare.eval_gk$eval_j)
===============================================================================
  g    public dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object)
  q    public startTracking(android.view.KeyEvent)
  s    public isTracking(android.view.KeyEvent)
  z    public getKeyDispatcherState(android.view.View)

android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl      (be.brunoparmentier.apkshare.eval_gk$a)
===============================================================================
  e    public normalizeMetaState(int)
  j    public metaStateHasNoModifiers(int)
  y    public metaStateHasModifiers(int,int)

android.support.v4.view.KeyEventCompat$IOException       (be.brunoparmentier.apkshare.eval_vu)
===============================================================================
  No methods

android.support.v4.view.KeyEventCompat$KeyEventVersionImpl       (be.brunoparmentier.apkshare.eval_gk$i)
===============================================================================
  e    public abstract normalizeMetaState(int)
  g    public abstract dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object)
  j    public abstract metaStateHasNoModifiers(int)
  q    public abstract startTracking(android.view.KeyEvent)
  s    public abstract isTracking(android.view.KeyEvent)
  y    public abstract metaStateHasModifiers(int,int)
  z    public abstract getKeyDispatcherState(android.view.View)

android.support.v4.view.KeyEventCompatEclair     (be.brunoparmentier.apkshare.eval_a6)
===============================================================================
  a    public static dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object)
  d    public static isTracking(android.view.KeyEvent)
  k    public static startTracking(android.view.KeyEvent)
  n    public static getKeyDispatcherState(android.view.View)

android.support.v4.view.KeyEventCompatEclair$Exception   (be.brunoparmentier.apkshare.eval_r4)
===============================================================================
  No methods

android.support.v4.view.KeyEventCompatHoneycomb  (be.brunoparmentier.apkshare.eval_gj)
===============================================================================
  e    public static metaStateHasModifiers(int,int)
  v    public static normalizeMetaState(int)
  z    public static metaStateHasNoModifiers(int)

android.support.v4.view.KeyEventCompatHoneycomb$ParseException   (be.brunoparmentier.apkshare.eval_yk)
===============================================================================
  No methods

android.support.v4.view.LayoutInflaterCompat     (be.brunoparmentier.apkshare.eval_b6)
===============================================================================
  d    public static setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory)

android.support.v4.view.LayoutInflaterCompat$Exception   (be.brunoparmentier.apkshare.eval_wq)
===============================================================================
  No methods

android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImpl    (be.brunoparmentier.apkshare.eval_b6$w)
===============================================================================
  z    public abstract setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory)

android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplBase        (be.brunoparmentier.apkshare.eval_b6$k)
===============================================================================
  z    public setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory)

android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV11 (be.brunoparmentier.apkshare.eval_b6$_)
===============================================================================
  z    public setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory)

android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV21 (be.brunoparmentier.apkshare.eval_b6$m)
===============================================================================
  z    public setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory)

android.support.v4.view.LayoutInflaterCompatBase (be.brunoparmentier.apkshare.eval_l2)
===============================================================================
  q    static setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory)

android.support.v4.view.LayoutInflaterCompatBase$FactoryWrapper  (be.brunoparmentier.apkshare.eval_l2$i)
===============================================================================
  onCreateView public onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
  toString     public toString()

android.support.v4.view.LayoutInflaterCompatBase$IOException     (be.brunoparmentier.apkshare.eval_qf)
===============================================================================
  No methods

android.support.v4.view.LayoutInflaterCompatHC   (be.brunoparmentier.apkshare.eval_d6)
===============================================================================
  u    static setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory)
  z    static forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)

android.support.v4.view.LayoutInflaterCompatHC$ArrayOutOfBoundsException (be.brunoparmentier.apkshare.eval_ln)
===============================================================================
  No methods

android.support.v4.view.LayoutInflaterCompatHC$FactoryWrapperHC  (be.brunoparmentier.apkshare.eval_d6$e)
===============================================================================
  onCreateView public onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)

android.support.v4.view.LayoutInflaterCompatLollipop     (be.brunoparmentier.apkshare.eval_u7)
===============================================================================
  x    static setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory)

android.support.v4.view.LayoutInflaterCompatLollipop$ParseException      (be.brunoparmentier.apkshare.eval_cd)
===============================================================================
  No methods

android.support.v4.view.LayoutInflaterFactory    (be.brunoparmentier.apkshare.eval_ov)
===============================================================================
  s    public abstract onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)

android.support.v4.view.LayoutInflaterFactory$NullPointerException       (be.brunoparmentier.apkshare.eval_uu)
===============================================================================
  No methods

android.support.v4.view.MarginLayoutParamsCompat (be.brunoparmentier.apkshare.eval_ju)
===============================================================================
  a        public static setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)
  eval_o   public static resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
  f        public static getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
  k        public static setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
  l        public static getMarginStart(android.view.ViewGroup$MarginLayoutParams)
  t        public static setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
  u        public static isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
  v        public static getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)

android.support.v4.view.MarginLayoutParamsCompat$IOException     (be.brunoparmentier.apkshare.eval_u6)
===============================================================================
  No methods

android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl    (be.brunoparmentier.apkshare.eval_ju$g)
===============================================================================
  f    public abstract isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
  k    public abstract getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
  l    public abstract setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
  m    public abstract resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
  s    public abstract getMarginStart(android.view.ViewGroup$MarginLayoutParams)
  t    public abstract getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
  v    public abstract setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
  z    public abstract setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)

android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase        (be.brunoparmentier.apkshare.eval_ju$j)
===============================================================================
  f    public isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
  k    public getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
  l    public setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
  m    public resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
  s    public getMarginStart(android.view.ViewGroup$MarginLayoutParams)
  t    public getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
  v    public setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
  z    public setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)

android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1       (be.brunoparmentier.apkshare.eval_ju$f)
===============================================================================
  f    public isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
  k    public getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
  l    public setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
  m    public resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
  s    public getMarginStart(android.view.ViewGroup$MarginLayoutParams)
  t    public getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
  v    public setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
  z    public setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)

android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1     (be.brunoparmentier.apkshare.eval_ml)
===============================================================================
  b        public static setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)
  eval_k   public static isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
  j        public static setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
  s        public static setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
  t        public static getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
  w        public static getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
  x        public static getMarginStart(android.view.ViewGroup$MarginLayoutParams)
  z        public static resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)

android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1$NullPointerException        (be.brunoparmentier.apkshare.eval_z5)
===============================================================================
  No methods

android.support.v4.view.MenuCompat       (be.brunoparmentier.apkshare.eval_j9)
===============================================================================
  i    public static setShowAsAction(android.view.MenuItem,int)

android.support.v4.view.MenuCompat$Exception     (be.brunoparmentier.apkshare.eval_fl)
===============================================================================
  No methods

android.support.v4.view.MenuItemCompat   (be.brunoparmentier.apkshare.eval_se)
===============================================================================
  d        public static collapseActionView(android.view.MenuItem)
  d        public static setActionView(android.view.MenuItem,android.view.View)
  eval_s   public static getActionProvider(android.view.MenuItem)
  eval_z   public static setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener)
  h        public static setActionView(android.view.MenuItem,int)
  i        public static expandActionView(android.view.MenuItem)
  l        public static getActionView(android.view.MenuItem)
  v        public static setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider)
  y        public static isActionViewExpanded(android.view.MenuItem)
  y        public static setShowAsAction(android.view.MenuItem,int)

android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl       (be.brunoparmentier.apkshare.eval_se$s)
===============================================================================
  d        public setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener)
  eval_i   public expandActionView(android.view.MenuItem)
  j        public getActionView(android.view.MenuItem)
  o        public isActionViewExpanded(android.view.MenuItem)
  o        public setActionView(android.view.MenuItem,int)
  p        public collapseActionView(android.view.MenuItem)
  r        public setShowAsAction(android.view.MenuItem,int)
  y        public setActionView(android.view.MenuItem,android.view.View)

android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl  (be.brunoparmentier.apkshare.eval_se$b)
===============================================================================
  d        public setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener)
  eval_i   public expandActionView(android.view.MenuItem)
  j        public getActionView(android.view.MenuItem)
  o        public isActionViewExpanded(android.view.MenuItem)
  o        public setActionView(android.view.MenuItem,int)
  p        public collapseActionView(android.view.MenuItem)
  r        public setShowAsAction(android.view.MenuItem,int)
  y        public setActionView(android.view.MenuItem,android.view.View)

android.support.v4.view.MenuItemCompat$IOException       (be.brunoparmentier.apkshare.eval_yg)
===============================================================================
  No methods

android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl        (be.brunoparmentier.apkshare.eval_se$u)
===============================================================================
  d        public setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener)
  eval_i   public expandActionView(android.view.MenuItem)
  o        public isActionViewExpanded(android.view.MenuItem)
  p        public collapseActionView(android.view.MenuItem)

android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1      (be.brunoparmentier.apkshare.eval_se$u$1)
===============================================================================
  p    public onMenuItemActionCollapse(android.view.MenuItem)
  y    public onMenuItemActionExpand(android.view.MenuItem)

android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$ParseException (be.brunoparmentier.apkshare.eval_zo)
===============================================================================
  No methods

android.support.v4.view.MenuItemCompat$MenuVersionImpl   (be.brunoparmentier.apkshare.eval_se$f)
===============================================================================
  d        public abstract setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener)
  eval_i   public abstract expandActionView(android.view.MenuItem)
  j        public abstract getActionView(android.view.MenuItem)
  o        public abstract isActionViewExpanded(android.view.MenuItem)
  o        public abstract setActionView(android.view.MenuItem,int)
  p        public abstract collapseActionView(android.view.MenuItem)
  r        public abstract setShowAsAction(android.view.MenuItem,int)
  y        public abstract setActionView(android.view.MenuItem,android.view.View)

android.support.v4.view.MenuItemCompat$OnActionExpandListener    (be.brunoparmentier.apkshare.eval_se$r)
===============================================================================
  e    public abstract onMenuItemActionCollapse(android.view.MenuItem)
  g    public abstract onMenuItemActionExpand(android.view.MenuItem)

android.support.v4.view.MenuItemCompatHoneycomb  (be.brunoparmentier.apkshare.eval_w4)
===============================================================================
  d        public static setActionView(android.view.MenuItem,int)
  eval_c   public static setShowAsAction(android.view.MenuItem,int)
  s        public static getActionView(android.view.MenuItem)
  s        public static setActionView(android.view.MenuItem,android.view.View)

android.support.v4.view.MenuItemCompatHoneycomb$ParseException   (be.brunoparmentier.apkshare.eval_n3)
===============================================================================
  No methods

android.support.v4.view.MenuItemCompatIcs        (be.brunoparmentier.apkshare.eval_az)
===============================================================================
  k    public static collapseActionView(android.view.MenuItem)
  r    public static isActionViewExpanded(android.view.MenuItem)
  v    public static setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy)
  x    public static expandActionView(android.view.MenuItem)

android.support.v4.view.MenuItemCompatIcs$ArrayOutOfBoundsException      (be.brunoparmentier.apkshare.eval_fc)
===============================================================================
  No methods

android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper  (be.brunoparmentier.apkshare.eval_az$_)
===============================================================================
  onMenuItemActionCollapse public onMenuItemActionCollapse(android.view.MenuItem)
  onMenuItemActionExpand   public onMenuItemActionExpand(android.view.MenuItem)

android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy       (be.brunoparmentier.apkshare.eval_az$v)
===============================================================================
  p    public abstract onMenuItemActionCollapse(android.view.MenuItem)
  y    public abstract onMenuItemActionExpand(android.view.MenuItem)

android.support.v4.view.MotionEventCompat        (be.brunoparmentier.apkshare.eval_mo)
===============================================================================
  c        public static findPointerIndex(android.view.MotionEvent,int)
  d        public static getPointerId(android.view.MotionEvent,int)
  eval__   public static getSource(android.view.MotionEvent)
  m        public static getY(android.view.MotionEvent,int)
  o        public static getAxisValue(android.view.MotionEvent,int,int)
  q        public static getPointerCount(android.view.MotionEvent)
  s        public static getActionIndex(android.view.MotionEvent)
  u        public static getAxisValue(android.view.MotionEvent,int)
  x        public static getX(android.view.MotionEvent,int)
  z        public static getActionMasked(android.view.MotionEvent)

android.support.v4.view.MotionEventCompat$ArrayOutOfBoundsException      (be.brunoparmentier.apkshare.eval_mf)
===============================================================================
  No methods

android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl     (be.brunoparmentier.apkshare.eval_mo$_)
===============================================================================
  d        public getY(android.view.MotionEvent,int)
  e        public getPointerCount(android.view.MotionEvent)
  e        public getAxisValue(android.view.MotionEvent,int,int)
  eval_a   public getSource(android.view.MotionEvent)
  j        public getX(android.view.MotionEvent,int)
  k        public getAxisValue(android.view.MotionEvent,int)
  n        public findPointerIndex(android.view.MotionEvent,int)
  s        public getPointerId(android.view.MotionEvent,int)

android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl   (be.brunoparmentier.apkshare.eval_mo$a)
===============================================================================
  d    public getY(android.view.MotionEvent,int)
  e    public getPointerCount(android.view.MotionEvent)
  j    public getX(android.view.MotionEvent,int)
  n    public findPointerIndex(android.view.MotionEvent,int)
  s    public getPointerId(android.view.MotionEvent,int)

android.support.v4.view.MotionEventCompat$GingerbreadMotionEventVersionImpl      (be.brunoparmentier.apkshare.eval_mo$o)
===============================================================================
  eval_a   public getSource(android.view.MotionEvent)

android.support.v4.view.MotionEventCompat$HoneycombMr1MotionEventVersionImpl     (be.brunoparmentier.apkshare.eval_mo$u)
===============================================================================
  e    public getAxisValue(android.view.MotionEvent,int,int)
  k    public getAxisValue(android.view.MotionEvent,int)

android.support.v4.view.MotionEventCompat$MotionEventVersionImpl (be.brunoparmentier.apkshare.eval_mo$p)
===============================================================================
  d        public abstract getY(android.view.MotionEvent,int)
  e        public abstract getPointerCount(android.view.MotionEvent)
  e        public abstract getAxisValue(android.view.MotionEvent,int,int)
  eval_a   public abstract getSource(android.view.MotionEvent)
  j        public abstract getX(android.view.MotionEvent,int)
  k        public abstract getAxisValue(android.view.MotionEvent,int)
  n        public abstract findPointerIndex(android.view.MotionEvent,int)
  s        public abstract getPointerId(android.view.MotionEvent,int)

android.support.v4.view.MotionEventCompatEclair  (be.brunoparmentier.apkshare.eval_iq)
===============================================================================
  a    public static getPointerId(android.view.MotionEvent,int)
  b    public static getPointerCount(android.view.MotionEvent)
  g    public static findPointerIndex(android.view.MotionEvent,int)
  p    public static getX(android.view.MotionEvent,int)
  s    public static getY(android.view.MotionEvent,int)

android.support.v4.view.MotionEventCompatEclair$ParseException   (be.brunoparmentier.apkshare.eval_r3)
===============================================================================
  No methods

android.support.v4.view.MotionEventCompatGingerbread     (be.brunoparmentier.apkshare.eval_kp)
===============================================================================
  o    public static getSource(android.view.MotionEvent)

android.support.v4.view.MotionEventCompatGingerbread$ParseException      (be.brunoparmentier.apkshare.eval_so)
===============================================================================
  No methods

android.support.v4.view.MotionEventCompatHoneycombMr1    (be.brunoparmentier.apkshare.eval_ly)
===============================================================================
  e    static getAxisValue(android.view.MotionEvent,int,int)
  k    static getAxisValue(android.view.MotionEvent,int)

android.support.v4.view.MotionEventCompatHoneycombMr1$IOException        (be.brunoparmentier.apkshare.eval_b_)
===============================================================================
  No methods

android.support.v4.view.NestedScrollingChild     (be.brunoparmentier.apkshare.eval_wd)
===============================================================================
  dispatchNestedFling          public abstract dispatchNestedFling(float,float,boolean)
  dispatchNestedPreFling       public abstract dispatchNestedPreFling(float,float)
  dispatchNestedPreScroll      public abstract dispatchNestedPreScroll(int,int,int[],int[])
  dispatchNestedScroll         public abstract dispatchNestedScroll(int,int,int,int,int[])
  hasNestedScrollingParent     public abstract hasNestedScrollingParent()
  isNestedScrollingEnabled     public abstract isNestedScrollingEnabled()
  setNestedScrollingEnabled    public abstract setNestedScrollingEnabled(boolean)
  startNestedScroll            public abstract startNestedScroll(int)
  stopNestedScroll             public abstract stopNestedScroll()

android.support.v4.view.NestedScrollingChild$Exception   (be.brunoparmentier.apkshare.eval_x8)
===============================================================================
  No methods

android.support.v4.view.NestedScrollingChildHelper       (be.brunoparmentier.apkshare.eval_h4)
===============================================================================
  e        public stopNestedScroll()
  eval_k   public setNestedScrollingEnabled(boolean)
  g        public onStopNestedScroll(android.view.View)
  g        public dispatchNestedPreFling(float,float)
  i        public isNestedScrollingEnabled()
  m        public hasNestedScrollingParent()
  m        public startNestedScroll(int)
  m        public dispatchNestedScroll(int,int,int,int,int[])
  p        public dispatchNestedPreScroll(int,int,int[],int[])
  t        public dispatchNestedFling(float,float,boolean)
  u        public onDetachedFromWindow()

android.support.v4.view.NestedScrollingChildHelper$NullPointerException  (be.brunoparmentier.apkshare.eval_b9)
===============================================================================
  No methods

android.support.v4.view.NestedScrollingParent    (be.brunoparmentier.apkshare.eval_qo)
===============================================================================
  getNestedScrollAxes      public abstract getNestedScrollAxes()
  onNestedFling            public abstract onNestedFling(android.view.View,float,float,boolean)
  onNestedPreFling         public abstract onNestedPreFling(android.view.View,float,float)
  onNestedPreScroll        public abstract onNestedPreScroll(android.view.View,int,int,int[])
  onNestedScroll           public abstract onNestedScroll(android.view.View,int,int,int,int)
  onNestedScrollAccepted   public abstract onNestedScrollAccepted(android.view.View,android.view.View,int)
  onStartNestedScroll      public abstract onStartNestedScroll(android.view.View,android.view.View,int)
  onStopNestedScroll       public abstract onStopNestedScroll(android.view.View)

android.support.v4.view.NestedScrollingParent$NullPointerException       (be.brunoparmentier.apkshare.eval_dm)
===============================================================================
  No methods

android.support.v4.view.NestedScrollingParentHelper      (be.brunoparmentier.apkshare.eval_kz)
===============================================================================
  o    public onStopNestedScroll(android.view.View)
  t    public onNestedScrollAccepted(android.view.View,android.view.View,int)
  w    public getNestedScrollAxes()

android.support.v4.view.NestedScrollingParentHelper$ArrayOutOfBoundsException    (be.brunoparmentier.apkshare.eval_yp)
===============================================================================
  No methods

android.support.v4.view.OnApplyWindowInsetsListener      (be.brunoparmentier.apkshare.eval_hn)
===============================================================================
  j    public abstract onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat)

android.support.v4.view.OnApplyWindowInsetsListener$ArrayOutOfBoundsException    (be.brunoparmentier.apkshare.eval_c4)
===============================================================================
  No methods

android.support.v4.view.PagerAdapter     (be.brunoparmentier.apkshare.eval_df)
===============================================================================
  b    public setPrimaryItem(android.view.View,int,java.lang.Object)
  f    public abstract getCount()
  f    public setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)
  g    public registerDataSetObserver(android.database.DataSetObserver)
  g    public instantiateItem(android.view.ViewGroup,int)
  g    public getPageTitle(int)
  k    public startUpdate(android.view.ViewGroup)
  l    public destroyItem(android.view.View,int,java.lang.Object)
  n    public destroyItem(android.view.ViewGroup,int,java.lang.Object)
  p    public restoreState(android.os.Parcelable,java.lang.ClassLoader)
  p    public getItemPosition(java.lang.Object)
  q    public notifyDataSetChanged()
  r    public saveState()
  r    public getPageWidth(int)
  s    public startUpdate(android.view.View)
  s    public instantiateItem(android.view.View,int)
  t    public abstract isViewFromObject(android.view.View,java.lang.Object)
  u    public finishUpdate(android.view.ViewGroup)
  v    public finishUpdate(android.view.View)
  z    public unregisterDataSetObserver(android.database.DataSetObserver)

android.support.v4.view.PagerAdapter$ArrayOutOfBoundsException   (be.brunoparmentier.apkshare.eval_ld)
===============================================================================
  No methods

android.support.v4.view.PagerTabStrip    (be.brunoparmentier.apkshare.eval_ze)
===============================================================================
  d                        public getDrawFullUnderline()
  g                        getMinHeight()
  m                        public setDrawFullUnderline(boolean)
  p                        updateTextPositions(int,float,boolean)
  s                        public setTextSpacing(int)
  x                        public setTabIndicatorColorResource(int)
  z                        public getTabIndicatorColor()
  z                        public setTabIndicatorColor(int)
  onDraw                   protected onDraw(android.graphics.Canvas)
  onTouchEvent             public onTouchEvent(android.view.MotionEvent)
  setBackgroundColor       public setBackgroundColor(int)
  setBackgroundDrawable    public setBackgroundDrawable(android.graphics.drawable.Drawable)
  setBackgroundResource    public setBackgroundResource(int)
  setPadding               public setPadding(int,int,int,int)

android.support.v4.view.PagerTabStrip$1  (be.brunoparmentier.apkshare.eval_ze$1)
===============================================================================
  onClick  public onClick(android.view.View)

android.support.v4.view.PagerTabStrip$2  (be.brunoparmentier.apkshare.eval_ze$2)
===============================================================================
  onClick  public onClick(android.view.View)

android.support.v4.view.PagerTabStrip$ParseException     (be.brunoparmentier.apkshare.eval_e_)
===============================================================================
  No methods

android.support.v4.view.PagerTitleStrip  (be.brunoparmentier.apkshare.eval_vq)
===============================================================================
  b                    private static setSingleLineAllCaps(android.widget.TextView)
  b                    updateText(int,android.support.v4.view.PagerAdapter)
  e                    public setTextSize(int,float)
  g                    getMinHeight()
  g                    static access$100(android.support.v4.view.PagerTitleStrip)
  i                    public getTextSpacing()
  l                    public setGravity(int)
  p                    public setTextColor(int)
  p                    updateTextPositions(int,float,boolean)
  s                    updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter)
  s                    public setTextSpacing(int)
  y                    public setNonPrimaryAlpha(float)
  onAttachedToWindow   protected onAttachedToWindow()
  onDetachedFromWindow protected onDetachedFromWindow()
  onLayout             protected onLayout(boolean,int,int,int,int)
  onMeasure            protected onMeasure(int,int)
  requestLayout        public requestLayout()

android.support.v4.view.PagerTitleStrip$1        (be.brunoparmentier.apkshare.eval_vq$1)
===============================================================================
  No methods

android.support.v4.view.PagerTitleStrip$Exception        (be.brunoparmentier.apkshare.eval_n7)
===============================================================================
  No methods

android.support.v4.view.PagerTitleStrip$PageListener     (be.brunoparmentier.apkshare.eval_vq$_)
===============================================================================
  b            public onPageScrolled(int,float,int)
  f            public onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter)
  v            public onPageScrollStateChanged(int)
  z            public onPageSelected(int)
  onChanged    public onChanged()

android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl      (be.brunoparmentier.apkshare.eval_vq$f)
===============================================================================
  x    public abstract setSingleLineAllCaps(android.widget.TextView)

android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase  (be.brunoparmentier.apkshare.eval_vq$e)
===============================================================================
  x    public setSingleLineAllCaps(android.widget.TextView)

android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs   (be.brunoparmentier.apkshare.eval_vq$y)
===============================================================================
  x    public setSingleLineAllCaps(android.widget.TextView)

android.support.v4.view.PagerTitleStripIcs       (be.brunoparmentier.apkshare.eval__t)
===============================================================================
  m    public static setSingleLineAllCaps(android.widget.TextView)

android.support.v4.view.PagerTitleStripIcs$ParseException        (be.brunoparmentier.apkshare.eval_t3)
===============================================================================
  No methods

android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform    (be.brunoparmentier.apkshare.eval__t$c)
===============================================================================
  getTransformation    public getTransformation(java.lang.CharSequence,android.view.View)

android.support.v4.view.ScaleGestureDetectorCompat       (be.brunoparmentier.apkshare.eval_e0)
===============================================================================
  k    public static isQuickScaleEnabled(java.lang.Object)
  w    public static setQuickScaleEnabled(java.lang.Object,boolean)

android.support.v4.view.ScaleGestureDetectorCompat$1     (be.brunoparmentier.apkshare.eval_e0$1)
===============================================================================
  No methods

android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl  (be.brunoparmentier.apkshare.eval_e0$i)
===============================================================================
  m    public setQuickScaleEnabled(java.lang.Object,boolean)
  x    public isQuickScaleEnabled(java.lang.Object)

android.support.v4.view.ScaleGestureDetectorCompat$NullPointerException  (be.brunoparmentier.apkshare.eval_ob)
===============================================================================
  No methods

android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl  (be.brunoparmentier.apkshare.eval_e0$eval_a)
===============================================================================
  m    public setQuickScaleEnabled(java.lang.Object,boolean)
  x    public isQuickScaleEnabled(java.lang.Object)

android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl      (be.brunoparmentier.apkshare.eval_e0$u)
===============================================================================
  m    public abstract setQuickScaleEnabled(java.lang.Object,boolean)
  x    public abstract isQuickScaleEnabled(java.lang.Object)

android.support.v4.view.ScaleGestureDetectorCompatKitKat (be.brunoparmentier.apkshare.eval_h3)
===============================================================================
  h    public static isQuickScaleEnabled(java.lang.Object)
  i    public static setQuickScaleEnabled(java.lang.Object,boolean)

android.support.v4.view.ScaleGestureDetectorCompatKitKat$ArrayOutOfBoundsException       (be.brunoparmentier.apkshare.eval_tu)
===============================================================================
  No methods

android.support.v4.view.ScrollingView    (be.brunoparmentier.apkshare.eval_tq)
===============================================================================
  computeHorizontalScrollExtent    public abstract computeHorizontalScrollExtent()
  computeHorizontalScrollOffset    public abstract computeHorizontalScrollOffset()
  computeHorizontalScrollRange     public abstract computeHorizontalScrollRange()
  computeVerticalScrollExtent      public abstract computeVerticalScrollExtent()
  computeVerticalScrollOffset      public abstract computeVerticalScrollOffset()
  computeVerticalScrollRange       public abstract computeVerticalScrollRange()

android.support.v4.view.ScrollingView$ParseException     (be.brunoparmentier.apkshare.eval_cw)
===============================================================================
  No methods

android.support.v4.view.TintableBackgroundView   (be.brunoparmentier.apkshare.eval_dc)
===============================================================================
  b    public abstract getSupportBackgroundTintMode()
  r    public abstract getSupportBackgroundTintList()
  r    public abstract setSupportBackgroundTintList(android.content.res.ColorStateList)
  w    public abstract setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)

android.support.v4.view.TintableBackgroundView$ArrayOutOfBoundsException (be.brunoparmentier.apkshare.eval_an)
===============================================================================
  No methods

android.support.v4.view.VelocityTrackerCompat    (be.brunoparmentier.apkshare.eval_y_)
===============================================================================
  c    public static getYVelocity(android.view.VelocityTracker,int)
  t    public static getXVelocity(android.view.VelocityTracker,int)

android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl     (be.brunoparmentier.apkshare.eval_y_$j)
===============================================================================
  a        public getXVelocity(android.view.VelocityTracker,int)
  eval_d   public getYVelocity(android.view.VelocityTracker,int)

android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl        (be.brunoparmentier.apkshare.eval_y_$h)
===============================================================================
  a        public getXVelocity(android.view.VelocityTracker,int)
  eval_d   public getYVelocity(android.view.VelocityTracker,int)

android.support.v4.view.VelocityTrackerCompat$NullPointerException       (be.brunoparmentier.apkshare.eval_hr)
===============================================================================
  No methods

android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl (be.brunoparmentier.apkshare.eval_y_$f)
===============================================================================
  a        public abstract getXVelocity(android.view.VelocityTracker,int)
  eval_d   public abstract getYVelocity(android.view.VelocityTracker,int)

android.support.v4.view.VelocityTrackerCompatHoneycomb   (be.brunoparmentier.apkshare.eval_kk)
===============================================================================
  f    public static getYVelocity(android.view.VelocityTracker,int)
  y    public static getXVelocity(android.view.VelocityTracker,int)

android.support.v4.view.VelocityTrackerCompatHoneycomb$Exception (be.brunoparmentier.apkshare.eval_sm)
===============================================================================
  No methods

android.support.v4.view.ViewCompat       (be.brunoparmentier.apkshare.eval_zc)
===============================================================================
  a        public static getAccessibilityNodeProvider(android.view.View)
  a        public static setY(android.view.View,float)
  b        public static getWindowSystemUiVisibility(android.view.View)
  b        public static setLabelFor(android.view.View,int)
  c        public static hasAccessibilityDelegate(android.view.View)
  c        public static setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
  c        public static canScrollVertically(android.view.View,int)
  d        public static postInvalidateOnAnimation(android.view.View)
  d        public static setHasTransientState(android.view.View,boolean)
  d        public static setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean)
  e        public static setTranslationX(android.view.View,float)
  eval__   public static getTranslationX(android.view.View)
  eval_a   public static getPaddingEnd(android.view.View)
  eval_b   public static hasTransientState(android.view.View)
  eval_b   public static setRotationY(android.view.View,float)
  eval_c   public static dispatchFinishTemporaryDetach(android.view.View)
  eval_d   public static stopNestedScroll(android.view.View)
  eval_e   public static getScaleX(android.view.View)
  eval_f   public static isPaddingRelative(android.view.View)
  eval_f   public static setTranslationZ(android.view.View,float)
  eval_g   public static getMeasuredHeightAndState(android.view.View)
  eval_h   public static hasNestedScrollingParent(android.view.View)
  eval_i   public static getMinimumWidth(android.view.View)
  eval_j   public static getRotationY(android.view.View)
  eval_j   public static setPivotX(android.view.View,float)
  eval_k   public static getMinimumHeight(android.view.View)
  eval_l   public static getLayoutDirection(android.view.View)
  eval_m   public static isNestedScrollingEnabled(android.view.View)
  eval_mq  public static getZ(android.view.View)
  eval_n   public static getBackgroundTintMode(android.view.View)
  eval_o   public static animate(android.view.View)
  eval_p   public static getScaleY(android.view.View)
  eval_p   public static setPaddingRelative(android.view.View,int,int,int,int)
  eval_q   public static getTranslationZ(android.view.View)
  eval_r   public static requestApplyInsets(android.view.View)
  eval_s   public static getPaddingStart(android.view.View)
  eval_s   public static startNestedScroll(android.view.View,int)
  eval_s1  public static isAttachedToWindow(android.view.View)
  eval_t   public static getAccessibilityLiveRegion(android.view.View)
  eval_u   public static getRotation(android.view.View)
  eval_v   public static getPivotX(android.view.View)
  eval_v   public static setElevation(android.view.View,float)
  eval_vg  public static isLaidOut(android.view.View)
  eval_w   public static dispatchStartTemporaryDetach(android.view.View)
  eval_x   public static jumpDrawablesToCurrentState(android.view.View)
  eval_y   public static getTransitionName(android.view.View)
  eval_y   public static postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
  eval_z   public static isOpaque(android.view.View)
  f        public static getPivotY(android.view.View)
  g        public static getTranslationY(android.view.View)
  g        public static setLayerPaint(android.view.View,android.graphics.Paint)
  g        public static onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  g        public static offsetTopAndBottom(android.view.View,int)
  g        public static setLayerType(android.view.View,int,android.graphics.Paint)
  h        public static getAlpha(android.view.View)
  h        public static onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat)
  h        public static setX(android.view.View,float)
  h        public static offsetLeftAndRight(android.view.View,int)
  i        public static getLayerType(android.view.View)
  j        public static setSaveFromParentEnabled(android.view.View,boolean)
  j        public static setPivotY(android.view.View,float)
  k        public static getBackgroundTintList(android.view.View)
  l        public static getParentForAccessibility(android.view.View)
  l        public static setActivated(android.view.View,boolean)
  l        public static dispatchNestedScroll(android.view.View,int,int,int,int,int[])
  l        public static setTransitionName(android.view.View,java.lang.String)
  m        public static getElevation(android.view.View)
  m        public static setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener)
  m        public static onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  m        public static setOverScrollMode(android.view.View,int)
  n        public static getMeasuredState(android.view.View)
  n        public static onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  n        public static resolveSizeAndState(int,int,int)
  o        public static getX(android.view.View)
  o        public static setRotationX(android.view.View,float)
  o        public static dispatchNestedFling(android.view.View,float,float,boolean)
  o        public static dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
  p        public static getMeasuredWidthAndState(android.view.View)
  p        public static setFitsSystemWindows(android.view.View,boolean)
  p        public static setTranslationY(android.view.View,float)
  p        public static dispatchNestedPreFling(android.view.View,float,float)
  p        public static postOnAnimation(android.view.View,java.lang.Runnable)
  q        public static dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat)
  r        public static getY(android.view.View)
  r        public static setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)
  r        public static setAlpha(android.view.View,float)
  s        public static setScaleX(android.view.View,float)
  s        public static setLayoutDirection(android.view.View,int)
  t        public static getImportantForAccessibility(android.view.View)
  t        public static setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
  t        public static canScrollHorizontally(android.view.View,int)
  t        public static postInvalidateOnAnimation(android.view.View,int,int,int,int)
  u        public static getFitsSystemWindows(android.view.View)
  u        public static combineMeasuredStates(int,int)
  v        public static setRotation(android.view.View,float)
  w        public static getOverScrollMode(android.view.View)
  x        public static getRotationX(android.view.View)
  x        public static setNestedScrollingEnabled(android.view.View,boolean)
  x        public static setScaleY(android.view.View,float)
  y        public static setImportantForAccessibility(android.view.View,int)
  z        public static getLabelFor(android.view.View)
  z        public static setAccessibilityLiveRegion(android.view.View,int)
  z        public static performAccessibilityAction(android.view.View,int,android.os.Bundle)

android.support.v4.view.ViewCompat$BaseViewCompatImpl    (be.brunoparmentier.apkshare.eval_zc$f)
===============================================================================
  a        public hasAccessibilityDelegate(android.view.View)
  b        public getOverScrollMode(android.view.View)
  b        public setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
  b        public setSaveFromParentEnabled(android.view.View,boolean)
  b        public setOverScrollMode(android.view.View,int)
  b        public postInvalidateOnAnimation(android.view.View,int,int,int,int)
  c        public onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat)
  c        public setX(android.view.View,float)
  d        private canScrollingViewScrollVertically(android.support.v4.view.ScrollingView,int)
  d        public getAccessibilityLiveRegion(android.view.View)
  d        public setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)
  d        public onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  eval__   public getParentForAccessibility(android.view.View)
  eval__7  public getZ(android.view.View)
  eval__w  public isAttachedToWindow(android.view.View)
  eval_a   public getPaddingEnd(android.view.View)
  eval_b   private bindTempDetach()
  eval_b   public getMinimumWidth(android.view.View)
  eval_c   public getMeasuredHeightAndState(android.view.View)
  eval_d   public animate(android.view.View)
  eval_e   public getLayoutDirection(android.view.View)
  eval_e   public setAccessibilityLiveRegion(android.view.View,int)
  eval_f   public getScaleY(android.view.View)
  eval_f   public setPivotY(android.view.View,float)
  eval_g   public jumpDrawablesToCurrentState(android.view.View)
  eval_g_  public hasNestedScrollingParent(android.view.View)
  eval_h   public getTransitionName(android.view.View)
  eval_i   public getWindowSystemUiVisibility(android.view.View)
  eval_i   public setTranslationZ(android.view.View,float)
  eval_j   public isNestedScrollingEnabled(android.view.View)
  eval_k   public getTranslationX(android.view.View)
  eval_l   public getX(android.view.View)
  eval_m   public getBackgroundTintList(android.view.View)
  eval_n   public getMinimumHeight(android.view.View)
  eval_nk  public stopNestedScroll(android.view.View)
  eval_o   public getRotationX(android.view.View)
  eval_p   public isImportantForAccessibility(android.view.View)
  eval_q   public getLabelFor(android.view.View)
  eval_r   public getTranslationY(android.view.View)
  eval_s   public dispatchFinishTemporaryDetach(android.view.View)
  eval_t   public getFitsSystemWindows(android.view.View)
  eval_u   public getScaleX(android.view.View)
  eval_v   public isOpaque(android.view.View)
  eval_w   public getTranslationZ(android.view.View)
  eval_x   public getBackgroundTintMode(android.view.View)
  eval_xw  public isLaidOut(android.view.View)
  eval_y   public getPaddingStart(android.view.View)
  eval_y   public setScaleX(android.view.View,float)
  eval_z   public getPivotX(android.view.View)
  f        public getImportantForAccessibility(android.view.View)
  f        public setHasTransientState(android.view.View,boolean)
  f        public postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
  g        public getElevation(android.view.View)
  g        public dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
  i        public postInvalidateOnAnimation(android.view.View)
  i        public canScrollVertically(android.view.View,int)
  i        public combineMeasuredStates(int,int)
  j        public setLabelFor(android.view.View,int)
  j        public setPaddingRelative(android.view.View,int,int,int,int)
  k        public requestApplyInsets(android.view.View)
  k        public setFitsSystemWindows(android.view.View,boolean)
  k        public setScaleY(android.view.View,float)
  l        public getY(android.view.View)
  l        public dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat)
  l        public setY(android.view.View,float)
  l        public postOnAnimation(android.view.View,java.lang.Runnable)
  n        public getRotation(android.view.View)
  n        public setRotationX(android.view.View,float)
  o        getFrameTime()
  o        public setAlpha(android.view.View,float)
  o        public canScrollHorizontally(android.view.View,int)
  p        public getAlpha(android.view.View)
  p        public setLayerPaint(android.view.View,android.graphics.Paint)
  p        public setElevation(android.view.View,float)
  q        public hasTransientState(android.view.View)
  q        public setTranslationY(android.view.View,float)
  r        public getMeasuredWidthAndState(android.view.View)
  r        public onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  r        public setNestedScrollingEnabled(android.view.View,boolean)
  s        public getMeasuredState(android.view.View)
  s        public setPivotX(android.view.View,float)
  s        public dispatchNestedScroll(android.view.View,int,int,int,int,int[])
  t        private canScrollingViewScrollHorizontally(android.support.v4.view.ScrollingView,int)
  t        public getLayerType(android.view.View)
  t        public setRotation(android.view.View,float)
  t        public dispatchNestedPreFling(android.view.View,float,float)
  t        public dispatchNestedFling(android.view.View,float,float,boolean)
  u        public startNestedScroll(android.view.View,int)
  u        public setLayerType(android.view.View,int,android.graphics.Paint)
  u        public resolveSizeAndState(int,int,int)
  v        public getAccessibilityNodeProvider(android.view.View)
  v        public setRotationY(android.view.View,float)
  w        public getPivotY(android.view.View)
  w        public setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
  w        public setActivated(android.view.View,boolean)
  w        public setTranslationX(android.view.View,float)
  w        public setTransitionName(android.view.View,java.lang.String)
  w        public setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean)
  x        public dispatchStartTemporaryDetach(android.view.View)
  x        public setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener)
  x        public performAccessibilityAction(android.view.View,int,android.os.Bundle)
  y        public isPaddingRelative(android.view.View)
  y        public onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  y        public setLayoutDirection(android.view.View,int)
  z        public getRotationY(android.view.View)
  z        public setImportantForAccessibility(android.view.View,int)

android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl       (be.brunoparmentier.apkshare.eval_zc$q)
===============================================================================
  eval_v   public isOpaque(android.view.View)
  w        public setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean)

android.support.v4.view.ViewCompat$Exception     (be.brunoparmentier.apkshare.eval_du)
===============================================================================
  No methods

android.support.v4.view.ViewCompat$GBViewCompatImpl      (be.brunoparmentier.apkshare.eval_zc$l)
===============================================================================
  b    public getOverScrollMode(android.view.View)
  b    public setOverScrollMode(android.view.View,int)

android.support.v4.view.ViewCompat$HCViewCompatImpl      (be.brunoparmentier.apkshare.eval_zc$j)
===============================================================================
  b        public setSaveFromParentEnabled(android.view.View,boolean)
  c        public setX(android.view.View,float)
  eval_c   public getMeasuredHeightAndState(android.view.View)
  eval_f   public getScaleY(android.view.View)
  eval_f   public setPivotY(android.view.View,float)
  eval_g   public jumpDrawablesToCurrentState(android.view.View)
  eval_k   public getTranslationX(android.view.View)
  eval_l   public getX(android.view.View)
  eval_o   public getRotationX(android.view.View)
  eval_r   public getTranslationY(android.view.View)
  eval_u   public getScaleX(android.view.View)
  eval_y   public setScaleX(android.view.View,float)
  eval_z   public getPivotX(android.view.View)
  i        public combineMeasuredStates(int,int)
  k        public setScaleY(android.view.View,float)
  l        public getY(android.view.View)
  l        public setY(android.view.View,float)
  n        public getRotation(android.view.View)
  n        public setRotationX(android.view.View,float)
  o        getFrameTime()
  o        public setAlpha(android.view.View,float)
  p        public getAlpha(android.view.View)
  p        public setLayerPaint(android.view.View,android.graphics.Paint)
  q        public setTranslationY(android.view.View,float)
  r        public getMeasuredWidthAndState(android.view.View)
  s        public getMeasuredState(android.view.View)
  s        public setPivotX(android.view.View,float)
  t        public getLayerType(android.view.View)
  t        public setRotation(android.view.View,float)
  u        public setLayerType(android.view.View,int,android.graphics.Paint)
  u        public resolveSizeAndState(int,int,int)
  v        public setRotationY(android.view.View,float)
  w        public getPivotY(android.view.View)
  w        public setActivated(android.view.View,boolean)
  w        public setTranslationX(android.view.View,float)
  z        public getRotationY(android.view.View)

android.support.v4.view.ViewCompat$ICSViewCompatImpl     (be.brunoparmentier.apkshare.eval_zc$s)
===============================================================================
  a        public hasAccessibilityDelegate(android.view.View)
  d        public setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)
  d        public onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  eval_d   public animate(android.view.View)
  i        public canScrollVertically(android.view.View,int)
  k        public setFitsSystemWindows(android.view.View,boolean)
  o        public canScrollHorizontally(android.view.View,int)
  r        public onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  y        public onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)

android.support.v4.view.ViewCompat$JBViewCompatImpl      (be.brunoparmentier.apkshare.eval_zc$p)
===============================================================================
  b        public postInvalidateOnAnimation(android.view.View,int,int,int,int)
  eval__   public getParentForAccessibility(android.view.View)
  eval_b   public getMinimumWidth(android.view.View)
  eval_n   public getMinimumHeight(android.view.View)
  eval_t   public getFitsSystemWindows(android.view.View)
  f        public getImportantForAccessibility(android.view.View)
  f        public setHasTransientState(android.view.View,boolean)
  f        public postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
  i        public postInvalidateOnAnimation(android.view.View)
  k        public requestApplyInsets(android.view.View)
  l        public postOnAnimation(android.view.View,java.lang.Runnable)
  q        public hasTransientState(android.view.View)
  v        public getAccessibilityNodeProvider(android.view.View)
  x        public performAccessibilityAction(android.view.View,int,android.os.Bundle)
  z        public setImportantForAccessibility(android.view.View,int)

android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl   (be.brunoparmentier.apkshare.eval_zc$n)
===============================================================================
  eval_a   public getPaddingEnd(android.view.View)
  eval_e   public getLayoutDirection(android.view.View)
  eval_i   public getWindowSystemUiVisibility(android.view.View)
  eval_q   public getLabelFor(android.view.View)
  eval_y   public getPaddingStart(android.view.View)
  j        public setLabelFor(android.view.View,int)
  j        public setPaddingRelative(android.view.View,int,int,int,int)
  p        public setLayerPaint(android.view.View,android.graphics.Paint)
  y        public isPaddingRelative(android.view.View)
  y        public setLayoutDirection(android.view.View,int)

android.support.v4.view.ViewCompat$KitKatViewCompatImpl  (be.brunoparmentier.apkshare.eval_zc$eval_b)
===============================================================================
  d        public getAccessibilityLiveRegion(android.view.View)
  eval__w  public isAttachedToWindow(android.view.View)
  eval_e   public setAccessibilityLiveRegion(android.view.View,int)
  eval_xw  public isLaidOut(android.view.View)
  z        public setImportantForAccessibility(android.view.View,int)

android.support.v4.view.ViewCompat$LollipopViewCompatImpl        (be.brunoparmentier.apkshare.eval_zc$h)
===============================================================================
  b        public setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
  c        public onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat)
  eval__7  public getZ(android.view.View)
  eval_g_  public hasNestedScrollingParent(android.view.View)
  eval_h   public getTransitionName(android.view.View)
  eval_i   public setTranslationZ(android.view.View,float)
  eval_j   public isNestedScrollingEnabled(android.view.View)
  eval_m   public getBackgroundTintList(android.view.View)
  eval_nk  public stopNestedScroll(android.view.View)
  eval_p   public isImportantForAccessibility(android.view.View)
  eval_w   public getTranslationZ(android.view.View)
  eval_x   public getBackgroundTintMode(android.view.View)
  g        public getElevation(android.view.View)
  g        public dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
  k        public requestApplyInsets(android.view.View)
  l        public dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat)
  p        public setElevation(android.view.View,float)
  r        public setNestedScrollingEnabled(android.view.View,boolean)
  s        public dispatchNestedScroll(android.view.View,int,int,int,int,int[])
  t        public dispatchNestedPreFling(android.view.View,float,float)
  t        public dispatchNestedFling(android.view.View,float,float,boolean)
  u        public startNestedScroll(android.view.View,int)
  w        public setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
  w        public setTransitionName(android.view.View,java.lang.String)
  x        public setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener)

android.support.v4.view.ViewCompat$ViewCompatImpl        (be.brunoparmentier.apkshare.eval_zc$eval_e)
===============================================================================
  a        public abstract hasAccessibilityDelegate(android.view.View)
  b        public abstract getOverScrollMode(android.view.View)
  b        public abstract setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
  b        public abstract setSaveFromParentEnabled(android.view.View,boolean)
  b        public abstract setOverScrollMode(android.view.View,int)
  b        public abstract postInvalidateOnAnimation(android.view.View,int,int,int,int)
  c        public abstract onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat)
  c        public abstract setX(android.view.View,float)
  d        public abstract getAccessibilityLiveRegion(android.view.View)
  d        public abstract setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)
  d        public abstract onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  eval__   public abstract getParentForAccessibility(android.view.View)
  eval__7  public abstract getZ(android.view.View)
  eval__w  public abstract isAttachedToWindow(android.view.View)
  eval_a   public abstract getPaddingEnd(android.view.View)
  eval_b   public abstract getMinimumWidth(android.view.View)
  eval_c   public abstract getMeasuredHeightAndState(android.view.View)
  eval_d   public abstract animate(android.view.View)
  eval_e   public abstract getLayoutDirection(android.view.View)
  eval_e   public abstract setAccessibilityLiveRegion(android.view.View,int)
  eval_f   public abstract getScaleY(android.view.View)
  eval_f   public abstract setPivotY(android.view.View,float)
  eval_g   public abstract jumpDrawablesToCurrentState(android.view.View)
  eval_g_  public abstract hasNestedScrollingParent(android.view.View)
  eval_h   public abstract getTransitionName(android.view.View)
  eval_i   public abstract getWindowSystemUiVisibility(android.view.View)
  eval_i   public abstract setTranslationZ(android.view.View,float)
  eval_j   public abstract isNestedScrollingEnabled(android.view.View)
  eval_k   public abstract getTranslationX(android.view.View)
  eval_l   public abstract getX(android.view.View)
  eval_m   public abstract getBackgroundTintList(android.view.View)
  eval_n   public abstract getMinimumHeight(android.view.View)
  eval_nk  public abstract stopNestedScroll(android.view.View)
  eval_o   public abstract getRotationX(android.view.View)
  eval_p   public abstract isImportantForAccessibility(android.view.View)
  eval_q   public abstract getLabelFor(android.view.View)
  eval_r   public abstract getTranslationY(android.view.View)
  eval_s   public abstract dispatchFinishTemporaryDetach(android.view.View)
  eval_t   public abstract getFitsSystemWindows(android.view.View)
  eval_u   public abstract getScaleX(android.view.View)
  eval_v   public abstract isOpaque(android.view.View)
  eval_w   public abstract getTranslationZ(android.view.View)
  eval_x   public abstract getBackgroundTintMode(android.view.View)
  eval_xw  public abstract isLaidOut(android.view.View)
  eval_y   public abstract getPaddingStart(android.view.View)
  eval_y   public abstract setScaleX(android.view.View,float)
  eval_z   public abstract getPivotX(android.view.View)
  f        public abstract getImportantForAccessibility(android.view.View)
  f        public abstract setHasTransientState(android.view.View,boolean)
  f        public abstract postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
  g        public abstract getElevation(android.view.View)
  g        public abstract dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
  i        public abstract postInvalidateOnAnimation(android.view.View)
  i        public abstract canScrollVertically(android.view.View,int)
  i        public abstract combineMeasuredStates(int,int)
  j        public abstract setLabelFor(android.view.View,int)
  j        public abstract setPaddingRelative(android.view.View,int,int,int,int)
  k        public abstract requestApplyInsets(android.view.View)
  k        public abstract setFitsSystemWindows(android.view.View,boolean)
  k        public abstract setScaleY(android.view.View,float)
  l        public abstract getY(android.view.View)
  l        public abstract dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat)
  l        public abstract setY(android.view.View,float)
  l        public abstract postOnAnimation(android.view.View,java.lang.Runnable)
  n        public abstract getRotation(android.view.View)
  n        public abstract setRotationX(android.view.View,float)
  o        public abstract setAlpha(android.view.View,float)
  o        public abstract canScrollHorizontally(android.view.View,int)
  p        public abstract getAlpha(android.view.View)
  p        public abstract setLayerPaint(android.view.View,android.graphics.Paint)
  p        public abstract setElevation(android.view.View,float)
  q        public abstract hasTransientState(android.view.View)
  q        public abstract setTranslationY(android.view.View,float)
  r        public abstract getMeasuredWidthAndState(android.view.View)
  r        public abstract onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  r        public abstract setNestedScrollingEnabled(android.view.View,boolean)
  s        public abstract getMeasuredState(android.view.View)
  s        public abstract setPivotX(android.view.View,float)
  s        public abstract dispatchNestedScroll(android.view.View,int,int,int,int,int[])
  t        public abstract getLayerType(android.view.View)
  t        public abstract setRotation(android.view.View,float)
  t        public abstract dispatchNestedPreFling(android.view.View,float,float)
  t        public abstract dispatchNestedFling(android.view.View,float,float,boolean)
  u        public abstract startNestedScroll(android.view.View,int)
  u        public abstract setLayerType(android.view.View,int,android.graphics.Paint)
  u        public abstract resolveSizeAndState(int,int,int)
  v        public abstract getAccessibilityNodeProvider(android.view.View)
  v        public abstract setRotationY(android.view.View,float)
  w        public abstract getPivotY(android.view.View)
  w        public abstract setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
  w        public abstract setActivated(android.view.View,boolean)
  w        public abstract setTranslationX(android.view.View,float)
  w        public abstract setTransitionName(android.view.View,java.lang.String)
  w        public abstract setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean)
  x        public abstract dispatchStartTemporaryDetach(android.view.View)
  x        public abstract setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener)
  x        public abstract performAccessibilityAction(android.view.View,int,android.os.Bundle)
  y        public abstract isPaddingRelative(android.view.View)
  y        public abstract onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  y        public abstract setLayoutDirection(android.view.View,int)
  z        public abstract getRotationY(android.view.View)
  z        public abstract setImportantForAccessibility(android.view.View,int)

android.support.v4.view.ViewCompatBase   (be.brunoparmentier.apkshare.eval_ay)
===============================================================================
  d        static getBackgroundTintList(android.view.View)
  d        static setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
  e        static getMinimumHeight(android.view.View)
  eval_u   static getBackgroundTintMode(android.view.View)
  f        static getMinimumWidth(android.view.View)
  q        static isAttachedToWindow(android.view.View)
  t        static setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
  x        static isLaidOut(android.view.View)

android.support.v4.view.ViewCompatBase$IOException       (be.brunoparmentier.apkshare.eval_kt)
===============================================================================
  No methods

android.support.v4.view.ViewCompatEclairMr1      (be.brunoparmentier.apkshare.eval_h2)
===============================================================================
  e        public static isOpaque(android.view.View)
  eval_q   public static setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean)

android.support.v4.view.ViewCompatEclairMr1$IOException  (be.brunoparmentier.apkshare.eval_d2)
===============================================================================
  No methods

android.support.v4.view.ViewCompatGingerbread    (be.brunoparmentier.apkshare.eval_be)
===============================================================================
  j    public static getOverScrollMode(android.view.View)
  r    public static setOverScrollMode(android.view.View,int)

android.support.v4.view.ViewCompatGingerbread$NullPointerException       (be.brunoparmentier.apkshare.eval_w0)
===============================================================================
  No methods

android.support.v4.view.ViewCompatHC     (be.brunoparmentier.apkshare.eval_l1)
===============================================================================
  a        public static getScaleX(android.view.View)
  a        public static setRotation(android.view.View,float)
  b        public static setPivotY(android.view.View,float)
  c        public static getRotationY(android.view.View)
  d        static getFrameTime()
  d        public static getAlpha(android.view.View)
  e        public static setY(android.view.View,float)
  eval_c   public static getPivotX(android.view.View)
  eval_n   public static setPivotX(android.view.View,float)
  eval_o   public static getPivotY(android.view.View)
  eval_p   public static jumpDrawablesToCurrentState(android.view.View)
  eval_r   public static getScaleY(android.view.View)
  f        public static getLayerType(android.view.View)
  f        public static setAlpha(android.view.View,float)
  f        public static resolveSizeAndState(int,int,int)
  h        public static setX(android.view.View,float)
  i        public static getTranslationY(android.view.View)
  i        public static setTranslationX(android.view.View,float)
  j        public static setSaveFromParentEnabled(android.view.View,boolean)
  k        public static setScaleY(android.view.View,float)
  l        public static combineMeasuredStates(int,int)
  m        public static getRotationX(android.view.View)
  m        public static setTranslationY(android.view.View,float)
  o        public static getY(android.view.View)
  p        public static getX(android.view.View)
  t        public static setActivated(android.view.View,boolean)
  t        public static setRotationX(android.view.View,float)
  u        public static getMeasuredHeightAndState(android.view.View)
  v        public static getMeasuredWidthAndState(android.view.View)
  w        public static getRotation(android.view.View)
  x        public static getTranslationX(android.view.View)
  x        public static setLayerType(android.view.View,int,android.graphics.Paint)
  y        public static getMeasuredState(android.view.View)
  y        public static setRotationY(android.view.View,float)
  z        public static setScaleX(android.view.View,float)

android.support.v4.view.ViewCompatHC$ArrayOutOfBoundsException   (be.brunoparmentier.apkshare.eval_yx)
===============================================================================
  No methods

android.support.v4.view.ViewCompatICS    (be.brunoparmentier.apkshare.eval_tz)
===============================================================================
  a    public static canScrollHorizontally(android.view.View,int)
  b    public static onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  e    public static canScrollVertically(android.view.View,int)
  i    public static onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object)
  k    public static setAccessibilityDelegate(android.view.View,java.lang.Object)
  n    public static setFitsSystemWindows(android.view.View,boolean)
  q    public static onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)

android.support.v4.view.ViewCompatICS$ParseException     (be.brunoparmentier.apkshare.eval_wb)
===============================================================================
  No methods

android.support.v4.view.ViewCompatJB     (be.brunoparmentier.apkshare.eval_p4)
===============================================================================
  b        public static postInvalidateOnAnimation(android.view.View)
  e        public static requestApplyInsets(android.view.View)
  eval_l   public static getParentForAccessibility(android.view.View)
  eval_s   public static getFitsSystemWindows(android.view.View)
  eval_t   public static getAccessibilityNodeProvider(android.view.View)
  eval_x   public static getImportantForAccessibility(android.view.View)
  g        public static getMinimumWidth(android.view.View)
  g        public static postOnAnimation(android.view.View,java.lang.Runnable)
  l        public static performAccessibilityAction(android.view.View,int,android.os.Bundle)
  o        public static setImportantForAccessibility(android.view.View,int)
  o        public static postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
  p        public static hasTransientState(android.view.View)
  p        public static postInvalidateOnAnimation(android.view.View,int,int,int,int)
  t        public static setHasTransientState(android.view.View,boolean)
  v        public static getMinimumHeight(android.view.View)

android.support.v4.view.ViewCompatJB$ArrayOutOfBoundsException   (be.brunoparmentier.apkshare.eval_i7)
===============================================================================
  No methods

android.support.v4.view.ViewCompatJellybeanMr1   (be.brunoparmentier.apkshare.eval_na)
===============================================================================
  a    public static setLabelFor(android.view.View,int)
  b    public static getPaddingStart(android.view.View)
  c    public static getWindowSystemUiVisibility(android.view.View)
  d    public static getLayoutDirection(android.view.View)
  g    public static getLabelFor(android.view.View)
  k    public static setLayerPaint(android.view.View,android.graphics.Paint)
  l    public static getPaddingEnd(android.view.View)
  n    public static setPaddingRelative(android.view.View,int,int,int,int)
  v    public static setLayoutDirection(android.view.View,int)
  y    public static isPaddingRelative(android.view.View)

android.support.v4.view.ViewCompatJellybeanMr1$ArrayOutOfBoundsException (be.brunoparmentier.apkshare.eval_tj)
===============================================================================
  No methods

android.support.v4.view.ViewCompatKitKat (be.brunoparmentier.apkshare.eval_h_)
===============================================================================
  c    public static isAttachedToWindow(android.view.View)
  g    public static isLaidOut(android.view.View)
  m    public static getAccessibilityLiveRegion(android.view.View)
  u    public static setAccessibilityLiveRegion(android.view.View,int)

android.support.v4.view.ViewCompatKitKat$NullPointerException    (be.brunoparmentier.apkshare.eval_ta)
===============================================================================
  No methods

android.support.v4.view.ViewCompatLollipop       (be.brunoparmentier.apkshare.eval_eo)
===============================================================================
  a        public static dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
  c        static getBackgroundTintMode(android.view.View)
  c        public static dispatchNestedScroll(android.view.View,int,int,int,int,int[])
  eval_w   public static hasNestedScrollingParent(android.view.View)
  f        public static onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat)
  f        public static setNestedScrollingEnabled(android.view.View,boolean)
  g        public static isImportantForAccessibility(android.view.View)
  g        static setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
  g        public static dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat)
  j        public static isNestedScrollingEnabled(android.view.View)
  k        public static getZ(android.view.View)
  l        static getBackgroundTintList(android.view.View)
  n        public static requestApplyInsets(android.view.View)
  o        public static setTransitionName(android.view.View,java.lang.String)
  p        public static dispatchNestedPreFling(android.view.View,float,float)
  r        public static stopNestedScroll(android.view.View)
  r        public static dispatchNestedFling(android.view.View,float,float,boolean)
  s        public static setTranslationZ(android.view.View,float)
  t        public static getElevation(android.view.View)
  t        public static setElevation(android.view.View,float)
  u        public static getTranslationZ(android.view.View)
  w        static setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
  x        public static setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener)
  x        public static startNestedScroll(android.view.View,int)
  z        public static getTransitionName(android.view.View)

android.support.v4.view.ViewCompatLollipop$1     (be.brunoparmentier.apkshare.eval_eo$1)
===============================================================================
  onApplyWindowInsets  public onApplyWindowInsets(android.view.View,android.view.WindowInsets)

android.support.v4.view.ViewCompatLollipop$ParseException        (be.brunoparmentier.apkshare.eval_hj)
===============================================================================
  No methods

android.support.v4.view.ViewConfigurationCompat  (be.brunoparmentier.apkshare.eval_qa)
===============================================================================
  a    public static getScaledPagingTouchSlop(android.view.ViewConfiguration)
  m    public static hasPermanentMenuKey(android.view.ViewConfiguration)

android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl (be.brunoparmentier.apkshare.eval_qa$w)
===============================================================================
  q    public getScaledPagingTouchSlop(android.view.ViewConfiguration)
  s    public hasPermanentMenuKey(android.view.ViewConfiguration)

android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl        (be.brunoparmentier.apkshare.eval_qa$k)
===============================================================================
  q    public getScaledPagingTouchSlop(android.view.ViewConfiguration)

android.support.v4.view.ViewConfigurationCompat$HoneycombViewConfigurationVersionImpl    (be.brunoparmentier.apkshare.eval_qa$j)
===============================================================================
  s    public hasPermanentMenuKey(android.view.ViewConfiguration)

android.support.v4.view.ViewConfigurationCompat$IcsViewConfigurationVersionImpl  (be.brunoparmentier.apkshare.eval_qa$y)
===============================================================================
  s    public hasPermanentMenuKey(android.view.ViewConfiguration)

android.support.v4.view.ViewConfigurationCompat$ParseException   (be.brunoparmentier.apkshare.eval_z6)
===============================================================================
  No methods

android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl     (be.brunoparmentier.apkshare.eval_qa$b)
===============================================================================
  q    public abstract getScaledPagingTouchSlop(android.view.ViewConfiguration)
  s    public abstract hasPermanentMenuKey(android.view.ViewConfiguration)

android.support.v4.view.ViewConfigurationCompatFroyo     (be.brunoparmentier.apkshare.eval_qw)
===============================================================================
  c    public static getScaledPagingTouchSlop(android.view.ViewConfiguration)

android.support.v4.view.ViewConfigurationCompatFroyo$ParseException      (be.brunoparmentier.apkshare.eval__i)
===============================================================================
  No methods

android.support.v4.view.ViewConfigurationCompatICS       (be.brunoparmentier.apkshare.eval_jl)
===============================================================================
  k    static hasPermanentMenuKey(android.view.ViewConfiguration)

android.support.v4.view.ViewConfigurationCompatICS$NullPointerException  (be.brunoparmentier.apkshare.eval_fi)
===============================================================================
  No methods

android.support.v4.view.ViewGroupCompat  (be.brunoparmentier.apkshare.eval_ut)
===============================================================================
  a        public static getNestedScrollAxes(android.view.ViewGroup)
  d        public static setMotionEventSplittingEnabled(android.view.ViewGroup,boolean)
  e        public static isTransitionGroup(android.view.ViewGroup)
  eval_q   public static onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
  l        public static getLayoutMode(android.view.ViewGroup)
  q        public static setTransitionGroup(android.view.ViewGroup,boolean)
  x        public static setLayoutMode(android.view.ViewGroup,int)

android.support.v4.view.ViewGroupCompat$Exception        (be.brunoparmentier.apkshare.eval_di)
===============================================================================
  No methods

android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl    (be.brunoparmentier.apkshare.eval_ut$f)
===============================================================================
  eval_z   public setMotionEventSplittingEnabled(android.view.ViewGroup,boolean)

android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl   (be.brunoparmentier.apkshare.eval_ut$eval_e)
===============================================================================
  q    public onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)

android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl      (be.brunoparmentier.apkshare.eval_ut$u)
===============================================================================
  d        public abstract setTransitionGroup(android.view.ViewGroup,boolean)
  eval_z   public abstract setMotionEventSplittingEnabled(android.view.ViewGroup,boolean)
  f        public abstract getNestedScrollAxes(android.view.ViewGroup)
  h        public abstract isTransitionGroup(android.view.ViewGroup)
  q        public abstract onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
  v        public abstract setLayoutMode(android.view.ViewGroup,int)
  z        public abstract getLayoutMode(android.view.ViewGroup)

android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl  (be.brunoparmentier.apkshare.eval_ut$m)
===============================================================================
  v    public setLayoutMode(android.view.ViewGroup,int)
  z    public getLayoutMode(android.view.ViewGroup)

android.support.v4.view.ViewGroupCompat$ViewGroupCompatLollipopImpl      (be.brunoparmentier.apkshare.eval_ut$y)
===============================================================================
  d    public setTransitionGroup(android.view.ViewGroup,boolean)
  f    public getNestedScrollAxes(android.view.ViewGroup)
  h    public isTransitionGroup(android.view.ViewGroup)

android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl  (be.brunoparmentier.apkshare.eval_ut$d)
===============================================================================
  d        public setTransitionGroup(android.view.ViewGroup,boolean)
  eval_z   public setMotionEventSplittingEnabled(android.view.ViewGroup,boolean)
  f        public getNestedScrollAxes(android.view.ViewGroup)
  h        public isTransitionGroup(android.view.ViewGroup)
  q        public onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
  v        public setLayoutMode(android.view.ViewGroup,int)
  z        public getLayoutMode(android.view.ViewGroup)

android.support.v4.view.ViewGroupCompatHC        (be.brunoparmentier.apkshare.eval_kc)
===============================================================================
  a    public static setMotionEventSplittingEnabled(android.view.ViewGroup,boolean)

android.support.v4.view.ViewGroupCompatHC$ArrayOutOfBoundsException      (be.brunoparmentier.apkshare.eval_oi)
===============================================================================
  No methods

android.support.v4.view.ViewGroupCompatIcs       (be.brunoparmentier.apkshare.eval_c_)
===============================================================================
  c    public static onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)

android.support.v4.view.ViewGroupCompatIcs$ParseException        (be.brunoparmentier.apkshare.eval_t_)
===============================================================================
  No methods

android.support.v4.view.ViewGroupCompatJellybeanMR2      (be.brunoparmentier.apkshare.eval_nh)
===============================================================================
  e        public static getLayoutMode(android.view.ViewGroup)
  eval_t   public static setLayoutMode(android.view.ViewGroup,int)

android.support.v4.view.ViewGroupCompatJellybeanMR2$ArrayOutOfBoundsException    (be.brunoparmentier.apkshare.eval_ng)
===============================================================================
  No methods

android.support.v4.view.ViewGroupCompatLollipop  (be.brunoparmentier.apkshare.eval_ah)
===============================================================================
  b    public static isTransitionGroup(android.view.ViewGroup)
  i    public static getNestedScrollAxes(android.view.ViewGroup)
  o    public static setTransitionGroup(android.view.ViewGroup,boolean)

android.support.v4.view.ViewGroupCompatLollipop$ParseException   (be.brunoparmentier.apkshare.eval_ic)
===============================================================================
  No methods

android.support.v4.view.ViewPager        (be.brunoparmentier.apkshare.eval_fb)
===============================================================================
  a                                private onSecondaryPointerUp(android.view.MotionEvent)
  a                                private enableLayers(boolean)
  b                                static access$400()
  b                                private performDrag(float)
  b                                private isGutterDrag(float,float)
  c                                initViewPager()
  c                                setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener)
  d                                private requestParentDisallowInterceptTouchEvent(boolean)
  d                                public setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer)
  d                                smoothScrollTo(int,int)
  e                                pageLeft()
  e                                public setPageMarginDrawable(int)
  e                                addNewItem(int,int)
  eval_c                           public addOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)
  eval_e                           private dispatchOnPageSelected(int)
  eval_g                           private endDrag()
  eval_i                           private sortChildDrawingOrder()
  eval_t                           private setScrollState(int)
  eval_v                           public beginFakeDrag()
  eval_w                           public clearOnPageChangeListeners()
  f                                public removeOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)
  f                                protected onPageScrolled(int,float,int)
  g                                infoForPosition(int)
  g                                private recomputeScrollPosition(int,int,int,int)
  h                                dataSetChanged()
  i                                public endFakeDrag()
  i                                setChildrenDrawingOrderEnabledCompat(boolean)
  j                                private getClientWidth()
  j                                public setPageMarginDrawable(android.graphics.drawable.Drawable)
  j                                static access$200(android.support.v4.view.ViewPager)
  j                                populate(int)
  k                                public setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)
  l                                private getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)
  l                                setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)
  l                                infoForAnyChild(android.view.View)
  l                                protected canScroll(android.view.View,boolean,int,int,int)
  l                                private setScrollingCacheEnabled(boolean)
  l                                private dispatchOnPageScrolled(int,float,int)
  m                                public getAdapter()
  n                                public getOffscreenPageLimit()
  n                                public setCurrentItem(int)
  o                                populate()
  o                                static access$000(android.support.v4.view.ViewPager,int)
  o                                public executeKeyEvent(android.view.KeyEvent)
  p                                pageRight()
  p                                public fakeDragBy(float)
  q                                public getCurrentItem()
  r                                public getPageMargin()
  r                                private completeScroll(boolean)
  r                                private dispatchOnScrollStateChanged(int)
  s                                static access$300(android.support.v4.view.ViewPager)
  s                                infoForChild(android.view.View)
  s                                public setPageMargin(int)
  s                                public setCurrentItem(int,boolean)
  t                                public setAdapter(android.support.v4.view.PagerAdapter)
  u                                public isFakeDragging()
  u                                public setOffscreenPageLimit(int)
  u                                setCurrentItemInternal(int,boolean,boolean)
  v                                private scrollToItem(int,boolean,int,boolean)
  w                                private calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo)
  w                                private determineTargetPage(int,float,int,int)
  x                                public arrowScroll(int)
  x                                smoothScrollTo(int,int,int)
  y                                private infoForCurrentScrollPosition()
  y                                distanceInfluenceForSnapDuration(float)
  y                                private pageScrolled(int)
  y                                setCurrentItemInternal(int,boolean,boolean,int)
  z                                private removeNonDecorViews()
  addFocusables                    public addFocusables(java.util.ArrayList,int,int)
  addTouchables                    public addTouchables(java.util.ArrayList)
  addView                          public addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
  canScrollHorizontally            public canScrollHorizontally(int)
  checkLayoutParams                protected checkLayoutParams(android.view.ViewGroup$LayoutParams)
  computeScroll                    public computeScroll()
  dispatchKeyEvent                 public dispatchKeyEvent(android.view.KeyEvent)
  dispatchPopulateAccessibilityEvent   public dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
  draw                             public draw(android.graphics.Canvas)
  drawableStateChanged             protected drawableStateChanged()
  generateDefaultLayoutParams      protected generateDefaultLayoutParams()
  generateLayoutParams             public generateLayoutParams(android.util.AttributeSet)
  generateLayoutParams             protected generateLayoutParams(android.view.ViewGroup$LayoutParams)
  getChildDrawingOrder             protected getChildDrawingOrder(int,int)
  onAttachedToWindow               protected onAttachedToWindow()
  onDetachedFromWindow             protected onDetachedFromWindow()
  onDraw                           protected onDraw(android.graphics.Canvas)
  onInterceptTouchEvent            public onInterceptTouchEvent(android.view.MotionEvent)
  onLayout                         protected onLayout(boolean,int,int,int,int)
  onMeasure                        protected onMeasure(int,int)
  onRequestFocusInDescendants      protected onRequestFocusInDescendants(int,android.graphics.Rect)
  onRestoreInstanceState           public onRestoreInstanceState(android.os.Parcelable)
  onSaveInstanceState              public onSaveInstanceState()
  onSizeChanged                    protected onSizeChanged(int,int,int,int)
  onTouchEvent                     public onTouchEvent(android.view.MotionEvent)
  removeView                       public removeView(android.view.View)
  verifyDrawable                   protected verifyDrawable(android.graphics.drawable.Drawable)

android.support.v4.view.ViewPager$1      (be.brunoparmentier.apkshare.eval_fb$1)
===============================================================================
  n        public compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo)
  compare  public volatile compare(java.lang.Object,java.lang.Object)

android.support.v4.view.ViewPager$2      (be.brunoparmentier.apkshare.eval_fb$2)
===============================================================================
  getInterpolation public getInterpolation(float)

android.support.v4.view.ViewPager$3      (be.brunoparmentier.apkshare.eval_fb$3)
===============================================================================
  run  public run()

android.support.v4.view.ViewPager$Decor  (be.brunoparmentier.apkshare.eval_fb$y)
===============================================================================
  No methods

android.support.v4.view.ViewPager$IOException    (be.brunoparmentier.apkshare.eval_in)
===============================================================================
  No methods

android.support.v4.view.ViewPager$ItemInfo       (be.brunoparmentier.apkshare.eval_fb$p)
===============================================================================
  No methods

android.support.v4.view.ViewPager$LayoutParams   (be.brunoparmentier.apkshare.eval_fb$n)
===============================================================================
  No methods

android.support.v4.view.ViewPager$MyAccessibilityDelegate        (be.brunoparmentier.apkshare.eval_fb$w)
===============================================================================
  a    private canScroll()
  j    public performAccessibilityAction(android.view.View,int,android.os.Bundle)
  n    public onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  u    public onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)

android.support.v4.view.ViewPager$OnAdapterChangeListener        (be.brunoparmentier.apkshare.eval_fb$d)
===============================================================================
  f    public abstract onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter)

android.support.v4.view.ViewPager$OnPageChangeListener   (be.brunoparmentier.apkshare.eval_fb$e)
===============================================================================
  b    public abstract onPageScrolled(int,float,int)
  v    public abstract onPageScrollStateChanged(int)
  z    public abstract onPageSelected(int)

android.support.v4.view.ViewPager$PageTransformer        (be.brunoparmentier.apkshare.eval_fb$t)
===============================================================================
  m    public abstract transformPage(android.view.View,float)

android.support.v4.view.ViewPager$PagerObserver  (be.brunoparmentier.apkshare.eval_fb$eval_a)
===============================================================================
  onChanged        public onChanged()
  onInvalidated    public onInvalidated()

android.support.v4.view.ViewPager$SavedState     (be.brunoparmentier.apkshare.eval_fb$q)
===============================================================================
  toString         public toString()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.view.ViewPager$SavedState$1   (be.brunoparmentier.apkshare.eval_fb$q$1)
===============================================================================
  eval_i   public createFromParcel(android.os.Parcel,java.lang.ClassLoader)
  f        public newArray(int)

android.support.v4.view.ViewPager$SavedState$Exception   (be.brunoparmentier.apkshare.eval_p_)
===============================================================================
  No methods

android.support.v4.view.ViewPager$SimpleOnPageChangeListener     (be.brunoparmentier.apkshare.eval_fb$x)
===============================================================================
  b    public onPageScrolled(int,float,int)
  v    public onPageScrollStateChanged(int)
  z    public onPageSelected(int)

android.support.v4.view.ViewPager$ViewPositionComparator (be.brunoparmentier.apkshare.eval_fb$eval_z)
===============================================================================
  c        public compare(android.view.View,android.view.View)
  compare  public volatile compare(java.lang.Object,java.lang.Object)

android.support.v4.view.ViewParentCompat (be.brunoparmentier.apkshare.eval_ei)
===============================================================================
  a    public static onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
  b    public static onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
  e    public static onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
  f    public static onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
  g    public static onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
  m    public static notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
  r    public static onStopNestedScroll(android.view.ViewParent,android.view.View)
  s    public static requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent)
  z    public static onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])

android.support.v4.view.ViewParentCompat$NullPointerException    (be.brunoparmentier.apkshare.eval_a2)
===============================================================================
  No methods

android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl (be.brunoparmentier.apkshare.eval_ei$v)
===============================================================================
  t    public requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent)

android.support.v4.view.ViewParentCompat$ViewParentCompatImpl    (be.brunoparmentier.apkshare.eval_ei$m)
===============================================================================
  a        public abstract onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
  c        public abstract onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
  eval_o   public abstract onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
  r        public abstract notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
  t        public abstract onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
  t        public abstract requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent)
  t        public abstract onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
  w        public abstract onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
  z        public abstract onStopNestedScroll(android.view.ViewParent,android.view.View)

android.support.v4.view.ViewParentCompat$ViewParentCompatKitKatImpl      (be.brunoparmentier.apkshare.eval_ei$p)
===============================================================================
  r    public notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)

android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl    (be.brunoparmentier.apkshare.eval_ei$s)
===============================================================================
  a        public onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
  c        public onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
  eval_o   public onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
  t        public onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
  t        public onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
  w        public onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
  z        public onStopNestedScroll(android.view.ViewParent,android.view.View)

android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl        (be.brunoparmentier.apkshare.eval_ei$c)
===============================================================================
  a        public onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
  c        public onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
  eval_o   public onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
  r        public notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
  t        public onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
  t        public requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent)
  t        public onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
  w        public onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
  z        public onStopNestedScroll(android.view.ViewParent,android.view.View)

android.support.v4.view.ViewParentCompatICS      (be.brunoparmentier.apkshare.eval_b2)
===============================================================================
  t    public static requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent)

android.support.v4.view.ViewParentCompatICS$IOException  (be.brunoparmentier.apkshare.eval_co)
===============================================================================
  No methods

android.support.v4.view.ViewParentCompatKitKat   (be.brunoparmentier.apkshare.eval_k0)
===============================================================================
  e    public static notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)

android.support.v4.view.ViewParentCompatKitKat$ArrayOutOfBoundsException (be.brunoparmentier.apkshare.eval_v3)
===============================================================================
  No methods

android.support.v4.view.ViewParentCompatLollipop (be.brunoparmentier.apkshare.eval_wf)
===============================================================================
  a    public static onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
  g    public static onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
  h    public static onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
  n    public static onStopNestedScroll(android.view.ViewParent,android.view.View)
  p    public static onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
  z    public static onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
  z    public static onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])

android.support.v4.view.ViewParentCompatLollipop$IOException     (be.brunoparmentier.apkshare.eval_j0)
===============================================================================
  No methods

android.support.v4.view.ViewPropertyAnimatorCompat       (be.brunoparmentier.apkshare.eval_q5)
===============================================================================
  a        static access$402(android.support.v4.view.ViewPropertyAnimatorCompat,int)
  a        public translationXBy(float)
  a        public withStartAction(java.lang.Runnable)
  b        public rotationYBy(float)
  c        public rotationX(float)
  e        public setUpdateListener(android.support.v4.view.ViewPropertyAnimatorUpdateListener)
  e        public rotationY(float)
  eval_h   public scaleYBy(float)
  eval_m   public rotation(float)
  eval_n   public yBy(float)
  eval_o   public zBy(float)
  eval_p   public xBy(float)
  eval_u   public z(float)
  eval_w   public translationYBy(float)
  eval_x   public translationZ(float)
  f        public getDuration()
  f        public translationZBy(float)
  g        public rotationBy(float)
  h        public withLayer()
  h        public x(float)
  i        public y(float)
  i        public withEndAction(java.lang.Runnable)
  j        public cancel()
  l        static access$100(android.support.v4.view.ViewPropertyAnimatorCompat)
  l        public translationX(float)
  m        public setListener(android.support.v4.view.ViewPropertyAnimatorListener)
  n        public start()
  n        public scaleY(float)
  o        static access$002(android.support.v4.view.ViewPropertyAnimatorCompat,java.lang.Runnable)
  o        public scaleXBy(float)
  p        public setInterpolator(android.view.animation.Interpolator)
  q        public translationY(float)
  q        public setStartDelay(long)
  r        public getStartDelay()
  r        static access$102(android.support.v4.view.ViewPropertyAnimatorCompat,java.lang.Runnable)
  r        public rotationXBy(float)
  r        public setDuration(long)
  s        public getInterpolator()
  t        public alphaBy(float)
  u        public scaleX(float)
  v        public alpha(float)
  x        static access$000(android.support.v4.view.ViewPropertyAnimatorCompat)
  y        static access$400(android.support.v4.view.ViewPropertyAnimatorCompat)

android.support.v4.view.ViewPropertyAnimatorCompat$1     (be.brunoparmentier.apkshare.eval_q5$1)
===============================================================================
  No methods

android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl    (be.brunoparmentier.apkshare.eval_q5$i)
===============================================================================
  a        public scaleYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  b        public setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator)
  b        public y(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  c        public alphaBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  d        private startAnimation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  eval_a   public scaleY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_d   public scaleXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_e   public scaleX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_i   public rotationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_k   public translationZ(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_l   public translationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_m   public rotation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_o   public yBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_p   public zBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_t   private postStartMessage(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  eval_v   public translationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_x   public rotationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_y   public translationZBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  g        static access$200(android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl,android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  g        public getStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  h        public withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  i        private removeStartMessage(android.view.View)
  j        public rotationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  k        public z(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  l        public rotationBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  m        public translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  n        public getDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  n        public alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  n        public withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable)
  o        public getInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  p        public translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  q        public start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  q        public setStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long)
  r        public x(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  t        public setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long)
  u        public setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener)
  v        public xBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  w        public rotationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  y        public cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  z        public setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener)
  z        public withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable)

android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl$NullPointerException       (be.brunoparmentier.apkshare.eval_ru)
===============================================================================
  No methods

android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl$Starter    (be.brunoparmentier.apkshare.eval_q5$i$g)
===============================================================================
  run  public run()

android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl     (be.brunoparmentier.apkshare.eval_q5$y)
===============================================================================
  a        public scaleYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  b        public setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator)
  b        public y(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  c        public alphaBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_a   public scaleY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_d   public scaleXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_e   public scaleX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_i   public rotationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_l   public translationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_m   public rotation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_o   public yBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_v   public translationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_x   public rotationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  g        public getStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  h        public withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  j        public rotationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  l        public rotationBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  m        public translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  n        public getDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  n        public alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  n        public withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable)
  p        public translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  q        public start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  q        public setStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long)
  r        public x(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  t        public setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long)
  v        public xBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  w        public rotationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  y        public cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  z        public setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener)
  z        public withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable)

android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$Exception   (be.brunoparmentier.apkshare.eval_ks)
===============================================================================
  No methods

android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$MyVpaListener       (be.brunoparmentier.apkshare.eval_q5$y$j)
===============================================================================
  b    public onAnimationEnd(android.view.View)
  s    public onAnimationStart(android.view.View)
  x    public onAnimationCancel(android.view.View)

android.support.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl   (be.brunoparmentier.apkshare.eval_q5$c)
===============================================================================
  o    public getInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)

android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl      (be.brunoparmentier.apkshare.eval_q5$w)
===============================================================================
  h    public withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  n    public withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable)
  z    public setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener)
  z    public withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable)

android.support.v4.view.ViewPropertyAnimatorCompat$KitKatViewPropertyAnimatorCompatImpl  (be.brunoparmentier.apkshare.eval_q5$eval_w)
===============================================================================
  u    public setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener)

android.support.v4.view.ViewPropertyAnimatorCompat$LollipopViewPropertyAnimatorCompatImpl        (be.brunoparmentier.apkshare.eval_q5$g)
===============================================================================
  eval_k   public translationZ(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_p   public zBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_y   public translationZBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  k        public z(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)

android.support.v4.view.ViewPropertyAnimatorCompat$NullPointerException  (be.brunoparmentier.apkshare.eval_z8)
===============================================================================
  No methods

android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl        (be.brunoparmentier.apkshare.eval_q5$p)
===============================================================================
  a        public abstract scaleYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  b        public abstract setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator)
  b        public abstract y(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  c        public abstract alphaBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_a   public abstract scaleY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_d   public abstract scaleXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_e   public abstract scaleX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_i   public abstract rotationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_k   public abstract translationZ(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_l   public abstract translationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_m   public abstract rotation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_o   public abstract yBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_p   public abstract zBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_v   public abstract translationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_x   public abstract rotationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_y   public abstract translationZBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  g        public abstract getStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  h        public abstract withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  j        public abstract rotationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  k        public abstract z(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  l        public abstract rotationBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  m        public abstract translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  n        public abstract getDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  n        public abstract alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  n        public abstract withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable)
  o        public abstract getInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  p        public abstract translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  q        public abstract start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  q        public abstract setStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long)
  r        public abstract x(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  t        public abstract setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long)
  u        public abstract setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener)
  v        public abstract xBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  w        public abstract rotationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  y        public abstract cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  z        public abstract setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener)
  z        public abstract withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable)

android.support.v4.view.ViewPropertyAnimatorCompatICS    (be.brunoparmentier.apkshare.eval_zv)
===============================================================================
  a        public static scaleY(android.view.View,float)
  c        public static setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener)
  c        public static rotationY(android.view.View,float)
  d        public static xBy(android.view.View,float)
  e        public static translationXBy(android.view.View,float)
  eval_a   public static rotationX(android.view.View,float)
  eval_c   public static translationYBy(android.view.View,float)
  eval_e   public static yBy(android.view.View,float)
  eval_m   public static x(android.view.View,float)
  eval_r   public static scaleXBy(android.view.View,float)
  eval_s   public static translationX(android.view.View,float)
  eval_w   public static rotationYBy(android.view.View,float)
  eval_x   public static scaleX(android.view.View,float)
  g        public static y(android.view.View,float)
  h        public static setInterpolator(android.view.View,android.view.animation.Interpolator)
  h        public static translationY(android.view.View,float)
  i        public static cancel(android.view.View)
  i        public static rotationBy(android.view.View,float)
  l        public static getStartDelay(android.view.View)
  p        public static getDuration(android.view.View)
  p        public static setStartDelay(android.view.View,long)
  s        public static rotationXBy(android.view.View,float)
  t        public static alpha(android.view.View,float)
  u        public static rotation(android.view.View,float)
  v        public static alphaBy(android.view.View,float)
  v        public static setDuration(android.view.View,long)
  w        public static start(android.view.View)
  w        public static scaleYBy(android.view.View,float)

android.support.v4.view.ViewPropertyAnimatorCompatICS$1  (be.brunoparmentier.apkshare.eval_zv$1)
===============================================================================
  onAnimationCancel    public onAnimationCancel(android.animation.Animator)
  onAnimationEnd       public onAnimationEnd(android.animation.Animator)
  onAnimationStart     public onAnimationStart(android.animation.Animator)

android.support.v4.view.ViewPropertyAnimatorCompatICS$IOException        (be.brunoparmentier.apkshare.eval_ea)
===============================================================================
  No methods

android.support.v4.view.ViewPropertyAnimatorCompatJB     (be.brunoparmentier.apkshare.eval_um)
===============================================================================
  a    public static withStartAction(android.view.View,java.lang.Runnable)
  l    public static setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener)
  n    public static withEndAction(android.view.View,java.lang.Runnable)
  x    public static withLayer(android.view.View)

android.support.v4.view.ViewPropertyAnimatorCompatJB$1   (be.brunoparmentier.apkshare.eval_um$1)
===============================================================================
  onAnimationCancel    public onAnimationCancel(android.animation.Animator)
  onAnimationEnd       public onAnimationEnd(android.animation.Animator)
  onAnimationStart     public onAnimationStart(android.animation.Animator)

android.support.v4.view.ViewPropertyAnimatorCompatJB$ParseException      (be.brunoparmentier.apkshare.eval_c0)
===============================================================================
  No methods

android.support.v4.view.ViewPropertyAnimatorCompatJellybeanMr2   (be.brunoparmentier.apkshare.eval_c8)
===============================================================================
  g    public static getInterpolator(android.view.View)

android.support.v4.view.ViewPropertyAnimatorCompatJellybeanMr2$ParseException    (be.brunoparmentier.apkshare.eval_px)
===============================================================================
  No methods

android.support.v4.view.ViewPropertyAnimatorCompatKK     (be.brunoparmentier.apkshare.eval_x3)
===============================================================================
  i    public static setUpdateListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener)

android.support.v4.view.ViewPropertyAnimatorCompatKK$1   (be.brunoparmentier.apkshare.eval_x3$1)
===============================================================================
  onAnimationUpdate    public onAnimationUpdate(android.animation.ValueAnimator)

android.support.v4.view.ViewPropertyAnimatorCompatKK$ParseException      (be.brunoparmentier.apkshare.eval_gi)
===============================================================================
  No methods

android.support.v4.view.ViewPropertyAnimatorCompatLollipop       (be.brunoparmentier.apkshare.eval_zh)
===============================================================================
  l    public static z(android.view.View,float)
  n    public static translationZBy(android.view.View,float)
  q    public static zBy(android.view.View,float)
  r    public static translationZ(android.view.View,float)

android.support.v4.view.ViewPropertyAnimatorCompatLollipop$IOException   (be.brunoparmentier.apkshare.eval_vt)
===============================================================================
  No methods

android.support.v4.view.ViewPropertyAnimatorListener     (be.brunoparmentier.apkshare.eval_zp)
===============================================================================
  b    public abstract onAnimationEnd(android.view.View)
  s    public abstract onAnimationStart(android.view.View)
  x    public abstract onAnimationCancel(android.view.View)

android.support.v4.view.ViewPropertyAnimatorListener$ParseException      (be.brunoparmentier.apkshare.eval_k8)
===============================================================================
  No methods

android.support.v4.view.ViewPropertyAnimatorListenerAdapter      (be.brunoparmentier.apkshare.eval__o)
===============================================================================
  b    public onAnimationEnd(android.view.View)
  s    public onAnimationStart(android.view.View)
  x    public onAnimationCancel(android.view.View)

android.support.v4.view.ViewPropertyAnimatorListenerAdapter$Exception    (be.brunoparmentier.apkshare.eval_mv)
===============================================================================
  No methods

android.support.v4.view.ViewPropertyAnimatorUpdateListener       (be.brunoparmentier.apkshare.eval_jr)
===============================================================================
  p    public abstract onAnimationUpdate(android.view.View)

android.support.v4.view.ViewPropertyAnimatorUpdateListener$IOException   (be.brunoparmentier.apkshare.eval_im)
===============================================================================
  No methods

android.support.v4.view.WindowCompat     (be.brunoparmentier.apkshare.eval_bb)
===============================================================================
  No methods

android.support.v4.view.WindowCompat$ArrayOutOfBoundsException   (be.brunoparmentier.apkshare.eval_n9)
===============================================================================
  No methods

android.support.v4.view.WindowInsetsCompat       (be.brunoparmentier.apkshare.eval_lr)
===============================================================================
  eval_f   public getStableInsetBottom()
  eval_n   public consumeSystemWindowInsets()
  eval_p   public getStableInsetRight()
  eval_x   public isRound()
  l        public getStableInsetTop()
  l        public replaceSystemWindowInsets(android.graphics.Rect)
  l        public replaceSystemWindowInsets(int,int,int,int)
  m        public getSystemWindowInsetLeft()
  n        public getSystemWindowInsetTop()
  p        public isConsumed()
  q        public getSystemWindowInsetRight()
  r        public getStableInsetLeft()
  t        public hasSystemWindowInsets()
  u        public hasStableInsets()
  w        public consumeStableInsets()
  x        public getSystemWindowInsetBottom()
  y        public hasInsets()

android.support.v4.view.WindowInsetsCompat$ParseException        (be.brunoparmentier.apkshare.eval_c1)
===============================================================================
  No methods

android.support.v4.view.WindowInsetsCompatApi21  (be.brunoparmentier.apkshare.eval_rl)
===============================================================================
  eval_e   unwrap()
  eval_f   public getStableInsetBottom()
  eval_n   public consumeSystemWindowInsets()
  eval_p   public getStableInsetRight()
  eval_x   public isRound()
  l        public getStableInsetTop()
  l        public replaceSystemWindowInsets(android.graphics.Rect)
  l        public replaceSystemWindowInsets(int,int,int,int)
  m        public getSystemWindowInsetLeft()
  n        public getSystemWindowInsetTop()
  p        public isConsumed()
  q        public getSystemWindowInsetRight()
  r        public getStableInsetLeft()
  t        public hasSystemWindowInsets()
  u        public hasStableInsets()
  w        public consumeStableInsets()
  x        public getSystemWindowInsetBottom()
  y        public hasInsets()

android.support.v4.view.WindowInsetsCompatApi21$ParseException   (be.brunoparmentier.apkshare.eval_gg)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityEventCompat   (be.brunoparmentier.apkshare.eval_tm)
===============================================================================
  a    public static setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
  b    public static getRecordCount(android.view.accessibility.AccessibilityEvent)
  b    public static getRecord(android.view.accessibility.AccessibilityEvent,int)
  i    public static asRecord(android.view.accessibility.AccessibilityEvent)
  m    public static appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat)
  n    public static getContentChangeTypes(android.view.accessibility.AccessibilityEvent)

android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl (be.brunoparmentier.apkshare.eval_tm$k)
===============================================================================
  b    public appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object)
  h    public getRecordCount(android.view.accessibility.AccessibilityEvent)
  w    public getRecord(android.view.accessibility.AccessibilityEvent,int)

android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventKitKatImpl      (be.brunoparmentier.apkshare.eval_tm$u)
===============================================================================
  l    public getContentChangeTypes(android.view.accessibility.AccessibilityEvent)
  m    public setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)

android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl        (be.brunoparmentier.apkshare.eval_tm$v)
===============================================================================
  b    public appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object)
  h    public getRecordCount(android.view.accessibility.AccessibilityEvent)
  l    public getContentChangeTypes(android.view.accessibility.AccessibilityEvent)
  m    public setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
  w    public getRecord(android.view.accessibility.AccessibilityEvent,int)

android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl     (be.brunoparmentier.apkshare.eval_tm$a)
===============================================================================
  b    public abstract appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object)
  h    public abstract getRecordCount(android.view.accessibility.AccessibilityEvent)
  l    public abstract getContentChangeTypes(android.view.accessibility.AccessibilityEvent)
  m    public abstract setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
  w    public abstract getRecord(android.view.accessibility.AccessibilityEvent,int)

android.support.v4.view.accessibility.AccessibilityEventCompat$ParseException    (be.brunoparmentier.apkshare.eval_n0)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityEventCompatIcs        (be.brunoparmentier.apkshare.eval_cl)
===============================================================================
  d    public static getRecordCount(android.view.accessibility.AccessibilityEvent)
  h    public static getRecord(android.view.accessibility.AccessibilityEvent,int)
  t    public static appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object)
  w    public static setScrollable(android.view.accessibility.AccessibilityEvent,boolean)

android.support.v4.view.accessibility.AccessibilityEventCompatIcs$NullPointerException   (be.brunoparmentier.apkshare.eval_la)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityEventCompatKitKat     (be.brunoparmentier.apkshare.eval_vr)
===============================================================================
  s    public static getContentChangeTypes(android.view.accessibility.AccessibilityEvent)
  w    public static setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)

android.support.v4.view.accessibility.AccessibilityEventCompatKitKat$IOException (be.brunoparmentier.apkshare.eval_e1)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityManagerCompat (be.brunoparmentier.apkshare.eval_ht)
===============================================================================
  a        public static getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int)
  c        static access$000()
  eval_n   public static isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager)
  f        public static getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager)
  j        public static addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)
  p        public static removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)

android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl     (be.brunoparmentier.apkshare.eval_ht$c)
===============================================================================
  b    public getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager)
  h    public addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)
  j    public newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)
  l    public isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager)
  w    public removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)
  x    public getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int)

android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1   (be.brunoparmentier.apkshare.eval_ht$c$1)
===============================================================================
  h    public onAccessibilityStateChanged(boolean)

android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$ParseException      (be.brunoparmentier.apkshare.eval_ac)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl    (be.brunoparmentier.apkshare.eval_ht$j)
===============================================================================
  b    public getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager)
  h    public addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)
  j    public newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)
  l    public isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager)
  w    public removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)
  x    public getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int)

android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl (be.brunoparmentier.apkshare.eval_ht$q)
===============================================================================
  b    public abstract getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager)
  h    public abstract addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)
  j    public abstract newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)
  l    public abstract isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager)
  w    public abstract removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)
  x    public abstract getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int)

android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat  (be.brunoparmentier.apkshare.eval_ht$p)
===============================================================================
  w    public abstract onAccessibilityStateChanged(boolean)

android.support.v4.view.accessibility.AccessibilityManagerCompat$Exception       (be.brunoparmentier.apkshare.eval_rg)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityManagerCompatIcs      (be.brunoparmentier.apkshare.eval_b3)
===============================================================================
  g    public static newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge)
  j    public static addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object)
  k    public static removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object)
  p    public static getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager)
  p    public static getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int)
  q    public static isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager)

android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1    (be.brunoparmentier.apkshare.eval_b3$1)
===============================================================================
  onAccessibilityStateChanged  public onAccessibilityStateChanged(boolean)

android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge       (be.brunoparmentier.apkshare.eval_b3$j)
===============================================================================
  h    public abstract onAccessibilityStateChanged(boolean)

android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$ParseException       (be.brunoparmentier.apkshare.eval_wm)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityNodeInfoCompat        (be.brunoparmentier.apkshare.eval_e3)
===============================================================================
  a        public getContentDescription()
  a        public setBoundsInParent(android.graphics.Rect)
  b        public findAccessibilityNodeInfosByText(java.lang.String)
  c        public isChecked()
  c        public getBoundsInScreen(android.graphics.Rect)
  c        public addAction(int)
  c        public setError(java.lang.CharSequence)
  d        public isLongClickable()
  d        public setAccessibilityFocused(boolean)
  d        public setCollectionItemInfo(java.lang.Object)
  e        public static obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  eval_d   public isFocused()
  eval_d   public setPassword(boolean)
  eval_e   public getLiveRegion()
  eval_e   public setSource(android.view.View)
  eval_f   public isAccessibilityFocused()
  eval_g   public getCollectionItemInfo()
  eval_h   public getPackageName()
  eval_j   public isClickable()
  eval_k   public getActions()
  eval_m   public getActionList()
  eval_o   public setScrollable(boolean)
  eval_p   public isPassword()
  eval_q   static access$000()
  eval_r   public getViewIdResourceName()
  eval_s   public recycle()
  eval_t   public isContentInvalid()
  eval_t   public setLongClickable(boolean)
  eval_u   public getText()
  eval_v   public setFocusable(boolean)
  eval_w   public isScrollable()
  eval_x   public setParent(android.view.View,int)
  eval_y   public getRangeInfo()
  f        public setBoundsInScreen(android.graphics.Rect)
  f        public setMovementGranularities(int)
  g        public getChildCount()
  h        public getError()
  i        public isCheckable()
  i        public static obtain(android.view.View)
  i        public setSelected(boolean)
  i        public performAction(int)
  i        static wrapNonNullInstance(java.lang.Object)
  j        public setClickable(boolean)
  j        public performAction(int,android.os.Bundle)
  k        public isSelected()
  k        public setContentInvalid(boolean)
  k        private static getActionSymbolicName(int)
  l        public setText(java.lang.CharSequence)
  l        public setCollectionInfo(java.lang.Object)
  l        public setViewIdResourceName(java.lang.String)
  m        public getParent()
  m        public setEnabled(boolean)
  n        public getWindowId()
  n        public setParent(android.view.View)
  n        public setChecked(boolean)
  o        public setLabelFor(android.view.View)
  o        public getChild(int)
  p        public getMovementGranularities()
  p        public setVisibleToUser(boolean)
  q        public getInfo()
  q        public addAction(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
  q        public addChild(android.view.View)
  q        public static obtain(android.view.View,int)
  r        public isEnabled()
  s        public isFocusable()
  t        public getClassName()
  t        public setLiveRegion(int)
  t        public setContentDescription(java.lang.CharSequence)
  u        public static obtain()
  v        public getBoundsInParent(android.graphics.Rect)
  v        public addChild(android.view.View,int)
  v        public focusSearch(int)
  w        public isVisibleToUser()
  w        public setLabelFor(android.view.View,int)
  x        public setFocused(boolean)
  x        public setClassName(java.lang.CharSequence)
  y        public setSource(android.view.View,int)
  y        public findFocus(int)
  z        public getCollectionInfo()
  z        public setCheckable(boolean)
  z        public setPackageName(java.lang.CharSequence)
  equals   public equals(java.lang.Object)
  hashCode public hashCode()
  toString public toString()

android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$1      (be.brunoparmentier.apkshare.eval_e3$1)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat      (be.brunoparmentier.apkshare.eval_e3$v)
===============================================================================
  h    static access$100(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
  j    public getId()
  n    public getLabel()

android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi21Impl (be.brunoparmentier.apkshare.eval_e3$r)
===============================================================================
  eval_j   public getAccessibilityActionLabel(java.lang.Object)
  i        public isCollectionItemSelected(java.lang.Object)
  q        public obtainCollectionItemInfo(int,int,int,int,boolean,boolean)
  q        public setError(java.lang.Object,java.lang.CharSequence)
  r        public getActionList(java.lang.Object)
  r        public addAction(java.lang.Object,java.lang.Object)
  v        public getAccessibilityActionId(java.lang.Object)
  w        public newAccessibilityAction(int,java.lang.CharSequence)
  x        public setLabelFor(java.lang.Object,android.view.View,int)
  y        public obtainCollectionInfo(int,int,boolean,int)
  z        public getError(java.lang.Object)
  z        public setLabelFor(java.lang.Object,android.view.View)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi22Impl (be.brunoparmentier.apkshare.eval_e3$q)
===============================================================================
  b        public setTraversalAfter(java.lang.Object,android.view.View)
  eval_m   public setTraversalBefore(java.lang.Object,android.view.View)
  f        public getTraversalAfter(java.lang.Object)
  g        public setTraversalBefore(java.lang.Object,android.view.View,int)
  n        public setTraversalAfter(java.lang.Object,android.view.View,int)
  u        public getTraversalBefore(java.lang.Object)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl   (be.brunoparmentier.apkshare.eval_e3$c)
===============================================================================
  b        public getClassName(java.lang.Object)
  c        public obtain()
  c        public setFocused(java.lang.Object,boolean)
  c        public getChild(java.lang.Object,int)
  c        public setPackageName(java.lang.Object,java.lang.CharSequence)
  d        public obtain(java.lang.Object)
  d        public setBoundsInScreen(java.lang.Object,android.graphics.Rect)
  d        public findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String)
  e        public isFocusable(java.lang.Object)
  e        public setClickable(java.lang.Object,boolean)
  e        public setContentDescription(java.lang.Object,java.lang.CharSequence)
  eval_a   public isSelected(java.lang.Object)
  eval_c   public isClickable(java.lang.Object)
  eval_c   public setScrollable(java.lang.Object,boolean)
  eval_d   public setCheckable(java.lang.Object,boolean)
  eval_f   public recycle(java.lang.Object)
  eval_g   public getText(java.lang.Object)
  eval_h   public getBoundsInScreen(java.lang.Object,android.graphics.Rect)
  eval_l   public isCheckable(java.lang.Object)
  eval_r   public isLongClickable(java.lang.Object)
  eval_r   public setLongClickable(java.lang.Object,boolean)
  eval_t   public isPassword(java.lang.Object)
  eval_u   public getPackageName(java.lang.Object)
  eval_z   public isEnabled(java.lang.Object)
  h        public setParent(java.lang.Object,android.view.View)
  j        public getParent(java.lang.Object)
  j        public setSource(java.lang.Object,android.view.View)
  k        public addAction(java.lang.Object,int)
  l        public getWindowId(java.lang.Object)
  l        public setText(java.lang.Object,java.lang.CharSequence)
  m        public getBoundsInParent(java.lang.Object,android.graphics.Rect)
  m        public setSelected(java.lang.Object,boolean)
  n        public setEnabled(java.lang.Object,boolean)
  o        public getActions(java.lang.Object)
  p        public obtain(android.view.View)
  q        public setChecked(java.lang.Object,boolean)
  r        public setBoundsInParent(java.lang.Object,android.graphics.Rect)
  s        public getChildCount(java.lang.Object)
  t        public isChecked(java.lang.Object)
  t        public addChild(java.lang.Object,android.view.View)
  v        public performAction(java.lang.Object,int)
  w        public isScrollable(java.lang.Object)
  x        public getContentDescription(java.lang.Object)
  y        public isFocused(java.lang.Object)
  y        public setFocusable(java.lang.Object,boolean)
  y        public setClassName(java.lang.Object,java.lang.CharSequence)
  z        public setPassword(java.lang.Object,boolean)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl      (be.brunoparmentier.apkshare.eval_e3$h)
===============================================================================
  a        public abstract setVisibleToUser(java.lang.Object,boolean)
  b        public abstract getClassName(java.lang.Object)
  b        public abstract setTraversalAfter(java.lang.Object,android.view.View)
  b        public abstract findFocus(java.lang.Object,int)
  c        public abstract obtain()
  c        public abstract getCollectionItemRowSpan(java.lang.Object)
  c        public abstract setFocused(java.lang.Object,boolean)
  c        public abstract getChild(java.lang.Object,int)
  c        public abstract setPackageName(java.lang.Object,java.lang.CharSequence)
  d        public abstract obtain(android.view.View,int)
  d        public abstract obtain(java.lang.Object)
  d        public abstract setBoundsInScreen(java.lang.Object,android.graphics.Rect)
  d        public abstract findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String)
  e        public abstract isFocusable(java.lang.Object)
  e        public abstract addChild(java.lang.Object,android.view.View,int)
  e        public abstract setClickable(java.lang.Object,boolean)
  e        public abstract setContentDescription(java.lang.Object,java.lang.CharSequence)
  eval__   public abstract getCollectionItemColumnIndex(java.lang.Object)
  eval_a   public abstract isSelected(java.lang.Object)
  eval_b   public abstract getCollectionItemRowIndex(java.lang.Object)
  eval_c   public abstract isClickable(java.lang.Object)
  eval_c   public abstract setScrollable(java.lang.Object,boolean)
  eval_d   public abstract isCollectionInfoHierarchical(java.lang.Object)
  eval_d   public abstract setCheckable(java.lang.Object,boolean)
  eval_e   public abstract getViewIdResourceName(java.lang.Object)
  eval_f   public abstract recycle(java.lang.Object)
  eval_g   public abstract getText(java.lang.Object)
  eval_h   public abstract getCollectionItemColumnSpan(java.lang.Object)
  eval_h   public abstract getBoundsInScreen(java.lang.Object,android.graphics.Rect)
  eval_h   public abstract setAccessibilityFocused(java.lang.Object,boolean)
  eval_i   public abstract getMovementGranularities(java.lang.Object)
  eval_j   public abstract getAccessibilityActionLabel(java.lang.Object)
  eval_k   public abstract getCollectionItemInfo(java.lang.Object)
  eval_l   public abstract isCheckable(java.lang.Object)
  eval_m   public abstract getRangeInfo(java.lang.Object)
  eval_m   public abstract setTraversalBefore(java.lang.Object,android.view.View)
  eval_m   public abstract setSource(java.lang.Object,android.view.View,int)
  eval_n   public abstract isContentInvalid(java.lang.Object)
  eval_o   public abstract getCollectionInfo(java.lang.Object)
  eval_p   public abstract isCollectionItemHeading(java.lang.Object)
  eval_r   public abstract isLongClickable(java.lang.Object)
  eval_r   public abstract setLongClickable(java.lang.Object,boolean)
  eval_s   public abstract getCollectionInfoColumnCount(java.lang.Object)
  eval_t   public abstract isPassword(java.lang.Object)
  eval_u   public abstract getPackageName(java.lang.Object)
  eval_v   public abstract isAccessibilityFocused(java.lang.Object)
  eval_x   public abstract getLiveRegion(java.lang.Object)
  eval_z   public abstract isEnabled(java.lang.Object)
  f        public abstract getTraversalAfter(java.lang.Object)
  g        public abstract setTraversalBefore(java.lang.Object,android.view.View,int)
  g        public abstract setMovementGranularities(java.lang.Object,int)
  h        public abstract isVisibleToUser(java.lang.Object)
  h        public abstract setParent(java.lang.Object,android.view.View)
  h        public abstract focusSearch(java.lang.Object,int)
  i        public abstract isCollectionItemSelected(java.lang.Object)
  j        public abstract getParent(java.lang.Object)
  j        public abstract setSource(java.lang.Object,android.view.View)
  j        public abstract setCollectionInfo(java.lang.Object,java.lang.Object)
  k        public abstract addAction(java.lang.Object,int)
  k        public abstract setViewIdResourceName(java.lang.Object,java.lang.String)
  l        public abstract getWindowId(java.lang.Object)
  l        public abstract setText(java.lang.Object,java.lang.CharSequence)
  m        public abstract getBoundsInParent(java.lang.Object,android.graphics.Rect)
  m        public abstract setSelected(java.lang.Object,boolean)
  n        public abstract getCollectionInfoRowCount(java.lang.Object)
  n        public abstract setTraversalAfter(java.lang.Object,android.view.View,int)
  n        public abstract setEnabled(java.lang.Object,boolean)
  o        public abstract getActions(java.lang.Object)
  p        public abstract obtain(android.view.View)
  p        public abstract setParent(java.lang.Object,android.view.View,int)
  q        public abstract obtainCollectionItemInfo(int,int,int,int,boolean,boolean)
  q        public abstract setChecked(java.lang.Object,boolean)
  q        public abstract setError(java.lang.Object,java.lang.CharSequence)
  r        public abstract getActionList(java.lang.Object)
  r        public abstract setBoundsInParent(java.lang.Object,android.graphics.Rect)
  r        public abstract setContentInvalid(java.lang.Object,boolean)
  r        public abstract addAction(java.lang.Object,java.lang.Object)
  s        public abstract getChildCount(java.lang.Object)
  t        public abstract isChecked(java.lang.Object)
  t        public abstract addChild(java.lang.Object,android.view.View)
  u        public abstract getTraversalBefore(java.lang.Object)
  u        public abstract performAction(java.lang.Object,int,android.os.Bundle)
  u        public abstract setCollectionItemInfo(java.lang.Object,java.lang.Object)
  v        public abstract getAccessibilityActionId(java.lang.Object)
  v        public abstract performAction(java.lang.Object,int)
  w        public abstract newAccessibilityAction(int,java.lang.CharSequence)
  w        public abstract isScrollable(java.lang.Object)
  x        public abstract getContentDescription(java.lang.Object)
  x        public abstract setLabelFor(java.lang.Object,android.view.View,int)
  y        public abstract obtainCollectionInfo(int,int,boolean,int)
  y        public abstract isFocused(java.lang.Object)
  y        public abstract setFocusable(java.lang.Object,boolean)
  y        public abstract setLiveRegion(java.lang.Object,int)
  y        public abstract setClassName(java.lang.Object,java.lang.CharSequence)
  z        public abstract getError(java.lang.Object)
  z        public abstract setLabelFor(java.lang.Object,android.view.View)
  z        public abstract setPassword(java.lang.Object,boolean)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl     (be.brunoparmentier.apkshare.eval_e3$p)
===============================================================================
  a        public setVisibleToUser(java.lang.Object,boolean)
  b        public findFocus(java.lang.Object,int)
  d        public obtain(android.view.View,int)
  e        public addChild(java.lang.Object,android.view.View,int)
  eval_h   public setAccessibilityFocused(java.lang.Object,boolean)
  eval_i   public getMovementGranularities(java.lang.Object)
  eval_m   public setSource(java.lang.Object,android.view.View,int)
  eval_v   public isAccessibilityFocused(java.lang.Object)
  g        public setMovementGranularities(java.lang.Object,int)
  h        public isVisibleToUser(java.lang.Object)
  h        public focusSearch(java.lang.Object,int)
  p        public setParent(java.lang.Object,android.view.View,int)
  u        public performAction(java.lang.Object,int,android.os.Bundle)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl  (be.brunoparmentier.apkshare.eval_e3$eval_x)
===============================================================================
  eval_e   public getViewIdResourceName(java.lang.Object)
  k        public setViewIdResourceName(java.lang.Object,java.lang.String)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl        (be.brunoparmentier.apkshare.eval_e3$i)
===============================================================================
  c        public getCollectionItemRowSpan(java.lang.Object)
  eval__   public getCollectionItemColumnIndex(java.lang.Object)
  eval_b   public getCollectionItemRowIndex(java.lang.Object)
  eval_d   public isCollectionInfoHierarchical(java.lang.Object)
  eval_h   public getCollectionItemColumnSpan(java.lang.Object)
  eval_k   public getCollectionItemInfo(java.lang.Object)
  eval_m   public getRangeInfo(java.lang.Object)
  eval_n   public isContentInvalid(java.lang.Object)
  eval_o   public getCollectionInfo(java.lang.Object)
  eval_p   public isCollectionItemHeading(java.lang.Object)
  eval_s   public getCollectionInfoColumnCount(java.lang.Object)
  eval_x   public getLiveRegion(java.lang.Object)
  j        public setCollectionInfo(java.lang.Object,java.lang.Object)
  n        public getCollectionInfoRowCount(java.lang.Object)
  q        public obtainCollectionItemInfo(int,int,int,int,boolean,boolean)
  r        public setContentInvalid(java.lang.Object,boolean)
  u        public setCollectionItemInfo(java.lang.Object,java.lang.Object)
  y        public obtainCollectionInfo(int,int,boolean,int)
  y        public setLiveRegion(java.lang.Object,int)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl  (be.brunoparmentier.apkshare.eval_e3$f)
===============================================================================
  a        public setVisibleToUser(java.lang.Object,boolean)
  b        public getClassName(java.lang.Object)
  b        public setTraversalAfter(java.lang.Object,android.view.View)
  b        public findFocus(java.lang.Object,int)
  c        public obtain()
  c        public getCollectionItemRowSpan(java.lang.Object)
  c        public setFocused(java.lang.Object,boolean)
  c        public getChild(java.lang.Object,int)
  c        public setPackageName(java.lang.Object,java.lang.CharSequence)
  d        public obtain(android.view.View,int)
  d        public obtain(java.lang.Object)
  d        public setBoundsInScreen(java.lang.Object,android.graphics.Rect)
  d        public findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String)
  e        public isFocusable(java.lang.Object)
  e        public addChild(java.lang.Object,android.view.View,int)
  e        public setClickable(java.lang.Object,boolean)
  e        public setContentDescription(java.lang.Object,java.lang.CharSequence)
  eval__   public getCollectionItemColumnIndex(java.lang.Object)
  eval_a   public isSelected(java.lang.Object)
  eval_b   public getCollectionItemRowIndex(java.lang.Object)
  eval_c   public isClickable(java.lang.Object)
  eval_c   public setScrollable(java.lang.Object,boolean)
  eval_d   public isCollectionInfoHierarchical(java.lang.Object)
  eval_d   public setCheckable(java.lang.Object,boolean)
  eval_e   public getViewIdResourceName(java.lang.Object)
  eval_f   public recycle(java.lang.Object)
  eval_g   public getText(java.lang.Object)
  eval_h   public getCollectionItemColumnSpan(java.lang.Object)
  eval_h   public getBoundsInScreen(java.lang.Object,android.graphics.Rect)
  eval_h   public setAccessibilityFocused(java.lang.Object,boolean)
  eval_i   public getMovementGranularities(java.lang.Object)
  eval_j   public getAccessibilityActionLabel(java.lang.Object)
  eval_k   public getCollectionItemInfo(java.lang.Object)
  eval_l   public isCheckable(java.lang.Object)
  eval_m   public getRangeInfo(java.lang.Object)
  eval_m   public setTraversalBefore(java.lang.Object,android.view.View)
  eval_m   public setSource(java.lang.Object,android.view.View,int)
  eval_n   public isContentInvalid(java.lang.Object)
  eval_o   public getCollectionInfo(java.lang.Object)
  eval_p   public isCollectionItemHeading(java.lang.Object)
  eval_r   public isLongClickable(java.lang.Object)
  eval_r   public setLongClickable(java.lang.Object,boolean)
  eval_s   public getCollectionInfoColumnCount(java.lang.Object)
  eval_t   public isPassword(java.lang.Object)
  eval_u   public getPackageName(java.lang.Object)
  eval_v   public isAccessibilityFocused(java.lang.Object)
  eval_x   public getLiveRegion(java.lang.Object)
  eval_z   public isEnabled(java.lang.Object)
  f        public getTraversalAfter(java.lang.Object)
  g        public setTraversalBefore(java.lang.Object,android.view.View,int)
  g        public setMovementGranularities(java.lang.Object,int)
  h        public isVisibleToUser(java.lang.Object)
  h        public setParent(java.lang.Object,android.view.View)
  h        public focusSearch(java.lang.Object,int)
  i        public isCollectionItemSelected(java.lang.Object)
  j        public getParent(java.lang.Object)
  j        public setSource(java.lang.Object,android.view.View)
  j        public setCollectionInfo(java.lang.Object,java.lang.Object)
  k        public addAction(java.lang.Object,int)
  k        public setViewIdResourceName(java.lang.Object,java.lang.String)
  l        public getWindowId(java.lang.Object)
  l        public setText(java.lang.Object,java.lang.CharSequence)
  m        public getBoundsInParent(java.lang.Object,android.graphics.Rect)
  m        public setSelected(java.lang.Object,boolean)
  n        public getCollectionInfoRowCount(java.lang.Object)
  n        public setTraversalAfter(java.lang.Object,android.view.View,int)
  n        public setEnabled(java.lang.Object,boolean)
  o        public getActions(java.lang.Object)
  p        public obtain(android.view.View)
  p        public setParent(java.lang.Object,android.view.View,int)
  q        public obtainCollectionItemInfo(int,int,int,int,boolean,boolean)
  q        public setChecked(java.lang.Object,boolean)
  q        public setError(java.lang.Object,java.lang.CharSequence)
  r        public getActionList(java.lang.Object)
  r        public setBoundsInParent(java.lang.Object,android.graphics.Rect)
  r        public setContentInvalid(java.lang.Object,boolean)
  r        public addAction(java.lang.Object,java.lang.Object)
  s        public getChildCount(java.lang.Object)
  t        public isChecked(java.lang.Object)
  t        public addChild(java.lang.Object,android.view.View)
  u        public getTraversalBefore(java.lang.Object)
  u        public performAction(java.lang.Object,int,android.os.Bundle)
  u        public setCollectionItemInfo(java.lang.Object,java.lang.Object)
  v        public getAccessibilityActionId(java.lang.Object)
  v        public performAction(java.lang.Object,int)
  w        public newAccessibilityAction(int,java.lang.CharSequence)
  w        public isScrollable(java.lang.Object)
  x        public getContentDescription(java.lang.Object)
  x        public setLabelFor(java.lang.Object,android.view.View,int)
  y        public obtainCollectionInfo(int,int,boolean,int)
  y        public isFocused(java.lang.Object)
  y        public setFocusable(java.lang.Object,boolean)
  y        public setLiveRegion(java.lang.Object,int)
  y        public setClassName(java.lang.Object,java.lang.CharSequence)
  z        public getError(java.lang.Object)
  z        public setLabelFor(java.lang.Object,android.view.View)
  z        public setPassword(java.lang.Object,boolean)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat   (be.brunoparmentier.apkshare.eval_e3$m)
===============================================================================
  e    public getRowCount()
  t    public isHierarchical()
  t    public static obtain(int,int,boolean,int)
  x    public getColumnCount()

android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat       (be.brunoparmentier.apkshare.eval_e3$eval_y)
===============================================================================
  c    public isHeading()
  d    public getRowSpan()
  g    static access$300(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat)
  l    public getColumnIndex()
  n    public static obtain(int,int,int,int,boolean,boolean)
  v    public getColumnSpan()
  x    public isSelected()
  y    public getRowIndex()

android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$NullPointerException   (be.brunoparmentier.apkshare.eval_ua)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat        (be.brunoparmentier.apkshare.eval_e3$s)
===============================================================================
  f    public getCurrent()
  g    public getMin()
  u    public getMax()
  z    public getType()

android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21   (be.brunoparmentier.apkshare.eval_p5)
===============================================================================
  c        static addAction(java.lang.Object,java.lang.Object)
  eval_e   static newAccessibilityAction(int,java.lang.CharSequence)
  g        static getAccessibilityActionLabel(java.lang.Object)
  l        public static getError(java.lang.Object)
  q        public static setLabelFor(java.lang.Object,android.view.View)
  r        static getAccessibilityActionId(java.lang.Object)
  x        public static obtainCollectionItemInfo(int,int,int,int,boolean,boolean)
  x        public static setLabelFor(java.lang.Object,android.view.View,int)
  x        public static setError(java.lang.Object,java.lang.CharSequence)
  y        public static obtainCollectionInfo(int,int,boolean,int)
  z        static getActionList(java.lang.Object)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21$CollectionItemInfo        (be.brunoparmentier.apkshare.eval_p5$q)
===============================================================================
  v    public static isSelected(java.lang.Object)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21$NullPointerException      (be.brunoparmentier.apkshare.eval_dv)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi22   (be.brunoparmentier.apkshare.eval_hy)
===============================================================================
  eval_g   public static setTraversalBefore(java.lang.Object,android.view.View,int)
  f        public static getTraversalAfter(java.lang.Object)
  j        public static setTraversalAfter(java.lang.Object,android.view.View,int)
  l        public static setTraversalAfter(java.lang.Object,android.view.View)
  o        public static getTraversalBefore(java.lang.Object)
  u        public static setTraversalBefore(java.lang.Object,android.view.View)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi22$NullPointerException      (be.brunoparmentier.apkshare.eval_f7)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs     (be.brunoparmentier.apkshare.eval_rh)
===============================================================================
  a        public static getActions(java.lang.Object)
  b        public static setParent(java.lang.Object,android.view.View)
  c        public static getBoundsInParent(java.lang.Object,android.graphics.Rect)
  c        public static setFocusable(java.lang.Object,boolean)
  d        public static obtain(android.view.View)
  e        public static obtain(java.lang.Object)
  e        public static setChecked(java.lang.Object,boolean)
  eval_b   public static getPackageName(java.lang.Object)
  eval_h   public static setSelected(java.lang.Object,boolean)
  eval_j   public static isClickable(java.lang.Object)
  eval_k   public static isEnabled(java.lang.Object)
  eval_n   public static isPassword(java.lang.Object)
  eval_q   public static isFocusable(java.lang.Object)
  eval_t   public static recycle(java.lang.Object)
  eval_v   public static isChecked(java.lang.Object)
  eval_w   public static performAction(java.lang.Object,int)
  f        public static isScrollable(java.lang.Object)
  f        public static setEnabled(java.lang.Object,boolean)
  g        public static isSelected(java.lang.Object)
  h        public static setText(java.lang.Object,java.lang.CharSequence)
  i        public static getContentDescription(java.lang.Object)
  i        public static addAction(java.lang.Object,int)
  j        public static addChild(java.lang.Object,android.view.View)
  j        public static setClickable(java.lang.Object,boolean)
  k        public static setPassword(java.lang.Object,boolean)
  l        public static isLongClickable(java.lang.Object)
  m        public static setBoundsInParent(java.lang.Object,android.graphics.Rect)
  m        public static setContentDescription(java.lang.Object,java.lang.CharSequence)
  n        public static getClassName(java.lang.Object)
  n        public static findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String)
  o        public static getParent(java.lang.Object)
  p        public static setCheckable(java.lang.Object,boolean)
  q        public static isCheckable(java.lang.Object)
  r        public static obtain()
  r        public static getText(java.lang.Object)
  r        public static setFocused(java.lang.Object,boolean)
  r        public static getChild(java.lang.Object,int)
  s        public static setClassName(java.lang.Object,java.lang.CharSequence)
  u        public static setScrollable(java.lang.Object,boolean)
  u        public static setPackageName(java.lang.Object,java.lang.CharSequence)
  v        public static isFocused(java.lang.Object)
  v        public static getBoundsInScreen(java.lang.Object,android.graphics.Rect)
  w        public static setBoundsInScreen(java.lang.Object,android.graphics.Rect)
  x        public static getWindowId(java.lang.Object)
  y        public static setLongClickable(java.lang.Object,boolean)
  z        public static getChildCount(java.lang.Object)
  z        public static setSource(java.lang.Object,android.view.View)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs$IOException (be.brunoparmentier.apkshare.eval_g6)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean       (be.brunoparmentier.apkshare.eval_nd)
===============================================================================
  b    public static isAccessibilityFocused(java.lang.Object)
  c    public static getMovementGranularities(java.lang.Object)
  f    public static focusSearch(java.lang.Object,int)
  j    public static isVisibleToUser(java.lang.Object)
  j    public static findFocus(java.lang.Object,int)
  j    public static performAction(java.lang.Object,int,android.os.Bundle)
  m    public static setAccesibilityFocused(java.lang.Object,boolean)
  o    public static setSource(java.lang.Object,android.view.View,int)
  p    public static obtain(android.view.View,int)
  r    public static setMovementGranularities(java.lang.Object,int)
  t    public static setParent(java.lang.Object,android.view.View,int)
  t    public static setVisibleToUser(java.lang.Object,boolean)
  u    public static addChild(java.lang.Object,android.view.View,int)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean$Exception     (be.brunoparmentier.apkshare.eval_eq)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2    (be.brunoparmentier.apkshare.eval_qu)
===============================================================================
  g    public static getViewIdResourceName(java.lang.Object)
  n    public static setViewIdResourceName(java.lang.Object,java.lang.String)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2$ParseException     (be.brunoparmentier.apkshare.eval_g1)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat  (be.brunoparmentier.apkshare.eval_zd)
===============================================================================
  b        static setLiveRegion(java.lang.Object,int)
  d        static getRangeInfo(java.lang.Object)
  e        public static setCollectionInfo(java.lang.Object,java.lang.Object)
  eval_w   static getLiveRegion(java.lang.Object)
  f        static getCollectionInfo(java.lang.Object)
  g        static getCollectionItemInfo(java.lang.Object)
  i        public static obtainCollectionInfo(int,int,boolean,int)
  n        public static isContentInvalid(java.lang.Object)
  s        public static obtainCollectionItemInfo(int,int,int,int,boolean)
  u        public static setContentInvalid(java.lang.Object,boolean)
  u        public static setCollectionItemInfo(java.lang.Object,java.lang.Object)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$ArrayOutOfBoundsException        (be.brunoparmentier.apkshare.eval_z9)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionInfo   (be.brunoparmentier.apkshare.eval_zd$a)
===============================================================================
  a        static isHierarchical(java.lang.Object)
  eval_g   static getRowCount(java.lang.Object)
  q        static getColumnCount(java.lang.Object)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionItemInfo       (be.brunoparmentier.apkshare.eval_zd$n)
===============================================================================
  eval_l   static getColumnSpan(java.lang.Object)
  g        static getColumnIndex(java.lang.Object)
  n        static getRowIndex(java.lang.Object)
  v        static getRowSpan(java.lang.Object)
  y        static isHeading(java.lang.Object)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$RangeInfo        (be.brunoparmentier.apkshare.eval_zd$k)
===============================================================================
  a    static getCurrent(java.lang.Object)
  e    static getType(java.lang.Object)
  k    static getMin(java.lang.Object)
  s    static getMax(java.lang.Object)

android.support.v4.view.accessibility.AccessibilityNodeProviderCompat    (be.brunoparmentier.apkshare.eval_qy)
===============================================================================
  c    public performAction(int,int,android.os.Bundle)
  j    public findFocus(int)
  t    public createAccessibilityNodeInfo(int)
  v    public getProvider()
  z    public findAccessibilityNodeInfosByText(java.lang.String,int)

android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl      (be.brunoparmentier.apkshare.eval_qy$w)
===============================================================================
  i    public abstract newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat)

android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl     (be.brunoparmentier.apkshare.eval_qy$u)
===============================================================================
  i    public newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat)

android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1   (be.brunoparmentier.apkshare.eval_qy$u$1)
===============================================================================
  i    public performAction(int,int,android.os.Bundle)
  u    public findAccessibilityNodeInfosByText(java.lang.String,int)
  y    public createAccessibilityNodeInfo(int)

android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$IOException (be.brunoparmentier.apkshare.eval_do)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl        (be.brunoparmentier.apkshare.eval_qy$h)
===============================================================================
  i    public newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat)

android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1      (be.brunoparmentier.apkshare.eval_qy$h$1)
===============================================================================
  j    public createAccessibilityNodeInfo(int)
  o    public findAccessibilityNodeInfosByText(java.lang.String,int)
  q    public performAction(int,int,android.os.Bundle)
  y    public findFocus(int)

android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$NullPointerException   (be.brunoparmentier.apkshare.eval_ax)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl  (be.brunoparmentier.apkshare.eval_qy$l)
===============================================================================
  i    public newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat)

android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$Exception  (be.brunoparmentier.apkshare.eval_w_)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean   (be.brunoparmentier.apkshare.eval_ew)
===============================================================================
  g    public static newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge)

android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 (be.brunoparmentier.apkshare.eval_ew$1)
===============================================================================
  createAccessibilityNodeInfo      public createAccessibilityNodeInfo(int)
  findAccessibilityNodeInfosByText public findAccessibilityNodeInfosByText(java.lang.String,int)
  performAction                    public performAction(int,int,android.os.Bundle)

android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge       (be.brunoparmentier.apkshare.eval_ew$v)
===============================================================================
  i    public abstract performAction(int,int,android.os.Bundle)
  u    public abstract findAccessibilityNodeInfosByText(java.lang.String,int)
  y    public abstract createAccessibilityNodeInfo(int)

android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$IOException       (be.brunoparmentier.apkshare.eval_uj)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat      (be.brunoparmentier.apkshare.eval_zz)
===============================================================================
  z    public static newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge)

android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1    (be.brunoparmentier.apkshare.eval_zz$1)
===============================================================================
  createAccessibilityNodeInfo      public createAccessibilityNodeInfo(int)
  findAccessibilityNodeInfosByText public findAccessibilityNodeInfosByText(java.lang.String,int)
  findFocus                        public findFocus(int)
  performAction                    public performAction(int,int,android.os.Bundle)

android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge  (be.brunoparmentier.apkshare.eval_zz$j)
===============================================================================
  j    public abstract createAccessibilityNodeInfo(int)
  o    public abstract findAccessibilityNodeInfosByText(java.lang.String,int)
  q    public abstract performAction(int,int,android.os.Bundle)
  y    public abstract findFocus(int)

android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$NullPointerException (be.brunoparmentier.apkshare.eval_kw)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityRecordCompat  (be.brunoparmentier.apkshare.eval_en)
===============================================================================
  a        public getItemCount()
  a        public setFromIndex(int)
  d        public getSource()
  e        public getAddedCount()
  eval_c   public setEnabled(boolean)
  eval_e   public getMaxScrollX()
  eval_h   public isScrollable()
  eval_m   public isEnabled()
  eval_p   public getBeforeText()
  eval_r   public getParcelableData()
  eval_u   public getScrollX()
  eval_u   public setScrollY(int)
  eval_v   public getClassName()
  eval_x   public setMaxScrollX(int)
  eval_z   public getCurrentItemIndex()
  f        public setToIndex(int)
  g        public getFromIndex()
  g        public setBeforeText(java.lang.CharSequence)
  h        public getContentDescription()
  i        public isFullScreen()
  i        public setParcelableData(android.os.Parcelable)
  i        public setScrollX(int)
  j        public getWindowId()
  j        public setScrollable(boolean)
  k        public getMaxScrollY()
  k        public setAddedCount(int)
  k        public setClassName(java.lang.CharSequence)
  m        public setSource(android.view.View,int)
  n        public static obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat)
  o        public isChecked()
  o        public setCurrentItemIndex(int)
  p        public getImpl()
  p        public setContentDescription(java.lang.CharSequence)
  q        public isPassword()
  q        public setChecked(boolean)
  q        public setRemovedCount(int)
  r        public getRemovedCount()
  r        public setFullScreen(boolean)
  r        public setMaxScrollY(int)
  s        public recycle()
  t        public setPassword(boolean)
  t        public setItemCount(int)
  v        public static obtain()
  w        public getToIndex()
  w        public setSource(android.view.View)
  x        public getText()
  y        public getScrollY()
  equals   public equals(java.lang.Object)
  hashCode public hashCode()

android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl       (be.brunoparmentier.apkshare.eval_en$d)
===============================================================================
  a        public getItemCount(java.lang.Object)
  a        public setRemovedCount(java.lang.Object,int)
  b        public getCurrentItemIndex(java.lang.Object)
  d        public obtain()
  d        public recycle(java.lang.Object)
  d        public setSource(java.lang.Object,android.view.View)
  e        public getFromIndex(java.lang.Object)
  eval_c   public isEnabled(java.lang.Object)
  eval_f   public getBeforeText(java.lang.Object)
  eval_k   public getScrollY(java.lang.Object)
  eval_l   public getClassName(java.lang.Object)
  eval_m   public setToIndex(java.lang.Object,int)
  eval_z   public setItemCount(java.lang.Object,int)
  g        public setParcelableData(java.lang.Object,android.os.Parcelable)
  h        public getToIndex(java.lang.Object)
  h        public setScrollY(java.lang.Object,int)
  i        public setEnabled(java.lang.Object,boolean)
  j        public getRemovedCount(java.lang.Object)
  k        public isPassword(java.lang.Object)
  k        public setScrollX(java.lang.Object,int)
  l        public getScrollX(java.lang.Object)
  l        public setScrollable(java.lang.Object,boolean)
  l        public setBeforeText(java.lang.Object,java.lang.CharSequence)
  m        public isFullScreen(java.lang.Object)
  m        public setPassword(java.lang.Object,boolean)
  n        public isScrollable(java.lang.Object)
  o        public getAddedCount(java.lang.Object)
  q        public isChecked(java.lang.Object)
  r        public getText(java.lang.Object)
  s        public getParcelableData(java.lang.Object)
  s        public setClassName(java.lang.Object,java.lang.CharSequence)
  t        public getSource(java.lang.Object)
  u        public obtain(java.lang.Object)
  v        public setFullScreen(java.lang.Object,boolean)
  v        public setFromIndex(java.lang.Object,int)
  w        public getContentDescription(java.lang.Object)
  w        public setChecked(java.lang.Object,boolean)
  w        public setAddedCount(java.lang.Object,int)
  x        public setCurrentItemIndex(java.lang.Object,int)
  y        public getWindowId(java.lang.Object)
  z        public setContentDescription(java.lang.Object,java.lang.CharSequence)

android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl    (be.brunoparmentier.apkshare.eval_en$l)
===============================================================================
  c        public getMaxScrollY(java.lang.Object)
  eval_m   public getMaxScrollX(java.lang.Object)
  m        public setMaxScrollY(java.lang.Object,int)
  p        public setMaxScrollX(java.lang.Object,int)

android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl  (be.brunoparmentier.apkshare.eval_en$h)
===============================================================================
  a        public abstract getItemCount(java.lang.Object)
  a        public abstract setRemovedCount(java.lang.Object,int)
  b        public abstract getCurrentItemIndex(java.lang.Object)
  c        public abstract getMaxScrollY(java.lang.Object)
  d        public abstract obtain()
  d        public abstract recycle(java.lang.Object)
  d        public abstract setSource(java.lang.Object,android.view.View)
  e        public abstract getFromIndex(java.lang.Object)
  eval_c   public abstract isEnabled(java.lang.Object)
  eval_f   public abstract getBeforeText(java.lang.Object)
  eval_k   public abstract getScrollY(java.lang.Object)
  eval_l   public abstract getClassName(java.lang.Object)
  eval_m   public abstract getMaxScrollX(java.lang.Object)
  eval_m   public abstract setToIndex(java.lang.Object,int)
  eval_z   public abstract setItemCount(java.lang.Object,int)
  g        public abstract setParcelableData(java.lang.Object,android.os.Parcelable)
  h        public abstract getToIndex(java.lang.Object)
  h        public abstract setScrollY(java.lang.Object,int)
  i        public abstract setEnabled(java.lang.Object,boolean)
  j        public abstract getRemovedCount(java.lang.Object)
  k        public abstract isPassword(java.lang.Object)
  k        public abstract setScrollX(java.lang.Object,int)
  l        public abstract getScrollX(java.lang.Object)
  l        public abstract setScrollable(java.lang.Object,boolean)
  l        public abstract setBeforeText(java.lang.Object,java.lang.CharSequence)
  m        public abstract isFullScreen(java.lang.Object)
  m        public abstract setPassword(java.lang.Object,boolean)
  m        public abstract setMaxScrollY(java.lang.Object,int)
  n        public abstract isScrollable(java.lang.Object)
  o        public abstract getAddedCount(java.lang.Object)
  p        public abstract setMaxScrollX(java.lang.Object,int)
  q        public abstract isChecked(java.lang.Object)
  r        public abstract getText(java.lang.Object)
  s        public abstract getParcelableData(java.lang.Object)
  s        public abstract setClassName(java.lang.Object,java.lang.CharSequence)
  t        public abstract getSource(java.lang.Object)
  t        public abstract setSource(java.lang.Object,android.view.View,int)
  u        public abstract obtain(java.lang.Object)
  v        public abstract setFullScreen(java.lang.Object,boolean)
  v        public abstract setFromIndex(java.lang.Object,int)
  w        public abstract getContentDescription(java.lang.Object)
  w        public abstract setChecked(java.lang.Object,boolean)
  w        public abstract setAddedCount(java.lang.Object,int)
  x        public abstract setCurrentItemIndex(java.lang.Object,int)
  y        public abstract getWindowId(java.lang.Object)
  z        public abstract setContentDescription(java.lang.Object,java.lang.CharSequence)

android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl (be.brunoparmentier.apkshare.eval_en$m)
===============================================================================
  t    public setSource(java.lang.Object,android.view.View,int)

android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl      (be.brunoparmentier.apkshare.eval_en$w)
===============================================================================
  a        public getItemCount(java.lang.Object)
  a        public setRemovedCount(java.lang.Object,int)
  b        public getCurrentItemIndex(java.lang.Object)
  c        public getMaxScrollY(java.lang.Object)
  d        public obtain()
  d        public recycle(java.lang.Object)
  d        public setSource(java.lang.Object,android.view.View)
  e        public getFromIndex(java.lang.Object)
  eval_c   public isEnabled(java.lang.Object)
  eval_f   public getBeforeText(java.lang.Object)
  eval_k   public getScrollY(java.lang.Object)
  eval_l   public getClassName(java.lang.Object)
  eval_m   public getMaxScrollX(java.lang.Object)
  eval_m   public setToIndex(java.lang.Object,int)
  eval_z   public setItemCount(java.lang.Object,int)
  g        public setParcelableData(java.lang.Object,android.os.Parcelable)
  h        public getToIndex(java.lang.Object)
  h        public setScrollY(java.lang.Object,int)
  i        public setEnabled(java.lang.Object,boolean)
  j        public getRemovedCount(java.lang.Object)
  k        public isPassword(java.lang.Object)
  k        public setScrollX(java.lang.Object,int)
  l        public getScrollX(java.lang.Object)
  l        public setScrollable(java.lang.Object,boolean)
  l        public setBeforeText(java.lang.Object,java.lang.CharSequence)
  m        public isFullScreen(java.lang.Object)
  m        public setPassword(java.lang.Object,boolean)
  m        public setMaxScrollY(java.lang.Object,int)
  n        public isScrollable(java.lang.Object)
  o        public getAddedCount(java.lang.Object)
  p        public setMaxScrollX(java.lang.Object,int)
  q        public isChecked(java.lang.Object)
  r        public getText(java.lang.Object)
  s        public getParcelableData(java.lang.Object)
  s        public setClassName(java.lang.Object,java.lang.CharSequence)
  t        public getSource(java.lang.Object)
  t        public setSource(java.lang.Object,android.view.View,int)
  u        public obtain(java.lang.Object)
  v        public setFullScreen(java.lang.Object,boolean)
  v        public setFromIndex(java.lang.Object,int)
  w        public getContentDescription(java.lang.Object)
  w        public setChecked(java.lang.Object,boolean)
  w        public setAddedCount(java.lang.Object,int)
  x        public setCurrentItemIndex(java.lang.Object,int)
  y        public getWindowId(java.lang.Object)
  z        public setContentDescription(java.lang.Object,java.lang.CharSequence)

android.support.v4.view.accessibility.AccessibilityRecordCompat$IOException      (be.brunoparmentier.apkshare.eval_xg)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityRecordCompatIcs       (be.brunoparmentier.apkshare.eval_wg)
===============================================================================
  a        public static setScrollY(java.lang.Object,int)
  b        public static setEnabled(java.lang.Object,boolean)
  b        public static setClassName(java.lang.Object,java.lang.CharSequence)
  c        public static getRemovedCount(java.lang.Object)
  d        public static setAddedCount(java.lang.Object,int)
  eval__   public static getFromIndex(java.lang.Object)
  eval_c   public static getSource(java.lang.Object)
  eval_f   public static getBeforeText(java.lang.Object)
  eval_i   public static isChecked(java.lang.Object)
  eval_s   public static isScrollable(java.lang.Object)
  eval_t   public static getWindowId(java.lang.Object)
  eval_u   public static isEnabled(java.lang.Object)
  eval_v   public static isFullScreen(java.lang.Object)
  eval_y   public static isPassword(java.lang.Object)
  eval_y   public static setCurrentItemIndex(java.lang.Object,int)
  eval_z   public static getScrollY(java.lang.Object)
  f        public static getAddedCount(java.lang.Object)
  f        public static setPassword(java.lang.Object,boolean)
  f        public static setToIndex(java.lang.Object,int)
  g        public static setFromIndex(java.lang.Object,int)
  h        public static obtain(java.lang.Object)
  h        public static setScrollX(java.lang.Object,int)
  i        public static setItemCount(java.lang.Object,int)
  j        public static getItemCount(java.lang.Object)
  j        public static setChecked(java.lang.Object,boolean)
  k        public static getClassName(java.lang.Object)
  l        public static getText(java.lang.Object)
  m        public static obtain()
  m        public static setScrollable(java.lang.Object,boolean)
  n        public static getParcelableData(java.lang.Object)
  r        public static getCurrentItemIndex(java.lang.Object)
  t        public static getContentDescription(java.lang.Object)
  u        public static recycle(java.lang.Object)
  u        public static setFullScreen(java.lang.Object,boolean)
  v        public static setRemovedCount(java.lang.Object,int)
  v        public static setBeforeText(java.lang.Object,java.lang.CharSequence)
  w        public static setSource(java.lang.Object,android.view.View)
  y        public static getScrollX(java.lang.Object)
  y        public static setContentDescription(java.lang.Object,java.lang.CharSequence)
  z        public static getToIndex(java.lang.Object)
  z        public static setParcelableData(java.lang.Object,android.os.Parcelable)

android.support.v4.view.accessibility.AccessibilityRecordCompatIcs$ArrayOutOfBoundsException     (be.brunoparmentier.apkshare.eval_q8)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1    (be.brunoparmentier.apkshare.eval_ak)
===============================================================================
  d    public static getMaxScrollY(java.lang.Object)
  f    public static getMaxScrollX(java.lang.Object)
  l    public static setMaxScrollX(java.lang.Object,int)
  y    public static setMaxScrollY(java.lang.Object,int)

android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1$Exception  (be.brunoparmentier.apkshare.eval_ev)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean (be.brunoparmentier.apkshare.eval_qn)
===============================================================================
  o    public static setSource(java.lang.Object,android.view.View,int)

android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean$ParseException  (be.brunoparmentier.apkshare.eval_aa)
===============================================================================
  No methods

android.support.v4.view.animation.FastOutLinearInInterpolator    (be.brunoparmentier.apkshare.eval_r8)
===============================================================================
  getInterpolation public volatile getInterpolation(float)

android.support.v4.view.animation.FastOutLinearInInterpolator$ArrayOutOfBoundsException  (be.brunoparmentier.apkshare.eval_d_)
===============================================================================
  No methods

android.support.v4.view.animation.FastOutSlowInInterpolator      (be.brunoparmentier.apkshare.eval_vo)
===============================================================================
  getInterpolation public volatile getInterpolation(float)

android.support.v4.view.animation.FastOutSlowInInterpolator$Exception    (be.brunoparmentier.apkshare.eval_t8)
===============================================================================
  No methods

android.support.v4.view.animation.LinearOutSlowInInterpolator    (be.brunoparmentier.apkshare.eval_bc)
===============================================================================
  getInterpolation public volatile getInterpolation(float)

android.support.v4.view.animation.LinearOutSlowInInterpolator$ArrayOutOfBoundsException  (be.brunoparmentier.apkshare.eval_uo)
===============================================================================
  No methods

android.support.v4.view.animation.LookupTableInterpolator        (be.brunoparmentier.apkshare.eval_vc)
===============================================================================
  getInterpolation public getInterpolation(float)

android.support.v4.view.animation.LookupTableInterpolator$ParseException (be.brunoparmentier.apkshare.eval_r6)
===============================================================================
  No methods

android.support.v4.view.animation.PathInterpolatorCompat (be.brunoparmentier.apkshare.eval_zu)
===============================================================================
  r    public static create(android.graphics.Path)
  u    public static create(float,float)
  z    public static create(float,float,float,float)

android.support.v4.view.animation.PathInterpolatorCompat$ArrayOutOfBoundsException       (be.brunoparmentier.apkshare.eval_dn)
===============================================================================
  No methods

android.support.v4.view.animation.PathInterpolatorCompatApi21    (be.brunoparmentier.apkshare.eval_qh)
===============================================================================
  c    public static create(float,float)
  q    public static create(float,float,float,float)
  w    public static create(android.graphics.Path)

android.support.v4.view.animation.PathInterpolatorCompatApi21$ArrayOutOfBoundsException  (be.brunoparmentier.apkshare.eval_lx)
===============================================================================
  No methods

android.support.v4.view.animation.PathInterpolatorCompatBase     (be.brunoparmentier.apkshare.eval_zi)
===============================================================================
  a    public static create(float,float,float,float)
  e    public static create(float,float)
  y    public static create(android.graphics.Path)

android.support.v4.view.animation.PathInterpolatorCompatBase$NullPointerException        (be.brunoparmentier.apkshare.eval_lb)
===============================================================================
  No methods

android.support.v4.view.animation.PathInterpolatorDonut  (be.brunoparmentier.apkshare.eval_ms)
===============================================================================
  eval_r           private static createQuad(float,float)
  n                private static createCubic(float,float,float,float)
  getInterpolation public getInterpolation(float)

android.support.v4.view.animation.PathInterpolatorDonut$NullPointerException     (be.brunoparmentier.apkshare.eval_zj)
===============================================================================
  No methods

android.support.v4.widget.AutoScrollHelper       (be.brunoparmentier.apkshare.eval_l0)
===============================================================================
  a        static access$400(android.support.v4.widget.AutoScrollHelper)
  a        private getEdgeValue(float,float,float,float)
  b        private startAnimating()
  d        static access$500(android.support.v4.widget.AutoScrollHelper)
  d        public abstract canTargetScrollVertically(int)
  eval_d   public abstract canTargetScrollHorizontally(int)
  eval_h   static access$102(android.support.v4.widget.AutoScrollHelper,boolean)
  f        private shouldAnimate()
  g        static access$700(android.support.v4.widget.AutoScrollHelper)
  g        public setRampUpDuration(int)
  g        public abstract scrollTargetBy(int,int)
  i        static access$300(android.support.v4.widget.AutoScrollHelper)
  i        public setMaximumVelocity(float,float)
  j        static access$200(android.support.v4.widget.AutoScrollHelper)
  j        public setEnabled(boolean)
  k        public setEdgeType(int)
  l        static access$502(android.support.v4.widget.AutoScrollHelper,boolean)
  m        private requestStop()
  m        static access$800(int,int,int)
  n        public isEnabled()
  n        static access$600(android.support.v4.widget.AutoScrollHelper)
  n        private computeTargetVelocity(int,float,float,float)
  o        public isExclusive()
  q        public setMinimumVelocity(float,float)
  r        private cancelTargetTouch()
  r        static access$202(android.support.v4.widget.AutoScrollHelper,boolean)
  s        public setMaximumEdges(float,float)
  u        private constrainEdgeValue(float,float)
  v        public setExclusive(boolean)
  v        public setActivationDelay(int)
  w        public setRelativeVelocity(float,float)
  w        private static constrain(float,float,float)
  w        public setRampDownDuration(int)
  x        public setRelativeEdges(float,float)
  y        static access$100(android.support.v4.widget.AutoScrollHelper)
  z        static access$900(float,float,float)
  z        private static constrain(int,int,int)
  onTouch  public onTouch(android.view.View,android.view.MotionEvent)

android.support.v4.widget.AutoScrollHelper$1     (be.brunoparmentier.apkshare.eval_l0$1)
===============================================================================
  No methods

android.support.v4.widget.AutoScrollHelper$ClampedScroller       (be.brunoparmentier.apkshare.eval_l0$b)
===============================================================================
  c        public getDeltaY()
  eval_m   public setRampDownDuration(int)
  eval_x   public getVerticalDirection()
  f        public getDeltaX()
  j        public start()
  j        public setRampUpDuration(int)
  k        private getValueAt(long)
  r        public getHorizontalDirection()
  s        public isFinished()
  u        public requestStop()
  y        public computeScrollDelta()
  z        private interpolateValue(float)
  z        public setTargetVelocity(float,float)

android.support.v4.widget.AutoScrollHelper$ParseException        (be.brunoparmentier.apkshare.eval_he)
===============================================================================
  No methods

android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable       (be.brunoparmentier.apkshare.eval_l0$m)
===============================================================================
  run  public run()

android.support.v4.widget.CircleImageView        (be.brunoparmentier.apkshare.eval_nt)
===============================================================================
  q                    static access$000(android.support.v4.widget.CircleImageView)
  r                    public setAnimationListener(android.view.animation.Animation$AnimationListener)
  s                    public setBackgroundColorRes(int)
  v                    private elevationSupported()
  v                    static access$002(android.support.v4.widget.CircleImageView,int)
  onAnimationEnd       public onAnimationEnd()
  onAnimationStart     public onAnimationStart()
  onMeasure            protected onMeasure(int,int)
  setBackgroundColor   public setBackgroundColor(int)

android.support.v4.widget.CircleImageView$ArrayOutOfBoundsException      (be.brunoparmentier.apkshare.eval_jh)
===============================================================================
  No methods

android.support.v4.widget.CircleImageView$OvalShadow     (be.brunoparmentier.apkshare.eval_nt$s)
===============================================================================
  draw public draw(android.graphics.Canvas,android.graphics.Paint)

android.support.v4.widget.ContentLoadingProgressBar      (be.brunoparmentier.apkshare.eval_oh)
===============================================================================
  eval_b               static access$202(android.support.v4.widget.ContentLoadingProgressBar,boolean)
  f                    public show()
  g                    static access$002(android.support.v4.widget.ContentLoadingProgressBar,boolean)
  n                    static access$300(android.support.v4.widget.ContentLoadingProgressBar)
  s                    private removeCallbacks()
  u                    public hide()
  x                    static access$102(android.support.v4.widget.ContentLoadingProgressBar,long)
  onAttachedToWindow   public onAttachedToWindow()
  onDetachedFromWindow public onDetachedFromWindow()

android.support.v4.widget.ContentLoadingProgressBar$1    (be.brunoparmentier.apkshare.eval_oh$1)
===============================================================================
  run  public run()

android.support.v4.widget.ContentLoadingProgressBar$2    (be.brunoparmentier.apkshare.eval_oh$2)
===============================================================================
  run  public run()

android.support.v4.widget.ContentLoadingProgressBar$ArrayOutOfBoundsException    (be.brunoparmentier.apkshare.eval_rn)
===============================================================================
  No methods

android.support.v4.widget.CursorAdapter  (be.brunoparmentier.apkshare.eval_qi)
===============================================================================
  b                protected onContentChanged()
  c                public changeCursor(android.database.Cursor)
  d                public getCursor()
  g                public abstract newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
  j                public runQueryOnBackgroundThread(java.lang.CharSequence)
  l                public newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
  n                public getFilterQueryProvider()
  n                public swapCursor(android.database.Cursor)
  o                public setFilterQueryProvider(android.widget.FilterQueryProvider)
  r                public convertToString(android.database.Cursor)
  v                init(android.content.Context,android.database.Cursor,int)
  y                protected init(android.content.Context,android.database.Cursor,boolean)
  y                public abstract bindView(android.view.View,android.content.Context,android.database.Cursor)
  getCount         public getCount()
  getDropDownView  public getDropDownView(int,android.view.View,android.view.ViewGroup)
  getFilter        public getFilter()
  getItem          public getItem(int)
  getItemId        public getItemId(int)
  getView          public getView(int,android.view.View,android.view.ViewGroup)
  hasStableIds     public hasStableIds()

android.support.v4.widget.CursorAdapter$1        (be.brunoparmentier.apkshare.eval_qi$1)
===============================================================================
  No methods

android.support.v4.widget.CursorAdapter$ChangeObserver   (be.brunoparmentier.apkshare.eval_qi$o)
===============================================================================
  deliverSelfNotifications public deliverSelfNotifications()
  onChange                 public onChange(boolean)

android.support.v4.widget.CursorAdapter$Exception        (be.brunoparmentier.apkshare.eval_si)
===============================================================================
  No methods

android.support.v4.widget.CursorAdapter$MyDataSetObserver        (be.brunoparmentier.apkshare.eval_qi$g)
===============================================================================
  onChanged        public onChanged()
  onInvalidated    public onInvalidated()

android.support.v4.widget.CursorFilter   (be.brunoparmentier.apkshare.eval_qp)
===============================================================================
  convertResultToString    public convertResultToString(java.lang.Object)
  performFiltering         protected performFiltering(java.lang.CharSequence)
  publishResults           protected publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults)

android.support.v4.widget.CursorFilter$CursorFilterClient        (be.brunoparmentier.apkshare.eval_qp$m)
===============================================================================
  c    public abstract changeCursor(android.database.Cursor)
  d    public abstract getCursor()
  j    public abstract runQueryOnBackgroundThread(java.lang.CharSequence)
  r    public abstract convertToString(android.database.Cursor)

android.support.v4.widget.CursorFilter$IOException       (be.brunoparmentier.apkshare.eval__k)
===============================================================================
  No methods

android.support.v4.widget.DrawerLayout   (be.brunoparmentier.apkshare.eval_sv)
===============================================================================
  a                                public setDrawerShadow(int,int)
  b                                getDrawerViewAbsoluteGravity(android.view.View)
  b                                public setDrawerTitle(int,java.lang.CharSequence)
  c                                public getStatusBarBackgroundDrawable()
  c                                dispatchOnDrawerClosed(android.view.View)
  c                                checkDrawerViewAbsoluteGravity(android.view.View,int)
  c                                closeDrawers(boolean)
  d                                getDrawerViewOffset(android.view.View)
  d                                public setStatusBarBackground(int)
  e                                public isDrawerVisible(int)
  eval__                           public getDrawerLockMode(int)
  eval_c                           public closeDrawers()
  eval_g                           public isDrawerOpen(int)
  eval_k                           public setStatusBarBackgroundColor(int)
  eval_m                           private static hasOpaqueBackground(android.view.View)
  eval_n                           isContentView(android.view.View)
  eval_v                           public openDrawer(android.view.View)
  eval_w                           public setDrawerLockMode(int)
  f                                static access$200()
  g                                static access$100()
  h                                public isDrawerVisible(android.view.View)
  h                                moveDrawerToOffset(android.view.View,float)
  i                                public setStatusBarBackground(android.graphics.drawable.Drawable)
  i                                static access$400(android.view.View)
  i                                findDrawerWithGravity(int)
  j                                private updateChildrenImportantForAccessibility(android.view.View,boolean)
  k                                private findVisibleDrawer()
  k                                updateDrawerState(int,int,android.view.View)
  l                                static access$300(android.support.v4.widget.DrawerLayout)
  l                                isDrawerView(android.view.View)
  m                                public openDrawer(int)
  n                                static gravityToString(int)
  o                                public getDrawerLockMode(android.view.View)
  o                                public setScrimColor(int)
  o                                public setChildInsets(java.lang.Object,boolean)
  p                                private hasVisibleDrawer()
  p                                public setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener)
  q                                cancelChildViewTouch()
  q                                public closeDrawer(android.view.View)
  r                                private static includeChildForAccessibility(android.view.View)
  r                                public setDrawerLockMode(int,int)
  s                                findOpenDrawer()
  s                                public setDrawerShadow(android.graphics.drawable.Drawable,int)
  s                                dispatchOnDrawerOpened(android.view.View)
  u                                public getDrawerTitle(int)
  v                                setDrawerViewOffset(android.view.View,float)
  v                                public setDrawerLockMode(int,android.view.View)
  y                                public closeDrawer(int)
  z                                private hasPeekingDrawer()
  z                                public isDrawerOpen(android.view.View)
  z                                dispatchOnDrawerSlide(android.view.View,float)
  addView                          public addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
  checkLayoutParams                protected checkLayoutParams(android.view.ViewGroup$LayoutParams)
  computeScroll                    public computeScroll()
  drawChild                        protected drawChild(android.graphics.Canvas,android.view.View,long)
  generateDefaultLayoutParams      protected generateDefaultLayoutParams()
  generateLayoutParams             public generateLayoutParams(android.util.AttributeSet)
  generateLayoutParams             protected generateLayoutParams(android.view.ViewGroup$LayoutParams)
  onAttachedToWindow               protected onAttachedToWindow()
  onDetachedFromWindow             protected onDetachedFromWindow()
  onDraw                           public onDraw(android.graphics.Canvas)
  onInterceptTouchEvent            public onInterceptTouchEvent(android.view.MotionEvent)
  onKeyDown                        public onKeyDown(int,android.view.KeyEvent)
  onKeyUp                          public onKeyUp(int,android.view.KeyEvent)
  onLayout                         protected onLayout(boolean,int,int,int,int)
  onMeasure                        protected onMeasure(int,int)
  onRestoreInstanceState           protected onRestoreInstanceState(android.os.Parcelable)
  onSaveInstanceState              protected onSaveInstanceState()
  onTouchEvent                     public onTouchEvent(android.view.MotionEvent)
  requestDisallowInterceptTouchEvent   public requestDisallowInterceptTouchEvent(boolean)
  requestLayout                    public requestLayout()

android.support.v4.widget.DrawerLayout$AccessibilityDelegate     (be.brunoparmentier.apkshare.eval_sv$f)
===============================================================================
  d    public dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  g    public onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
  n    public onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  u    private addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup)
  u    public onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  w    private copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)

android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate        (be.brunoparmentier.apkshare.eval_sv$q)
===============================================================================
  u    public onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)

android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl    (be.brunoparmentier.apkshare.eval_sv$n)
===============================================================================
  b    public abstract applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int)
  b    public abstract getTopInset(java.lang.Object)
  e    public abstract getDefaultStatusBarBackground(android.content.Context)
  t    public abstract dispatchChildInsets(android.view.View,java.lang.Object,int)
  y    public abstract configureApplyInsets(android.view.View)

android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplApi21       (be.brunoparmentier.apkshare.eval_sv$e)
===============================================================================
  b    public applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int)
  b    public getTopInset(java.lang.Object)
  e    public getDefaultStatusBarBackground(android.content.Context)
  t    public dispatchChildInsets(android.view.View,java.lang.Object,int)
  y    public configureApplyInsets(android.view.View)

android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplBase        (be.brunoparmentier.apkshare.eval_sv$eval_a)
===============================================================================
  b    public applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int)
  b    public getTopInset(java.lang.Object)
  e    public getDefaultStatusBarBackground(android.content.Context)
  t    public dispatchChildInsets(android.view.View,java.lang.Object,int)
  y    public configureApplyInsets(android.view.View)

android.support.v4.widget.DrawerLayout$DrawerListener    (be.brunoparmentier.apkshare.eval_sv$x)
===============================================================================
  j    public abstract onDrawerOpened(android.view.View)
  k    public abstract onDrawerSlide(android.view.View,float)
  s    public abstract onDrawerClosed(android.view.View)
  v    public abstract onDrawerStateChanged(int)

android.support.v4.widget.DrawerLayout$IOException       (be.brunoparmentier.apkshare.eval_un)
===============================================================================
  No methods

android.support.v4.widget.DrawerLayout$LayoutParams      (be.brunoparmentier.apkshare.eval_sv$eval_r)
===============================================================================
  No methods

android.support.v4.widget.DrawerLayout$SavedState        (be.brunoparmentier.apkshare.eval_sv$m)
===============================================================================
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.widget.DrawerLayout$SavedState$1      (be.brunoparmentier.apkshare.eval_sv$m$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.widget.DrawerLayout$SavedState$Exception      (be.brunoparmentier.apkshare.eval_x7)
===============================================================================
  No methods

android.support.v4.widget.DrawerLayout$SimpleDrawerListener      (be.brunoparmentier.apkshare.eval_sv$j)
===============================================================================
  j    public onDrawerOpened(android.view.View)
  k    public onDrawerSlide(android.view.View,float)
  s    public onDrawerClosed(android.view.View)
  v    public onDrawerStateChanged(int)

android.support.v4.widget.DrawerLayout$ViewDragCallback  (be.brunoparmentier.apkshare.eval_sv$z)
===============================================================================
  a        public onViewReleased(android.view.View,float,float)
  b        public setDragger(android.support.v4.widget.ViewDragHelper)
  d        public clampViewPositionHorizontal(android.view.View,int,int)
  eval_i   public onViewCaptured(android.view.View,int)
  f        private peekDrawer()
  f        public onEdgeLock(int)
  h        private closeOtherDrawer()
  i        public getViewHorizontalDragRange(android.view.View)
  l        public removeCallbacks()
  l        public onViewPositionChanged(android.view.View,int,int,int,int)
  q        public onViewDragStateChanged(int)
  s        public onEdgeTouched(int,int)
  t        static access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback)
  w        public clampViewPositionVertical(android.view.View,int,int)
  w        public onEdgeDragStarted(int,int)
  y        public tryCaptureView(android.view.View,int)

android.support.v4.widget.DrawerLayout$ViewDragCallback$1        (be.brunoparmentier.apkshare.eval_sv$z$1)
===============================================================================
  run  public run()

android.support.v4.widget.DrawerLayout$ViewDragCallback$NullPointerException     (be.brunoparmentier.apkshare.eval_ui)
===============================================================================
  No methods

android.support.v4.widget.DrawerLayoutCompatApi21        (be.brunoparmentier.apkshare.eval_ok)
===============================================================================
  b    public static getDefaultStatusBarBackground(android.content.Context)
  d    public static applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int)
  e    public static configureApplyInsets(android.view.View)
  e    public static getTopInset(java.lang.Object)
  f    public static dispatchChildInsets(android.view.View,java.lang.Object,int)

android.support.v4.widget.DrawerLayoutCompatApi21$Exception      (be.brunoparmentier.apkshare.eval_zn)
===============================================================================
  No methods

android.support.v4.widget.DrawerLayoutCompatApi21$InsetsListener (be.brunoparmentier.apkshare.eval_ok$o)
===============================================================================
  onApplyWindowInsets  public onApplyWindowInsets(android.view.View,android.view.WindowInsets)

android.support.v4.widget.DrawerLayoutImpl       (be.brunoparmentier.apkshare.eval_l4)
===============================================================================
  o    public abstract setChildInsets(java.lang.Object,boolean)

android.support.v4.widget.DrawerLayoutImpl$ParseException        (be.brunoparmentier.apkshare.eval_mj)
===============================================================================
  No methods

android.support.v4.widget.EdgeEffectCompat       (be.brunoparmentier.apkshare.eval_ry)
===============================================================================
  d        public onPull(float,float)
  eval_u   public onPull(float)
  i        public draw(android.graphics.Canvas)
  l        public onRelease()
  r        public setSize(int,int)
  s        public finish()
  v        public isFinished()
  w        public onAbsorb(int)

android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl    (be.brunoparmentier.apkshare.eval_ry$p)
===============================================================================
  eval_a   public onRelease(java.lang.Object)
  eval_r   public newEdgeEffect(android.content.Context)
  f        public onAbsorb(java.lang.Object,int)
  g        public setSize(java.lang.Object,int,int)
  h        public draw(java.lang.Object,android.graphics.Canvas)
  l        public isFinished(java.lang.Object)
  n        public finish(java.lang.Object)
  o        public onPull(java.lang.Object,float)
  p        public onPull(java.lang.Object,float,float)

android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl     (be.brunoparmentier.apkshare.eval_ry$s)
===============================================================================
  eval_a   public onRelease(java.lang.Object)
  eval_r   public newEdgeEffect(android.content.Context)
  f        public onAbsorb(java.lang.Object,int)
  g        public setSize(java.lang.Object,int,int)
  h        public draw(java.lang.Object,android.graphics.Canvas)
  l        public isFinished(java.lang.Object)
  n        public finish(java.lang.Object)
  o        public onPull(java.lang.Object,float)
  p        public onPull(java.lang.Object,float,float)

android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl        (be.brunoparmentier.apkshare.eval_ry$n)
===============================================================================
  eval_a   public abstract onRelease(java.lang.Object)
  eval_r   public abstract newEdgeEffect(android.content.Context)
  f        public abstract onAbsorb(java.lang.Object,int)
  g        public abstract setSize(java.lang.Object,int,int)
  h        public abstract draw(java.lang.Object,android.graphics.Canvas)
  l        public abstract isFinished(java.lang.Object)
  n        public abstract finish(java.lang.Object)
  o        public abstract onPull(java.lang.Object,float)
  p        public abstract onPull(java.lang.Object,float,float)

android.support.v4.widget.EdgeEffectCompat$EdgeEffectLollipopImpl        (be.brunoparmentier.apkshare.eval_ry$k)
===============================================================================
  p    public onPull(java.lang.Object,float,float)

android.support.v4.widget.EdgeEffectCompat$ParseException        (be.brunoparmentier.apkshare.eval_o4)
===============================================================================
  No methods

android.support.v4.widget.EdgeEffectCompatIcs    (be.brunoparmentier.apkshare.eval__7)
===============================================================================
  d    public static onRelease(java.lang.Object)
  g    public static isFinished(java.lang.Object)
  g    public static onAbsorb(java.lang.Object,int)
  j    public static onPull(java.lang.Object,float)
  k    public static newEdgeEffect(android.content.Context)
  k    public static draw(java.lang.Object,android.graphics.Canvas)
  n    public static finish(java.lang.Object)
  o    public static setSize(java.lang.Object,int,int)

android.support.v4.widget.EdgeEffectCompatIcs$NullPointerException       (be.brunoparmentier.apkshare.eval_i9)
===============================================================================
  No methods

android.support.v4.widget.EdgeEffectCompatLollipop       (be.brunoparmentier.apkshare.eval_b8)
===============================================================================
  eval_n   public static onPull(java.lang.Object,float,float)

android.support.v4.widget.EdgeEffectCompatLollipop$NullPointerException  (be.brunoparmentier.apkshare.eval_hx)
===============================================================================
  No methods

android.support.v4.widget.ExploreByTouchHelper   (be.brunoparmentier.apkshare.eval_rd)
===============================================================================
  a        static access$100(android.support.v4.widget.ExploreByTouchHelper,int)
  c        static access$200(android.support.v4.widget.ExploreByTouchHelper,int,int,android.os.Bundle)
  c        private performActionForChild(int,int,android.os.Bundle)
  e        private clearAccessibilityFocus(int)
  eval_r   private manageFocusForChild(int,int,android.os.Bundle)
  eval_z   private intersectVisibleToUser(android.graphics.Rect)
  h        public sendEventForVirtualView(int,int)
  i        public invalidateRoot()
  i        protected abstract onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent)
  i        private createEvent(int,int)
  k        private isAccessibilityFocused(int)
  l        private createEventForHost(int)
  l        protected abstract onPopulateNodeForVirtualView(int,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  l        private createEventForChild(int,int)
  m        public getAccessibilityNodeProvider(android.view.View)
  n        public getFocusedVirtualView()
  n        private createNode(int)
  q        private createNodeForChild(int)
  r        private updateHoveredVirtualView(int)
  r        protected abstract onPerformActionForVirtualView(int,int,android.os.Bundle)
  r        protected abstract getVisibleVirtualViews(java.util.List)
  s        private requestAccessibilityFocus(int)
  t        private createNodeForHost()
  t        public dispatchHoverEvent(android.view.MotionEvent)
  u        public invalidateVirtualView(int)
  u        private performActionForHost(int,android.os.Bundle)
  x        protected abstract getVirtualViewAt(float,float)
  z        private performAction(int,int,android.os.Bundle)

android.support.v4.widget.ExploreByTouchHelper$1 (be.brunoparmentier.apkshare.eval_rd$1)
===============================================================================
  No methods

android.support.v4.widget.ExploreByTouchHelper$ArrayOutOfBoundsException (be.brunoparmentier.apkshare.eval_tt)
===============================================================================
  No methods

android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider        (be.brunoparmentier.apkshare.eval_rd$z)
===============================================================================
  c    public performAction(int,int,android.os.Bundle)
  t    public createAccessibilityNodeInfo(int)

android.support.v4.widget.ListPopupWindowCompat  (be.brunoparmentier.apkshare.eval_n5)
===============================================================================
  u    public static createDragToOpenListener(java.lang.Object,android.view.View)

android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl  (be.brunoparmentier.apkshare.eval_n5$h)
===============================================================================
  r    public createDragToOpenListener(java.lang.Object,android.view.View)

android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl        (be.brunoparmentier.apkshare.eval_n5$_)
===============================================================================
  r    public createDragToOpenListener(java.lang.Object,android.view.View)

android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl      (be.brunoparmentier.apkshare.eval_n5$o)
===============================================================================
  r    public abstract createDragToOpenListener(java.lang.Object,android.view.View)

android.support.v4.widget.ListPopupWindowCompat$ParseException   (be.brunoparmentier.apkshare.eval_bw)
===============================================================================
  No methods

android.support.v4.widget.ListPopupWindowCompatKitKat    (be.brunoparmentier.apkshare.eval_h8)
===============================================================================
  j    public static createDragToOpenListener(java.lang.Object,android.view.View)

android.support.v4.widget.ListPopupWindowCompatKitKat$IOException        (be.brunoparmentier.apkshare.eval_s5)
===============================================================================
  No methods

android.support.v4.widget.ListViewAutoScrollHelper       (be.brunoparmentier.apkshare.eval_p1)
===============================================================================
  d        public canTargetScrollVertically(int)
  eval_d   public canTargetScrollHorizontally(int)
  g        public scrollTargetBy(int,int)

android.support.v4.widget.ListViewAutoScrollHelper$NullPointerException  (be.brunoparmentier.apkshare.eval_or)
===============================================================================
  No methods

android.support.v4.widget.MaterialProgressDrawable       (be.brunoparmentier.apkshare.eval_k6)
===============================================================================
  c                    public setStartEndTrim(float,float)
  e                    static access$402(android.support.v4.widget.MaterialProgressDrawable,float)
  e                    public setArrowScale(float)
  f                    public setBackgroundColor(int)
  h                    private updateRingColor(float,android.support.v4.widget.MaterialProgressDrawable$Ring)
  i                    setRotation(float)
  k                    private getRotation()
  m                    private applyFinishTranslation(float,android.support.v4.widget.MaterialProgressDrawable$Ring)
  n                    public showArrow(boolean)
  p                    private setupAnimators()
  p                    public updateSizes(int)
  q                    private setSizeParameters(double,double,double,double,float,float)
  q                    public setProgressRotation(float)
  r                    public transient setColorSchemeColors(int[])
  s                    private getMinProgressArc(android.support.v4.widget.MaterialProgressDrawable$Ring)
  t                    private evaluateColorChange(float,int,int)
  v                    static access$100(android.support.v4.widget.MaterialProgressDrawable,android.support.v4.widget.MaterialProgressDrawable$Ring)
  w                    static access$400(android.support.v4.widget.MaterialProgressDrawable)
  y                    static access$000(android.support.v4.widget.MaterialProgressDrawable,float,android.support.v4.widget.MaterialProgressDrawable$Ring)
  z                    static access$300()
  z                    static access$200(android.support.v4.widget.MaterialProgressDrawable,float,android.support.v4.widget.MaterialProgressDrawable$Ring)
  draw                 public draw(android.graphics.Canvas)
  getAlpha             public getAlpha()
  getIntrinsicHeight   public getIntrinsicHeight()
  getIntrinsicWidth    public getIntrinsicWidth()
  getOpacity           public getOpacity()
  isRunning            public isRunning()
  setAlpha             public setAlpha(int)
  setColorFilter       public setColorFilter(android.graphics.ColorFilter)
  start                public start()
  stop                 public stop()

android.support.v4.widget.MaterialProgressDrawable$1     (be.brunoparmentier.apkshare.eval_k6$1)
===============================================================================
  applyTransformation  public applyTransformation(float,android.view.animation.Transformation)

android.support.v4.widget.MaterialProgressDrawable$2     (be.brunoparmentier.apkshare.eval_k6$2)
===============================================================================
  onAnimationEnd       public onAnimationEnd(android.view.animation.Animation)
  onAnimationRepeat    public onAnimationRepeat(android.view.animation.Animation)
  onAnimationStart     public onAnimationStart(android.view.animation.Animation)

android.support.v4.widget.MaterialProgressDrawable$3     (be.brunoparmentier.apkshare.eval_k6$3)
===============================================================================
  invalidateDrawable   public invalidateDrawable(android.graphics.drawable.Drawable)
  scheduleDrawable     public scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
  unscheduleDrawable   public unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)

android.support.v4.widget.MaterialProgressDrawable$NullPointerException  (be.brunoparmentier.apkshare.eval_br)
===============================================================================
  No methods

android.support.v4.widget.MaterialProgressDrawable$ProgressDrawableSize  (be.brunoparmentier.apkshare.eval_k6$x)
===============================================================================
  No methods

android.support.v4.widget.MaterialProgressDrawable$Ring  (be.brunoparmentier.apkshare.eval_k6$h)
===============================================================================
  b        public storeOriginals()
  b        public setBackgroundColor(int)
  c        public getAlpha()
  c        public setCenterRadius(double)
  d        public getStartTrim()
  d        private drawTriangle(android.graphics.Canvas,float,float,android.graphics.Rect)
  eval_b   public getRotation()
  eval_b   public setRotation(float)
  eval_e   public setArrowScale(float)
  eval_g   public getCenterRadius()
  eval_h   public getStartingColor()
  eval_r   private getNextColorIndex()
  eval_r   public setArrowDimensions(float,float)
  eval_u   public resetOriginals()
  eval_y   public getInsets()
  h        public goToNextColor()
  i        public getNextColor()
  j        public draw(android.graphics.Canvas,android.graphics.Rect)
  j        public setColorFilter(android.graphics.ColorFilter)
  j        public setAlpha(int)
  k        public setStrokeWidth(float)
  l        public getStrokeWidth()
  l        public setColors(int[])
  m        public setShowArrow(boolean)
  p        public setStartTrim(float)
  q        public getEndTrim()
  t        private invalidateSelf()
  u        public setColor(int)
  w        public getStartingEndTrim()
  w        public setColorIndex(int)
  y        public getStartingRotation()
  y        public setEndTrim(float)
  z        public getStartingStartTrim()
  z        public setInsets(int,int)

android.support.v4.widget.NestedScrollView       (be.brunoparmentier.apkshare.eval_o8)
===============================================================================
  a                                private onSecondaryPointerUp(android.view.MotionEvent)
  a                                public setFillViewport(boolean)
  b                                private getVerticalScrollFactorCompat()
  c                                public isFillViewport()
  c                                public fullScroll(int)
  d                                public fling(int)
  d                                overScrollByCompat(int,int,int,int,int,int,int,int,boolean)
  e                                private getScrollRange()
  eval_c                           private flingWithNestedDispatch(int)
  eval_u                           private initScrollView()
  eval_x                           private canScroll()
  eval_z                           private static clamp(int,int,int)
  f                                private initVelocityTrackerIfNotExists()
  i                                protected computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)
  i                                private isWithinDeltaOfScreen(android.view.View,int,int)
  j                                public final smoothScrollTo(int,int)
  k                                public pageScroll(int)
  l                                public isSmoothScrollingEnabled()
  l                                private static isViewDescendantOf(android.view.View,android.view.View)
  l                                private inChild(int,int)
  m                                public arrowScroll(int)
  n                                public getMaxScrollAmount()
  n                                private scrollToChildRect(android.graphics.Rect,boolean)
  o                                private isOffScreen(android.view.View)
  q                                static access$000(android.support.v4.widget.NestedScrollView)
  q                                private doScrollY(int)
  r                                private initOrResetVelocityTracker()
  s                                public executeKeyEvent(android.view.KeyEvent)
  u                                private scrollToChild(android.view.View)
  u                                public setSmoothScrollingEnabled(boolean)
  v                                private endDrag()
  v                                private findFocusableViewInBounds(boolean,int,int)
  x                                private ensureGlows()
  y                                private recycleVelocityTracker()
  y                                public final smoothScrollBy(int,int)
  z                                private scrollAndFocus(int,int,int)
  addView                          public addView(android.view.View)
  addView                          public addView(android.view.View,android.view.ViewGroup$LayoutParams)
  addView                          public addView(android.view.View,int)
  addView                          public addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
  computeScroll                    public computeScroll()
  computeVerticalScrollOffset      protected computeVerticalScrollOffset()
  computeVerticalScrollRange       protected computeVerticalScrollRange()
  dispatchKeyEvent                 public dispatchKeyEvent(android.view.KeyEvent)
  dispatchNestedFling              public dispatchNestedFling(float,float,boolean)
  dispatchNestedPreFling           public dispatchNestedPreFling(float,float)
  dispatchNestedPreScroll          public dispatchNestedPreScroll(int,int,int[],int[])
  dispatchNestedScroll             public dispatchNestedScroll(int,int,int,int,int[])
  draw                             public draw(android.graphics.Canvas)
  getBottomFadingEdgeStrength      protected getBottomFadingEdgeStrength()
  getNestedScrollAxes              public getNestedScrollAxes()
  getTopFadingEdgeStrength         protected getTopFadingEdgeStrength()
  hasNestedScrollingParent         public hasNestedScrollingParent()
  isNestedScrollingEnabled         public isNestedScrollingEnabled()
  measureChild                     protected measureChild(android.view.View,int,int)
  measureChildWithMargins          protected measureChildWithMargins(android.view.View,int,int,int,int)
  onAttachedToWindow               public onAttachedToWindow()
  onGenericMotionEvent             public onGenericMotionEvent(android.view.MotionEvent)
  onInterceptTouchEvent            public onInterceptTouchEvent(android.view.MotionEvent)
  onLayout                         protected onLayout(boolean,int,int,int,int)
  onMeasure                        protected onMeasure(int,int)
  onNestedFling                    public onNestedFling(android.view.View,float,float,boolean)
  onNestedPreFling                 public onNestedPreFling(android.view.View,float,float)
  onNestedPreScroll                public onNestedPreScroll(android.view.View,int,int,int[])
  onNestedScroll                   public onNestedScroll(android.view.View,int,int,int,int)
  onNestedScrollAccepted           public onNestedScrollAccepted(android.view.View,android.view.View,int)
  onOverScrolled                   protected onOverScrolled(int,int,boolean,boolean)
  onRequestFocusInDescendants      protected onRequestFocusInDescendants(int,android.graphics.Rect)
  onRestoreInstanceState           protected onRestoreInstanceState(android.os.Parcelable)
  onSaveInstanceState              protected onSaveInstanceState()
  onSizeChanged                    protected onSizeChanged(int,int,int,int)
  onStartNestedScroll              public onStartNestedScroll(android.view.View,android.view.View,int)
  onStopNestedScroll               public onStopNestedScroll(android.view.View)
  onTouchEvent                     public onTouchEvent(android.view.MotionEvent)
  requestChildFocus                public requestChildFocus(android.view.View,android.view.View)
  requestChildRectangleOnScreen    public requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)
  requestDisallowInterceptTouchEvent   public requestDisallowInterceptTouchEvent(boolean)
  requestLayout                    public requestLayout()
  scrollTo                         public scrollTo(int,int)
  setNestedScrollingEnabled        public setNestedScrollingEnabled(boolean)
  shouldDelayChildPressedState     public shouldDelayChildPressedState()
  startNestedScroll                public startNestedScroll(int)
  stopNestedScroll                 public stopNestedScroll()

android.support.v4.widget.NestedScrollView$AccessibilityDelegate (be.brunoparmentier.apkshare.eval_o8$_)
===============================================================================
  j    public performAccessibilityAction(android.view.View,int,android.os.Bundle)
  n    public onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  u    public onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)

android.support.v4.widget.NestedScrollView$ParseException        (be.brunoparmentier.apkshare.eval_pz)
===============================================================================
  No methods

android.support.v4.widget.NestedScrollView$SavedState    (be.brunoparmentier.apkshare.eval_o8$j)
===============================================================================
  toString         public toString()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.widget.NestedScrollView$SavedState$1  (be.brunoparmentier.apkshare.eval_o8$j$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.widget.NestedScrollView$SavedState$IOException        (be.brunoparmentier.apkshare.eval_cj)
===============================================================================
  No methods

android.support.v4.widget.PopupMenuCompat        (be.brunoparmentier.apkshare.eval_le)
===============================================================================
  k    public static getDragToOpenListener(java.lang.Object)

android.support.v4.widget.PopupMenuCompat$ArrayOutOfBoundsException      (be.brunoparmentier.apkshare.eval_m9)
===============================================================================
  No methods

android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl      (be.brunoparmentier.apkshare.eval_le$p)
===============================================================================
  z    public getDragToOpenListener(java.lang.Object)

android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl    (be.brunoparmentier.apkshare.eval_le$c)
===============================================================================
  z    public getDragToOpenListener(java.lang.Object)

android.support.v4.widget.PopupMenuCompat$PopupMenuImpl  (be.brunoparmentier.apkshare.eval_le$s)
===============================================================================
  z    public abstract getDragToOpenListener(java.lang.Object)

android.support.v4.widget.PopupMenuCompatKitKat  (be.brunoparmentier.apkshare.eval_pu)
===============================================================================
  m    public static getDragToOpenListener(java.lang.Object)

android.support.v4.widget.PopupMenuCompatKitKat$ParseException   (be.brunoparmentier.apkshare.eval_md)
===============================================================================
  No methods

android.support.v4.widget.PopupWindowCompat      (be.brunoparmentier.apkshare.eval__g)
===============================================================================
  d    public static showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)

android.support.v4.widget.PopupWindowCompat$BasePopupWindowImpl  (be.brunoparmentier.apkshare.eval__g$y)
===============================================================================
  q    public showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)

android.support.v4.widget.PopupWindowCompat$IOException  (be.brunoparmentier.apkshare.eval_rx)
===============================================================================
  No methods

android.support.v4.widget.PopupWindowCompat$KitKatPopupWindowImpl        (be.brunoparmentier.apkshare.eval__g$_)
===============================================================================
  q    public showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)

android.support.v4.widget.PopupWindowCompat$PopupWindowImpl      (be.brunoparmentier.apkshare.eval__g$l)
===============================================================================
  q    public abstract showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)

android.support.v4.widget.PopupWindowCompatKitKat        (be.brunoparmentier.apkshare.eval_oy)
===============================================================================
  n    public static showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)

android.support.v4.widget.PopupWindowCompatKitKat$Exception      (be.brunoparmentier.apkshare.eval_jp)
===============================================================================
  No methods

android.support.v4.widget.ResourceCursorAdapter  (be.brunoparmentier.apkshare.eval_h7)
===============================================================================
  g    public newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
  g    public setDropDownViewResource(int)
  l    public newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
  s    public setViewResource(int)

android.support.v4.widget.ResourceCursorAdapter$ParseException   (be.brunoparmentier.apkshare.eval_tb)
===============================================================================
  No methods

android.support.v4.widget.ScrollerCompat (be.brunoparmentier.apkshare.eval_a5)
===============================================================================
  b        public abortAnimation()
  e        public getFinalY()
  e        public static create(android.content.Context,android.view.animation.Interpolator)
  e        public startScroll(int,int,int,int,int)
  eval_r   public notifyVerticalEdgeReached(int,int,int)
  eval_v   public static create(android.content.Context)
  f        public startScroll(int,int,int,int)
  g        public isFinished()
  h        public getCurrY()
  j        public getCurrVelocity()
  n        public isOverScrolled()
  q        public getCurrX()
  v        public fling(int,int,int,int,int,int,int,int)
  w        public fling(int,int,int,int,int,int,int,int,int,int)
  y        public computeScrollOffset()
  y        public notifyHorizontalEdgeReached(int,int,int)
  z        public getFinalX()

android.support.v4.widget.ScrollerCompat$NullPointerException    (be.brunoparmentier.apkshare.eval_ft)
===============================================================================
  No methods

android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl      (be.brunoparmentier.apkshare.eval_a5$o)
===============================================================================
  a        public abstract createScroller(android.content.Context,android.view.animation.Interpolator)
  d        public abstract fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int)
  e        public abstract getCurrX(java.lang.Object)
  eval_m   public abstract isOverScrolled(java.lang.Object)
  eval_n   public abstract getCurrY(java.lang.Object)
  g        public abstract getFinalY(java.lang.Object)
  h        public abstract notifyVerticalEdgeReached(java.lang.Object,int,int,int)
  h        public abstract fling(java.lang.Object,int,int,int,int,int,int,int,int)
  j        public abstract computeScrollOffset(java.lang.Object)
  k        public abstract abortAnimation(java.lang.Object)
  m        public abstract startScroll(java.lang.Object,int,int,int,int)
  s        public abstract startScroll(java.lang.Object,int,int,int,int,int)
  x        public abstract getFinalX(java.lang.Object)
  y        public abstract getCurrVelocity(java.lang.Object)
  z        public abstract isFinished(java.lang.Object)
  z        public abstract notifyHorizontalEdgeReached(java.lang.Object,int,int,int)

android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase  (be.brunoparmentier.apkshare.eval_a5$_)
===============================================================================
  a        public createScroller(android.content.Context,android.view.animation.Interpolator)
  d        public fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int)
  e        public getCurrX(java.lang.Object)
  eval_m   public isOverScrolled(java.lang.Object)
  eval_n   public getCurrY(java.lang.Object)
  g        public getFinalY(java.lang.Object)
  h        public notifyVerticalEdgeReached(java.lang.Object,int,int,int)
  h        public fling(java.lang.Object,int,int,int,int,int,int,int,int)
  j        public computeScrollOffset(java.lang.Object)
  k        public abortAnimation(java.lang.Object)
  m        public startScroll(java.lang.Object,int,int,int,int)
  s        public startScroll(java.lang.Object,int,int,int,int,int)
  x        public getFinalX(java.lang.Object)
  y        public getCurrVelocity(java.lang.Object)
  z        public isFinished(java.lang.Object)
  z        public notifyHorizontalEdgeReached(java.lang.Object,int,int,int)

android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread   (be.brunoparmentier.apkshare.eval_a5$p)
===============================================================================
  a        public createScroller(android.content.Context,android.view.animation.Interpolator)
  d        public fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int)
  e        public getCurrX(java.lang.Object)
  eval_m   public isOverScrolled(java.lang.Object)
  eval_n   public getCurrY(java.lang.Object)
  g        public getFinalY(java.lang.Object)
  h        public notifyVerticalEdgeReached(java.lang.Object,int,int,int)
  h        public fling(java.lang.Object,int,int,int,int,int,int,int,int)
  j        public computeScrollOffset(java.lang.Object)
  k        public abortAnimation(java.lang.Object)
  m        public startScroll(java.lang.Object,int,int,int,int)
  s        public startScroll(java.lang.Object,int,int,int,int,int)
  x        public getFinalX(java.lang.Object)
  y        public getCurrVelocity(java.lang.Object)
  z        public isFinished(java.lang.Object)
  z        public notifyHorizontalEdgeReached(java.lang.Object,int,int,int)

android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs   (be.brunoparmentier.apkshare.eval_a5$q)
===============================================================================
  y    public getCurrVelocity(java.lang.Object)

android.support.v4.widget.ScrollerCompatGingerbread      (be.brunoparmentier.apkshare.eval_s0)
===============================================================================
  a        public static computeScrollOffset(java.lang.Object)
  c        public static fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int)
  d        public static notifyVerticalEdgeReached(java.lang.Object,int,int,int)
  d        public static startScroll(java.lang.Object,int,int,int,int)
  eval_i   public static fling(java.lang.Object,int,int,int,int,int,int,int,int)
  eval_l   public static abortAnimation(java.lang.Object)
  f        public static getFinalX(java.lang.Object)
  f        public static startScroll(java.lang.Object,int,int,int,int,int)
  k        public static getCurrX(java.lang.Object)
  l        public static getCurrY(java.lang.Object)
  n        public static isFinished(java.lang.Object)
  r        public static createScroller(android.content.Context,android.view.animation.Interpolator)
  r        public static notifyHorizontalEdgeReached(java.lang.Object,int,int,int)
  s        public static getFinalY(java.lang.Object)
  t        public static isOverScrolled(java.lang.Object)

android.support.v4.widget.ScrollerCompatGingerbread$ArrayOutOfBoundsException    (be.brunoparmentier.apkshare.eval_wo)
===============================================================================
  No methods

android.support.v4.widget.ScrollerCompatIcs      (be.brunoparmentier.apkshare.eval_xs)
===============================================================================
  z    public static getCurrVelocity(java.lang.Object)

android.support.v4.widget.ScrollerCompatIcs$IOException  (be.brunoparmentier.apkshare.eval_wa)
===============================================================================
  No methods

android.support.v4.widget.SearchViewCompat       (be.brunoparmentier.apkshare.eval_p8)
===============================================================================
  e        public static isIconified(android.view.View)
  e        public static setQuery(android.view.View,java.lang.CharSequence,boolean)
  eval_j   public static isSubmitButtonEnabled(android.view.View)
  eval_w   public static setMaxWidth(android.view.View,int)
  eval_w   public static setQueryHint(android.view.View,java.lang.CharSequence)
  g        public static setSubmitButtonEnabled(android.view.View,boolean)
  h        static access$000()
  h        public static newSearchView(android.content.Context)
  h        public static getQuery(android.view.View)
  i        public static setImeOptions(android.view.View,int)
  n        public static setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat)
  o        public static setIconified(android.view.View,boolean)
  r        public static setSearchableInfo(android.view.View,android.content.ComponentName)
  s        public static setQueryRefinementEnabled(android.view.View,boolean)
  v        public static isQueryRefinementEnabled(android.view.View)
  w        public static setOnCloseListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat)
  y        public static setInputType(android.view.View,int)

android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat (be.brunoparmentier.apkshare.eval_p8$r)
===============================================================================
  b    public onClose()

android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat     (be.brunoparmentier.apkshare.eval_p8$p)
===============================================================================
  b    public onQueryTextSubmit(java.lang.String)
  v    public onQueryTextChange(java.lang.String)

android.support.v4.widget.SearchViewCompat$ParseException        (be.brunoparmentier.apkshare.eval_zl)
===============================================================================
  No methods

android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl (be.brunoparmentier.apkshare.eval_p8$s)
===============================================================================
  a    public setOnQueryTextListener(java.lang.Object,java.lang.Object)
  b    public isIconified(android.view.View)
  d    public newSearchView(android.content.Context)
  d    public getQuery(android.view.View)
  f    public isSubmitButtonEnabled(android.view.View)
  h    public setSubmitButtonEnabled(android.view.View,boolean)
  m    public setQueryRefinementEnabled(android.view.View,boolean)
  m    public setQueryHint(android.view.View,java.lang.CharSequence)
  n    public isQueryRefinementEnabled(android.view.View)
  o    public setSearchableInfo(android.view.View,android.content.ComponentName)
  t    public newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat)
  u    public setOnCloseListener(java.lang.Object,java.lang.Object)
  v    public setIconified(android.view.View,boolean)
  v    public setMaxWidth(android.view.View,int)
  v    public setQuery(android.view.View,java.lang.CharSequence,boolean)
  x    public newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat)

android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1       (be.brunoparmentier.apkshare.eval_p8$s$1)
===============================================================================
  m    public onQueryTextChange(java.lang.String)
  z    public onQueryTextSubmit(java.lang.String)

android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2       (be.brunoparmentier.apkshare.eval_p8$s$2)
===============================================================================
  f    public onClose()

android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$ParseException  (be.brunoparmentier.apkshare.eval_t9)
===============================================================================
  No methods

android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl       (be.brunoparmentier.apkshare.eval_p8$f)
===============================================================================
  d        public newSearchView(android.content.Context)
  e        public setInputType(android.view.View,int)
  eval_o   public setImeOptions(android.view.View,int)

android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl  (be.brunoparmentier.apkshare.eval_p8$_)
===============================================================================
  a        public abstract setOnQueryTextListener(java.lang.Object,java.lang.Object)
  b        public abstract isIconified(android.view.View)
  d        public abstract newSearchView(android.content.Context)
  d        public abstract getQuery(android.view.View)
  e        public abstract setInputType(android.view.View,int)
  eval_o   public abstract setImeOptions(android.view.View,int)
  f        public abstract isSubmitButtonEnabled(android.view.View)
  h        public abstract setSubmitButtonEnabled(android.view.View,boolean)
  m        public abstract setQueryRefinementEnabled(android.view.View,boolean)
  m        public abstract setQueryHint(android.view.View,java.lang.CharSequence)
  n        public abstract isQueryRefinementEnabled(android.view.View)
  o        public abstract setSearchableInfo(android.view.View,android.content.ComponentName)
  t        public abstract newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat)
  u        public abstract setOnCloseListener(java.lang.Object,java.lang.Object)
  v        public abstract setIconified(android.view.View,boolean)
  v        public abstract setMaxWidth(android.view.View,int)
  v        public abstract setQuery(android.view.View,java.lang.CharSequence,boolean)
  x        public abstract newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat)

android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl      (be.brunoparmentier.apkshare.eval_p8$g)
===============================================================================
  a        public setOnQueryTextListener(java.lang.Object,java.lang.Object)
  b        public isIconified(android.view.View)
  d        public newSearchView(android.content.Context)
  d        public getQuery(android.view.View)
  e        public setInputType(android.view.View,int)
  eval_o   public setImeOptions(android.view.View,int)
  f        public isSubmitButtonEnabled(android.view.View)
  h        public setSubmitButtonEnabled(android.view.View,boolean)
  m        public setQueryRefinementEnabled(android.view.View,boolean)
  m        public setQueryHint(android.view.View,java.lang.CharSequence)
  n        public isQueryRefinementEnabled(android.view.View)
  o        public setSearchableInfo(android.view.View,android.content.ComponentName)
  t        public newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat)
  u        public setOnCloseListener(java.lang.Object,java.lang.Object)
  v        public setIconified(android.view.View,boolean)
  v        public setMaxWidth(android.view.View,int)
  v        public setQuery(android.view.View,java.lang.CharSequence,boolean)
  x        public newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat)

android.support.v4.widget.SearchViewCompatHoneycomb      (be.brunoparmentier.apkshare.eval_qk)
===============================================================================
  b        public static setSearchableInfo(android.view.View,android.content.ComponentName)
  b        public static setSubmitButtonEnabled(android.view.View,boolean)
  c        public static getQuery(android.view.View)
  e        public static newSearchView(android.content.Context)
  eval_d   public static setQueryHint(android.view.View,java.lang.CharSequence)
  eval_u   public static isQueryRefinementEnabled(android.view.View)
  h        public static setIconified(android.view.View,boolean)
  l        public static setQuery(android.view.View,java.lang.CharSequence,boolean)
  m        public static isIconified(android.view.View)
  n        public static setMaxWidth(android.view.View,int)
  o        public static newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge)
  p        public static setOnQueryTextListener(java.lang.Object,java.lang.Object)
  q        public static newOnCloseListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge)
  u        public static isSubmitButtonEnabled(android.view.View)
  u        public static setOnCloseListener(java.lang.Object,java.lang.Object)
  y        public static setQueryRefinementEnabled(android.view.View,boolean)

android.support.v4.widget.SearchViewCompatHoneycomb$1    (be.brunoparmentier.apkshare.eval_qk$1)
===============================================================================
  onQueryTextChange    public onQueryTextChange(java.lang.String)
  onQueryTextSubmit    public onQueryTextSubmit(java.lang.String)

android.support.v4.widget.SearchViewCompatHoneycomb$2    (be.brunoparmentier.apkshare.eval_qk$2)
===============================================================================
  onClose  public onClose()

android.support.v4.widget.SearchViewCompatHoneycomb$ArrayOutOfBoundsException    (be.brunoparmentier.apkshare.eval_pl)
===============================================================================
  No methods

android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge  (be.brunoparmentier.apkshare.eval_qk$w)
===============================================================================
  f    public abstract onClose()

android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge      (be.brunoparmentier.apkshare.eval_qk$_)
===============================================================================
  m    public abstract onQueryTextChange(java.lang.String)
  z    public abstract onQueryTextSubmit(java.lang.String)

android.support.v4.widget.SearchViewCompatIcs    (be.brunoparmentier.apkshare.eval_ip)
===============================================================================
  h    public static newSearchView(android.content.Context)
  l    public static setImeOptions(android.view.View,int)
  p    public static setInputType(android.view.View,int)

android.support.v4.widget.SearchViewCompatIcs$MySearchView       (be.brunoparmentier.apkshare.eval_ip$f)
===============================================================================
  onActionViewCollapsed    public onActionViewCollapsed()

android.support.v4.widget.SearchViewCompatIcs$NullPointerException       (be.brunoparmentier.apkshare.eval_mk)
===============================================================================
  No methods

android.support.v4.widget.SimpleCursorAdapter    (be.brunoparmentier.apkshare.eval_d4)
===============================================================================
  eval_r   public setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder)
  f        public setStringConversionColumn(int)
  h        public getStringConversionColumn()
  l        public setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter)
  n        public swapCursor(android.database.Cursor)
  p        public getCursorToStringConverter()
  q        public setViewText(android.widget.TextView,java.lang.String)
  r        public convertToString(android.database.Cursor)
  t        public setViewImage(android.widget.ImageView,java.lang.String)
  x        public changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[])
  y        public bindView(android.view.View,android.content.Context,android.database.Cursor)
  y        private findColumns(java.lang.String[])
  z        public getViewBinder()

android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter    (be.brunoparmentier.apkshare.eval_d4$t)
===============================================================================
  a    public abstract convertToString(android.database.Cursor)

android.support.v4.widget.SimpleCursorAdapter$NullPointerException       (be.brunoparmentier.apkshare.eval_xz)
===============================================================================
  No methods

android.support.v4.widget.SimpleCursorAdapter$ViewBinder (be.brunoparmentier.apkshare.eval_d4$l)
===============================================================================
  b    public abstract setViewValue(android.view.View,android.database.Cursor,int)

android.support.v4.widget.SlidingPaneLayout      (be.brunoparmentier.apkshare.eval_vi)
===============================================================================
  a                            static access$1000(android.support.v4.widget.SlidingPaneLayout,android.view.View)
  a                            private invalidateChildRegion(android.view.View)
  b                            public setShadowDrawableRight(android.graphics.drawable.Drawable)
  b                            dispatchOnPanelOpened(android.view.View)
  b                            private closePane(android.view.View,int)
  c                            static access$100(android.support.v4.widget.SlidingPaneLayout)
  c                            private onPanelDragged(int)
  d                            public setCoveredFadeColor(int)
  e                            public setShadowResourceRight(int)
  eval_i                       public canSlide()
  eval_i                       public setShadowDrawable(android.graphics.drawable.Drawable)
  eval_o                       private isLayoutRtlSupport()
  eval_o                       static access$300(android.support.v4.widget.SlidingPaneLayout)
  eval_q                       public smoothSlideOpen()
  eval_r                       static access$800(android.support.v4.widget.SlidingPaneLayout)
  eval_u                       public isSlideable()
  eval_v                       static access$1100(android.support.v4.widget.SlidingPaneLayout)
  f                            public setSliderFadeColor(int)
  g                            public isOpen()
  k                            public closePane()
  k                            static access$400(android.support.v4.widget.SlidingPaneLayout)
  l                            public getCoveredFadeColor()
  m                            public getParallaxDistance()
  n                            setAllChildrenVisible()
  o                            public setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener)
  p                            public setShadowDrawableLeft(android.graphics.drawable.Drawable)
  p                            public setShadowResource(int)
  q                            public smoothSlideClosed()
  q                            dispatchOnPanelClosed(android.view.View)
  r                            public openPane()
  r                            private openPane(android.view.View,int)
  r                            smoothSlideTo(float,int)
  s                            private dimChildView(android.view.View,float,int)
  t                            private static viewIsOpaque(android.view.View)
  t                            public setShadowResourceLeft(int)
  u                            public getSliderFadeColor()
  u                            static access$600(android.support.v4.widget.SlidingPaneLayout,int)
  v                            isDimmed(android.view.View)
  w                            static access$200(android.support.v4.widget.SlidingPaneLayout)
  w                            dispatchOnPanelSlide(android.view.View)
  w                            public setParallaxDistance(int)
  x                            static access$700(android.support.v4.widget.SlidingPaneLayout)
  x                            static access$502(android.support.v4.widget.SlidingPaneLayout,boolean)
  x                            private parallaxOtherViews(float)
  y                            updateObscuredViewsVisibility(android.view.View)
  z                            protected canScroll(android.view.View,boolean,int,int,int)
  checkLayoutParams            protected checkLayoutParams(android.view.ViewGroup$LayoutParams)
  computeScroll                public computeScroll()
  draw                         public draw(android.graphics.Canvas)
  drawChild                    protected drawChild(android.graphics.Canvas,android.view.View,long)
  generateDefaultLayoutParams  protected generateDefaultLayoutParams()
  generateLayoutParams         public generateLayoutParams(android.util.AttributeSet)
  generateLayoutParams         protected generateLayoutParams(android.view.ViewGroup$LayoutParams)
  onAttachedToWindow           protected onAttachedToWindow()
  onDetachedFromWindow         protected onDetachedFromWindow()
  onInterceptTouchEvent        public onInterceptTouchEvent(android.view.MotionEvent)
  onLayout                     protected onLayout(boolean,int,int,int,int)
  onMeasure                    protected onMeasure(int,int)
  onRestoreInstanceState       protected onRestoreInstanceState(android.os.Parcelable)
  onSaveInstanceState          protected onSaveInstanceState()
  onSizeChanged                protected onSizeChanged(int,int,int,int)
  onTouchEvent                 public onTouchEvent(android.view.MotionEvent)
  requestChildFocus            public requestChildFocus(android.view.View,android.view.View)

android.support.v4.widget.SlidingPaneLayout$1    (be.brunoparmentier.apkshare.eval_vi$1)
===============================================================================
  No methods

android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate        (be.brunoparmentier.apkshare.eval_vi$t)
===============================================================================
  d    private copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  g    public onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
  n    public onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  u    public onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  z    public filter(android.view.View)

android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable (be.brunoparmentier.apkshare.eval_vi$v)
===============================================================================
  run  public run()

android.support.v4.widget.SlidingPaneLayout$DragHelperCallback   (be.brunoparmentier.apkshare.eval_vi$w)
===============================================================================
  a        public onViewReleased(android.view.View,float,float)
  d        public clampViewPositionHorizontal(android.view.View,int,int)
  eval_i   public onViewCaptured(android.view.View,int)
  i        public getViewHorizontalDragRange(android.view.View)
  l        public onViewPositionChanged(android.view.View,int,int,int,int)
  q        public onViewDragStateChanged(int)
  w        public clampViewPositionVertical(android.view.View,int,int)
  w        public onEdgeDragStarted(int,int)
  y        public tryCaptureView(android.view.View,int)

android.support.v4.widget.SlidingPaneLayout$IOException  (be.brunoparmentier.apkshare.eval_wr)
===============================================================================
  No methods

android.support.v4.widget.SlidingPaneLayout$LayoutParams (be.brunoparmentier.apkshare.eval_vi$x)
===============================================================================
  No methods

android.support.v4.widget.SlidingPaneLayout$PanelSlideListener   (be.brunoparmentier.apkshare.eval_vi$eval_k)
===============================================================================
  e    public abstract onPanelOpened(android.view.View)
  o    public abstract onPanelClosed(android.view.View)
  t    public abstract onPanelSlide(android.view.View,float)

android.support.v4.widget.SlidingPaneLayout$SavedState   (be.brunoparmentier.apkshare.eval_vi$l)
===============================================================================
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.widget.SlidingPaneLayout$SavedState$1 (be.brunoparmentier.apkshare.eval_vi$l$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.widget.SlidingPaneLayout$SavedState$Exception (be.brunoparmentier.apkshare.eval_ds)
===============================================================================
  No methods

android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener     (be.brunoparmentier.apkshare.eval_vi$f)
===============================================================================
  e    public onPanelOpened(android.view.View)
  o    public onPanelClosed(android.view.View)
  t    public onPanelSlide(android.view.View,float)

android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl       (be.brunoparmentier.apkshare.eval_vi$z)
===============================================================================
  m    public abstract invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View)

android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase   (be.brunoparmentier.apkshare.eval_vi$eval_x)
===============================================================================
  m    public invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View)

android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB     (be.brunoparmentier.apkshare.eval_vi$m)
===============================================================================
  m    public invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View)

android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1  (be.brunoparmentier.apkshare.eval_vi$u)
===============================================================================
  m    public invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View)

android.support.v4.widget.Space  (be.brunoparmentier.apkshare.eval_no)
===============================================================================
  p            private static getDefaultSize2(int,int)
  draw         public draw(android.graphics.Canvas)
  onMeasure    protected onMeasure(int,int)

android.support.v4.widget.Space$ArrayOutOfBoundsException        (be.brunoparmentier.apkshare.eval_q6)
===============================================================================
  No methods

android.support.v4.widget.SwipeProgressBar       (be.brunoparmentier.apkshare.eval_ix)
===============================================================================
  eval_d   private drawCircle(android.graphics.Canvas,float,float,int,float)
  g        setTriggerPercentage(float)
  m        private drawTrigger(android.graphics.Canvas,int,int)
  m        setBounds(int,int,int,int)
  o        isRunning()
  s        stop()
  t        setColorScheme(int,int,int,int)
  x        start()
  x        draw(android.graphics.Canvas)

android.support.v4.widget.SwipeProgressBar$ParseException        (be.brunoparmentier.apkshare.eval_ad)
===============================================================================
  No methods

android.support.v4.widget.SwipeRefreshLayout     (be.brunoparmentier.apkshare.eval_c6)
===============================================================================
  b                                static access$300(android.support.v4.widget.SwipeRefreshLayout)
  c                                private ensureTarget()
  c                                static access$100(android.support.v4.widget.SwipeRefreshLayout)
  d                                static access$600(android.support.v4.widget.SwipeRefreshLayout)
  e                                public canChildScrollUp()
  e                                private setColorViewAlpha(int)
  eval__                           private startProgressAlphaStartAnimation()
  eval_b                           static access$1200(android.support.v4.widget.SwipeRefreshLayout)
  eval_d                           private isAlphaUsedForScale()
  eval_g                           static access$1100(android.support.v4.widget.SwipeRefreshLayout)
  eval_h                           public transient setColorSchemeColors(int[])
  eval_o                           private startScaleDownAnimation(android.view.animation.Animation$AnimationListener)
  eval_r                           public setProgressBackgroundColorSchemeColor(int)
  eval_z                           static access$200(android.support.v4.widget.SwipeRefreshLayout)
  g                                static access$000(android.support.v4.widget.SwipeRefreshLayout)
  h                                static access$1300(android.support.v4.widget.SwipeRefreshLayout,float)
  h                                public setDistanceToTriggerSync(int)
  i                                static access$700(android.support.v4.widget.SwipeRefreshLayout,float)
  j                                static access$1400(android.support.v4.widget.SwipeRefreshLayout)
  j                                static access$802(android.support.v4.widget.SwipeRefreshLayout,int)
  k                                public isRefreshing()
  k                                public transient setColorScheme(int[])
  l                                private createProgressView()
  l                                private startScaleUpAnimation(android.view.animation.Animation$AnimationListener)
  l                                public setProgressBackgroundColor(int)
  l                                private animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener)
  m                                public getProgressCircleDiameter()
  m                                private setTargetOffsetTopAndBottom(int,boolean)
  m                                private startAlphaAnimation(int,int)
  n                                private startProgressAlphaMaxAnimation()
  o                                private animateOffsetToCorrectPosition(int,android.view.animation.Animation$AnimationListener)
  p                                private getMotionEventY(android.view.MotionEvent,int)
  q                                private onSecondaryPointerUp(android.view.MotionEvent)
  r                                static access$400(android.support.v4.widget.SwipeRefreshLayout)
  r                                static access$900(android.support.v4.widget.SwipeRefreshLayout,int,boolean)
  r                                private setRefreshing(boolean,boolean)
  s                                public setProgressViewEndTarget(boolean,int)
  t                                static access$800(android.support.v4.widget.SwipeRefreshLayout)
  t                                public setProgressBackgroundColorSchemeResource(int)
  u                                public setRefreshing(boolean)
  v                                static access$1000(android.support.v4.widget.SwipeRefreshLayout,android.view.animation.Animation$AnimationListener)
  v                                private isAnimationRunning(android.view.animation.Animation)
  v                                public setProgressViewOffset(boolean,int,int)
  v                                private moveToStart(float)
  v                                public transient setColorSchemeResources(int[])
  x                                public setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener)
  x                                static access$500(android.support.v4.widget.SwipeRefreshLayout,int)
  x                                public setSize(int)
  y                                private setAnimationProgress(float)
  y                                private startScaleDownReturnToStartAnimation(int,android.view.animation.Animation$AnimationListener)
  getChildDrawingOrder             protected getChildDrawingOrder(int,int)
  onInterceptTouchEvent            public onInterceptTouchEvent(android.view.MotionEvent)
  onLayout                         protected onLayout(boolean,int,int,int,int)
  onMeasure                        public onMeasure(int,int)
  onTouchEvent                     public onTouchEvent(android.view.MotionEvent)
  requestDisallowInterceptTouchEvent   public requestDisallowInterceptTouchEvent(boolean)

android.support.v4.widget.SwipeRefreshLayout$1   (be.brunoparmentier.apkshare.eval_c6$1)
===============================================================================
  onAnimationEnd       public onAnimationEnd(android.view.animation.Animation)
  onAnimationRepeat    public onAnimationRepeat(android.view.animation.Animation)
  onAnimationStart     public onAnimationStart(android.view.animation.Animation)

android.support.v4.widget.SwipeRefreshLayout$2   (be.brunoparmentier.apkshare.eval_c6$2)
===============================================================================
  applyTransformation  public applyTransformation(float,android.view.animation.Transformation)

android.support.v4.widget.SwipeRefreshLayout$3   (be.brunoparmentier.apkshare.eval_c6$3)
===============================================================================
  applyTransformation  public applyTransformation(float,android.view.animation.Transformation)

android.support.v4.widget.SwipeRefreshLayout$4   (be.brunoparmentier.apkshare.eval_c6$4)
===============================================================================
  applyTransformation  public applyTransformation(float,android.view.animation.Transformation)

android.support.v4.widget.SwipeRefreshLayout$5   (be.brunoparmentier.apkshare.eval_c6$5)
===============================================================================
  onAnimationEnd       public onAnimationEnd(android.view.animation.Animation)
  onAnimationRepeat    public onAnimationRepeat(android.view.animation.Animation)
  onAnimationStart     public onAnimationStart(android.view.animation.Animation)

android.support.v4.widget.SwipeRefreshLayout$6   (be.brunoparmentier.apkshare.eval_c6$6)
===============================================================================
  applyTransformation  public applyTransformation(float,android.view.animation.Transformation)

android.support.v4.widget.SwipeRefreshLayout$7   (be.brunoparmentier.apkshare.eval_c6$7)
===============================================================================
  applyTransformation  public applyTransformation(float,android.view.animation.Transformation)

android.support.v4.widget.SwipeRefreshLayout$8   (be.brunoparmentier.apkshare.eval_c6$8)
===============================================================================
  applyTransformation  public applyTransformation(float,android.view.animation.Transformation)

android.support.v4.widget.SwipeRefreshLayout$Exception   (be.brunoparmentier.apkshare.eval_t0)
===============================================================================
  No methods

android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener   (be.brunoparmentier.apkshare.eval_c6$r)
===============================================================================
  v    public abstract onRefresh()

android.support.v4.widget.TextViewCompat (be.brunoparmentier.apkshare.eval_wp)
===============================================================================
  eval_h   public static setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
  z        public static setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
  z        public static setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)

android.support.v4.widget.TextViewCompat$BaseTextViewCompatImpl  (be.brunoparmentier.apkshare.eval_wp$q)
===============================================================================
  g    public setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
  i    public setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
  l    public setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)

android.support.v4.widget.TextViewCompat$JbMr1TextViewCompatImpl (be.brunoparmentier.apkshare.eval_wp$f)
===============================================================================
  g    public setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
  i    public setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
  l    public setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)

android.support.v4.widget.TextViewCompat$JbMr2TextViewCompatImpl (be.brunoparmentier.apkshare.eval_wp$g)
===============================================================================
  g    public setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
  i    public setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
  l    public setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)

android.support.v4.widget.TextViewCompat$NullPointerException    (be.brunoparmentier.apkshare.eval_pn)
===============================================================================
  No methods

android.support.v4.widget.TextViewCompat$TextViewCompatImpl      (be.brunoparmentier.apkshare.eval_wp$d)
===============================================================================
  g    public abstract setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
  i    public abstract setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
  l    public abstract setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)

android.support.v4.widget.TextViewCompatJbMr1    (be.brunoparmentier.apkshare.eval_yr)
===============================================================================
  e    public static setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
  k    public static setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
  l    public static setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)

android.support.v4.widget.TextViewCompatJbMr1$NullPointerException       (be.brunoparmentier.apkshare.eval_k_)
===============================================================================
  No methods

android.support.v4.widget.TextViewCompatJbMr2    (be.brunoparmentier.apkshare.eval_js)
===============================================================================
  a    public static setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
  i    public static setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
  k    public static setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)

android.support.v4.widget.TextViewCompatJbMr2$NullPointerException       (be.brunoparmentier.apkshare.eval_lv)
===============================================================================
  No methods

android.support.v4.widget.ViewDragHelper (be.brunoparmentier.apkshare.eval_e2)
===============================================================================
  a        public isCapturedViewUnder(int,int)
  b        public findTopChildUnder(int,int)
  c        tryCaptureViewForDrag(android.view.View,int)
  c        private computeAxisDuration(int,int,int)
  d        public smoothSlideViewTo(android.view.View,int,int)
  d        public setMinVelocity(float)
  d        private dispatchViewReleased(float,float)
  e        private reportNewEdgeDrags(float,float,int)
  eval_a   public getTouchSlop()
  eval_d   private clearMotionHistory()
  eval_i   private saveLastMotion(android.view.MotionEvent)
  eval_q   public abort()
  eval_q   public checkTouchSlop(int,int)
  f        public shouldInterceptTouchEvent(android.view.MotionEvent)
  f        private clampMag(float,float,float)
  f        public setEdgeTrackingEnabled(int)
  g        private clampMag(int,int,int)
  h        public getCapturedView()
  h        private dragTo(int,int,int,int)
  i        public static create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback)
  j        public continueSettling(boolean)
  l        public isPointerDown(int)
  l        public flingCapturedView(int,int,int,int)
  m        public getEdgeSize()
  n        public getViewDragState()
  n        protected canScroll(android.view.View,boolean,int,int,int,int)
  o        public getMinVelocity()
  o        public checkTouchSlop(int)
  q        public isEdgeTouched(int,int)
  r        public captureChildView(android.view.View,int)
  s        private ensureMotionHistorySizeForId(int)
  s        private getEdgesTouched(int,int)
  t        public isViewUnder(android.view.View,int,int)
  t        public static create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback)
  v        private saveInitialMotion(float,float,int)
  v        public isEdgeTouched(int)
  w        public getActivePointerId()
  w        private computeSettleDuration(android.view.View,int,int,int,int)
  w        private checkNewEdgeDrag(float,float,int,int)
  w        setDragState(int)
  w        private forceSettleCapturedViewAt(int,int,int,int)
  x        private checkTouchSlop(android.view.View,float,float)
  y        public cancel()
  y        public processTouchEvent(android.view.MotionEvent)
  y        private clearMotionHistory(int)
  z        private releaseViewForPointerUp()
  z        private distanceInfluenceForSnapDuration(float)
  z        public settleCapturedViewAt(int,int)

android.support.v4.widget.ViewDragHelper$1       (be.brunoparmentier.apkshare.eval_e2$1)
===============================================================================
  getInterpolation public getInterpolation(float)

android.support.v4.widget.ViewDragHelper$2       (be.brunoparmentier.apkshare.eval_e2$2)
===============================================================================
  run  public run()

android.support.v4.widget.ViewDragHelper$Callback        (be.brunoparmentier.apkshare.eval_e2$k)
===============================================================================
  a        public onViewReleased(android.view.View,float,float)
  d        public getViewVerticalDragRange(android.view.View)
  d        public clampViewPositionHorizontal(android.view.View,int,int)
  eval_i   public onViewCaptured(android.view.View,int)
  f        public onEdgeLock(int)
  g        public getOrderedChildIndex(int)
  i        public getViewHorizontalDragRange(android.view.View)
  l        public onViewPositionChanged(android.view.View,int,int,int,int)
  q        public onViewDragStateChanged(int)
  s        public onEdgeTouched(int,int)
  w        public clampViewPositionVertical(android.view.View,int,int)
  w        public onEdgeDragStarted(int,int)
  y        public abstract tryCaptureView(android.view.View,int)

android.support.v4.widget.ViewDragHelper$NullPointerException    (be.brunoparmentier.apkshare.eval_od)
===============================================================================
  No methods

android.support.v7.app.ActionBar (be.brunoparmentier.apkshare.eval_z7)
===============================================================================
  b        public abstract getTabCount()
  b        public setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
  b        public abstract addTab(android.support.v7.app.ActionBar$Tab)
  b        public abstract setLogo(int)
  c        public abstract setDisplayShowCustomEnabled(boolean)
  c        public setHomeActionContentDescription(java.lang.CharSequence)
  d        public collapseActionView()
  d        public startActionMode(android.support.v7.view.ActionMode$Callback)
  e        public openOptionsMenu()
  e        public abstract setIcon(android.graphics.drawable.Drawable)
  e        public abstract setSelectedNavigationItem(int)
  e        public abstract setTitle(java.lang.CharSequence)
  eval_a   public getHideOffset()
  eval_d   public abstract getTitle()
  eval_e   public abstract removeOnMenuVisibilityListener(android.support.v7.app.ActionBar$OnMenuVisibilityListener)
  eval_g   public abstract newTab()
  eval_h   public abstract isShowing()
  eval_h   public setDefaultDisplayHomeAsUpEnabled(boolean)
  eval_j   public abstract hide()
  eval_k   public abstract show()
  eval_k   public abstract setDisplayShowTitleEnabled(boolean)
  eval_n   public abstract setNavigationMode(int)
  eval_p   public getThemedContext()
  eval_r   public isTitleTruncated()
  eval_u   public abstract removeTabAt(int)
  eval_v   public invalidateOptionsMenu()
  eval_v   public abstract setTitle(int)
  eval_w   public setShowHideAnimationEnabled(boolean)
  eval_x   public abstract getHeight()
  eval_y   public getElevation()
  f        public abstract getCustomView()
  f        public abstract setCustomView(int)
  g        public abstract setCustomView(android.view.View)
  g        public abstract setDisplayHomeAsUpEnabled(boolean)
  h        public abstract getDisplayOptions()
  h        public abstract setDisplayUseLogoEnabled(boolean)
  i        public abstract setCustomView(android.view.View,android.support.v7.app.ActionBar$LayoutParams)
  j        public abstract addTab(android.support.v7.app.ActionBar$Tab,boolean)
  k        public abstract setSubtitle(java.lang.CharSequence)
  l        public abstract setListNavigationCallbacks(android.widget.SpinnerAdapter,android.support.v7.app.ActionBar$OnNavigationListener)
  l        public abstract setIcon(int)
  m        public abstract getNavigationItemCount()
  m        public abstract setBackgroundDrawable(android.graphics.drawable.Drawable)
  m        public onMenuKeyEvent(android.view.KeyEvent)
  n        public abstract addTab(android.support.v7.app.ActionBar$Tab,int,boolean)
  n        public abstract setDisplayShowHomeEnabled(boolean)
  n        public abstract setDisplayOptions(int)
  o        public onConfigurationChanged(android.content.res.Configuration)
  o        public setHomeAsUpIndicator(int)
  p        public abstract getNavigationMode()
  p        public setHideOffset(int)
  q        public setElevation(float)
  q        public abstract setSubtitle(int)
  s        public abstract getSubtitle()
  s        public setHomeAsUpIndicator(android.graphics.drawable.Drawable)
  s        public abstract addOnMenuVisibilityListener(android.support.v7.app.ActionBar$OnMenuVisibilityListener)
  s        public setWindowTitle(java.lang.CharSequence)
  t        public abstract setLogo(android.graphics.drawable.Drawable)
  t        public abstract setDisplayOptions(int,int)
  u        public abstract removeAllTabs()
  u        public abstract getTabAt(int)
  v        public isHideOnContentScrollEnabled()
  v        public onKeyShortcut(int,android.view.KeyEvent)
  w        public abstract selectTab(android.support.v7.app.ActionBar$Tab)
  w        public setHomeActionContentDescription(int)
  x        public setHideOnContentScrollEnabled(boolean)
  y        public abstract getSelectedTab()
  y        public abstract removeTab(android.support.v7.app.ActionBar$Tab)
  y        public abstract addTab(android.support.v7.app.ActionBar$Tab,int)
  y        public dispatchMenuVisibilityChanged(boolean)
  z        public abstract getSelectedNavigationIndex()
  z        public setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
  z        public setHomeButtonEnabled(boolean)

android.support.v7.app.ActionBar$DisplayOptions  (be.brunoparmentier.apkshare.eval_z7$p)
===============================================================================
  No methods

android.support.v7.app.ActionBar$LayoutParams    (be.brunoparmentier.apkshare.eval_z7$r)
===============================================================================
  No methods

android.support.v7.app.ActionBar$NavigationMode  (be.brunoparmentier.apkshare.eval_z7$f)
===============================================================================
  No methods

android.support.v7.app.ActionBar$OnMenuVisibilityListener        (be.brunoparmentier.apkshare.eval_z7$m)
===============================================================================
  h    public abstract onMenuVisibilityChanged(boolean)

android.support.v7.app.ActionBar$OnNavigationListener    (be.brunoparmentier.apkshare.eval_z7$k)
===============================================================================
  m    public abstract onNavigationItemSelected(int,long)

android.support.v7.app.ActionBar$ParseException  (be.brunoparmentier.apkshare.eval_hq)
===============================================================================
  No methods

android.support.v7.app.ActionBar$Tab     (be.brunoparmentier.apkshare.eval_z7$e)
===============================================================================
  c        public abstract setText(int)
  d        public abstract setTag(java.lang.Object)
  eval_d   public abstract setCustomView(android.view.View)
  eval_o   public abstract setContentDescription(java.lang.CharSequence)
  g        public abstract select()
  l        public abstract getIcon()
  l        public abstract setIcon(android.graphics.drawable.Drawable)
  m        public abstract getText()
  m        public abstract setTabListener(android.support.v7.app.ActionBar$TabListener)
  o        public abstract getContentDescription()
  o        public abstract setContentDescription(int)
  p        public abstract getPosition()
  s        public abstract setText(java.lang.CharSequence)
  u        public abstract getCustomView()
  u        public abstract setIcon(int)
  v        public abstract setCustomView(int)
  z        public abstract getTag()

android.support.v7.app.ActionBar$TabListener     (be.brunoparmentier.apkshare.eval_z7$h)
===============================================================================
  n    public abstract onTabUnselected(android.support.v7.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction)
  r    public abstract onTabSelected(android.support.v7.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction)
  w    public abstract onTabReselected(android.support.v7.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction)

android.support.v7.app.ActionBarActivity (be.brunoparmentier.apkshare.eval__8)
===============================================================================
  No methods

android.support.v7.app.ActionBarActivity$NullPointerException    (be.brunoparmentier.apkshare.eval_us)
===============================================================================
  No methods

android.support.v7.app.ActionBarDrawerToggle     (be.brunoparmentier.apkshare.eval_sh)
===============================================================================
  a        public isDrawerIndicatorEnabled()
  a        public setHomeAsUpIndicator(android.graphics.drawable.Drawable)
  a        public setDrawerIndicatorEnabled(boolean)
  b        public setHomeAsUpIndicator(int)
  e        private toggle()
  e        public setToolbarNavigationClickListener(android.view.View$OnClickListener)
  eval__   setActionBarDescription(int)
  eval_u   public onConfigurationChanged(android.content.res.Configuration)
  h        public getToolbarNavigationClickListener()
  i        setActionBarUpIndicator(android.graphics.drawable.Drawable,int)
  j        public onDrawerOpened(android.view.View)
  k        public onDrawerSlide(android.view.View,float)
  m        public onOptionsItemSelected(android.view.MenuItem)
  n        static access$000(android.support.v7.app.ActionBarDrawerToggle)
  o        static access$200(android.support.v7.app.ActionBarDrawerToggle)
  r        getThemeUpIndicator()
  s        public onDrawerClosed(android.view.View)
  u        static access$100(android.support.v7.app.ActionBarDrawerToggle)
  v        public onDrawerStateChanged(int)
  z        public syncState()

android.support.v7.app.ActionBarDrawerToggle$1   (be.brunoparmentier.apkshare.eval_sh$1)
===============================================================================
  onClick  public onClick(android.view.View)

android.support.v7.app.ActionBarDrawerToggle$Delegate    (be.brunoparmentier.apkshare.eval_sh$_)
===============================================================================
  a        public abstract setActionBarDescription(int)
  c        public abstract getThemeUpIndicator()
  e        public abstract getActionBarThemedContext()
  eval_c   public abstract setActionBarUpIndicator(android.graphics.drawable.Drawable,int)
  j        public abstract isNavigationVisible()

android.support.v7.app.ActionBarDrawerToggle$DelegateProvider    (be.brunoparmentier.apkshare.eval_sh$v)
===============================================================================
  eval_f   public abstract getDrawerToggleDelegate()

android.support.v7.app.ActionBarDrawerToggle$DrawerArrowDrawableToggle   (be.brunoparmentier.apkshare.eval_sh$y)
===============================================================================
  g    public getPosition()
  q    isLayoutRtl()
  y    public setPosition(float)

android.support.v7.app.ActionBarDrawerToggle$DrawerToggle        (be.brunoparmentier.apkshare.eval_sh$c)
===============================================================================
  g    public abstract getPosition()
  y    public abstract setPosition(float)

android.support.v7.app.ActionBarDrawerToggle$DummyDelegate       (be.brunoparmentier.apkshare.eval_sh$o)
===============================================================================
  a        public setActionBarDescription(int)
  c        public getThemeUpIndicator()
  e        public getActionBarThemedContext()
  eval_c   public setActionBarUpIndicator(android.graphics.drawable.Drawable,int)
  j        public isNavigationVisible()

android.support.v7.app.ActionBarDrawerToggle$Exception   (be.brunoparmentier.apkshare.eval_mz)
===============================================================================
  No methods

android.support.v7.app.ActionBarDrawerToggle$HoneycombDelegate   (be.brunoparmentier.apkshare.eval_sh$n)
===============================================================================
  a        public setActionBarDescription(int)
  c        public getThemeUpIndicator()
  e        public getActionBarThemedContext()
  eval_c   public setActionBarUpIndicator(android.graphics.drawable.Drawable,int)
  j        public isNavigationVisible()

android.support.v7.app.ActionBarDrawerToggle$JellybeanMr2Delegate        (be.brunoparmentier.apkshare.eval_sh$eval_u)
===============================================================================
  a        public setActionBarDescription(int)
  c        public getThemeUpIndicator()
  e        public getActionBarThemedContext()
  eval_c   public setActionBarUpIndicator(android.graphics.drawable.Drawable,int)
  j        public isNavigationVisible()

android.support.v7.app.ActionBarDrawerToggle$ToolbarCompatDelegate       (be.brunoparmentier.apkshare.eval_sh$x)
===============================================================================
  a        public setActionBarDescription(int)
  c        public getThemeUpIndicator()
  e        public getActionBarThemedContext()
  eval_c   public setActionBarUpIndicator(android.graphics.drawable.Drawable,int)
  j        public isNavigationVisible()

android.support.v7.app.ActionBarDrawerToggleHoneycomb    (be.brunoparmentier.apkshare.eval_xh)
===============================================================================
  d    public static setActionBarDescription(android.support.v7.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo,android.app.Activity,int)
  j    public static setActionBarUpIndicator(android.support.v7.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo,android.app.Activity,android.graphics.drawable.Drawable,int)
  u    public static getThemeUpIndicator(android.app.Activity)

android.support.v7.app.ActionBarDrawerToggleHoneycomb$IOException        (be.brunoparmentier.apkshare.eval_nk)
===============================================================================
  No methods

android.support.v7.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo   (be.brunoparmentier.apkshare.eval_xh$i)
===============================================================================
  No methods

android.support.v7.app.AlertController   (be.brunoparmentier.apkshare.eval_n2)
===============================================================================
  a        static access$900(android.support.v7.app.AlertController)
  a        public setButtonPanelLayoutHint(int)
  c        public setView(int)
  c        public onKeyDown(int,android.view.KeyEvent)
  d        static access$000(android.support.v7.app.AlertController)
  e        static access$1302(android.support.v7.app.AlertController,int)
  e        public setMessage(java.lang.CharSequence)
  eval_c   private setupView()
  eval_i   static access$600(android.support.v7.app.AlertController)
  eval_m   public onKeyUp(int,android.view.KeyEvent)
  f        static access$1100(android.support.v7.app.AlertController)
  h        static access$300(android.support.v7.app.AlertController)
  h        static access$1402(android.support.v7.app.AlertController,android.widget.ListView)
  i        static access$700(android.support.v7.app.AlertController)
  i        private centerButton(android.widget.Button)
  k        static access$200(android.support.v7.app.AlertController)
  k        public getButton(int)
  l        private setupButtons()
  l        private static shouldCenterSingleButton(android.content.Context)
  l        static access$1202(android.support.v7.app.AlertController,android.widget.ListAdapter)
  l        static canTextInput(android.view.View)
  m        static access$500(android.support.v7.app.AlertController)
  n        public setIcon(android.graphics.drawable.Drawable)
  n        public setView(android.view.View,int,int,int,int)
  o        public getIconAttributeResId(int)
  p        public getListView()
  q        public setIcon(int)
  r        static access$1000(android.support.v7.app.AlertController)
  r        public setView(android.view.View)
  s        public setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message)
  t        private setupTitle(android.view.ViewGroup)
  v        public installContent()
  w        static access$400(android.support.v7.app.AlertController)
  w        public setCustomTitle(android.view.View)
  w        private setupContent(android.view.ViewGroup)
  x        static access$100(android.support.v7.app.AlertController)
  y        private selectContentView()
  y        static access$800(android.support.v7.app.AlertController)
  z        public setTitle(java.lang.CharSequence)

android.support.v7.app.AlertController$1 (be.brunoparmentier.apkshare.eval_n2$1)
===============================================================================
  onClick  public onClick(android.view.View)

android.support.v7.app.AlertController$AlertParams       (be.brunoparmentier.apkshare.eval_n2$x)
===============================================================================
  o    private createListView(android.support.v7.app.AlertController)
  u    public apply(android.support.v7.app.AlertController)

android.support.v7.app.AlertController$AlertParams$1     (be.brunoparmentier.apkshare.eval_n2$x$1)
===============================================================================
  getView  public getView(int,android.view.View,android.view.ViewGroup)

android.support.v7.app.AlertController$AlertParams$2     (be.brunoparmentier.apkshare.eval_n2$x$2)
===============================================================================
  bindView public bindView(android.view.View,android.content.Context,android.database.Cursor)
  newView  public newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)

android.support.v7.app.AlertController$AlertParams$3     (be.brunoparmentier.apkshare.eval_n2$x$3)
===============================================================================
  onItemClick  public onItemClick(android.widget.AdapterView,android.view.View,int,long)

android.support.v7.app.AlertController$AlertParams$4     (be.brunoparmentier.apkshare.eval_n2$x$4)
===============================================================================
  onItemClick  public onItemClick(android.widget.AdapterView,android.view.View,int,long)

android.support.v7.app.AlertController$AlertParams$NullPointerException  (be.brunoparmentier.apkshare.eval_vp)
===============================================================================
  No methods

android.support.v7.app.AlertController$AlertParams$OnPrepareListViewListener     (be.brunoparmentier.apkshare.eval_n2$x$h)
===============================================================================
  n    public abstract onPrepareListView(android.widget.ListView)

android.support.v7.app.AlertController$ButtonHandler     (be.brunoparmentier.apkshare.eval_n2$b)
===============================================================================
  handleMessage    public handleMessage(android.os.Message)

android.support.v7.app.AlertController$CheckedItemAdapter        (be.brunoparmentier.apkshare.eval_n2$t)
===============================================================================
  getItemId    public getItemId(int)
  hasStableIds public hasStableIds()

android.support.v7.app.AlertController$IOException       (be.brunoparmentier.apkshare.eval_vf)
===============================================================================
  No methods

android.support.v7.app.AlertDialog       (be.brunoparmentier.apkshare.eval_l9)
===============================================================================
  a            public setMessage(java.lang.CharSequence)
  c            public getButton(int)
  d            public getListView()
  e            public setButton(int,java.lang.CharSequence,android.os.Message)
  eval_i       public setIconAttribute(int)
  eval_n       public setIcon(android.graphics.drawable.Drawable)
  h            public setView(android.view.View,int,int,int,int)
  k            public setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
  m            public setIcon(int)
  q            static resolveDialogTheme(android.content.Context,int)
  q            public setCustomTitle(android.view.View)
  r            setButtonPanelLayoutHint(int)
  w            public setView(android.view.View)
  z            static access$000(android.support.v7.app.AlertDialog)
  onCreate     protected onCreate(android.os.Bundle)
  onKeyDown    public onKeyDown(int,android.view.KeyEvent)
  onKeyUp      public onKeyUp(int,android.view.KeyEvent)
  setTitle     public setTitle(java.lang.CharSequence)

android.support.v7.app.AlertDialog$Builder       (be.brunoparmentier.apkshare.eval_l9$j)
===============================================================================
  a        public setOnDismissListener(android.content.DialogInterface$OnDismissListener)
  a        public setSingleChoiceItems(android.database.Cursor,int,java.lang.String,android.content.DialogInterface$OnClickListener)
  b        public getContext()
  b        public setIcon(int)
  c        public setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener)
  d        public setIconAttribute(int)
  d        public setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
  e        public setView(android.view.View,int,int,int,int)
  e        public setTitle(int)
  e        public setSingleChoiceItems(int,int,android.content.DialogInterface$OnClickListener)
  eval_l   public setCancelable(boolean)
  f        public setView(int)
  h        public setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener)
  j        public show()
  j        public setNeutralButton(int,android.content.DialogInterface$OnClickListener)
  k        public create()
  k        public setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener)
  m        public setMultiChoiceItems(android.database.Cursor,java.lang.String,java.lang.String,android.content.DialogInterface$OnMultiChoiceClickListener)
  m        public setCustomTitle(android.view.View)
  m        public setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
  m        public setNegativeButton(int,android.content.DialogInterface$OnClickListener)
  m        public setTitle(java.lang.CharSequence)
  n        public setOnKeyListener(android.content.DialogInterface$OnKeyListener)
  n        public setRecycleOnMeasureEnabled(boolean)
  o        public setMessage(int)
  o        public setMessage(java.lang.CharSequence)
  p        public setItems(int,android.content.DialogInterface$OnClickListener)
  p        public setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
  q        public setMultiChoiceItems(int,boolean[],android.content.DialogInterface$OnMultiChoiceClickListener)
  r        public setIcon(android.graphics.drawable.Drawable)
  t        public setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener)
  t        public setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
  u        public setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)
  v        public setView(android.view.View)
  w        public setCursor(android.database.Cursor,android.content.DialogInterface$OnClickListener,java.lang.String)
  y        public setPositiveButton(int,android.content.DialogInterface$OnClickListener)
  z        public setOnCancelListener(android.content.DialogInterface$OnCancelListener)
  z        public setInverseBackgroundForced(boolean)

android.support.v7.app.AlertDialog$Exception     (be.brunoparmentier.apkshare.eval_o0)
===============================================================================
  No methods

android.support.v7.app.AppCompatActivity (be.brunoparmentier.apkshare.eval_yb)
===============================================================================
  a                        public supportRequestWindowFeature(int)
  d                        public getDelegate()
  e                        public onSupportActionModeStarted(android.support.v7.view.ActionMode)
  eval__                   public startSupportActionMode(android.support.v7.view.ActionMode$Callback)
  eval_d                   public onSupportNavigateUp()
  eval_f                   public getDrawerToggleDelegate()
  eval_n                   public onSupportContentChanged()
  f                        public getSupportActionBar()
  f                        public onCreateSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder)
  g                        public getSupportParentActivityIntent()
  h                        public supportShouldUpRecreateTask(android.content.Intent)
  l                        public supportInvalidateOptionsMenu()
  l                        public onSupportActionModeFinished(android.support.v7.view.ActionMode)
  l                        public setSupportProgressBarIndeterminateVisibility(boolean)
  m                        public setSupportProgressBarVisibility(boolean)
  o                        public supportNavigateUpTo(android.content.Intent)
  o                        public setSupportProgress(int)
  q                        public onWindowStartingSupportActionMode(android.support.v7.view.ActionMode$Callback)
  v                        public setSupportActionBar(android.support.v7.widget.Toolbar)
  w                        public setSupportProgressBarIndeterminate(boolean)
  x                        public onPrepareSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder)
  addContentView           public addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
  getMenuInflater          public getMenuInflater()
  invalidateOptionsMenu    public invalidateOptionsMenu()
  onConfigurationChanged   public onConfigurationChanged(android.content.res.Configuration)
  onContentChanged         public onContentChanged()
  onCreate                 protected onCreate(android.os.Bundle)
  onDestroy                protected onDestroy()
  onMenuItemSelected       public final onMenuItemSelected(int,android.view.MenuItem)
  onPostCreate             protected onPostCreate(android.os.Bundle)
  onPostResume             protected onPostResume()
  onStop                   protected onStop()
  onTitleChanged           protected onTitleChanged(java.lang.CharSequence,int)
  setContentView           public setContentView(android.view.View)
  setContentView           public setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
  setContentView           public setContentView(int)

android.support.v7.app.AppCompatActivity$NullPointerException    (be.brunoparmentier.apkshare.eval__6)
===============================================================================
  No methods

android.support.v7.app.AppCompatCallback (be.brunoparmentier.apkshare.eval_hm)
===============================================================================
  e    public abstract onSupportActionModeStarted(android.support.v7.view.ActionMode)
  l    public abstract onSupportActionModeFinished(android.support.v7.view.ActionMode)
  q    public abstract onWindowStartingSupportActionMode(android.support.v7.view.ActionMode$Callback)

android.support.v7.app.AppCompatCallback$NullPointerException    (be.brunoparmentier.apkshare.eval_m2)
===============================================================================
  No methods

android.support.v7.app.AppCompatDelegate (be.brunoparmentier.apkshare.eval_sb)
===============================================================================
  c        public abstract onPostResume()
  d        public abstract onConfigurationChanged(android.content.res.Configuration)
  d        public abstract setContentView(android.view.View)
  d        public abstract setHandleNativeActionModesEnabled(boolean)
  d        public abstract setContentView(int)
  e        public abstract invalidateOptionsMenu()
  eval_b   public abstract onDestroy()
  eval_n   public abstract getDrawerToggleDelegate()
  eval_x   public abstract createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
  h        public abstract onStop()
  i        public abstract getMenuInflater()
  j        public abstract isHandleNativeActionModesEnabled()
  k        public static create(android.app.Activity,android.support.v7.app.AppCompatCallback)
  k        public abstract onCreate(android.os.Bundle)
  o        public abstract setTitle(java.lang.CharSequence)
  q        public abstract getSupportActionBar()
  q        public abstract onPostCreate(android.os.Bundle)
  q        public abstract setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
  r        public abstract installViewFactory()
  r        private static create(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)
  u        public abstract startSupportActionMode(android.support.v7.view.ActionMode$Callback)
  w        public abstract setSupportActionBar(android.support.v7.widget.Toolbar)
  x        public static create(android.app.Dialog,android.support.v7.app.AppCompatCallback)
  x        public abstract addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
  x        public abstract requestWindowFeature(int)

android.support.v7.app.AppCompatDelegate$NullPointerException    (be.brunoparmentier.apkshare.eval_b7)
===============================================================================
  No methods

android.support.v7.app.AppCompatDelegateImplBase (be.brunoparmentier.apkshare.eval_tl)
===============================================================================
  a        final setSupportActionBar(android.support.v7.app.ActionBar)
  d        public setHandleNativeActionModesEnabled(boolean)
  e        abstract onPanelClosed(int,android.view.Menu)
  eval_b   public final onDestroy()
  eval_g   final isDestroyed()
  eval_n   public final getDrawerToggleDelegate()
  g        final getTitle()
  g        abstract startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)
  i        public getMenuInflater()
  i        abstract onKeyShortcut(int,android.view.KeyEvent)
  j        public isHandleNativeActionModesEnabled()
  k        final peekSupportActionBar()
  k        public onCreate(android.os.Bundle)
  l        wrapWindowCallback(android.view.Window$Callback)
  o        public final setTitle(java.lang.CharSequence)
  q        public getSupportActionBar()
  t        final getActionBarThemedContext()
  v        abstract dispatchKeyEvent(android.view.KeyEvent)
  w        final getWindowCallback()
  w        abstract onMenuOpened(int,android.view.Menu)
  x        abstract createSupportActionBar()
  z        abstract onTitleChanged(java.lang.CharSequence)

android.support.v7.app.AppCompatDelegateImplBase$1       (be.brunoparmentier.apkshare.eval_tl$1)
===============================================================================
  No methods

android.support.v7.app.AppCompatDelegateImplBase$ActionBarDrawableToggleImpl     (be.brunoparmentier.apkshare.eval_tl$u)
===============================================================================
  a        public setActionBarDescription(int)
  c        public getThemeUpIndicator()
  e        public getActionBarThemedContext()
  eval_c   public setActionBarUpIndicator(android.graphics.drawable.Drawable,int)
  j        public isNavigationVisible()

android.support.v7.app.AppCompatDelegateImplBase$AppCompatWindowCallbackBase     (be.brunoparmentier.apkshare.eval_tl$a)
===============================================================================
  dispatchKeyEvent         public dispatchKeyEvent(android.view.KeyEvent)
  dispatchKeyShortcutEvent public dispatchKeyShortcutEvent(android.view.KeyEvent)
  onContentChanged         public onContentChanged()
  onCreatePanelMenu        public onCreatePanelMenu(int,android.view.Menu)
  onMenuOpened             public onMenuOpened(int,android.view.Menu)
  onPanelClosed            public onPanelClosed(int,android.view.Menu)
  onPreparePanel           public onPreparePanel(int,android.view.View,android.view.Menu)

android.support.v7.app.AppCompatDelegateImplBase$IOException     (be.brunoparmentier.apkshare.eval_i_)
===============================================================================
  No methods

android.support.v7.app.AppCompatDelegateImplV11  (be.brunoparmentier.apkshare.eval_fr)
===============================================================================
  e    callActivityOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)

android.support.v7.app.AppCompatDelegateImplV11$ParseException   (be.brunoparmentier.apkshare.eval_vn)
===============================================================================
  No methods

android.support.v7.app.AppCompatDelegateImplV14  (be.brunoparmentier.apkshare.eval_uv)
===============================================================================
  d    public setHandleNativeActionModesEnabled(boolean)
  e    static access$000(android.support.v7.app.AppCompatDelegateImplV14)
  j    public isHandleNativeActionModesEnabled()
  l    wrapWindowCallback(android.view.Window$Callback)

android.support.v7.app.AppCompatDelegateImplV14$AppCompatWindowCallbackV14       (be.brunoparmentier.apkshare.eval_uv$s)
===============================================================================
  d                            final startAsSupportActionMode(android.view.ActionMode$Callback)
  onWindowStartingActionMode   public onWindowStartingActionMode(android.view.ActionMode$Callback)

android.support.v7.app.AppCompatDelegateImplV14$ParseException   (be.brunoparmentier.apkshare.eval_g4)
===============================================================================
  No methods

android.support.v7.app.AppCompatDelegateImplV7   (be.brunoparmentier.apkshare.eval_lm)
===============================================================================
  a        private initializePanelMenu(android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState)
  a        static access$900(android.support.v7.app.AppCompatDelegateImplV7,android.support.v7.internal.view.menu.MenuBuilder)
  a        static access$202(android.support.v7.app.AppCompatDelegateImplV7,boolean)
  c        public onPostResume()
  c        static access$1200(android.support.v7.app.AppCompatDelegateImplV7,int)
  c        static access$700(android.support.v7.app.AppCompatDelegateImplV7,int,android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState,android.view.Menu)
  d        public onConfigurationChanged(android.content.res.Configuration)
  d        static access$600(android.support.v7.app.AppCompatDelegateImplV7,android.view.Menu)
  d        public setContentView(android.view.View)
  d        public setContentView(int)
  e        public invalidateOptionsMenu()
  e        callActivityOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
  e        private updateStatusGuard(int)
  e        private onKeyUpPanel(int,android.view.KeyEvent)
  e        onPanelClosed(int,android.view.Menu)
  eval_c   private throwFeatureRequestIfSubDecorInstalled()
  eval_e   onBackPressed()
  eval_f   getSubDecor()
  eval_u   private onKeyDownPanel(int,android.view.KeyEvent)
  eval_w   private checkCloseActionMenu(android.support.v7.internal.view.menu.MenuBuilder)
  eval_x   public createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
  g        public onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem)
  g        private reopenMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)
  g        startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)
  g        private invalidatePanelMenu(int)
  h        public onStop()
  h        private initializePanelDecor(android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState)
  h        public onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder)
  i        static access$100(android.support.v7.app.AppCompatDelegateImplV7,int)
  i        onKeyShortcut(int,android.view.KeyEvent)
  k        public onCreate(android.os.Bundle)
  k        private performPanelShortcut(android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState,int,android.view.KeyEvent,int)
  m        static access$000(android.support.v7.app.AppCompatDelegateImplV7)
  p        static access$300(android.support.v7.app.AppCompatDelegateImplV7,int)
  p        private findMenuPanel(android.view.Menu)
  p        onKeyDown(int,android.view.KeyEvent)
  q        public onPostCreate(android.os.Bundle)
  q        private closePanel(android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState,boolean)
  q        public setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
  r        public installViewFactory()
  s        private preparePanel(android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState,android.view.KeyEvent)
  s        public final onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
  t        private applyFixedSizeWindow(android.support.v7.internal.widget.ContentFrameLayout)
  u        static access$800(android.support.v7.app.AppCompatDelegateImplV7,android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState,boolean)
  u        static access$002(android.support.v7.app.AppCompatDelegateImplV7,int)
  u        public startSupportActionMode(android.support.v7.view.ActionMode$Callback)
  v        private ensureSubDecor()
  v        dispatchKeyEvent(android.view.KeyEvent)
  w        public setSupportActionBar(android.support.v7.widget.Toolbar)
  w        onSubDecorInstalled(android.view.ViewGroup)
  w        private doInvalidatePanelMenu(int)
  w        onMenuOpened(int,android.view.Menu)
  w        private getPanelState(int,boolean)
  x        public createSupportActionBar()
  x        private openPanel(android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState,android.view.KeyEvent)
  x        public addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
  x        public requestWindowFeature(int)
  x        private callOnPanelClosed(int,android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState,android.view.Menu)
  x        onKeyUp(int,android.view.KeyEvent)
  y        private initializePanelContent(android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState)
  y        private closePanel(int)
  z        onTitleChanged(java.lang.CharSequence)

android.support.v7.app.AppCompatDelegateImplV7$1 (be.brunoparmentier.apkshare.eval_lm$1)
===============================================================================
  run  public run()

android.support.v7.app.AppCompatDelegateImplV7$2 (be.brunoparmentier.apkshare.eval_lm$2)
===============================================================================
  j    public onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat)

android.support.v7.app.AppCompatDelegateImplV7$3 (be.brunoparmentier.apkshare.eval_lm$3)
===============================================================================
  g    public onFitSystemWindows(android.graphics.Rect)

android.support.v7.app.AppCompatDelegateImplV7$4 (be.brunoparmentier.apkshare.eval_lm$4)
===============================================================================
  run  public run()

android.support.v7.app.AppCompatDelegateImplV7$ActionMenuPresenterCallback       (be.brunoparmentier.apkshare.eval_lm$m)
===============================================================================
  a    public onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder)
  f    public onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)

android.support.v7.app.AppCompatDelegateImplV7$ActionModeCallbackWrapperV7       (be.brunoparmentier.apkshare.eval_lm$o)
===============================================================================
  a    public onDestroyActionMode(android.support.v7.view.ActionMode)
  j    public onPrepareActionMode(android.support.v7.view.ActionMode,android.view.Menu)
  q    public onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem)
  r    public onCreateActionMode(android.support.v7.view.ActionMode,android.view.Menu)

android.support.v7.app.AppCompatDelegateImplV7$ArrayOutOfBoundsException (be.brunoparmentier.apkshare.eval_p9)
===============================================================================
  No methods

android.support.v7.app.AppCompatDelegateImplV7$ListMenuDecorView (be.brunoparmentier.apkshare.eval_lm$u)
===============================================================================
  u                        private isOutOfBounds(int,int)
  dispatchKeyEvent         public dispatchKeyEvent(android.view.KeyEvent)
  onInterceptTouchEvent    public onInterceptTouchEvent(android.view.MotionEvent)
  setBackgroundResource    public setBackgroundResource(int)

android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState (be.brunoparmentier.apkshare.eval_lm$l)
===============================================================================
  a    public hasPanelItems()
  h    applyFrozenState()
  n    public clearMenuPresenters()
  u    onSaveInstanceState()
  u    setStyle(android.content.Context)
  w    getListMenuView(android.support.v7.internal.view.menu.MenuPresenter$Callback)
  y    onRestoreInstanceState(android.os.Parcelable)
  y    setMenu(android.support.v7.internal.view.menu.MenuBuilder)

android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState$Exception       (be.brunoparmentier.apkshare.eval_tg)
===============================================================================
  No methods

android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState$SavedState      (be.brunoparmentier.apkshare.eval_lm$l$k)
===============================================================================
  f                private static readFromParcel(android.os.Parcel)
  u                static access$1100(android.os.Parcel)
  describeContents public describeContents()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState$SavedState$1    (be.brunoparmentier.apkshare.eval_lm$l$k$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState$SavedState$NullPointerException (be.brunoparmentier.apkshare.eval_np)
===============================================================================
  No methods

android.support.v7.app.AppCompatDelegateImplV7$PanelMenuPresenterCallback        (be.brunoparmentier.apkshare.eval_lm$eval_v)
===============================================================================
  a    public onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder)
  f    public onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)

android.support.v7.app.AppCompatDialog   (be.brunoparmentier.apkshare.eval_x1)
===============================================================================
  a                        public supportRequestWindowFeature(int)
  e                        public onSupportActionModeStarted(android.support.v7.view.ActionMode)
  h                        public getDelegate()
  i                        private static getThemeResId(android.content.Context,int)
  l                        public onSupportActionModeFinished(android.support.v7.view.ActionMode)
  q                        public onWindowStartingSupportActionMode(android.support.v7.view.ActionMode$Callback)
  u                        public getSupportActionBar()
  addContentView           public addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
  invalidateOptionsMenu    public invalidateOptionsMenu()
  onCreate                 protected onCreate(android.os.Bundle)
  onStop                   protected onStop()
  setContentView           public setContentView(android.view.View)
  setContentView           public setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
  setContentView           public setContentView(int)
  setTitle                 public setTitle(int)
  setTitle                 public setTitle(java.lang.CharSequence)

android.support.v7.app.AppCompatDialog$IOException       (be.brunoparmentier.apkshare.eval_n1)
===============================================================================
  No methods

android.support.v7.app.DrawerArrowDrawable       (be.brunoparmentier.apkshare.eval_ky)
===============================================================================
  e                    public setProgress(float)
  k                    protected setVerticalMirror(boolean)
  l                    private static lerp(float,float,float)
  q                    abstract isLayoutRtl()
  v                    public getProgress()
  draw                 public draw(android.graphics.Canvas)
  getIntrinsicHeight   public getIntrinsicHeight()
  getIntrinsicWidth    public getIntrinsicWidth()
  getOpacity           public getOpacity()
  isAutoMirrored       public isAutoMirrored()
  setAlpha             public setAlpha(int)
  setColorFilter       public setColorFilter(android.graphics.ColorFilter)

android.support.v7.app.DrawerArrowDrawable$ParseException        (be.brunoparmentier.apkshare.eval_iv)
===============================================================================
  No methods

android.support.v7.app.NotificationCompat        (be.brunoparmentier.apkshare.eval_z2)
===============================================================================
  j    private static addMediaStyleToBuilderIcs(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Builder)
  k    static access$300(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Builder)
  o    private static addBigMediaStyleToBuilderJellybean(android.app.Notification,android.support.v4.app.NotificationCompat$Builder)
  r    static access$400(android.app.Notification,android.support.v4.app.NotificationCompat$Builder)
  r    private static addMediaStyleToBuilderLollipop(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style)
  t    static access$500(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style)

android.support.v7.app.NotificationCompat$1      (be.brunoparmentier.apkshare.eval_z2$1)
===============================================================================
  No methods

android.support.v7.app.NotificationCompat$ArrayOutOfBoundsException      (be.brunoparmentier.apkshare.eval_v7)
===============================================================================
  No methods

android.support.v7.app.NotificationCompat$Builder        (be.brunoparmentier.apkshare.eval_z2$m)
===============================================================================
  eval_u   protected getExtender()

android.support.v7.app.NotificationCompat$IceCreamSandwichExtender       (be.brunoparmentier.apkshare.eval_z2$w)
===============================================================================
  f    public build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationBuilderWithBuilderAccessor)

android.support.v7.app.NotificationCompat$JellybeanExtender      (be.brunoparmentier.apkshare.eval_z2$f)
===============================================================================
  f    public build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationBuilderWithBuilderAccessor)

android.support.v7.app.NotificationCompat$LollipopExtender       (be.brunoparmentier.apkshare.eval_z2$h)
===============================================================================
  f    public build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationBuilderWithBuilderAccessor)

android.support.v7.app.NotificationCompat$MediaStyle     (be.brunoparmentier.apkshare.eval_z2$eval_x)
===============================================================================
  f    public setMediaSession(android.support.v4.media.session.MediaSessionCompat$Token)
  g    public transient setShowActionsInCompactView(int[])
  o    public setShowCancelButton(boolean)
  w    public setCancelButtonIntent(android.app.PendingIntent)

android.support.v7.appcompat.BuildConfig (be.brunoparmentier.apkshare.eval_j5)
===============================================================================
  No methods

android.support.v7.appcompat.BuildConfig$NullPointerException    (be.brunoparmentier.apkshare.eval_cx)
===============================================================================
  No methods

android.support.v7.appcompat.R
===============================================================================
  No methods

android.support.v7.appcompat.R$NullPointerException
===============================================================================
  No methods

android.support.v7.appcompat.R$anim
===============================================================================
  No methods

android.support.v7.appcompat.R$attr
===============================================================================
  No methods

android.support.v7.appcompat.R$bool
===============================================================================
  No methods

android.support.v7.appcompat.R$color
===============================================================================
  No methods

android.support.v7.appcompat.R$dimen
===============================================================================
  No methods

android.support.v7.appcompat.R$drawable
===============================================================================
  No methods

android.support.v7.appcompat.R$id
===============================================================================
  No methods

android.support.v7.appcompat.R$integer
===============================================================================
  No methods

android.support.v7.appcompat.R$layout
===============================================================================
  No methods

android.support.v7.appcompat.R$string
===============================================================================
  No methods

android.support.v7.appcompat.R$style
===============================================================================
  No methods

android.support.v7.appcompat.R$styleable
===============================================================================
  No methods

android.support.v7.cardview.BuildConfig  (be.brunoparmentier.apkshare.eval_qc)
===============================================================================
  No methods

android.support.v7.cardview.BuildConfig$Exception        (be.brunoparmentier.apkshare.eval_yh)
===============================================================================
  No methods

android.support.v7.cardview.R
===============================================================================
  No methods

android.support.v7.cardview.R$Exception
===============================================================================
  No methods

android.support.v7.cardview.R$attr
===============================================================================
  No methods

android.support.v7.cardview.R$color
===============================================================================
  No methods

android.support.v7.cardview.R$dimen
===============================================================================
  No methods

android.support.v7.cardview.R$style
===============================================================================
  No methods

android.support.v7.cardview.R$styleable
===============================================================================
  No methods

android.support.v7.graphics.drawable.DrawableWrapper     (be.brunoparmentier.apkshare.eval_my)
===============================================================================
  m                            public getWrappedDrawable()
  v                            public setWrappedDrawable(android.graphics.drawable.Drawable)
  draw                         public draw(android.graphics.Canvas)
  getChangingConfigurations    public getChangingConfigurations()
  getCurrent                   public getCurrent()
  getIntrinsicHeight           public getIntrinsicHeight()
  getIntrinsicWidth            public getIntrinsicWidth()
  getMinimumHeight             public getMinimumHeight()
  getMinimumWidth              public getMinimumWidth()
  getOpacity                   public getOpacity()
  getPadding                   public getPadding(android.graphics.Rect)
  getState                     public getState()
  getTransparentRegion         public getTransparentRegion()
  invalidateDrawable           public invalidateDrawable(android.graphics.drawable.Drawable)
  isAutoMirrored               public isAutoMirrored()
  isStateful                   public isStateful()
  jumpToCurrentState           public jumpToCurrentState()
  onBoundsChange               protected onBoundsChange(android.graphics.Rect)
  onLevelChange                protected onLevelChange(int)
  scheduleDrawable             public scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
  setAlpha                     public setAlpha(int)
  setAutoMirrored              public setAutoMirrored(boolean)
  setChangingConfigurations    public setChangingConfigurations(int)
  setColorFilter               public setColorFilter(android.graphics.ColorFilter)
  setDither                    public setDither(boolean)
  setFilterBitmap              public setFilterBitmap(boolean)
  setHotspot                   public setHotspot(float,float)
  setHotspotBounds             public setHotspotBounds(int,int,int,int)
  setState                     public setState(int[])
  setTint                      public setTint(int)
  setTintList                  public setTintList(android.content.res.ColorStateList)
  setTintMode                  public setTintMode(android.graphics.PorterDuff$Mode)
  setVisible                   public setVisible(boolean,boolean)
  unscheduleDrawable           public unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)

android.support.v7.graphics.drawable.DrawableWrapper$ParseException      (be.brunoparmentier.apkshare.eval_lc)
===============================================================================
  No methods

android.support.v7.internal.VersionUtils (be.brunoparmentier.apkshare.eval_hk)
===============================================================================
  s    public static isAtLeastL()

android.support.v7.internal.VersionUtils$NullPointerException    (be.brunoparmentier.apkshare.eval_a7)
===============================================================================
  No methods

android.support.v7.internal.app.AppCompatViewInflater    (be.brunoparmentier.apkshare.eval_k1)
===============================================================================
  c    private static themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean)
  c    private createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet)
  n    public final createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean)
  t    private createView(android.content.Context,java.lang.String,java.lang.String)

android.support.v7.internal.app.AppCompatViewInflater$IOException        (be.brunoparmentier.apkshare.eval_yt)
===============================================================================
  No methods

android.support.v7.internal.app.NavItemSelectedListener  (be.brunoparmentier.apkshare.eval_eb)
===============================================================================
  f    public onItemSelected(android.support.v7.internal.widget.AdapterViewCompat,android.view.View,int,long)
  i    public onNothingSelected(android.support.v7.internal.widget.AdapterViewCompat)

android.support.v7.internal.app.NavItemSelectedListener$NullPointerException     (be.brunoparmentier.apkshare.eval_os)
===============================================================================
  No methods

android.support.v7.internal.app.NotificationCompatImpl21 (be.brunoparmentier.apkshare.eval_sa)
===============================================================================
  i    public static addMediaStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,int[],java.lang.Object)

android.support.v7.internal.app.NotificationCompatImpl21$ArrayOutOfBoundsException       (be.brunoparmentier.apkshare.eval_ye)
===============================================================================
  No methods

android.support.v7.internal.app.NotificationCompatImplBase       (be.brunoparmentier.apkshare.eval_pr)
===============================================================================
  a    private static applyStandardTemplate(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,android.graphics.Bitmap,java.lang.CharSequence,boolean,long,int,boolean)
  d    private static generateMediaActionButton(android.content.Context,android.support.v4.app.NotificationCompatBase$Action)
  d    private static generateContentView(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,android.graphics.Bitmap,java.lang.CharSequence,boolean,long,java.util.List,int[],boolean,android.app.PendingIntent)
  g    public static overrideBigContentView(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,android.graphics.Bitmap,java.lang.CharSequence,boolean,long,java.util.List,boolean,android.app.PendingIntent)
  i    private static getBigLayoutResource(int)
  m    private static generateBigContentView(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,android.graphics.Bitmap,java.lang.CharSequence,boolean,long,java.util.List,boolean,android.app.PendingIntent)
  w    public static overrideContentView(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,android.graphics.Bitmap,java.lang.CharSequence,boolean,long,java.util.List,int[],boolean,android.app.PendingIntent)

android.support.v7.internal.app.NotificationCompatImplBase$IOException   (be.brunoparmentier.apkshare.eval_j8)
===============================================================================
  No methods

android.support.v7.internal.app.ToolbarActionBar (be.brunoparmentier.apkshare.eval_l7)
===============================================================================
  b        public getTabCount()
  b        public setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
  b        public addTab(android.support.v7.app.ActionBar$Tab)
  b        public setLogo(int)
  c        public setDisplayShowCustomEnabled(boolean)
  c        public setHomeActionContentDescription(java.lang.CharSequence)
  d        public collapseActionView()
  e        public openOptionsMenu()
  e        public setIcon(android.graphics.drawable.Drawable)
  e        public setSelectedNavigationItem(int)
  e        public setTitle(java.lang.CharSequence)
  eval_d   public getTitle()
  eval_e   public removeOnMenuVisibilityListener(android.support.v7.app.ActionBar$OnMenuVisibilityListener)
  eval_g   public newTab()
  eval_h   public isShowing()
  eval_h   public setDefaultDisplayHomeAsUpEnabled(boolean)
  eval_i   private getMenu()
  eval_i   private getListMenuView(android.view.Menu)
  eval_j   public hide()
  eval_k   public show()
  eval_k   public setDisplayShowTitleEnabled(boolean)
  eval_n   public setNavigationMode(int)
  eval_p   public getThemedContext()
  eval_r   public isTitleTruncated()
  eval_u   public removeTabAt(int)
  eval_v   public invalidateOptionsMenu()
  eval_v   public setTitle(int)
  eval_w   public setShowHideAnimationEnabled(boolean)
  eval_x   public getHeight()
  eval_y   public getElevation()
  f        public getCustomView()
  f        public setCustomView(int)
  g        private ensureListMenuPresenter(android.view.Menu)
  g        public setCustomView(android.view.View)
  g        public setDisplayHomeAsUpEnabled(boolean)
  h        public getDisplayOptions()
  h        public setDisplayUseLogoEnabled(boolean)
  i        static access$000(android.support.v7.internal.app.ToolbarActionBar)
  i        public setCustomView(android.view.View,android.support.v7.app.ActionBar$LayoutParams)
  j        public addTab(android.support.v7.app.ActionBar$Tab,boolean)
  k        public setSubtitle(java.lang.CharSequence)
  l        public getWrappedWindowCallback()
  l        public setListNavigationCallbacks(android.widget.SpinnerAdapter,android.support.v7.app.ActionBar$OnNavigationListener)
  l        public setIcon(int)
  m        public getNavigationItemCount()
  m        public setBackgroundDrawable(android.graphics.drawable.Drawable)
  m        static access$400(android.support.v7.internal.app.ToolbarActionBar,android.view.Menu)
  m        static access$202(android.support.v7.internal.app.ToolbarActionBar,boolean)
  m        public onMenuKeyEvent(android.view.KeyEvent)
  n        public addTab(android.support.v7.app.ActionBar$Tab,int,boolean)
  n        public setDisplayShowHomeEnabled(boolean)
  n        public setDisplayOptions(int)
  o        public onConfigurationChanged(android.content.res.Configuration)
  o        public setHomeAsUpIndicator(int)
  p        public getNavigationMode()
  q        public setElevation(float)
  q        public setSubtitle(int)
  r        populateOptionsMenu()
  s        public getSubtitle()
  s        public setHomeAsUpIndicator(android.graphics.drawable.Drawable)
  s        public addOnMenuVisibilityListener(android.support.v7.app.ActionBar$OnMenuVisibilityListener)
  s        public setWindowTitle(java.lang.CharSequence)
  t        public setLogo(android.graphics.drawable.Drawable)
  t        public setDisplayOptions(int,int)
  u        public removeAllTabs()
  u        static access$200(android.support.v7.internal.app.ToolbarActionBar)
  u        public getTabAt(int)
  v        static access$300(android.support.v7.internal.app.ToolbarActionBar)
  v        public onKeyShortcut(int,android.view.KeyEvent)
  w        public selectTab(android.support.v7.app.ActionBar$Tab)
  w        public setHomeActionContentDescription(int)
  y        public getSelectedTab()
  y        public removeTab(android.support.v7.app.ActionBar$Tab)
  y        public addTab(android.support.v7.app.ActionBar$Tab,int)
  y        public dispatchMenuVisibilityChanged(boolean)
  z        public getSelectedNavigationIndex()
  z        public setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
  z        public setHomeButtonEnabled(boolean)

android.support.v7.internal.app.ToolbarActionBar$1       (be.brunoparmentier.apkshare.eval_l7$1)
===============================================================================
  run  public run()

android.support.v7.internal.app.ToolbarActionBar$2       (be.brunoparmentier.apkshare.eval_l7$2)
===============================================================================
  b    public onMenuItemClick(android.view.MenuItem)

android.support.v7.internal.app.ToolbarActionBar$ActionMenuPresenterCallback     (be.brunoparmentier.apkshare.eval_l7$k)
===============================================================================
  a    public onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder)
  f    public onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)

android.support.v7.internal.app.ToolbarActionBar$IOException     (be.brunoparmentier.apkshare.eval_zs)
===============================================================================
  No methods

android.support.v7.internal.app.ToolbarActionBar$MenuBuilderCallback     (be.brunoparmentier.apkshare.eval_l7$u)
===============================================================================
  g    public onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem)
  h    public onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder)

android.support.v7.internal.app.ToolbarActionBar$PanelMenuPresenterCallback      (be.brunoparmentier.apkshare.eval_l7$d)
===============================================================================
  a    public onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder)
  f    public onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)

android.support.v7.internal.app.ToolbarActionBar$ToolbarCallbackWrapper  (be.brunoparmentier.apkshare.eval_l7$z)
===============================================================================
  onCreatePanelView    public onCreatePanelView(int)
  onPreparePanel       public onPreparePanel(int,android.view.View,android.view.Menu)

android.support.v7.internal.app.WindowDecorActionBar     (be.brunoparmentier.apkshare.eval_bn)
===============================================================================
  a        public onContentScrollStopped()
  b        public getTabCount()
  b        public setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
  b        public addTab(android.support.v7.app.ActionBar$Tab)
  b        public doShow(boolean)
  b        public setLogo(int)
  c        private configureTab(android.support.v7.app.ActionBar$Tab,int)
  c        private getDecorToolbar(android.view.View)
  c        public setDisplayShowCustomEnabled(boolean)
  c        public setHomeActionContentDescription(java.lang.CharSequence)
  d        public collapseActionView()
  d        static access$502(android.support.v7.internal.app.WindowDecorActionBar,android.support.v7.internal.view.ViewPropertyAnimatorCompatSet)
  d        public startActionMode(android.support.v7.view.ActionMode$Callback)
  d        private setHasEmbeddedTabs(boolean)
  e        public setIcon(android.graphics.drawable.Drawable)
  e        static access$800(android.support.v7.internal.app.WindowDecorActionBar)
  e        public setSelectedNavigationItem(int)
  e        public setTitle(java.lang.CharSequence)
  eval__   private cleanupTabs()
  eval__   public onWindowVisibilityChanged(int)
  eval_a   public getHideOffset()
  eval_d   public getTitle()
  eval_d   static access$1000(android.support.v7.internal.app.WindowDecorActionBar)
  eval_e   public removeOnMenuVisibilityListener(android.support.v7.app.ActionBar$OnMenuVisibilityListener)
  eval_e   static access$1300(android.support.v7.internal.app.WindowDecorActionBar)
  eval_g   public newTab()
  eval_g   public animateToMode(boolean)
  eval_h   public isShowing()
  eval_h   public setDefaultDisplayHomeAsUpEnabled(boolean)
  eval_i   public hasIcon()
  eval_j   public hide()
  eval_k   public show()
  eval_k   public setDisplayShowTitleEnabled(boolean)
  eval_n   private hideForActionMode()
  eval_n   public setNavigationMode(int)
  eval_p   public getThemedContext()
  eval_r   public isTitleTruncated()
  eval_s   private ensureTabsExist()
  eval_s   public enableContentAnimations(boolean)
  eval_t   static access$200(android.support.v7.internal.app.WindowDecorActionBar)
  eval_u   public removeTabAt(int)
  eval_v   public setTitle(int)
  eval_w   private showForActionMode()
  eval_w   public setShowHideAnimationEnabled(boolean)
  eval_x   public getHeight()
  eval_y   public getElevation()
  eval_z   public hideForSystem()
  f        public getCustomView()
  f        static access$400(android.support.v7.internal.app.WindowDecorActionBar)
  f        private updateVisibility(boolean)
  f        public setCustomView(int)
  g        public onContentScrollStarted()
  g        public setCustomView(android.view.View)
  g        public setDisplayHomeAsUpEnabled(boolean)
  h        public getDisplayOptions()
  h        static access$1200(android.support.v7.internal.app.WindowDecorActionBar)
  h        public setDisplayUseLogoEnabled(boolean)
  i        public setCustomView(android.view.View,android.support.v7.app.ActionBar$LayoutParams)
  j        public addTab(android.support.v7.app.ActionBar$Tab,boolean)
  j        private init(android.view.View)
  k        public setSubtitle(java.lang.CharSequence)
  l        getTintManager()
  l        public setListNavigationCallbacks(android.widget.SpinnerAdapter,android.support.v7.app.ActionBar$OnNavigationListener)
  l        private static checkShowingFlags(boolean,boolean,boolean)
  l        public setIcon(int)
  m        public getNavigationItemCount()
  m        public setBackgroundDrawable(android.graphics.drawable.Drawable)
  m        static access$700(android.support.v7.internal.app.WindowDecorActionBar)
  n        public addTab(android.support.v7.app.ActionBar$Tab,int,boolean)
  n        public setDisplayShowHomeEnabled(boolean)
  n        public setDisplayOptions(int)
  o        completeDeferredDestroyActionMode()
  o        public onConfigurationChanged(android.content.res.Configuration)
  o        public setHomeAsUpIndicator(int)
  p        public getNavigationMode()
  p        public setHideOffset(int)
  q        static access$000(android.support.v7.internal.app.WindowDecorActionBar)
  q        static access$900(boolean,boolean,boolean)
  q        public setElevation(float)
  q        public setSubtitle(int)
  r        public hasLogo()
  s        public getSubtitle()
  s        public setHomeAsUpIndicator(android.graphics.drawable.Drawable)
  s        public addOnMenuVisibilityListener(android.support.v7.app.ActionBar$OnMenuVisibilityListener)
  s        public doHide(boolean)
  s        public setWindowTitle(java.lang.CharSequence)
  t        public setLogo(android.graphics.drawable.Drawable)
  t        public setDisplayOptions(int,int)
  u        public removeAllTabs()
  u        static access$300(android.support.v7.internal.app.WindowDecorActionBar)
  u        public getTabAt(int)
  v        public isHideOnContentScrollEnabled()
  v        static access$1100(android.support.v7.internal.app.WindowDecorActionBar)
  w        public selectTab(android.support.v7.app.ActionBar$Tab)
  w        static access$600(android.support.v7.internal.app.WindowDecorActionBar)
  w        public setHomeActionContentDescription(int)
  x        public showForSystem()
  x        static access$100(android.support.v7.internal.app.WindowDecorActionBar)
  x        public setHideOnContentScrollEnabled(boolean)
  y        public getSelectedTab()
  y        public removeTab(android.support.v7.app.ActionBar$Tab)
  y        public addTab(android.support.v7.app.ActionBar$Tab,int)
  y        public dispatchMenuVisibilityChanged(boolean)
  z        public getSelectedNavigationIndex()
  z        public setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
  z        public setHomeButtonEnabled(boolean)

android.support.v7.internal.app.WindowDecorActionBar$1   (be.brunoparmentier.apkshare.eval_bn$1)
===============================================================================
  b    public onAnimationEnd(android.view.View)

android.support.v7.internal.app.WindowDecorActionBar$2   (be.brunoparmentier.apkshare.eval_bn$2)
===============================================================================
  b    public onAnimationEnd(android.view.View)

android.support.v7.internal.app.WindowDecorActionBar$3   (be.brunoparmentier.apkshare.eval_bn$3)
===============================================================================
  p    public onAnimationUpdate(android.view.View)

android.support.v7.internal.app.WindowDecorActionBar$ActionModeImpl      (be.brunoparmentier.apkshare.eval_bn$u)
===============================================================================
  b        public getSubtitle()
  c        public dispatchOnCreate()
  e        public getMenuInflater()
  eval_q   public setCustomView(android.view.View)
  g        public onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem)
  h        public onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder)
  j        public onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)
  j        public setSubtitle(int)
  n        public setTitle(int)
  n        public setTitle(java.lang.CharSequence)
  o        public getMenu()
  q        public getCustomView()
  u        public finish()
  u        public onCloseSubMenu(android.support.v7.internal.view.menu.SubMenuBuilder)
  v        public isTitleOptional()
  v        public setTitleOptionalHint(boolean)
  v        public setSubtitle(java.lang.CharSequence)
  w        public invalidate()
  y        public getTitle()
  y        public onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder)

android.support.v7.internal.app.WindowDecorActionBar$ParseException      (be.brunoparmentier.apkshare.eval_bk)
===============================================================================
  No methods

android.support.v7.internal.app.WindowDecorActionBar$TabImpl     (be.brunoparmentier.apkshare.eval_bn$f)
===============================================================================
  c        public setText(int)
  d        public setTag(java.lang.Object)
  eval_d   public setCustomView(android.view.View)
  eval_h   public getCallback()
  eval_o   public setContentDescription(java.lang.CharSequence)
  eval_p   public setPosition(int)
  g        public select()
  l        public getIcon()
  l        public setIcon(android.graphics.drawable.Drawable)
  m        public getText()
  m        public setTabListener(android.support.v7.app.ActionBar$TabListener)
  o        public getContentDescription()
  o        public setContentDescription(int)
  p        public getPosition()
  s        public setText(java.lang.CharSequence)
  u        public getCustomView()
  u        public setIcon(int)
  v        public setCustomView(int)
  z        public getTag()

android.support.v7.internal.text.AllCapsTransformationMethod     (be.brunoparmentier.apkshare.eval_ke)
===============================================================================
  getTransformation    public getTransformation(java.lang.CharSequence,android.view.View)
  onFocusChanged       public onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect)

android.support.v7.internal.text.AllCapsTransformationMethod$NullPointerException        (be.brunoparmentier.apkshare.eval_jt)
===============================================================================
  No methods

android.support.v7.internal.transition.ActionBarTransition       (be.brunoparmentier.apkshare.eval_y4)
===============================================================================
  o    public static beginDelayedTransition(android.view.ViewGroup)

android.support.v7.internal.transition.ActionBarTransition$IOException   (be.brunoparmentier.apkshare.eval_z_)
===============================================================================
  No methods

android.support.v7.internal.view.ActionBarPolicy (be.brunoparmentier.apkshare.eval_sc)
===============================================================================
  b    public enableHomeButtonByDefault()
  f    public getTabContainerHeight()
  j    public getMaxActionButtons()
  l    public hasEmbeddedTabs()
  p    public getStackedTabMaxWidth()
  s    public static get(android.content.Context)
  t    public getEmbeddedMenuWidthLimit()
  y    public showsOverflowMenuButton()

android.support.v7.internal.view.ActionBarPolicy$IOException     (be.brunoparmentier.apkshare.eval_a_)
===============================================================================
  No methods

android.support.v7.internal.view.ContextThemeWrapper     (be.brunoparmentier.apkshare.eval_nc)
===============================================================================
  eval_d           public getThemeResId()
  m                protected onApplyThemeResource(android.content.res.Resources$Theme,int,boolean)
  u                private initializeTheme()
  getSystemService public getSystemService(java.lang.String)
  getTheme         public getTheme()
  setTheme         public setTheme(int)

android.support.v7.internal.view.ContextThemeWrapper$ParseException      (be.brunoparmentier.apkshare.eval_st)
===============================================================================
  No methods

android.support.v7.internal.view.StandaloneActionMode    (be.brunoparmentier.apkshare.eval_et)
===============================================================================
  b        public getSubtitle()
  d        public onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder)
  e        public getMenuInflater()
  eval_g   public isUiFocusable()
  eval_q   public setCustomView(android.view.View)
  g        public onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem)
  h        public onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder)
  j        public setSubtitle(int)
  n        public setTitle(int)
  n        public setTitle(java.lang.CharSequence)
  o        public getMenu()
  p        public onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)
  q        public getCustomView()
  q        public onCloseSubMenu(android.support.v7.internal.view.menu.SubMenuBuilder)
  u        public finish()
  v        public isTitleOptional()
  v        public setTitleOptionalHint(boolean)
  v        public setSubtitle(java.lang.CharSequence)
  w        public invalidate()
  y        public getTitle()

android.support.v7.internal.view.StandaloneActionMode$IOException        (be.brunoparmentier.apkshare.eval_a4)
===============================================================================
  No methods

android.support.v7.internal.view.SupportActionModeWrapper        (be.brunoparmentier.apkshare.eval_b1)
===============================================================================
  finish               public finish()
  getCustomView        public getCustomView()
  getMenu              public getMenu()
  getMenuInflater      public getMenuInflater()
  getSubtitle          public getSubtitle()
  getTag               public getTag()
  getTitle             public getTitle()
  getTitleOptionalHint public getTitleOptionalHint()
  invalidate           public invalidate()
  isTitleOptional      public isTitleOptional()
  setCustomView        public setCustomView(android.view.View)
  setSubtitle          public setSubtitle(int)
  setSubtitle          public setSubtitle(java.lang.CharSequence)
  setTag               public setTag(java.lang.Object)
  setTitle             public setTitle(int)
  setTitle             public setTitle(java.lang.CharSequence)
  setTitleOptionalHint public setTitleOptionalHint(boolean)

android.support.v7.internal.view.SupportActionModeWrapper$CallbackWrapper        (be.brunoparmentier.apkshare.eval_b1$w)
===============================================================================
  a    public onDestroyActionMode(android.support.v7.view.ActionMode)
  h    private getActionModeWrapper(android.support.v7.view.ActionMode)
  j    public addActionModeWrapper(android.support.v7.internal.view.SupportActionModeWrapper)
  j    public onPrepareActionMode(android.support.v7.view.ActionMode,android.view.Menu)
  q    public onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem)
  r    public onCreateActionMode(android.support.v7.view.ActionMode,android.view.Menu)
  v    private getMenuWrapper(android.view.Menu)

android.support.v7.internal.view.SupportActionModeWrapper$ParseException (be.brunoparmentier.apkshare.eval_vl)
===============================================================================
  No methods

android.support.v7.internal.view.SupportMenuInflater     (be.brunoparmentier.apkshare.eval_mu)
===============================================================================
  b        private parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu)
  e        static access$500()
  j        static access$300(android.support.v7.internal.view.SupportMenuInflater)
  l        private getRealOwner()
  l        static access$600(android.support.v7.internal.view.SupportMenuInflater)
  n        static access$200()
  t        private findRealOwner(java.lang.Object)
  w        static access$400(android.support.v7.internal.view.SupportMenuInflater)
  z        static access$100(android.support.v7.internal.view.SupportMenuInflater)
  inflate  public inflate(int,android.view.Menu)

android.support.v7.internal.view.SupportMenuInflater$InflatedOnMenuItemClickListener     (be.brunoparmentier.apkshare.eval_mu$e)
===============================================================================
  onMenuItemClick  public onMenuItemClick(android.view.MenuItem)

android.support.v7.internal.view.SupportMenuInflater$MenuState   (be.brunoparmentier.apkshare.eval_mu$a)
===============================================================================
  e        private setItem(android.view.MenuItem)
  eval_e   static access$000(android.support.v7.internal.view.SupportMenuInflater$MenuState)
  eval_p   public hasAddedItem()
  f        public addItem()
  i        private newInstance(java.lang.String,java.lang.Class[],java.lang.Object[])
  k        public readGroup(android.util.AttributeSet)
  o        public resetGroup()
  r        public readItem(android.util.AttributeSet)
  t        private getShortcut(java.lang.String)
  w        public addSubMenuItem()

android.support.v7.internal.view.SupportMenuInflater$ParseException      (be.brunoparmentier.apkshare.eval_ii)
===============================================================================
  No methods

android.support.v7.internal.view.ViewPropertyAnimatorCompatSet   (be.brunoparmentier.apkshare.eval_tw)
===============================================================================
  a    public cancel()
  c    public setListener(android.support.v4.view.ViewPropertyAnimatorListener)
  d    public play(android.support.v4.view.ViewPropertyAnimatorCompat)
  j    public start()
  j    static access$000(android.support.v7.internal.view.ViewPropertyAnimatorCompatSet)
  k    public setDuration(long)
  t    private onAnimationsEnded()
  w    static access$100(android.support.v7.internal.view.ViewPropertyAnimatorCompatSet)
  x    static access$200(android.support.v7.internal.view.ViewPropertyAnimatorCompatSet)
  y    public setInterpolator(android.view.animation.Interpolator)

android.support.v7.internal.view.ViewPropertyAnimatorCompatSet$1 (be.brunoparmentier.apkshare.eval_tw$1)
===============================================================================
  b    public onAnimationEnd(android.view.View)
  f    onEnd()
  s    public onAnimationStart(android.view.View)

android.support.v7.internal.view.ViewPropertyAnimatorCompatSet$ParseException    (be.brunoparmentier.apkshare.eval_ba)
===============================================================================
  No methods

android.support.v7.internal.view.WindowCallbackWrapper   (be.brunoparmentier.apkshare.eval_zt)
===============================================================================
  dispatchGenericMotionEvent       public dispatchGenericMotionEvent(android.view.MotionEvent)
  dispatchKeyEvent                 public dispatchKeyEvent(android.view.KeyEvent)
  dispatchKeyShortcutEvent         public dispatchKeyShortcutEvent(android.view.KeyEvent)
  dispatchPopulateAccessibilityEvent   public dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
  dispatchTouchEvent               public dispatchTouchEvent(android.view.MotionEvent)
  dispatchTrackballEvent           public dispatchTrackballEvent(android.view.MotionEvent)
  onActionModeFinished             public onActionModeFinished(android.view.ActionMode)
  onActionModeStarted              public onActionModeStarted(android.view.ActionMode)
  onAttachedToWindow               public onAttachedToWindow()
  onContentChanged                 public onContentChanged()
  onCreatePanelMenu                public onCreatePanelMenu(int,android.view.Menu)
  onCreatePanelView                public onCreatePanelView(int)
  onDetachedFromWindow             public onDetachedFromWindow()
  onMenuItemSelected               public onMenuItemSelected(int,android.view.MenuItem)
  onMenuOpened                     public onMenuOpened(int,android.view.Menu)
  onPanelClosed                    public onPanelClosed(int,android.view.Menu)
  onPreparePanel                   public onPreparePanel(int,android.view.View,android.view.Menu)
  onSearchRequested                public onSearchRequested()
  onWindowAttributesChanged        public onWindowAttributesChanged(android.view.WindowManager$LayoutParams)
  onWindowFocusChanged             public onWindowFocusChanged(boolean)
  onWindowStartingActionMode       public onWindowStartingActionMode(android.view.ActionMode$Callback)

android.support.v7.internal.view.WindowCallbackWrapper$Exception (be.brunoparmentier.apkshare.eval_t7)
===============================================================================
  No methods

android.support.v7.internal.view.menu.ActionMenuItem     (be.brunoparmentier.apkshare.eval_x9)
===============================================================================
  d                            public setSupportActionProvider(android.support.v4.view.ActionProvider)
  g                            public setExclusiveCheckable(boolean)
  i                            public invoke()
  p                            public setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener)
  setActionView                public setActionView(android.view.View)
  setActionView                public setActionView(int)
  setShowAsActionFlags         public setShowAsActionFlags(int)
  w                            public getSupportActionProvider()
  collapseActionView           public collapseActionView()
  expandActionView             public expandActionView()
  getActionProvider            public getActionProvider()
  getActionView                public getActionView()
  getAlphabeticShortcut        public getAlphabeticShortcut()
  getGroupId                   public getGroupId()
  getIcon                      public getIcon()
  getIntent                    public getIntent()
  getItemId                    public getItemId()
  getMenuInfo                  public getMenuInfo()
  getNumericShortcut           public getNumericShortcut()
  getOrder                     public getOrder()
  getSubMenu                   public getSubMenu()
  getTitle                     public getTitle()
  getTitleCondensed            public getTitleCondensed()
  hasSubMenu                   public hasSubMenu()
  isActionViewExpanded         public isActionViewExpanded()
  isCheckable                  public isCheckable()
  isChecked                    public isChecked()
  isEnabled                    public isEnabled()
  isVisible                    public isVisible()
  setActionProvider            public setActionProvider(android.view.ActionProvider)
  setActionView                public volatile setActionView(android.view.View)
  setActionView                public volatile setActionView(int)
  setAlphabeticShortcut        public setAlphabeticShortcut(char)
  setCheckable                 public setCheckable(boolean)
  setChecked                   public setChecked(boolean)
  setEnabled                   public setEnabled(boolean)
  setIcon                      public setIcon(android.graphics.drawable.Drawable)
  setIcon                      public setIcon(int)
  setIntent                    public setIntent(android.content.Intent)
  setNumericShortcut           public setNumericShortcut(char)
  setOnActionExpandListener    public setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)
  setOnMenuItemClickListener   public setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)
  setShortcut                  public setShortcut(char,char)
  setShowAsAction              public setShowAsAction(int)
  setShowAsActionFlags         public volatile setShowAsActionFlags(int)
  setTitle                     public setTitle(int)
  setTitle                     public setTitle(java.lang.CharSequence)
  setTitleCondensed            public setTitleCondensed(java.lang.CharSequence)
  setVisible                   public setVisible(boolean)

android.support.v7.internal.view.menu.ActionMenuItem$ParseException      (be.brunoparmentier.apkshare.eval_j3)
===============================================================================
  No methods

android.support.v7.internal.view.menu.ActionMenuItemView (be.brunoparmentier.apkshare.eval_bh)
===============================================================================
  d                        static access$200(android.support.v7.internal.view.menu.ActionMenuItemView)
  eval_d                   public setIcon(android.graphics.drawable.Drawable)
  g                        static access$000(android.support.v7.internal.view.menu.ActionMenuItemView)
  g                        public setShortcut(boolean,char)
  h                        public setItemInvoker(android.support.v7.internal.view.menu.MenuBuilder$ItemInvoker)
  i                        public needsDividerBefore()
  j                        private updateTextButtonVisibility()
  k                        public getItemData()
  n                        public setPopupCallback(android.support.v7.internal.view.menu.ActionMenuItemView$PopupCallback)
  n                        public setExpandedFormat(boolean)
  o                        public hasText()
  p                        public initialize(android.support.v7.internal.view.menu.MenuItemImpl,int)
  p                        public setCheckable(boolean)
  p                        public setTitle(java.lang.CharSequence)
  r                        public prefersCondensedTitle()
  s                        public setChecked(boolean)
  w                        public showsIcon()
  y                        static access$100(android.support.v7.internal.view.menu.ActionMenuItemView)
  z                        public needsDividerAfter()
  onClick                  public onClick(android.view.View)
  onConfigurationChanged   public onConfigurationChanged(android.content.res.Configuration)
  onLongClick              public onLongClick(android.view.View)
  onMeasure                protected onMeasure(int,int)
  onTouchEvent             public onTouchEvent(android.view.MotionEvent)
  setPadding               public setPadding(int,int,int,int)

android.support.v7.internal.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener        (be.brunoparmentier.apkshare.eval_bh$j)
===============================================================================
  a    protected onForwardingStopped()
  i    protected onForwardingStarted()
  n    public getPopup()

android.support.v7.internal.view.menu.ActionMenuItemView$ArrayOutOfBoundsException       (be.brunoparmentier.apkshare.eval_kf)
===============================================================================
  No methods

android.support.v7.internal.view.menu.ActionMenuItemView$PopupCallback   (be.brunoparmentier.apkshare.eval_bh$e)
===============================================================================
  g    public abstract getPopup()

android.support.v7.internal.view.menu.BaseMenuPresenter  (be.brunoparmentier.apkshare.eval_tn)
===============================================================================
  a        public getItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)
  b        public setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback)
  c        public initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder)
  d        public getCallback()
  eval_g   protected addItemView(android.view.View,int)
  g        public getId()
  h        public onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)
  j        public flagActionItems()
  j        public setId(int)
  k        public createItemView(android.view.ViewGroup)
  l        public expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl)
  l        public onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder)
  m        public shouldIncludeItem(int,android.support.v7.internal.view.menu.MenuItemImpl)
  s        public getMenuView(android.view.ViewGroup)
  t        public abstract bindItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.support.v7.internal.view.menu.MenuView$ItemView)
  v        public collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl)
  v        public updateMenuView(boolean)
  y        protected filterLeftoverView(android.view.ViewGroup,int)

android.support.v7.internal.view.menu.BaseMenuPresenter$NullPointerException     (be.brunoparmentier.apkshare.eval__b)
===============================================================================
  No methods

android.support.v7.internal.view.menu.BaseMenuWrapper    (be.brunoparmentier.apkshare.eval_z3)
===============================================================================
  g    final internalClear()
  j    final internalRemoveGroup(int)
  l    final getSubMenuWrapper(android.view.SubMenu)
  x    final internalRemoveItem(int)
  z    final getMenuItemWrapper(android.view.MenuItem)

android.support.v7.internal.view.menu.BaseMenuWrapper$IOException        (be.brunoparmentier.apkshare.eval__1)
===============================================================================
  No methods

android.support.v7.internal.view.menu.BaseWrapper        (be.brunoparmentier.apkshare.eval_ns)
===============================================================================
  n    public getWrappedObject()

android.support.v7.internal.view.menu.BaseWrapper$Exception      (be.brunoparmentier.apkshare.eval_rz)
===============================================================================
  No methods

android.support.v7.internal.view.menu.ExpandedMenuView   (be.brunoparmentier.apkshare.eval__x)
===============================================================================
  k                    public invokeItem(android.support.v7.internal.view.menu.MenuItemImpl)
  l                    public getWindowAnimations()
  s                    public initialize(android.support.v7.internal.view.menu.MenuBuilder)
  onDetachedFromWindow protected onDetachedFromWindow()
  onItemClick          public onItemClick(android.widget.AdapterView,android.view.View,int,long)

android.support.v7.internal.view.menu.ExpandedMenuView$Exception (be.brunoparmentier.apkshare.eval_yc)
===============================================================================
  No methods

android.support.v7.internal.view.menu.ListMenuItemView   (be.brunoparmentier.apkshare.eval_s9)
===============================================================================
  b                private insertIconView()
  eval_d           public setIcon(android.graphics.drawable.Drawable)
  eval_i           private insertCheckBox()
  g                public setShortcut(boolean,char)
  k                public getItemData()
  m                private getInflater()
  n                private insertRadioButton()
  p                public initialize(android.support.v7.internal.view.menu.MenuItemImpl,int)
  p                public setCheckable(boolean)
  p                public setTitle(java.lang.CharSequence)
  r                public prefersCondensedTitle()
  r                public setForceShowIcon(boolean)
  s                public setChecked(boolean)
  w                public showsIcon()
  onFinishInflate  protected onFinishInflate()
  onMeasure        protected onMeasure(int,int)

android.support.v7.internal.view.menu.ListMenuItemView$Exception (be.brunoparmentier.apkshare.eval_nx)
===============================================================================
  No methods

android.support.v7.internal.view.menu.ListMenuPresenter  (be.brunoparmentier.apkshare.eval_uy)
===============================================================================
  a            public restoreHierarchyState(android.os.Bundle)
  b            public setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback)
  c            public initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder)
  c            public setItemIndexOffset(int)
  eval_x       getItemIndexOffset()
  g            public getId()
  h            public onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)
  h            public setId(int)
  i            public onSaveInstanceState()
  j            public flagActionItems()
  l            public expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl)
  l            public onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder)
  o            public saveHierarchyState(android.os.Bundle)
  q            public onRestoreInstanceState(android.os.Parcelable)
  s            public getMenuView(android.view.ViewGroup)
  t            static access$000(android.support.v7.internal.view.menu.ListMenuPresenter)
  v            public collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl)
  v            public updateMenuView(boolean)
  y            public getAdapter()
  onItemClick  public onItemClick(android.widget.AdapterView,android.view.View,int,long)

android.support.v7.internal.view.menu.ListMenuPresenter$MenuAdapter      (be.brunoparmentier.apkshare.eval_uy$b)
===============================================================================
  getItem              public getItem(int)
  n                    findExpandedIndex()
  getCount             public getCount()
  getItem              public volatile getItem(int)
  getItemId            public getItemId(int)
  getView              public getView(int,android.view.View,android.view.ViewGroup)
  notifyDataSetChanged public notifyDataSetChanged()

android.support.v7.internal.view.menu.ListMenuPresenter$NullPointerException     (be.brunoparmentier.apkshare.eval_sj)
===============================================================================
  No methods

android.support.v7.internal.view.menu.MenuBuilder        (be.brunoparmentier.apkshare.eval_gx)
===============================================================================
  a                        public getHeaderTitle()
  b                        private dispatchPresenterUpdate(boolean)
  c                        getResources()
  c                        dispatchMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem)
  d                        private dispatchSaveInstanceState(android.os.Bundle)
  d                        protected setHeaderIconInt(int)
  e                        getOptionalIconsVisible()
  e                        protected setHeaderTitleInt(int)
  eval_a                   private dispatchRestoreInstanceState(android.os.Bundle)
  eval_b                   public getRootMenu()
  eval_f                   public getVisibleItems()
  eval_h                   public stopDispatchingItemsChanged()
  eval_j                   public flagActionItems()
  eval_q                   public getHeaderIcon()
  eval_v                   private dispatchSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder,android.support.v7.internal.view.menu.MenuPresenter)
  f                        public final close(boolean)
  f                        findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent)
  g                        public removeMenuPresenter(android.support.v7.internal.view.menu.MenuPresenter)
  i                        public getExpandedItem()
  i                        public addMenuPresenter(android.support.v7.internal.view.menu.MenuPresenter,android.content.Context)
  i                        public findItemIndex(int)
  j                        public isShortcutsVisible()
  j                        onItemActionRequestChanged(android.support.v7.internal.view.menu.MenuItemImpl)
  j                        public setDefaultShowAsAction(int)
  j                        public findGroupIndex(int,int)
  k                        public saveActionViewStates(android.os.Bundle)
  k                        public performItemAction(android.view.MenuItem,int)
  k                        private setShortcutsVisibleInner(boolean)
  l                        protected getActionViewStatesKey()
  m                        public clearAll()
  m                        public restorePresenterStates(android.os.Bundle)
  m                        findItemWithShortcutForKey(int,android.view.KeyEvent)
  n                        public getContext()
  n                        protected setHeaderIconInt(android.graphics.drawable.Drawable)
  n                        private setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View)
  n                        private static findInsertIndex(java.util.ArrayList,int)
  o                        public setCallback(android.support.v7.internal.view.menu.MenuBuilder$Callback)
  p                        public getNonActionItems()
  p                        public restoreActionViewStates(android.os.Bundle)
  p                        public collapseItemActionView(android.support.v7.internal.view.menu.MenuItemImpl)
  p                        setExclusiveItemChecked(android.view.MenuItem)
  p                        public performItemAction(android.view.MenuItem,android.support.v7.internal.view.menu.MenuPresenter,int)
  p                        private static getOrdering(int)
  p                        private createNewMenuItem(int,int,int,int,java.lang.CharSequence,int)
  q                        public changeMenuMode()
  q                        public expandItemActionView(android.support.v7.internal.view.menu.MenuItemImpl)
  q                        public findGroupIndex(int)
  r                        public addMenuPresenter(android.support.v7.internal.view.menu.MenuPresenter)
  r                        public setOverrideVisibleItems(boolean)
  s                        public getHeaderView()
  s                        public setShortcutsVisible(boolean)
  s                        protected setHeaderTitleInt(java.lang.CharSequence)
  u                        public setCurrentMenuInfo(android.view.ContextMenu$ContextMenuInfo)
  u                        protected setHeaderViewInt(android.view.View)
  u                        public removeItemAt(int)
  u                        private removeItemAtInt(int,boolean)
  w                        isQwertyMode()
  w                        setOptionalIconsVisible(boolean)
  x                        public onItemsChanged(boolean)
  x                        private addInternal(int,int,int,java.lang.CharSequence)
  y                        public startDispatchingItemsChanged()
  y                        onItemVisibleChanged(android.support.v7.internal.view.menu.MenuItemImpl)
  z                        public getActionItems()
  z                        public savePresenterStates(android.os.Bundle)
  add                      public add(int)
  add                      public add(int,int,int,int)
  add                      public add(int,int,int,java.lang.CharSequence)
  add                      public add(java.lang.CharSequence)
  addIntentOptions         public addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])
  addSubMenu               public addSubMenu(int)
  addSubMenu               public addSubMenu(int,int,int,int)
  addSubMenu               public addSubMenu(int,int,int,java.lang.CharSequence)
  addSubMenu               public addSubMenu(java.lang.CharSequence)
  clear                    public clear()
  clearHeader              public clearHeader()
  close                    public close()
  findItem                 public findItem(int)
  getItem                  public getItem(int)
  hasVisibleItems          public hasVisibleItems()
  isShortcutKey            public isShortcutKey(int,android.view.KeyEvent)
  performIdentifierAction  public performIdentifierAction(int,int)
  performShortcut          public performShortcut(int,android.view.KeyEvent,int)
  removeGroup              public removeGroup(int)
  removeItem               public removeItem(int)
  setGroupCheckable        public setGroupCheckable(int,boolean,boolean)
  setGroupEnabled          public setGroupEnabled(int,boolean)
  setGroupVisible          public setGroupVisible(int,boolean)
  setQwertyMode            public setQwertyMode(boolean)
  size                     public size()

android.support.v7.internal.view.menu.MenuBuilder$Callback       (be.brunoparmentier.apkshare.eval_gx$n)
===============================================================================
  g    public abstract onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem)
  h    public abstract onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder)

android.support.v7.internal.view.menu.MenuBuilder$Exception      (be.brunoparmentier.apkshare.eval_p0)
===============================================================================
  No methods

android.support.v7.internal.view.menu.MenuBuilder$ItemInvoker    (be.brunoparmentier.apkshare.eval_gx$w)
===============================================================================
  k    public abstract invokeItem(android.support.v7.internal.view.menu.MenuItemImpl)

android.support.v7.internal.view.menu.MenuDialogHelper   (be.brunoparmentier.apkshare.eval_ia)
===============================================================================
  a            public onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder)
  d            public dismiss()
  e            public setPresenterCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback)
  eval_t       public show(android.os.IBinder)
  f            public onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)
  onClick      public onClick(android.content.DialogInterface,int)
  onDismiss    public onDismiss(android.content.DialogInterface)
  onKey        public onKey(android.content.DialogInterface,int,android.view.KeyEvent)

android.support.v7.internal.view.menu.MenuDialogHelper$Exception (be.brunoparmentier.apkshare.eval_ej)
===============================================================================
  No methods

android.support.v7.internal.view.menu.MenuItemImpl       (be.brunoparmentier.apkshare.eval_gz)
===============================================================================
  b                            public isExclusiveCheckable()
  b                            public setActionViewExpanded(boolean)
  c                            public isActionButton()
  d                            public setSupportActionProvider(android.support.v4.view.ActionProvider)
  e                            shouldShowShortcut()
  eval_j                       public showsTextAsAction()
  f                            public setExclusiveCheckable(boolean)
  g                            public requiresActionButton()
  g                            setCheckedInt(boolean)
  i                            public hasCollapsibleActionView()
  l                            setSubMenu(android.support.v7.internal.view.menu.SubMenuBuilder)
  l                            public setCallback(java.lang.Runnable)
  n                            getCallback()
  o                            getShortcut()
  o                            setMenuInfo(android.view.ContextMenu$ContextMenuInfo)
  o                            setVisibleInt(boolean)
  p                            public setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener)
  r                            public requestsActionButton()
  setActionView                public setActionView(android.view.View)
  setActionView                public setActionView(int)
  setShowAsActionFlags         public setShowAsActionFlags(int)
  t                            static access$000(android.support.v7.internal.view.menu.MenuItemImpl)
  u                            public getOrdering()
  v                            public invoke()
  w                            public getSupportActionProvider()
  w                            getTitleForItemView(android.support.v7.internal.view.menu.MenuView$ItemView)
  x                            getShortcutLabel()
  y                            public actionFormatChanged()
  y                            public setIsActionButton(boolean)
  z                            public shouldShowIcon()
  collapseActionView           public collapseActionView()
  expandActionView             public expandActionView()
  getActionProvider            public getActionProvider()
  getActionView                public getActionView()
  getAlphabeticShortcut        public getAlphabeticShortcut()
  getGroupId                   public getGroupId()
  getIcon                      public getIcon()
  getIntent                    public getIntent()
  getItemId                    public getItemId()
  getMenuInfo                  public getMenuInfo()
  getNumericShortcut           public getNumericShortcut()
  getOrder                     public getOrder()
  getSubMenu                   public getSubMenu()
  getTitle                     public getTitle()
  getTitleCondensed            public getTitleCondensed()
  hasSubMenu                   public hasSubMenu()
  isActionViewExpanded         public isActionViewExpanded()
  isCheckable                  public isCheckable()
  isChecked                    public isChecked()
  isEnabled                    public isEnabled()
  isVisible                    public isVisible()
  setActionProvider            public setActionProvider(android.view.ActionProvider)
  setActionView                public volatile setActionView(android.view.View)
  setActionView                public volatile setActionView(int)
  setAlphabeticShortcut        public setAlphabeticShortcut(char)
  setCheckable                 public setCheckable(boolean)
  setChecked                   public setChecked(boolean)
  setEnabled                   public setEnabled(boolean)
  setIcon                      public setIcon(android.graphics.drawable.Drawable)
  setIcon                      public setIcon(int)
  setIntent                    public setIntent(android.content.Intent)
  setNumericShortcut           public setNumericShortcut(char)
  setOnActionExpandListener    public setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)
  setOnMenuItemClickListener   public setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)
  setShortcut                  public setShortcut(char,char)
  setShowAsAction              public setShowAsAction(int)
  setShowAsActionFlags         public volatile setShowAsActionFlags(int)
  setTitle                     public setTitle(int)
  setTitle                     public setTitle(java.lang.CharSequence)
  setTitleCondensed            public setTitleCondensed(java.lang.CharSequence)
  setVisible                   public setVisible(boolean)
  toString                     public toString()

android.support.v7.internal.view.menu.MenuItemImpl$1     (be.brunoparmentier.apkshare.eval_gz$1)
===============================================================================
  n    public onActionProviderVisibilityChanged(boolean)

android.support.v7.internal.view.menu.MenuItemImpl$NullPointerException  (be.brunoparmentier.apkshare.eval_zw)
===============================================================================
  No methods

android.support.v7.internal.view.menu.MenuItemWrapperICS (be.brunoparmentier.apkshare.eval_qd)
===============================================================================
  j                            createActionProviderWrapper(android.view.ActionProvider)
  u                            public setExclusiveCheckable(boolean)
  collapseActionView           public collapseActionView()
  expandActionView             public expandActionView()
  getActionProvider            public getActionProvider()
  getActionView                public getActionView()
  getAlphabeticShortcut        public getAlphabeticShortcut()
  getGroupId                   public getGroupId()
  getIcon                      public getIcon()
  getIntent                    public getIntent()
  getItemId                    public getItemId()
  getMenuInfo                  public getMenuInfo()
  getNumericShortcut           public getNumericShortcut()
  getOrder                     public getOrder()
  getSubMenu                   public getSubMenu()
  getTitle                     public getTitle()
  getTitleCondensed            public getTitleCondensed()
  hasSubMenu                   public hasSubMenu()
  isActionViewExpanded         public isActionViewExpanded()
  isCheckable                  public isCheckable()
  isChecked                    public isChecked()
  isEnabled                    public isEnabled()
  isVisible                    public isVisible()
  setActionProvider            public setActionProvider(android.view.ActionProvider)
  setActionView                public setActionView(android.view.View)
  setActionView                public setActionView(int)
  setAlphabeticShortcut        public setAlphabeticShortcut(char)
  setCheckable                 public setCheckable(boolean)
  setChecked                   public setChecked(boolean)
  setEnabled                   public setEnabled(boolean)
  setIcon                      public setIcon(android.graphics.drawable.Drawable)
  setIcon                      public setIcon(int)
  setIntent                    public setIntent(android.content.Intent)
  setNumericShortcut           public setNumericShortcut(char)
  setOnActionExpandListener    public setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)
  setOnMenuItemClickListener   public setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)
  setShortcut                  public setShortcut(char,char)
  setShowAsAction              public setShowAsAction(int)
  setShowAsActionFlags         public setShowAsActionFlags(int)
  setTitle                     public setTitle(int)
  setTitle                     public setTitle(java.lang.CharSequence)
  setTitleCondensed            public setTitleCondensed(java.lang.CharSequence)
  setVisible                   public setVisible(boolean)

android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper   (be.brunoparmentier.apkshare.eval_qd$k)
===============================================================================
  e        public onPrepareSubMenu(android.view.SubMenu)
  eval__   public hasSubMenu()
  g        public onPerformDefaultAction()
  q        public onCreateActionView()

android.support.v7.internal.view.menu.MenuItemWrapperICS$ArrayOutOfBoundsException       (be.brunoparmentier.apkshare.eval_xb)
===============================================================================
  No methods

android.support.v7.internal.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper    (be.brunoparmentier.apkshare.eval_qd$q)
===============================================================================
  c    getWrappedView()
  e    public onActionViewCollapsed()
  y    public onActionViewExpanded()

android.support.v7.internal.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper   (be.brunoparmentier.apkshare.eval_qd$z)
===============================================================================
  e    public onMenuItemActionCollapse(android.view.MenuItem)
  g    public onMenuItemActionExpand(android.view.MenuItem)

android.support.v7.internal.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper  (be.brunoparmentier.apkshare.eval_qd$o)
===============================================================================
  onMenuItemClick  public onMenuItemClick(android.view.MenuItem)

android.support.v7.internal.view.menu.MenuItemWrapperJB  (be.brunoparmentier.apkshare.eval_b4)
===============================================================================
  j    createActionProviderWrapper(android.view.ActionProvider)

android.support.v7.internal.view.menu.MenuItemWrapperJB$ActionProviderWrapperJB  (be.brunoparmentier.apkshare.eval_b4$j)
===============================================================================
  k                                public refreshVisibility()
  p                                public onCreateActionView(android.view.MenuItem)
  u                                public isVisible()
  w                                public overridesItemVisibility()
  x                                public setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener)
  onActionProviderVisibilityChanged    public onActionProviderVisibilityChanged(boolean)

android.support.v7.internal.view.menu.MenuItemWrapperJB$NullPointerException     (be.brunoparmentier.apkshare.eval_ho)
===============================================================================
  No methods

android.support.v7.internal.view.menu.MenuPopupHelper    (be.brunoparmentier.apkshare.eval_i6)
===============================================================================
  a                public isShowing()
  a                static access$300(android.support.v7.internal.view.menu.MenuPopupHelper)
  b                private measureContentWidth()
  b                public setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback)
  c                public initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder)
  d                static access$100(android.support.v7.internal.view.menu.MenuPopupHelper)
  e                static access$200(android.support.v7.internal.view.menu.MenuPopupHelper)
  eval_p           public dismiss()
  f                public setAnchorView(android.view.View)
  g                public getId()
  h                public show()
  h                public onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)
  i                public onSaveInstanceState()
  i                public setForceShowIcon(boolean)
  j                public flagActionItems()
  l                public expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl)
  l                public onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder)
  n                public setGravity(int)
  o                public getPopup()
  q                public onRestoreInstanceState(android.os.Parcelable)
  s                public getMenuView(android.view.ViewGroup)
  u                public tryShow()
  v                public collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl)
  v                public updateMenuView(boolean)
  onDismiss        public onDismiss()
  onGlobalLayout   public onGlobalLayout()
  onItemClick      public onItemClick(android.widget.AdapterView,android.view.View,int,long)
  onKey            public onKey(android.view.View,int,android.view.KeyEvent)

android.support.v7.internal.view.menu.MenuPopupHelper$IOException        (be.brunoparmentier.apkshare.eval_te)
===============================================================================
  No methods

android.support.v7.internal.view.menu.MenuPopupHelper$MenuAdapter        (be.brunoparmentier.apkshare.eval_i6$m)
===============================================================================
  a                    static access$000(android.support.v7.internal.view.menu.MenuPopupHelper$MenuAdapter)
  getItem              public getItem(int)
  v                    findExpandedIndex()
  getCount             public getCount()
  getItem              public volatile getItem(int)
  getItemId            public getItemId(int)
  getView              public getView(int,android.view.View,android.view.ViewGroup)
  notifyDataSetChanged public notifyDataSetChanged()

android.support.v7.internal.view.menu.MenuPresenter      (be.brunoparmentier.apkshare.eval_gv)
===============================================================================
  b    public abstract setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback)
  c    public abstract initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder)
  g    public abstract getId()
  h    public abstract onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)
  i    public abstract onSaveInstanceState()
  j    public abstract flagActionItems()
  l    public abstract expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl)
  l    public abstract onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder)
  q    public abstract onRestoreInstanceState(android.os.Parcelable)
  s    public abstract getMenuView(android.view.ViewGroup)
  v    public abstract collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl)
  v    public abstract updateMenuView(boolean)

android.support.v7.internal.view.menu.MenuPresenter$ArrayOutOfBoundsException    (be.brunoparmentier.apkshare.eval_g7)
===============================================================================
  No methods

android.support.v7.internal.view.menu.MenuPresenter$Callback     (be.brunoparmentier.apkshare.eval_gv$q)
===============================================================================
  a    public abstract onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder)
  f    public abstract onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)

android.support.v7.internal.view.menu.MenuView   (be.brunoparmentier.apkshare.eval_c2)
===============================================================================
  l    public abstract getWindowAnimations()
  s    public abstract initialize(android.support.v7.internal.view.menu.MenuBuilder)

android.support.v7.internal.view.menu.MenuView$ArrayOutOfBoundsException (be.brunoparmentier.apkshare.eval_oc)
===============================================================================
  No methods

android.support.v7.internal.view.menu.MenuView$ItemView  (be.brunoparmentier.apkshare.eval_c2$g)
===============================================================================
  b        public abstract setEnabled(boolean)
  eval_d   public abstract setIcon(android.graphics.drawable.Drawable)
  g        public abstract setShortcut(boolean,char)
  k        public abstract getItemData()
  p        public abstract initialize(android.support.v7.internal.view.menu.MenuItemImpl,int)
  p        public abstract setCheckable(boolean)
  p        public abstract setTitle(java.lang.CharSequence)
  r        public abstract prefersCondensedTitle()
  s        public abstract setChecked(boolean)
  w        public abstract showsIcon()

android.support.v7.internal.view.menu.MenuWrapperFactory (be.brunoparmentier.apkshare.eval_ww)
===============================================================================
  r    public static wrapSupportSubMenu(android.content.Context,android.support.v4.internal.view.SupportSubMenu)
  u    public static wrapSupportMenuItem(android.content.Context,android.support.v4.internal.view.SupportMenuItem)
  z    public static wrapSupportMenu(android.content.Context,android.support.v4.internal.view.SupportMenu)

android.support.v7.internal.view.menu.MenuWrapperFactory$ArrayOutOfBoundsException       (be.brunoparmentier.apkshare.eval_hs)
===============================================================================
  No methods

android.support.v7.internal.view.menu.MenuWrapperICS     (be.brunoparmentier.apkshare.eval__u)
===============================================================================
  add                      public add(int)
  add                      public add(int,int,int,int)
  add                      public add(int,int,int,java.lang.CharSequence)
  add                      public add(java.lang.CharSequence)
  addIntentOptions         public addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])
  addSubMenu               public addSubMenu(int)
  addSubMenu               public addSubMenu(int,int,int,int)
  addSubMenu               public addSubMenu(int,int,int,java.lang.CharSequence)
  addSubMenu               public addSubMenu(java.lang.CharSequence)
  clear                    public clear()
  close                    public close()
  findItem                 public findItem(int)
  getItem                  public getItem(int)
  hasVisibleItems          public hasVisibleItems()
  isShortcutKey            public isShortcutKey(int,android.view.KeyEvent)
  performIdentifierAction  public performIdentifierAction(int,int)
  performShortcut          public performShortcut(int,android.view.KeyEvent,int)
  removeGroup              public removeGroup(int)
  removeItem               public removeItem(int)
  setGroupCheckable        public setGroupCheckable(int,boolean,boolean)
  setGroupEnabled          public setGroupEnabled(int,boolean)
  setGroupVisible          public setGroupVisible(int,boolean)
  setQwertyMode            public setQwertyMode(boolean)
  size                     public size()

android.support.v7.internal.view.menu.MenuWrapperICS$ParseException      (be.brunoparmentier.apkshare.eval_a3)
===============================================================================
  No methods

android.support.v7.internal.view.menu.SubMenuBuilder     (be.brunoparmentier.apkshare.eval_wz)
===============================================================================
  c                dispatchMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem)
  eval_b           public getRootMenu()
  j                public isShortcutsVisible()
  k                public getParentMenu()
  l                public getActionViewStatesKey()
  o                public setCallback(android.support.v7.internal.view.menu.MenuBuilder$Callback)
  p                public collapseItemActionView(android.support.v7.internal.view.menu.MenuItemImpl)
  q                public expandItemActionView(android.support.v7.internal.view.menu.MenuItemImpl)
  s                public setShortcutsVisible(boolean)
  w                public isQwertyMode()
  getItem          public getItem()
  setHeaderIcon    public setHeaderIcon(android.graphics.drawable.Drawable)
  setHeaderIcon    public setHeaderIcon(int)
  setHeaderTitle   public setHeaderTitle(int)
  setHeaderTitle   public setHeaderTitle(java.lang.CharSequence)
  setHeaderView    public setHeaderView(android.view.View)
  setIcon          public setIcon(android.graphics.drawable.Drawable)
  setIcon          public setIcon(int)
  setQwertyMode    public setQwertyMode(boolean)

android.support.v7.internal.view.menu.SubMenuBuilder$ParseException      (be.brunoparmentier.apkshare.eval_ao)
===============================================================================
  No methods

android.support.v7.internal.view.menu.SubMenuWrapperICS  (be.brunoparmentier.apkshare.eval_vd)
===============================================================================
  n                public getWrappedObject()
  clearHeader      public clearHeader()
  getItem          public getItem()
  setHeaderIcon    public setHeaderIcon(android.graphics.drawable.Drawable)
  setHeaderIcon    public setHeaderIcon(int)
  setHeaderTitle   public setHeaderTitle(int)
  setHeaderTitle   public setHeaderTitle(java.lang.CharSequence)
  setHeaderView    public setHeaderView(android.view.View)
  setIcon          public setIcon(android.graphics.drawable.Drawable)
  setIcon          public setIcon(int)

android.support.v7.internal.view.menu.SubMenuWrapperICS$NullPointerException     (be.brunoparmentier.apkshare.eval_pv)
===============================================================================
  No methods

android.support.v7.internal.widget.AbsActionBarView      (be.brunoparmentier.apkshare.eval_oo)
===============================================================================
  a                        public dismissPopupMenus()
  a                        public animateToVisibility(int)
  d                        public isOverflowMenuShowPending()
  e                        public postShowOverflowMenu()
  eval_n                   public isOverflowReserved()
  eval_p                   public canShowOverflowMenu()
  eval_u                   public showOverflowMenu()
  f                        public isOverflowMenuShowing()
  g                        public setSplitToolbar(boolean)
  i                        protected positionChild(android.view.View,int,int,int,boolean)
  j                        protected static next(int,int,boolean)
  k                        public getAnimatedVisibility()
  m                        public getContentHeight()
  m                        public setSplitView(android.view.ViewGroup)
  s                        public setContentHeight(int)
  t                        protected measureChildView(android.view.View,int,int,int)
  y                        public hideOverflowMenu()
  z                        public setSplitWhenNarrow(boolean)
  onConfigurationChanged   protected onConfigurationChanged(android.content.res.Configuration)

android.support.v7.internal.widget.AbsActionBarView$1    (be.brunoparmentier.apkshare.eval_oo$1)
===============================================================================
  run  public run()

android.support.v7.internal.widget.AbsActionBarView$ArrayOutOfBoundsException    (be.brunoparmentier.apkshare.eval_u4)
===============================================================================
  No methods

android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener       (be.brunoparmentier.apkshare.eval_oo$m)
===============================================================================
  b    public onAnimationEnd(android.view.View)
  m    public withFinalVisibility(android.support.v4.view.ViewPropertyAnimatorCompat,int)
  s    public onAnimationStart(android.view.View)
  x    public onAnimationCancel(android.view.View)

android.support.v7.internal.widget.AbsSpinnerCompat      (be.brunoparmentier.apkshare.eval_as)
===============================================================================
  a                            recycleAllViews()
  c                            public getAdapter()
  d                            public pointToPosition(int,int)
  e                            public getCount()
  eval_h                       private initAbsSpinner()
  eval_r                       abstract layout(int,boolean)
  f                            public setSelection(int,boolean)
  h                            public getSelectedView()
  k                            getChildWidth(android.view.View)
  n                            resetList()
  n                            getChildHeight(android.view.View)
  r                            static access$000(android.support.v7.internal.widget.AbsSpinnerCompat,android.view.View,boolean)
  s                            setSelectionInt(int,boolean)
  v                            public setAdapter(android.widget.SpinnerAdapter)
  v                            public setSelection(int)
  x                            public volatile setAdapter(android.widget.Adapter)
  generateDefaultLayoutParams  protected generateDefaultLayoutParams()
  onMeasure                    protected onMeasure(int,int)
  onRestoreInstanceState       public onRestoreInstanceState(android.os.Parcelable)
  onSaveInstanceState          public onSaveInstanceState()
  requestLayout                public requestLayout()

android.support.v7.internal.widget.AbsSpinnerCompat$ArrayOutOfBoundsException    (be.brunoparmentier.apkshare.eval_gl)
===============================================================================
  No methods

android.support.v7.internal.widget.AbsSpinnerCompat$RecycleBin   (be.brunoparmentier.apkshare.eval_as$y)
===============================================================================
  i    public put(int,android.view.View)
  u    get(int)
  w    clear()

android.support.v7.internal.widget.AbsSpinnerCompat$SavedState   (be.brunoparmentier.apkshare.eval_as$i)
===============================================================================
  toString         public toString()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v7.internal.widget.AbsSpinnerCompat$SavedState$1 (be.brunoparmentier.apkshare.eval_as$i$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v7.internal.widget.AbsSpinnerCompat$SavedState$ParseException    (be.brunoparmentier.apkshare.eval___)
===============================================================================
  No methods

android.support.v7.internal.widget.ActionBarBackgroundDrawable   (be.brunoparmentier.apkshare.eval_hg)
===============================================================================
  draw             public draw(android.graphics.Canvas)
  getOpacity       public getOpacity()
  setAlpha         public setAlpha(int)
  setColorFilter   public setColorFilter(android.graphics.ColorFilter)

android.support.v7.internal.widget.ActionBarBackgroundDrawable$ParseException    (be.brunoparmentier.apkshare.eval_f_)
===============================================================================
  No methods

android.support.v7.internal.widget.ActionBarBackgroundDrawableV21        (be.brunoparmentier.apkshare.eval_jy)
===============================================================================
  getOutline   public getOutline(android.graphics.Outline)

android.support.v7.internal.widget.ActionBarBackgroundDrawableV21$NullPointerException   (be.brunoparmentier.apkshare.eval_kj)
===============================================================================
  No methods

android.support.v7.internal.widget.ActionBarContainer    (be.brunoparmentier.apkshare.eval_jw)
===============================================================================
  a                            private isCollapsed(android.view.View)
  c                            public startActionModeForChild(android.view.View,android.support.v7.view.ActionMode$Callback)
  h                            private getMeasuredHeightWithMargins(android.view.View)
  i                            public setStackedBackground(android.graphics.drawable.Drawable)
  l                            public getTabContainer()
  m                            public setTabContainer(android.support.v7.internal.widget.ScrollingTabContainerView)
  t                            public setTransitioning(boolean)
  w                            public setPrimaryBackground(android.graphics.drawable.Drawable)
  y                            public setSplitBackground(android.graphics.drawable.Drawable)
  drawableStateChanged         protected drawableStateChanged()
  jumpDrawablesToCurrentState  public jumpDrawablesToCurrentState()
  onFinishInflate              public onFinishInflate()
  onInterceptTouchEvent        public onInterceptTouchEvent(android.view.MotionEvent)
  onLayout                     public onLayout(boolean,int,int,int,int)
  onMeasure                    public onMeasure(int,int)
  onTouchEvent                 public onTouchEvent(android.view.MotionEvent)
  setVisibility                public setVisibility(int)
  startActionModeForChild      public startActionModeForChild(android.view.View,android.view.ActionMode$Callback)
  verifyDrawable               protected verifyDrawable(android.graphics.drawable.Drawable)

android.support.v7.internal.widget.ActionBarContainer$IOException        (be.brunoparmentier.apkshare.eval_n6)
===============================================================================
  No methods

android.support.v7.internal.widget.ActionBarContextView  (be.brunoparmentier.apkshare.eval_h5)
===============================================================================
  a                                public volatile dismissPopupMenus()
  a                                public volatile animateToVisibility(int)
  b                                public onAnimationEnd(android.view.View)
  b                                public setTitle(java.lang.CharSequence)
  c                                private finishAnimation()
  d                                public volatile isOverflowMenuShowPending()
  e                                public volatile postShowOverflowMenu()
  eval_b                           private initTitle()
  eval_c                           private makeOutAnimation()
  eval_n                           public volatile isOverflowReserved()
  eval_p                           public volatile canShowOverflowMenu()
  eval_t                           public getSubtitle()
  eval_u                           public showOverflowMenu()
  eval_x                           private makeInAnimation()
  eval_y                           public killMode()
  f                                public isOverflowMenuShowing()
  f                                public setSubtitle(java.lang.CharSequence)
  g                                public setSplitToolbar(boolean)
  k                                public volatile getAnimatedVisibility()
  m                                public volatile getContentHeight()
  m                                public initForMode(android.support.v7.view.ActionMode)
  m                                public volatile setSplitView(android.view.ViewGroup)
  o                                public setTitleOptional(boolean)
  r                                public closeMode()
  r                                public setCustomView(android.view.View)
  s                                public onAnimationStart(android.view.View)
  s                                public setContentHeight(int)
  w                                public isTitleOptional()
  x                                public onAnimationCancel(android.view.View)
  y                                public hideOverflowMenu()
  z                                public getTitle()
  z                                public volatile setSplitWhenNarrow(boolean)
  generateDefaultLayoutParams      protected generateDefaultLayoutParams()
  generateLayoutParams             public generateLayoutParams(android.util.AttributeSet)
  onDetachedFromWindow             public onDetachedFromWindow()
  onInitializeAccessibilityEvent   public onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
  onLayout                         protected onLayout(boolean,int,int,int,int)
  onMeasure                        protected onMeasure(int,int)
  shouldDelayChildPressedState     public shouldDelayChildPressedState()

android.support.v7.internal.widget.ActionBarContextView$1        (be.brunoparmentier.apkshare.eval_h5$1)
===============================================================================
  onClick  public onClick(android.view.View)

android.support.v7.internal.widget.ActionBarContextView$NullPointerException     (be.brunoparmentier.apkshare.eval_hc)
===============================================================================
  No methods

android.support.v7.internal.widget.ActionBarOverlayLayout        (be.brunoparmentier.apkshare.eval_nb)
===============================================================================
  a                                public setWindowCallback(android.view.Window$Callback)
  a                                public setShowingForActionMode(boolean)
  b                                public getTitle()
  b                                static access$400(android.support.v7.internal.widget.ActionBarOverlayLayout)
  c                                public setMenuPrepared()
  c                                public setIcon(android.graphics.drawable.Drawable)
  d                                public isInOverlayMode()
  d                                static access$500(android.support.v7.internal.widget.ActionBarOverlayLayout)
  d                                public setMenu(android.view.Menu,android.support.v7.internal.view.menu.MenuPresenter$Callback)
  e                                private getDecorToolbar(android.view.View)
  eval_c                           public canShowOverflowMenu()
  eval_d                           public setHideOnContentScrollEnabled(boolean)
  eval_f                           private addActionBarHideOffset()
  eval_m                           public setIcon(int)
  eval_n                           public hasIcon()
  eval_v                           private removeActionBarHideOffset()
  f                                public hideOverflowMenu()
  g                                static access$300(android.support.v7.internal.widget.ActionBarOverlayLayout)
  g                                static access$002(android.support.v7.internal.widget.ActionBarOverlayLayout,android.support.v4.view.ViewPropertyAnimatorCompat)
  generateDefaultLayoutParams      protected generateDefaultLayoutParams()
  generateLayoutParams             public generateLayoutParams(android.util.AttributeSet)
  h                                public isOverflowMenuShowPending()
  h                                public setHasNonEmbeddedTabs(boolean)
  i                                public getActionBarHideOffset()
  i                                private init(android.content.Context)
  j                                public initFeature(int)
  k                                public saveToolbarHierarchyState(android.util.SparseArray)
  k                                public setOverlayMode(boolean)
  l                                private postRemoveActionBarHideOffset()
  l                                static access$600(android.support.v7.internal.widget.ActionBarOverlayLayout)
  m                                public isHideOnContentScrollEnabled()
  m                                static access$700(android.support.v7.internal.widget.ActionBarOverlayLayout)
  n                                public hasLogo()
  n                                public restoreToolbarHierarchyState(android.util.SparseArray)
  n                                public setLogo(int)
  o                                public isOverflowMenuShowing()
  p                                private postAddActionBarHideOffset()
  p                                public setWindowTitle(java.lang.CharSequence)
  s                                public dismissPopups()
  s                                public setActionBarHideOffset(int)
  u                                public setActionBarVisibilityCallback(android.support.v7.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
  u                                public setUiOptions(int)
  w                                private haltActionBarHideOffsetAnimations()
  w                                static access$102(android.support.v7.internal.widget.ActionBarOverlayLayout,boolean)
  w                                private applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean)
  x                                public showOverflowMenu()
  y                                pullChildren()
  y                                static access$202(android.support.v7.internal.widget.ActionBarOverlayLayout,android.support.v4.view.ViewPropertyAnimatorCompat)
  z                                private shouldHideActionBarOnFling(float,float)
  checkLayoutParams                protected checkLayoutParams(android.view.ViewGroup$LayoutParams)
  draw                             public draw(android.graphics.Canvas)
  fitSystemWindows                 protected fitSystemWindows(android.graphics.Rect)
  generateDefaultLayoutParams      protected volatile generateDefaultLayoutParams()
  generateLayoutParams             public volatile generateLayoutParams(android.util.AttributeSet)
  generateLayoutParams             protected generateLayoutParams(android.view.ViewGroup$LayoutParams)
  getNestedScrollAxes              public getNestedScrollAxes()
  onConfigurationChanged           protected onConfigurationChanged(android.content.res.Configuration)
  onDetachedFromWindow             protected onDetachedFromWindow()
  onLayout                         protected onLayout(boolean,int,int,int,int)
  onMeasure                        protected onMeasure(int,int)
  onNestedFling                    public onNestedFling(android.view.View,float,float,boolean)
  onNestedPreFling                 public onNestedPreFling(android.view.View,float,float)
  onNestedPreScroll                public onNestedPreScroll(android.view.View,int,int,int[])
  onNestedScroll                   public onNestedScroll(android.view.View,int,int,int,int)
  onNestedScrollAccepted           public onNestedScrollAccepted(android.view.View,android.view.View,int)
  onStartNestedScroll              public onStartNestedScroll(android.view.View,android.view.View,int)
  onStopNestedScroll               public onStopNestedScroll(android.view.View)
  onWindowSystemUiVisibilityChanged    public onWindowSystemUiVisibilityChanged(int)
  onWindowVisibilityChanged        protected onWindowVisibilityChanged(int)
  shouldDelayChildPressedState     public shouldDelayChildPressedState()

android.support.v7.internal.widget.ActionBarOverlayLayout$1      (be.brunoparmentier.apkshare.eval_nb$1)
===============================================================================
  b    public onAnimationEnd(android.view.View)
  x    public onAnimationCancel(android.view.View)

android.support.v7.internal.widget.ActionBarOverlayLayout$2      (be.brunoparmentier.apkshare.eval_nb$2)
===============================================================================
  b    public onAnimationEnd(android.view.View)
  x    public onAnimationCancel(android.view.View)

android.support.v7.internal.widget.ActionBarOverlayLayout$3      (be.brunoparmentier.apkshare.eval_nb$3)
===============================================================================
  run  public run()

android.support.v7.internal.widget.ActionBarOverlayLayout$4      (be.brunoparmentier.apkshare.eval_nb$4)
===============================================================================
  run  public run()

android.support.v7.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback    (be.brunoparmentier.apkshare.eval_nb$l)
===============================================================================
  a        public abstract onContentScrollStopped()
  eval__   public abstract onWindowVisibilityChanged(int)
  eval_s   public abstract enableContentAnimations(boolean)
  eval_z   public abstract hideForSystem()
  g        public abstract onContentScrollStarted()
  x        public abstract showForSystem()

android.support.v7.internal.widget.ActionBarOverlayLayout$LayoutParams   (be.brunoparmentier.apkshare.eval_nb$eval_c)
===============================================================================
  No methods

android.support.v7.internal.widget.ActionBarOverlayLayout$ParseException (be.brunoparmentier.apkshare.eval_m0)
===============================================================================
  No methods

android.support.v7.internal.widget.ActivityChooserModel  (be.brunoparmentier.apkshare.eval_jc)
===============================================================================
  a        private readHistoricalDataIfNeeded()
  a        public static get(android.content.Context,java.lang.String)
  a        public getActivityIndex(android.content.pm.ResolveInfo)
  a        public setOnChooseActivityListener(android.support.v7.internal.widget.ActivityChooserModel$OnChooseActivityListener)
  c        private persistHistoricalDataIfNeeded()
  c        static access$502(android.support.v7.internal.widget.ActivityChooserModel,boolean)
  d        public getHistorySize()
  e        public setActivitySorter(android.support.v7.internal.widget.ActivityChooserModel$ActivitySorter)
  eval_d   private ensureConsistentState()
  eval_l   public getActivityCount()
  eval_x   private pruneExcessiveHistoricalRecordsIfNeeded()
  f        public getHistoryMaxSize()
  f        public setIntent(android.content.Intent)
  j        public getDefaultActivity()
  l        private sortActivitiesIfNeeded()
  n        private addHisoricalRecord(android.support.v7.internal.widget.ActivityChooserModel$HistoricalRecord)
  q        private readHistoricalDataImpl()
  r        public getIntent()
  r        static access$400(android.support.v7.internal.widget.ActivityChooserModel)
  s        private loadActivitiesIfNeeded()
  t        static access$200(android.support.v7.internal.widget.ActivityChooserModel)
  u        public chooseActivity(int)
  v        public setHistoryMaxSize(int)
  w        public setDefaultActivity(int)
  y        static access$300()
  y        public getActivity(int)

android.support.v7.internal.widget.ActivityChooserModel$1        (be.brunoparmentier.apkshare.eval_jc$1)
===============================================================================
  No methods

android.support.v7.internal.widget.ActivityChooserModel$ActivityChooserModelClient       (be.brunoparmentier.apkshare.eval_jc$i)
===============================================================================
  x    public abstract setActivityChooserModel(android.support.v7.internal.widget.ActivityChooserModel)

android.support.v7.internal.widget.ActivityChooserModel$ActivityResolveInfo      (be.brunoparmentier.apkshare.eval_jc$v)
===============================================================================
  d            public compareTo(android.support.v7.internal.widget.ActivityChooserModel$ActivityResolveInfo)
  compareTo    public volatile compareTo(java.lang.Object)
  equals       public equals(java.lang.Object)
  hashCode     public hashCode()
  toString     public toString()

android.support.v7.internal.widget.ActivityChooserModel$ActivitySorter   (be.brunoparmentier.apkshare.eval_jc$o)
===============================================================================
  q    public abstract sort(android.content.Intent,java.util.List,java.util.List)

android.support.v7.internal.widget.ActivityChooserModel$DefaultSorter    (be.brunoparmentier.apkshare.eval_jc$k)
===============================================================================
  q    public sort(android.content.Intent,java.util.List,java.util.List)

android.support.v7.internal.widget.ActivityChooserModel$HistoricalRecord (be.brunoparmentier.apkshare.eval_jc$eval_h)
===============================================================================
  equals   public equals(java.lang.Object)
  hashCode public hashCode()
  toString public toString()

android.support.v7.internal.widget.ActivityChooserModel$NullPointerException     (be.brunoparmentier.apkshare.eval_wv)
===============================================================================
  No methods

android.support.v7.internal.widget.ActivityChooserModel$OnChooseActivityListener (be.brunoparmentier.apkshare.eval_jc$r)
===============================================================================
  l    public abstract onChooseActivity(android.support.v7.internal.widget.ActivityChooserModel,android.content.Intent)

android.support.v7.internal.widget.ActivityChooserModel$PersistHistoryAsyncTask  (be.brunoparmentier.apkshare.eval_jc$g)
===============================================================================
  doInBackground   public transient doInBackground(java.lang.Object[])
  doInBackground   public volatile doInBackground(java.lang.Object[])

android.support.v7.internal.widget.ActivityChooserView   (be.brunoparmentier.apkshare.eval_ki)
===============================================================================
  a                    public showPopup()
  a                    static access$800(android.support.v7.internal.widget.ActivityChooserView)
  a                    public setInitialActivityCount(int)
  b                    public setProvider(android.support.v4.view.ActionProvider)
  c                    private getListPopupWindow()
  c                    static access$1100(android.support.v7.internal.widget.ActivityChooserView)
  d                    public setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable)
  d                    public setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
  eval_g               static access$900(android.support.v7.internal.widget.ActivityChooserView)
  i                    static access$400(android.support.v7.internal.widget.ActivityChooserView)
  l                    static access$500(android.support.v7.internal.widget.ActivityChooserView,int)
  l                    private showPopupUnchecked(int)
  m                    static access$602(android.support.v7.internal.widget.ActivityChooserView,boolean)
  o                    public getDataModel()
  o                    static access$700(android.support.v7.internal.widget.ActivityChooserView)
  r                    private updateAppearance()
  r                    public setDefaultActionButtonContentDescription(int)
  t                    static access$1000(android.support.v7.internal.widget.ActivityChooserView)
  v                    static access$600(android.support.v7.internal.widget.ActivityChooserView)
  w                    static access$000(android.support.v7.internal.widget.ActivityChooserView)
  w                    public setExpandActivityOverflowButtonContentDescription(int)
  x                    public isShowingPopup()
  x                    public setActivityChooserModel(android.support.v7.internal.widget.ActivityChooserModel)
  y                    static access$100(android.support.v7.internal.widget.ActivityChooserView)
  z                    public dismissPopup()
  onAttachedToWindow   protected onAttachedToWindow()
  onDetachedFromWindow protected onDetachedFromWindow()
  onLayout             protected onLayout(boolean,int,int,int,int)
  onMeasure            protected onMeasure(int,int)

android.support.v7.internal.widget.ActivityChooserView$1 (be.brunoparmentier.apkshare.eval_ki$1)
===============================================================================
  onChanged        public onChanged()
  onInvalidated    public onInvalidated()

android.support.v7.internal.widget.ActivityChooserView$2 (be.brunoparmentier.apkshare.eval_ki$2)
===============================================================================
  onGlobalLayout   public onGlobalLayout()

android.support.v7.internal.widget.ActivityChooserView$3 (be.brunoparmentier.apkshare.eval_ki$3)
===============================================================================
  a    protected onForwardingStopped()
  i    protected onForwardingStarted()
  n    public getPopup()

android.support.v7.internal.widget.ActivityChooserView$4 (be.brunoparmentier.apkshare.eval_ki$4)
===============================================================================
  onChanged    public onChanged()

android.support.v7.internal.widget.ActivityChooserView$ActivityChooserViewAdapter        (be.brunoparmentier.apkshare.eval_ki$q)
===============================================================================
  c                public getHistorySize()
  h                public getShowDefaultActivity()
  h                public setShowFooterView(boolean)
  h                public setShowDefaultActivity(boolean,boolean)
  p                public measureContentWidth()
  q                public getDefaultActivity()
  t                public setMaxActivityCount(int)
  u                public getActivityCount()
  x                public getDataModel()
  x                public setDataModel(android.support.v7.internal.widget.ActivityChooserModel)
  getCount         public getCount()
  getItem          public getItem(int)
  getItemId        public getItemId(int)
  getItemViewType  public getItemViewType(int)
  getView          public getView(int,android.view.View,android.view.ViewGroup)
  getViewTypeCount public getViewTypeCount()

android.support.v7.internal.widget.ActivityChooserView$Callbacks (be.brunoparmentier.apkshare.eval_ki$i)
===============================================================================
  y            private notifyOnDismissListener()
  onClick      public onClick(android.view.View)
  onDismiss    public onDismiss()
  onItemClick  public onItemClick(android.widget.AdapterView,android.view.View,int,long)
  onLongClick  public onLongClick(android.view.View)

android.support.v7.internal.widget.ActivityChooserView$Exception (be.brunoparmentier.apkshare.eval_ni)
===============================================================================
  No methods

android.support.v7.internal.widget.ActivityChooserView$InnerLayout       (be.brunoparmentier.apkshare.eval_ki$y)
===============================================================================
  No methods

android.support.v7.internal.widget.AdapterViewCompat     (be.brunoparmentier.apkshare.eval_f6)
===============================================================================
  a                                static access$100(android.support.v7.internal.widget.AdapterViewCompat)
  b                                public getSelectedItemPosition()
  c                                public abstract getAdapter()
  c                                public getItemIdAtPosition(int)
  d                                public getItemAtPosition(int)
  e                                public getCount()
  e                                static access$000(android.support.v7.internal.widget.AdapterViewCompat,android.os.Parcelable)
  eval_a                           handleDataChanged()
  eval_b                           public final getOnItemClickListener()
  eval_e                           public getEmptyView()
  eval_g                           public performItemClick(android.view.View,int,long)
  eval_m                           rememberSyncState()
  eval_n                           checkSelectionChanged()
  eval_o                           private fireOnSelected()
  eval_r                           public final getOnItemLongClickListener()
  eval_v                           checkFocus()
  eval_z                           selectionChanged()
  f                                static access$200(android.support.v7.internal.widget.AdapterViewCompat)
  f                                private updateEmptyStatus(boolean)
  h                                public abstract getSelectedView()
  h                                public setOnItemLongClickListener(android.support.v7.internal.widget.AdapterViewCompat$OnItemLongClickListener)
  i                                findSyncPosition()
  m                                public setOnItemClickListener(android.support.v7.internal.widget.AdapterViewCompat$OnItemClickListener)
  m                                setSelectedPositionInt(int)
  o                                public final getOnItemSelectedListener()
  p                                isInFilterMode()
  q                                public getSelectedItem()
  r                                setNextSelectedPositionInt(int)
  v                                public getSelectedItemId()
  v                                public abstract setSelection(int)
  w                                public getFirstVisiblePosition()
  w                                public setOnItemSelectedListener(android.support.v7.internal.widget.AdapterViewCompat$OnItemSelectedListener)
  w                                public setEmptyView(android.view.View)
  x                                public getLastVisiblePosition()
  x                                public getPositionForView(android.view.View)
  x                                public abstract setAdapter(android.widget.Adapter)
  x                                lookForSelectablePosition(int,boolean)
  addView                          public addView(android.view.View)
  addView                          public addView(android.view.View,android.view.ViewGroup$LayoutParams)
  addView                          public addView(android.view.View,int)
  addView                          public addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
  canAnimate                       protected canAnimate()
  dispatchPopulateAccessibilityEvent   public dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
  dispatchRestoreInstanceState     protected dispatchRestoreInstanceState(android.util.SparseArray)
  dispatchSaveInstanceState        protected dispatchSaveInstanceState(android.util.SparseArray)
  onDetachedFromWindow             protected onDetachedFromWindow()
  onLayout                         protected onLayout(boolean,int,int,int,int)
  removeAllViews                   public removeAllViews()
  removeView                       public removeView(android.view.View)
  removeViewAt                     public removeViewAt(int)
  setFocusable                     public setFocusable(boolean)
  setFocusableInTouchMode          public setFocusableInTouchMode(boolean)
  setOnClickListener               public setOnClickListener(android.view.View$OnClickListener)

android.support.v7.internal.widget.AdapterViewCompat$1   (be.brunoparmentier.apkshare.eval_f6$1)
===============================================================================
  No methods

android.support.v7.internal.widget.AdapterViewCompat$AdapterContextMenuInfo      (be.brunoparmentier.apkshare.eval_f6$d)
===============================================================================
  No methods

android.support.v7.internal.widget.AdapterViewCompat$AdapterDataSetObserver      (be.brunoparmentier.apkshare.eval_f6$m)
===============================================================================
  y                public clearSavedState()
  onChanged        public onChanged()
  onInvalidated    public onInvalidated()

android.support.v7.internal.widget.AdapterViewCompat$OnItemClickListener (be.brunoparmentier.apkshare.eval_f6$q)
===============================================================================
  u    public abstract onItemClick(android.support.v7.internal.widget.AdapterViewCompat,android.view.View,int,long)

android.support.v7.internal.widget.AdapterViewCompat$OnItemClickListenerWrapper  (be.brunoparmentier.apkshare.eval_f6$c)
===============================================================================
  onItemClick  public onItemClick(android.widget.AdapterView,android.view.View,int,long)

android.support.v7.internal.widget.AdapterViewCompat$OnItemLongClickListener     (be.brunoparmentier.apkshare.eval_f6$u)
===============================================================================
  l    public abstract onItemLongClick(android.support.v7.internal.widget.AdapterViewCompat,android.view.View,int,long)

android.support.v7.internal.widget.AdapterViewCompat$OnItemSelectedListener      (be.brunoparmentier.apkshare.eval_f6$eval_c)
===============================================================================
  f    public abstract onItemSelected(android.support.v7.internal.widget.AdapterViewCompat,android.view.View,int,long)
  i    public abstract onNothingSelected(android.support.v7.internal.widget.AdapterViewCompat)

android.support.v7.internal.widget.AdapterViewCompat$ParseException      (be.brunoparmentier.apkshare.eval_cy)
===============================================================================
  No methods

android.support.v7.internal.widget.AdapterViewCompat$SelectionNotifier   (be.brunoparmentier.apkshare.eval_f6$y)
===============================================================================
  run  public run()

android.support.v7.internal.widget.AppCompatPopupWindow  (be.brunoparmentier.apkshare.eval__4)
===============================================================================
  n                private static wrapOnScrollChangedListener(android.widget.PopupWindow)
  showAsDropDown   public showAsDropDown(android.view.View,int,int)
  showAsDropDown   public showAsDropDown(android.view.View,int,int,int)
  update           public update(android.view.View,int,int,int,int)

android.support.v7.internal.widget.AppCompatPopupWindow$1        (be.brunoparmentier.apkshare.eval__4$1)
===============================================================================
  onScrollChanged  public onScrollChanged()

android.support.v7.internal.widget.AppCompatPopupWindow$NullPointerException     (be.brunoparmentier.apkshare.eval_vy)
===============================================================================
  No methods

android.support.v7.internal.widget.ContentFrameLayout    (be.brunoparmentier.apkshare.eval_m4)
===============================================================================
  eval_e       public getFixedHeightMajor()
  g            public getFixedHeightMinor()
  j            public getFixedWidthMajor()
  k            public setDecorPadding(int,int,int,int)
  o            public dispatchFitSystemWindows(android.graphics.Rect)
  r            public getMinWidthMinor()
  u            public getMinWidthMajor()
  z            public getFixedWidthMinor()
  onMeasure    protected onMeasure(int,int)

android.support.v7.internal.widget.ContentFrameLayout$IOException        (be.brunoparmentier.apkshare.eval__m)
===============================================================================
  No methods

android.support.v7.internal.widget.DecorContentParent    (be.brunoparmentier.apkshare.eval_bx)
===============================================================================
  a        public abstract setWindowCallback(android.view.Window$Callback)
  b        public abstract getTitle()
  c        public abstract setMenuPrepared()
  c        public abstract setIcon(android.graphics.drawable.Drawable)
  d        public abstract setMenu(android.view.Menu,android.support.v7.internal.view.menu.MenuPresenter$Callback)
  eval_c   public abstract canShowOverflowMenu()
  eval_m   public abstract setIcon(int)
  eval_n   public abstract hasIcon()
  f        public abstract hideOverflowMenu()
  h        public abstract isOverflowMenuShowPending()
  j        public abstract initFeature(int)
  k        public abstract saveToolbarHierarchyState(android.util.SparseArray)
  n        public abstract hasLogo()
  n        public abstract restoreToolbarHierarchyState(android.util.SparseArray)
  n        public abstract setLogo(int)
  o        public abstract isOverflowMenuShowing()
  p        public abstract setWindowTitle(java.lang.CharSequence)
  s        public abstract dismissPopups()
  u        public abstract setUiOptions(int)
  x        public abstract showOverflowMenu()

android.support.v7.internal.widget.DecorContentParent$IOException        (be.brunoparmentier.apkshare.eval_u5)
===============================================================================
  No methods

android.support.v7.internal.widget.DecorToolbar  (be.brunoparmentier.apkshare.eval_ci)
===============================================================================
  a        public abstract setNavigationMode(int)
  b        public abstract setBackgroundDrawable(android.graphics.drawable.Drawable)
  b        public abstract setIcon(int)
  c        public abstract getDropdownItemCount()
  c        public abstract setDisplayOptions(int)
  d        public abstract initIndeterminateProgress()
  d        public abstract setLogo(int)
  e        public abstract setSubtitle(java.lang.CharSequence)
  eval_a   public abstract getPopupTheme()
  eval_a   public abstract animateToVisibility(int)
  eval_b   public abstract setMenuPrepared()
  eval_b   public abstract setMenuCallbacks(android.support.v7.internal.view.menu.MenuPresenter$Callback,android.support.v7.internal.view.menu.MenuBuilder$Callback)
  eval_d   public abstract getDropdownSelectedPosition()
  eval_h   public abstract showOverflowMenu()
  eval_i   public abstract hasLogo()
  eval_k   public abstract dismissPopupMenus()
  eval_k   public abstract setEmbeddedTabView(android.support.v7.internal.widget.ScrollingTabContainerView)
  eval_l   public abstract isOverflowMenuShowing()
  eval_m   public abstract getNavigationMode()
  eval_o   public abstract hasEmbeddedTabs()
  eval_p   public abstract getDisplayOptions()
  eval_q   public abstract getCustomView()
  eval_r   public abstract getVisibility()
  eval_v   public abstract canSplit()
  eval_w   public abstract getMenu()
  f        public abstract hideOverflowMenu()
  f        public abstract restoreHierarchyState(android.util.SparseArray)
  f        public abstract setDropdownParams(android.widget.SpinnerAdapter,android.support.v7.internal.widget.AdapterViewCompat$OnItemSelectedListener)
  g        public abstract isTitleTruncated()
  h        public abstract initProgress()
  h        public abstract setSplitToolbar(boolean)
  h        public abstract setVisibility(int)
  i        public abstract setDefaultNavigationIcon(android.graphics.drawable.Drawable)
  k        public abstract isOverflowMenuShowPending()
  l        public abstract getContext()
  l        public abstract setNavigationIcon(int)
  m        public abstract hasExpandedActionView()
  m        public abstract setMenu(android.view.Menu,android.support.v7.internal.view.menu.MenuPresenter$Callback)
  m        public abstract setWindowTitle(java.lang.CharSequence)
  n        public abstract getTitle()
  n        public abstract setIcon(android.graphics.drawable.Drawable)
  n        public abstract setTitle(java.lang.CharSequence)
  o        public abstract getHeight()
  o        public abstract setSplitView(android.view.ViewGroup)
  o        public abstract setHomeButtonEnabled(boolean)
  p        public abstract collapseActionView()
  q        public abstract canShowOverflowMenu()
  r        public abstract isSplit()
  r        public abstract setNavigationContentDescription(int)
  t        public abstract setLogo(android.graphics.drawable.Drawable)
  u        public abstract setCustomView(android.view.View)
  v        public abstract getSubtitle()
  v        public abstract setCollapsible(boolean)
  v        public abstract setDefaultNavigationContentDescription(int)
  v        public abstract setNavigationContentDescription(java.lang.CharSequence)
  w        public abstract getViewGroup()
  w        public abstract setDropdownSelectedPosition(int)
  x        public abstract setNavigationIcon(android.graphics.drawable.Drawable)
  x        public abstract saveHierarchyState(android.util.SparseArray)
  x        public abstract setSplitWhenNarrow(boolean)
  z        public abstract hasIcon()
  z        public abstract setWindowCallback(android.view.Window$Callback)

android.support.v7.internal.widget.DecorToolbar$ParseException   (be.brunoparmentier.apkshare.eval_v_)
===============================================================================
  No methods

android.support.v7.internal.widget.DialogTitle   (be.brunoparmentier.apkshare.eval_pp)
===============================================================================
  onMeasure    protected onMeasure(int,int)

android.support.v7.internal.widget.DialogTitle$ArrayOutOfBoundsException (be.brunoparmentier.apkshare.eval_xf)
===============================================================================
  No methods

android.support.v7.internal.widget.DrawableUtils (be.brunoparmentier.apkshare.eval_qs)
===============================================================================
  i    public static getOpticalBounds(android.graphics.drawable.Drawable)

android.support.v7.internal.widget.DrawableUtils$IOException     (be.brunoparmentier.apkshare.eval_yy)
===============================================================================
  No methods

android.support.v7.internal.widget.FitWindowsFrameLayout (be.brunoparmentier.apkshare.eval_at)
===============================================================================
  p                public setOnFitSystemWindowsListener(android.support.v7.internal.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
  fitSystemWindows protected fitSystemWindows(android.graphics.Rect)

android.support.v7.internal.widget.FitWindowsFrameLayout$ArrayOutOfBoundsException       (be.brunoparmentier.apkshare.eval_mb)
===============================================================================
  No methods

android.support.v7.internal.widget.FitWindowsLinearLayout        (be.brunoparmentier.apkshare.eval_d5)
===============================================================================
  p                public setOnFitSystemWindowsListener(android.support.v7.internal.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
  fitSystemWindows protected fitSystemWindows(android.graphics.Rect)

android.support.v7.internal.widget.FitWindowsLinearLayout$ParseException (be.brunoparmentier.apkshare.eval_hh)
===============================================================================
  No methods

android.support.v7.internal.widget.FitWindowsViewGroup   (be.brunoparmentier.apkshare.eval_wn)
===============================================================================
  p    public abstract setOnFitSystemWindowsListener(android.support.v7.internal.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)

android.support.v7.internal.widget.FitWindowsViewGroup$Exception (be.brunoparmentier.apkshare.eval_rm)
===============================================================================
  No methods

android.support.v7.internal.widget.FitWindowsViewGroup$OnFitSystemWindowsListener        (be.brunoparmentier.apkshare.eval_wn$l)
===============================================================================
  g    public abstract onFitSystemWindows(android.graphics.Rect)

android.support.v7.internal.widget.ListViewCompat        (be.brunoparmentier.apkshare.eval_fs)
===============================================================================
  b                    protected shouldShowSelectorCompat()
  c                    protected positionSelectorLikeFocusCompat(int,android.view.View)
  eval_h               protected touchModeDrawsInPressedStateCompat()
  g                    protected positionSelectorCompat(int,android.view.View)
  i                    protected setSelectorEnabled(boolean)
  q                    protected positionSelectorLikeTouchCompat(int,android.view.View,float,float)
  r                    public lookForSelectablePosition(int,boolean)
  t                    protected updateSelectorStateCompat()
  t                    protected drawSelectorCompat(android.graphics.Canvas)
  w                    public measureHeightOfChildrenCompat(int,int,int,int,int)
  dispatchDraw         protected dispatchDraw(android.graphics.Canvas)
  drawableStateChanged protected drawableStateChanged()
  setSelector          public setSelector(android.graphics.drawable.Drawable)

android.support.v7.internal.widget.ListViewCompat$Exception      (be.brunoparmentier.apkshare.eval_d7)
===============================================================================
  No methods

android.support.v7.internal.widget.ListViewCompat$GateKeeperDrawable     (be.brunoparmentier.apkshare.eval_fs$v)
===============================================================================
  f                setEnabled(boolean)
  draw             public draw(android.graphics.Canvas)
  setHotspot       public setHotspot(float,float)
  setHotspotBounds public setHotspotBounds(int,int,int,int)
  setState         public setState(int[])
  setVisible       public setVisible(boolean,boolean)

android.support.v7.internal.widget.ResourcesWrapper      (be.brunoparmentier.apkshare.eval_uq)
===============================================================================
  getAnimation             public getAnimation(int)
  getBoolean               public getBoolean(int)
  getColor                 public getColor(int)
  getColorStateList        public getColorStateList(int)
  getConfiguration         public getConfiguration()
  getDimension             public getDimension(int)
  getDimensionPixelOffset  public getDimensionPixelOffset(int)
  getDimensionPixelSize    public getDimensionPixelSize(int)
  getDisplayMetrics        public getDisplayMetrics()
  getDrawable              public getDrawable(int)
  getDrawable              public getDrawable(int,android.content.res.Resources$Theme)
  getDrawableForDensity    public getDrawableForDensity(int,int)
  getDrawableForDensity    public getDrawableForDensity(int,int,android.content.res.Resources$Theme)
  getFraction              public getFraction(int,int,int)
  getIdentifier            public getIdentifier(java.lang.String,java.lang.String,java.lang.String)
  getIntArray              public getIntArray(int)
  getInteger               public getInteger(int)
  getLayout                public getLayout(int)
  getMovie                 public getMovie(int)
  getQuantityString        public getQuantityString(int,int)
  getQuantityString        public transient getQuantityString(int,int,java.lang.Object[])
  getQuantityText          public getQuantityText(int,int)
  getResourceEntryName     public getResourceEntryName(int)
  getResourceName          public getResourceName(int)
  getResourcePackageName   public getResourcePackageName(int)
  getResourceTypeName      public getResourceTypeName(int)
  getString                public getString(int)
  getString                public transient getString(int,java.lang.Object[])
  getStringArray           public getStringArray(int)
  getText                  public getText(int)
  getText                  public getText(int,java.lang.CharSequence)
  getTextArray             public getTextArray(int)
  getValue                 public getValue(int,android.util.TypedValue,boolean)
  getValue                 public getValue(java.lang.String,android.util.TypedValue,boolean)
  getValueForDensity       public getValueForDensity(int,int,android.util.TypedValue,boolean)
  getXml                   public getXml(int)
  obtainAttributes         public obtainAttributes(android.util.AttributeSet,int[])
  obtainTypedArray         public obtainTypedArray(int)
  openRawResource          public openRawResource(int)
  openRawResource          public openRawResource(int,android.util.TypedValue)
  openRawResourceFd        public openRawResourceFd(int)
  parseBundleExtra         public parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle)
  parseBundleExtras        public parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle)
  updateConfiguration      public updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)

android.support.v7.internal.widget.ResourcesWrapper$ArrayOutOfBoundsException    (be.brunoparmentier.apkshare.eval_ol)
===============================================================================
  No methods

android.support.v7.internal.widget.RtlSpacingHelper      (be.brunoparmentier.apkshare.eval_q9)
===============================================================================
  a        public getRight()
  c        public setAbsolute(int,int)
  e        public getLeft()
  eval_p   public getStart()
  i        public setDirection(boolean)
  k        public getEnd()
  v        public setRelative(int,int)

android.support.v7.internal.widget.RtlSpacingHelper$ArrayOutOfBoundsException    (be.brunoparmentier.apkshare.eval_pw)
===============================================================================
  No methods

android.support.v7.internal.widget.ScrollingTabContainerView     (be.brunoparmentier.apkshare.eval_rb)
===============================================================================
  d                        static access$200(android.support.v7.internal.widget.ScrollingTabContainerView)
  eval_c                   public updateTab(int)
  eval_l                   public animateToTab(int)
  eval_u                   private performCollapse()
  g                        static access$300(android.support.v7.internal.widget.ScrollingTabContainerView,android.support.v7.app.ActionBar$Tab,boolean)
  g                        public setContentHeight(int)
  h                        public removeTabAt(int)
  k                        private performExpand()
  k                        public setAllowCollapse(boolean)
  l                        private createTabLayout()
  m                        public setTabSelected(int)
  n                        private createTabView(android.support.v7.app.ActionBar$Tab,boolean)
  q                        private createSpinner()
  t                        private isCollapsed()
  t                        public addTab(android.support.v7.app.ActionBar$Tab,int,boolean)
  u                        public onItemClick(android.support.v7.internal.widget.AdapterViewCompat,android.view.View,int,long)
  v                        public removeAllTabs()
  x                        public addTab(android.support.v7.app.ActionBar$Tab,boolean)
  x                        public animateToVisibility(int)
  onAttachedToWindow       public onAttachedToWindow()
  onConfigurationChanged   protected onConfigurationChanged(android.content.res.Configuration)
  onDetachedFromWindow     public onDetachedFromWindow()
  onMeasure                public onMeasure(int,int)

android.support.v7.internal.widget.ScrollingTabContainerView$1   (be.brunoparmentier.apkshare.eval_rb$1)
===============================================================================
  run  public run()

android.support.v7.internal.widget.ScrollingTabContainerView$NullPointerException        (be.brunoparmentier.apkshare.eval_t5)
===============================================================================
  No methods

android.support.v7.internal.widget.ScrollingTabContainerView$TabAdapter  (be.brunoparmentier.apkshare.eval_rb$r)
===============================================================================
  getCount     public getCount()
  getItem      public getItem(int)
  getItemId    public getItemId(int)
  getView      public getView(int,android.view.View,android.view.ViewGroup)

android.support.v7.internal.widget.ScrollingTabContainerView$TabClickListener    (be.brunoparmentier.apkshare.eval_rb$x)
===============================================================================
  onClick  public onClick(android.view.View)

android.support.v7.internal.widget.ScrollingTabContainerView$TabView     (be.brunoparmentier.apkshare.eval_rb$v)
===============================================================================
  d                                public getTab()
  f                                public update()
  p                                public bindTab(android.support.v7.app.ActionBar$Tab)
  onInitializeAccessibilityEvent   public onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
  onInitializeAccessibilityNodeInfo    public onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
  onLongClick                      public onLongClick(android.view.View)
  onMeasure                        public onMeasure(int,int)
  setSelected                      public setSelected(boolean)

android.support.v7.internal.widget.ScrollingTabContainerView$VisibilityAnimListener      (be.brunoparmentier.apkshare.eval_rb$o)
===============================================================================
  b    public onAnimationEnd(android.view.View)
  i    public withFinalVisibility(android.support.v4.view.ViewPropertyAnimatorCompat,int)
  s    public onAnimationStart(android.view.View)
  x    public onAnimationCancel(android.view.View)

android.support.v7.internal.widget.SpinnerCompat (be.brunoparmentier.apkshare.eval__r)
===============================================================================
  a                        public setDropDownVerticalOffset(int)
  b                        setOnItemClickListenerInt(android.support.v7.internal.widget.AdapterViewCompat$OnItemClickListener)
  b                        private setUpChild(android.view.View,boolean)
  c                        public setPrompt(java.lang.CharSequence)
  d                        public getDropDownVerticalOffset()
  e                        public setPromptId(int)
  eval_a                   public setGravity(int)
  eval_k                   public getDropDownWidth()
  eval_l                   public setPopupBackgroundResource(int)
  eval_r                   layout(int,boolean)
  eval_u                   public getPopupBackground()
  eval_y                   public getDropDownHorizontalOffset()
  eval_z                   public setDropDownHorizontalOffset(int)
  f                        public getPrompt()
  l                        public setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
  m                        public setOnItemClickListener(android.support.v7.internal.widget.AdapterViewCompat$OnItemClickListener)
  q                        static access$400(android.support.v7.internal.widget.SpinnerCompat)
  r                        private makeView(int,boolean)
  s                        public setDropDownWidth(int)
  v                        public setAdapter(android.widget.SpinnerAdapter)
  x                        static access$100(android.support.v7.internal.widget.SpinnerCompat)
  x                        public volatile setAdapter(android.widget.Adapter)
  y                        measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)
  getBaseline              public getBaseline()
  onClick                  public onClick(android.content.DialogInterface,int)
  onDetachedFromWindow     protected onDetachedFromWindow()
  onLayout                 protected onLayout(boolean,int,int,int,int)
  onMeasure                protected onMeasure(int,int)
  onRestoreInstanceState   public onRestoreInstanceState(android.os.Parcelable)
  onSaveInstanceState      public onSaveInstanceState()
  onTouchEvent             public onTouchEvent(android.view.MotionEvent)
  performClick             public performClick()
  setEnabled               public setEnabled(boolean)

android.support.v7.internal.widget.SpinnerCompat$1       (be.brunoparmentier.apkshare.eval__r$1)
===============================================================================
  i    public onForwardingStarted()
  n    public getPopup()

android.support.v7.internal.widget.SpinnerCompat$2       (be.brunoparmentier.apkshare.eval__r$2)
===============================================================================
  onGlobalLayout   public onGlobalLayout()

android.support.v7.internal.widget.SpinnerCompat$DialogPopup     (be.brunoparmentier.apkshare.eval__r$t)
===============================================================================
  f        public setHorizontalOffset(int)
  g        public getHintText()
  g        public setPromptText(java.lang.CharSequence)
  j        public dismiss()
  l        public setAdapter(android.widget.ListAdapter)
  o        public show()
  q        public getVerticalOffset()
  r        public setVerticalOffset(int)
  u        public isShowing()
  u        public setBackgroundDrawable(android.graphics.drawable.Drawable)
  v        public getBackground()
  y        public getHorizontalOffset()
  onClick  public onClick(android.content.DialogInterface,int)

android.support.v7.internal.widget.SpinnerCompat$DropDownAdapter (be.brunoparmentier.apkshare.eval__r$d)
===============================================================================
  areAllItemsEnabled           public areAllItemsEnabled()
  getCount                     public getCount()
  getDropDownView              public getDropDownView(int,android.view.View,android.view.ViewGroup)
  getItem                      public getItem(int)
  getItemId                    public getItemId(int)
  getItemViewType              public getItemViewType(int)
  getView                      public getView(int,android.view.View,android.view.ViewGroup)
  getViewTypeCount             public getViewTypeCount()
  hasStableIds                 public hasStableIds()
  isEmpty                      public isEmpty()
  isEnabled                    public isEnabled(int)
  registerDataSetObserver      public registerDataSetObserver(android.database.DataSetObserver)
  unregisterDataSetObserver    public unregisterDataSetObserver(android.database.DataSetObserver)

android.support.v7.internal.widget.SpinnerCompat$DropdownPopup   (be.brunoparmentier.apkshare.eval__r$b)
===============================================================================
  g    public getHintText()
  g    public setPromptText(java.lang.CharSequence)
  l    public setAdapter(android.widget.ListAdapter)
  n    static access$501(android.support.v7.internal.widget.SpinnerCompat$DropdownPopup)
  p    public show(int,int)
  q    static access$300(android.support.v7.internal.widget.SpinnerCompat$DropdownPopup)
  x    computeContentWidth()

android.support.v7.internal.widget.SpinnerCompat$DropdownPopup$1 (be.brunoparmentier.apkshare.eval__r$b$1)
===============================================================================
  onItemClick  public onItemClick(android.widget.AdapterView,android.view.View,int,long)

android.support.v7.internal.widget.SpinnerCompat$DropdownPopup$2 (be.brunoparmentier.apkshare.eval__r$b$2)
===============================================================================
  onGlobalLayout   public onGlobalLayout()

android.support.v7.internal.widget.SpinnerCompat$DropdownPopup$3 (be.brunoparmentier.apkshare.eval__r$b$3)
===============================================================================
  onDismiss    public onDismiss()

android.support.v7.internal.widget.SpinnerCompat$DropdownPopup$ParseException    (be.brunoparmentier.apkshare.eval_r5)
===============================================================================
  No methods

android.support.v7.internal.widget.SpinnerCompat$IOException     (be.brunoparmentier.apkshare.eval_s4)
===============================================================================
  No methods

android.support.v7.internal.widget.SpinnerCompat$SavedState      (be.brunoparmentier.apkshare.eval__r$e)
===============================================================================
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v7.internal.widget.SpinnerCompat$SavedState$1    (be.brunoparmentier.apkshare.eval__r$e$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v7.internal.widget.SpinnerCompat$SavedState$Exception    (be.brunoparmentier.apkshare.eval_sl)
===============================================================================
  No methods

android.support.v7.internal.widget.SpinnerCompat$SpinnerPopup    (be.brunoparmentier.apkshare.eval__r$q)
===============================================================================
  f    public abstract setHorizontalOffset(int)
  g    public abstract getHintText()
  g    public abstract setPromptText(java.lang.CharSequence)
  j    public abstract dismiss()
  l    public abstract setAdapter(android.widget.ListAdapter)
  o    public abstract show()
  q    public abstract getVerticalOffset()
  r    public abstract setVerticalOffset(int)
  u    public abstract isShowing()
  u    public abstract setBackgroundDrawable(android.graphics.drawable.Drawable)
  v    public abstract getBackground()
  y    public abstract getHorizontalOffset()

android.support.v7.internal.widget.ThemeUtils    (be.brunoparmentier.apkshare.eval_bg)
===============================================================================
  a    public static getDisabledThemeAttrColor(android.content.Context,int)
  e    public static getThemeAttrColorStateList(android.content.Context,int)
  f    public static createDisabledStateList(int,int)
  i    public static getThemeAttrColor(android.content.Context,int)
  k    private static getTypedValue()
  p    static getThemeAttrColor(android.content.Context,int,float)

android.support.v7.internal.widget.ThemeUtils$NullPointerException       (be.brunoparmentier.apkshare.eval_kv)
===============================================================================
  No methods

android.support.v7.internal.widget.TintContextWrapper    (be.brunoparmentier.apkshare.eval_da)
===============================================================================
  o            public static wrap(android.content.Context)
  getResources public getResources()

android.support.v7.internal.widget.TintContextWrapper$IOException        (be.brunoparmentier.apkshare.eval_of)
===============================================================================
  No methods

android.support.v7.internal.widget.TintContextWrapper$TintResources      (be.brunoparmentier.apkshare.eval_da$n)
===============================================================================
  getDrawable  public getDrawable(int)

android.support.v7.internal.widget.TintImageView (be.brunoparmentier.apkshare.eval_dj)
===============================================================================
  setImageResource public setImageResource(int)

android.support.v7.internal.widget.TintImageView$IOException     (be.brunoparmentier.apkshare.eval_m7)
===============================================================================
  No methods

android.support.v7.internal.widget.TintInfo      (be.brunoparmentier.apkshare.eval_y6)
===============================================================================
  No methods

android.support.v7.internal.widget.TintInfo$IOException  (be.brunoparmentier.apkshare.eval__j)
===============================================================================
  No methods

android.support.v7.internal.widget.TintManager   (be.brunoparmentier.apkshare.eval_ug)
===============================================================================
  a        final getTintMode(int)
  d        private createButtonColorStateList(android.content.Context)
  d        public final tintDrawableUsingColorFilter(int,android.graphics.drawable.Drawable)
  e        private getDefaultColorStateList(android.content.Context)
  eval__   public final getTintList(int)
  eval_k   private createCheckableButtonColorStateList(android.content.Context)
  f        private static isInTintList(int)
  h        private createSwitchTrackColorStateList(android.content.Context)
  h        public static getDrawable(android.content.Context,int)
  j        private static setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)
  m        public getDrawable(int,boolean)
  v        public static tintViewBackground(android.view.View,android.support.v7.internal.widget.TintInfo)
  w        private createSpinnerColorStateList(android.content.Context)
  w        private static arrayContains(int[],int)
  x        private createEditTextColorStateList(android.content.Context)
  y        public static get(android.content.Context)
  y        public getDrawable(int)
  z        private createSwitchThumbColorStateList(android.content.Context)

android.support.v7.internal.widget.TintManager$ArrayOutOfBoundsException (be.brunoparmentier.apkshare.eval_e4)
===============================================================================
  No methods

android.support.v7.internal.widget.TintManager$ColorFilterLruCache       (be.brunoparmentier.apkshare.eval_ug$d)
===============================================================================
  j    private static generateCacheKey(int,android.graphics.PorterDuff$Mode)
  s    get(int,android.graphics.PorterDuff$Mode)
  y    put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter)

android.support.v7.internal.widget.TintTypedArray        (be.brunoparmentier.apkshare.eval_pe)
===============================================================================
  b        public peekValue(int)
  b        public getInt(int,int)
  c        public getDimension(int,float)
  c        public getInteger(int,int)
  d        public getBoolean(int,boolean)
  e        public getColorStateList(int)
  eval_c   public getResources()
  eval_h   public getTintManager()
  eval_m   public recycle()
  eval_r   public getType(int)
  eval_s   public getTextArray(int)
  f        public getIndex(int)
  h        public getDrawableIfKnown(int)
  h        public getLayoutDimension(int,int)
  k        public length()
  k        public getLayoutDimension(int,java.lang.String)
  m        public getPositionDescription()
  m        public getDimensionPixelSize(int,int)
  n        public getChangingConfigurations()
  n        public getColor(int,int)
  o        public getIndexCount()
  o        public static obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[])
  o        public hasValue(int)
  o        public getDimensionPixelOffset(int,int)
  p        public getDrawable(int)
  q        public getValue(int,android.util.TypedValue)
  r        public getFloat(int,float)
  s        public getText(int)
  t        public getString(int)
  v        public getResourceId(int,int)
  y        public getNonResourceString(int)
  y        public getFraction(int,int,int,float)
  z        public static obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int)

android.support.v7.internal.widget.TintTypedArray$Exception      (be.brunoparmentier.apkshare.eval_j6)
===============================================================================
  No methods

android.support.v7.internal.widget.ToolbarWidgetWrapper  (be.brunoparmentier.apkshare.eval_wu)
===============================================================================
  a        static access$000(android.support.v7.internal.widget.ToolbarWidgetWrapper)
  a        public setNavigationMode(int)
  b        public setBackgroundDrawable(android.graphics.drawable.Drawable)
  b        static access$200(android.support.v7.internal.widget.ToolbarWidgetWrapper)
  b        public setIcon(int)
  c        public getDropdownItemCount()
  c        public setDisplayOptions(int)
  d        public initIndeterminateProgress()
  d        static access$100(android.support.v7.internal.widget.ToolbarWidgetWrapper)
  d        public setLogo(int)
  e        public setSubtitle(java.lang.CharSequence)
  eval__   private ensureSpinner()
  eval_a   public getPopupTheme()
  eval_a   public animateToVisibility(int)
  eval_b   public setMenuPrepared()
  eval_b   public setMenuCallbacks(android.support.v7.internal.view.menu.MenuPresenter$Callback,android.support.v7.internal.view.menu.MenuBuilder$Callback)
  eval_d   public getDropdownSelectedPosition()
  eval_g   private updateNavigationIcon()
  eval_g   static access$300(android.support.v7.internal.widget.ToolbarWidgetWrapper)
  eval_h   public showOverflowMenu()
  eval_i   public hasLogo()
  eval_k   public dismissPopupMenus()
  eval_k   public setEmbeddedTabView(android.support.v7.internal.widget.ScrollingTabContainerView)
  eval_l   public isOverflowMenuShowing()
  eval_m   public getNavigationMode()
  eval_o   public hasEmbeddedTabs()
  eval_p   public getDisplayOptions()
  eval_q   public getCustomView()
  eval_r   public getVisibility()
  eval_u   private updateToolbarLogo()
  eval_v   public canSplit()
  eval_w   public getMenu()
  eval_x   private updateHomeAccessibility()
  f        public hideOverflowMenu()
  f        public restoreHierarchyState(android.util.SparseArray)
  f        public setDropdownParams(android.widget.SpinnerAdapter,android.support.v7.internal.widget.AdapterViewCompat$OnItemSelectedListener)
  g        public isTitleTruncated()
  h        public initProgress()
  h        public setSplitToolbar(boolean)
  h        public setVisibility(int)
  i        public setDefaultNavigationIcon(android.graphics.drawable.Drawable)
  i        private setTitleInt(java.lang.CharSequence)
  k        public isOverflowMenuShowPending()
  l        public getContext()
  l        public setNavigationIcon(int)
  m        public hasExpandedActionView()
  m        public setMenu(android.view.Menu,android.support.v7.internal.view.menu.MenuPresenter$Callback)
  m        public setWindowTitle(java.lang.CharSequence)
  n        public getTitle()
  n        public setIcon(android.graphics.drawable.Drawable)
  n        public setTitle(java.lang.CharSequence)
  o        public getHeight()
  o        public setSplitView(android.view.ViewGroup)
  o        public setHomeButtonEnabled(boolean)
  p        public collapseActionView()
  q        public canShowOverflowMenu()
  r        public isSplit()
  r        public setNavigationContentDescription(int)
  t        public setLogo(android.graphics.drawable.Drawable)
  u        public setCustomView(android.view.View)
  v        public getSubtitle()
  v        public setCollapsible(boolean)
  v        public setDefaultNavigationContentDescription(int)
  v        public setNavigationContentDescription(java.lang.CharSequence)
  w        public getViewGroup()
  w        public setDropdownSelectedPosition(int)
  x        private detectDisplayOptions()
  x        public setNavigationIcon(android.graphics.drawable.Drawable)
  x        public saveHierarchyState(android.util.SparseArray)
  x        public setSplitWhenNarrow(boolean)
  z        public hasIcon()
  z        public setWindowCallback(android.view.Window$Callback)

android.support.v7.internal.widget.ToolbarWidgetWrapper$1        (be.brunoparmentier.apkshare.eval_wu$1)
===============================================================================
  onClick  public onClick(android.view.View)

android.support.v7.internal.widget.ToolbarWidgetWrapper$2        (be.brunoparmentier.apkshare.eval_wu$2)
===============================================================================
  b    public onAnimationEnd(android.view.View)
  x    public onAnimationCancel(android.view.View)

android.support.v7.internal.widget.ToolbarWidgetWrapper$3        (be.brunoparmentier.apkshare.eval_wu$3)
===============================================================================
  s    public onAnimationStart(android.view.View)

android.support.v7.internal.widget.ToolbarWidgetWrapper$NullPointerException     (be.brunoparmentier.apkshare.eval_fj)
===============================================================================
  No methods

android.support.v7.internal.widget.ViewStubCompat        (be.brunoparmentier.apkshare.eval_rr)
===============================================================================
  a                public setOnInflateListener(android.support.v7.internal.widget.ViewStubCompat$OnInflateListener)
  f                public getLayoutResource()
  m                public setLayoutResource(int)
  q                public setInflatedId(int)
  s                public getLayoutInflater()
  t                public getInflatedId()
  u                public setLayoutInflater(android.view.LayoutInflater)
  w                public inflate()
  dispatchDraw     protected dispatchDraw(android.graphics.Canvas)
  draw             public draw(android.graphics.Canvas)
  onMeasure        protected onMeasure(int,int)
  setVisibility    public setVisibility(int)

android.support.v7.internal.widget.ViewStubCompat$Exception      (be.brunoparmentier.apkshare.eval_je)
===============================================================================
  No methods

android.support.v7.internal.widget.ViewStubCompat$OnInflateListener      (be.brunoparmentier.apkshare.eval_rr$w)
===============================================================================
  h    public abstract onInflate(android.support.v7.internal.widget.ViewStubCompat,android.view.View)

android.support.v7.internal.widget.ViewUtils     (be.brunoparmentier.apkshare.eval_k5)
===============================================================================
  eval_p   public static combineMeasuredStates(int,int)
  g        public static isLayoutRtl(android.view.View)
  o        public static computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect)
  x        public static makeOptionalFitsSystemWindows(android.view.View)

android.support.v7.internal.widget.ViewUtils$Exception   (be.brunoparmentier.apkshare.eval_ir)
===============================================================================
  No methods

android.support.v7.recyclerview.BuildConfig      (be.brunoparmentier.apkshare.eval_ck)
===============================================================================
  No methods

android.support.v7.recyclerview.BuildConfig$IOException  (be.brunoparmentier.apkshare.eval_a1)
===============================================================================
  No methods

android.support.v7.recyclerview.R
===============================================================================
  No methods

android.support.v7.recyclerview.R$IOException
===============================================================================
  No methods

android.support.v7.recyclerview.R$attr
===============================================================================
  No methods

android.support.v7.recyclerview.R$dimen
===============================================================================
  No methods

android.support.v7.recyclerview.R$id
===============================================================================
  No methods

android.support.v7.recyclerview.R$styleable
===============================================================================
  No methods

android.support.v7.util.SortedList       (be.brunoparmentier.apkshare.eval_w8)
===============================================================================
  a        public recalculatePositionOfItemAt(int)
  c        public endBatchedUpdates()
  eval_g   public clear()
  f        public remove(java.lang.Object)
  g        private remove(java.lang.Object,boolean)
  j        public removeItemAt(int)
  l        public get(int)
  o        public beginBatchedUpdates()
  o        public add(java.lang.Object)
  p        public indexOf(java.lang.Object)
  p        private findIndexOf(java.lang.Object,int)
  q        public size()
  r        private linearEqualitySearch(java.lang.Object,int,int,int)
  w        private addToData(int,java.lang.Object)
  x        private add(java.lang.Object,boolean)
  y        public updateItemAt(int,java.lang.Object)
  z        private removeItemAtIndex(int,boolean)

android.support.v7.util.SortedList$BatchedCallback       (be.brunoparmentier.apkshare.eval_w8$n)
===============================================================================
  a    public areContentsTheSame(java.lang.Object,java.lang.Object)
  b    public onRemoved(int,int)
  d    public onMoved(int,int)
  d    public areItemsTheSame(java.lang.Object,java.lang.Object)
  h    public onInserted(int,int)
  p    public dispatchLastEvent()
  s    static access$000(android.support.v7.util.SortedList$BatchedCallback)
  w    public onChanged(int,int)
  x    public compare(java.lang.Object,java.lang.Object)

android.support.v7.util.SortedList$Callback      (be.brunoparmentier.apkshare.eval_w8$e)
===============================================================================
  a    public abstract areContentsTheSame(java.lang.Object,java.lang.Object)
  b    public abstract onRemoved(int,int)
  d    public abstract onMoved(int,int)
  d    public abstract areItemsTheSame(java.lang.Object,java.lang.Object)
  h    public abstract onInserted(int,int)
  w    public abstract onChanged(int,int)
  x    public abstract compare(java.lang.Object,java.lang.Object)

android.support.v7.util.SortedList$Exception     (be.brunoparmentier.apkshare.eval_lw)
===============================================================================
  No methods

android.support.v7.view.ActionMode       (be.brunoparmentier.apkshare.eval_vm)
===============================================================================
  b        public abstract getSubtitle()
  e        public abstract getMenuInflater()
  eval_g   public isUiFocusable()
  eval_q   public abstract setCustomView(android.view.View)
  g        public setTag(java.lang.Object)
  i        public getTag()
  j        public abstract setSubtitle(int)
  n        public getTitleOptionalHint()
  n        public abstract setTitle(int)
  n        public abstract setTitle(java.lang.CharSequence)
  o        public abstract getMenu()
  q        public abstract getCustomView()
  u        public abstract finish()
  v        public isTitleOptional()
  v        public setTitleOptionalHint(boolean)
  v        public abstract setSubtitle(java.lang.CharSequence)
  w        public abstract invalidate()
  y        public abstract getTitle()

android.support.v7.view.ActionMode$Callback      (be.brunoparmentier.apkshare.eval_vm$_)
===============================================================================
  a    public abstract onDestroyActionMode(android.support.v7.view.ActionMode)
  j    public abstract onPrepareActionMode(android.support.v7.view.ActionMode,android.view.Menu)
  q    public abstract onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem)
  r    public abstract onCreateActionMode(android.support.v7.view.ActionMode,android.view.Menu)

android.support.v7.view.ActionMode$Exception     (be.brunoparmentier.apkshare.eval_gc)
===============================================================================
  No methods

android.support.v7.view.CollapsibleActionView    (be.brunoparmentier.apkshare.eval_gb)
===============================================================================
  e    public abstract onActionViewCollapsed()
  y    public abstract onActionViewExpanded()

android.support.v7.view.CollapsibleActionView$NullPointerException       (be.brunoparmentier.apkshare.eval_wi)
===============================================================================
  No methods

android.support.v7.widget.ActionMenuPresenter    (be.brunoparmentier.apkshare.eval_lu)
===============================================================================
  a        public getItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)
  a        static access$800(android.support.v7.widget.ActionMenuPresenter)
  c        public initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder)
  d        public setWidthLimit(int,boolean)
  eval__   public isOverflowMenuShowing()
  eval_i   static access$600(android.support.v7.widget.ActionMenuPresenter)
  eval_l   public onSubUiVisibilityChanged(boolean)
  eval_t   static access$700(android.support.v7.widget.ActionMenuPresenter)
  eval_x   public setReserveOverflow(boolean)
  g        static access$500(android.support.v7.widget.ActionMenuPresenter)
  h        public onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)
  h        public setExpandedActionViewsExclusive(boolean)
  i        public onSaveInstanceState()
  j        public flagActionItems()
  j        static access$300(android.support.v7.widget.ActionMenuPresenter)
  k        static access$200(android.support.v7.widget.ActionMenuPresenter)
  l        public onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder)
  m        public shouldIncludeItem(int,android.support.v7.internal.view.menu.MenuItemImpl)
  n        public hideSubMenus()
  o        public isOverflowReserved()
  o        private findViewForItem(android.view.MenuItem)
  p        static access$400(android.support.v7.widget.ActionMenuPresenter)
  q        public onConfigurationChanged(android.content.res.Configuration)
  q        public onRestoreInstanceState(android.os.Parcelable)
  r        public hideOverflowMenu()
  r        public setMenuView(android.support.v7.widget.ActionMenuView)
  s        static access$702(android.support.v7.widget.ActionMenuPresenter,android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu)
  s        public getMenuView(android.view.ViewGroup)
  t        public bindItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.support.v7.internal.view.menu.MenuView$ItemView)
  u        public isOverflowMenuShowPending()
  u        static access$302(android.support.v7.widget.ActionMenuPresenter,android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable)
  v        static access$900(android.support.v7.widget.ActionMenuPresenter)
  v        public updateMenuView(boolean)
  v        public setItemLimit(int)
  x        public showOverflowMenu()
  y        public dismissPopupMenus()
  y        public filterLeftoverView(android.view.ViewGroup,int)
  z        static access$202(android.support.v7.widget.ActionMenuPresenter,android.support.v7.widget.ActionMenuPresenter$OverflowPopup)

android.support.v7.widget.ActionMenuPresenter$1  (be.brunoparmentier.apkshare.eval_lu$1)
===============================================================================
  No methods

android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu        (be.brunoparmentier.apkshare.eval_lu$d)
===============================================================================
  onDismiss    public onDismiss()

android.support.v7.widget.ActionMenuPresenter$ActionMenuPopupCallback    (be.brunoparmentier.apkshare.eval_lu$r)
===============================================================================
  g    public getPopup()

android.support.v7.widget.ActionMenuPresenter$NullPointerException       (be.brunoparmentier.apkshare.eval_f5)
===============================================================================
  No methods

android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable       (be.brunoparmentier.apkshare.eval_lu$eval_k)
===============================================================================
  run  public run()

android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton (be.brunoparmentier.apkshare.eval_lu$i)
===============================================================================
  i            public needsDividerBefore()
  z            public needsDividerAfter()
  performClick public performClick()
  setFrame     protected setFrame(int,int,int,int)

android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton$1       (be.brunoparmentier.apkshare.eval_lu$i$1)
===============================================================================
  a    public onForwardingStopped()
  i    public onForwardingStarted()
  n    public getPopup()

android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton$Exception       (be.brunoparmentier.apkshare.eval_k7)
===============================================================================
  No methods

android.support.v7.widget.ActionMenuPresenter$OverflowPopup      (be.brunoparmentier.apkshare.eval_lu$n)
===============================================================================
  onDismiss    public onDismiss()

android.support.v7.widget.ActionMenuPresenter$PopupPresenterCallback     (be.brunoparmentier.apkshare.eval_lu$t)
===============================================================================
  a    public onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder)
  f    public onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)

android.support.v7.widget.ActionMenuPresenter$SavedState (be.brunoparmentier.apkshare.eval_lu$w)
===============================================================================
  describeContents public describeContents()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v7.widget.ActionMenuPresenter$SavedState$1       (be.brunoparmentier.apkshare.eval_lu$w$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v7.widget.ActionMenuPresenter$SavedState$ArrayOutOfBoundsException       (be.brunoparmentier.apkshare.eval_tr)
===============================================================================
  No methods

android.support.v7.widget.ActionMenuView (be.brunoparmentier.apkshare.eval_zg)
===============================================================================
  a                                static access$300(android.support.v7.widget.ActionMenuView)
  a                                public setOnMenuItemClickListener(android.support.v7.widget.ActionMenuView$OnMenuItemClickListener)
  b                                private onMeasureExactFormat(int,int)
  d                                static measureChildForCells(android.view.View,int,int,int,int)
  eval_n                           public showOverflowMenu()
  eval_p                           public generateOverflowButtonLayoutParams()
  f                                public dismissPopupMenus()
  f                                public setExpandedActionViewsExclusive(boolean)
  g                                protected hasSupportDividerBeforeChildAt(int)
  generateDefaultLayoutParams      protected generateDefaultLayoutParams()
  generateLayoutParams             public generateLayoutParams(android.util.AttributeSet)
  generateLayoutParams             protected generateLayoutParams(android.view.ViewGroup$LayoutParams)
  h                                public hideOverflowMenu()
  i                                public peekMenu()
  j                                public isOverflowMenuShowing()
  k                                public invokeItem(android.support.v7.internal.view.menu.MenuItemImpl)
  l                                public getWindowAnimations()
  n                                public setMenuCallbacks(android.support.v7.internal.view.menu.MenuPresenter$Callback,android.support.v7.internal.view.menu.MenuBuilder$Callback)
  n                                public setOverflowReserved(boolean)
  p                                public getMenu()
  s                                public initialize(android.support.v7.internal.view.menu.MenuBuilder)
  t                                public isOverflowReserved()
  t                                public setPopupTheme(int)
  v                                public getPopupTheme()
  v                                static access$200(android.support.v7.widget.ActionMenuView)
  x                                public isOverflowMenuShowPending()
  y                                public setPresenter(android.support.v7.widget.ActionMenuPresenter)
  checkLayoutParams                protected checkLayoutParams(android.view.ViewGroup$LayoutParams)
  dispatchPopulateAccessibilityEvent   public dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
  generateDefaultLayoutParams      protected volatile generateDefaultLayoutParams()
  generateLayoutParams             public volatile generateLayoutParams(android.util.AttributeSet)
  generateLayoutParams             protected volatile generateLayoutParams(android.view.ViewGroup$LayoutParams)
  onConfigurationChanged           public onConfigurationChanged(android.content.res.Configuration)
  onDetachedFromWindow             public onDetachedFromWindow()
  onLayout                         protected onLayout(boolean,int,int,int,int)
  onMeasure                        protected onMeasure(int,int)

android.support.v7.widget.ActionMenuView$1       (be.brunoparmentier.apkshare.eval_zg$1)
===============================================================================
  No methods

android.support.v7.widget.ActionMenuView$ActionMenuChildView     (be.brunoparmentier.apkshare.eval_zg$q)
===============================================================================
  i    public abstract needsDividerBefore()
  z    public abstract needsDividerAfter()

android.support.v7.widget.ActionMenuView$ActionMenuPresenterCallback     (be.brunoparmentier.apkshare.eval_zg$o)
===============================================================================
  a    public onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder)
  f    public onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)

android.support.v7.widget.ActionMenuView$LayoutParams    (be.brunoparmentier.apkshare.eval_zg$p)
===============================================================================
  No methods

android.support.v7.widget.ActionMenuView$MenuBuilderCallback     (be.brunoparmentier.apkshare.eval_zg$i)
===============================================================================
  g    public onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem)
  h    public onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder)

android.support.v7.widget.ActionMenuView$NullPointerException    (be.brunoparmentier.apkshare.eval_u0)
===============================================================================
  No methods

android.support.v7.widget.ActionMenuView$OnMenuItemClickListener (be.brunoparmentier.apkshare.eval_zg$e)
===============================================================================
  x    public abstract onMenuItemClick(android.view.MenuItem)

android.support.v7.widget.AdapterHelper  (be.brunoparmentier.apkshare.eval_nz)
===============================================================================
  b        onItemRangeMoved(int,int,int)
  c        private applyUpdate(android.support.v7.widget.AdapterHelper$UpdateOp)
  c        dispatchFirstPassAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp,int)
  c        findPositionOffset(int,int)
  e        transient addUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp[])
  e        private canFindInPreLayout(int)
  eval_c   consumePostponedUpdates()
  eval_o   private updatePositionWithPostponed(int,int)
  g        public applyPendingUpdatesToPosition(int)
  g        recycleUpdateOpsAndClearList(java.util.List)
  j        onItemRangeInserted(int,int)
  k        private dispatchAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp)
  m        findPositionOffset(int)
  m        public obtainUpdateOp(int,int,int)
  o        private applyAdd(android.support.v7.widget.AdapterHelper$UpdateOp)
  r        preProcess()
  s        hasPendingUpdates()
  w        private postponeAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp)
  x        public recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp)
  y        consumeUpdatesInOnePass()
  y        private applyMove(android.support.v7.widget.AdapterHelper$UpdateOp)
  y        onItemRangeRemoved(int,int)
  z        reset()
  z        private applyRemove(android.support.v7.widget.AdapterHelper$UpdateOp)
  z        onItemRangeChanged(int,int)

android.support.v7.widget.AdapterHelper$Callback (be.brunoparmentier.apkshare.eval_nz$n)
===============================================================================
  b    public abstract offsetPositionsForRemovingLaidOutOrNewView(int,int)
  c    public abstract offsetPositionsForRemovingInvisible(int,int)
  j    public abstract offsetPositionsForAdd(int,int)
  l    public abstract onDispatchSecondPass(android.support.v7.widget.AdapterHelper$UpdateOp)
  n    public abstract offsetPositionsForMove(int,int)
  w    public abstract onDispatchFirstPass(android.support.v7.widget.AdapterHelper$UpdateOp)
  w    public abstract findViewHolder(int)
  z    public abstract markViewHoldersUpdated(int,int)

android.support.v7.widget.AdapterHelper$Exception        (be.brunoparmentier.apkshare.eval_kl)
===============================================================================
  No methods

android.support.v7.widget.AdapterHelper$UpdateOp (be.brunoparmentier.apkshare.eval_nz$u)
===============================================================================
  v        cmdToString()
  equals   public equals(java.lang.Object)
  hashCode public hashCode()
  toString public toString()

android.support.v7.widget.AppCompatAutoCompleteTextView  (be.brunoparmentier.apkshare.eval_x5)
===============================================================================
  b                                public getSupportBackgroundTintMode()
  m                                private applySupportBackgroundTint()
  n                                private setInternalBackgroundTint(android.content.res.ColorStateList)
  r                                public getSupportBackgroundTintList()
  r                                public setSupportBackgroundTintList(android.content.res.ColorStateList)
  w                                public setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
  drawableStateChanged             protected drawableStateChanged()
  setBackgroundDrawable            public setBackgroundDrawable(android.graphics.drawable.Drawable)
  setBackgroundResource            public setBackgroundResource(int)
  setDropDownBackgroundResource    public setDropDownBackgroundResource(int)

android.support.v7.widget.AppCompatAutoCompleteTextView$NullPointerException     (be.brunoparmentier.apkshare.eval_fh)
===============================================================================
  No methods

android.support.v7.widget.AppCompatButton        (be.brunoparmentier.apkshare.eval_f2)
===============================================================================
  b                                public getSupportBackgroundTintMode()
  e                                private applySupportBackgroundTint()
  r                                public getSupportBackgroundTintList()
  r                                public setSupportBackgroundTintList(android.content.res.ColorStateList)
  t                                private setInternalBackgroundTint(android.content.res.ColorStateList)
  w                                public setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
  drawableStateChanged             protected drawableStateChanged()
  onInitializeAccessibilityEvent   public onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
  onInitializeAccessibilityNodeInfo    public onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
  setAllCaps                       public setAllCaps(boolean)
  setBackgroundDrawable            public setBackgroundDrawable(android.graphics.drawable.Drawable)
  setBackgroundResource            public setBackgroundResource(int)
  setTextAppearance                public setTextAppearance(android.content.Context,int)

android.support.v7.widget.AppCompatButton$ArrayOutOfBoundsException      (be.brunoparmentier.apkshare.eval_qm)
===============================================================================
  No methods

android.support.v7.widget.AppCompatCheckBox      (be.brunoparmentier.apkshare.eval_t1)
===============================================================================
  getCompoundPaddingLeft   public getCompoundPaddingLeft()
  setButtonDrawable        public setButtonDrawable(android.graphics.drawable.Drawable)
  setButtonDrawable        public setButtonDrawable(int)

android.support.v7.widget.AppCompatCheckBox$IOException  (be.brunoparmentier.apkshare.eval_py)
===============================================================================
  No methods

android.support.v7.widget.AppCompatCheckedTextView       (be.brunoparmentier.apkshare.eval_gt)
===============================================================================
  setCheckMarkDrawable public setCheckMarkDrawable(int)

android.support.v7.widget.AppCompatCheckedTextView$NullPointerException  (be.brunoparmentier.apkshare.eval_dd)
===============================================================================
  No methods

android.support.v7.widget.AppCompatEditText      (be.brunoparmentier.apkshare.eval_jj)
===============================================================================
  b                        public getSupportBackgroundTintMode()
  h                        private setInternalBackgroundTint(android.content.res.ColorStateList)
  r                        public getSupportBackgroundTintList()
  r                        public setSupportBackgroundTintList(android.content.res.ColorStateList)
  w                        public setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
  x                        private applySupportBackgroundTint()
  drawableStateChanged     protected drawableStateChanged()
  setBackgroundDrawable    public setBackgroundDrawable(android.graphics.drawable.Drawable)
  setBackgroundResource    public setBackgroundResource(int)

android.support.v7.widget.AppCompatEditText$IOException  (be.brunoparmentier.apkshare.eval_o5)
===============================================================================
  No methods

android.support.v7.widget.AppCompatMultiAutoCompleteTextView     (be.brunoparmentier.apkshare.eval_yu)
===============================================================================
  b                                public getSupportBackgroundTintMode()
  eval_g                           private applySupportBackgroundTint()
  r                                public getSupportBackgroundTintList()
  r                                public setSupportBackgroundTintList(android.content.res.ColorStateList)
  t                                private setInternalBackgroundTint(android.content.res.ColorStateList)
  w                                public setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
  drawableStateChanged             protected drawableStateChanged()
  setBackgroundDrawable            public setBackgroundDrawable(android.graphics.drawable.Drawable)
  setBackgroundResource            public setBackgroundResource(int)
  setDropDownBackgroundResource    public setDropDownBackgroundResource(int)

android.support.v7.widget.AppCompatMultiAutoCompleteTextView$NullPointerException        (be.brunoparmentier.apkshare.eval_po)
===============================================================================
  No methods

android.support.v7.widget.AppCompatRadioButton   (be.brunoparmentier.apkshare.eval_d9)
===============================================================================
  getCompoundPaddingLeft   public getCompoundPaddingLeft()
  setButtonDrawable        public setButtonDrawable(android.graphics.drawable.Drawable)
  setButtonDrawable        public setButtonDrawable(int)

android.support.v7.widget.AppCompatRadioButton$ArrayOutOfBoundsException (be.brunoparmentier.apkshare.eval_r0)
===============================================================================
  No methods

android.support.v7.widget.AppCompatRatingBar     (be.brunoparmentier.apkshare.eval_nf)
===============================================================================
  j            private tileify(android.graphics.drawable.Drawable,boolean)
  t            private tileifyIndeterminate(android.graphics.drawable.Drawable)
  y            private getDrawableShape()
  onMeasure    protected synchronized onMeasure(int,int)

android.support.v7.widget.AppCompatRatingBar$Exception   (be.brunoparmentier.apkshare.eval_lo)
===============================================================================
  No methods

android.support.v7.widget.AppCompatSpinner       (be.brunoparmentier.apkshare.eval_hl)
===============================================================================
  b                        public getSupportBackgroundTintMode()
  b                        private setInternalBackgroundTint(android.content.res.ColorStateList)
  eval_m                   private applySupportBackgroundTint()
  j                        private static setPopupBackgroundDrawableV11(android.widget.Spinner,android.graphics.drawable.Drawable)
  r                        public getSupportBackgroundTintList()
  r                        public setSupportBackgroundTintList(android.content.res.ColorStateList)
  w                        public setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
  drawableStateChanged     protected drawableStateChanged()
  setBackgroundDrawable    public setBackgroundDrawable(android.graphics.drawable.Drawable)
  setBackgroundResource    public setBackgroundResource(int)

android.support.v7.widget.AppCompatSpinner$ParseException        (be.brunoparmentier.apkshare.eval_ou)
===============================================================================
  No methods

android.support.v7.widget.AppCompatTextView      (be.brunoparmentier.apkshare.eval_bi)
===============================================================================
  setAllCaps           public setAllCaps(boolean)
  setTextAppearance    public setTextAppearance(android.content.Context,int)

android.support.v7.widget.AppCompatTextView$IOException  (be.brunoparmentier.apkshare.eval_ur)
===============================================================================
  No methods

android.support.v7.widget.CardView       (be.brunoparmentier.apkshare.eval_c3)
===============================================================================
  b                    public getContentPaddingRight()
  d                    private initialize(android.content.Context,android.util.AttributeSet,int)
  d                    public setUseCompatPadding(boolean)
  e                    public getCardElevation()
  eval_f               public getContentPaddingBottom()
  f                    public setMaxCardElevation(float)
  h                    public setCardElevation(float)
  n                    public getPreventCornerOverlap()
  q                    public getMaxCardElevation()
  s                    public getContentPaddingTop()
  s                    public setRadius(float)
  s                    public setContentPadding(int,int,int,int)
  t                    public getUseCompatPadding()
  u                    public setPreventCornerOverlap(boolean)
  u                    public setShadowPadding(int,int,int,int)
  v                    public getContentPaddingLeft()
  x                    public setCardBackgroundColor(int)
  z                    public getRadius()
  onMeasure            protected onMeasure(int,int)
  setPadding           public setPadding(int,int,int,int)
  setPaddingRelative   public setPaddingRelative(int,int,int,int)

android.support.v7.widget.CardView$Exception     (be.brunoparmentier.apkshare.eval_bm)
===============================================================================
  No methods

android.support.v7.widget.CardViewApi21  (be.brunoparmentier.apkshare.eval_r7)
===============================================================================
  b        public getElevation(android.support.v7.widget.CardViewDelegate)
  d        public initialize(android.support.v7.widget.CardViewDelegate,android.content.Context,int,float,float,float)
  e        public updatePadding(android.support.v7.widget.CardViewDelegate)
  eval_r   public onPreventCornerOverlapChanged(android.support.v7.widget.CardViewDelegate)
  i        public getMaxElevation(android.support.v7.widget.CardViewDelegate)
  i        public setRadius(android.support.v7.widget.CardViewDelegate,float)
  k        public getMinHeight(android.support.v7.widget.CardViewDelegate)
  l        public getRadius(android.support.v7.widget.CardViewDelegate)
  n        public setElevation(android.support.v7.widget.CardViewDelegate,float)
  p        public getMinWidth(android.support.v7.widget.CardViewDelegate)
  r        public onCompatPaddingChanged(android.support.v7.widget.CardViewDelegate)
  r        public setMaxElevation(android.support.v7.widget.CardViewDelegate,float)
  t        public setBackgroundColor(android.support.v7.widget.CardViewDelegate,int)
  y        public initStatic()

android.support.v7.widget.CardViewApi21$Exception        (be.brunoparmentier.apkshare.eval_aq)
===============================================================================
  No methods

android.support.v7.widget.CardViewDelegate       (be.brunoparmentier.apkshare.eval_uh)
===============================================================================
  n                public abstract getPreventCornerOverlap()
  t                public abstract getUseCompatPadding()
  u                public abstract setShadowPadding(int,int,int,int)
  z                public abstract getRadius()
  z                public abstract setBackgroundDrawable(android.graphics.drawable.Drawable)
  getBackground    public abstract getBackground()

android.support.v7.widget.CardViewDelegate$ParseException        (be.brunoparmentier.apkshare.eval_cv)
===============================================================================
  No methods

android.support.v7.widget.CardViewEclairMr1      (be.brunoparmentier.apkshare.eval_ek)
===============================================================================
  b        public getElevation(android.support.v7.widget.CardViewDelegate)
  d        public initialize(android.support.v7.widget.CardViewDelegate,android.content.Context,int,float,float,float)
  e        public updatePadding(android.support.v7.widget.CardViewDelegate)
  eval_r   public onPreventCornerOverlapChanged(android.support.v7.widget.CardViewDelegate)
  i        public getMaxElevation(android.support.v7.widget.CardViewDelegate)
  i        public setRadius(android.support.v7.widget.CardViewDelegate,float)
  k        public getMinHeight(android.support.v7.widget.CardViewDelegate)
  l        public getRadius(android.support.v7.widget.CardViewDelegate)
  n        createBackground(android.content.Context,int,float,float,float)
  n        public setElevation(android.support.v7.widget.CardViewDelegate,float)
  p        public getMinWidth(android.support.v7.widget.CardViewDelegate)
  r        public onCompatPaddingChanged(android.support.v7.widget.CardViewDelegate)
  r        public setMaxElevation(android.support.v7.widget.CardViewDelegate,float)
  t        public setBackgroundColor(android.support.v7.widget.CardViewDelegate,int)
  y        public initStatic()
  z        private getShadowBackground(android.support.v7.widget.CardViewDelegate)

android.support.v7.widget.CardViewEclairMr1$1    (be.brunoparmentier.apkshare.eval_ek$1)
===============================================================================
  f    public drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint)

android.support.v7.widget.CardViewEclairMr1$IOException  (be.brunoparmentier.apkshare.eval_g2)
===============================================================================
  No methods

android.support.v7.widget.CardViewImpl   (be.brunoparmentier.apkshare.eval_a0)
===============================================================================
  b        public abstract getElevation(android.support.v7.widget.CardViewDelegate)
  d        public abstract initialize(android.support.v7.widget.CardViewDelegate,android.content.Context,int,float,float,float)
  e        public abstract updatePadding(android.support.v7.widget.CardViewDelegate)
  eval_r   public abstract onPreventCornerOverlapChanged(android.support.v7.widget.CardViewDelegate)
  i        public abstract getMaxElevation(android.support.v7.widget.CardViewDelegate)
  i        public abstract setRadius(android.support.v7.widget.CardViewDelegate,float)
  k        public abstract getMinHeight(android.support.v7.widget.CardViewDelegate)
  l        public abstract getRadius(android.support.v7.widget.CardViewDelegate)
  n        public abstract setElevation(android.support.v7.widget.CardViewDelegate,float)
  p        public abstract getMinWidth(android.support.v7.widget.CardViewDelegate)
  r        public abstract onCompatPaddingChanged(android.support.v7.widget.CardViewDelegate)
  r        public abstract setMaxElevation(android.support.v7.widget.CardViewDelegate,float)
  t        public abstract setBackgroundColor(android.support.v7.widget.CardViewDelegate,int)
  y        public abstract initStatic()

android.support.v7.widget.CardViewImpl$IOException       (be.brunoparmentier.apkshare.eval_oz)
===============================================================================
  No methods

android.support.v7.widget.CardViewJellybeanMr1   (be.brunoparmentier.apkshare.eval_pi)
===============================================================================
  y    public initStatic()

android.support.v7.widget.CardViewJellybeanMr1$1 (be.brunoparmentier.apkshare.eval_pi$1)
===============================================================================
  f    public drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint)

android.support.v7.widget.CardViewJellybeanMr1$ArrayOutOfBoundsException (be.brunoparmentier.apkshare.eval_fn)
===============================================================================
  No methods

android.support.v7.widget.ChildHelper    (be.brunoparmentier.apkshare.eval_nj)
===============================================================================
  c        hide(android.view.View)
  c        getChildAt(int)
  d        getChildCount()
  d        removeViewAt(int)
  eval_y   attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)
  f        removeViewIfHidden(android.view.View)
  h        removeAllViewsUnfiltered()
  j        indexOfChild(android.view.View)
  j        addView(android.view.View,boolean)
  l        getUnfilteredChildCount()
  l        findHiddenNonRemovedView(int,int)
  m        addView(android.view.View,int,boolean)
  o        private getOffset(int)
  q        getUnfilteredChildAt(int)
  r        removeView(android.view.View)
  t        detachViewFromParent(int)
  v        isHidden(android.view.View)
  toString public toString()

android.support.v7.widget.ChildHelper$Bucket     (be.brunoparmentier.apkshare.eval_nj$e)
===============================================================================
  d        reset()
  eval_g   clear(int)
  h        set(int)
  k        insert(int,boolean)
  p        remove(int)
  q        get(int)
  s        private ensureNext()
  s        countOnesBefore(int)
  toString public toString()

android.support.v7.widget.ChildHelper$Callback   (be.brunoparmentier.apkshare.eval_nj$z)
===============================================================================
  a        public abstract attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams)
  eval_g   public abstract getChildViewHolder(android.view.View)
  eval_m   public abstract getChildAt(int)
  h        public abstract removeAllViews()
  i        public abstract detachViewFromParent(int)
  l        public abstract removeViewAt(int)
  m        public abstract getChildCount()
  m        public abstract indexOfChild(android.view.View)
  w        public abstract addView(android.view.View,int)

android.support.v7.widget.ChildHelper$ParseException     (be.brunoparmentier.apkshare.eval_fu)
===============================================================================
  No methods

android.support.v7.widget.DefaultItemAnimator    (be.brunoparmentier.apkshare.eval_fv)
===============================================================================
  a        public animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int)
  a        private animateMoveImpl(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int)
  b        public animateAdd(android.support.v7.widget.RecyclerView$ViewHolder)
  c        static access$900(android.support.v7.widget.DefaultItemAnimator)
  eval_s   static access$1300(android.support.v7.widget.DefaultItemAnimator)
  eval_t   private animateRemoveImpl(android.support.v7.widget.RecyclerView$ViewHolder)
  eval_v   static access$1100(android.support.v7.widget.DefaultItemAnimator)
  g        static access$400(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.RecyclerView$ViewHolder)
  i        static access$100(android.support.v7.widget.DefaultItemAnimator)
  j        private dispatchFinishedWhenDone()
  j        static access$000(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int)
  k        public endAnimations()
  k        static access$800(android.support.v7.widget.DefaultItemAnimator)
  k        private endChangeAnimationIfNecessary(android.support.v7.widget.DefaultItemAnimator$ChangeInfo)
  n        static access$200(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.DefaultItemAnimator$ChangeInfo)
  p        public runPendingAnimations()
  p        public animateRemove(android.support.v7.widget.RecyclerView$ViewHolder)
  s        public endAnimation(android.support.v7.widget.RecyclerView$ViewHolder)
  s        public animateMove(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int)
  t        private endChangeAnimationIfNecessary(android.support.v7.widget.DefaultItemAnimator$ChangeInfo,android.support.v7.widget.RecyclerView$ViewHolder)
  u        private animateAddImpl(android.support.v7.widget.RecyclerView$ViewHolder)
  u        cancelAll(java.util.List)
  v        private endChangeAnimation(java.util.List,android.support.v7.widget.RecyclerView$ViewHolder)
  w        public isRunning()
  w        static access$500(android.support.v7.widget.DefaultItemAnimator)
  w        private animateChangeImpl(android.support.v7.widget.DefaultItemAnimator$ChangeInfo)
  y        static access$700(android.support.v7.widget.DefaultItemAnimator)
  z        static access$300(android.support.v7.widget.DefaultItemAnimator)

android.support.v7.widget.DefaultItemAnimator$1  (be.brunoparmentier.apkshare.eval_fv$1)
===============================================================================
  run  public run()

android.support.v7.widget.DefaultItemAnimator$2  (be.brunoparmentier.apkshare.eval_fv$2)
===============================================================================
  run  public run()

android.support.v7.widget.DefaultItemAnimator$3  (be.brunoparmentier.apkshare.eval_fv$3)
===============================================================================
  run  public run()

android.support.v7.widget.DefaultItemAnimator$4  (be.brunoparmentier.apkshare.eval_fv$4)
===============================================================================
  b    public onAnimationEnd(android.view.View)
  s    public onAnimationStart(android.view.View)

android.support.v7.widget.DefaultItemAnimator$5  (be.brunoparmentier.apkshare.eval_fv$5)
===============================================================================
  b    public onAnimationEnd(android.view.View)
  s    public onAnimationStart(android.view.View)
  x    public onAnimationCancel(android.view.View)

android.support.v7.widget.DefaultItemAnimator$6  (be.brunoparmentier.apkshare.eval_fv$6)
===============================================================================
  b    public onAnimationEnd(android.view.View)
  s    public onAnimationStart(android.view.View)
  x    public onAnimationCancel(android.view.View)

android.support.v7.widget.DefaultItemAnimator$7  (be.brunoparmentier.apkshare.eval_fv$7)
===============================================================================
  b    public onAnimationEnd(android.view.View)
  s    public onAnimationStart(android.view.View)

android.support.v7.widget.DefaultItemAnimator$8  (be.brunoparmentier.apkshare.eval_fv$8)
===============================================================================
  b    public onAnimationEnd(android.view.View)
  s    public onAnimationStart(android.view.View)

android.support.v7.widget.DefaultItemAnimator$ChangeInfo (be.brunoparmentier.apkshare.eval_fv$n)
===============================================================================
  toString public toString()

android.support.v7.widget.DefaultItemAnimator$MoveInfo   (be.brunoparmentier.apkshare.eval_fv$g)
===============================================================================
  No methods

android.support.v7.widget.DefaultItemAnimator$NullPointerException       (be.brunoparmentier.apkshare.eval_y5)
===============================================================================
  No methods

android.support.v7.widget.DefaultItemAnimator$VpaListenerAdapter (be.brunoparmentier.apkshare.eval_fv$t)
===============================================================================
  b    public onAnimationEnd(android.view.View)
  s    public onAnimationStart(android.view.View)
  x    public onAnimationCancel(android.view.View)

android.support.v7.widget.GridLayoutManager      (be.brunoparmentier.apkshare.eval_b5)
===============================================================================
  a        public generateLayoutParams(android.content.Context,android.util.AttributeSet)
  a        private ensureAnchorIsInFirstSpan(android.support.v7.widget.LinearLayoutManager$AnchorInfo)
  a        public onItemsUpdated(android.support.v7.widget.RecyclerView,int,int)
  c        public generateDefaultLayoutParams()
  c        private getSpanSize(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int)
  d        public onItemsChanged(android.support.v7.widget.RecyclerView)
  e        public generateLayoutParams(android.view.ViewGroup$LayoutParams)
  eval_c   private cachePreLayoutSpanMapping()
  eval_y   private clearPreLayoutSpanMappingCache()
  f        private updateMeasurements()
  f        private getMainDirSpec(int)
  g        public getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  g        private getSpanGroupIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int)
  g        public setSpanCount(int)
  i        public getSpanSizeLookup()
  k        private getSpanIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int)
  m        public supportsPredictiveItemAnimations()
  o        public getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  o        public onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  q        public getSpanCount()
  q        public onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  q        layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)
  q        public setStackFromEnd(boolean)
  q        private updateSpecWithExtra(int,int,int)
  r        public onItemsAdded(android.support.v7.widget.RecyclerView,int,int)
  t        public onItemsMoved(android.support.v7.widget.RecyclerView,int,int,int)
  t        private measureChildWithDecorationsAndMargin(android.view.View,int,int)
  u        public checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams)
  u        private calculateItemBorders(int)
  y        public setSpanSizeLookup(android.support.v7.widget.GridLayoutManager$SpanSizeLookup)
  z        private assignSpans(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int,boolean)
  z        onAnchorReady(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo)
  z        public onItemsRemoved(android.support.v7.widget.RecyclerView,int,int)
  z        findReferenceChild(int,int,int)

android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup        (be.brunoparmentier.apkshare.eval_b5$a)
===============================================================================
  g    public getSpanSize(int)
  p    public getSpanIndex(int,int)

android.support.v7.widget.GridLayoutManager$IOException  (be.brunoparmentier.apkshare.eval_uk)
===============================================================================
  No methods

android.support.v7.widget.GridLayoutManager$LayoutParams (be.brunoparmentier.apkshare.eval_b5$w)
===============================================================================
  c    static access$000(android.support.v7.widget.GridLayoutManager$LayoutParams)
  e    static access$100(android.support.v7.widget.GridLayoutManager$LayoutParams)
  k    public getSpanSize()
  o    public getSpanIndex()
  w    static access$002(android.support.v7.widget.GridLayoutManager$LayoutParams,int)
  y    static access$102(android.support.v7.widget.GridLayoutManager$LayoutParams,int)

android.support.v7.widget.GridLayoutManager$SpanSizeLookup       (be.brunoparmentier.apkshare.eval_b5$eval__)
===============================================================================
  eval_k   findReferenceIndexFromCache(int)
  g        public abstract getSpanSize(int)
  h        public isSpanIndexCacheEnabled()
  h        getCachedSpanIndex(int,int)
  p        public getSpanIndex(int,int)
  s        public getSpanGroupIndex(int,int)
  u        public invalidateSpanIndexCache()
  v        public setSpanIndexCacheEnabled(boolean)

android.support.v7.widget.LayoutState    (be.brunoparmentier.apkshare.eval_y9)
===============================================================================
  eval_u   next(android.support.v7.widget.RecyclerView$Recycler)
  i        hasMore(android.support.v7.widget.RecyclerView$State)
  toString public toString()

android.support.v7.widget.LayoutState$ParseException     (be.brunoparmentier.apkshare.eval_xt)
===============================================================================
  No methods

android.support.v7.widget.LinearLayoutCompat     (be.brunoparmentier.apkshare.eval_ct)
===============================================================================
  b                                public isMeasureWithLargestChildEnabled()
  b                                getVirtualChildAt(int)
  b                                layoutHorizontal(int,int,int,int)
  c                                measureHorizontal(int,int)
  d                                public setMeasureWithLargestChildEnabled(boolean)
  d                                public setVerticalGravity(int)
  e                                getLocationOffset(android.view.View)
  e                                public setHorizontalGravity(int)
  eval__                           public getShowDividers()
  eval_k                           public getOrientation()
  eval_q                           measureNullChild(int)
  eval_r                           public getBaselineAlignedChildIndex()
  eval_w                           public getDividerWidth()
  eval_y                           public getWeightSum()
  f                                drawHorizontalDivider(android.graphics.Canvas,int)
  f                                private forceUniformWidth(int,int)
  g                                public isBaselineAligned()
  g                                private forceUniformHeight(int,int)
  generateDefaultLayoutParams      protected generateDefaultLayoutParams()
  generateLayoutParams             public generateLayoutParams(android.util.AttributeSet)
  generateLayoutParams             protected generateLayoutParams(android.view.ViewGroup$LayoutParams)
  h                                public setBaselineAligned(boolean)
  i                                public setBaselineAlignedChildIndex(int)
  j                                getChildrenSkipCount(android.view.View,int)
  j                                measureVertical(int,int)
  k                                public getDividerDrawable()
  k                                private setChildFrame(android.view.View,int,int,int,int)
  m                                public setDividerPadding(int)
  n                                measureChildBeforeLayout(android.view.View,int,int,int,int,int)
  n                                public setOrientation(int)
  o                                getVirtualChildCount()
  q                                drawDividersVertical(android.graphics.Canvas)
  q                                public setWeightSum(float)
  r                                public getDividerPadding()
  r                                getNextLocationOffset(android.view.View)
  r                                protected hasDividerBeforeChildAt(int)
  u                                drawDividersHorizontal(android.graphics.Canvas)
  u                                drawVerticalDivider(android.graphics.Canvas,int)
  u                                public setShowDividers(int)
  u                                layoutVertical(int,int,int,int)
  w                                public setDividerDrawable(android.graphics.drawable.Drawable)
  w                                public setGravity(int)
  checkLayoutParams                protected checkLayoutParams(android.view.ViewGroup$LayoutParams)
  generateDefaultLayoutParams      protected volatile generateDefaultLayoutParams()
  generateLayoutParams             public volatile generateLayoutParams(android.util.AttributeSet)
  generateLayoutParams             protected volatile generateLayoutParams(android.view.ViewGroup$LayoutParams)
  getBaseline                      public getBaseline()
  onDraw                           protected onDraw(android.graphics.Canvas)
  onInitializeAccessibilityEvent   public onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
  onInitializeAccessibilityNodeInfo    public onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
  onLayout                         protected onLayout(boolean,int,int,int,int)
  onMeasure                        protected onMeasure(int,int)
  shouldDelayChildPressedState     public shouldDelayChildPressedState()

android.support.v7.widget.LinearLayoutCompat$DividerMode (be.brunoparmentier.apkshare.eval_ct$b)
===============================================================================
  No methods

android.support.v7.widget.LinearLayoutCompat$Exception   (be.brunoparmentier.apkshare.eval_e6)
===============================================================================
  No methods

android.support.v7.widget.LinearLayoutCompat$LayoutParams        (be.brunoparmentier.apkshare.eval_ct$m)
===============================================================================
  No methods

android.support.v7.widget.LinearLayoutCompat$OrientationMode     (be.brunoparmentier.apkshare.eval_ct$x)
===============================================================================
  No methods

android.support.v7.widget.LinearLayoutManager    (be.brunoparmentier.apkshare.eval_yf)
===============================================================================
  a        private recycleViewsFromStart(android.support.v7.widget.RecyclerView$Recycler,int)
  a        public computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State)
  b        public findLastCompletelyVisibleItemPosition()
  b        private findFirstVisibleChildClosestToEnd(boolean,boolean)
  c        public generateDefaultLayoutParams()
  c        public onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
  c        public findViewByPosition(int)
  d        public canScrollVertically()
  d        private updateLayoutStateToFillStart(android.support.v7.widget.LinearLayoutManager$AnchorInfo)
  d        public computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State)
  d        scrollBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  e        private updateLayoutStateToFillEnd(android.support.v7.widget.LinearLayoutManager$AnchorInfo)
  eval_c   private resolveShouldLayoutReverse()
  eval_d   private computeScrollRange(android.support.v7.widget.RecyclerView$State)
  eval_g   public findFirstVisibleItemPosition()
  eval_j   public computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State)
  eval_l   ensureLayoutState()
  eval_m   public findFirstCompletelyVisibleItemPosition()
  eval_n   public isSmoothScrollbarEnabled()
  eval_o   createLayoutState()
  eval_o   private findLastReferenceChild(int)
  eval_p   private findReferenceChildClosestToStart(android.support.v7.widget.RecyclerView$State)
  eval_q   protected isLayoutRTL()
  eval_t   public getReverseLayout()
  eval_t   private recycleChildren(android.support.v7.widget.RecyclerView$Recycler,int,int)
  eval_v   public getStackFromEnd()
  eval_w   public onSaveInstanceState()
  eval_y   private getChildClosestToEnd()
  f        private findReferenceChildClosestToEnd(android.support.v7.widget.RecyclerView$State)
  g        private computeScrollExtent(android.support.v7.widget.RecyclerView$State)
  g        public scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  h        public setRecycleChildrenOnDetach(boolean)
  h        private findFirstReferenceChild(int)
  j        validateChildOrder()
  j        public computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State)
  j        public setOrientation(int)
  k        private recycleByLayoutState(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState)
  k        private recycleViewsFromEnd(android.support.v7.widget.RecyclerView$Recycler,int)
  l        protected getExtraLayoutSpace(android.support.v7.widget.RecyclerView$State)
  m        public supportsPredictiveItemAnimations()
  m        private layoutForPredictiveAnimations(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int)
  n        private getChildClosestToStart()
  n        public setReverseLayout(boolean)
  o        private findFirstVisibleChildClosestToStart(boolean,boolean)
  o        findOneVisibleChild(int,int,boolean,boolean)
  p        public smoothScrollToPosition(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State,int)
  p        public prepareForDrop(android.view.View,android.view.View,int,int)
  p        public scrollToPosition(int)
  q        private logChildren()
  q        public onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  q        layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)
  q        public setStackFromEnd(boolean)
  q        public computeScrollVectorForPosition(int)
  r        fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.RecyclerView$State,boolean)
  r        public computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State)
  r        private updateAnchorFromChildren(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo)
  s        public findLastVisibleItemPosition()
  s        private computeScrollOffset(android.support.v7.widget.RecyclerView$State)
  s        public onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  s        private convertFocusDirectionToLayoutDirection(int)
  t        public getRecycleChildrenOnDetach()
  t        public onRestoreInstanceState(android.os.Parcelable)
  t        private updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo)
  u        private updateAnchorFromPendingData(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo)
  u        public assertNotInLayoutOrScroll(java.lang.String)
  v        public computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State)
  v        public setSmoothScrollbarEnabled(boolean)
  w        public canScrollHorizontally()
  w        private updateLayoutStateToFillEnd(int,int)
  w        private updateLayoutState(int,int,boolean,android.support.v7.widget.RecyclerView$State)
  x        public scrollToPositionWithOffset(int,int)
  y        private fixLayoutStartGap(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean)
  z        public getOrientation()
  z        onAnchorReady(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo)
  z        public onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler)
  z        public scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  z        private fixLayoutEndGap(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean)
  z        private updateLayoutStateToFillStart(int,int)
  z        findReferenceChild(int,int,int)

android.support.v7.widget.LinearLayoutManager$1  (be.brunoparmentier.apkshare.eval_yf$1)
===============================================================================
  j    public computeScrollVectorForPosition(int)

android.support.v7.widget.LinearLayoutManager$AnchorInfo (be.brunoparmentier.apkshare.eval_yf$p)
===============================================================================
  e        assignCoordinateFromPadding()
  i        public assignFromView(android.view.View)
  o        static access$000(android.support.v7.widget.LinearLayoutManager$AnchorInfo,android.view.View,android.support.v7.widget.RecyclerView$State)
  p        reset()
  r        public assignFromViewAndKeepVisibleRect(android.view.View)
  z        private isViewValidAsAnchor(android.view.View,android.support.v7.widget.RecyclerView$State)
  toString public toString()

android.support.v7.widget.LinearLayoutManager$LayoutChunkResult  (be.brunoparmentier.apkshare.eval_yf$k)
===============================================================================
  i    resetInternal()

android.support.v7.widget.LinearLayoutManager$LayoutState        (be.brunoparmentier.apkshare.eval_yf$h)
===============================================================================
  e        public nextViewHolderInLimitedList(android.support.v7.widget.RecyclerView$ViewHolder)
  eval_x   log()
  j        hasMore(android.support.v7.widget.RecyclerView$State)
  n        next(android.support.v7.widget.RecyclerView$Recycler)
  o        public assignPositionFromScrapList(android.support.v7.widget.RecyclerView$ViewHolder)
  s        public assignPositionFromScrapList()
  t        private nextViewFromScrapList()

android.support.v7.widget.LinearLayoutManager$NullPointerException       (be.brunoparmentier.apkshare.eval_ji)
===============================================================================
  No methods

android.support.v7.widget.LinearLayoutManager$SavedState (be.brunoparmentier.apkshare.eval_yf$e)
===============================================================================
  h                invalidateAnchor()
  i                hasValidAnchor()
  describeContents public describeContents()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v7.widget.LinearLayoutManager$SavedState$1       (be.brunoparmentier.apkshare.eval_yf$e$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v7.widget.LinearLayoutManager$SavedState$ArrayOutOfBoundsException       (be.brunoparmentier.apkshare.eval_yq)
===============================================================================
  No methods

android.support.v7.widget.LinearSmoothScroller   (be.brunoparmentier.apkshare.eval_q3)
===============================================================================
  a        protected onStart()
  eval_e   protected onStop()
  eval_n   protected updateActionForInterimTarget(android.support.v7.widget.RecyclerView$SmoothScroller$Action)
  f        protected calculateTimeForDeceleration(int)
  j        public calculateDxToMakeVisible(android.view.View,int)
  j        public abstract computeScrollVectorForPosition(int)
  k        protected calculateTimeForScrolling(int)
  k        private clampApplyScroll(int,int)
  k        protected onSeekTargetStep(int,int,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$SmoothScroller$Action)
  l        protected calculateSpeedPerPixel(android.util.DisplayMetrics)
  p        public calculateDtToFit(int,int,int,int,int)
  r        protected getVerticalSnapPreference()
  t        protected onTargetFound(android.view.View,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$SmoothScroller$Action)
  w        protected getHorizontalSnapPreference()
  y        public calculateDyToMakeVisible(android.view.View,int)

android.support.v7.widget.LinearSmoothScroller$ArrayOutOfBoundsException (be.brunoparmentier.apkshare.eval_xc)
===============================================================================
  No methods

android.support.v7.widget.ListPopupWindow        (be.brunoparmentier.apkshare.eval_xl)
===============================================================================
  a        public getInputMethodMode()
  a        public setDropDownAlwaysVisible(boolean)
  b        public getSelectedItemPosition()
  b        static access$600(android.support.v7.widget.ListPopupWindow)
  c        public createDragToOpenListener(android.view.View)
  c        public setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)
  c        private static isConfirmKey(int)
  c        public onKeyPreIme(int,android.view.KeyEvent)
  d        static access$1200(android.support.v7.widget.ListPopupWindow)
  d        public setWidth(int)
  e        public getSoftInputMode()
  e        public setAnchorView(android.view.View)
  e        public onKeyDown(int,android.view.KeyEvent)
  eval__   public isDropDownAlwaysVisible()
  eval_a   public getWidth()
  eval_c   public postShow()
  eval_d   private buildDropDown()
  eval_g   public getSelectedItemId()
  eval_h   public getHeight()
  eval_i   public performItemClick(int)
  eval_m   public getListView()
  eval_p   public clearListSelection()
  eval_p   public setHeight(int)
  eval_z   public isInputMethodNotNeeded()
  f        public getSelectedItem()
  f        static access$1100(android.support.v7.widget.ListPopupWindow)
  f        public setHorizontalOffset(int)
  g        private removePromptView()
  g        public setSoftInputMode(int)
  h        public setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
  h        public setPromptPosition(int)
  j        public dismiss()
  k        public setContentWidth(int)
  l        public setAdapter(android.widget.ListAdapter)
  m        public isModal()
  m        public setModal(boolean)
  n        public getAnimationStyle()
  n        public setInputMethodMode(int)
  n        public onKeyUp(int,android.view.KeyEvent)
  o        public show()
  o        public setForceIgnoreOutsideTouch(boolean)
  p        public getSelectedView()
  p        public setAnimationStyle(int)
  q        public getVerticalOffset()
  r        public setVerticalOffset(int)
  s        public getAnchorView()
  t        public setDropDownGravity(int)
  u        public isShowing()
  u        public setBackgroundDrawable(android.graphics.drawable.Drawable)
  u        static access$1300(android.support.v7.widget.ListPopupWindow)
  u        public setPromptView(android.view.View)
  v        public getBackground()
  v        public setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
  w        public getPromptPosition()
  w        private setPopupClipToScreenEnabled(boolean)
  x        setListItemExpandMax(int)
  y        public getHorizontalOffset()
  y        public setListSelector(android.graphics.drawable.Drawable)
  z        public setSelection(int)

android.support.v7.widget.ListPopupWindow$1      (be.brunoparmentier.apkshare.eval_xl$1)
===============================================================================
  n    public getPopup()

android.support.v7.widget.ListPopupWindow$2      (be.brunoparmentier.apkshare.eval_xl$2)
===============================================================================
  run  public run()

android.support.v7.widget.ListPopupWindow$3      (be.brunoparmentier.apkshare.eval_xl$3)
===============================================================================
  onItemSelected       public onItemSelected(android.widget.AdapterView,android.view.View,int,long)
  onNothingSelected    public onNothingSelected(android.widget.AdapterView)

android.support.v7.widget.ListPopupWindow$ArrayOutOfBoundsException      (be.brunoparmentier.apkshare.eval__p)
===============================================================================
  No methods

android.support.v7.widget.ListPopupWindow$DropDownListView       (be.brunoparmentier.apkshare.eval_xl$a)
===============================================================================
  a                private setPressedItem(android.view.View,int,float,float)
  b                private clickPressedItem(android.view.View,int)
  c                private clearPressedItem()
  eval_h           protected touchModeDrawsInPressedStateCompat()
  y                static access$502(android.support.v7.widget.ListPopupWindow$DropDownListView,boolean)
  z                public onForwardedEvent(android.view.MotionEvent,int)
  hasFocus         public hasFocus()
  hasWindowFocus   public hasWindowFocus()
  isFocused        public isFocused()
  isInTouchMode    public isInTouchMode()

android.support.v7.widget.ListPopupWindow$ForwardingListener     (be.brunoparmentier.apkshare.eval_xl$_)
===============================================================================
  a        protected onForwardingStopped()
  eval_m   private clearCallbacks()
  eval_o   private onLongPress()
  i        protected onForwardingStarted()
  j        private toGlobalMotionEvent(android.view.View,android.view.MotionEvent)
  m        static access$900(android.support.v7.widget.ListPopupWindow$ForwardingListener)
  n        public abstract getPopup()
  n        private onTouchObserved(android.view.MotionEvent)
  p        private onTouchForwarded(android.view.MotionEvent)
  r        private static pointInView(android.view.View,float,float,float)
  t        static access$1000(android.support.v7.widget.ListPopupWindow$ForwardingListener)
  x        private toLocalMotionEvent(android.view.View,android.view.MotionEvent)
  onTouch  public onTouch(android.view.View,android.view.MotionEvent)

android.support.v7.widget.ListPopupWindow$ForwardingListener$DisallowIntercept   (be.brunoparmentier.apkshare.eval_xl$_$o)
===============================================================================
  run  public run()

android.support.v7.widget.ListPopupWindow$ForwardingListener$NullPointerException        (be.brunoparmentier.apkshare.eval_ys)
===============================================================================
  No methods

android.support.v7.widget.ListPopupWindow$ForwardingListener$TriggerLongPress    (be.brunoparmentier.apkshare.eval_xl$_$b)
===============================================================================
  run  public run()

android.support.v7.widget.ListPopupWindow$ListSelectorHider      (be.brunoparmentier.apkshare.eval_xl$l)
===============================================================================
  run  public run()

android.support.v7.widget.ListPopupWindow$PopupDataSetObserver   (be.brunoparmentier.apkshare.eval_xl$b)
===============================================================================
  onChanged        public onChanged()
  onInvalidated    public onInvalidated()

android.support.v7.widget.ListPopupWindow$PopupScrollListener    (be.brunoparmentier.apkshare.eval_xl$n)
===============================================================================
  onScroll             public onScroll(android.widget.AbsListView,int,int,int)
  onScrollStateChanged public onScrollStateChanged(android.widget.AbsListView,int)

android.support.v7.widget.ListPopupWindow$PopupTouchInterceptor  (be.brunoparmentier.apkshare.eval_xl$q)
===============================================================================
  onTouch  public onTouch(android.view.View,android.view.MotionEvent)

android.support.v7.widget.ListPopupWindow$ResizePopupRunnable    (be.brunoparmentier.apkshare.eval_xl$eval_j)
===============================================================================
  run  public run()

android.support.v7.widget.OpReorderer    (be.brunoparmentier.apkshare.eval_em)
===============================================================================
  c        reorderOps(java.util.List)
  eval_g   private swapMoveAdd(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp)
  i        swapMoveUpdate(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp)
  n        private swapMoveOp(java.util.List,int,int)
  q        swapMoveRemove(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp)
  u        private getLastMoveOutOfOrder(java.util.List)

android.support.v7.widget.OpReorderer$Callback   (be.brunoparmentier.apkshare.eval_em$v)
===============================================================================
  m    public abstract obtainUpdateOp(int,int,int)
  x    public abstract recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp)

android.support.v7.widget.OpReorderer$ParseException     (be.brunoparmentier.apkshare.eval_gf)
===============================================================================
  No methods

android.support.v7.widget.OrientationHelper      (be.brunoparmentier.apkshare.eval_fg)
===============================================================================
  a    public abstract getDecoratedStart(android.view.View)
  b    public abstract getEndPadding()
  e    public abstract getEnd()
  e    public abstract offsetChildren(int)
  h    public onLayoutComplete()
  j    public static createVerticalHelper(android.support.v7.widget.RecyclerView$LayoutManager)
  k    public abstract getDecoratedMeasurementInOther(android.view.View)
  l    public abstract getTotalSpace()
  l    public static createOrientationHelper(android.support.v7.widget.RecyclerView$LayoutManager,int)
  m    public static createHorizontalHelper(android.support.v7.widget.RecyclerView$LayoutManager)
  q    public abstract offsetChild(android.view.View,int)
  t    public abstract getDecoratedMeasurement(android.view.View)
  u    public getTotalSpaceChange()
  w    public abstract getStartAfterPadding()
  z    public abstract getEndAfterPadding()
  z    public abstract getDecoratedEnd(android.view.View)

android.support.v7.widget.OrientationHelper$1    (be.brunoparmentier.apkshare.eval_fg$1)
===============================================================================
  a    public getDecoratedStart(android.view.View)
  b    public getEndPadding()
  e    public getEnd()
  e    public offsetChildren(int)
  k    public getDecoratedMeasurementInOther(android.view.View)
  l    public getTotalSpace()
  q    public offsetChild(android.view.View,int)
  t    public getDecoratedMeasurement(android.view.View)
  w    public getStartAfterPadding()
  z    public getEndAfterPadding()
  z    public getDecoratedEnd(android.view.View)

android.support.v7.widget.OrientationHelper$2    (be.brunoparmentier.apkshare.eval_fg$2)
===============================================================================
  a    public getDecoratedStart(android.view.View)
  b    public getEndPadding()
  e    public getEnd()
  e    public offsetChildren(int)
  k    public getDecoratedMeasurementInOther(android.view.View)
  l    public getTotalSpace()
  q    public offsetChild(android.view.View,int)
  t    public getDecoratedMeasurement(android.view.View)
  w    public getStartAfterPadding()
  z    public getEndAfterPadding()
  z    public getDecoratedEnd(android.view.View)

android.support.v7.widget.OrientationHelper$IOException  (be.brunoparmentier.apkshare.eval_w1)
===============================================================================
  No methods

android.support.v7.widget.PopupMenu      (be.brunoparmentier.apkshare.eval__0)
===============================================================================
  a        public getMenu()
  a        public onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder)
  eval_c   public show()
  f        public onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)
  g        public onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem)
  h        public onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder)
  h        public onCloseSubMenu(android.support.v7.internal.view.menu.SubMenuBuilder)
  h        static access$000(android.support.v7.widget.PopupMenu)
  k        public inflate(int)
  p        public getDragToOpenListener()
  q        public setOnMenuItemClickListener(android.support.v7.widget.PopupMenu$OnMenuItemClickListener)
  t        public dismiss()
  w        public setOnDismissListener(android.support.v7.widget.PopupMenu$OnDismissListener)
  x        public getMenuInflater()

android.support.v7.widget.PopupMenu$1    (be.brunoparmentier.apkshare.eval__0$1)
===============================================================================
  a    protected onForwardingStopped()
  i    protected onForwardingStarted()
  n    public getPopup()

android.support.v7.widget.PopupMenu$NullPointerException (be.brunoparmentier.apkshare.eval_rs)
===============================================================================
  No methods

android.support.v7.widget.PopupMenu$OnDismissListener    (be.brunoparmentier.apkshare.eval__0$j)
===============================================================================
  c    public abstract onDismiss(android.support.v7.widget.PopupMenu)

android.support.v7.widget.PopupMenu$OnMenuItemClickListener      (be.brunoparmentier.apkshare.eval__0$n)
===============================================================================
  v    public abstract onMenuItemClick(android.view.MenuItem)

android.support.v7.widget.PositionMap    (be.brunoparmentier.apkshare.eval_g_)
===============================================================================
  b        static idealBooleanArraySize(int)
  c        static idealLongArraySize(int)
  clone    public clone()
  d        public remove(int)
  e        public removeAt(int)
  e        public setValueAt(int,java.lang.Object)
  e        public indexOfValue(java.lang.Object)
  eval_d   static idealIntArraySize(int)
  eval_w   static idealCharArraySize(int)
  f        public clear()
  i        public delete(int)
  l        static idealByteArraySize(int)
  l        public append(int,java.lang.Object)
  m        public get(int)
  m        public insertKeyRange(int,int)
  p        public size()
  p        static idealObjectArraySize(int)
  q        public removeKeyRange(java.util.ArrayList,int,int)
  s        public put(int,java.lang.Object)
  t        public indexOfKey(int)
  v        private gc()
  w        static idealFloatArraySize(int)
  w        public get(int,java.lang.Object)
  x        static idealShortArraySize(int)
  y        public valueAt(int)
  y        public removeAtRange(int,int)
  z        public keyAt(int)
  clone    public volatile clone()
  toString public toString()

android.support.v7.widget.PositionMap$ContainerHelpers   (be.brunoparmentier.apkshare.eval_g_$m)
===============================================================================
  w    static binarySearch(int[],int,int)

android.support.v7.widget.PositionMap$ParseException     (be.brunoparmentier.apkshare.eval_va)
===============================================================================
  No methods

android.support.v7.widget.RecyclerView   (be.brunoparmentier.apkshare.eval_bj)
===============================================================================
  a                                eatRequestLayout()
  a                                static access$1100(android.support.v7.widget.RecyclerView)
  a                                public setAccessibilityDelegateCompat(android.support.v7.widget.RecyclerViewAccessibilityDelegate)
  b                                ensureRightGlow()
  b                                public setLayoutManager(android.support.v7.widget.RecyclerView$LayoutManager)
  b                                public addOnChildAttachStateChangeListener(android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener)
  b                                static access$2800(android.support.v7.widget.RecyclerView,int,int)
  b                                public findViewHolderForAdapterPosition(int)
  c                                static access$3300(android.support.v7.widget.RecyclerView)
  c                                private removeAnimatingView(android.view.View)
  c                                dispatchOnScrollStateChanged(int)
  c                                public fling(int,int)
  c                                assertInLayoutOrScroll(java.lang.String)
  d                                ensureBottomGlow()
  d                                static access$3500(android.support.v7.widget.RecyclerView)
  d                                public removeOnItemTouchListener(android.support.v7.widget.RecyclerView$OnItemTouchListener)
  e                                public getLayoutManager()
  e                                static access$100(android.support.v7.widget.RecyclerView)
  e                                public setRecycledViewPool(android.support.v7.widget.RecyclerView$RecycledViewPool)
  e                                public setItemViewCacheSize(int)
  eval__                           private supportsChangeAnimations()
  eval_a                           public stopScroll()
  eval_a                           static access$3100(android.support.v7.widget.RecyclerView)
  eval_b                           static access$4800(android.support.v7.widget.RecyclerView)
  eval_c                           private consumePendingUpdateOperations()
  eval_c                           public onChildDetachedFromWindow(android.view.View)
  eval_d                           invalidateGlows()
  eval_e                           public clearOnScrollListeners()
  eval_e                           private animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder)
  eval_f                           private setDataSetChangedAfterLayout()
  eval_g                           rebindUpdatedViewHolders()
  eval_h                           private releaseGlows()
  eval_i                           static access$4300(android.support.v7.widget.RecyclerView)
  eval_j                           markKnownViewsInvalid()
  eval_j                           public addItemDecoration(android.support.v7.widget.RecyclerView$ItemDecoration)
  eval_k                           private postAnimationRunner()
  eval_k                           public findViewHolderForItemId(long)
  eval_l                           static access$2000()
  eval_l                           getItemDecorInsetsForChild(android.view.View)
  eval_m                           saveOldPositions()
  eval_m                           public onChildAttachedToWindow(android.view.View)
  eval_n                           private didChildRangeChange(int,int)
  eval_o                           isRunningLayoutOrScroll()
  eval_p                           private processAdapterUpdatesAndSetAnimationFlags()
  eval_q                           private dispatchContentChangedIfNecessary()
  eval_r                           public clearOnChildAttachStateChangeListeners()
  eval_r                           public offsetChildrenVertical(int)
  eval_t                           public getMaxFlingVelocity()
  eval_t                           private setScrollState(int)
  eval_u                           markItemDecorInsetsDirty()
  eval_u                           public findViewHolderForLayoutPosition(int)
  eval_w                           public hasPendingAdapterUpdates()
  eval_x                           private cancelTouch()
  eval_x                           static access$2400(android.support.v7.widget.RecyclerView)
  eval_y                           public invalidateItemDecorations()
  eval_y                           public offsetChildrenHorizontal(int)
  eval_z                           public getItemAnimator()
  f                                public getCompatAccessibilityDelegate()
  f                                private createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)
  f                                static access$3200(android.support.v7.widget.RecyclerView)
  f                                public setChildDrawingOrderCallback(android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback)
  f                                public removeItemDecoration(android.support.v7.widget.RecyclerView$ItemDecoration)
  f                                private findMinMaxChildLayoutPositions(int[])
  g                                private predictiveItemAnimationsEnabled()
  g                                public setOnScrollListener(android.support.v7.widget.RecyclerView$OnScrollListener)
  g                                dispatchOnScrolled(int,int)
  h                                public hasFixedSize()
  h                                static access$4600(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder)
  h                                static access$3602(android.support.v7.widget.RecyclerView,boolean)
  h                                public getChildPosition(android.view.View)
  h                                private pullGlows(float,float,float,float)
  h                                private defaultOnMeasure(int,int)
  i                                dispatchLayout()
  i                                static access$3900(android.support.v7.widget.RecyclerView)
  i                                public getChildLayoutPosition(android.view.View)
  j                                private getFullClassName(android.content.Context,java.lang.String)
  j                                static access$2700(android.support.v7.widget.RecyclerView)
  j                                public swapAdapter(android.support.v7.widget.RecyclerView$Adapter,boolean)
  j                                public removeOnChildAttachStateChangeListener(android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener)
  j                                static access$4400(android.support.v7.widget.RecyclerView,int,int)
  j                                private dispatchChildAttached(android.view.View)
  j                                resumeRequestLayout(boolean)
  j                                offsetPositionRecordsForInsert(int,int)
  k                                public getRecycledViewPool()
  k                                static access$2900(android.support.v7.widget.RecyclerView)
  k                                public setAdapter(android.support.v7.widget.RecyclerView$Adapter)
  k                                private getAdapterPositionFor(android.support.v7.widget.RecyclerView$ViewHolder)
  k                                static access$5100(android.support.v7.widget.RecyclerView,android.view.View)
  k                                public findViewHolderForPosition(int)
  l                                private onEnterLayoutOrScroll()
  l                                static access$3400(android.support.v7.widget.RecyclerView)
  l                                public getChildAdapterPosition(android.view.View)
  l                                public findChildViewUnder(float,float)
  l                                public smoothScrollBy(int,int)
  m                                public scrollToPosition(int)
  n                                clearOldPositions()
  n                                static access$200(android.support.v7.widget.RecyclerView)
  n                                private dispatchOnItemTouch(android.view.MotionEvent)
  o                                public getScrollState()
  o                                public setItemAnimator(android.support.v7.widget.RecyclerView$ItemAnimator)
  o                                private animateDisappearance(android.support.v7.widget.RecyclerView$ItemHolderInfo)
  o                                public setRecyclerListener(android.support.v7.widget.RecyclerView$RecyclerListener)
  o                                private dispatchChildDetached(android.view.View)
  o                                public smoothScrollToPosition(int)
  p                                public getMinFlingVelocity()
  p                                private processDisappearingList(android.support.v4.util.ArrayMap)
  p                                static access$3800(android.support.v7.widget.RecyclerView)
  p                                private animateAppearance(android.support.v7.widget.RecyclerView$ViewHolder,android.graphics.Rect,int,int)
  p                                static access$3000(android.support.v7.widget.RecyclerView,int)
  p                                public setScrollingTouchSlop(int)
  p                                viewRangeUpdate(int,int)
  p                                scrollByInternal(int,int,android.view.MotionEvent)
  p                                offsetPositionRecordsForRemove(int,int,boolean)
  p                                assertNotInLayoutOrScroll(java.lang.String)
  q                                static access$3700()
  q                                public addOnScrollListener(android.support.v7.widget.RecyclerView$OnScrollListener)
  q                                static access$800(android.support.v7.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams)
  q                                private dispatchOnItemTouchIntercept(android.view.MotionEvent)
  q                                shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
  q                                public onScrollStateChanged(int)
  r                                public getAdapter()
  r                                static access$2600(android.support.v7.widget.RecyclerView)
  r                                public removeOnScrollListener(android.support.v7.widget.RecyclerView$OnScrollListener)
  r                                private onPointerUp(android.view.MotionEvent)
  r                                private considerReleasingGlowsOnScroll(int,int)
  s                                private getScrollFactor()
  s                                static access$2200(android.support.v7.widget.RecyclerView)
  s                                static access$900(android.support.v7.widget.RecyclerView,int)
  s                                public setHasFixedSize(boolean)
  s                                offsetPositionRecordsForMove(int,int)
  t                                public isAnimating()
  t                                static access$2300(android.support.v7.widget.RecyclerView)
  t                                public addItemDecoration(android.support.v7.widget.RecyclerView$ItemDecoration,int)
  t                                public setViewCacheExtension(android.support.v7.widget.RecyclerView$ViewCacheExtension)
  t                                static access$600(android.support.v7.widget.RecyclerView,android.view.View)
  u                                private stopScrollersInternal()
  u                                private setAdapterInternal(android.support.v7.widget.RecyclerView$Adapter,boolean,boolean)
  u                                static access$502(android.support.v7.widget.RecyclerView,boolean)
  u                                static access$4500(android.support.v7.widget.RecyclerView,int,int)
  u                                public getChildViewHolder(android.view.View)
  u                                findViewHolderForPosition(int,boolean)
  u                                absorbGlows(int,int)
  v                                private initChildrenHelper()
  v                                static access$4200(android.support.v7.widget.RecyclerView)
  v                                public addOnItemTouchListener(android.support.v7.widget.RecyclerView$OnItemTouchListener)
  v                                getChangedHolderKey(android.support.v7.widget.RecyclerView$ViewHolder)
  v                                static access$700(android.support.v7.widget.RecyclerView,android.view.View)
  v                                public getChildItemId(android.view.View)
  w                                ensureTopGlow()
  x                                ensureLeftGlow()
  x                                static access$2100(android.support.v7.widget.RecyclerView)
  x                                static getChildViewHolderInt(android.view.View)
  x                                public onScrolled(int,int)
  y                                private onExitLayoutOrScroll()
  y                                private addAnimatingView(android.support.v7.widget.RecyclerView$ViewHolder)
  z                                initAdapterManager()
  z                                static access$300(android.support.v7.widget.RecyclerView)
  addFocusables                    public addFocusables(java.util.ArrayList,int,int)
  checkLayoutParams                protected checkLayoutParams(android.view.ViewGroup$LayoutParams)
  computeHorizontalScrollExtent    public computeHorizontalScrollExtent()
  computeHorizontalScrollOffset    public computeHorizontalScrollOffset()
  computeHorizontalScrollRange     public computeHorizontalScrollRange()
  computeVerticalScrollExtent      public computeVerticalScrollExtent()
  computeVerticalScrollOffset      public computeVerticalScrollOffset()
  computeVerticalScrollRange       public computeVerticalScrollRange()
  dispatchNestedFling              public dispatchNestedFling(float,float,boolean)
  dispatchNestedPreFling           public dispatchNestedPreFling(float,float)
  dispatchNestedPreScroll          public dispatchNestedPreScroll(int,int,int[],int[])
  dispatchNestedScroll             public dispatchNestedScroll(int,int,int,int,int[])
  dispatchRestoreInstanceState     protected dispatchRestoreInstanceState(android.util.SparseArray)
  dispatchSaveInstanceState        protected dispatchSaveInstanceState(android.util.SparseArray)
  draw                             public draw(android.graphics.Canvas)
  drawChild                        public drawChild(android.graphics.Canvas,android.view.View,long)
  focusSearch                      public focusSearch(android.view.View,int)
  generateDefaultLayoutParams      protected generateDefaultLayoutParams()
  generateLayoutParams             public generateLayoutParams(android.util.AttributeSet)
  generateLayoutParams             protected generateLayoutParams(android.view.ViewGroup$LayoutParams)
  getBaseline                      public getBaseline()
  getChildDrawingOrder             protected getChildDrawingOrder(int,int)
  hasNestedScrollingParent         public hasNestedScrollingParent()
  isAttachedToWindow               public isAttachedToWindow()
  isNestedScrollingEnabled         public isNestedScrollingEnabled()
  onAttachedToWindow               protected onAttachedToWindow()
  onDetachedFromWindow             protected onDetachedFromWindow()
  onDraw                           public onDraw(android.graphics.Canvas)
  onGenericMotionEvent             public onGenericMotionEvent(android.view.MotionEvent)
  onInterceptTouchEvent            public onInterceptTouchEvent(android.view.MotionEvent)
  onLayout                         protected onLayout(boolean,int,int,int,int)
  onMeasure                        protected onMeasure(int,int)
  onRestoreInstanceState           protected onRestoreInstanceState(android.os.Parcelable)
  onSaveInstanceState              protected onSaveInstanceState()
  onSizeChanged                    protected onSizeChanged(int,int,int,int)
  onTouchEvent                     public onTouchEvent(android.view.MotionEvent)
  removeDetachedView               protected removeDetachedView(android.view.View,boolean)
  requestChildFocus                public requestChildFocus(android.view.View,android.view.View)
  requestChildRectangleOnScreen    public requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)
  requestDisallowInterceptTouchEvent   public requestDisallowInterceptTouchEvent(boolean)
  requestLayout                    public requestLayout()
  scrollBy                         public scrollBy(int,int)
  scrollTo                         public scrollTo(int,int)
  sendAccessibilityEventUnchecked  public sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)
  setClipToPadding                 public setClipToPadding(boolean)
  setNestedScrollingEnabled        public setNestedScrollingEnabled(boolean)
  startNestedScroll                public startNestedScroll(int)
  stopNestedScroll                 public stopNestedScroll()

android.support.v7.widget.RecyclerView$1 (be.brunoparmentier.apkshare.eval_bj$1)
===============================================================================
  run  public run()

android.support.v7.widget.RecyclerView$2 (be.brunoparmentier.apkshare.eval_bj$2)
===============================================================================
  run  public run()

android.support.v7.widget.RecyclerView$3 (be.brunoparmentier.apkshare.eval_bj$3)
===============================================================================
  getInterpolation public getInterpolation(float)

android.support.v7.widget.RecyclerView$4 (be.brunoparmentier.apkshare.eval_bj$4)
===============================================================================
  a        public attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams)
  eval_g   public getChildViewHolder(android.view.View)
  eval_m   public getChildAt(int)
  h        public removeAllViews()
  i        public detachViewFromParent(int)
  l        public removeViewAt(int)
  m        public getChildCount()
  m        public indexOfChild(android.view.View)
  w        public addView(android.view.View,int)

android.support.v7.widget.RecyclerView$5 (be.brunoparmentier.apkshare.eval_bj$5)
===============================================================================
  b    public offsetPositionsForRemovingLaidOutOrNewView(int,int)
  c    public offsetPositionsForRemovingInvisible(int,int)
  i    dispatchUpdate(android.support.v7.widget.AdapterHelper$UpdateOp)
  j    public offsetPositionsForAdd(int,int)
  l    public onDispatchSecondPass(android.support.v7.widget.AdapterHelper$UpdateOp)
  n    public offsetPositionsForMove(int,int)
  w    public onDispatchFirstPass(android.support.v7.widget.AdapterHelper$UpdateOp)
  w    public findViewHolder(int)
  z    public markViewHoldersUpdated(int,int)

android.support.v7.widget.RecyclerView$Adapter   (be.brunoparmentier.apkshare.eval_bj$u)
===============================================================================
  a        public onAttachedToRecyclerView(android.support.v7.widget.RecyclerView)
  b        public final notifyItemMoved(int,int)
  c        public final notifyDataSetChanged()
  c        public final notifyItemChanged(int)
  d        public final notifyItemRangeInserted(int,int)
  eval_m   public final bindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)
  g        public final notifyItemRangeChanged(int,int)
  h        public unregisterAdapterDataObserver(android.support.v7.widget.RecyclerView$AdapterDataObserver)
  h        public onViewDetachedFromWindow(android.support.v7.widget.RecyclerView$ViewHolder)
  h        public abstract onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)
  i        public getItemId(int)
  k        public onViewAttachedToWindow(android.support.v7.widget.RecyclerView$ViewHolder)
  o        public abstract getItemCount()
  p        public final hasObservers()
  r        public onViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder)
  r        public final notifyItemInserted(int)
  s        public onFailedToRecycleView(android.support.v7.widget.RecyclerView$ViewHolder)
  s        public getItemViewType(int)
  u        public onDetachedFromRecyclerView(android.support.v7.widget.RecyclerView)
  u        public registerAdapterDataObserver(android.support.v7.widget.RecyclerView$AdapterDataObserver)
  u        public final createViewHolder(android.view.ViewGroup,int)
  u        public setHasStableIds(boolean)
  w        public abstract onCreateViewHolder(android.view.ViewGroup,int)
  y        public final notifyItemRangeRemoved(int,int)
  z        public final hasStableIds()
  z        public final notifyItemRemoved(int)

android.support.v7.widget.RecyclerView$AdapterDataObservable     (be.brunoparmentier.apkshare.eval_bj$a)
===============================================================================
  e        public hasObservers()
  eval_t   public notifyChanged()
  h        public notifyItemMoved(int,int)
  k        public notifyItemRangeChanged(int,int)
  m        public notifyItemRangeInserted(int,int)
  o        public notifyItemRangeRemoved(int,int)

android.support.v7.widget.RecyclerView$AdapterDataObserver       (be.brunoparmentier.apkshare.eval_bj$j)
===============================================================================
  f    public onItemRangeInserted(int,int)
  g    public onItemRangeRemoved(int,int)
  h    public onChanged()
  h    public onItemRangeMoved(int,int,int)
  i    public onItemRangeChanged(int,int)

android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback (be.brunoparmentier.apkshare.eval_bj$x)
===============================================================================
  z    public abstract onGetChildDrawingOrder(int,int)

android.support.v7.widget.RecyclerView$IOException       (be.brunoparmentier.apkshare.eval_fm)
===============================================================================
  No methods

android.support.v7.widget.RecyclerView$ItemAnimator      (be.brunoparmentier.apkshare.eval_bj$eval_p)
===============================================================================
  a        public final dispatchAnimationsFinished()
  a        public abstract animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int)
  a        public setRemoveDuration(long)
  b        public abstract animateAdd(android.support.v7.widget.RecyclerView$ViewHolder)
  c        public final dispatchAddFinished(android.support.v7.widget.RecyclerView$ViewHolder)
  d        public getMoveDuration()
  d        public final dispatchMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder)
  d        public final dispatchChangeStarting(android.support.v7.widget.RecyclerView$ViewHolder,boolean)
  e        public onAddStarting(android.support.v7.widget.RecyclerView$ViewHolder)
  e        public setSupportsChangeAnimations(boolean)
  eval_a   public onRemoveStarting(android.support.v7.widget.RecyclerView$ViewHolder)
  eval_c   public getRemoveDuration()
  eval_c   public onChangeStarting(android.support.v7.widget.RecyclerView$ViewHolder,boolean)
  eval_i   public final dispatchAddStarting(android.support.v7.widget.RecyclerView$ViewHolder)
  eval_o   setListener(android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener)
  eval_s   public onChangeFinished(android.support.v7.widget.RecyclerView$ViewHolder,boolean)
  eval_u   public final dispatchMoveStarting(android.support.v7.widget.RecyclerView$ViewHolder)
  h        public final isRunning(android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener)
  j        public final dispatchRemoveStarting(android.support.v7.widget.RecyclerView$ViewHolder)
  k        public abstract endAnimations()
  k        public setChangeDuration(long)
  l        public getAddDuration()
  l        public final dispatchRemoveFinished(android.support.v7.widget.RecyclerView$ViewHolder)
  n        public onMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder)
  p        public abstract runPendingAnimations()
  p        public abstract animateRemove(android.support.v7.widget.RecyclerView$ViewHolder)
  s        public abstract endAnimation(android.support.v7.widget.RecyclerView$ViewHolder)
  s        public abstract animateMove(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int)
  s        public setMoveDuration(long)
  u        public final dispatchChangeFinished(android.support.v7.widget.RecyclerView$ViewHolder,boolean)
  v        public getChangeDuration()
  w        public abstract isRunning()
  x        public getSupportsChangeAnimations()
  x        public onMoveStarting(android.support.v7.widget.RecyclerView$ViewHolder)
  x        public setAddDuration(long)
  y        public onAddFinished(android.support.v7.widget.RecyclerView$ViewHolder)
  z        public onRemoveFinished(android.support.v7.widget.RecyclerView$ViewHolder)

android.support.v7.widget.RecyclerView$ItemAnimator$ArrayOutOfBoundsException    (be.brunoparmentier.apkshare.eval_sq)
===============================================================================
  No methods

android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener (be.brunoparmentier.apkshare.eval_bj$eval_p$l)
===============================================================================
  y    public abstract onAnimationsFinished()

android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener (be.brunoparmentier.apkshare.eval_bj$eval_p$eval_b)
===============================================================================
  e    public abstract onRemoveFinished(android.support.v7.widget.RecyclerView$ViewHolder)
  h    public abstract onChangeFinished(android.support.v7.widget.RecyclerView$ViewHolder)
  i    public abstract onMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder)
  u    public abstract onAddFinished(android.support.v7.widget.RecyclerView$ViewHolder)

android.support.v7.widget.RecyclerView$ItemAnimatorRestoreListener       (be.brunoparmentier.apkshare.eval_bj$b)
===============================================================================
  e    public onRemoveFinished(android.support.v7.widget.RecyclerView$ViewHolder)
  h    public onChangeFinished(android.support.v7.widget.RecyclerView$ViewHolder)
  i    public onMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder)
  u    public onAddFinished(android.support.v7.widget.RecyclerView$ViewHolder)

android.support.v7.widget.RecyclerView$ItemDecoration    (be.brunoparmentier.apkshare.eval_bj$m)
===============================================================================
  b    public onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State)
  g    public onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView)
  i    public getItemOffsets(android.graphics.Rect,int,android.support.v7.widget.RecyclerView)
  n    public getItemOffsets(android.graphics.Rect,android.view.View,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State)
  s    public onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State)
  x    public onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView)

android.support.v7.widget.RecyclerView$ItemHolderInfo    (be.brunoparmentier.apkshare.eval_bj$i)
===============================================================================
  No methods

android.support.v7.widget.RecyclerView$LayoutManager     (be.brunoparmentier.apkshare.eval_bj$y)
===============================================================================
  a        public requestLayout()
  a        public generateLayoutParams(android.content.Context,android.util.AttributeSet)
  a        public onDetachedFromWindow(android.support.v7.widget.RecyclerView)
  a        public computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State)
  a        public onItemsUpdated(android.support.v7.widget.RecyclerView,int,int)
  a        public getDecoratedBottom(android.view.View)
  a        public offsetChildrenVertical(int)
  a        public static getChildMeasureSpec(int,int,int,boolean)
  b        public detachViewAt(int)
  c        public abstract generateDefaultLayoutParams()
  c        public getItemViewType(android.view.View)
  c        public detachAndScrapView(android.view.View,android.support.v7.widget.RecyclerView$Recycler)
  c        public onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
  c        public findViewByPosition(int)
  d        public canScrollVertically()
  d        public onItemsChanged(android.support.v7.widget.RecyclerView)
  d        public computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State)
  d        public getDecoratedMeasuredHeight(android.view.View)
  e        public onInitializeAccessibilityNodeInfo(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  e        private scrapOrRecycleView(android.support.v7.widget.RecyclerView$Recycler,int,android.view.View)
  e        public endAnimation(android.view.View)
  e        public generateLayoutParams(android.view.ViewGroup$LayoutParams)
  eval__   public getClipToPadding()
  eval_a   public getPaddingEnd()
  eval_b   public getHeight()
  eval_b   onInitializeAccessibilityNodeInfo(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  eval_d   public getBaseline()
  eval_d   public getLeftDecorationWidth(android.view.View)
  eval_e   public getMinimumHeight()
  eval_e   public getTopDecorationHeight(android.view.View)
  eval_f   public removeAllViews()
  eval_h   public getPaddingTop()
  eval_h   public getBottomDecorationHeight(android.view.View)
  eval_i   public getPaddingLeft()
  eval_j   public computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State)
  eval_k   public getItemCount()
  eval_k   public getDecoratedMeasuredWidth(android.view.View)
  eval_m   public stopIgnoringView(android.view.View)
  eval_o   public getDecoratedLeft(android.view.View)
  eval_p   public getPaddingBottom()
  eval_p   public onInterceptFocusSearch(android.view.View,int)
  eval_q   public measureChild(android.view.View,int,int)
  eval_r   stopSmoothScroller()
  eval_s   public getPaddingRight()
  eval_s   public getChildAt(int)
  eval_u   public getLayoutDirection()
  eval_w   public onSaveInstanceState()
  eval_x   public requestSimpleAnimationsInNextLayout()
  eval_z   public getFocusedChild()
  eval_z   public onAttachedToWindow(android.support.v7.widget.RecyclerView)
  eval_z   public removeDetachedView(android.view.View)
  f        public removeAndRecycleAllViews(android.support.v7.widget.RecyclerView$Recycler)
  f        public postOnAnimation(java.lang.Runnable)
  g        public getChildCount()
  g        dispatchAttachedToWindow(android.support.v7.widget.RecyclerView)
  g        public getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  g        public startSmoothScroll(android.support.v7.widget.RecyclerView$SmoothScroller)
  g        public scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  h        public getWidth()
  h        public addDisappearingView(android.view.View,int)
  h        performAccessibilityActionForItem(android.view.View,int,android.os.Bundle)
  i        onInitializeAccessibilityNodeInfoForItem(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  i        public moveView(int,int)
  j        static access$4900(android.support.v7.widget.RecyclerView$LayoutManager,android.support.v7.widget.RecyclerView$SmoothScroller)
  j        public computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State)
  k        public getMinimumWidth()
  k        public isLayoutHierarchical(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  k        public detachView(android.view.View)
  l        public hasFocus()
  l        static access$1700(android.support.v7.widget.RecyclerView$LayoutManager)
  l        public performAccessibilityAction(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,android.os.Bundle)
  l        public removeAndRecycleView(android.view.View,android.support.v7.widget.RecyclerView$Recycler)
  l        public assertInLayoutOrScroll(java.lang.String)
  m        public supportsPredictiveItemAnimations()
  m        public performAccessibilityActionForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,int,android.os.Bundle)
  m        public getPosition(android.view.View)
  n        public offsetChildrenHorizontal(int)
  o        public getPaddingStart()
  o        public getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  o        public onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  o        public addDisappearingView(android.view.View)
  o        public measureChildWithMargins(android.view.View,int,int)
  o        public removeAndRecycleViewAt(int,android.support.v7.widget.RecyclerView$Recycler)
  p        private onSmoothScrollerStopped(android.support.v7.widget.RecyclerView$SmoothScroller)
  p        public smoothScrollToPosition(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State,int)
  p        public onAddFocusables(android.support.v7.widget.RecyclerView,java.util.ArrayList,int,int)
  p        public calculateItemDecorationsForChild(android.view.View,android.graphics.Rect)
  p        public scrollToPosition(int)
  q        public onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter)
  q        public onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  q        public onMeasure(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int)
  q        public attachView(android.view.View)
  r        setRecyclerView(android.support.v7.widget.RecyclerView)
  r        public computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State)
  r        public requestChildRectangleOnScreen(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean)
  r        public onItemsAdded(android.support.v7.widget.RecyclerView,int,int)
  r        public getDecoratedTop(android.view.View)
  r        public layoutDecorated(android.view.View,int,int,int,int)
  s        public onRequestChildFocus(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State,android.view.View,android.view.View)
  s        public addView(android.view.View,int)
  s        public onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  t        public onRestoreInstanceState(android.os.Parcelable)
  t        public onItemsMoved(android.support.v7.widget.RecyclerView,int,int,int)
  t        public getRightDecorationWidth(android.view.View)
  t        public attachView(android.view.View,int,android.support.v7.widget.RecyclerView$LayoutParams)
  t        private detachViewInternal(int,android.view.View)
  u        public isAttachedToWindow()
  u        public checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams)
  u        public detachAndScrapAttachedViews(android.support.v7.widget.RecyclerView$Recycler)
  u        public onInitializeAccessibilityEvent(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent)
  u        public getDecoratedRight(android.view.View)
  u        public assertNotInLayoutOrScroll(java.lang.String)
  v        public isSmoothScrolling()
  v        static access$1702(android.support.v7.widget.RecyclerView$LayoutManager,boolean)
  v        public computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State)
  v        public ignoreView(android.view.View)
  v        public removeCallbacks(java.lang.Runnable)
  w        public canScrollHorizontally()
  w        removeAndRecycleScrapInt(android.support.v7.widget.RecyclerView$Recycler)
  w        public getSelectionModeForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  w        public addView(android.view.View)
  w        private addViewInt(android.view.View,int,boolean)
  x        public onRequestChildFocus(android.support.v7.widget.RecyclerView,android.view.View,android.view.View)
  y        public isFocused()
  y        public static getProperties(android.content.Context,android.util.AttributeSet,int,int)
  y        dispatchDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler)
  y        public removeView(android.view.View)
  y        public attachView(android.view.View,int)
  y        public onScrollStateChanged(int)
  y        public detachAndScrapViewAt(int,android.support.v7.widget.RecyclerView$Recycler)
  y        public setMeasuredDimension(int,int)
  z        public onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler)
  z        public onItemsRemoved(android.support.v7.widget.RecyclerView,int,int)
  z        public removeViewAt(int)
  z        performAccessibilityAction(int,android.os.Bundle)
  z        public scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)

android.support.v7.widget.RecyclerView$LayoutManager$ParseException      (be.brunoparmentier.apkshare.eval__f)
===============================================================================
  No methods

android.support.v7.widget.RecyclerView$LayoutManager$Properties  (be.brunoparmentier.apkshare.eval_bj$y$r)
===============================================================================
  No methods

android.support.v7.widget.RecyclerView$LayoutParams      (be.brunoparmentier.apkshare.eval_bj$t)
===============================================================================
  l    public isItemRemoved()
  m    public getViewLayoutPosition()
  q    public isItemChanged()
  s    public getViewAdapterPosition()
  u    public getViewPosition()
  w    public isViewInvalid()
  z    public viewNeedsUpdate()

android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener  (be.brunoparmentier.apkshare.eval_bj$f)
===============================================================================
  i    public abstract onChildViewAttachedToWindow(android.view.View)
  x    public abstract onChildViewDetachedFromWindow(android.view.View)

android.support.v7.widget.RecyclerView$OnItemTouchListener       (be.brunoparmentier.apkshare.eval_bj$g)
===============================================================================
  h    public abstract onInterceptTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent)
  l    public abstract onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent)
  r    public abstract onRequestDisallowInterceptTouchEvent(boolean)

android.support.v7.widget.RecyclerView$OnScrollListener  (be.brunoparmentier.apkshare.eval_bj$n)
===============================================================================
  j    public onScrollStateChanged(android.support.v7.widget.RecyclerView,int)
  z    public onScrolled(android.support.v7.widget.RecyclerView,int,int)

android.support.v7.widget.RecyclerView$RecycledViewPool  (be.brunoparmentier.apkshare.eval_bj$eval_q)
===============================================================================
  a    detach()
  c    onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter,boolean)
  e    size()
  f    public setMaxRecycledViews(int,int)
  i    attach(android.support.v7.widget.RecyclerView$Adapter)
  j    public putRecycledView(android.support.v7.widget.RecyclerView$ViewHolder)
  p    public getRecycledView(int)
  r    public clear()
  x    private getScrapHeapForType(int)

android.support.v7.widget.RecyclerView$Recycler  (be.brunoparmentier.apkshare.eval_bj$eval_v)
===============================================================================
  a        validateViewHolderForOffsetPosition(android.support.v7.widget.RecyclerView$ViewHolder)
  a        getChangedScrapViewForPosition(int)
  b        clearOldPositions()
  c        public convertPreLayoutPositionToPostLayout(int)
  d        clearScrap()
  d        recycleCachedViewAt(int)
  d        offsetPositionRecordsForRemove(int,int,boolean)
  e        dispatchViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder)
  eval_c   unscrapView(android.support.v7.widget.RecyclerView$ViewHolder)
  eval_j   getRecycledViewPool()
  eval_k   setAdapterPositionsAsUnknown()
  eval_x   setViewCacheExtension(android.support.v7.widget.RecyclerView$ViewCacheExtension)
  g        viewRangeUpdate(int,int)
  h        private invalidateDisplayListInt(android.support.v7.widget.RecyclerView$ViewHolder)
  h        recycleViewInternal(android.view.View)
  i        public recycleView(android.view.View)
  k        static access$1800(android.support.v7.widget.RecyclerView$Recycler)
  l        setRecycledViewPool(android.support.v7.widget.RecyclerView$RecycledViewPool)
  l        offsetPositionRecordsForInsert(int,int)
  m        public setViewCacheSize(int)
  m        offsetPositionRecordsForMove(int,int)
  m        getScrapViewForPosition(int,int,boolean)
  n        markItemDecorInsetsDirty()
  o        getScrapCount()
  p        recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder)
  p        getScrapViewForId(long,int,boolean)
  q        private invalidateDisplayListInt(android.view.ViewGroup,boolean)
  r        public clear()
  t        addViewHolderToRecycledViewPool(android.support.v7.widget.RecyclerView$ViewHolder)
  u        recycleAndClearCachedViews()
  u        scrapView(android.view.View)
  v        private attachAccessibilityDelegate(android.view.View)
  v        public bindViewToPosition(android.view.View,int)
  v        getScrapViewAt(int)
  x        public getScrapList()
  x        public getViewForPosition(int)
  y        markKnownViewsInvalid()
  y        onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter,boolean)
  y        getViewForPosition(int,boolean)
  z        quickRecycleScrapView(android.view.View)

android.support.v7.widget.RecyclerView$RecyclerListener  (be.brunoparmentier.apkshare.eval_bj$eval_g)
===============================================================================
  w    public abstract onViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder)

android.support.v7.widget.RecyclerView$RecyclerViewDataObserver  (be.brunoparmentier.apkshare.eval_bj$s)
===============================================================================
  f    public onItemRangeInserted(int,int)
  g    public onItemRangeRemoved(int,int)
  h    public onChanged()
  h    public onItemRangeMoved(int,int,int)
  i    public onItemRangeChanged(int,int)
  l    triggerUpdateProcessor()

android.support.v7.widget.RecyclerView$SavedState        (be.brunoparmentier.apkshare.eval_bj$eval_s)
===============================================================================
  k                static access$1300(android.support.v7.widget.RecyclerView$SavedState,android.support.v7.widget.RecyclerView$SavedState)
  r                private copyFrom(android.support.v7.widget.RecyclerView$SavedState)
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v7.widget.RecyclerView$SavedState$1      (be.brunoparmentier.apkshare.eval_bj$eval_s$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v7.widget.RecyclerView$SavedState$Exception      (be.brunoparmentier.apkshare.eval_fd)
===============================================================================
  No methods

android.support.v7.widget.RecyclerView$SimpleOnItemTouchListener (be.brunoparmentier.apkshare.eval_bj$z)
===============================================================================
  h    public onInterceptTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent)
  l    public onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent)
  r    public onRequestDisallowInterceptTouchEvent(boolean)

android.support.v7.widget.RecyclerView$SmoothScroller    (be.brunoparmentier.apkshare.eval_bj$eval_d)
===============================================================================
  a        protected abstract onStart()
  c        start(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$LayoutManager)
  c        private onAnimation(int,int)
  d        public isPendingInitialRun()
  e        public instantScrollToPosition(int)
  eval_e   protected abstract onStop()
  eval_t   public findViewByPosition(int)
  f        public getChildCount()
  g        protected final stop()
  k        protected abstract onSeekTargetStep(int,int,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$SmoothScroller$Action)
  n        public getChildPosition(android.view.View)
  p        protected normalize(android.graphics.PointF)
  p        public setTargetPosition(int)
  r        protected onChildAttachedToWindow(android.view.View)
  t        static access$2500(android.support.v7.widget.RecyclerView$SmoothScroller,int,int)
  t        protected abstract onTargetFound(android.view.View,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$SmoothScroller$Action)
  u        public isRunning()
  v        public getTargetPosition()
  y        public getLayoutManager()

android.support.v7.widget.RecyclerView$SmoothScroller$Action     (be.brunoparmentier.apkshare.eval_bj$eval_d$c)
===============================================================================
  c    public getInterpolator()
  g    public setDuration(int)
  i    private validate()
  i    private runIfNecessary(android.support.v7.widget.RecyclerView)
  m    public getDy()
  o    public setDy(int)
  p    public getDx()
  q    public setDx(int)
  u    public update(int,int,int,android.view.animation.Interpolator)
  x    public getDuration()
  x    static access$5000(android.support.v7.widget.RecyclerView$SmoothScroller$Action,android.support.v7.widget.RecyclerView)
  z    public setInterpolator(android.view.animation.Interpolator)

android.support.v7.widget.RecyclerView$SmoothScroller$IOException        (be.brunoparmentier.apkshare.eval_yj)
===============================================================================
  No methods

android.support.v7.widget.RecyclerView$State     (be.brunoparmentier.apkshare.eval_bj$r)
===============================================================================
  a        public remove(int)
  c        static access$4702(android.support.v7.widget.RecyclerView$State,int)
  c        removeFromDisappearingList(android.view.View)
  d        static access$1602(android.support.v7.widget.RecyclerView$State,boolean)
  e        reset()
  e        static access$1400(android.support.v7.widget.RecyclerView$State)
  eval_f   public didStructureChange()
  eval_j   static access$1402(android.support.v7.widget.RecyclerView$State,boolean)
  eval_s   public willRunSimpleAnimations()
  f        public isPreLayout()
  f        public onViewIgnored(android.support.v7.widget.RecyclerView$ViewHolder)
  g        static access$1600(android.support.v7.widget.RecyclerView$State)
  h        public willRunPredictiveAnimations()
  h        static access$1012(android.support.v7.widget.RecyclerView$State,int)
  j        public getTargetScrollPosition()
  k        public hasTargetScrollPosition()
  l        public put(int,java.lang.Object)
  m        public get(int)
  n        static access$1002(android.support.v7.widget.RecyclerView$State,int)
  p        static access$1200(android.support.v7.widget.RecyclerView$State)
  q        static access$1902(android.support.v7.widget.RecyclerView$State,int)
  q        onViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder)
  t        static access$1502(android.support.v7.widget.RecyclerView$State,boolean)
  v        static access$1500(android.support.v7.widget.RecyclerView$State)
  x        private removeFrom(android.support.v4.util.ArrayMap,android.support.v7.widget.RecyclerView$ViewHolder)
  x        static access$1202(android.support.v7.widget.RecyclerView$State,boolean)
  y        addToDisappearingList(android.view.View)
  z        public getItemCount()
  toString public toString()

android.support.v7.widget.RecyclerView$ViewCacheExtension        (be.brunoparmentier.apkshare.eval_bj$eval_c)
===============================================================================
  q    public abstract getViewForPositionAndType(android.support.v7.widget.RecyclerView$Recycler,int,int)

android.support.v7.widget.RecyclerView$ViewFlinger       (be.brunoparmentier.apkshare.eval_bj$eval_k)
===============================================================================
  d        private disableRunOnAnimationRequests()
  d        private distanceInfluenceForSnapDuration(float)
  d        public smoothScrollBy(int,int,int)
  eval_v   private enableRunOnAnimationRequests()
  f        postOnAnimation()
  n        private computeScrollDuration(int,int,int,int)
  p        public fling(int,int)
  r        public smoothScrollBy(int,int,int,android.view.animation.Interpolator)
  t        public smoothScrollBy(int,int,int,int)
  u        public smoothScrollBy(int,int)
  y        public stop()
  run      public run()

android.support.v7.widget.RecyclerView$ViewHolder        (be.brunoparmentier.apkshare.eval_bj$d)
===============================================================================
  a        hasAnyOfTheFlags(int)
  e        stopIgnoring()
  e        setScrapContainer(android.support.v7.widget.RecyclerView$Recycler)
  eval_a   isRemoved()
  eval_d   public final getItemViewType()
  eval_e   unScrap()
  eval_h   isTmpDetached()
  eval_j   public final isRecyclable()
  eval_m   isChanged()
  eval_r   private shouldBeKeptAsChild()
  eval_t   private doesTransientStatePreventRecycling()
  eval_u   isAdapterPositionUnknown()
  eval_v   isScrap()
  f        isInvalid()
  g        isBound()
  h        shouldIgnore()
  h        offsetPosition(int,boolean)
  j        clearReturnedFromScrapFlag()
  j        setFlags(int,int)
  k        public final getLayoutPosition()
  m        public final getOldPosition()
  n        public final setIsRecyclable(boolean)
  o        needsUpdate()
  p        clearOldPosition()
  p        static access$5200(android.support.v7.widget.RecyclerView$ViewHolder)
  r        public final getItemId()
  r        addFlags(int)
  r        flagRemovedAndOffsetPosition(int,int,boolean)
  s        static access$4000(android.support.v7.widget.RecyclerView$ViewHolder)
  t        static access$4102(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$Recycler)
  u        public final getAdapterPosition()
  u        static access$5300(android.support.v7.widget.RecyclerView$ViewHolder)
  v        saveOldPosition()
  w        resetInternal()
  x        wasReturnedFromScrap()
  y        clearTmpDetachFlag()
  z        public final getPosition()
  toString public toString()

android.support.v7.widget.RecyclerViewAccessibilityDelegate      (be.brunoparmentier.apkshare.eval_s6)
===============================================================================
  b    private shouldIgnore()
  c    getItemDelegate()
  j    public performAccessibilityAction(android.view.View,int,android.os.Bundle)
  n    public onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  q    static access$000(android.support.v7.widget.RecyclerViewAccessibilityDelegate)
  u    public onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)

android.support.v7.widget.RecyclerViewAccessibilityDelegate$1    (be.brunoparmentier.apkshare.eval_s6$1)
===============================================================================
  j    public performAccessibilityAction(android.view.View,int,android.os.Bundle)
  u    public onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)

android.support.v7.widget.RecyclerViewAccessibilityDelegate$Exception    (be.brunoparmentier.apkshare.eval_iu)
===============================================================================
  No methods

android.support.v7.widget.RoundRectDrawable      (be.brunoparmentier.apkshare.eval_y1)
===============================================================================
  b                getPadding()
  b                setRadius(float)
  b                setPadding(float,boolean,boolean)
  c                public getRadius()
  j                public setColor(int)
  k                private updateBounds(android.graphics.Rect)
  draw             public draw(android.graphics.Canvas)
  getOpacity       public getOpacity()
  getOutline       public getOutline(android.graphics.Outline)
  onBoundsChange   protected onBoundsChange(android.graphics.Rect)
  setAlpha         public setAlpha(int)
  setColorFilter   public setColorFilter(android.graphics.ColorFilter)

android.support.v7.widget.RoundRectDrawable$IOException  (be.brunoparmentier.apkshare.eval_pb)
===============================================================================
  No methods

android.support.v7.widget.RoundRectDrawableWithShadow    (be.brunoparmentier.apkshare.eval_iy)
===============================================================================
  a                getMaxShadowAndCornerPadding(android.graphics.Rect)
  a                setMaxShadowSize(float)
  a                setShadowSize(float,float)
  b                private buildComponents(android.graphics.Rect)
  b                setCornerRadius(float)
  e                getCornerRadius()
  e                private drawShadow(android.graphics.Canvas)
  eval_u           static calculateHorizontalPadding(float,float,boolean)
  eval_v           public setAddPaddingForCorners(boolean)
  g                getShadowSize()
  g                static calculateVerticalPadding(float,float,boolean)
  h                getMinHeight()
  i                getMaxShadowSize()
  k                public setColor(int)
  r                getMinWidth()
  u                private buildShadowCorners()
  x                setShadowSize(float)
  y                private toEven(float)
  draw             public draw(android.graphics.Canvas)
  getOpacity       public getOpacity()
  getPadding       public getPadding(android.graphics.Rect)
  onBoundsChange   protected onBoundsChange(android.graphics.Rect)
  setAlpha         public setAlpha(int)
  setColorFilter   public setColorFilter(android.graphics.ColorFilter)

android.support.v7.widget.RoundRectDrawableWithShadow$IOException        (be.brunoparmentier.apkshare.eval_zb)
===============================================================================
  No methods

android.support.v7.widget.RoundRectDrawableWithShadow$RoundRectHelper    (be.brunoparmentier.apkshare.eval_iy$w)
===============================================================================
  f    public abstract drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint)

android.support.v7.widget.ScrollbarHelper        (be.brunoparmentier.apkshare.eval_nu)
===============================================================================
  s    static computeScrollExtent(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean)
  v    static computeScrollRange(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean)
  x    static computeScrollOffset(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean,boolean)

android.support.v7.widget.ScrollbarHelper$ArrayOutOfBoundsException      (be.brunoparmentier.apkshare.eval_sk)
===============================================================================
  No methods

android.support.v7.widget.SearchView     (be.brunoparmentier.apkshare.eval_ox)
===============================================================================
  a                    public isIconified()
  b                    static access$300(android.support.v7.widget.SearchView)
  c                    public getInputType()
  c                    static access$1400(android.support.v7.widget.SearchView)
  d                    private createIntentFromSuggestion(android.database.Cursor,int,java.lang.String)
  d                    private launchQuerySearch(int,java.lang.String,java.lang.String)
  d                    private onTextChanged(java.lang.CharSequence)
  e                    public onActionViewCollapsed()
  e                    static access$1100(android.support.v7.widget.SearchView)
  e                    public setSubmitButtonEnabled(boolean)
  e                    onQueryRefine(java.lang.CharSequence)
  eval_a               public getImeOptions()
  eval_c               public isIconfiedByDefault()
  eval_c               static access$000(android.support.v7.widget.SearchView)
  eval_d               private addOnLayoutChangeListenerToDropDownAnchorBase()
  eval_d               static access$1300(android.support.v7.widget.SearchView)
  eval_e               private isSubmitAreaEnabled()
  eval_f               private onSubmitQuery()
  eval_g               static access$400(android.support.v7.widget.SearchView)
  eval_h               public getSuggestionsAdapter()
  eval_i               private forceSuggestionQuery()
  eval_j               public isSubmitButtonEnabled()
  eval_j               static access$500(android.support.v7.widget.SearchView)
  eval_k               public setImeOptions(int)
  eval_l               private onVoiceClicked()
  eval_m               private onSearchClicked()
  eval_m               private setImeVisibility(boolean)
  eval_o               getSuggestionCommitIconResId()
  eval_q               onTextFocusChanged()
  eval_t               private onCloseClicked()
  eval_u               private updateFocusedState()
  eval_u               private onItemSelected(int)
  eval_v               public getMaxWidth()
  eval_v               private rewriteQueryFromSuggestion(int)
  eval_x               private addOnLayoutChangeListenerToDropDownAnchorSDK11()
  eval_y               public setInputType(int)
  eval_z               private updateSubmitArea()
  eval_z               private updateViewsVisibility(boolean)
  f                    private dismissSuggestions()
  f                    private launchIntent(android.content.Intent)
  f                    static access$1800(android.support.v7.widget.SearchView,int,int,java.lang.String)
  f                    private onItemClicked(int,int,java.lang.String)
  f                    private setQuery(java.lang.CharSequence)
  g                    static access$600(android.support.v7.widget.SearchView)
  g                    public setIconified(boolean)
  i                    static access$900(android.support.v7.widget.SearchView)
  j                    private getPreferredWidth()
  j                    public setQueryRefinementEnabled(boolean)
  l                    private updateQueryHint()
  l                    static access$1200(android.support.v7.widget.SearchView)
  m                    private hasVoiceSearch()
  m                    static access$100(android.support.v7.widget.SearchView)
  n                    private adjustDropDownSizeAndPosition()
  n                    public setOnSuggestionListener(android.support.v7.widget.SearchView$OnSuggestionListener)
  n                    private updateVoiceButton(boolean)
  o                    public setSearchableInfo(android.app.SearchableInfo)
  o                    static access$1500(android.support.v7.widget.SearchView,android.view.View,int,android.view.KeyEvent)
  o                    static access$2000(android.support.v7.widget.SearchView,java.lang.CharSequence)
  p                    private postUpdateFocusedState()
  p                    static access$1700(android.support.v7.widget.SearchView,int,java.lang.String,java.lang.String)
  q                    private updateCloseButton()
  q                    public setOnCloseListener(android.support.v7.widget.SearchView$OnCloseListener)
  q                    private onSuggestionsKey(android.view.View,int,android.view.KeyEvent)
  r                    private createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)
  r                    static access$200(android.support.v7.widget.SearchView)
  r                    public setOnSearchClickListener(android.view.View$OnClickListener)
  r                    private launchSuggestion(int,int,java.lang.String)
  s                    private createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo)
  s                    static access$700(android.support.v7.widget.SearchView)
  s                    private updateSubmitButton(boolean)
  s                    public setMaxWidth(int)
  t                    getSuggestionRowLayout()
  t                    public setSuggestionsAdapter(android.support.v4.widget.CursorAdapter)
  t                    static access$1000(android.support.v7.widget.SearchView)
  t                    public setOnQueryTextListener(android.support.v7.widget.SearchView$OnQueryTextListener)
  t                    static access$2100(android.support.v7.widget.SearchView,boolean)
  u                    public getQueryHint()
  u                    public setIconifiedByDefault(boolean)
  u                    public setQuery(java.lang.CharSequence,boolean)
  v                    public setAppSearchData(android.os.Bundle)
  v                    public setQueryHint(java.lang.CharSequence)
  w                    public getQuery()
  w                    static isLandscapeMode(android.content.Context)
  w                    static access$800(android.support.v7.widget.SearchView)
  w                    static access$1900(android.support.v7.widget.SearchView,int)
  w                    public setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
  x                    private updateSearchAutoComplete()
  y                    public onActionViewExpanded()
  y                    private getDecoratedHint(java.lang.CharSequence)
  z                    public isQueryRefinementEnabled()
  z                    private createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)
  clearFocus           public clearFocus()
  onDetachedFromWindow protected onDetachedFromWindow()
  onMeasure            protected onMeasure(int,int)
  onWindowFocusChanged public onWindowFocusChanged(boolean)
  requestFocus         public requestFocus(int,android.graphics.Rect)

android.support.v7.widget.SearchView$1   (be.brunoparmentier.apkshare.eval_ox$1)
===============================================================================
  run  public run()

android.support.v7.widget.SearchView$10  (be.brunoparmentier.apkshare.eval_ox$10)
===============================================================================
  onItemClick  public onItemClick(android.widget.AdapterView,android.view.View,int,long)

android.support.v7.widget.SearchView$11  (be.brunoparmentier.apkshare.eval_ox$11)
===============================================================================
  onItemSelected       public onItemSelected(android.widget.AdapterView,android.view.View,int,long)
  onNothingSelected    public onNothingSelected(android.widget.AdapterView)

android.support.v7.widget.SearchView$12  (be.brunoparmentier.apkshare.eval_ox$12)
===============================================================================
  afterTextChanged     public afterTextChanged(android.text.Editable)
  beforeTextChanged    public beforeTextChanged(java.lang.CharSequence,int,int,int)
  onTextChanged        public onTextChanged(java.lang.CharSequence,int,int,int)

android.support.v7.widget.SearchView$2   (be.brunoparmentier.apkshare.eval_ox$2)
===============================================================================
  run  public run()

android.support.v7.widget.SearchView$3   (be.brunoparmentier.apkshare.eval_ox$3)
===============================================================================
  run  public run()

android.support.v7.widget.SearchView$4   (be.brunoparmentier.apkshare.eval_ox$4)
===============================================================================
  onFocusChange    public onFocusChange(android.view.View,boolean)

android.support.v7.widget.SearchView$5   (be.brunoparmentier.apkshare.eval_ox$5)
===============================================================================
  onLayoutChange   public onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)

android.support.v7.widget.SearchView$6   (be.brunoparmentier.apkshare.eval_ox$6)
===============================================================================
  onGlobalLayout   public onGlobalLayout()

android.support.v7.widget.SearchView$7   (be.brunoparmentier.apkshare.eval_ox$7)
===============================================================================
  onClick  public onClick(android.view.View)

android.support.v7.widget.SearchView$8   (be.brunoparmentier.apkshare.eval_ox$8)
===============================================================================
  onKey    public onKey(android.view.View,int,android.view.KeyEvent)

android.support.v7.widget.SearchView$9   (be.brunoparmentier.apkshare.eval_ox$9)
===============================================================================
  onEditorAction   public onEditorAction(android.widget.TextView,int,android.view.KeyEvent)

android.support.v7.widget.SearchView$ArrayOutOfBoundsException   (be.brunoparmentier.apkshare.eval_dk)
===============================================================================
  No methods

android.support.v7.widget.SearchView$AutoCompleteTextViewReflector       (be.brunoparmentier.apkshare.eval_ox$m)
===============================================================================
  b    doBeforeTextChanged(android.widget.AutoCompleteTextView)
  f    showSoftInputUnchecked(android.view.inputmethod.InputMethodManager,android.view.View,int)
  o    doAfterTextChanged(android.widget.AutoCompleteTextView)
  p    ensureImeVisible(android.widget.AutoCompleteTextView,boolean)

android.support.v7.widget.SearchView$OnCloseListener     (be.brunoparmentier.apkshare.eval_ox$n)
===============================================================================
  eval_j   public abstract onClose()

android.support.v7.widget.SearchView$OnQueryTextListener (be.brunoparmentier.apkshare.eval_ox$g)
===============================================================================
  d    public abstract onQueryTextChange(java.lang.String)
  e    public abstract onQueryTextSubmit(java.lang.String)

android.support.v7.widget.SearchView$OnSuggestionListener        (be.brunoparmentier.apkshare.eval_ox$p)
===============================================================================
  i    public abstract onSuggestionSelect(int)
  t    public abstract onSuggestionClick(int)

android.support.v7.widget.SearchView$SearchAutoComplete  (be.brunoparmentier.apkshare.eval_ox$v)
===============================================================================
  i                    private isEmpty()
  j                    static access$1600(android.support.v7.widget.SearchView$SearchAutoComplete)
  l                    setSearchView(android.support.v7.widget.SearchView)
  enoughToFilter       public enoughToFilter()
  onFocusChanged       protected onFocusChanged(boolean,int,android.graphics.Rect)
  onKeyPreIme          public onKeyPreIme(int,android.view.KeyEvent)
  onWindowFocusChanged public onWindowFocusChanged(boolean)
  performCompletion    public performCompletion()
  replaceText          protected replaceText(java.lang.CharSequence)
  setThreshold         public setThreshold(int)

android.support.v7.widget.ShareActionProvider    (be.brunoparmentier.apkshare.eval_ul)
===============================================================================
  e        private updateIntent(android.content.Intent)
  e        public onPrepareSubMenu(android.view.SubMenu)
  eval__   public hasSubMenu()
  f        private setActivityChooserPolicyIfNeeded()
  h        public setShareIntent(android.content.Intent)
  i        public setOnShareTargetSelectedListener(android.support.v7.widget.ShareActionProvider$OnShareTargetSelectedListener)
  k        static access$100(android.support.v7.widget.ShareActionProvider)
  n        public setShareHistoryFileName(java.lang.String)
  p        static access$300(android.support.v7.widget.ShareActionProvider,android.content.Intent)
  q        public onCreateActionView()
  x        static access$500(android.support.v7.widget.ShareActionProvider)
  y        static access$200(android.support.v7.widget.ShareActionProvider)

android.support.v7.widget.ShareActionProvider$1  (be.brunoparmentier.apkshare.eval_ul$1)
===============================================================================
  No methods

android.support.v7.widget.ShareActionProvider$NullPointerException       (be.brunoparmentier.apkshare.eval_i4)
===============================================================================
  No methods

android.support.v7.widget.ShareActionProvider$OnShareTargetSelectedListener      (be.brunoparmentier.apkshare.eval_ul$q)
===============================================================================
  s    public abstract onShareTargetSelected(android.support.v7.widget.ShareActionProvider,android.content.Intent)

android.support.v7.widget.ShareActionProvider$ShareActivityChooserModelPolicy    (be.brunoparmentier.apkshare.eval_ul$r)
===============================================================================
  l    public onChooseActivity(android.support.v7.internal.widget.ActivityChooserModel,android.content.Intent)

android.support.v7.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener       (be.brunoparmentier.apkshare.eval_ul$y)
===============================================================================
  onMenuItemClick  public onMenuItemClick(android.view.MenuItem)

android.support.v7.widget.StaggeredGridLayoutManager     (be.brunoparmentier.apkshare.eval_n4)
===============================================================================
  a        public generateLayoutParams(android.content.Context,android.util.AttributeSet)
  a        private fixEndGap(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean)
  a        public computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State)
  a        private updateAnchorFromChildren(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo)
  a        public onItemsUpdated(android.support.v7.widget.RecyclerView,int,int)
  a        static access$100(android.support.v7.widget.StaggeredGridLayoutManager)
  a        public offsetChildrenVertical(int)
  b        private resolveShouldLayoutReverse()
  b        private getSpecForDimension(int,int)
  c        public generateDefaultLayoutParams()
  c        private computeScrollOffset(android.support.v7.widget.RecyclerView$State)
  c        static access$400(android.support.v7.widget.StaggeredGridLayoutManager,int)
  c        public onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
  d        public canScrollVertically()
  d        public onItemsChanged(android.support.v7.widget.RecyclerView)
  d        private fixStartGap(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean)
  d        public computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State)
  d        public setReverseLayout(boolean)
  d        private getMinStart(int)
  d        public findLastVisibleItemPositions(int[])
  e        public getGapStrategy()
  e        private attachViewToSpans(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams,android.support.v7.widget.LayoutState)
  e        public generateLayoutParams(android.view.ViewGroup$LayoutParams)
  eval_a   scrollBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  eval_b   private findFirstReferenceChildPosition(int)
  eval_c   hasGapsToFix()
  eval_c   private measureChildWithDecorationsAndMargin(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams)
  eval_g   public invalidateSpanAssignments()
  eval_g   private createFullSpanItemFromStart(int)
  eval_j   public computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State)
  eval_l   isLayoutRTL()
  eval_m   areAllStartsEqual()
  eval_n   private ensureOrientationHelper()
  eval_o   private getFirstChildPosition()
  eval_o   private preferLastSpan(int)
  eval_p   private computeScrollExtent(android.support.v7.widget.RecyclerView$State)
  eval_s   updateAnchorFromPendingData(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo)
  eval_t   public getSpanCount()
  eval_u   public setSpanCount(int)
  eval_v   updateMeasureSpecs()
  eval_v   private getMaxEnd(int)
  eval_w   public onSaveInstanceState()
  eval_x   private calculateScrollDirectionForPosition(int)
  eval_y   private getLastChildPosition()
  eval_y   private getMinEnd(int)
  g        public getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  g        private checkSpanForGap(android.support.v7.widget.StaggeredGridLayoutManager$Span)
  g        public scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  h        private applyPendingSavedState(android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo)
  h        private getMaxStart(int)
  h        public scrollToPositionWithOffset(int,int)
  i        public getOrientation()
  i        private layoutDecoratedWithMargins(android.view.View,int,int,int,int)
  i        private findLastReferenceChildPosition(int)
  j        public computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State)
  j        private appendViewToAllSpans(android.view.View)
  j        findFirstVisibleItemClosestToEnd(boolean,boolean)
  l        private recycleFromStart(android.support.v7.widget.RecyclerView$Recycler,int)
  l        private prependViewToAllSpans(android.view.View)
  l        private createFullSpanItemFromEnd(int)
  l        private handleUpdate(int,int,int)
  m        public supportsPredictiveItemAnimations()
  m        private getNextSpan(android.support.v7.widget.LayoutState)
  m        private updateAllRemainingSpans(int,int)
  m        public findFirstVisibleItemPositions(int[])
  n        private checkForGaps()
  n        updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo)
  n        public offsetChildrenHorizontal(int)
  o        private recycle(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState)
  o        public getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  o        public onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  o        private recycleFromEnd(android.support.v7.widget.RecyclerView$Recycler,int)
  o        public setGapStrategy(int)
  p        public smoothScrollToPosition(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State,int)
  p        public scrollToPosition(int)
  p        public findFirstCompletelyVisibleItemPositions(int[])
  q        public onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  r        public getReverseLayout()
  r        public computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State)
  r        public onItemsAdded(android.support.v7.widget.RecyclerView,int,int)
  r        private measureChildWithDecorationsAndMargin(android.view.View,int,int)
  r        private updateLayoutState(int,android.support.v7.widget.RecyclerView$State)
  t        findFirstVisibleItemPositionInt()
  t        public onRestoreInstanceState(android.os.Parcelable)
  t        public onItemsMoved(android.support.v7.widget.RecyclerView,int,int,int)
  t        static access$500(android.support.v7.widget.StaggeredGridLayoutManager)
  u        public checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams)
  u        private fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State)
  u        private computeScrollRange(android.support.v7.widget.RecyclerView$State)
  u        public setOrientation(int)
  u        public assertNotInLayoutOrScroll(java.lang.String)
  v        public computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State)
  v        findFirstVisibleItemClosestToStart(boolean,boolean)
  v        private updateSpecWithExtra(int,int,int)
  w        public canScrollHorizontally()
  w        private setLayoutStateDirection(int)
  w        public findLastCompletelyVisibleItemPositions(int[])
  x        areAllEndsEqual()
  y        static access$600(android.support.v7.widget.StaggeredGridLayoutManager)
  y        public onScrollStateChanged(int)
  z        public onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler)
  z        public onItemsRemoved(android.support.v7.widget.RecyclerView,int,int)
  z        private updateRemainingSpans(android.support.v7.widget.StaggeredGridLayoutManager$Span,int,int)
  z        public scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)

android.support.v7.widget.StaggeredGridLayoutManager$1   (be.brunoparmentier.apkshare.eval_n4$1)
===============================================================================
  run  public run()

android.support.v7.widget.StaggeredGridLayoutManager$2   (be.brunoparmentier.apkshare.eval_n4$2)
===============================================================================
  j    public computeScrollVectorForPosition(int)

android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo  (be.brunoparmentier.apkshare.eval_n4$n)
===============================================================================
  b        assignCoordinateFromPadding()
  eval_g   reset()
  p        assignCoordinateFromPadding(int)

android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams        (be.brunoparmentier.apkshare.eval_n4$_)
===============================================================================
  a        public isFullSpan()
  eval_d   public final getSpanIndex()
  f        public setFullSpan(boolean)

android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup      (be.brunoparmentier.apkshare.eval_n4$l)
===============================================================================
  c    public addFullSpanItem(android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem)
  f    offsetForAddition(int,int)
  g    getSpan(int)
  h    invalidateAfter(int)
  i    clear()
  i    offsetForRemoval(int,int)
  j    public getFullSpanItem(int)
  k    private invalidateFullSpansAfter(int)
  m    ensureSize(int)
  r    sizeForPosition(int)
  s    forceInvalidateAfter(int)
  s    public getFirstFullSpanItemInRange(int,int,int,boolean)
  w    private offsetFullSpansForRemoval(int,int)
  x    setSpan(int,android.support.v7.widget.StaggeredGridLayoutManager$Span)
  x    private offsetFullSpansForAddition(int,int)

android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem (be.brunoparmentier.apkshare.eval_n4$l$o)
===============================================================================
  k                public invalidateSpanGaps()
  x                getGapForSpan(int)
  describeContents public describeContents()
  toString         public toString()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1       (be.brunoparmentier.apkshare.eval_n4$l$o$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$NullPointerException    (be.brunoparmentier.apkshare.eval_al)
===============================================================================
  No methods

android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$ParseException       (be.brunoparmentier.apkshare.eval_is)
===============================================================================
  No methods

android.support.v7.widget.StaggeredGridLayoutManager$ParseException      (be.brunoparmentier.apkshare.eval_ez)
===============================================================================
  No methods

android.support.v7.widget.StaggeredGridLayoutManager$SavedState  (be.brunoparmentier.apkshare.eval_n4$eval_s)
===============================================================================
  g                invalidateSpanInfo()
  x                invalidateAnchorPositionInfo()
  describeContents public describeContents()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v7.widget.StaggeredGridLayoutManager$SavedState$1        (be.brunoparmentier.apkshare.eval_n4$eval_s$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v7.widget.StaggeredGridLayoutManager$SavedState$IOException      (be.brunoparmentier.apkshare.eval_mc)
===============================================================================
  No methods

android.support.v7.widget.StaggeredGridLayoutManager$Span        (be.brunoparmentier.apkshare.eval_n4$j)
===============================================================================
  a        getStartLine()
  d        getLayoutParams(android.view.View)
  e        getNormalizedOffset(int,int,int)
  eval_f   popEnd()
  eval_g   popStart()
  i        public findLastCompletelyVisibleItemPosition()
  j        public findFirstVisibleItemPosition()
  k        invalidateCache()
  m        public findLastVisibleItemPosition()
  m        isEmpty(int,int)
  n        getEndLine()
  n        onOffset(int)
  o        public getDeletedSize()
  o        setLine(int)
  p        public findFirstCompletelyVisibleItemPosition()
  p        prependToSpan(android.view.View)
  p        getEndLine(int)
  r        cacheReferenceLineAndClear(boolean,int)
  t        calculateCachedEnd()
  u        appendToSpan(android.view.View)
  u        getStartLine(int)
  u        findOneVisibleChild(int,int,boolean)
  x        calculateCachedStart()
  z        clear()
  z        static access$300(android.support.v7.widget.StaggeredGridLayoutManager$Span)

android.support.v7.widget.SuggestionsAdapter     (be.brunoparmentier.apkshare.eval_bq)
===============================================================================
  a                        public static getColumnString(android.database.Cursor,java.lang.String)
  b                        private storeInIconCache(java.lang.String,android.graphics.drawable.Drawable)
  c                        public changeCursor(android.database.Cursor)
  eval_m                   public getQueryRefinement()
  g                        public newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
  i                        private setViewText(android.widget.TextView,java.lang.CharSequence)
  j                        public runQueryOnBackgroundThread(java.lang.CharSequence)
  j                        private getDrawableFromResourceValue(java.lang.String)
  k                        public setQueryRefinement(int)
  l                        private updateSpinnerState(android.database.Cursor)
  l                        getDrawableFromResourceUri(android.net.Uri)
  m                        getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)
  m                        private getIcon1(android.database.Cursor)
  n                        private getActivityIconWithCache(android.content.ComponentName)
  p                        private getDefaultIcon1(android.database.Cursor)
  r                        public convertToString(android.database.Cursor)
  r                        private checkIconCache(java.lang.String)
  s                        private setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int)
  t                        private getIcon2(android.database.Cursor)
  t                        private getDrawable(android.net.Uri)
  v                        private formatUrl(java.lang.CharSequence)
  w                        private static getStringOrNull(android.database.Cursor,int)
  x                        public close()
  x                        private getActivityIcon(android.content.ComponentName)
  y                        public bindView(android.view.View,android.content.Context,android.database.Cursor)
  getView                  public getView(int,android.view.View,android.view.ViewGroup)
  hasStableIds             public hasStableIds()
  notifyDataSetChanged     public notifyDataSetChanged()
  notifyDataSetInvalidated public notifyDataSetInvalidated()
  onClick                  public onClick(android.view.View)

android.support.v7.widget.SuggestionsAdapter$ChildViewCache      (be.brunoparmentier.apkshare.eval_bq$i)
===============================================================================
  No methods

android.support.v7.widget.SuggestionsAdapter$Exception   (be.brunoparmentier.apkshare.eval_mn)
===============================================================================
  No methods

android.support.v7.widget.SwitchCompat   (be.brunoparmentier.apkshare.eval_mt)
===============================================================================
  b                                public setTrackDrawable(android.graphics.drawable.Drawable)
  b                                public setTextOn(java.lang.CharSequence)
  c                                public setShowText(boolean)
  e                                public getTextOff()
  e                                private hitThumb(float,float)
  e                                public setSwitchMinWidth(int)
  e                                private makeLayout(java.lang.CharSequence)
  eval__                           public getShowText()
  eval_d                           private getTargetCheckedState()
  eval_r                           private getThumbOffset()
  f                                public getTrackDrawable()
  g                                public setThumbTextPadding(int)
  h                                public getSwitchMinWidth()
  i                                public getThumbTextPadding()
  i                                private cancelSuperTouch(android.view.MotionEvent)
  j                                private getThumbScrollRange()
  j                                public setSwitchTypeface(android.graphics.Typeface)
  k                                public getTextOn()
  k                                private setSwitchTypefaceByIndex(int,int)
  m                                public setSwitchTextAppearance(android.content.Context,int)
  m                                public setThumbDrawable(android.graphics.drawable.Drawable)
  m                                public setSwitchPadding(int)
  n                                private cancelPositionAnimator()
  n                                private setThumbPosition(float)
  n                                public setTrackResource(int)
  n                                public setTextOff(java.lang.CharSequence)
  o                                public setThumbResource(int)
  p                                public getSwitchPadding()
  q                                private stopDrag(android.view.MotionEvent)
  t                                public getSplitTrack()
  u                                public setSplitTrack(boolean)
  v                                private animateThumbToCheckedState(boolean)
  w                                private static constrain(float,float,float)
  y                                public setSwitchTypeface(android.graphics.Typeface,int)
  z                                public getThumbDrawable()
  z                                static access$000(android.support.v7.widget.SwitchCompat,float)
  draw                             public draw(android.graphics.Canvas)
  drawableHotspotChanged           public drawableHotspotChanged(float,float)
  drawableStateChanged             protected drawableStateChanged()
  getCompoundPaddingLeft           public getCompoundPaddingLeft()
  getCompoundPaddingRight          public getCompoundPaddingRight()
  jumpDrawablesToCurrentState      public jumpDrawablesToCurrentState()
  onCreateDrawableState            protected onCreateDrawableState(int)
  onDraw                           protected onDraw(android.graphics.Canvas)
  onInitializeAccessibilityEvent   public onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
  onInitializeAccessibilityNodeInfo    public onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
  onLayout                         protected onLayout(boolean,int,int,int,int)
  onMeasure                        public onMeasure(int,int)
  onPopulateAccessibilityEvent     public onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
  onTouchEvent                     public onTouchEvent(android.view.MotionEvent)
  setChecked                       public setChecked(boolean)
  toggle                           public toggle()
  verifyDrawable                   protected verifyDrawable(android.graphics.drawable.Drawable)

android.support.v7.widget.SwitchCompat$1 (be.brunoparmentier.apkshare.eval_mt$1)
===============================================================================
  applyTransformation  protected applyTransformation(float,android.view.animation.Transformation)

android.support.v7.widget.SwitchCompat$IOException       (be.brunoparmentier.apkshare.eval_lz)
===============================================================================
  No methods

android.support.v7.widget.Toolbar        (be.brunoparmentier.apkshare.eval_dy)
===============================================================================
  a                            private static isCustomView(android.view.View)
  a                            public setNavigationContentDescription(int)
  b                            private getChildTop(android.view.View,int)
  c                            private addSystemView(android.view.View)
  d                            private ensureCollapseButtonView()
  e                            public getContentInsetStart()
  e                            static access$400(android.support.v7.widget.Toolbar)
  eval_b                       public getLogoDescription()
  eval_c                       public isOverflowMenuShowing()
  eval_d                       private shouldCollapse()
  eval_e                       public inflateMenu(int)
  eval_f                       private ensureNavButtonView()
  eval_f                       private getChildHorizontalGravity(int)
  eval_g                       public setTitle(int)
  eval_h                       public getNavigationIcon()
  eval_i                       public getContentInsetRight()
  eval_j                       public getContentInsetLeft()
  eval_j                       static access$200(android.support.v7.widget.Toolbar)
  eval_k                       public getTitle()
  eval_l                       public getSubtitle()
  eval_p                       private getMenuInflater()
  eval_r                       private postShowOverflowMenu()
  eval_t                       private getChildVerticalGravity(int)
  eval_v                       private ensureLogoView()
  eval_w                       public hasExpandedActionView()
  eval_y                       private ensureMenuView()
  eval_z                       public getWrapper()
  f                            public isOverflowMenuShowPending()
  f                            static access$300(android.support.v7.widget.Toolbar)
  f                            private measureChildCollapseMargins(android.view.View,int,int,int,int,int[])
  f                            public setTitle(java.lang.CharSequence)
  g                            public setNavigationOnClickListener(android.view.View$OnClickListener)
  generateDefaultLayoutParams  protected generateDefaultLayoutParams()
  generateLayoutParams         public generateLayoutParams(android.util.AttributeSet)
  generateLayoutParams         protected generateLayoutParams(android.view.ViewGroup$LayoutParams)
  h                            private updateChildVisibilityForExpandedActionView(android.view.View)
  h                            public setContentInsetsRelative(int,int)
  h                            public setNavigationContentDescription(java.lang.CharSequence)
  h                            private addCustomViewsWithGravity(java.util.List,int)
  i                            public getNavigationContentDescription()
  i                            private getVerticalMargins(android.view.View)
  j                            public setSubtitleTextColor(int)
  k                            public showOverflowMenu()
  k                            public setLogo(android.graphics.drawable.Drawable)
  k                            public setSubtitle(int)
  k                            public setLogoDescription(java.lang.CharSequence)
  l                            public setSubtitleTextAppearance(android.content.Context,int)
  l                            private measureChildConstrained(android.view.View,int,int,int,int,int)
  l                            private layoutChildLeft(android.view.View,int,int[],int)
  m                            public getLogo()
  m                            private setChildVisibilityForExpandedActionView(boolean)
  m                            public setContentInsetsAbsolute(int,int)
  m                            private getViewListMeasuredWidth(java.util.List,int[])
  o                            public getPopupTheme()
  o                            public setOnMenuItemClickListener(android.support.v7.widget.Toolbar$OnMenuItemClickListener)
  p                            private ensureMenu()
  p                            static access$000(android.support.v7.widget.Toolbar)
  p                            private layoutChildRight(android.view.View,int,int[],int)
  p                            public setCollapsible(boolean)
  p                            public setNavigationIcon(int)
  q                            public setTitleTextAppearance(android.content.Context,int)
  r                            public hideOverflowMenu()
  r                            static access$500(android.support.v7.widget.Toolbar,boolean)
  s                            public getContentInsetEnd()
  s                            public setNavigationIcon(android.graphics.drawable.Drawable)
  s                            public setMenu(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.widget.ActionMenuPresenter)
  s                            public setMenuCallbacks(android.support.v7.internal.view.menu.MenuPresenter$Callback,android.support.v7.internal.view.menu.MenuBuilder$Callback)
  s                            public setLogo(int)
  t                            public isTitleTruncated()
  u                            public collapseActionView()
  u                            public setPopupTheme(int)
  u                            public setSubtitle(java.lang.CharSequence)
  v                            public getMenu()
  v                            private getHorizontalMargins(android.view.View)
  w                            public canShowOverflowMenu()
  w                            public setTitleTextColor(int)
  x                            public setLogoDescription(int)
  y                            public dismissPopupMenus()
  z                            private shouldLayout(android.view.View)
  checkLayoutParams            protected checkLayoutParams(android.view.ViewGroup$LayoutParams)
  generateDefaultLayoutParams  protected volatile generateDefaultLayoutParams()
  generateLayoutParams         public volatile generateLayoutParams(android.util.AttributeSet)
  generateLayoutParams         protected volatile generateLayoutParams(android.view.ViewGroup$LayoutParams)
  onDetachedFromWindow         protected onDetachedFromWindow()
  onHoverEvent                 public onHoverEvent(android.view.MotionEvent)
  onLayout                     protected onLayout(boolean,int,int,int,int)
  onMeasure                    protected onMeasure(int,int)
  onRestoreInstanceState       protected onRestoreInstanceState(android.os.Parcelable)
  onRtlPropertiesChanged       public onRtlPropertiesChanged(int)
  onSaveInstanceState          protected onSaveInstanceState()
  onTouchEvent                 public onTouchEvent(android.view.MotionEvent)

android.support.v7.widget.Toolbar$1      (be.brunoparmentier.apkshare.eval_dy$1)
===============================================================================
  x    public onMenuItemClick(android.view.MenuItem)

android.support.v7.widget.Toolbar$2      (be.brunoparmentier.apkshare.eval_dy$2)
===============================================================================
  run  public run()

android.support.v7.widget.Toolbar$3      (be.brunoparmentier.apkshare.eval_dy$3)
===============================================================================
  onClick  public onClick(android.view.View)

android.support.v7.widget.Toolbar$ExpandedActionViewMenuPresenter        (be.brunoparmentier.apkshare.eval_dy$z)
===============================================================================
  b    public setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback)
  c    public initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder)
  g    public getId()
  h    public onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)
  i    public onSaveInstanceState()
  j    public flagActionItems()
  l    public expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl)
  l    public onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder)
  q    public onRestoreInstanceState(android.os.Parcelable)
  s    public getMenuView(android.view.ViewGroup)
  v    public collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl)
  v    public updateMenuView(boolean)

android.support.v7.widget.Toolbar$IOException    (be.brunoparmentier.apkshare.eval_u8)
===============================================================================
  No methods

android.support.v7.widget.Toolbar$LayoutParams   (be.brunoparmentier.apkshare.eval_dy$j)
===============================================================================
  eval_a   copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams)

android.support.v7.widget.Toolbar$OnMenuItemClickListener        (be.brunoparmentier.apkshare.eval_dy$e)
===============================================================================
  b    public abstract onMenuItemClick(android.view.MenuItem)

android.support.v7.widget.Toolbar$SavedState     (be.brunoparmentier.apkshare.eval_dy$m)
===============================================================================
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v7.widget.Toolbar$SavedState$1   (be.brunoparmentier.apkshare.eval_dy$m$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v7.widget.Toolbar$SavedState$Exception   (be.brunoparmentier.apkshare.eval_m5)
===============================================================================
  No methods

android.support.v7.widget.helper.ItemTouchHelper (be.brunoparmentier.apkshare.eval_bl)
===============================================================================
  a        private obtainVelocityTracker()
  a        static access$400(android.support.v7.widget.helper.ItemTouchHelper)
  a        static access$900(android.support.v7.widget.helper.ItemTouchHelper,android.view.MotionEvent,int,int)
  b        public onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State)
  c        private initGestureDetector()
  c        private static hitTest(android.view.View,float,float,float,float)
  d        private swipeIfNecessary(android.support.v7.widget.RecyclerView$ViewHolder)
  d        private postDispatchSwipe(android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation,int)
  d        private findChildView(android.view.MotionEvent)
  e        static access$2302(android.support.v7.widget.helper.ItemTouchHelper,int)
  eval_s   static access$600(android.support.v7.widget.helper.ItemTouchHelper,android.view.MotionEvent)
  eval_v   private moveIfNecessary(android.support.v7.widget.RecyclerView$ViewHolder)
  eval_w   static access$1100(android.support.v7.widget.helper.ItemTouchHelper)
  f        static access$000(android.support.v7.widget.helper.ItemTouchHelper)
  g        static access$1600(android.support.v7.widget.helper.ItemTouchHelper)
  h        private findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder)
  i        private hasRunningRecoverAnim()
  i        private endRecoverAnimation(android.support.v7.widget.RecyclerView$ViewHolder,boolean)
  i        private findAnimation(android.view.MotionEvent)
  i        public onChildViewAttachedToWindow(android.view.View)
  j        private scrollIfNecessary()
  j        static access$700(android.support.v7.widget.helper.ItemTouchHelper,android.support.v7.widget.RecyclerView$ViewHolder,boolean)
  j        private getSelectedDxDy(float[])
  j        private checkSelectForSwipe(int,android.view.MotionEvent,int)
  k        static access$100(android.support.v7.widget.helper.ItemTouchHelper,android.support.v7.widget.RecyclerView$ViewHolder)
  l        public startSwipe(android.support.v7.widget.RecyclerView$ViewHolder)
  m        static access$800(android.support.v7.widget.helper.ItemTouchHelper,android.support.v7.widget.RecyclerView$ViewHolder,int)
  n        public getItemOffsets(android.graphics.Rect,android.view.View,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State)
  n        public attachToRecyclerView(android.support.v7.widget.RecyclerView)
  n        private findSwipedView(android.view.MotionEvent)
  o        static access$1500(android.support.v7.widget.helper.ItemTouchHelper,android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation,int)
  p        static access$300(android.support.v7.widget.helper.ItemTouchHelper)
  q        public startDrag(android.support.v7.widget.RecyclerView$ViewHolder)
  q        private checkHorizontalSwipe(android.support.v7.widget.RecyclerView$ViewHolder,int)
  r        private addChildDrawingOrderCallback()
  r        static access$2300(android.support.v7.widget.helper.ItemTouchHelper)
  r        private updateDxDy(android.view.MotionEvent,int,int)
  s        public onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State)
  t        private checkVerticalSwipe(android.support.v7.widget.RecyclerView$ViewHolder,int)
  u        private destroyCallbacks()
  w        private releaseVelocityTracker()
  w        static access$200(android.support.v7.widget.helper.ItemTouchHelper)
  x        private setupCallbacks()
  x        private select(android.support.v7.widget.RecyclerView$ViewHolder,int)
  x        static access$1800(android.support.v7.widget.helper.ItemTouchHelper)
  x        static access$1700(android.support.v7.widget.helper.ItemTouchHelper,android.view.View)
  x        public onChildViewDetachedFromWindow(android.view.View)
  y        static access$500(android.support.v7.widget.helper.ItemTouchHelper)
  y        static access$1000(android.support.v7.widget.helper.ItemTouchHelper,int,android.view.MotionEvent,int)
  z        static access$2400(android.support.v7.widget.helper.ItemTouchHelper,android.view.MotionEvent)
  z        private removeChildDrawingOrderCallbackIfNecessary(android.view.View)

android.support.v7.widget.helper.ItemTouchHelper$1       (be.brunoparmentier.apkshare.eval_bl$1)
===============================================================================
  run  public run()

android.support.v7.widget.helper.ItemTouchHelper$2       (be.brunoparmentier.apkshare.eval_bl$2)
===============================================================================
  h    public onInterceptTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent)
  l    public onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent)
  r    public onRequestDisallowInterceptTouchEvent(boolean)

android.support.v7.widget.helper.ItemTouchHelper$3       (be.brunoparmentier.apkshare.eval_bl$3)
===============================================================================
  i    public onAnimationEnd(android.support.v4.animation.ValueAnimatorCompat)

android.support.v7.widget.helper.ItemTouchHelper$4       (be.brunoparmentier.apkshare.eval_bl$4)
===============================================================================
  run  public run()

android.support.v7.widget.helper.ItemTouchHelper$5       (be.brunoparmentier.apkshare.eval_bl$5)
===============================================================================
  z    public onGetChildDrawingOrder(int,int)

android.support.v7.widget.helper.ItemTouchHelper$Callback        (be.brunoparmentier.apkshare.eval_bl$n)
===============================================================================
  a        public static makeFlag(int,int)
  c        private hasSwipeFlag(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder)
  c        public onMoved(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,int,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int)
  c        static access$2200(android.support.v7.widget.helper.ItemTouchHelper$Callback,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder)
  d        public isLongPressDragEnabled()
  e        private getMaxDragScroll(android.support.v7.widget.RecyclerView)
  e        static access$2100(android.support.v7.widget.helper.ItemTouchHelper$Callback,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder)
  eval_b   public interpolateOutOfBoundsScroll(android.support.v7.widget.RecyclerView,int,int,int,long)
  eval_e   public abstract onMove(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder)
  eval_m   public clearView(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder)
  eval_r   public onChildDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,float,float,int,boolean)
  eval_w   public convertToAbsoluteDirection(int,int)
  f        public abstract getMovementFlags(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder)
  g        private onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,float,float)
  g        public abstract onSwiped(android.support.v7.widget.RecyclerView$ViewHolder,int)
  h        public onChildDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,float,float,int,boolean)
  i        public getSwipeThreshold(android.support.v7.widget.RecyclerView$ViewHolder)
  j        public onSelectedChanged(android.support.v7.widget.RecyclerView$ViewHolder,int)
  k        public getBoundingBoxMargin()
  k        public static convertToRelativeDirection(int,int)
  l        private onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,float,float)
  n        public static getDefaultUIUtil()
  o        public static makeMovementFlags(int,int)
  p        static access$1300(android.support.v7.widget.helper.ItemTouchHelper$Callback,android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,float,float)
  q        public isItemViewSwipeEnabled()
  q        public getMoveThreshold(android.support.v7.widget.RecyclerView$ViewHolder)
  q        private hasDragFlag(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder)
  u        final getAbsoluteMovementFlags(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder)
  u        public canDropOver(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder)
  v        public chooseDropTarget(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,int)
  x        public getAnimationDuration(android.support.v7.widget.RecyclerView,int,float,float)
  x        static access$1400(android.support.v7.widget.helper.ItemTouchHelper$Callback,android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,float,float)

android.support.v7.widget.helper.ItemTouchHelper$Callback$1      (be.brunoparmentier.apkshare.eval_bl$n$1)
===============================================================================
  getInterpolation public getInterpolation(float)

android.support.v7.widget.helper.ItemTouchHelper$Callback$2      (be.brunoparmentier.apkshare.eval_bl$n$2)
===============================================================================
  getInterpolation public getInterpolation(float)

android.support.v7.widget.helper.ItemTouchHelper$Callback$ParseException (be.brunoparmentier.apkshare.eval_ts)
===============================================================================
  No methods

android.support.v7.widget.helper.ItemTouchHelper$IOException     (be.brunoparmentier.apkshare.eval_xu)
===============================================================================
  No methods

android.support.v7.widget.helper.ItemTouchHelper$ItemTouchHelperGestureListener  (be.brunoparmentier.apkshare.eval_bl$f)
===============================================================================
  onDown       public onDown(android.view.MotionEvent)
  onLongPress  public onLongPress(android.view.MotionEvent)

android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation        (be.brunoparmentier.apkshare.eval_bl$a)
===============================================================================
  d        public start()
  eval_e   public cancel()
  eval_o   public update()
  eval_w   static access$2000(android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation)
  g        static access$1900(android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation)
  h        public onAnimationRepeat(android.support.v4.animation.ValueAnimatorCompat)
  i        public onAnimationEnd(android.support.v4.animation.ValueAnimatorCompat)
  k        public setDuration(long)
  t        public onAnimationCancel(android.support.v4.animation.ValueAnimatorCompat)
  v        public onAnimationStart(android.support.v4.animation.ValueAnimatorCompat)
  x        public setFraction(float)

android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation$1      (be.brunoparmentier.apkshare.eval_bl$a$1)
===============================================================================
  u    public onAnimationUpdate(android.support.v4.animation.ValueAnimatorCompat)

android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation$NullPointerException   (be.brunoparmentier.apkshare.eval_bd)
===============================================================================
  No methods

android.support.v7.widget.helper.ItemTouchHelper$SimpleCallback  (be.brunoparmentier.apkshare.eval_bl$k)
===============================================================================
  f    public getMovementFlags(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder)
  g    public setDefaultDragDirs(int)
  t    public setDefaultSwipeDirs(int)
  w    public getSwipeDirs(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder)
  z    public getDragDirs(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder)

android.support.v7.widget.helper.ItemTouchHelper$ViewDropHandler (be.brunoparmentier.apkshare.eval_bl$m)
===============================================================================
  p    public abstract prepareForDrop(android.view.View,android.view.View,int,int)

android.support.v7.widget.helper.ItemTouchUIUtil (be.brunoparmentier.apkshare.eval_lg)
===============================================================================
  a    public abstract onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean)
  c    public abstract onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean)
  n    public abstract onSelected(android.view.View)
  z    public abstract clearView(android.view.View)

android.support.v7.widget.helper.ItemTouchUIUtil$IOException     (be.brunoparmentier.apkshare.eval_sy)
===============================================================================
  No methods

android.support.v7.widget.helper.ItemTouchUIUtilImpl     (be.brunoparmentier.apkshare.eval_vj)
===============================================================================
  No methods

android.support.v7.widget.helper.ItemTouchUIUtilImpl$Gingerbread (be.brunoparmentier.apkshare.eval_vj$b)
===============================================================================
  a    public onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean)
  c    public onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean)
  n    public onSelected(android.view.View)
  w    private draw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float)
  z    public clearView(android.view.View)

android.support.v7.widget.helper.ItemTouchUIUtilImpl$Honeycomb   (be.brunoparmentier.apkshare.eval_vj$v)
===============================================================================
  a    public onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean)
  c    public onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean)
  n    public onSelected(android.view.View)
  z    public clearView(android.view.View)

android.support.v7.widget.helper.ItemTouchUIUtilImpl$Lollipop    (be.brunoparmentier.apkshare.eval_vj$u)
===============================================================================
  c    public onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean)
  v    private findMaxElevation(android.support.v7.widget.RecyclerView,android.view.View)
  z    public clearView(android.view.View)

android.support.v7.widget.helper.ItemTouchUIUtilImpl$ParseException      (be.brunoparmentier.apkshare.eval_sp)
===============================================================================
  No methods

android.support.v7.widget.util.SortedListAdapterCallback (be.brunoparmentier.apkshare.eval_qe)
===============================================================================
  b    public onRemoved(int,int)
  d    public onMoved(int,int)
  h    public onInserted(int,int)
  w    public onChanged(int,int)

android.support.v7.widget.util.SortedListAdapterCallback$ArrayOutOfBoundsException       (be.brunoparmentier.apkshare.eval_y7)
===============================================================================
  No methods

be.brunoparmentier.apkshare.App  (be.brunoparmentier.apkshare.eval_pf)
===============================================================================
  d    public getApkPath()
  k    public getIcon()
  l    public getApkSize()
  q    public getName()

be.brunoparmentier.apkshare.App$1        (be.brunoparmentier.apkshare.eval_ym)
===============================================================================
  No methods

be.brunoparmentier.apkshare.App$ArrayOutOfBoundsException        (be.brunoparmentier.apkshare.eval_s7)
===============================================================================
  No methods

be.brunoparmentier.apkshare.AppAdapter   (be.brunoparmentier.apkshare.eval_su)
===============================================================================
  a    public onAttachedToRecyclerView(android.support.v7.widget.RecyclerView)
  a    public onBindViewHolder(be.brunoparmentier.apkshare.AppAdapter$AppViewHolder,int)
  h    public volatile onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)
  m    private getHumanReadableSize(long)
  o    public getItemCount()
  w    public onCreateViewHolder(android.view.ViewGroup,int)

be.brunoparmentier.apkshare.AppAdapter$1 (be.brunoparmentier.apkshare.eval_su$1)
===============================================================================
  onClick  public onClick(android.view.View)

be.brunoparmentier.apkshare.AppAdapter$2 (be.brunoparmentier.apkshare.eval_ib)
===============================================================================
  No methods

be.brunoparmentier.apkshare.AppAdapter$AppViewHolder     (be.brunoparmentier.apkshare.eval_su$t)
===============================================================================
  No methods

be.brunoparmentier.apkshare.AppAdapter$IOException       (be.brunoparmentier.apkshare.eval_ri)
===============================================================================
  No methods

be.brunoparmentier.apkshare.AppListActivity
===============================================================================
  onCreate                 protected onCreate(android.os.Bundle)
  onCreateOptionsMenu      public onCreateOptionsMenu(android.view.Menu)
  onOptionsItemSelected    public onOptionsItemSelected(android.view.MenuItem)

be.brunoparmentier.apkshare.AppListActivity$IOException  (be.brunoparmentier.apkshare.eval_c9)
===============================================================================
  No methods

be.brunoparmentier.apkshare.AppListActivityFragment
===============================================================================
  o    public onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)

be.brunoparmentier.apkshare.AppListActivityFragment$1
===============================================================================
  t        public compare(be.brunoparmentier.apkshare.App,be.brunoparmentier.apkshare.App)
  compare  public volatile compare(java.lang.Object,java.lang.Object)

be.brunoparmentier.apkshare.AppListActivityFragment$ArrayOutOfBoundsException    (be.brunoparmentier.apkshare.eval_d8)
===============================================================================
  No methods

be.brunoparmentier.apkshare.BuildConfig  (be.brunoparmentier.apkshare.eval_ee)
===============================================================================
  No methods

be.brunoparmentier.apkshare.BuildConfig$Exception        (be.brunoparmentier.apkshare.eval_jz)
===============================================================================
  No methods

be.brunoparmentier.apkshare.R    (be.brunoparmentier.apkshare.eval_c5)
===============================================================================
  No methods

be.brunoparmentier.apkshare.R$Exception  (be.brunoparmentier.apkshare.eval_pd)
===============================================================================
  No methods

be.brunoparmentier.apkshare.R$anim       (be.brunoparmentier.apkshare.eval_c5$m)
===============================================================================
  No methods

be.brunoparmentier.apkshare.R$attr       (be.brunoparmentier.apkshare.eval_c5$a)
===============================================================================
  No methods

be.brunoparmentier.apkshare.R$bool       (be.brunoparmentier.apkshare.eval_c5$i)
===============================================================================
  No methods

be.brunoparmentier.apkshare.R$color      (be.brunoparmentier.apkshare.eval_c5$eval_n)
===============================================================================
  No methods

be.brunoparmentier.apkshare.R$dimen      (be.brunoparmentier.apkshare.eval_c5$r)
===============================================================================
  No methods

be.brunoparmentier.apkshare.R$drawable   (be.brunoparmentier.apkshare.eval_c5$w)
===============================================================================
  No methods

be.brunoparmentier.apkshare.R$id (be.brunoparmentier.apkshare.eval_c5$y)
===============================================================================
  No methods

be.brunoparmentier.apkshare.R$integer    (be.brunoparmentier.apkshare.eval_c5$z)
===============================================================================
  No methods

be.brunoparmentier.apkshare.R$layout     (be.brunoparmentier.apkshare.eval_c5$eval_e)
===============================================================================
  No methods

be.brunoparmentier.apkshare.R$menu       (be.brunoparmentier.apkshare.eval_c5$eval_f)
===============================================================================
  No methods

be.brunoparmentier.apkshare.R$mipmap     (be.brunoparmentier.apkshare.eval_c5$b)
===============================================================================
  No methods

be.brunoparmentier.apkshare.R$string     (be.brunoparmentier.apkshare.eval_c5$g)
===============================================================================
  No methods

be.brunoparmentier.apkshare.R$style      (be.brunoparmentier.apkshare.eval_c5$v)
===============================================================================
  No methods

be.brunoparmentier.apkshare.R$styleable  (be.brunoparmentier.apkshare.eval_c5$h)
===============================================================================
  No methods

-------------------------------------------------------------------------------
Number of Fields : 6787
  Renamed to eval_t : 139 (2.0%)
  Renamed to eval_a : 134 (2.0%)
  Renamed to eval_p : 132 (1.9%)
  Renamed to eval_d : 131 (1.9%)
  Renamed to eval_j : 130 (1.9%)
  Renamed to eval_i : 129 (1.9%)
  Renamed to eval_x : 128 (1.9%)
  Renamed to eval_y : 128 (1.9%)
  Renamed to eval_z : 128 (1.9%)
  Renamed to eval_s : 127 (1.9%)

Number of Methods : 10810
  Renamed to d : 344 (3.2%)
  Renamed to z : 343 (3.2%)
  Renamed to l : 331 (3.1%)
  Renamed to n : 326 (3.0%)
  Renamed to c : 323 (3.0%)
  Renamed to a : 317 (2.9%)
  Renamed to y : 317 (2.9%)
  Renamed to f : 314 (2.9%)
  Renamed to r : 312 (2.9%)
  Renamed to u : 310 (2.9%)

