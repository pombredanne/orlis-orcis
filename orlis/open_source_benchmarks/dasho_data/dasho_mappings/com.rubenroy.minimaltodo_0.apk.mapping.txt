New Name                         Original Name
-------------------------------------------------------------------------------
com.rubenroy.minimaltodo.k       public final android.support.design.BuildConfig
com.rubenroy.minimaltodo.eval__  public android.support.design.internal.ParcelableSparseArray$IOException
com.rubenroy.minimaltodo.eval_a  public android.support.design.internal.ScrimInsetsFrameLayout$Exception
com.rubenroy.minimaltodo.eval_b  public android.support.design.internal.ParcelableSparseArray
com.rubenroy.minimaltodo.eval_c  public android.support.design.internal.NavigationSubMenu
com.rubenroy.minimaltodo.eval_d  public android.support.design.internal.NavigationMenuView
com.rubenroy.minimaltodo.eval_e  android.support.design.widget.AnimationUtils
com.rubenroy.minimaltodo.eval_f  public android.support.design.internal.NavigationMenuItemView
com.rubenroy.minimaltodo.eval_g  android.support.design.widget.CircularBorderDrawable
com.rubenroy.minimaltodo.eval_h  android.support.design.widget.CircularBorderDrawableLollipop
com.rubenroy.minimaltodo.eval_i  public android.support.design.widget.AppBarLayout$LayoutParams$NullPointerException
com.rubenroy.minimaltodo.eval_j  public android.support.design.internal.ScrimInsetsFrameLayout
com.rubenroy.minimaltodo.eval_l  public android.support.design.internal.NavigationSubMenu$Exception
com.rubenroy.minimaltodo.eval_m  public android.support.design.internal.ForegroundLinearLayout$Exception
com.rubenroy.minimaltodo.eval_n  public android.support.design.internal.NavigationMenuPresenter
com.rubenroy.minimaltodo.eval_o  public android.support.design.widget.AppBarLayout$ParseException
com.rubenroy.minimaltodo.eval_p  public android.support.design.widget.AppBarLayout$Behavior$SavedState$ParseException
com.rubenroy.minimaltodo.eval_q  public android.support.design.internal.NavigationMenuView$NullPointerException
com.rubenroy.minimaltodo.eval_r  public android.support.design.widget.AppBarLayout$Behavior$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_s  public android.support.design.internal.NavigationMenu$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_t  public android.support.design.internal.ForegroundLinearLayout
com.rubenroy.minimaltodo.eval_u  public android.support.design.internal.NavigationMenuPresenter$NullPointerException
com.rubenroy.minimaltodo.eval_v  public android.support.design.BuildConfig$Exception
com.rubenroy.minimaltodo.eval_w  public android.support.design.internal.NavigationMenu
com.rubenroy.minimaltodo.eval_x  public android.support.design.widget.AnimationUtils$Exception
com.rubenroy.minimaltodo.eval_y  public android.support.design.internal.NavigationMenuItemView$Exception
com.rubenroy.minimaltodo.eval_z  public android.support.design.widget.CircularBorderDrawable$ParseException
com.rubenroy.minimaltodo.eval__0 android.support.v4.widget.PopupWindowCompatKitKat
com.rubenroy.minimaltodo.eval__1 public abstract android.support.v4.widget.ExploreByTouchHelper
com.rubenroy.minimaltodo.eval__2 public android.support.v4.view.MotionEventCompat$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval__3 public android.support.design.widget.ViewUtils$Exception
com.rubenroy.minimaltodo.eval__4 public android.support.v4.content.res.TypedArrayUtils$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval__5 public android.support.v4.widget.PopupWindowCompat$IOException
com.rubenroy.minimaltodo.eval__6 public android.support.v4.util.Pair$IOException
com.rubenroy.minimaltodo.eval__7 public android.support.v4.content.WakefulBroadcastReceiver$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval__8 public android.support.design.widget.FloatingActionButtonEclairMr1$Exception
com.rubenroy.minimaltodo.eval__9 final android.support.v4.app.BackStackState
com.rubenroy.minimaltodo.eval___ public android.support.v4.view.NestedScrollingChildHelper$NullPointerException
com.rubenroy.minimaltodo.eval__a public android.support.v4.widget.PopupWindowCompatApi21$IOException
com.rubenroy.minimaltodo.eval__b public android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$NullPointerException
com.rubenroy.minimaltodo.eval__c public android.support.v4.os.AsyncTaskCompat
com.rubenroy.minimaltodo.eval__d android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi22
com.rubenroy.minimaltodo.eval__e public android.support.v4.view.ScaleGestureDetectorCompatKitKat$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval__f public android.support.v4.content.ContentResolverCompat$IOException
com.rubenroy.minimaltodo.eval__g public android.support.v4.media.MediaMetadataCompatApi21$Exception
com.rubenroy.minimaltodo.eval__h android.support.v4.view.ViewCompatJellybeanMr1
com.rubenroy.minimaltodo.eval__i public android.support.design.widget.ValueAnimatorCompat$Exception
com.rubenroy.minimaltodo.eval__j public android.support.v4.view.accessibility.AccessibilityRecordCompat
com.rubenroy.minimaltodo.eval__k public android.support.v4.widget.EdgeEffectCompat
com.rubenroy.minimaltodo.eval__l public android.support.v4.os.CancellationSignalCompatJellybean$NullPointerException
com.rubenroy.minimaltodo.eval__m android.support.v4.speech.tts.TextToSpeechICS
com.rubenroy.minimaltodo.eval__n public android.support.v4.app.FragmentManagerImpl$ParseException
com.rubenroy.minimaltodo.eval__o public android.support.v4.media.session.PlaybackStateCompat$ParseException
com.rubenroy.minimaltodo.eval__p public android.support.v4.media.routing.MediaRouterJellybean$IOException
com.rubenroy.minimaltodo.eval__q android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean
com.rubenroy.minimaltodo.eval__r android.support.v4.graphics.drawable.DrawableWrapperHoneycomb
com.rubenroy.minimaltodo.eval__s public abstract interface android.support.v4.text.TextDirectionHeuristicCompat
com.rubenroy.minimaltodo.eval__t public android.support.v4.widget.ListPopupWindowCompatKitKat$IOException
com.rubenroy.minimaltodo.eval__u public abstract android.support.v4.widget.CursorAdapter
com.rubenroy.minimaltodo.eval__v android.support.v4.os.ParcelableCompatCreatorHoneycombMR2
com.rubenroy.minimaltodo.eval__w public android.support.v7.app.ActionBarActivity$NullPointerException
com.rubenroy.minimaltodo.eval__x public android.support.v4.view.ViewPropertyAnimatorListener$ParseException
com.rubenroy.minimaltodo.eval__y public android.support.v4.media.session.MediaSessionCompat$QueueItem$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval__z public android.support.v4.content.pm.ActivityInfoCompat$IOException
com.rubenroy.minimaltodo.eval_a0 public android.support.v4.view.GestureDetectorCompat$NullPointerException
com.rubenroy.minimaltodo.eval_a1 public android.support.v4.app.Fragment$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_a2 public android.support.v7.app.AppCompatActivity
com.rubenroy.minimaltodo.eval_a3 public android.support.v4.view.animation.PathInterpolatorCompat$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_a4 public android.support.v4.widget.CursorFilter$IOException
com.rubenroy.minimaltodo.eval_a5 android.support.v4.provider.DocumentsContractApi19
com.rubenroy.minimaltodo.eval_a6 android.support.v4.widget.PopupWindowCompatApi23
com.rubenroy.minimaltodo.eval_a7 final android.support.design.widget.StateListAnimator
com.rubenroy.minimaltodo.eval_a8 public android.support.v4.widget.ContentLoadingProgressBar$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_a9 public android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$IOException
com.rubenroy.minimaltodo.eval_a_ public android.support.v4.app.ServiceCompat$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_aa android.support.v4.app.NoSaveStateFrameLayout
com.rubenroy.minimaltodo.eval_ab android.support.v4.view.ViewConfigurationCompatICS
com.rubenroy.minimaltodo.eval_ac android.support.v4.media.session.MediaSessionCompatApi21
com.rubenroy.minimaltodo.eval_ad public android.support.v4.widget.SlidingPaneLayout$SavedState$Exception
com.rubenroy.minimaltodo.eval_ae public android.support.v4.view.ViewCompatLollipop$ParseException
com.rubenroy.minimaltodo.eval_af public android.support.v4.util.Pair
com.rubenroy.minimaltodo.eval_ag public android.support.v7.app.AppCompatDelegateImplV7$5$IOException
com.rubenroy.minimaltodo.eval_ah public android.support.v4.app.FragmentManager$IOException
com.rubenroy.minimaltodo.eval_ai public android.support.v7.graphics.drawable.DrawableWrapper$ParseException
com.rubenroy.minimaltodo.eval_aj public android.support.v4.app.SuperNotCalledException$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_ak public android.support.v4.media.TransportMediator
com.rubenroy.minimaltodo.eval_al android.support.v4.view.ViewPropertyAnimatorCompatLollipop
com.rubenroy.minimaltodo.eval_am public android.support.v4.widget.PopupWindowCompatGingerbread$Exception
com.rubenroy.minimaltodo.eval_an public android.support.v4.media.session.IMediaSession$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_ao android.support.v4.view.ViewCompatGingerbread
com.rubenroy.minimaltodo.eval_ap public android.support.v4.widget.SlidingPaneLayout
com.rubenroy.minimaltodo.eval_aq public abstract interface android.support.v4.graphics.drawable.DrawableWrapper
com.rubenroy.minimaltodo.eval_ar public android.support.v4.app.ActivityOptionsCompat
com.rubenroy.minimaltodo.eval_as public android.support.v4.widget.NestedScrollView
com.rubenroy.minimaltodo.eval_at public android.support.v4.view.MarginLayoutParamsCompat$IOException
com.rubenroy.minimaltodo.eval_au public abstract android.support.v4.animation.AnimatorCompatHelper
com.rubenroy.minimaltodo.eval_av android.support.v4.net.ConnectivityManagerCompatGingerbread
com.rubenroy.minimaltodo.eval_aw android.support.v4.view.MenuItemCompatHoneycomb
com.rubenroy.minimaltodo.eval_ax public android.support.v4.app.ShareCompat$Exception
com.rubenroy.minimaltodo.eval_ay public android.support.v4.view.ViewPropertyAnimatorCompatJB$ParseException
com.rubenroy.minimaltodo.eval_az public android.support.v7.app.ActionBarActivity
com.rubenroy.minimaltodo.eval_b0 public android.support.v4.app.NotificationCompatApi21$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_b1 public android.support.design.widget.ViewUtilsLollipop$ParseException
com.rubenroy.minimaltodo.eval_b2 public android.support.v7.internal.VersionUtils
com.rubenroy.minimaltodo.eval_b3 abstract android.support.design.widget.FloatingActionButtonImpl
com.rubenroy.minimaltodo.eval_b4 public android.support.v4.view.ScaleGestureDetectorCompat$NullPointerException
com.rubenroy.minimaltodo.eval_b5 public android.support.v4.widget.DrawerLayout$IOException
com.rubenroy.minimaltodo.eval_b6 public android.support.v4.content.ExecutorCompatHoneycomb$NullPointerException
com.rubenroy.minimaltodo.eval_b7 public android.support.v4.net.ConnectivityManagerCompatGingerbread$Exception
com.rubenroy.minimaltodo.eval_b8 public android.support.design.widget.CollapsingToolbarLayout$IOException
com.rubenroy.minimaltodo.eval_b9 public android.support.v4.os.IResultReceiver$ParseException
com.rubenroy.minimaltodo.eval_b_ public android.support.v4.text.BidiFormatter$ParseException
com.rubenroy.minimaltodo.eval_ba public android.support.v4.graphics.drawable.DrawableCompat
com.rubenroy.minimaltodo.eval_bb public android.support.v4.os.AsyncTaskCompat$ParseException
com.rubenroy.minimaltodo.eval_bc public android.support.v7.app.ActionBarDrawerToggle
com.rubenroy.minimaltodo.eval_bd public abstract interface android.support.v4.animation.ValueAnimatorCompat
com.rubenroy.minimaltodo.eval_be public android.support.v4.app.ActionBarDrawerToggleJellybeanMR2$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_bf android.support.v4.content.IntentCompatHoneycomb
com.rubenroy.minimaltodo.eval_bg public android.support.v4.graphics.drawable.DrawableWrapper$ParseException
com.rubenroy.minimaltodo.eval_bh public android.support.v4.app.FragmentContainer$NullPointerException
com.rubenroy.minimaltodo.eval_bi public android.support.v4.app.NotificationCompatIceCreamSandwich$ParseException
com.rubenroy.minimaltodo.eval_bj public android.support.v4.app.FragmentController$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_bk public android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$ParseException
com.rubenroy.minimaltodo.eval_bl public android.support.v4.os.ParcelableCompatCreatorCallbacks$Exception
com.rubenroy.minimaltodo.eval_bm public android.support.v4.view.animation.FastOutSlowInInterpolator
com.rubenroy.minimaltodo.eval_bn public android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory
com.rubenroy.minimaltodo.eval_bo android.support.design.widget.SnackbarManager
com.rubenroy.minimaltodo.eval_bp android.support.design.widget.ShadowDrawableWrapper
com.rubenroy.minimaltodo.eval_bq android.support.design.widget.ValueAnimatorCompatImplEclairMr1
com.rubenroy.minimaltodo.eval_br public android.support.v4.internal.view.SupportSubMenu$ParseException
com.rubenroy.minimaltodo.eval_bs public android.support.v4.content.res.ResourcesCompatApi21$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_bt public android.support.v4.widget.TextViewCompatJbMr1$NullPointerException
com.rubenroy.minimaltodo.eval_bu public android.support.v4.media.TransportMediator$ParseException
com.rubenroy.minimaltodo.eval_bv public android.support.v4.media.MediaDescriptionCompat$ParseException
com.rubenroy.minimaltodo.eval_bw public android.support.v4.view.accessibility.AccessibilityWindowInfoCompat$ParseException
com.rubenroy.minimaltodo.eval_bx public abstract android.support.v13.app.FragmentPagerAdapter
com.rubenroy.minimaltodo.eval_by android.support.v4.media.MediaDescriptionCompatApi21
com.rubenroy.minimaltodo.eval_bz android.support.v4.view.ViewParentCompatLollipop
com.rubenroy.minimaltodo.eval_c0 android.support.design.widget.ViewGroupUtilsHoneycomb
com.rubenroy.minimaltodo.eval_c1 android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1
com.rubenroy.minimaltodo.eval_c2 android.support.v4.media.routing.MediaRouterJellybeanMr1
com.rubenroy.minimaltodo.eval_c3 public android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$NullPointerException
com.rubenroy.minimaltodo.eval_c4 android.support.v4.view.LayoutInflaterCompatHC
com.rubenroy.minimaltodo.eval_c5 public abstract interface android.support.v4.view.ScrollingView
com.rubenroy.minimaltodo.eval_c6 public android.support.v4.widget.ListPopupWindowCompat$ParseException
com.rubenroy.minimaltodo.eval_c7 public android.support.v4.app.INotificationSideChannel$Stub$ParseException
com.rubenroy.minimaltodo.eval_c8 public android.support.v4.view.animation.FastOutLinearInInterpolator
com.rubenroy.minimaltodo.eval_c9 public android.support.v4.view.ViewPropertyAnimatorCompatICS$IOException
com.rubenroy.minimaltodo.eval_c_ public abstract android.support.v4.media.VolumeProviderCompat
com.rubenroy.minimaltodo.eval_ca public android.support.v4.os.ResultReceiver
com.rubenroy.minimaltodo.eval_cb public android.support.v4.view.MotionEventCompatGingerbread$ParseException
com.rubenroy.minimaltodo.eval_cc public android.support.v4.view.NestedScrollingParent$NullPointerException
com.rubenroy.minimaltodo.eval_cd public android.support.v4.hardware.fingerprint.FingerprintManagerCompat$Api23FingerprintManagerCompatImpl$IOException
com.rubenroy.minimaltodo.eval_ce public android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$IOException
com.rubenroy.minimaltodo.eval_cf public android.support.v4.app.ShareCompatICS$ParseException
com.rubenroy.minimaltodo.eval_cg android.support.v4.content.ContextCompatHoneycomb
com.rubenroy.minimaltodo.eval_ch public android.support.v4.view.animation.FastOutLinearInInterpolator$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_ci public android.support.v4.view.ViewGroupCompatLollipop$ParseException
com.rubenroy.minimaltodo.eval_cj public abstract interface android.support.v4.view.TintableBackgroundView
com.rubenroy.minimaltodo.eval_ck public android.support.v4.view.KeyEventCompatEclair$Exception
com.rubenroy.minimaltodo.eval_cl final android.support.v4.app.BackStackRecord
com.rubenroy.minimaltodo.eval_cm android.support.v4.view.animation.PathInterpolatorCompatBase
com.rubenroy.minimaltodo.eval_cn public android.support.v4.util.DebugUtils$Exception
com.rubenroy.minimaltodo.eval_co public android.support.v4.media.RatingCompat$ParseException
com.rubenroy.minimaltodo.eval_cp public android.support.v4.media.VolumeProviderCompatApi21$NullPointerException
com.rubenroy.minimaltodo.eval_cq public android.support.design.widget.SwipeDismissBehavior$NullPointerException
com.rubenroy.minimaltodo.eval_cr public android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$ParseException
com.rubenroy.minimaltodo.eval_cs public android.support.v4.app.NotificationCompatSideChannelService$Exception
com.rubenroy.minimaltodo.eval_ct public android.support.v4.view.LayoutInflaterCompatHC$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_cu public android.support.v4.view.PagerTitleStripIcs$ParseException
com.rubenroy.minimaltodo.eval_cv public android.support.v4.content.ContextCompatFroyo$NullPointerException
com.rubenroy.minimaltodo.eval_cw android.support.v4.graphics.drawable.DrawableCompatJellybeanMr1
com.rubenroy.minimaltodo.eval_cx public android.support.v4.os.EnvironmentCompat$Exception
com.rubenroy.minimaltodo.eval_cy public android.support.v7.internal.view.StandaloneActionMode
com.rubenroy.minimaltodo.eval_cz public android.support.v4.view.MenuItemCompat$IOException
com.rubenroy.minimaltodo.eval_d0 android.support.v4.widget.CursorFilter
com.rubenroy.minimaltodo.eval_d1 android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs
com.rubenroy.minimaltodo.eval_d2 public android.support.v4.content.ContentResolverCompat
com.rubenroy.minimaltodo.eval_d3 android.support.v7.app.AlertController
com.rubenroy.minimaltodo.eval_d4 android.support.v4.app.ActivityCompatJB
com.rubenroy.minimaltodo.eval_d5 public android.support.v7.internal.app.ToolbarActionBar$IOException
com.rubenroy.minimaltodo.eval_d6 android.support.v4.view.ViewCompatJellybeanMr2
com.rubenroy.minimaltodo.eval_d7 android.support.v4.widget.SearchViewCompatHoneycomb
com.rubenroy.minimaltodo.eval_d8 public android.support.v4.app.ActionBarDrawerToggle$Exception
com.rubenroy.minimaltodo.eval_d9 public abstract android.support.v4.app.FragmentStatePagerAdapter
com.rubenroy.minimaltodo.eval_d_ public android.support.v4.app.AppOpsManagerCompat23$Exception
com.rubenroy.minimaltodo.eval_da public android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$Exception
com.rubenroy.minimaltodo.eval_db public android.support.v4.widget.EdgeEffectCompat$ParseException
com.rubenroy.minimaltodo.eval_dc android.support.v4.media.session.PlaybackStateCompatApi22
com.rubenroy.minimaltodo.eval_dd public android.support.v4.view.ViewPropertyAnimatorListenerAdapter
com.rubenroy.minimaltodo.eval_de public android.support.v4.media.session.IMediaControllerCallback$Stub$ParseException
com.rubenroy.minimaltodo.eval_df public android.support.v4.media.session.MediaSessionCompat$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_dg public android.support.v4.media.MediaDescriptionCompatApi21$ParseException
com.rubenroy.minimaltodo.eval_dh public android.support.v4.view.NestedScrollingChildHelper
com.rubenroy.minimaltodo.eval_di public android.support.v4.view.ViewPropertyAnimatorCompatLollipop$IOException
com.rubenroy.minimaltodo.eval_dj android.support.design.widget.ViewUtilsLollipop
com.rubenroy.minimaltodo.eval_dk public android.support.v4.media.session.MediaSessionCompat
com.rubenroy.minimaltodo.eval_dl android.support.v4.app.ShareCompatJB
com.rubenroy.minimaltodo.eval_dm public android.support.v4.app.BundleCompatJellybeanMR2$ParseException
com.rubenroy.minimaltodo.eval_dn public android.support.v7.app.AppCompatDialog$IOException
com.rubenroy.minimaltodo.eval_do public android.support.v4.app.RemoteInput
com.rubenroy.minimaltodo.eval_dp android.support.v4.speech.tts.TextToSpeechICSMR1
com.rubenroy.minimaltodo.eval_dq public android.support.v4.app.ActivityCompatApi23$ParseException
com.rubenroy.minimaltodo.eval_dr public android.support.v4.view.accessibility.AccessibilityNodeInfoCompat
com.rubenroy.minimaltodo.eval_ds public android.support.v4.net.ConnectivityManagerCompatHoneycombMR2$NullPointerException
com.rubenroy.minimaltodo.eval_dt public android.support.v7.app.AppCompatDialogFragment$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_du public android.support.v4.content.SharedPreferencesCompat
com.rubenroy.minimaltodo.eval_dv android.support.v4.view.accessibility.AccessibilityManagerCompatIcs
com.rubenroy.minimaltodo.eval_dw android.support.v4.media.RatingCompatApi21
com.rubenroy.minimaltodo.eval_dx android.support.v4.view.ViewPropertyAnimatorCompatJB
com.rubenroy.minimaltodo.eval_dy public abstract interface android.support.v4.internal.view.SupportMenuItem
com.rubenroy.minimaltodo.eval_dz public android.support.v4.media.TransportStateListener
com.rubenroy.minimaltodo.eval_e0 public android.support.v4.provider.SingleDocumentFile$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_e1 public android.support.v4.text.ICUCompatIcs$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_e2 public android.support.v4.widget.ScrollerCompatGingerbread$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_e3 public android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2$ParseException
com.rubenroy.minimaltodo.eval_e4 android.support.v4.view.VelocityTrackerCompatHoneycomb
com.rubenroy.minimaltodo.eval_e5 public android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$NullPointerException
com.rubenroy.minimaltodo.eval_e6 android.support.v4.app.RemoteInputCompatBase
com.rubenroy.minimaltodo.eval_e7 public android.support.v4.widget.ScrollerCompat$NullPointerException
com.rubenroy.minimaltodo.eval_e8 public android.support.design.widget.MathUtils$Exception
com.rubenroy.minimaltodo.eval_e9 public abstract interface android.support.v4.view.OnApplyWindowInsetsListener
com.rubenroy.minimaltodo.eval_e_ public abstract android.support.v4.view.ActionProvider
com.rubenroy.minimaltodo.eval_ea public android.support.v7.app.ActionBar$ParseException
com.rubenroy.minimaltodo.eval_eb public android.support.v4.media.session.MediaButtonReceiver$ParseException
com.rubenroy.minimaltodo.eval_ec public android.support.v4.view.OnApplyWindowInsetsListener$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_ed public android.support.v4.app.NotificationCompatGingerbread$ParseException
com.rubenroy.minimaltodo.eval_ee public android.support.design.widget.TextInputLayout$NullPointerException
com.rubenroy.minimaltodo.eval_ef public android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$NullPointerException
com.rubenroy.minimaltodo.eval_eg public android.support.v4.app.NotificationCompat$CarExtender$IOException
com.rubenroy.minimaltodo.eval_eh public android.support.v4.view.ViewCompatJellybeanMr1$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_ei public android.support.v4.widget.SwipeProgressBar$ParseException
com.rubenroy.minimaltodo.eval_ej public android.support.v7.graphics.drawable.DrawableUtils$NullPointerException
com.rubenroy.minimaltodo.eval_ek public android.support.v7.graphics.drawable.DrawableWrapper
com.rubenroy.minimaltodo.eval_el public android.support.v4.animation.AnimatorListenerCompat$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_em public android.support.v4.graphics.drawable.DrawableWrapperHoneycomb$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_en public android.support.v7.app.ActionBarDrawerToggleHoneycomb$IOException
com.rubenroy.minimaltodo.eval_eo public android.support.v4.view.MotionEventCompatEclair$ParseException
com.rubenroy.minimaltodo.eval_ep abstract android.support.v7.app.AppCompatDelegateImplBase
com.rubenroy.minimaltodo.eval_eq public android.support.v4.view.ViewCompatHC$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_er android.support.v4.print.PrintHelperKitkat
com.rubenroy.minimaltodo.eval_es public android.support.v4.view.GestureDetectorCompat
com.rubenroy.minimaltodo.eval_et public android.support.v4.content.ParallelExecutorCompat
com.rubenroy.minimaltodo.eval_eu android.support.v4.provider.RawDocumentFile
com.rubenroy.minimaltodo.eval_ev public android.support.v4.widget.ScrollerCompatIcs$IOException
com.rubenroy.minimaltodo.eval_ew android.support.v4.view.LayoutInflaterCompatLollipop
com.rubenroy.minimaltodo.eval_ex android.support.v4.view.ViewCompatHC
com.rubenroy.minimaltodo.eval_ey android.support.v4.provider.SingleDocumentFile
com.rubenroy.minimaltodo.eval_ez public android.support.v4.view.ViewPager$SavedState$Exception
com.rubenroy.minimaltodo.eval_f0 public android.support.v4.view.MenuCompat$Exception
com.rubenroy.minimaltodo.eval_f1 public android.support.v4.graphics.BitmapCompat
com.rubenroy.minimaltodo.eval_f2 public android.support.design.widget.HeaderBehavior$Exception
com.rubenroy.minimaltodo.eval_f3 public android.support.v4.media.session.MediaControllerCompatApi21$Exception
com.rubenroy.minimaltodo.eval_f4 public android.support.v4.view.accessibility.AccessibilityManagerCompat
com.rubenroy.minimaltodo.eval_f5 public final android.support.v4.util.CircularArray
com.rubenroy.minimaltodo.eval_f6 public android.support.v4.app.ActivityCompat
com.rubenroy.minimaltodo.eval_f7 public android.support.v4.media.IMediaBrowserServiceCompatCallbacks$NullPointerException
com.rubenroy.minimaltodo.eval_f8 public abstract android.support.v4.media.TransportPerformer
com.rubenroy.minimaltodo.eval_f9 public android.support.v4.view.accessibility.AccessibilityEventCompatKitKat$IOException
com.rubenroy.minimaltodo.eval_f_ public android.support.v4.content.IntentCompat$Exception
com.rubenroy.minimaltodo.eval_fa public android.support.v4.os.ResultReceiver$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_fb public android.support.v4.view.KeyEventCompatHoneycomb$ParseException
com.rubenroy.minimaltodo.eval_fc android.support.v7.app.AppCompatDelegateImplV23
com.rubenroy.minimaltodo.eval_fd public android.support.v4.content.IntentCompatHoneycomb$IOException
com.rubenroy.minimaltodo.eval_fe public android.support.v4.app.ListFragment$NullPointerException
com.rubenroy.minimaltodo.eval_ff public android.support.v4.graphics.drawable.DrawableCompatApi23$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_fg final android.support.v4.app.FragmentState
com.rubenroy.minimaltodo.eval_fh public android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi22$NullPointerException
com.rubenroy.minimaltodo.eval_fi public android.support.v4.app.NotificationManagerCompatIceCreamSandwich$Exception
com.rubenroy.minimaltodo.eval_fj public android.support.v7.app.AppCompatCallback$NullPointerException
com.rubenroy.minimaltodo.eval_fk public android.support.v4.graphics.drawable.DrawableCompatLollipop$Exception
com.rubenroy.minimaltodo.eval_fl public android.support.v7.internal.view.ActionBarPolicy$IOException
com.rubenroy.minimaltodo.eval_fm public android.support.v4.view.KeyEventCompat
com.rubenroy.minimaltodo.eval_fn public android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_fo public android.support.v4.media.TransportStateListener$ParseException
com.rubenroy.minimaltodo.eval_fp public android.support.v4.text.ICUCompat
com.rubenroy.minimaltodo.eval_fq public android.support.v4.graphics.drawable.DrawableCompatJellybeanMr1$IOException
com.rubenroy.minimaltodo.eval_fr public android.support.v4.app.NotificationManagerCompat
com.rubenroy.minimaltodo.eval_fs public android.support.v4.graphics.drawable.RoundedBitmapDrawable21$NullPointerException
com.rubenroy.minimaltodo.eval_ft public android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$ParseException
com.rubenroy.minimaltodo.eval_fu android.support.v4.app.RemoteInputCompatApi20
com.rubenroy.minimaltodo.eval_fv public android.support.v4.view.ViewPropertyAnimatorUpdateListener$IOException
com.rubenroy.minimaltodo.eval_fw android.support.v4.graphics.drawable.DrawableCompatKitKat
com.rubenroy.minimaltodo.eval_fx public android.support.v4.media.TransportMediatorCallback$NullPointerException
com.rubenroy.minimaltodo.eval_fy public android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$Exception
com.rubenroy.minimaltodo.eval_fz android.support.design.widget.ViewGroupUtils
com.rubenroy.minimaltodo.eval_g0 public android.support.v7.internal.app.NavItemSelectedListener$NullPointerException
com.rubenroy.minimaltodo.eval_g1 public android.support.v4.app.DialogFragment$ParseException
com.rubenroy.minimaltodo.eval_g2 public android.support.v4.media.MediaBrowserServiceCompat$ServiceBinder$Exception
com.rubenroy.minimaltodo.eval_g3 android.support.v4.graphics.drawable.DrawableCompatApi22
com.rubenroy.minimaltodo.eval_g4 public android.support.v4.util.ArrayMap
com.rubenroy.minimaltodo.eval_g5 public android.support.v4.media.MediaBrowserServiceCompat$NullPointerException
com.rubenroy.minimaltodo.eval_g6 abstract android.support.v4.app.BaseFragmentActivityDonut
com.rubenroy.minimaltodo.eval_g7 public android.support.v7.internal.app.AppCompatViewInflater
com.rubenroy.minimaltodo.eval_g8 public android.support.v7.app.AppCompatDelegateImplV7$ActionModeCallbackWrapperV7$Exception
com.rubenroy.minimaltodo.eval_g9 public android.support.v4.view.accessibility.AccessibilityNodeProviderCompat
com.rubenroy.minimaltodo.eval_g_ public android.support.v4.os.EnvironmentCompat
com.rubenroy.minimaltodo.eval_ga public android.support.v4.view.NestedScrollingParentHelper$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_gb public android.support.design.widget.Snackbar$Callback$ParseException
com.rubenroy.minimaltodo.eval_gc public android.support.v4.view.accessibility.AccessibilityManagerCompat$Exception
com.rubenroy.minimaltodo.eval_gd public android.support.v4.text.TextUtilsCompatJellybeanMr1$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_ge public abstract android.support.v4.hardware.display.DisplayManagerCompat
com.rubenroy.minimaltodo.eval_gf public android.support.v4.view.animation.PathInterpolatorCompat
com.rubenroy.minimaltodo.eval_gg android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1
com.rubenroy.minimaltodo.eval_gh public abstract android.support.v4.app.FragmentPagerAdapter
com.rubenroy.minimaltodo.eval_gi public android.support.v7.graphics.drawable.DrawerArrowDrawable$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_gj public final android.support.v4.media.session.PlaybackStateCompat
com.rubenroy.minimaltodo.eval_gk public android.support.v4.content.EditorCompatGingerbread$NullPointerException
com.rubenroy.minimaltodo.eval_gl public android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState$SavedState$NullPointerException
com.rubenroy.minimaltodo.eval_gm public android.support.v4.view.accessibility.AccessibilityRecordCompatIcs$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_gn public android.support.v13.BuildConfig$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_go public android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_gp public android.support.v4.app.NavUtilsJB$IOException
com.rubenroy.minimaltodo.eval_gq public android.support.v4.content.SharedPreferencesCompat$NullPointerException
com.rubenroy.minimaltodo.eval_gr public final android.support.v4.BuildConfig
com.rubenroy.minimaltodo.eval_gs public android.support.v4.view.animation.PathInterpolatorCompatBase$NullPointerException
com.rubenroy.minimaltodo.eval_gt android.support.v13.app.FragmentCompatICSMR1
com.rubenroy.minimaltodo.eval_gu android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2
com.rubenroy.minimaltodo.eval_gv public android.support.v4.view.accessibility.AccessibilityRecordCompat$IOException
com.rubenroy.minimaltodo.eval_gw public android.support.v4.app.SharedElementCallback$Exception
com.rubenroy.minimaltodo.eval_gx abstract interface android.support.design.widget.CoordinatorLayoutInsetsHelper
com.rubenroy.minimaltodo.eval_gy public android.support.v4.app.NoSaveStateFrameLayout$NullPointerException
com.rubenroy.minimaltodo.eval_gz public android.support.v4.widget.CursorAdapter$Exception
com.rubenroy.minimaltodo.eval_h0 android.support.v4.os.CancellationSignalCompatJellybean
com.rubenroy.minimaltodo.eval_h1 public android.support.v4.net.ConnectivityManagerCompat$IOException
com.rubenroy.minimaltodo.eval_h2 android.support.v4.app.ActivityCompat22
com.rubenroy.minimaltodo.eval_h3 public android.support.v4.media.session.MediaSessionCompat$Callback$NullPointerException
com.rubenroy.minimaltodo.eval_h4 public android.support.v4.content.CursorLoader$Exception
com.rubenroy.minimaltodo.eval_h5 android.support.v4.graphics.drawable.RoundedBitmapDrawable21
com.rubenroy.minimaltodo.eval_h6 public android.support.v4.app.NavUtils
com.rubenroy.minimaltodo.eval_h7 android.support.v4.widget.ListPopupWindowCompatKitKat
com.rubenroy.minimaltodo.eval_h8 public android.support.v4.app.NotificationCompatApi20$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_h9 public android.support.v4.view.PagerTitleStrip$Exception
com.rubenroy.minimaltodo.eval_h_ public android.support.v4.provider.RawDocumentFile$IOException
com.rubenroy.minimaltodo.eval_ha public abstract android.support.v4.app.FragmentHostCallback
com.rubenroy.minimaltodo.eval_hb public android.support.v4.view.ViewGroupCompatIcs$ParseException
com.rubenroy.minimaltodo.eval_hc public android.support.v7.app.AlertController$IOException
com.rubenroy.minimaltodo.eval_hd public android.support.v4.util.SimpleArrayMap$IOException
com.rubenroy.minimaltodo.eval_he public android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr1$ParseException
com.rubenroy.minimaltodo.eval_hf public android.support.v4.app.INotificationSideChannel$ParseException
com.rubenroy.minimaltodo.eval_hg public abstract interface android.support.v4.media.session.IMediaSession
com.rubenroy.minimaltodo.eval_hh android.support.v4.app.BundleCompatJellybeanMR2
com.rubenroy.minimaltodo.eval_hi public android.support.v4.widget.NestedScrollView$ParseException
com.rubenroy.minimaltodo.eval_hj public android.support.v4.view.AccessibilityDelegateCompat$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_hk public android.support.v4.internal.view.SupportMenuItem$IOException
com.rubenroy.minimaltodo.eval_hl public android.support.v4.app.BundleCompatDonut$NullPointerException
com.rubenroy.minimaltodo.eval_hm public final android.support.v4.app.NotificationCompatExtras
com.rubenroy.minimaltodo.eval_hn public android.support.v4.content.FileProvider$Exception
com.rubenroy.minimaltodo.eval_ho public android.support.v4.view.ViewCompatJB$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_hp public android.support.v7.appcompat.BuildConfig$NullPointerException
com.rubenroy.minimaltodo.eval_hq public android.support.v4.content.res.ResourcesCompatIcsMr1$ParseException
com.rubenroy.minimaltodo.eval_hr android.support.v4.content.EditorCompatGingerbread
com.rubenroy.minimaltodo.eval_hs public android.support.v4.content.pm.ActivityInfoCompat
com.rubenroy.minimaltodo.eval_ht public android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$IOException
com.rubenroy.minimaltodo.eval_hu public abstract interface android.support.v4.media.IMediaBrowserServiceCompatCallbacks
com.rubenroy.minimaltodo.eval_hv public android.support.v4.media.session.MediaControllerCompatApi23$Exception
com.rubenroy.minimaltodo.eval_hw public abstract interface android.support.v7.app.AppCompatCallback
com.rubenroy.minimaltodo.eval_hx public android.support.v4.animation.AnimatorCompatHelper$Exception
com.rubenroy.minimaltodo.eval_hy android.support.v4.view.GravityCompatJellybeanMr1
com.rubenroy.minimaltodo.eval_hz android.support.v4.view.accessibility.AccessibilityWindowInfoCompatApi21
com.rubenroy.minimaltodo.eval_i0 public android.support.v7.app.AppCompatDialog
com.rubenroy.minimaltodo.eval_i1 public android.support.v4.view.animation.LookupTableInterpolator$ParseException
com.rubenroy.minimaltodo.eval_i2 android.support.v4.view.ViewCompatLollipop
com.rubenroy.minimaltodo.eval_i3 public android.support.v4.view.ViewPropertyAnimatorCompat$NullPointerException
com.rubenroy.minimaltodo.eval_i4 public android.support.v4.os.TraceJellybeanMR2$Exception
com.rubenroy.minimaltodo.eval_i5 android.support.v4.app.ActivityOptionsCompat21
com.rubenroy.minimaltodo.eval_i6 android.support.v4.content.ContextCompatApi21
com.rubenroy.minimaltodo.eval_i7 public android.support.v4.app.AppOpsManagerCompat23
com.rubenroy.minimaltodo.eval_i8 android.support.v4.view.MotionEventCompatHoneycombMr1
com.rubenroy.minimaltodo.eval_i9 public android.support.v7.internal.app.AppCompatViewInflater$IOException
com.rubenroy.minimaltodo.eval_i_ public android.support.v4.view.GravityCompat$ParseException
com.rubenroy.minimaltodo.eval_ia public android.support.v13.app.FragmentCompat$IOException
com.rubenroy.minimaltodo.eval_ib android.support.v4.app.TaskStackBuilderJellybean
com.rubenroy.minimaltodo.eval_ic public android.support.v4.widget.CircleImageView$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_id public android.support.v4.view.ViewCompatICSMr1$NullPointerException
com.rubenroy.minimaltodo.eval_ie public android.support.v4.view.ViewCompat$Exception
com.rubenroy.minimaltodo.eval_if public android.support.v4.app.ActivityOptionsCompatJB$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_ig public android.support.v13.app.FragmentCompat$BaseFragmentCompatImpl$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_ih public android.support.v4.app.FragmentState$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_ii public android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21$NullPointerException
com.rubenroy.minimaltodo.eval_ij public android.support.v7.internal.transition.ActionBarTransition$IOException
com.rubenroy.minimaltodo.eval_ik public android.support.v4.app.NotificationCompat
com.rubenroy.minimaltodo.eval_il public android.support.v4.app.BundleCompat
com.rubenroy.minimaltodo.eval_im public abstract android.support.v7.app.AppCompatDelegate
com.rubenroy.minimaltodo.eval_in public android.support.v4.media.session.MediaSessionCompatApi8$NullPointerException
com.rubenroy.minimaltodo.eval_io android.support.v4.view.accessibility.AccessibilityEventCompatKitKat
com.rubenroy.minimaltodo.eval_ip public android.support.design.widget.ViewGroupUtils$Exception
com.rubenroy.minimaltodo.eval_iq public android.support.v4.view.LayoutInflaterFactory$NullPointerException
com.rubenroy.minimaltodo.eval_ir public abstract android.support.v4.app.SharedElementCallback
com.rubenroy.minimaltodo.eval_is android.support.v4.app.ActivityCompatHoneycomb
com.rubenroy.minimaltodo.eval_it public android.support.v13.app.FragmentCompat
com.rubenroy.minimaltodo.eval_iu android.support.v4.content.ContextCompatJellybean
com.rubenroy.minimaltodo.eval_iv public android.support.v4.view.ViewGroupCompat$Exception
com.rubenroy.minimaltodo.eval_iw public android.support.v4.provider.DocumentsContractApi21$NullPointerException
com.rubenroy.minimaltodo.eval_ix public android.support.v4.view.accessibility.AccessibilityEventCompat
com.rubenroy.minimaltodo.eval_iy public android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs$IOException
com.rubenroy.minimaltodo.eval_iz public final android.support.v4.print.PrintHelper
com.rubenroy.minimaltodo.eval_j0 public android.support.v4.view.ViewConfigurationCompat
com.rubenroy.minimaltodo.eval_j1 android.support.v7.app.AppCompatDelegateImplV14
com.rubenroy.minimaltodo.eval_j2 public android.support.v4.util.CircularArray$ParseException
com.rubenroy.minimaltodo.eval_j3 public android.support.v4.view.ViewParentCompatKitKat$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_j4 public android.support.design.widget.TabLayout$SlidingTabStrip$NullPointerException
com.rubenroy.minimaltodo.eval_j5 android.support.v4.media.session.PlaybackStateCompatApi21
com.rubenroy.minimaltodo.eval_j6 android.support.v4.media.session.MediaSessionCompatApi14
com.rubenroy.minimaltodo.eval_j7 android.support.v4.view.accessibility.AccessibilityEventCompatIcs
com.rubenroy.minimaltodo.eval_j8 final android.support.v4.widget.SwipeProgressBar
com.rubenroy.minimaltodo.eval_j9 public android.support.v4.view.ViewGroupCompatHC$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_j_ public android.support.v4.view.ViewCompatICS$ParseException
com.rubenroy.minimaltodo.eval_ja public android.support.v4.graphics.BitmapCompatJellybeanMR2$ParseException
com.rubenroy.minimaltodo.eval_jb public android.support.v4.os.ParcelableCompat$IOException
com.rubenroy.minimaltodo.eval_jc android.support.v4.media.session.MediaSessionCompatApi18
com.rubenroy.minimaltodo.eval_jd public android.support.design.widget.ShadowDrawableWrapper$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_je android.support.v4.media.VolumeProviderCompatApi21
com.rubenroy.minimaltodo.eval_jf public android.support.v4.provider.DocumentsContractApi19$NullPointerException
com.rubenroy.minimaltodo.eval_jg public android.support.v4.media.IMediaBrowserServiceCompat$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_jh public android.support.v4.media.session.MediaSessionCompatApi18$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_ji android.support.v4.view.ViewGroupCompatHC
com.rubenroy.minimaltodo.eval_jj android.support.v4.widget.TextViewCompatDonut
com.rubenroy.minimaltodo.eval_jk public abstract interface android.support.v4.media.session.IMediaControllerCallback
com.rubenroy.minimaltodo.eval_jl public android.support.v4.view.ViewParentCompat$NullPointerException
com.rubenroy.minimaltodo.eval_jm public android.support.v4.graphics.drawable.RoundedBitmapDrawable$IOException
com.rubenroy.minimaltodo.eval_jn abstract interface android.support.v4.media.TransportMediatorCallback
com.rubenroy.minimaltodo.eval_jo android.support.v4.media.session.MediaSessionCompatApi22
com.rubenroy.minimaltodo.eval_jp android.support.v4.media.TransportMediatorJellybeanMR2
com.rubenroy.minimaltodo.eval_jq public android.support.v4.view.GravityCompat
com.rubenroy.minimaltodo.eval_jr public android.support.v4.content.ParallelExecutorCompat$Exception
com.rubenroy.minimaltodo.eval_js public android.support.v4.database.DatabaseUtilsCompat$ParseException
com.rubenroy.minimaltodo.eval_jt android.support.v4.content.ExecutorCompatHoneycomb
com.rubenroy.minimaltodo.eval_ju public android.support.v4.view.ActionProvider$IOException
com.rubenroy.minimaltodo.eval_jv public android.support.v4.util.LruCache
com.rubenroy.minimaltodo.eval_jw public android.support.v4.widget.CompoundButtonCompat$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_jx public android.support.v7.internal.view.SupportMenuInflater
com.rubenroy.minimaltodo.eval_jy public android.support.v13.app.FragmentPagerAdapter$Exception
com.rubenroy.minimaltodo.eval_jz android.support.v4.app.NavUtilsJB
com.rubenroy.minimaltodo.eval_k0 public android.support.v4.util.ContainerHelpers$NullPointerException
com.rubenroy.minimaltodo.eval_k1 public android.support.v4.app.FragmentManagerState$IOException
com.rubenroy.minimaltodo.eval_k2 android.support.v4.net.TrafficStatsCompatIcs
com.rubenroy.minimaltodo.eval_k3 public android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1$NullPointerException
com.rubenroy.minimaltodo.eval_k4 android.support.v4.view.LayoutInflaterCompatBase
com.rubenroy.minimaltodo.eval_k5 public android.support.v4.widget.DrawerLayoutImpl$ParseException
com.rubenroy.minimaltodo.eval_k6 public android.support.v7.app.TwilightCalculator$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_k7 public android.support.v4.view.ViewCompatGingerbread$NullPointerException
com.rubenroy.minimaltodo.eval_k8 public android.support.v4.view.animation.LinearOutSlowInInterpolator
com.rubenroy.minimaltodo.eval_k9 public android.support.v4.content.ContextCompatJellybean$Exception
com.rubenroy.minimaltodo.eval_k_ android.support.v4.content.res.ResourcesCompatApi23
com.rubenroy.minimaltodo.eval_ka public android.support.v7.app.AppCompatDelegateImplV23$ParseException
com.rubenroy.minimaltodo.eval_kb android.support.v4.view.WindowInsetsCompatApi21
com.rubenroy.minimaltodo.eval_kc public android.support.v4.graphics.drawable.DrawableCompatApi22$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_kd public android.support.v4.os.OperationCanceledException$IOException
com.rubenroy.minimaltodo.eval_ke public android.support.v4.util.LongSparseArray$Exception
com.rubenroy.minimaltodo.eval_kf android.support.v4.view.MotionEventCompatGingerbread
com.rubenroy.minimaltodo.eval_kg android.support.v4.widget.PopupWindowCompatApi21
com.rubenroy.minimaltodo.eval_kh public abstract interface android.support.v4.view.LayoutInflaterFactory
com.rubenroy.minimaltodo.eval_ki public android.support.v4.provider.TreeDocumentFile$Exception
com.rubenroy.minimaltodo.eval_kj android.support.v4.animation.DonutAnimatorCompatProvider
com.rubenroy.minimaltodo.eval_kk public android.support.v4.graphics.BitmapCompatKitKat$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_kl android.support.v4.widget.TextViewCompatJbMr1
com.rubenroy.minimaltodo.eval_km android.support.design.widget.ViewOffsetHelper
com.rubenroy.minimaltodo.eval_kn public android.support.v4.app.NotificationCompatKitKat$ParseException
com.rubenroy.minimaltodo.eval_ko public android.support.v4.app.NotificationBuilderWithBuilderAccessor$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_kp public android.support.v4.media.session.MediaSessionCompatApi19$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_kq public android.support.design.widget.Snackbar$SnackbarLayout$IOException
com.rubenroy.minimaltodo.eval_kr public android.support.v4.util.SparseArrayCompat
com.rubenroy.minimaltodo.eval_ks public abstract interface android.support.v4.app.NotificationBuilderWithBuilderAccessor
com.rubenroy.minimaltodo.eval_kt public abstract android.support.v4.content.AsyncTaskLoader
com.rubenroy.minimaltodo.eval_ku public android.support.v4.app.BundleUtil$IOException
com.rubenroy.minimaltodo.eval_kv public android.support.v4.media.session.ParcelableVolumeInfo$IOException
com.rubenroy.minimaltodo.eval_kw android.support.v4.graphics.BitmapCompatJellybeanMR2
com.rubenroy.minimaltodo.eval_kx public android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$IOException
com.rubenroy.minimaltodo.eval_ky public android.support.v7.app.ActionBarDrawerToggle$Exception
com.rubenroy.minimaltodo.eval_kz public android.support.v13.app.FragmentCompatICS$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_l0 public android.support.v7.internal.view.SupportActionModeWrapper$ParseException
com.rubenroy.minimaltodo.eval_l1 android.support.v4.app.ActivityManagerCompatKitKat
com.rubenroy.minimaltodo.eval_l2 public android.support.v4.view.LayoutInflaterCompat$Exception
com.rubenroy.minimaltodo.eval_l3 android.support.v4.view.ViewCompatICS
com.rubenroy.minimaltodo.eval_l4 public android.support.v4.content.LocalBroadcastManager$IOException
com.rubenroy.minimaltodo.eval_l5 public android.support.v4.view.ViewParentCompatICS$IOException
com.rubenroy.minimaltodo.eval_l6 android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21
com.rubenroy.minimaltodo.eval_l7 android.support.v4.media.routing.MediaRouterJellybeanMr2
com.rubenroy.minimaltodo.eval_l8 public android.support.v4.widget.PopupMenuCompatKitKat$ParseException
com.rubenroy.minimaltodo.eval_l9 public android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1$NullPointerException
com.rubenroy.minimaltodo.eval_l_ public android.support.v4.media.session.MediaSessionCompat$Token$ParseException
com.rubenroy.minimaltodo.eval_la public android.support.design.widget.ViewOffsetBehavior$IOException
com.rubenroy.minimaltodo.eval_lb public android.support.v4.widget.PopupMenuCompat$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_lc public abstract android.support.v4.content.WakefulBroadcastReceiver
com.rubenroy.minimaltodo.eval_ld public android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator$NullPointerException
com.rubenroy.minimaltodo.eval_le public android.support.v4.view.MotionEventCompat
com.rubenroy.minimaltodo.eval_lf public android.support.v4.widget.DrawerLayout$SavedState$Exception
com.rubenroy.minimaltodo.eval_lg public android.support.v4.app.Fragment$SavedState$ParseException
com.rubenroy.minimaltodo.eval_lh android.support.v4.view.ViewCompatICSMr1
com.rubenroy.minimaltodo.eval_li public final android.support.v7.appcompat.BuildConfig
com.rubenroy.minimaltodo.eval_lj final android.support.v4.hardware.display.DisplayManagerJellybeanMr1
com.rubenroy.minimaltodo.eval_lk public android.support.v4.widget.TextViewCompatDonut$NullPointerException
com.rubenroy.minimaltodo.eval_ll public android.support.v4.util.TimeUtils
com.rubenroy.minimaltodo.eval_lm public android.support.v7.app.NotificationCompat
com.rubenroy.minimaltodo.eval_ln public android.support.v4.view.GravityCompatJellybeanMr1$Exception
com.rubenroy.minimaltodo.eval_lo android.support.design.widget.CoordinatorLayoutInsetsHelperLollipop
com.rubenroy.minimaltodo.eval_lp public android.support.v4.content.FileProvider
com.rubenroy.minimaltodo.eval_lq public android.support.v4.view.WindowInsetsCompat$ParseException
com.rubenroy.minimaltodo.eval_lr android.support.v4.util.ContainerHelpers
com.rubenroy.minimaltodo.eval_ls public android.support.v4.widget.PopupWindowCompatApi23$IOException
com.rubenroy.minimaltodo.eval_lt public android.support.v4.view.NestedScrollingChild$Exception
com.rubenroy.minimaltodo.eval_lu public android.support.v4.print.PrintHelperKitkat$2$Exception
com.rubenroy.minimaltodo.eval_lv public android.support.v4.util.Pools$Exception
com.rubenroy.minimaltodo.eval_lw public abstract interface android.support.v4.internal.view.SupportMenu
com.rubenroy.minimaltodo.eval_lx android.support.v4.media.session.MediaSessionCompatApi23
com.rubenroy.minimaltodo.eval_ly public android.support.v4.os.OperationCanceledException
com.rubenroy.minimaltodo.eval_lz public android.support.v4.util.DebugUtils
com.rubenroy.minimaltodo.eval_m0 android.support.v4.widget.CompoundButtonCompatLollipop
com.rubenroy.minimaltodo.eval_m1 public android.support.v4.os.IResultReceiver$Stub$ParseException
com.rubenroy.minimaltodo.eval_m2 public android.support.v4.content.SharedPreferencesCompat$EditorCompat$IOException
com.rubenroy.minimaltodo.eval_m3 public android.support.v4.app.NotificationCompatBase$NullPointerException
com.rubenroy.minimaltodo.eval_m4 public android.support.v4.content.res.ResourcesCompatApi23$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_m5 final android.support.design.widget.CollapsingTextHelper
com.rubenroy.minimaltodo.eval_m6 public android.support.v4.widget.NestedScrollView$SavedState$IOException
com.rubenroy.minimaltodo.eval_m7 android.support.v4.media.session.MediaSessionCompatApi19
com.rubenroy.minimaltodo.eval_m8 public android.support.v4.util.SparseArrayCompat$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_m9 public android.support.v4.content.ContentResolverCompatJellybean$ParseException
com.rubenroy.minimaltodo.eval_m_ public final android.support.v4.app.ActivityManagerCompat
com.rubenroy.minimaltodo.eval_ma public android.support.v13.app.FragmentStatePagerAdapter$Exception
com.rubenroy.minimaltodo.eval_mb public abstract android.support.v4.graphics.drawable.RoundedBitmapDrawable
com.rubenroy.minimaltodo.eval_mc public android.support.v13.app.FragmentCompatICSMR1$Exception
com.rubenroy.minimaltodo.eval_md public android.support.v4.view.PagerTitleStrip
com.rubenroy.minimaltodo.eval_me public android.support.v4.app.RemoteInputCompatApi20$NullPointerException
com.rubenroy.minimaltodo.eval_mf public abstract interface android.support.v4.internal.view.SupportSubMenu
com.rubenroy.minimaltodo.eval_mg android.support.v4.app.ActionBarDrawerToggleJellybeanMR2
com.rubenroy.minimaltodo.eval_mh public android.support.v4.view.ViewConfigurationCompatICS$NullPointerException
com.rubenroy.minimaltodo.eval_mi public android.support.design.widget.TextInputLayout
com.rubenroy.minimaltodo.eval_mj public android.support.v4.content.ContextCompatApi21$NullPointerException
com.rubenroy.minimaltodo.eval_mk public android.support.v4.text.TextDirectionHeuristicsCompat
com.rubenroy.minimaltodo.eval_ml public android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2$ParseException
com.rubenroy.minimaltodo.eval_mm public android.support.v4.view.VelocityTrackerCompat$NullPointerException
com.rubenroy.minimaltodo.eval_mn android.support.v4.app.LoaderManagerImpl
com.rubenroy.minimaltodo.eval_mo public android.support.v4.media.session.ParcelableVolumeInfo
com.rubenroy.minimaltodo.eval_mp android.support.v4.widget.SearchViewCompatIcs
com.rubenroy.minimaltodo.eval_mq public android.support.v4.view.ViewConfigurationCompatFroyo$ParseException
com.rubenroy.minimaltodo.eval_mr public android.support.v4.content.ContextCompatApi23$NullPointerException
com.rubenroy.minimaltodo.eval_ms public android.support.v4.app.ActionBarDrawerToggleHoneycomb$IOException
com.rubenroy.minimaltodo.eval_mt public android.support.v4.view.LayoutInflaterCompat
com.rubenroy.minimaltodo.eval_mu public android.support.v4.app.Fragment
com.rubenroy.minimaltodo.eval_mv public android.support.v4.widget.ResourceCursorAdapter$ParseException
com.rubenroy.minimaltodo.eval_mw public android.support.v7.app.AppCompatDelegate$NullPointerException
com.rubenroy.minimaltodo.eval_mx public android.support.v4.os.TraceCompat
com.rubenroy.minimaltodo.eval_my public android.support.v4.content.res.TypedArrayUtils
com.rubenroy.minimaltodo.eval_mz public android.support.v4.graphics.drawable.DrawableCompatKitKat$ParseException
com.rubenroy.minimaltodo.eval_n0 android.support.v4.app.ActivityOptionsCompatJB
com.rubenroy.minimaltodo.eval_n1 public android.support.design.widget.FloatingActionButton$NullPointerException
com.rubenroy.minimaltodo.eval_n2 android.support.v4.app.NotificationCompatApi20
com.rubenroy.minimaltodo.eval_n3 public android.support.design.widget.CollapsingTextHelper$NullPointerException
com.rubenroy.minimaltodo.eval_n4 android.support.v4.content.IntentCompatIcsMr1
com.rubenroy.minimaltodo.eval_n5 android.support.design.widget.FloatingActionButtonEclairMr1
com.rubenroy.minimaltodo.eval_n6 public android.support.v4.view.ScrollingView$ParseException
com.rubenroy.minimaltodo.eval_n7 public android.support.v4.widget.PopupMenuCompat
com.rubenroy.minimaltodo.eval_n8 public android.support.v4.app.ActivityManagerCompat$Exception
com.rubenroy.minimaltodo.eval_n9 public android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory$NullPointerException
com.rubenroy.minimaltodo.eval_n_ public android.support.v4.view.animation.PathInterpolatorCompatApi21$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_na public android.support.design.widget.Snackbar$5$NullPointerException
com.rubenroy.minimaltodo.eval_nb public android.support.v4.text.ICUCompat$IOException
com.rubenroy.minimaltodo.eval_nc android.support.v4.media.MediaMetadataCompatApi21
com.rubenroy.minimaltodo.eval_nd public android.support.v4.app.BundleCompat$NullPointerException
com.rubenroy.minimaltodo.eval_ne android.support.v4.view.AccessibilityDelegateCompatIcs
com.rubenroy.minimaltodo.eval_nf public android.support.v7.internal.app.WindowDecorActionBar
com.rubenroy.minimaltodo.eval_ng android.support.v4.app.NotificationManagerCompatIceCreamSandwich
com.rubenroy.minimaltodo.eval_nh public final android.support.v4.media.MediaDescriptionCompat
com.rubenroy.minimaltodo.eval_ni public android.support.v4.content.res.ResourcesCompat$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_nj public android.support.v4.widget.SearchViewCompat$ParseException
com.rubenroy.minimaltodo.eval_nk public android.support.v4.os.EnvironmentCompatKitKat$NullPointerException
com.rubenroy.minimaltodo.eval_nl public android.support.v4.view.ViewGroupCompatJellybeanMR2$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_nm public android.support.v4.os.CancellationSignal$NullPointerException
com.rubenroy.minimaltodo.eval_nn public android.support.v4.util.AtomicFile$Exception
com.rubenroy.minimaltodo.eval_no public android.support.design.widget.FloatingActionButtonHoneycombMr1$ParseException
com.rubenroy.minimaltodo.eval_np public android.support.v4.app.FragmentTransaction$ParseException
com.rubenroy.minimaltodo.eval_nq android.support.v4.app.NotificationCompatHoneycomb
com.rubenroy.minimaltodo.eval_nr android.support.v4.app.RemoteInputCompatJellybean
com.rubenroy.minimaltodo.eval_ns public android.support.v4.app.NotificationManagerCompat$SideChannelManager$ParseException
com.rubenroy.minimaltodo.eval_nt public android.support.v7.internal.VersionUtils$NullPointerException
com.rubenroy.minimaltodo.eval_nu public android.support.v7.app.AppCompatDelegateImplV7$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_nv android.support.v4.widget.PopupMenuCompatKitKat
com.rubenroy.minimaltodo.eval_nw android.support.v4.view.PagerTitleStripIcs
com.rubenroy.minimaltodo.eval_nx public android.support.v4.util.LogWriter
com.rubenroy.minimaltodo.eval_ny public android.support.v4.util.CircularIntArray$NullPointerException
com.rubenroy.minimaltodo.eval_nz public android.support.v4.os.ParcelableCompat
com.rubenroy.minimaltodo.eval_o0 public final android.support.v4.media.session.MediaControllerCompat
com.rubenroy.minimaltodo.eval_o1 android.support.v4.app.NotificationCompatGingerbread
com.rubenroy.minimaltodo.eval_o2 public android.support.v4.util.ArrayMap$ParseException
com.rubenroy.minimaltodo.eval_o3 public android.support.v4.media.IMediaBrowserServiceCompat$Stub$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_o4 public android.support.v4.widget.TextViewCompatJb$ParseException
com.rubenroy.minimaltodo.eval_o5 public android.support.v4.view.ViewCompatBase$IOException
com.rubenroy.minimaltodo.eval_o6 public android.support.v4.app.RemoteInputCompatJellybean$Exception
com.rubenroy.minimaltodo.eval_o7 public android.support.v4.view.ViewParentCompat
com.rubenroy.minimaltodo.eval_o8 public android.support.v4.view.accessibility.AccessibilityEventCompat$ParseException
com.rubenroy.minimaltodo.eval_o9 android.support.v4.view.KeyEventCompatEclair
com.rubenroy.minimaltodo.eval_o_ android.support.v7.app.TwilightCalculator
com.rubenroy.minimaltodo.eval_oa public android.support.v4.media.session.MediaSessionCompatApi23$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_ob public android.support.v4.widget.ListPopupWindowCompat
com.rubenroy.minimaltodo.eval_oc public abstract android.support.v4.app.FragmentTransaction
com.rubenroy.minimaltodo.eval_od android.support.v4.text.ICUCompatIcs
com.rubenroy.minimaltodo.eval_oe public android.support.v4.view.WindowCompat
com.rubenroy.minimaltodo.eval_of public android.support.v7.app.AppCompatDelegateImplV11$ParseException
com.rubenroy.minimaltodo.eval_og public android.support.v4.content.ContextCompatKitKat$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_oh public android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$Exception
com.rubenroy.minimaltodo.eval_oi public android.support.v4.os.TraceCompat$IOException
com.rubenroy.minimaltodo.eval_oj public android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_ok public android.support.v4.media.session.IMediaSession$Stub$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_ol public abstract android.support.v4.app.FragmentContainer
com.rubenroy.minimaltodo.eval_om public android.support.v4.app.TaskStackBuilder$Exception
com.rubenroy.minimaltodo.eval_on abstract android.support.v4.util.MapCollections
com.rubenroy.minimaltodo.eval_oo android.support.v4.widget.PopupWindowCompatGingerbread
com.rubenroy.minimaltodo.eval_op android.support.design.widget.ViewUtils
com.rubenroy.minimaltodo.eval_oq public android.support.v4.util.AtomicFile
com.rubenroy.minimaltodo.eval_or public android.support.v7.app.AppCompatDelegateImplV14$ParseException
com.rubenroy.minimaltodo.eval_os public final android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23
com.rubenroy.minimaltodo.eval_ot android.support.v4.view.accessibility.AccessibilityRecordCompatIcs
com.rubenroy.minimaltodo.eval_ou public android.support.v4.graphics.drawable.DrawableCompatBase$NullPointerException
com.rubenroy.minimaltodo.eval_ov public final android.support.v4.os.CancellationSignal
com.rubenroy.minimaltodo.eval_ow public abstract android.support.v13.app.FragmentStatePagerAdapter
com.rubenroy.minimaltodo.eval_ox public android.support.v4.app.NotificationCompat$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_oy public android.support.v4.app.FragmentTransitionCompat21$Exception
com.rubenroy.minimaltodo.eval_oz public android.support.v4.view.ViewPropertyAnimatorCompatKK$ParseException
com.rubenroy.minimaltodo.eval_p0 public android.support.design.widget.ValueAnimatorCompatImplEclairMr1$ParseException
com.rubenroy.minimaltodo.eval_p1 public android.support.v4.widget.ViewDragHelper$NullPointerException
com.rubenroy.minimaltodo.eval_p2 public android.support.v4.media.session.MediaSessionCompatApi14$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_p3 android.support.v4.app.NotificationCompatJellybean
com.rubenroy.minimaltodo.eval_p4 public android.support.v4.net.TrafficStatsCompat
com.rubenroy.minimaltodo.eval_p5 public android.support.v4.widget.TextViewCompat
com.rubenroy.minimaltodo.eval_p6 android.support.v4.widget.ScrollerCompatGingerbread
com.rubenroy.minimaltodo.eval_p7 public android.support.v4.hardware.fingerprint.FingerprintManagerCompat
com.rubenroy.minimaltodo.eval_p8 public android.support.design.widget.ValueAnimatorCompat$Impl$Exception
com.rubenroy.minimaltodo.eval_p9 public android.support.v4.view.accessibility.AccessibilityEventCompatIcs$NullPointerException
com.rubenroy.minimaltodo.eval_p_ android.support.v13.app.FragmentCompat23
com.rubenroy.minimaltodo.eval_pa android.support.v4.widget.CircleImageView
com.rubenroy.minimaltodo.eval_pb public android.support.v4.media.MediaBrowserCompat$IOException
com.rubenroy.minimaltodo.eval_pc public android.support.v4.view.WindowCompat$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_pd public android.support.v4.view.animation.PathInterpolatorDonut$NullPointerException
com.rubenroy.minimaltodo.eval_pe android.support.v4.widget.TextViewCompatJbMr2
com.rubenroy.minimaltodo.eval_pf public android.support.v4.app.RemoteInputCompatBase$RemoteInput$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_pg android.support.v7.internal.app.NavItemSelectedListener
com.rubenroy.minimaltodo.eval_ph android.support.design.widget.FloatingActionButtonLollipop
com.rubenroy.minimaltodo.eval_pi public android.support.v4.widget.Space$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_pj public android.support.v7.internal.transition.ActionBarTransition
com.rubenroy.minimaltodo.eval_pk public android.support.v7.internal.app.NotificationCompatImplBase
com.rubenroy.minimaltodo.eval_pl public abstract interface android.support.v4.view.NestedScrollingParent
com.rubenroy.minimaltodo.eval_pm public android.support.v4.graphics.drawable.DrawableWrapperLollipop$NullPointerException
com.rubenroy.minimaltodo.eval_pn public android.support.v4.view.MenuItemCompatIcs$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_po abstract interface android.support.v4.animation.AnimatorProvider
com.rubenroy.minimaltodo.eval_pp android.support.v4.graphics.drawable.DrawableCompatLollipop
com.rubenroy.minimaltodo.eval_pq public android.support.v4.widget.Space
com.rubenroy.minimaltodo.eval_pr public android.support.v4.app.RemoteInputCompatBase$Exception
com.rubenroy.minimaltodo.eval_ps public android.support.v7.internal.view.ActionBarPolicy
com.rubenroy.minimaltodo.eval_pt android.support.v7.app.ActionBarDrawerToggleHoneycomb
com.rubenroy.minimaltodo.eval_pu public android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$IOException
com.rubenroy.minimaltodo.eval_pv public android.support.v4.content.PermissionChecker$Exception
com.rubenroy.minimaltodo.eval_pw public abstract interface android.support.v4.animation.AnimatorUpdateListenerCompat
com.rubenroy.minimaltodo.eval_px public android.support.v4.view.AccessibilityDelegateCompat
com.rubenroy.minimaltodo.eval_py android.support.v4.view.ViewCompatJB
com.rubenroy.minimaltodo.eval_pz public android.support.design.widget.NavigationView
com.rubenroy.minimaltodo.eval_q0 android.support.v4.app.FragmentTransitionCompat21
com.rubenroy.minimaltodo.eval_q1 public android.support.v4.database.DatabaseUtilsCompat
com.rubenroy.minimaltodo.eval_q2 public android.support.v4.graphics.drawable.DrawableWrapperDonut$ParseException
com.rubenroy.minimaltodo.eval_q3 public android.support.v4.media.session.MediaControllerCompat$Exception
com.rubenroy.minimaltodo.eval_q4 public android.support.v4.util.SimpleArrayMap
com.rubenroy.minimaltodo.eval_q5 public abstract android.support.v4.media.TransportController
com.rubenroy.minimaltodo.eval_q6 public android.support.design.widget.CoordinatorLayout$ParseException
com.rubenroy.minimaltodo.eval_q7 android.support.v13.app.FragmentCompatICS
com.rubenroy.minimaltodo.eval_q8 public android.support.v4.content.LocalBroadcastManager
com.rubenroy.minimaltodo.eval_q9 android.support.v4.media.MediaDescriptionCompatApi23
com.rubenroy.minimaltodo.eval_q_ android.support.v4.widget.CompoundButtonCompatDonut
com.rubenroy.minimaltodo.eval_qa public android.support.v13.app.FragmentTabHost
com.rubenroy.minimaltodo.eval_qb public android.support.v4.view.AccessibilityDelegateCompatJellyBean$NullPointerException
com.rubenroy.minimaltodo.eval_qc public android.support.v4.view.MotionEventCompatHoneycombMr1$IOException
com.rubenroy.minimaltodo.eval_qd public android.support.v4.text.TextDirectionHeuristicCompat$ParseException
com.rubenroy.minimaltodo.eval_qe android.support.v4.provider.DocumentsContractApi21
com.rubenroy.minimaltodo.eval_qf android.support.v4.view.animation.PathInterpolatorDonut
com.rubenroy.minimaltodo.eval_qg public android.support.v4.view.MenuCompat
com.rubenroy.minimaltodo.eval_qh public android.support.v4.widget.EdgeEffectCompatIcs$NullPointerException
com.rubenroy.minimaltodo.eval_qi android.support.v4.graphics.drawable.DrawableCompatHoneycomb
com.rubenroy.minimaltodo.eval_qj android.support.v4.view.ViewGroupCompatLollipop
com.rubenroy.minimaltodo.eval_qk android.support.v4.content.res.ResourcesCompatApi21
com.rubenroy.minimaltodo.eval_ql public android.support.v4.app.ServiceCompat
com.rubenroy.minimaltodo.eval_qm android.support.v4.app.ActivityCompatApi23
com.rubenroy.minimaltodo.eval_qn public android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$HoneycombValueAnimatorCompat$ParseException
com.rubenroy.minimaltodo.eval_qo public android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs$IOException
com.rubenroy.minimaltodo.eval_qp android.support.v4.os.AsyncTaskCompatHoneycomb
com.rubenroy.minimaltodo.eval_qq public android.support.design.widget.CoordinatorLayoutInsetsHelperLollipop$ParseException
com.rubenroy.minimaltodo.eval_qr public android.support.v4.app.FragmentActivity$Exception
com.rubenroy.minimaltodo.eval_qs android.support.v4.app.ActionBarDrawerToggleHoneycomb
com.rubenroy.minimaltodo.eval_qt android.support.v4.view.ViewPropertyAnimatorCompatICS
com.rubenroy.minimaltodo.eval_qu public android.support.v4.widget.SimpleCursorAdapter$NullPointerException
com.rubenroy.minimaltodo.eval_qv android.support.v4.view.animation.PathInterpolatorCompatApi21
com.rubenroy.minimaltodo.eval_qw android.support.v4.media.session.MediaControllerCompatApi23
com.rubenroy.minimaltodo.eval_qx public android.support.v7.graphics.drawable.DrawerArrowDrawable
com.rubenroy.minimaltodo.eval_qy public android.support.v4.widget.ListViewAutoScrollHelper
com.rubenroy.minimaltodo.eval_qz public android.support.v4.app.FragmentController
com.rubenroy.minimaltodo.eval_r0 android.support.v4.content.res.ResourcesCompatIcsMr1
com.rubenroy.minimaltodo.eval_r1 public android.support.v4.app.ActivityCompatHoneycomb$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_r2 public android.support.v4.app.ActivityOptionsCompat21$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_r3 public android.support.v4.app.NotificationCompatExtras$ParseException
com.rubenroy.minimaltodo.eval_r4 public android.support.v4.text.TextDirectionHeuristicsCompat$IOException
com.rubenroy.minimaltodo.eval_r5 final android.support.v4.app.FragmentManagerState
com.rubenroy.minimaltodo.eval_r6 android.support.v4.app.NotificationManagerCompatEclair
com.rubenroy.minimaltodo.eval_r7 public android.support.v4.app.NotificationManagerCompatEclair$Exception
com.rubenroy.minimaltodo.eval_r8 public android.support.v4.app.ActivityOptionsCompat$Exception
com.rubenroy.minimaltodo.eval_r9 public android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$NullPointerException
com.rubenroy.minimaltodo.eval_r_ public abstract interface android.support.v4.view.NestedScrollingChild
com.rubenroy.minimaltodo.eval_ra public android.support.v4.view.PagerTabStrip$ParseException
com.rubenroy.minimaltodo.eval_rb public android.support.v4.content.res.ResourcesCompat
com.rubenroy.minimaltodo.eval_rc android.support.v4.view.ScaleGestureDetectorCompatKitKat
com.rubenroy.minimaltodo.eval_rd public android.support.v4.BuildConfig$NullPointerException
com.rubenroy.minimaltodo.eval_re public android.support.v4.widget.TextViewCompatJbMr2$NullPointerException
com.rubenroy.minimaltodo.eval_rf public android.support.design.widget.CircularBorderDrawableLollipop$NullPointerException
com.rubenroy.minimaltodo.eval_rg public android.support.v4.media.session.PlaybackStateCompatApi21$ParseException
com.rubenroy.minimaltodo.eval_rh public android.support.v4.app.ActivityCompat22$Exception
com.rubenroy.minimaltodo.eval_ri android.support.v4.media.session.MediaControllerCompatApi21
com.rubenroy.minimaltodo.eval_rj public android.support.v4.content.Loader$IOException
com.rubenroy.minimaltodo.eval_rk public abstract android.support.v4.media.MediaBrowserServiceCompat
com.rubenroy.minimaltodo.eval_rl android.support.v4.animation.HoneycombMr1AnimatorCompatProvider
com.rubenroy.minimaltodo.eval_rm android.support.design.widget.ThemeUtils
com.rubenroy.minimaltodo.eval_rn public android.support.v4.view.VelocityTrackerCompat
com.rubenroy.minimaltodo.eval_ro public android.support.v4.media.VolumeProviderCompat$NullPointerException
com.rubenroy.minimaltodo.eval_rp public android.support.v4.net.ConnectivityManagerCompatJellyBean$ParseException
com.rubenroy.minimaltodo.eval_rq android.support.v4.content.ContentResolverCompatJellybean
com.rubenroy.minimaltodo.eval_rr public android.support.v4.media.TransportController$Exception
com.rubenroy.minimaltodo.eval_rs android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs
com.rubenroy.minimaltodo.eval_rt public android.support.v4.content.CursorLoader
com.rubenroy.minimaltodo.eval_ru public final android.support.v4.text.BidiFormatter
com.rubenroy.minimaltodo.eval_rv android.support.v4.widget.MaterialProgressDrawable
com.rubenroy.minimaltodo.eval_rw android.support.v4.view.ViewCompatBase
com.rubenroy.minimaltodo.eval_rx public android.support.v4.view.InputDeviceCompat$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_ry android.support.v4.graphics.drawable.DrawableWrapperLollipop
com.rubenroy.minimaltodo.eval_rz public android.support.v4.animation.AnimatorUpdateListenerCompat$ParseException
com.rubenroy.minimaltodo.eval_s0 public android.support.v4.view.PagerTabStrip
com.rubenroy.minimaltodo.eval_s1 android.support.design.widget.FloatingActionButtonHoneycombMr1
com.rubenroy.minimaltodo.eval_s2 public final android.support.v4.widget.CompoundButtonCompat
com.rubenroy.minimaltodo.eval_s3 public android.support.v4.net.ConnectivityManagerCompat
com.rubenroy.minimaltodo.eval_s4 public android.support.v4.app.LoaderManager$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_s5 public android.support.v4.app.NavUtils$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_s6 public android.support.v7.app.NotificationCompat$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_s7 android.support.v4.app.NotificationCompatKitKat
com.rubenroy.minimaltodo.eval_s8 abstract interface android.support.v4.widget.DrawerLayoutImpl
com.rubenroy.minimaltodo.eval_s9 public android.support.v4.os.AsyncTaskCompatHoneycomb$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_s_ public android.support.design.widget.FloatingActionButtonLollipop$IOException
com.rubenroy.minimaltodo.eval_sa public abstract interface android.support.v4.app.INotificationSideChannel
com.rubenroy.minimaltodo.eval_sb public android.support.design.widget.NavigationView$Exception
com.rubenroy.minimaltodo.eval_sc android.support.v4.widget.CompoundButtonCompatApi23
com.rubenroy.minimaltodo.eval_sd public abstract android.support.v4.app.LoaderManager
com.rubenroy.minimaltodo.eval_se public android.support.design.widget.CoordinatorLayoutInsetsHelper$Exception
com.rubenroy.minimaltodo.eval_sf public final android.support.v4.util.CircularIntArray
com.rubenroy.minimaltodo.eval_sg public android.support.v4.content.IntentCompat
com.rubenroy.minimaltodo.eval_sh public android.support.v4.view.MenuItemCompat
com.rubenroy.minimaltodo.eval_si public android.support.v4.app.NotificationManagerCompat$IOException
com.rubenroy.minimaltodo.eval_sj public abstract android.support.v4.app.NotificationCompatSideChannelService
com.rubenroy.minimaltodo.eval_sk public android.support.v4.content.ContextCompat$NullPointerException
com.rubenroy.minimaltodo.eval_sl android.support.v4.app.NotificationCompatIceCreamSandwich
com.rubenroy.minimaltodo.eval_sm abstract interface android.support.design.widget.ShadowViewDelegate
com.rubenroy.minimaltodo.eval_sn public android.support.design.widget.ThemeUtils$NullPointerException
com.rubenroy.minimaltodo.eval_so public android.support.v4.content.AsyncTaskLoader$ParseException
com.rubenroy.minimaltodo.eval_sp public android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$ParseException
com.rubenroy.minimaltodo.eval_sq android.support.v7.app.TwilightManager
com.rubenroy.minimaltodo.eval_sr public android.support.design.widget.Snackbar$IOException
com.rubenroy.minimaltodo.eval_ss public android.support.design.widget.StateListAnimator$ParseException
com.rubenroy.minimaltodo.eval_st public android.support.v4.util.LruCache$ParseException
com.rubenroy.minimaltodo.eval_su public android.support.design.widget.HeaderScrollingViewBehavior$ParseException
com.rubenroy.minimaltodo.eval_sv public android.support.v4.view.ViewPropertyAnimatorCompat
com.rubenroy.minimaltodo.eval_sw public abstract interface android.support.v4.view.ViewPropertyAnimatorUpdateListener
com.rubenroy.minimaltodo.eval_sx public android.support.v4.graphics.ColorUtils$IOException
com.rubenroy.minimaltodo.eval_sy android.support.v4.view.ViewGroupCompatIcs
com.rubenroy.minimaltodo.eval_sz public android.support.v4.util.MapCollections$IOException
com.rubenroy.minimaltodo.eval_t0 android.support.v4.widget.ScrollerCompatIcs
com.rubenroy.minimaltodo.eval_t1 public android.support.v4.media.MediaDescriptionCompatApi23$ParseException
com.rubenroy.minimaltodo.eval_t2 public android.support.v4.widget.TintableCompoundButton$IOException
com.rubenroy.minimaltodo.eval_t3 android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2
com.rubenroy.minimaltodo.eval_t4 public android.support.v4.app.ActivityCompat$ParseException
com.rubenroy.minimaltodo.eval_t5 public android.support.v4.graphics.BitmapCompat$NullPointerException
com.rubenroy.minimaltodo.eval_t6 public abstract interface android.support.v4.os.IResultReceiver
com.rubenroy.minimaltodo.eval_t7 public android.support.v4.hardware.display.DisplayManagerJellybeanMr1$ParseException
com.rubenroy.minimaltodo.eval_t8 public android.support.v4.widget.CompoundButtonCompatDonut$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_t9 public android.support.v4.text.TextUtilsCompat
com.rubenroy.minimaltodo.eval_t_ public android.support.v7.internal.view.SupportActionModeWrapper
com.rubenroy.minimaltodo.eval_ta public android.support.v4.net.TrafficStatsCompatIcs$Exception
com.rubenroy.minimaltodo.eval_tb public android.support.v4.text.TextUtilsCompat$Exception
com.rubenroy.minimaltodo.eval_tc public android.support.v4.text.TextUtilsCompatJellybeanMr1
com.rubenroy.minimaltodo.eval_td public android.support.v13.app.FragmentTabHost$SavedState$NullPointerException
com.rubenroy.minimaltodo.eval_te android.support.v4.widget.EdgeEffectCompatIcs
com.rubenroy.minimaltodo.eval_tf public android.support.v7.app.AlertDialog$Exception
com.rubenroy.minimaltodo.eval_tg public android.support.v4.media.RatingCompatApi21$ParseException
com.rubenroy.minimaltodo.eval_th public final android.support.v4.content.PermissionChecker
com.rubenroy.minimaltodo.eval_ti public android.support.v4.widget.MaterialProgressDrawable$NullPointerException
com.rubenroy.minimaltodo.eval_tj public abstract interface android.support.v4.widget.TintableCompoundButton
com.rubenroy.minimaltodo.eval_tk public android.support.v4.media.TransportMediatorJellybeanMR2$Exception
com.rubenroy.minimaltodo.eval_tl public android.support.v4.app.TaskStackBuilderHoneycomb$IOException
com.rubenroy.minimaltodo.eval_tm public android.support.v4.app.NotificationCompatHoneycomb$NullPointerException
com.rubenroy.minimaltodo.eval_tn public android.support.v4.media.session.MediaSessionCompatApi22$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_to android.support.v4.view.KeyEventCompatHoneycomb
com.rubenroy.minimaltodo.eval_tp public android.support.v4.view.ViewPager
com.rubenroy.minimaltodo.eval_tq android.support.v4.app.TaskStackBuilderHoneycomb
com.rubenroy.minimaltodo.eval_tr public abstract android.support.v4.view.PagerAdapter
com.rubenroy.minimaltodo.eval_ts public android.support.v4.app.NotificationCompatBase$Action$ParseException
com.rubenroy.minimaltodo.eval_tt public android.support.v4.widget.TextViewCompat$NullPointerException
com.rubenroy.minimaltodo.eval_tu public android.support.v4.app.NotificationCompatBase
com.rubenroy.minimaltodo.eval_tv public android.support.v4.text.ICUCompatApi23
com.rubenroy.minimaltodo.eval_tw public android.support.v4.provider.DocumentFile$NullPointerException
com.rubenroy.minimaltodo.eval_tx android.support.v4.os.EnvironmentCompatKitKat
com.rubenroy.minimaltodo.eval_ty public android.support.v4.widget.SwipeRefreshLayout
com.rubenroy.minimaltodo.eval_tz android.support.v7.app.AppCompatDelegateImplV7
com.rubenroy.minimaltodo.eval_u0 public android.support.v4.content.ModernAsyncTask$ParseException
com.rubenroy.minimaltodo.eval_u1 public android.support.v7.graphics.drawable.DrawableUtils
com.rubenroy.minimaltodo.eval_u2 android.support.v4.app.ActivityCompat21
com.rubenroy.minimaltodo.eval_u3 android.support.v4.app.BundleUtil
com.rubenroy.minimaltodo.eval_u4 android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1
com.rubenroy.minimaltodo.eval_u5 android.support.v4.graphics.drawable.DrawableCompatBase
com.rubenroy.minimaltodo.eval_u6 public android.support.v4.widget.SimpleCursorAdapter
com.rubenroy.minimaltodo.eval_u7 public abstract android.support.v4.app.FragmentManager
com.rubenroy.minimaltodo.eval_u8 public android.support.v7.internal.view.ContextThemeWrapper$ParseException
com.rubenroy.minimaltodo.eval_u9 public android.support.v7.internal.text.AllCapsTransformationMethod
com.rubenroy.minimaltodo.eval_u_ public android.support.v4.animation.AnimatorProvider$NullPointerException
com.rubenroy.minimaltodo.eval_ua final android.support.v4.app.SuperNotCalledException
com.rubenroy.minimaltodo.eval_ub public android.support.v4.graphics.drawable.DrawableCompat$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_uc public abstract android.support.v4.widget.ResourceCursorAdapter
com.rubenroy.minimaltodo.eval_ud android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean
com.rubenroy.minimaltodo.eval_ue android.support.design.widget.ValueAnimatorCompat
com.rubenroy.minimaltodo.eval_uf public abstract interface android.support.v4.media.IMediaBrowserServiceCompat
com.rubenroy.minimaltodo.eval_ug android.support.v4.app.NotificationCompatApi21
com.rubenroy.minimaltodo.eval_uh android.support.v4.widget.DrawerLayoutCompatApi21
com.rubenroy.minimaltodo.eval_ui android.support.v4.app.BundleCompatDonut
com.rubenroy.minimaltodo.eval_uj public android.support.v4.media.session.IMediaControllerCallback$ParseException
com.rubenroy.minimaltodo.eval_uk public android.support.v4.media.MediaBrowserCompat$MediaItem$IOException
com.rubenroy.minimaltodo.eval_ul public android.support.v4.app.ActivityCompatJB$Exception
com.rubenroy.minimaltodo.eval_um public android.support.v7.app.AppCompatDelegateImplBase$IOException
com.rubenroy.minimaltodo.eval_un public android.support.v4.app.ShareCompatJB$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_uo public android.support.v4.graphics.drawable.DrawableCompatHoneycomb$NullPointerException
com.rubenroy.minimaltodo.eval_up android.support.v4.media.routing.MediaRouterJellybean
com.rubenroy.minimaltodo.eval_uq public final android.support.v4.media.MediaMetadataCompat
com.rubenroy.minimaltodo.eval_ur android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat
com.rubenroy.minimaltodo.eval_us public android.support.v4.app.ActivityCompat21$Exception
com.rubenroy.minimaltodo.eval_ut public android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean$ParseException
com.rubenroy.minimaltodo.eval_uu public android.support.design.widget.ShadowViewDelegate$IOException
com.rubenroy.minimaltodo.eval_uv public android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$Exception
com.rubenroy.minimaltodo.eval_uw public android.support.v4.app.AppOpsManagerCompat
com.rubenroy.minimaltodo.eval_ux public android.support.v4.print.PrintHelperKitkat$ParseException
com.rubenroy.minimaltodo.eval_uy public android.support.v7.internal.view.SupportMenuInflater$ParseException
com.rubenroy.minimaltodo.eval_uz public android.support.v7.internal.app.ToolbarActionBar
com.rubenroy.minimaltodo.eval_v0 public android.support.v4.widget.SearchViewCompatIcs$NullPointerException
com.rubenroy.minimaltodo.eval_v1 android.support.v4.graphics.drawable.DrawableWrapperKitKat
com.rubenroy.minimaltodo.eval_v2 public android.support.design.widget.FloatingActionButtonImpl$Exception
com.rubenroy.minimaltodo.eval_v3 public final android.support.v4.media.MediaBrowserCompat
com.rubenroy.minimaltodo.eval_v4 public android.support.v4.view.accessibility.AccessibilityWindowInfoCompat
com.rubenroy.minimaltodo.eval_v5 public android.support.v4.app.BackStackState$ParseException
com.rubenroy.minimaltodo.eval_v6 public android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean$Exception
com.rubenroy.minimaltodo.eval_v7 public android.support.v4.view.ViewPropertyAnimatorCompatJellybeanMr2$ParseException
com.rubenroy.minimaltodo.eval_v8 public android.support.v4.print.PrintHelperKitkat$2$1$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_v9 android.support.v4.view.ViewGroupCompatJellybeanMR2
com.rubenroy.minimaltodo.eval_v_ public android.support.v4.app.NotificationCompatJellybean$NullPointerException
com.rubenroy.minimaltodo.eval_va public android.support.v4.view.WindowInsetsCompat
com.rubenroy.minimaltodo.eval_vb public android.support.design.widget.ViewGroupUtilsHoneycomb$IOException
com.rubenroy.minimaltodo.eval_vc public android.support.v4.view.accessibility.AccessibilityWindowInfoCompatApi21$ParseException
com.rubenroy.minimaltodo.eval_vd public android.support.v4.media.session.MediaButtonReceiver
com.rubenroy.minimaltodo.eval_ve public android.support.v4.util.LogWriter$IOException
com.rubenroy.minimaltodo.eval_vf public android.support.v4.app.NotificationCompatBase$UnreadConversation$Exception
com.rubenroy.minimaltodo.eval_vg public android.support.v4.net.TrafficStatsCompat$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_vh android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub
com.rubenroy.minimaltodo.eval_vi android.support.v4.os.TraceJellybeanMR2
com.rubenroy.minimaltodo.eval_vj public android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$NullPointerException
com.rubenroy.minimaltodo.eval_vk public android.support.v4.media.session.PlaybackStateCompatApi22$ParseException
com.rubenroy.minimaltodo.eval_vl public android.support.v4.app.RemoteInput$Exception
com.rubenroy.minimaltodo.eval_vm public android.support.v7.internal.app.NotificationCompatImpl21$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_vn public android.support.v4.internal.view.SupportMenu$Exception
com.rubenroy.minimaltodo.eval_vo public android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState$Exception
com.rubenroy.minimaltodo.eval_vp public android.support.v4.widget.DrawerLayoutCompatApi21$Exception
com.rubenroy.minimaltodo.eval_vq public android.support.v4.app.NotificationCompat$Action$IOException
com.rubenroy.minimaltodo.eval_vr public android.support.v4.app.FragmentStatePagerAdapter$IOException
com.rubenroy.minimaltodo.eval_vs public android.support.v4.animation.DonutAnimatorCompatProvider$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_vt public android.support.v7.app.TwilightManager$IOException
com.rubenroy.minimaltodo.eval_vu public android.support.v4.view.AccessibilityDelegateCompatIcs$Exception
com.rubenroy.minimaltodo.eval_vv public android.support.v4.view.ViewCompatKitKat$NullPointerException
com.rubenroy.minimaltodo.eval_vw public android.support.design.widget.SnackbarManager$NullPointerException
com.rubenroy.minimaltodo.eval_vx public android.support.v4.view.LayoutInflaterCompatBase$IOException
com.rubenroy.minimaltodo.eval_vy android.support.v4.app.ShareCompatICS
com.rubenroy.minimaltodo.eval_vz public android.support.v4.widget.AutoScrollHelper$ParseException
com.rubenroy.minimaltodo.eval_w0 android.support.v4.view.ViewCompatEclairMr1
com.rubenroy.minimaltodo.eval_w1 public android.support.v7.app.AppCompatActivity$NullPointerException
com.rubenroy.minimaltodo.eval_w2 public android.support.v4.view.InputDeviceCompat
com.rubenroy.minimaltodo.eval_w3 public android.support.v4.app.BaseFragmentActivityDonut$IOException
com.rubenroy.minimaltodo.eval_w4 public android.support.v4.app.FragmentActivity
com.rubenroy.minimaltodo.eval_w5 public android.support.v4.widget.SearchViewCompatHoneycomb$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_w6 public android.support.v4.app.BaseFragmentActivityHoneycomb$ParseException
com.rubenroy.minimaltodo.eval_w7 public android.support.v7.internal.app.WindowDecorActionBar$ParseException
com.rubenroy.minimaltodo.eval_w8 public android.support.v4.speech.tts.TextToSpeechICSMR1$IOException
com.rubenroy.minimaltodo.eval_w9 public android.support.v4.text.ICUCompatApi23$IOException
com.rubenroy.minimaltodo.eval_w_ public android.support.v4.util.LongSparseArray
com.rubenroy.minimaltodo.eval_wa public android.support.v4.media.TransportPerformer$IOException
com.rubenroy.minimaltodo.eval_wb android.support.v4.view.MenuItemCompatIcs
com.rubenroy.minimaltodo.eval_wc public android.support.v4.widget.ContentLoadingProgressBar
com.rubenroy.minimaltodo.eval_wd public android.support.v4.print.PrintHelper$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_we public android.support.v7.internal.view.StandaloneActionMode$IOException
com.rubenroy.minimaltodo.eval_wf public abstract interface android.support.v4.os.ParcelableCompatCreatorCallbacks
com.rubenroy.minimaltodo.eval_wg public android.support.v4.view.ViewPager$IOException
com.rubenroy.minimaltodo.eval_wh android.support.v4.graphics.drawable.DrawableCompatApi23
com.rubenroy.minimaltodo.eval_wi public android.support.v4.widget.DrawerLayout
com.rubenroy.minimaltodo.eval_wj android.support.v4.view.ViewPropertyAnimatorCompatKK
com.rubenroy.minimaltodo.eval_wk public android.support.v4.app.ActionBarDrawerToggle
com.rubenroy.minimaltodo.eval_wl public android.support.v4.animation.ValueAnimatorCompat$IOException
com.rubenroy.minimaltodo.eval_wm public android.support.v4.media.session.MediaSessionCompatApi21$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_wn public android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl$NullPointerException
com.rubenroy.minimaltodo.eval_wo public android.support.v13.app.FragmentCompat23$NullPointerException
com.rubenroy.minimaltodo.eval_wp public android.support.v4.view.ScaleGestureDetectorCompat
com.rubenroy.minimaltodo.eval_wq public android.support.design.widget.CoordinatorLayout$SavedState$IOException
com.rubenroy.minimaltodo.eval_wr public android.support.v4.graphics.drawable.DrawableWrapperKitKat$IOException
com.rubenroy.minimaltodo.eval_ws android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr1
com.rubenroy.minimaltodo.eval_wt public final android.support.v4.media.RatingCompat
com.rubenroy.minimaltodo.eval_wu public android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$ParseException
com.rubenroy.minimaltodo.eval_wv public android.support.v4.content.Loader
com.rubenroy.minimaltodo.eval_ww public android.support.v13.app.FragmentTabHost$Exception
com.rubenroy.minimaltodo.eval_wx public android.support.v4.view.ViewGroupCompat
com.rubenroy.minimaltodo.eval_wy public android.support.v4.app.FragmentTabHost$SavedState$Exception
com.rubenroy.minimaltodo.eval_wz public android.support.v4.hardware.display.DisplayManagerCompat$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_x0 public android.support.v4.media.MediaMetadataCompat$Exception
com.rubenroy.minimaltodo.eval_x1 public android.support.v4.widget.CompoundButtonCompatApi23$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_x2 public android.support.v4.widget.ScrollerCompat
com.rubenroy.minimaltodo.eval_x3 public android.support.v4.view.ViewConfigurationCompat$ParseException
com.rubenroy.minimaltodo.eval_x4 public android.support.v4.speech.tts.TextToSpeechICS$NullPointerException
com.rubenroy.minimaltodo.eval_x5 public android.support.v4.app.BackStackRecord$IOException
com.rubenroy.minimaltodo.eval_x6 public android.support.v4.view.TintableBackgroundView$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_x7 public android.support.v4.media.IMediaBrowserServiceCompatCallbacks$Stub$NullPointerException
com.rubenroy.minimaltodo.eval_x8 android.support.v4.content.ContextCompatFroyo
com.rubenroy.minimaltodo.eval_x9 public android.support.v4.view.animation.FastOutSlowInInterpolator$Exception
com.rubenroy.minimaltodo.eval_x_ public android.support.v7.internal.app.NotificationCompatImplBase$IOException
com.rubenroy.minimaltodo.eval_xa public android.support.v4.app.AppOpsManagerCompat$ParseException
com.rubenroy.minimaltodo.eval_xb public android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$ParseException
com.rubenroy.minimaltodo.eval_xc public android.support.v4.util.TimeUtils$IOException
com.rubenroy.minimaltodo.eval_xd public android.support.v4.graphics.ColorUtils
com.rubenroy.minimaltodo.eval_xe public android.support.v7.internal.app.NotificationCompatImpl21
com.rubenroy.minimaltodo.eval_xf public android.support.design.widget.CoordinatorLayout
com.rubenroy.minimaltodo.eval_xg public android.support.design.widget.CollapsingToolbarLayout
com.rubenroy.minimaltodo.eval_xh public android.support.v4.widget.EdgeEffectCompatLollipop$NullPointerException
com.rubenroy.minimaltodo.eval_xi android.support.v4.net.ConnectivityManagerCompatJellyBean
com.rubenroy.minimaltodo.eval_xj android.support.v4.provider.TreeDocumentFile
com.rubenroy.minimaltodo.eval_xk android.support.v4.view.MotionEventCompatEclair
com.rubenroy.minimaltodo.eval_xl public abstract android.support.v4.widget.AutoScrollHelper
com.rubenroy.minimaltodo.eval_xm public android.support.v4.content.ContextCompatHoneycomb$Exception
com.rubenroy.minimaltodo.eval_xn android.support.v4.graphics.drawable.DrawableWrapperDonut
com.rubenroy.minimaltodo.eval_xo public android.support.design.widget.TabLayout$Exception
com.rubenroy.minimaltodo.eval_xp public android.support.v4.view.animation.LinearOutSlowInInterpolator$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_xq android.support.v4.view.ViewConfigurationCompatFroyo
com.rubenroy.minimaltodo.eval_xr android.support.v4.graphics.BitmapCompatHoneycombMr1
com.rubenroy.minimaltodo.eval_xs public android.support.v4.view.ViewCompatJellybeanMr2$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_xt android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean
com.rubenroy.minimaltodo.eval_xu public android.support.v4.app.FragmentPagerAdapter$IOException
com.rubenroy.minimaltodo.eval_xv public android.support.v4.view.VelocityTrackerCompatHoneycomb$Exception
com.rubenroy.minimaltodo.eval_xw public android.support.v4.app.ShareCompat
com.rubenroy.minimaltodo.eval_xx public android.support.v4.widget.SlidingPaneLayout$IOException
com.rubenroy.minimaltodo.eval_xy android.support.v4.view.ViewCompatKitKat
com.rubenroy.minimaltodo.eval_xz public android.support.v7.app.AlertDialog
com.rubenroy.minimaltodo.eval_y0 public android.support.v4.view.PagerAdapter$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_y1 public android.support.v4.graphics.BitmapCompatHoneycombMr1$ParseException
com.rubenroy.minimaltodo.eval_y2 public android.support.v4.app.FragmentHostCallback$IOException
com.rubenroy.minimaltodo.eval_y3 public android.support.design.widget.NavigationView$SavedState$NullPointerException
com.rubenroy.minimaltodo.eval_y4 public android.support.v4.view.KeyEventCompat$IOException
com.rubenroy.minimaltodo.eval_y5 public android.support.v4.widget.DrawerLayout$ViewDragCallback$NullPointerException
com.rubenroy.minimaltodo.eval_y6 public android.support.v4.widget.SearchViewCompat
com.rubenroy.minimaltodo.eval_y7 android.support.v7.app.AppCompatDelegateImplV11
com.rubenroy.minimaltodo.eval_y8 android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat
com.rubenroy.minimaltodo.eval_y9 public android.support.v4.view.LayoutInflaterCompatLollipop$ParseException
com.rubenroy.minimaltodo.eval_y_ public android.support.v4.content.ContextCompat
com.rubenroy.minimaltodo.eval_ya abstract android.support.v4.app.BaseFragmentActivityHoneycomb
com.rubenroy.minimaltodo.eval_yb public android.support.v4.widget.ViewDragHelper
com.rubenroy.minimaltodo.eval_yc android.support.v4.view.ViewCompatMarshmallow
com.rubenroy.minimaltodo.eval_yd public android.support.v4.app.NotificationBuilderWithActions$IOException
com.rubenroy.minimaltodo.eval_ye public android.support.design.widget.TabLayout
com.rubenroy.minimaltodo.eval_yf android.support.v4.view.ViewPropertyAnimatorCompatJellybeanMr2
com.rubenroy.minimaltodo.eval_yg public android.support.v4.os.ParcelableCompatCreatorHoneycombMR2$ParseException
com.rubenroy.minimaltodo.eval_yh public abstract android.support.v4.provider.DocumentFile
com.rubenroy.minimaltodo.eval_yi public android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1$Exception
com.rubenroy.minimaltodo.eval_yj public android.support.v4.widget.PopupWindowCompatKitKat$Exception
com.rubenroy.minimaltodo.eval_yk public android.support.v4.view.NestedScrollingParentHelper
com.rubenroy.minimaltodo.eval_yl public android.support.v4.view.MarginLayoutParamsCompat
com.rubenroy.minimaltodo.eval_ym public android.support.v4.view.WindowInsetsCompatApi21$ParseException
com.rubenroy.minimaltodo.eval_yn public android.support.v4.media.routing.MediaRouterJellybeanMr1$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_yo android.support.v4.net.ConnectivityManagerCompatHoneycombMR2
com.rubenroy.minimaltodo.eval_yp android.support.v4.widget.EdgeEffectCompatLollipop
com.rubenroy.minimaltodo.eval_yq public android.support.v4.view.ViewParentCompatLollipop$IOException
com.rubenroy.minimaltodo.eval_yr public android.support.v4.app.LoaderManagerImpl$NullPointerException
com.rubenroy.minimaltodo.eval_ys public abstract android.support.v7.app.ActionBar
com.rubenroy.minimaltodo.eval_yt public android.support.v4.widget.ListViewAutoScrollHelper$NullPointerException
com.rubenroy.minimaltodo.eval_yu android.support.design.widget.MathUtils
com.rubenroy.minimaltodo.eval_yv public android.support.v4.widget.ExploreByTouchHelper$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_yw public android.support.v4.widget.CompoundButtonCompatLollipop$Exception
com.rubenroy.minimaltodo.eval_yx public android.support.v7.app.AlertController$AlertParams$NullPointerException
com.rubenroy.minimaltodo.eval_yy public android.support.v4.media.session.MediaControllerCompat$Callback$IOException
com.rubenroy.minimaltodo.eval_yz public android.support.v4.view.ViewPropertyAnimatorListenerAdapter$Exception
com.rubenroy.minimaltodo.eval_z0 final android.support.v4.app.FragmentManagerImpl
com.rubenroy.minimaltodo.eval_z1 abstract android.support.v4.content.ModernAsyncTask
com.rubenroy.minimaltodo.eval_z2 public android.support.v7.internal.text.AllCapsTransformationMethod$NullPointerException
com.rubenroy.minimaltodo.eval_z3 public abstract interface android.support.v4.animation.AnimatorListenerCompat
com.rubenroy.minimaltodo.eval_z4 abstract interface android.support.v4.app.NotificationBuilderWithActions
com.rubenroy.minimaltodo.eval_z5 public android.support.v4.view.MenuItemCompatHoneycomb$ParseException
com.rubenroy.minimaltodo.eval_z6 public android.support.v4.view.ViewCompat
com.rubenroy.minimaltodo.eval_z7 android.support.v4.graphics.BitmapCompatKitKat
com.rubenroy.minimaltodo.eval_z8 public android.support.v4.content.IntentCompatIcsMr1$NullPointerException
com.rubenroy.minimaltodo.eval_z9 android.support.v4.content.ContextCompatKitKat
com.rubenroy.minimaltodo.eval_z_ public android.support.v4.view.ViewParentCompatICS
com.rubenroy.minimaltodo.eval_za public android.support.v4.view.ViewCompatEclairMr1$IOException
com.rubenroy.minimaltodo.eval_zb public android.support.v4.widget.PopupWindowCompat
com.rubenroy.minimaltodo.eval_zc public android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$IOException
com.rubenroy.minimaltodo.eval_zd public android.support.v4.media.routing.MediaRouterJellybeanMr2$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_ze public android.support.v4.view.ViewCompatMarshmallow$NullPointerException
com.rubenroy.minimaltodo.eval_zf android.support.v4.widget.TextViewCompatJb
com.rubenroy.minimaltodo.eval_zg public final android.support.v13.BuildConfig
com.rubenroy.minimaltodo.eval_zh public android.support.design.widget.ViewOffsetHelper$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_zi public android.support.v4.app.FragmentTabHost
com.rubenroy.minimaltodo.eval_zj android.support.v4.content.ContextCompatApi23
com.rubenroy.minimaltodo.eval_zk public android.support.v4.app.TaskStackBuilderJellybean$IOException
com.rubenroy.minimaltodo.eval_zl public android.support.v7.internal.view.ContextThemeWrapper
com.rubenroy.minimaltodo.eval_zm android.support.v4.view.ViewParentCompatKitKat
com.rubenroy.minimaltodo.eval_zn public abstract interface android.support.v4.view.ViewPropertyAnimatorListener
com.rubenroy.minimaltodo.eval_zo public android.support.v4.widget.SwipeRefreshLayout$Exception
com.rubenroy.minimaltodo.eval_zp abstract android.support.v4.view.animation.LookupTableInterpolator
com.rubenroy.minimaltodo.eval_zq public android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat
com.rubenroy.minimaltodo.eval_zr public android.support.v4.app.TaskStackBuilder
com.rubenroy.minimaltodo.eval_zs android.support.v4.view.AccessibilityDelegateCompatJellyBean
com.rubenroy.minimaltodo.eval_zt public android.support.v4.media.session.PlaybackStateCompat$CustomAction$NullPointerException
com.rubenroy.minimaltodo.eval_zu public android.support.v4.hardware.fingerprint.FingerprintManagerCompat$Exception
com.rubenroy.minimaltodo.eval_zv public final android.support.v4.util.Pools
com.rubenroy.minimaltodo.eval_zw public android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$NullPointerException
com.rubenroy.minimaltodo.eval_zx public android.support.v4.app.ActivityManagerCompatKitKat$NullPointerException
com.rubenroy.minimaltodo.eval_zy android.support.v4.media.session.MediaSessionCompatApi8
com.rubenroy.minimaltodo.eval_zz public android.support.v4.app.FragmentTabHost$IOException
com.rubenroy.minimaltodo.eval__0f        public com.wdullaer.materialdatetimepicker.date.TextViewWithCircularIndicator
com.rubenroy.minimaltodo.eval__2l        uk.co.chrisjenx.calligraphy.CalligraphyFactory
com.rubenroy.minimaltodo.eval__2n        public com.rubenroy.minimaltodo.SettingsActivity
com.rubenroy.minimaltodo.eval__32        public com.wdullaer.materialdatetimepicker.Utils$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval__75        android.support.v7.internal.widget.ActionBarBackgroundDrawableV21
com.rubenroy.minimaltodo.eval__84        public com.amulyakhare.textdrawable.TextDrawable
com.rubenroy.minimaltodo.eval___4        public uk.co.chrisjenx.calligraphy.CalligraphyActivityFactory$Exception
com.rubenroy.minimaltodo.eval__en        public com.wdullaer.materialdatetimepicker.AccessibleTextView$Exception
com.rubenroy.minimaltodo.eval__gk        public android.support.v7.widget.AppCompatEditText$IOException
com.rubenroy.minimaltodo.eval__hw        public android.support.v7.widget.AppCompatButton$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval__lx        public uk.co.chrisjenx.calligraphy.ReflectionUtils$IOException
com.rubenroy.minimaltodo.eval__ol        public com.rubenroy.minimaltodo.ItemTouchHelperClass$NullPointerException
com.rubenroy.minimaltodo.eval__q9        public android.support.v7.internal.widget.DecorToolbar$ParseException
com.rubenroy.minimaltodo.eval__rg        public android.support.v7.widget.PositionMap$ParseException
com.rubenroy.minimaltodo.eval__ti        public com.rubenroy.minimaltodo.MainActivity$BasicListAdapter$ViewHolder$NullPointerException
com.rubenroy.minimaltodo.eval__vb        public android.support.v7.internal.widget.FitWindowsFrameLayout
com.rubenroy.minimaltodo.eval__x2        public abstract interface android.support.v7.internal.view.menu.MenuPresenter
com.rubenroy.minimaltodo.eval__x7        public android.support.v7.widget.OpReorderer$ParseException
com.rubenroy.minimaltodo.eval__xw        public com.wdullaer.materialdatetimepicker.date.TextViewWithCircularIndicator$NullPointerException
com.rubenroy.minimaltodo.eval_a7y        public com.wdullaer.materialdatetimepicker.time.TimePickerDialog
com.rubenroy.minimaltodo.eval_ad8        public com.amulyakhare.textdrawable.TextDrawable$2
com.rubenroy.minimaltodo.eval_ag6        public android.support.v7.internal.view.ViewPropertyAnimatorCompatSet
com.rubenroy.minimaltodo.eval_ahs        public uk.co.chrisjenx.calligraphy.CalligraphyFactory$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_ald        public android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation$NullPointerException
com.rubenroy.minimaltodo.eval_aq2        public android.support.v7.widget.AppCompatCheckBox
com.rubenroy.minimaltodo.eval_ar3        public com.rubenroy.minimaltodo.TodoNotificationService$IOException
com.rubenroy.minimaltodo.eval_awc        public abstract interface android.support.v7.internal.widget.DecorToolbar
com.rubenroy.minimaltodo.eval_awr        public android.support.v7.internal.widget.ActivityChooserView
com.rubenroy.minimaltodo.eval_aya        public android.support.v7.widget.AppCompatAutoCompleteTextView$NullPointerException
com.rubenroy.minimaltodo.eval_azr        public android.support.v7.internal.widget.DrawableUtils
com.rubenroy.minimaltodo.eval_b$1        final android.support.design.internal.ParcelableSparseArray$1
com.rubenroy.minimaltodo.eval_b4j        public android.support.v7.widget.AppCompatSeekBar
com.rubenroy.minimaltodo.eval_b6t        public android.support.v7.internal.widget.ToolbarWidgetWrapper
com.rubenroy.minimaltodo.eval_b_o        public android.support.v7.internal.widget.FitWindowsFrameLayout$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_bh4        public android.support.v7.internal.view.menu.ActionMenuItem
com.rubenroy.minimaltodo.eval_bj5        public android.support.v7.internal.widget.ThemeUtils$NullPointerException
com.rubenroy.minimaltodo.eval_bm9        public com.rubenroy.minimaltodo.SettingsFragment$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_bmy        public com.wdullaer.materialdatetimepicker.date.DatePickerDialog$ParseException
com.rubenroy.minimaltodo.eval_bp6        public com.wdullaer.materialdatetimepicker.date.SimpleMonthAdapter
com.rubenroy.minimaltodo.eval_bzb        android.support.v7.internal.widget.ResourcesWrapper
com.rubenroy.minimaltodo.eval_c05        android.support.v7.widget.ViewInfoStore
com.rubenroy.minimaltodo.eval_c0y        public com.wdullaer.materialdatetimepicker.BuildConfig$ParseException
com.rubenroy.minimaltodo.eval_c22        public android.support.v7.internal.widget.FitWindowsLinearLayout
com.rubenroy.minimaltodo.eval_c33        public android.support.v7.widget.GridLayoutManager
com.rubenroy.minimaltodo.eval_c5m        public android.support.v7.internal.widget.ActivityChooserModel$NullPointerException
com.rubenroy.minimaltodo.eval_c6b        android.support.v7.internal.view.menu.MenuItemWrapperJB
com.rubenroy.minimaltodo.eval_c6v        public com.rubenroy.minimaltodo.AnalyticsApplication
com.rubenroy.minimaltodo.eval_ce9        public com.wdullaer.materialdatetimepicker.date.AccessibleDateAnimator$IOException
com.rubenroy.minimaltodo.eval_clu        public android.support.v7.widget.AppCompatImageView
com.rubenroy.minimaltodo.eval_cly        public com.wdullaer.materialdatetimepicker.date.MonthView$NullPointerException
com.rubenroy.minimaltodo.eval_cnm        public android.support.v7.widget.LinearLayoutCompat$Exception
com.rubenroy.minimaltodo.eval_co6        public final android.support.v7.recyclerview.BuildConfig
com.rubenroy.minimaltodo.eval_coo        public com.rubenroy.minimaltodo.SettingsActivity$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_cug        public final android.support.v7.internal.widget.ViewStubCompat
com.rubenroy.minimaltodo.eval_czb        public android.support.v7.widget.AppCompatMultiAutoCompleteTextView
com.rubenroy.minimaltodo.eval_czu        public android.support.v7.widget.ActionMenuPresenter$NullPointerException
com.rubenroy.minimaltodo.eval_d0w        android.support.v7.widget.AppCompatProgressBarHelper
com.rubenroy.minimaltodo.eval_d6o        public android.support.v7.widget.helper.ItemTouchUIUtilImpl$ParseException
com.rubenroy.minimaltodo.eval_ddw        public android.support.v7.widget.AppCompatImageView$Exception
com.rubenroy.minimaltodo.eval_dff        public android.support.v7.internal.widget.ContentFrameLayout$IOException
com.rubenroy.minimaltodo.eval_dig        public abstract android.support.v7.widget.util.SortedListAdapterCallback
com.rubenroy.minimaltodo.eval_dll        public android.support.v7.internal.widget.ActionBarContextView
com.rubenroy.minimaltodo.eval_dlz        public fr.ganfra.materialspinner.MaterialSpinner
com.rubenroy.minimaltodo.eval_dow        android.support.v7.internal.view.menu.MenuWrapperICS
com.rubenroy.minimaltodo.eval_dp2        android.support.v7.widget.AppCompatBackgroundHelper
com.rubenroy.minimaltodo.eval_dqf        public abstract com.wdullaer.materialdatetimepicker.date.MonthView
com.rubenroy.minimaltodo.eval_ds4        public com.wdullaer.materialdatetimepicker.AccessibleLinearLayout$IOException
com.rubenroy.minimaltodo.eval_dyx        public final com.wdullaer.materialdatetimepicker.BuildConfig
com.rubenroy.minimaltodo.eval_dzn        public android.support.v7.internal.view.menu.MenuPopupHelper
com.rubenroy.minimaltodo.eval_e$k        android.support.design.widget.AnimationUtils$AnimationListenerAdapter
com.rubenroy.minimaltodo.eval_e0g        public android.support.v7.internal.view.menu.SubMenuBuilder
com.rubenroy.minimaltodo.eval_e2v        public com.rubenroy.minimaltodo.DeleteNotificationService
com.rubenroy.minimaltodo.eval_e95        public android.support.v7.internal.widget.ActionBarContainer$IOException
com.rubenroy.minimaltodo.eval_ebc        public com.amulyakhare.textdrawable.BuildConfig$1
com.rubenroy.minimaltodo.eval_ebl        public android.support.v7.widget.AppCompatBackgroundHelper$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_ee4        public com.wdullaer.materialdatetimepicker.time.RadialPickerLayout
com.rubenroy.minimaltodo.eval_efn        abstract android.support.v7.internal.view.menu.BaseMenuWrapper
com.rubenroy.minimaltodo.eval_egc        public android.support.v7.widget.AppCompatRatingBar
com.rubenroy.minimaltodo.eval_ejr        public android.support.v7.internal.view.menu.SubMenuWrapperICS$NullPointerException
com.rubenroy.minimaltodo.eval_ema        public com.wdullaer.materialdatetimepicker.AccessibleLinearLayout
com.rubenroy.minimaltodo.eval_erd        public android.support.v7.internal.widget.DialogTitle
com.rubenroy.minimaltodo.eval_ez4        public android.support.v7.internal.view.menu.ListMenuPresenter
com.rubenroy.minimaltodo.eval_f07        public android.support.v7.widget.RecyclerView$SmoothScroller$IOException
com.rubenroy.minimaltodo.eval_f6q        public android.support.v7.widget.helper.ItemTouchUIUtil$IOException
com.rubenroy.minimaltodo.eval_fgz        android.support.v7.internal.view.menu.SubMenuWrapperICS
com.rubenroy.minimaltodo.eval_fpr        public final android.support.v7.internal.view.menu.MenuItemImpl
com.rubenroy.minimaltodo.eval_fq8        android.support.v7.widget.AppCompatSeekBarHelper
com.rubenroy.minimaltodo.eval_fsd        public com.wdullaer.materialdatetimepicker.date.SimpleMonthView$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_ft2        public abstract interface android.support.v7.internal.widget.FitWindowsViewGroup
com.rubenroy.minimaltodo.eval_ft5        public android.support.v7.internal.widget.ActionBarContextView$NullPointerException
com.rubenroy.minimaltodo.eval_fte        public android.support.v7.widget.SearchView
com.rubenroy.minimaltodo.eval_g0u        public android.support.v7.widget.SwitchCompat
com.rubenroy.minimaltodo.eval_g3e        android.support.v7.internal.view.menu.BaseWrapper
com.rubenroy.minimaltodo.eval_g88        public android.support.v7.widget.AppCompatRatingBar$Exception
com.rubenroy.minimaltodo.eval_g_x        android.support.v7.widget.AdapterHelper
com.rubenroy.minimaltodo.eval_gar        public uk.co.chrisjenx.calligraphy.CalligraphyConfig
com.rubenroy.minimaltodo.eval_gav        public uk.co.chrisjenx.calligraphy.BuildConfig$Exception
com.rubenroy.minimaltodo.eval_gfy        public uk.co.chrisjenx.calligraphy.CalligraphyUtils$Exception
com.rubenroy.minimaltodo.eval_gjz        public android.support.v7.internal.widget.ContentFrameLayout
com.rubenroy.minimaltodo.eval_gki        public com.rubenroy.minimaltodo.DeleteNotificationService$NullPointerException
com.rubenroy.minimaltodo.eval_gwc        public android.support.v7.util.ThreadUtil$Exception
com.rubenroy.minimaltodo.eval_h2y        public android.support.v7.internal.view.menu.MenuView$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_h3i        public com.rubenroy.minimaltodo.Utils$NullPointerException
com.rubenroy.minimaltodo.eval_h50        public com.wdullaer.materialdatetimepicker.date.YearPickerView$NullPointerException
com.rubenroy.minimaltodo.eval_h_o        public android.support.v7.internal.widget.ActionBarOverlayLayout$ParseException
com.rubenroy.minimaltodo.eval_hdk        public android.support.v7.internal.widget.ViewUtils
com.rubenroy.minimaltodo.eval_hom        public com.wdullaer.materialdatetimepicker.time.RadialSelectorView$Exception
com.rubenroy.minimaltodo.eval_hqy        public com.rubenroy.minimaltodo.StoreRetrieveData
com.rubenroy.minimaltodo.eval_hr5        public android.support.v7.internal.view.menu.ActionMenuItemView
com.rubenroy.minimaltodo.eval_ht_        public abstract interface android.support.v7.internal.view.menu.MenuView
com.rubenroy.minimaltodo.eval_hyd        public android.support.v7.internal.view.menu.ListMenuPresenter$NullPointerException
com.rubenroy.minimaltodo.eval_hyq        public android.support.v7.widget.ThemedSpinnerAdapter$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_i1o        public android.support.v7.widget.ShareActionProvider
com.rubenroy.minimaltodo.eval_i_j        public android.support.v7.widget.RecyclerView$SavedState$Exception
com.rubenroy.minimaltodo.eval_ia5        public android.support.v7.widget.AppCompatImageButton$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_ibt        public android.support.v7.widget.ListPopupWindow
com.rubenroy.minimaltodo.eval_iev        public android.support.v7.internal.view.menu.MenuItemImpl$NullPointerException
com.rubenroy.minimaltodo.eval_ife        public android.support.v7.widget.SearchView$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_iia        public android.support.v7.widget.AdapterHelper$Exception
com.rubenroy.minimaltodo.eval_iit        public android.support.v7.widget.AppCompatMultiAutoCompleteTextView$NullPointerException
com.rubenroy.minimaltodo.eval_ipv        public final android.support.v7.internal.view.menu.MenuWrapperFactory
com.rubenroy.minimaltodo.eval_ivc        public android.support.v7.widget.AppCompatTextHelperV17$IOException
com.rubenroy.minimaltodo.eval_j$1        android.support.design.internal.ScrimInsetsFrameLayout$1
com.rubenroy.minimaltodo.eval_j3x        public com.wdullaer.materialdatetimepicker.time.RadialSelectorView
com.rubenroy.minimaltodo.eval_j4v        public android.support.v7.widget.DefaultItemAnimator
com.rubenroy.minimaltodo.eval_jbl        public android.support.v7.internal.widget.ButtonBarLayout
com.rubenroy.minimaltodo.eval_jei        public com.wdullaer.materialdatetimepicker.date.DatePickerController$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_jek        public android.support.v7.internal.view.WindowCallbackWrapper
com.rubenroy.minimaltodo.eval_jkg        public android.support.v7.widget.RecyclerView$IOException
com.rubenroy.minimaltodo.eval_jlj        public android.support.v7.internal.view.menu.ListMenuItemView
com.rubenroy.minimaltodo.eval_jnx        public com.wdullaer.materialdatetimepicker.time.RadialTextsView
com.rubenroy.minimaltodo.eval_jrt        public android.support.v7.internal.widget.ActionBarContainer
com.rubenroy.minimaltodo.eval_js6        abstract android.support.v7.internal.widget.AbsActionBarView
com.rubenroy.minimaltodo.eval_jst        public android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$NullPointerException
com.rubenroy.minimaltodo.eval_jxr        public abstract com.wdullaer.materialdatetimepicker.date.DayPickerView
com.rubenroy.minimaltodo.eval_k4w        public com.rubenroy.minimaltodo.MainActivity$BasicListAdapter$Exception
com.rubenroy.minimaltodo.eval_k54        public abstract android.support.v7.widget.OrientationHelper
com.rubenroy.minimaltodo.eval_k5_        public android.support.v7.widget.AppCompatTextHelper$NullPointerException
com.rubenroy.minimaltodo.eval_k6u        public com.wdullaer.materialdatetimepicker.date.DatePickerDialog
com.rubenroy.minimaltodo.eval_k7r        public final com.rubenroy.minimaltodo.BuildConfig
com.rubenroy.minimaltodo.eval_ka7        public uk.co.chrisjenx.calligraphy.CalligraphyTypefaceSpan
com.rubenroy.minimaltodo.eval_kcv        public fr.ganfra.materialspinner.MaterialSpinner$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_kgn        public uk.co.chrisjenx.calligraphy.CalligraphyTypefaceSpan$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_kjr        public android.support.v7.widget.ChildHelper$ParseException
com.rubenroy.minimaltodo.eval_kka        public android.support.v7.widget.StaggeredGridLayoutManager$ParseException
com.rubenroy.minimaltodo.eval_kw6        public android.support.v7.widget.GridLayoutManager$IOException
com.rubenroy.minimaltodo.eval_kwv        public com.rubenroy.minimaltodo.MainActivity$ParseException
com.rubenroy.minimaltodo.eval_kys        public com.rubenroy.minimaltodo.ScrollingFABBehaviour$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_kz_        public android.support.v7.widget.Toolbar$SavedState$Exception
com.rubenroy.minimaltodo.eval_l2u        android.support.v7.widget.ChildHelper
com.rubenroy.minimaltodo.eval_l2w        uk.co.chrisjenx.calligraphy.CalligraphyLayoutInflater
com.rubenroy.minimaltodo.eval_l3_        public android.support.v7.internal.widget.ViewUtils$Exception
com.rubenroy.minimaltodo.eval_l45        public android.support.v7.widget.LinearLayoutManager
com.rubenroy.minimaltodo.eval_l57        public android.support.v7.internal.view.menu.MenuPresenter$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_l8z        public final uk.co.chrisjenx.calligraphy.BuildConfig
com.rubenroy.minimaltodo.eval_l9x        android.support.v7.widget.ScrollbarHelper
com.rubenroy.minimaltodo.eval_lbt        public android.support.v7.widget.AppCompatSpinner
com.rubenroy.minimaltodo.eval_lg0        public android.support.v7.widget.util.SortedListAdapterCallback$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_lh5        public android.support.v7.widget.AppCompatImageHelper$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_lhy        public android.support.v7.internal.widget.ListViewCompat
com.rubenroy.minimaltodo.eval_lm6        public com.rubenroy.minimaltodo.StoreRetrieveData$ParseException
com.rubenroy.minimaltodo.eval_lmq        android.support.v7.widget.SuggestionsAdapter
com.rubenroy.minimaltodo.eval_lrn        public android.support.v7.widget.ListPopupWindow$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_lsx        public final uk.co.chrisjenx.calligraphy.TypefaceUtils
com.rubenroy.minimaltodo.eval_ltv        public fr.ganfra.materialspinner.BuildConfig$ParseException
com.rubenroy.minimaltodo.eval_lzi        public android.support.v7.internal.view.menu.MenuWrapperICS$ParseException
com.rubenroy.minimaltodo.eval_m0t        public com.rubenroy.minimaltodo.RecyclerViewEmptySupport$Exception
com.rubenroy.minimaltodo.eval_m10        public android.support.v7.util.SortedList$Exception
com.rubenroy.minimaltodo.eval_m1c        public com.rubenroy.minimaltodo.ReminderActivity$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_m84        public android.support.v7.internal.view.WindowCallbackWrapper$Exception
com.rubenroy.minimaltodo.eval_m88        public android.support.v7.widget.AppCompatSpinner$DropdownPopup$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_m98        public android.support.v7.widget.OrientationHelper$IOException
com.rubenroy.minimaltodo.eval_ma2        public android.support.v7.internal.widget.ButtonBarLayout$NullPointerException
com.rubenroy.minimaltodo.eval_me2        public android.support.v7.widget.StaggeredGridLayoutManager$SavedState$IOException
com.rubenroy.minimaltodo.eval_mf3        public android.support.v7.internal.widget.ScrollingTabContainerView$NullPointerException
com.rubenroy.minimaltodo.eval_mfs        android.support.v7.util.MessageThreadUtil
com.rubenroy.minimaltodo.eval_miw        public abstract interface android.support.v7.internal.widget.DecorContentParent
com.rubenroy.minimaltodo.eval_mo7        public android.support.v7.internal.widget.TintContextWrapper$IOException
com.rubenroy.minimaltodo.eval_mp8        public android.support.v7.internal.widget.TintManager$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_mvv        public android.support.v7.internal.widget.TintInfo$IOException
com.rubenroy.minimaltodo.eval_mwf        public android.support.v7.recyclerview.BuildConfig$IOException
com.rubenroy.minimaltodo.eval_mzy        public com.wdullaer.materialdatetimepicker.time.AmPmCirclesView$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_n$1        android.support.design.internal.NavigationMenuPresenter$1
com.rubenroy.minimaltodo.eval_n$_        android.support.design.internal.NavigationMenuPresenter$HeaderViewHolder
com.rubenroy.minimaltodo.eval_n$b        android.support.design.internal.NavigationMenuPresenter$NavigationMenuTextItem
com.rubenroy.minimaltodo.eval_n$d        android.support.design.internal.NavigationMenuPresenter$NavigationMenuSeparatorItem
com.rubenroy.minimaltodo.eval_n$m        android.support.design.internal.NavigationMenuPresenter$SubheaderViewHolder
com.rubenroy.minimaltodo.eval_n$o        android.support.design.internal.NavigationMenuPresenter$NavigationMenuHeaderItem
com.rubenroy.minimaltodo.eval_n$q        android.support.design.internal.NavigationMenuPresenter$NormalViewHolder
com.rubenroy.minimaltodo.eval_n$r        android.support.design.internal.NavigationMenuPresenter$NavigationMenuAdapter
com.rubenroy.minimaltodo.eval_n1h        public android.support.v7.widget.Toolbar$IOException
com.rubenroy.minimaltodo.eval_n4p        android.support.v7.internal.widget.ActionBarBackgroundDrawable
com.rubenroy.minimaltodo.eval_n7r        public android.support.v7.widget.ListPopupWindow$ForwardingListener$NullPointerException
com.rubenroy.minimaltodo.eval_nfe        public android.support.v7.util.MessageThreadUtil$2$IOException
com.rubenroy.minimaltodo.eval_nfu        android.support.v7.widget.OpReorderer
com.rubenroy.minimaltodo.eval_nge        public final uk.co.chrisjenx.calligraphy.CalligraphyUtils
com.rubenroy.minimaltodo.eval_nil        public com.rubenroy.minimaltodo.CustomRecyclerScrollViewListener$ParseException
com.rubenroy.minimaltodo.eval_nio        public android.support.v7.widget.AppCompatRadioButton
com.rubenroy.minimaltodo.eval_nj8        public android.support.v7.internal.view.menu.SubMenuBuilder$ParseException
com.rubenroy.minimaltodo.eval_nkd        public android.support.v7.internal.view.menu.BaseWrapper$Exception
com.rubenroy.minimaltodo.eval_nkq        public android.support.v7.widget.LinearSmoothScroller$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_nnv        public android.support.v7.view.ActionMode$Exception
com.rubenroy.minimaltodo.eval_no1        public android.support.v7.widget.AppCompatTextView$IOException
com.rubenroy.minimaltodo.eval_nof        public abstract interface android.support.v7.widget.ThemedSpinnerAdapter
com.rubenroy.minimaltodo.eval_npx        public com.wdullaer.materialdatetimepicker.TypefaceHelper$NullPointerException
com.rubenroy.minimaltodo.eval_nrt        public com.rubenroy.minimaltodo.PreferenceKeys
com.rubenroy.minimaltodo.eval_nwg        android.support.v7.widget.AppCompatCompoundButtonHelper
com.rubenroy.minimaltodo.eval_o3x        public com.wdullaer.materialdatetimepicker.date.YearPickerView
com.rubenroy.minimaltodo.eval_od5        public android.support.v7.internal.view.ViewPropertyAnimatorCompatSet$ParseException
com.rubenroy.minimaltodo.eval_og8        public com.wdullaer.materialdatetimepicker.time.RadialTextsView$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_okv        public android.support.v7.internal.view.menu.ExpandedMenuView$Exception
com.rubenroy.minimaltodo.eval_oll        public com.wdullaer.materialdatetimepicker.time.AmPmCirclesView
com.rubenroy.minimaltodo.eval_oo_        public android.support.v7.widget.helper.ItemTouchHelper$IOException
com.rubenroy.minimaltodo.eval_opb        public android.support.v7.internal.view.menu.BaseMenuWrapper$IOException
com.rubenroy.minimaltodo.eval_opc        public com.rubenroy.minimaltodo.AboutActivity
com.rubenroy.minimaltodo.eval_orm        public uk.co.chrisjenx.calligraphy.TypefaceUtils$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_osf        public android.support.v7.widget.ActionMenuPresenter$SavedState$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_ot5        public android.support.v7.internal.widget.TintTypedArray$Exception
com.rubenroy.minimaltodo.eval_oud        public android.support.v7.widget.AppCompatCompoundButtonHelper$NullPointerException
com.rubenroy.minimaltodo.eval_ow9        public android.support.v7.internal.widget.ResourcesWrapper$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_ow_        public uk.co.chrisjenx.calligraphy.CalligraphyContextWrapper$IOException
com.rubenroy.minimaltodo.eval_owu        public com.wdullaer.materialdatetimepicker.date.SimpleMonthView
com.rubenroy.minimaltodo.eval_oxc        public com.wdullaer.materialdatetimepicker.time.CircleView
com.rubenroy.minimaltodo.eval_oxt        public com.rubenroy.minimaltodo.CustomTextInputLayout$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_oz1        public android.support.v7.internal.widget.DrawableUtils$IOException
com.rubenroy.minimaltodo.eval_p0a        public android.support.v7.internal.widget.RtlSpacingHelper$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_p8y        public android.support.v7.util.AsyncListUtil
com.rubenroy.minimaltodo.eval_p_d        public android.support.v7.widget.LinearLayoutCompat
com.rubenroy.minimaltodo.eval_pc8        public android.support.v7.widget.helper.ItemTouchHelper
com.rubenroy.minimaltodo.eval_pev        public android.support.v7.internal.view.menu.ListMenuItemView$Exception
com.rubenroy.minimaltodo.eval_ph3        public abstract interface com.wdullaer.materialdatetimepicker.date.DatePickerController
com.rubenroy.minimaltodo.eval_pop        android.support.v7.widget.AppCompatImageHelper
com.rubenroy.minimaltodo.eval_pp6        public android.support.v7.widget.AppCompatTextView
com.rubenroy.minimaltodo.eval_ppj        public android.support.v7.internal.widget.ActivityChooserView$Exception
com.rubenroy.minimaltodo.eval_ppo        public android.support.v7.widget.AppCompatEditText
com.rubenroy.minimaltodo.eval_prc        public com.rubenroy.minimaltodo.AddToDoActivity
com.rubenroy.minimaltodo.eval_psa        public com.rubenroy.minimaltodo.ReminderActivity
com.rubenroy.minimaltodo.eval_pt4        public android.support.v7.internal.widget.FitWindowsLinearLayout$ParseException
com.rubenroy.minimaltodo.eval_ptu        public abstract android.support.v7.widget.LinearSmoothScroller
com.rubenroy.minimaltodo.eval_pw7        public android.support.v7.widget.AppCompatAutoCompleteTextView
com.rubenroy.minimaltodo.eval_pwb        public abstract android.support.v7.widget.SimpleItemAnimator
com.rubenroy.minimaltodo.eval_px9        public android.support.v7.internal.widget.DialogTitle$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_q54        public com.wdullaer.materialdatetimepicker.time.TimePickerDialog$ParseException
com.rubenroy.minimaltodo.eval_q_g        public com.rubenroy.minimaltodo.ToDoItem
com.rubenroy.minimaltodo.eval_qei        android.support.v7.widget.helper.ItemTouchUIUtilImpl
com.rubenroy.minimaltodo.eval_qhv        public final android.support.v7.internal.widget.TintManager
com.rubenroy.minimaltodo.eval_ql1        android.support.v7.widget.LayoutState
com.rubenroy.minimaltodo.eval_qoe        public com.rubenroy.minimaltodo.AddToDoActivity$NullPointerException
com.rubenroy.minimaltodo.eval_qxc        public android.support.v7.internal.view.menu.ActionMenuItem$ParseException
com.rubenroy.minimaltodo.eval_qzv        public final fr.ganfra.materialspinner.BuildConfig
com.rubenroy.minimaltodo.eval_r0w        public android.support.v7.internal.widget.ActionBarBackgroundDrawable$ParseException
com.rubenroy.minimaltodo.eval_r16        public android.support.v7.widget.LinearLayoutManager$NullPointerException
com.rubenroy.minimaltodo.eval_ra7        public android.support.v7.widget.ViewInfoStore$Exception
com.rubenroy.minimaltodo.eval_rbl        public android.support.v7.util.MessageThreadUtil$1$IOException
com.rubenroy.minimaltodo.eval_rfn        public com.wdullaer.materialdatetimepicker.date.AccessibleDateAnimator
com.rubenroy.minimaltodo.eval_rke        public abstract interface android.support.v7.view.CollapsibleActionView
com.rubenroy.minimaltodo.eval_rl5        public com.rubenroy.minimaltodo.ToDoItem$IOException
com.rubenroy.minimaltodo.eval_rlm        public android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton$Exception
com.rubenroy.minimaltodo.eval_rlo        android.support.v7.util.TileList
com.rubenroy.minimaltodo.eval_rmk        public android.support.v7.internal.view.menu.BaseMenuPresenter$NullPointerException
com.rubenroy.minimaltodo.eval_rsn        public com.amulyakhare.textdrawable.TextDrawable$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_rwc        public final com.rubenroy.minimaltodo.R
com.rubenroy.minimaltodo.eval_rz2        public android.support.v7.internal.view.menu.MenuPopupHelper$IOException
com.rubenroy.minimaltodo.eval_s3o        public android.support.v7.internal.widget.ListViewCompat$Exception
com.rubenroy.minimaltodo.eval_s46        public android.support.v7.widget.LinearLayoutManager$SavedState$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_s4w        public android.support.v7.internal.view.menu.MenuBuilder
com.rubenroy.minimaltodo.eval_s91        public com.wdullaer.materialdatetimepicker.HapticFeedbackController$NullPointerException
com.rubenroy.minimaltodo.eval_s_c        public android.support.v7.widget.AppCompatImageButton
com.rubenroy.minimaltodo.eval_sc0        public com.wdullaer.materialdatetimepicker.date.DayPickerView$Exception
com.rubenroy.minimaltodo.eval_scg        public com.amulyakhare.textdrawable.util.ColorGenerator$IOException
com.rubenroy.minimaltodo.eval_sgz        public android.support.v7.widget.SimpleItemAnimator$Exception
com.rubenroy.minimaltodo.eval_sp8        public android.support.v7.widget.AppCompatCheckedTextView
com.rubenroy.minimaltodo.eval_sqa        android.support.v7.widget.PositionMap
com.rubenroy.minimaltodo.eval_sxb        public android.support.v7.util.MessageThreadUtil$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_t1f        public android.support.v7.internal.widget.ActivityChooserModel
com.rubenroy.minimaltodo.eval_t2h        public android.support.v7.util.SortedList
com.rubenroy.minimaltodo.eval_t2q        public android.support.v7.internal.widget.AppCompatPopupWindow
com.rubenroy.minimaltodo.eval_ta5        public android.support.v7.widget.RecyclerView$ItemAnimator$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_tbo        public android.support.v7.internal.view.menu.MenuDialogHelper$Exception
com.rubenroy.minimaltodo.eval_tcc        uk.co.chrisjenx.calligraphy.ReflectionUtils
com.rubenroy.minimaltodo.eval_tey        public android.support.v7.view.CollapsibleActionView$NullPointerException
com.rubenroy.minimaltodo.eval_tif        public android.support.v7.internal.view.menu.MenuBuilder$Exception
com.rubenroy.minimaltodo.eval_tjy        public android.support.v7.internal.widget.TintTypedArray
com.rubenroy.minimaltodo.eval_tt2        public com.wdullaer.materialdatetimepicker.date.SimpleDayPickerView
com.rubenroy.minimaltodo.eval_ty1        public android.support.v7.widget.PopupMenu
com.rubenroy.minimaltodo.eval_tyv        public com.wdullaer.materialdatetimepicker.date.MonthAdapter$IOException
com.rubenroy.minimaltodo.eval_u0h        public com.wdullaer.materialdatetimepicker.HapticFeedbackController
com.rubenroy.minimaltodo.eval_u1_        public android.support.v7.internal.widget.ActionBarOverlayLayout
com.rubenroy.minimaltodo.eval_u1r        public android.support.v7.internal.widget.ScrollingTabContainerView
com.rubenroy.minimaltodo.eval_u69        public com.rubenroy.minimaltodo.PreferenceKeys$Exception
com.rubenroy.minimaltodo.eval_u6c        public com.rubenroy.minimaltodo.SettingsFragment
com.rubenroy.minimaltodo.eval_u8m        public com.rubenroy.minimaltodo.AboutActivity$IOException
com.rubenroy.minimaltodo.eval_u_0        public android.support.v7.widget.PopupMenu$NullPointerException
com.rubenroy.minimaltodo.eval_ub4        public abstract com.rubenroy.minimaltodo.CustomRecyclerScrollViewListener
com.rubenroy.minimaltodo.eval_ucb        public com.rubenroy.minimaltodo.TodoNotificationService
com.rubenroy.minimaltodo.eval_ucz        public android.support.v7.widget.DefaultItemAnimator$NullPointerException
com.rubenroy.minimaltodo.eval_udf        public android.support.v7.widget.RecyclerViewAccessibilityDelegate
com.rubenroy.minimaltodo.eval_uix        public com.wdullaer.materialdatetimepicker.Utils
com.rubenroy.minimaltodo.eval_ukd        public abstract android.support.v7.view.ActionMode
com.rubenroy.minimaltodo.eval_un5        public android.support.v7.widget.helper.ItemTouchHelper$Callback$ParseException
com.rubenroy.minimaltodo.eval_ur5        public android.support.v7.widget.AppCompatSeekBarHelper$IOException
com.rubenroy.minimaltodo.eval_v1_        public uk.co.chrisjenx.calligraphy.CalligraphyConfig$NullPointerException
com.rubenroy.minimaltodo.eval_v1m        public android.support.v7.internal.widget.TintInfo
com.rubenroy.minimaltodo.eval_v7n        public final com.amulyakhare.textdrawable.BuildConfig
com.rubenroy.minimaltodo.eval_v_6        public final android.support.v7.internal.view.menu.ExpandedMenuView
com.rubenroy.minimaltodo.eval_vj0        public android.support.v7.widget.AppCompatSeekBar$ParseException
com.rubenroy.minimaltodo.eval_vnl        public android.support.v7.internal.widget.AbsActionBarView$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_vru        public android.support.v7.widget.ShareActionProvider$NullPointerException
com.rubenroy.minimaltodo.eval_vv8        public com.amulyakhare.textdrawable.BuildConfig$NullPointerException
com.rubenroy.minimaltodo.eval_vx_        public com.rubenroy.minimaltodo.BuildConfig$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_w8y        public abstract com.wdullaer.materialdatetimepicker.date.MonthAdapter
com.rubenroy.minimaltodo.eval_wbi        public uk.co.chrisjenx.calligraphy.CalligraphyLayoutInflater$IOException
com.rubenroy.minimaltodo.eval_wdl        public android.support.v7.widget.SuggestionsAdapter$Exception
com.rubenroy.minimaltodo.eval_wfx        android.support.v7.widget.AppCompatTextHelper
com.rubenroy.minimaltodo.eval_whu        public android.support.v7.widget.ActionMenuPresenter
com.rubenroy.minimaltodo.eval_wj4        public android.support.v7.internal.widget.ToolbarWidgetWrapper$NullPointerException
com.rubenroy.minimaltodo.eval_wo4        public com.wdullaer.materialdatetimepicker.AccessibleTextView
com.rubenroy.minimaltodo.eval_wq0        public com.wdullaer.materialdatetimepicker.time.CircleView$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_wrg        public com.wdullaer.materialdatetimepicker.date.SimpleMonthAdapter$Exception
com.rubenroy.minimaltodo.eval_wtj        public android.support.v7.internal.view.menu.ActionMenuItemView$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_wtw        public android.support.v7.internal.view.menu.MenuItemWrapperICS$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_wus        public android.support.v7.internal.view.menu.MenuWrapperFactory$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_wvi        public android.support.v7.internal.view.menu.MenuItemWrapperICS
com.rubenroy.minimaltodo.eval_x1b        public uk.co.chrisjenx.calligraphy.CalligraphyContextWrapper
com.rubenroy.minimaltodo.eval_x3_        public android.support.v7.widget.AppCompatCheckBox$IOException
com.rubenroy.minimaltodo.eval_x44        public com.rubenroy.minimaltodo.AnalyticsApplication$NullPointerException
com.rubenroy.minimaltodo.eval_x45        public android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$ParseException
com.rubenroy.minimaltodo.eval_x60        android.support.v7.widget.AppCompatTextHelperV17
com.rubenroy.minimaltodo.eval_x_q        public com.rubenroy.minimaltodo.Utils
com.rubenroy.minimaltodo.eval_xa9        public android.support.v7.widget.SwitchCompat$IOException
com.rubenroy.minimaltodo.eval_xd_        public com.wdullaer.materialdatetimepicker.time.RadialPickerLayout$Exception
com.rubenroy.minimaltodo.eval_xdj        public com.wdullaer.materialdatetimepicker.date.SimpleDayPickerView$NullPointerException
com.rubenroy.minimaltodo.eval_xe1        public abstract interface android.support.v7.widget.helper.ItemTouchUIUtil
com.rubenroy.minimaltodo.eval_xis        public com.amulyakhare.textdrawable.util.ColorGenerator
com.rubenroy.minimaltodo.eval_xrr        abstract interface uk.co.chrisjenx.calligraphy.CalligraphyActivityFactory
com.rubenroy.minimaltodo.eval_xst        public android.support.v7.widget.AppCompatSpinner$ParseException
com.rubenroy.minimaltodo.eval_xub        public android.support.v7.internal.widget.FitWindowsViewGroup$Exception
com.rubenroy.minimaltodo.eval_xue        public android.support.v7.internal.widget.AppCompatPopupWindow$NullPointerException
com.rubenroy.minimaltodo.eval_xwn        public android.support.v7.widget.RecyclerView$LayoutManager$ParseException
com.rubenroy.minimaltodo.eval_xyc        public android.support.v7.internal.view.menu.MenuItemWrapperJB$NullPointerException
com.rubenroy.minimaltodo.eval_xyi        public android.support.v7.widget.RecyclerViewAccessibilityDelegate$Exception
com.rubenroy.minimaltodo.eval_xyo        public android.support.v7.internal.view.menu.MenuDialogHelper
com.rubenroy.minimaltodo.eval_y37        public android.support.v7.widget.ActionMenuView$NullPointerException
com.rubenroy.minimaltodo.eval_y9p        public android.support.v7.widget.ScrollbarHelper$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_ya6        public android.support.v7.widget.AppCompatProgressBarHelper$ParseException
com.rubenroy.minimaltodo.eval_yev        public android.support.v7.internal.widget.RtlSpacingHelper
com.rubenroy.minimaltodo.eval_yf8        public android.support.v7.widget.StaggeredGridLayoutManager
com.rubenroy.minimaltodo.eval_yfb        public android.support.v7.internal.widget.ThemeUtils
com.rubenroy.minimaltodo.eval_yj_        public com.wdullaer.materialdatetimepicker.TypefaceHelper
com.rubenroy.minimaltodo.eval_ykq        public abstract android.support.v7.internal.view.menu.BaseMenuPresenter
com.rubenroy.minimaltodo.eval_ym3        public android.support.v7.widget.RecyclerView
com.rubenroy.minimaltodo.eval_ypi        public android.support.v7.widget.ActionMenuView
com.rubenroy.minimaltodo.eval_ytw        public android.support.v7.util.AsyncListUtil$ParseException
com.rubenroy.minimaltodo.eval_ywz        public android.support.v7.widget.LayoutState$ParseException
com.rubenroy.minimaltodo.eval_z00        public android.support.v7.widget.AppCompatCheckedTextView$NullPointerException
com.rubenroy.minimaltodo.eval_z1k        public android.support.v7.internal.widget.ViewStubCompat$Exception
com.rubenroy.minimaltodo.eval_z4o        public android.support.v7.widget.AppCompatRadioButton$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_z65        public android.support.v7.internal.widget.ActionBarBackgroundDrawableV21$NullPointerException
com.rubenroy.minimaltodo.eval_z6y        public com.rubenroy.minimaltodo.ItemTouchHelperClass
com.rubenroy.minimaltodo.eval_z8p        public android.support.v7.util.TileList$ParseException
com.rubenroy.minimaltodo.eval_zag        public android.support.v7.internal.widget.TintContextWrapper
com.rubenroy.minimaltodo.eval_zio        public com.rubenroy.minimaltodo.R$ArrayOutOfBoundsException
com.rubenroy.minimaltodo.eval_zoy        public android.support.v7.internal.widget.DecorContentParent$IOException
com.rubenroy.minimaltodo.eval_zs0        abstract interface android.support.v7.util.ThreadUtil
com.rubenroy.minimaltodo.eval_zx4        public android.support.v7.widget.AppCompatButton
com.rubenroy.minimaltodo.eval__1$1       android.support.v4.widget.ExploreByTouchHelper$1
com.rubenroy.minimaltodo.eval__1$b       android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider
com.rubenroy.minimaltodo.eval__9$1       final android.support.v4.app.BackStackState$1
com.rubenroy.minimaltodo.eval__j$_       android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl
com.rubenroy.minimaltodo.eval__j$a       android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl
com.rubenroy.minimaltodo.eval__j$y       android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl
com.rubenroy.minimaltodo.eval__j$z       abstract interface android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl
com.rubenroy.minimaltodo.eval__k$h       android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl
com.rubenroy.minimaltodo.eval__k$q       abstract interface android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl
com.rubenroy.minimaltodo.eval__k$t       android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl
com.rubenroy.minimaltodo.eval__k$y       android.support.v4.widget.EdgeEffectCompat$EdgeEffectLollipopImpl
com.rubenroy.minimaltodo.eval__q$1       final android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1
com.rubenroy.minimaltodo.eval__q$b       abstract interface android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge
com.rubenroy.minimaltodo.eval__u$1       android.support.v4.widget.CursorAdapter$1
com.rubenroy.minimaltodo.eval__u$_       android.support.v4.widget.CursorAdapter$ChangeObserver
com.rubenroy.minimaltodo.eval__u$u       android.support.v4.widget.CursorAdapter$MyDataSetObserver
com.rubenroy.minimaltodo.eval_a7$1       android.support.design.widget.StateListAnimator$1
com.rubenroy.minimaltodo.eval_a7$v       android.support.design.widget.StateListAnimator$Tuple
com.rubenroy.minimaltodo.eval_ac$a       android.support.v4.media.session.MediaSessionCompatApi21$QueueItem
com.rubenroy.minimaltodo.eval_ac$j       android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy
com.rubenroy.minimaltodo.eval_ac$v       abstract interface android.support.v4.media.session.MediaSessionCompatApi21$Callback
com.rubenroy.minimaltodo.eval_ak$1       android.support.v4.media.TransportMediator$1
com.rubenroy.minimaltodo.eval_ak$2       android.support.v4.media.TransportMediator$2
com.rubenroy.minimaltodo.eval_ap$1       android.support.v4.widget.SlidingPaneLayout$1
com.rubenroy.minimaltodo.eval_ap$b       android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase
com.rubenroy.minimaltodo.eval_ap$d       android.support.v4.widget.SlidingPaneLayout$DragHelperCallback
com.rubenroy.minimaltodo.eval_ap$e       public abstract interface android.support.v4.widget.SlidingPaneLayout$PanelSlideListener
com.rubenroy.minimaltodo.eval_ap$h       android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate
com.rubenroy.minimaltodo.eval_ap$p       abstract interface android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl
com.rubenroy.minimaltodo.eval_ap$q       public android.support.v4.widget.SlidingPaneLayout$LayoutParams
com.rubenroy.minimaltodo.eval_ap$x       android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable
com.rubenroy.minimaltodo.eval_ar$f       android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB
com.rubenroy.minimaltodo.eval_ar$h       android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImpl21
com.rubenroy.minimaltodo.eval_as$c       public abstract interface android.support.v4.widget.NestedScrollView$OnScrollChangeListener
com.rubenroy.minimaltodo.eval_as$f       android.support.v4.widget.NestedScrollView$AccessibilityDelegate
com.rubenroy.minimaltodo.eval_as$k       android.support.v4.widget.NestedScrollView$SavedState
com.rubenroy.minimaltodo.eval_b3$c       abstract interface android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener
com.rubenroy.minimaltodo.eval_ba$a       android.support.v4.graphics.drawable.DrawableCompat$JellybeanMr1DrawableImpl
com.rubenroy.minimaltodo.eval_ba$i       android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl
com.rubenroy.minimaltodo.eval_ba$l       abstract interface android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl
com.rubenroy.minimaltodo.eval_ba$n       android.support.v4.graphics.drawable.DrawableCompat$MDrawableImpl
com.rubenroy.minimaltodo.eval_ba$o       android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl
com.rubenroy.minimaltodo.eval_ba$t       android.support.v4.graphics.drawable.DrawableCompat$LollipopMr1DrawableImpl
com.rubenroy.minimaltodo.eval_bc$1       android.support.v7.app.ActionBarDrawerToggle$1
com.rubenroy.minimaltodo.eval_bc$d       public abstract interface android.support.v7.app.ActionBarDrawerToggle$DelegateProvider
com.rubenroy.minimaltodo.eval_bc$l       android.support.v7.app.ActionBarDrawerToggle$DrawerArrowDrawableToggle
com.rubenroy.minimaltodo.eval_bc$m       android.support.v7.app.ActionBarDrawerToggle$DummyDelegate
com.rubenroy.minimaltodo.eval_bc$p       android.support.v7.app.ActionBarDrawerToggle$JellybeanMr2Delegate
com.rubenroy.minimaltodo.eval_bc$t       android.support.v7.app.ActionBarDrawerToggle$ToolbarCompatDelegate
com.rubenroy.minimaltodo.eval_bc$u       public abstract interface android.support.v7.app.ActionBarDrawerToggle$Delegate
com.rubenroy.minimaltodo.eval_bc$y       abstract interface android.support.v7.app.ActionBarDrawerToggle$DrawerToggle
com.rubenroy.minimaltodo.eval_bn$n       android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable
com.rubenroy.minimaltodo.eval_bo$1       android.support.design.widget.SnackbarManager$1
com.rubenroy.minimaltodo.eval_bo$p       android.support.design.widget.SnackbarManager$SnackbarRecord
com.rubenroy.minimaltodo.eval_bo$r       abstract interface android.support.design.widget.SnackbarManager$Callback
com.rubenroy.minimaltodo.eval_bq$1       android.support.design.widget.ValueAnimatorCompatImplEclairMr1$1
com.rubenroy.minimaltodo.eval_by$j       android.support.v4.media.MediaDescriptionCompatApi21$Builder
com.rubenroy.minimaltodo.eval_c2$b       android.support.v4.media.routing.MediaRouterJellybeanMr1$CallbackProxy
com.rubenroy.minimaltodo.eval_c2$k       public final android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround
com.rubenroy.minimaltodo.eval_c2$p       public abstract interface android.support.v4.media.routing.MediaRouterJellybeanMr1$Callback
com.rubenroy.minimaltodo.eval_c2$q       public final android.support.v4.media.routing.MediaRouterJellybeanMr1$RouteInfo
com.rubenroy.minimaltodo.eval_c2$u       public final android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround
com.rubenroy.minimaltodo.eval_c4$f       android.support.v4.view.LayoutInflaterCompatHC$FactoryWrapperHC
com.rubenroy.minimaltodo.eval_c_$1       android.support.v4.media.VolumeProviderCompat$1
com.rubenroy.minimaltodo.eval_c_$p       public abstract interface android.support.v4.media.VolumeProviderCompat$ControlType
com.rubenroy.minimaltodo.eval_c_$w       public abstract android.support.v4.media.VolumeProviderCompat$Callback
com.rubenroy.minimaltodo.eval_ca$1       final android.support.v4.os.ResultReceiver$1
com.rubenroy.minimaltodo.eval_ca$s       android.support.v4.os.ResultReceiver$MyResultReceiver
com.rubenroy.minimaltodo.eval_ca$z       android.support.v4.os.ResultReceiver$MyRunnable
com.rubenroy.minimaltodo.eval_cl$1       android.support.v4.app.BackStackRecord$1
com.rubenroy.minimaltodo.eval_cl$2       android.support.v4.app.BackStackRecord$2
com.rubenroy.minimaltodo.eval_cl$3       android.support.v4.app.BackStackRecord$3
com.rubenroy.minimaltodo.eval_cl$m       final android.support.v4.app.BackStackRecord$Op
com.rubenroy.minimaltodo.eval_cl$z       public android.support.v4.app.BackStackRecord$TransitionState
com.rubenroy.minimaltodo.eval_d0$j       abstract interface android.support.v4.widget.CursorFilter$CursorFilterClient
com.rubenroy.minimaltodo.eval_d2$f       android.support.v4.content.ContentResolverCompat$ContentResolverCompatImplBase
com.rubenroy.minimaltodo.eval_d2$i       abstract interface android.support.v4.content.ContentResolverCompat$ContentResolverCompatImpl
com.rubenroy.minimaltodo.eval_d2$n       android.support.v4.content.ContentResolverCompat$ContentResolverCompatImplJB
com.rubenroy.minimaltodo.eval_d3$1       android.support.v7.app.AlertController$1
com.rubenroy.minimaltodo.eval_d3$2       android.support.v7.app.AlertController$2
com.rubenroy.minimaltodo.eval_d3$3       android.support.v7.app.AlertController$3
com.rubenroy.minimaltodo.eval_d3$4       android.support.v7.app.AlertController$4
com.rubenroy.minimaltodo.eval_d3$5       android.support.v7.app.AlertController$5
com.rubenroy.minimaltodo.eval_d3$h       android.support.v7.app.AlertController$CheckedItemAdapter
com.rubenroy.minimaltodo.eval_d3$x       public android.support.v7.app.AlertController$AlertParams
com.rubenroy.minimaltodo.eval_d7$1       final android.support.v4.widget.SearchViewCompatHoneycomb$1
com.rubenroy.minimaltodo.eval_d7$2       final android.support.v4.widget.SearchViewCompatHoneycomb$2
com.rubenroy.minimaltodo.eval_d7$a       abstract interface android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge
com.rubenroy.minimaltodo.eval_d7$i       abstract interface android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge
com.rubenroy.minimaltodo.eval_dk$1       android.support.v4.media.session.MediaSessionCompat$1
com.rubenroy.minimaltodo.eval_dk$a       abstract interface android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl
com.rubenroy.minimaltodo.eval_dk$b       public final android.support.v4.media.session.MediaSessionCompat$Token
com.rubenroy.minimaltodo.eval_dk$j       android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase
com.rubenroy.minimaltodo.eval_dk$k       public abstract interface android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener
com.rubenroy.minimaltodo.eval_dk$n       public abstract android.support.v4.media.session.MediaSessionCompat$Callback
com.rubenroy.minimaltodo.eval_dk$o       android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21
com.rubenroy.minimaltodo.eval_dk$u       final android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper
com.rubenroy.minimaltodo.eval_do$1       final android.support.v4.app.RemoteInput$1
com.rubenroy.minimaltodo.eval_do$h       android.support.v4.app.RemoteInput$ImplBase
com.rubenroy.minimaltodo.eval_do$m       android.support.v4.app.RemoteInput$ImplApi20
com.rubenroy.minimaltodo.eval_do$n       public final android.support.v4.app.RemoteInput$Builder
com.rubenroy.minimaltodo.eval_do$s       abstract interface android.support.v4.app.RemoteInput$Impl
com.rubenroy.minimaltodo.eval_dp$1       final android.support.v4.speech.tts.TextToSpeechICSMR1$1
com.rubenroy.minimaltodo.eval_dp$2       final android.support.v4.speech.tts.TextToSpeechICSMR1$2
com.rubenroy.minimaltodo.eval_dp$m       abstract interface android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1
com.rubenroy.minimaltodo.eval_dr$1       android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$1
com.rubenroy.minimaltodo.eval_dr$_       android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi22Impl
com.rubenroy.minimaltodo.eval_dr$a       public android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat
com.rubenroy.minimaltodo.eval_dr$e       android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl
com.rubenroy.minimaltodo.eval_dr$g       android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi21Impl
com.rubenroy.minimaltodo.eval_dr$h       android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl
com.rubenroy.minimaltodo.eval_dr$j       abstract interface android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl
com.rubenroy.minimaltodo.eval_dr$k       android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl
com.rubenroy.minimaltodo.eval_dr$l       android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl
com.rubenroy.minimaltodo.eval_dr$r       public android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat
com.rubenroy.minimaltodo.eval_dr$w       android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr1Impl
com.rubenroy.minimaltodo.eval_du$1       android.support.v4.content.SharedPreferencesCompat$1
com.rubenroy.minimaltodo.eval_du$i       public android.support.v4.content.SharedPreferencesCompat$EditorCompat
com.rubenroy.minimaltodo.eval_dv$1       final android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1
com.rubenroy.minimaltodo.eval_dv$z       abstract interface android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge
com.rubenroy.minimaltodo.eval_dx$1       final android.support.v4.view.ViewPropertyAnimatorCompatJB$1
com.rubenroy.minimaltodo.eval_e6$h       public abstract android.support.v4.app.RemoteInputCompatBase$RemoteInput
com.rubenroy.minimaltodo.eval_e_$m       public abstract interface android.support.v4.view.ActionProvider$SubUiVisibilityListener
com.rubenroy.minimaltodo.eval_e_$o       public abstract interface android.support.v4.view.ActionProvider$VisibilityListener
com.rubenroy.minimaltodo.eval_ep$1       android.support.v7.app.AppCompatDelegateImplBase$1
com.rubenroy.minimaltodo.eval_ep$q       android.support.v7.app.AppCompatDelegateImplBase$ActionBarDrawableToggleImpl
com.rubenroy.minimaltodo.eval_ep$w       android.support.v7.app.AppCompatDelegateImplBase$AppCompatWindowCallbackBase
com.rubenroy.minimaltodo.eval_er$1       android.support.v4.print.PrintHelperKitkat$1
com.rubenroy.minimaltodo.eval_er$2       android.support.v4.print.PrintHelperKitkat$2
com.rubenroy.minimaltodo.eval_er$v       public abstract interface android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback
com.rubenroy.minimaltodo.eval_es$j       abstract interface android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl
com.rubenroy.minimaltodo.eval_es$m       android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase
com.rubenroy.minimaltodo.eval_es$z       android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2
com.rubenroy.minimaltodo.eval_f1$e       android.support.v4.graphics.BitmapCompat$JbMr2BitmapCompatImpl
com.rubenroy.minimaltodo.eval_f1$l       abstract interface android.support.v4.graphics.BitmapCompat$BitmapImpl
com.rubenroy.minimaltodo.eval_f1$n       android.support.v4.graphics.BitmapCompat$BaseBitmapImpl
com.rubenroy.minimaltodo.eval_f1$t       android.support.v4.graphics.BitmapCompat$HcMr1BitmapCompatImpl
com.rubenroy.minimaltodo.eval_f4$k       android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl
com.rubenroy.minimaltodo.eval_f4$n       public abstract android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat
com.rubenroy.minimaltodo.eval_f4$q       android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl
com.rubenroy.minimaltodo.eval_f4$s       abstract interface android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl
com.rubenroy.minimaltodo.eval_f6$1       final android.support.v4.app.ActivityCompat$1
com.rubenroy.minimaltodo.eval_f6$b       public abstract interface android.support.v4.app.ActivityCompat$OnRequestPermissionsResultCallback
com.rubenroy.minimaltodo.eval_f6$h       android.support.v4.app.ActivityCompat$SharedElementCallback21Impl
com.rubenroy.minimaltodo.eval_fc$x       android.support.v7.app.AppCompatDelegateImplV23$AppCompatWindowCallbackV23
com.rubenroy.minimaltodo.eval_fg$1       final android.support.v4.app.FragmentState$1
com.rubenroy.minimaltodo.eval_fm$_       android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl
com.rubenroy.minimaltodo.eval_fm$b       abstract interface android.support.v4.view.KeyEventCompat$KeyEventVersionImpl
com.rubenroy.minimaltodo.eval_fm$p       android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl
com.rubenroy.minimaltodo.eval_fm$t       android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl
com.rubenroy.minimaltodo.eval_fp$p       android.support.v4.text.ICUCompat$ICUCompatImplIcs
com.rubenroy.minimaltodo.eval_fp$v       abstract interface android.support.v4.text.ICUCompat$ICUCompatImpl
com.rubenroy.minimaltodo.eval_fp$x       android.support.v4.text.ICUCompat$ICUCompatImplBase
com.rubenroy.minimaltodo.eval_fr$b       android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich
com.rubenroy.minimaltodo.eval_fr$e       android.support.v4.app.NotificationManagerCompat$ImplBase
com.rubenroy.minimaltodo.eval_fr$i       android.support.v4.app.NotificationManagerCompat$SideChannelManager
com.rubenroy.minimaltodo.eval_fr$n       abstract interface android.support.v4.app.NotificationManagerCompat$Impl
com.rubenroy.minimaltodo.eval_fr$y       android.support.v4.app.NotificationManagerCompat$CancelTask
com.rubenroy.minimaltodo.eval_fz$1       android.support.design.widget.ViewGroupUtils$1
com.rubenroy.minimaltodo.eval_fz$_       android.support.design.widget.ViewGroupUtils$ViewGroupUtilsImplHoneycomb
com.rubenroy.minimaltodo.eval_fz$f       android.support.design.widget.ViewGroupUtils$ViewGroupUtilsImplBase
com.rubenroy.minimaltodo.eval_fz$l       abstract interface android.support.design.widget.ViewGroupUtils$ViewGroupUtilsImpl
com.rubenroy.minimaltodo.eval_g4$1       android.support.v4.util.ArrayMap$1
com.rubenroy.minimaltodo.eval_g7$i       android.support.v7.internal.app.AppCompatViewInflater$DeclaredOnClickListener
com.rubenroy.minimaltodo.eval_g9$j       android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl
com.rubenroy.minimaltodo.eval_g9$l       android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl
com.rubenroy.minimaltodo.eval_g9$m       android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl
com.rubenroy.minimaltodo.eval_g9$y       abstract interface android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl
com.rubenroy.minimaltodo.eval_ge$o       android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl
com.rubenroy.minimaltodo.eval_ge$t       android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl
com.rubenroy.minimaltodo.eval_gg$1       android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1$1
com.rubenroy.minimaltodo.eval_gg$2       android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1$2
com.rubenroy.minimaltodo.eval_gj$1       final android.support.v4.media.session.PlaybackStateCompat$1
com.rubenroy.minimaltodo.eval_gj$f       public abstract interface android.support.v4.media.session.PlaybackStateCompat$State
com.rubenroy.minimaltodo.eval_gj$o       public final android.support.v4.media.session.PlaybackStateCompat$Builder
com.rubenroy.minimaltodo.eval_gj$p       public final android.support.v4.media.session.PlaybackStateCompat$CustomAction
com.rubenroy.minimaltodo.eval_gj$y       public abstract interface android.support.v4.media.session.PlaybackStateCompat$Actions
com.rubenroy.minimaltodo.eval_h6$p       android.support.v4.app.NavUtils$NavUtilsImplJB
com.rubenroy.minimaltodo.eval_h6$q       abstract interface android.support.v4.app.NavUtils$NavUtilsImpl
com.rubenroy.minimaltodo.eval_hg$f       public abstract android.support.v4.media.session.IMediaSession$Stub
com.rubenroy.minimaltodo.eval_hu$f       public abstract android.support.v4.media.IMediaBrowserServiceCompatCallbacks$Stub
com.rubenroy.minimaltodo.eval_i2$1       final android.support.v4.view.ViewCompatLollipop$1
com.rubenroy.minimaltodo.eval_ik$1       android.support.v4.app.NotificationCompat$1
com.rubenroy.minimaltodo.eval_ik$_       public abstract interface android.support.v4.app.NotificationCompat$Extender
com.rubenroy.minimaltodo.eval_ik$a       public final android.support.v4.app.NotificationCompat$WearableExtender
com.rubenroy.minimaltodo.eval_ik$c       abstract interface android.support.v4.app.NotificationCompat$NotificationCompatImpl
com.rubenroy.minimaltodo.eval_ik$d       public android.support.v4.app.NotificationCompat$Action
com.rubenroy.minimaltodo.eval_ik$f       android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich
com.rubenroy.minimaltodo.eval_ik$h       public final android.support.v4.app.NotificationCompat$CarExtender
com.rubenroy.minimaltodo.eval_ik$i       public android.support.v4.app.NotificationCompat$InboxStyle
com.rubenroy.minimaltodo.eval_ik$l       android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat
com.rubenroy.minimaltodo.eval_ik$q       android.support.v4.app.NotificationCompat$NotificationCompatImplApi20
com.rubenroy.minimaltodo.eval_ik$s       public android.support.v4.app.NotificationCompat$BuilderExtender
com.rubenroy.minimaltodo.eval_ik$v       public android.support.v4.app.NotificationCompat$BigPictureStyle
com.rubenroy.minimaltodo.eval_ik$w       android.support.v4.app.NotificationCompat$NotificationCompatImplBase
com.rubenroy.minimaltodo.eval_ik$x       public android.support.v4.app.NotificationCompat$Builder
com.rubenroy.minimaltodo.eval_ik$y       android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean
com.rubenroy.minimaltodo.eval_it$_       android.support.v13.app.FragmentCompat$MncFragmentCompatImpl
com.rubenroy.minimaltodo.eval_it$h       android.support.v13.app.FragmentCompat$BaseFragmentCompatImpl
com.rubenroy.minimaltodo.eval_it$k       android.support.v13.app.FragmentCompat$ICSMR1FragmentCompatImpl
com.rubenroy.minimaltodo.eval_it$l       public abstract interface android.support.v13.app.FragmentCompat$OnRequestPermissionsResultCallback
com.rubenroy.minimaltodo.eval_it$v       android.support.v13.app.FragmentCompat$ICSFragmentCompatImpl
com.rubenroy.minimaltodo.eval_it$z       abstract interface android.support.v13.app.FragmentCompat$FragmentCompatImpl
com.rubenroy.minimaltodo.eval_ix$a       android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl
com.rubenroy.minimaltodo.eval_ix$b       abstract interface android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl
com.rubenroy.minimaltodo.eval_ix$g       android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventKitKatImpl
com.rubenroy.minimaltodo.eval_ix$o       android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl
com.rubenroy.minimaltodo.eval_iz$1       android.support.v4.print.PrintHelper$1
com.rubenroy.minimaltodo.eval_iz$d       final android.support.v4.print.PrintHelper$PrintHelperKitkatImpl
com.rubenroy.minimaltodo.eval_iz$i       final android.support.v4.print.PrintHelper$PrintHelperStubImpl
com.rubenroy.minimaltodo.eval_iz$l       abstract interface android.support.v4.print.PrintHelper$PrintHelperVersionImpl
com.rubenroy.minimaltodo.eval_iz$t       public abstract interface android.support.v4.print.PrintHelper$OnPrintFinishCallback
com.rubenroy.minimaltodo.eval_j0$_       android.support.v4.view.ViewConfigurationCompat$IcsViewConfigurationVersionImpl
com.rubenroy.minimaltodo.eval_j0$b       abstract interface android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl
com.rubenroy.minimaltodo.eval_j0$g       android.support.v4.view.ViewConfigurationCompat$HoneycombViewConfigurationVersionImpl
com.rubenroy.minimaltodo.eval_j0$k       android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl
com.rubenroy.minimaltodo.eval_j0$p       android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl
com.rubenroy.minimaltodo.eval_j1$k       android.support.v7.app.AppCompatDelegateImplV14$AppCompatWindowCallbackV14
com.rubenroy.minimaltodo.eval_j5$x       final android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction
com.rubenroy.minimaltodo.eval_j6$l       abstract interface android.support.v4.media.session.MediaSessionCompatApi14$Callback
com.rubenroy.minimaltodo.eval_jc$j       android.support.v4.media.session.MediaSessionCompatApi18$OnPlaybackPositionUpdateListener
com.rubenroy.minimaltodo.eval_je$1       final android.support.v4.media.VolumeProviderCompatApi21$1
com.rubenroy.minimaltodo.eval_je$f       public abstract interface android.support.v4.media.VolumeProviderCompatApi21$Delegate
com.rubenroy.minimaltodo.eval_jk$d       public abstract android.support.v4.media.session.IMediaControllerCallback$Stub
com.rubenroy.minimaltodo.eval_jp$1       android.support.v4.media.TransportMediatorJellybeanMR2$1
com.rubenroy.minimaltodo.eval_jp$2       android.support.v4.media.TransportMediatorJellybeanMR2$2
com.rubenroy.minimaltodo.eval_jp$3       android.support.v4.media.TransportMediatorJellybeanMR2$3
com.rubenroy.minimaltodo.eval_jp$4       android.support.v4.media.TransportMediatorJellybeanMR2$4
com.rubenroy.minimaltodo.eval_jp$5       android.support.v4.media.TransportMediatorJellybeanMR2$5
com.rubenroy.minimaltodo.eval_jp$6       android.support.v4.media.TransportMediatorJellybeanMR2$6
com.rubenroy.minimaltodo.eval_jq$d       abstract interface android.support.v4.view.GravityCompat$GravityCompatImpl
com.rubenroy.minimaltodo.eval_jq$v       android.support.v4.view.GravityCompat$GravityCompatImplBase
com.rubenroy.minimaltodo.eval_jq$z       android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1
com.rubenroy.minimaltodo.eval_jx$b       android.support.v7.internal.view.SupportMenuInflater$MenuState
com.rubenroy.minimaltodo.eval_jx$w       android.support.v7.internal.view.SupportMenuInflater$InflatedOnMenuItemClickListener
com.rubenroy.minimaltodo.eval_k4$t       android.support.v4.view.LayoutInflaterCompatBase$FactoryWrapper
com.rubenroy.minimaltodo.eval_kj$x       android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator
com.rubenroy.minimaltodo.eval_kt$f       final android.support.v4.content.AsyncTaskLoader$LoadTask
com.rubenroy.minimaltodo.eval_l6$a       android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21$CollectionItemInfo
com.rubenroy.minimaltodo.eval_l7$e       public final android.support.v4.media.routing.MediaRouterJellybeanMr2$UserRouteInfo
com.rubenroy.minimaltodo.eval_l7$k       public final android.support.v4.media.routing.MediaRouterJellybeanMr2$RouteInfo
com.rubenroy.minimaltodo.eval_le$l       android.support.v4.view.MotionEventCompat$GingerbreadMotionEventVersionImpl
com.rubenroy.minimaltodo.eval_le$o       abstract interface android.support.v4.view.MotionEventCompat$MotionEventVersionImpl
com.rubenroy.minimaltodo.eval_le$t       android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl
com.rubenroy.minimaltodo.eval_le$x       android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl
com.rubenroy.minimaltodo.eval_lm$1       android.support.v7.app.NotificationCompat$1
com.rubenroy.minimaltodo.eval_lm$c       android.support.v7.app.NotificationCompat$JellybeanExtender
com.rubenroy.minimaltodo.eval_lm$f       public android.support.v7.app.NotificationCompat$Builder
com.rubenroy.minimaltodo.eval_lm$k       android.support.v7.app.NotificationCompat$LollipopExtender
com.rubenroy.minimaltodo.eval_lm$r       public android.support.v7.app.NotificationCompat$MediaStyle
com.rubenroy.minimaltodo.eval_lm$z       android.support.v7.app.NotificationCompat$IceCreamSandwichExtender
com.rubenroy.minimaltodo.eval_lp$h       android.support.v4.content.FileProvider$SimplePathStrategy
com.rubenroy.minimaltodo.eval_lp$w       abstract interface android.support.v4.content.FileProvider$PathStrategy
com.rubenroy.minimaltodo.eval_lx$b       android.support.v4.media.session.MediaSessionCompatApi23$CallbackProxy
com.rubenroy.minimaltodo.eval_lx$d       public abstract interface android.support.v4.media.session.MediaSessionCompatApi23$Callback
com.rubenroy.minimaltodo.eval_m7$u       android.support.v4.media.session.MediaSessionCompatApi19$OnMetadataUpdateListener
com.rubenroy.minimaltodo.eval_md$1       android.support.v4.view.PagerTitleStrip$1
com.rubenroy.minimaltodo.eval_md$_       android.support.v4.view.PagerTitleStrip$PageListener
com.rubenroy.minimaltodo.eval_md$a       abstract interface android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl
com.rubenroy.minimaltodo.eval_md$l       android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs
com.rubenroy.minimaltodo.eval_md$p       android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase
com.rubenroy.minimaltodo.eval_mi$1       android.support.design.widget.TextInputLayout$1
com.rubenroy.minimaltodo.eval_mi$2       android.support.design.widget.TextInputLayout$2
com.rubenroy.minimaltodo.eval_mi$3       android.support.design.widget.TextInputLayout$3
com.rubenroy.minimaltodo.eval_mi$4       android.support.design.widget.TextInputLayout$4
com.rubenroy.minimaltodo.eval_mi$i       android.support.design.widget.TextInputLayout$TextInputAccessibilityDelegate
com.rubenroy.minimaltodo.eval_mk$1       android.support.v4.text.TextDirectionHeuristicsCompat$1
com.rubenroy.minimaltodo.eval_mk$m       android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal
com.rubenroy.minimaltodo.eval_mk$n       android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong
com.rubenroy.minimaltodo.eval_mk$o       android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong
com.rubenroy.minimaltodo.eval_mk$r       android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale
com.rubenroy.minimaltodo.eval_mn$i       final android.support.v4.app.LoaderManagerImpl$LoaderInfo
com.rubenroy.minimaltodo.eval_mo$1       final android.support.v4.media.session.ParcelableVolumeInfo$1
com.rubenroy.minimaltodo.eval_mp$c       public android.support.v4.widget.SearchViewCompatIcs$MySearchView
com.rubenroy.minimaltodo.eval_mt$c       android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV11
com.rubenroy.minimaltodo.eval_mt$f       android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplBase
com.rubenroy.minimaltodo.eval_mt$m       android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV21
com.rubenroy.minimaltodo.eval_mt$z       abstract interface android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImpl
com.rubenroy.minimaltodo.eval_mu$1       android.support.v4.app.Fragment$1
com.rubenroy.minimaltodo.eval_mu$_       public android.support.v4.app.Fragment$InstantiationException
com.rubenroy.minimaltodo.eval_mu$t       public android.support.v4.app.Fragment$SavedState
com.rubenroy.minimaltodo.eval_n2$q       public android.support.v4.app.NotificationCompatApi20$Builder
com.rubenroy.minimaltodo.eval_n5$1       android.support.design.widget.FloatingActionButtonEclairMr1$1
com.rubenroy.minimaltodo.eval_n5$2       android.support.design.widget.FloatingActionButtonEclairMr1$2
com.rubenroy.minimaltodo.eval_n5$n       android.support.design.widget.FloatingActionButtonEclairMr1$ElevateToTranslationZAnimation
com.rubenroy.minimaltodo.eval_n5$x       abstract android.support.design.widget.FloatingActionButtonEclairMr1$BaseShadowAnimation
com.rubenroy.minimaltodo.eval_n7$j       android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl
com.rubenroy.minimaltodo.eval_n7$m       android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl
com.rubenroy.minimaltodo.eval_n7$p       abstract interface android.support.v4.widget.PopupMenuCompat$PopupMenuImpl
com.rubenroy.minimaltodo.eval_nc$m       public android.support.v4.media.MediaMetadataCompatApi21$Builder
com.rubenroy.minimaltodo.eval_ne$1       final android.support.v4.view.AccessibilityDelegateCompatIcs$1
com.rubenroy.minimaltodo.eval_ne$z       public abstract interface android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge
com.rubenroy.minimaltodo.eval_nf$1       android.support.v7.internal.app.WindowDecorActionBar$1
com.rubenroy.minimaltodo.eval_nf$2       android.support.v7.internal.app.WindowDecorActionBar$2
com.rubenroy.minimaltodo.eval_nf$3       android.support.v7.internal.app.WindowDecorActionBar$3
com.rubenroy.minimaltodo.eval_nf$_       public android.support.v7.internal.app.WindowDecorActionBar$TabImpl
com.rubenroy.minimaltodo.eval_nf$f       public android.support.v7.internal.app.WindowDecorActionBar$ActionModeImpl
com.rubenroy.minimaltodo.eval_nh$1       final android.support.v4.media.MediaDescriptionCompat$1
com.rubenroy.minimaltodo.eval_nh$n       public final android.support.v4.media.MediaDescriptionCompat$Builder
com.rubenroy.minimaltodo.eval_nw$o       android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform
com.rubenroy.minimaltodo.eval_nz$u       android.support.v4.os.ParcelableCompat$CompatCreator
com.rubenroy.minimaltodo.eval_o0$1       android.support.v4.media.session.MediaControllerCompat$1
com.rubenroy.minimaltodo.eval_o0$_       android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21
com.rubenroy.minimaltodo.eval_o0$d       android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase
com.rubenroy.minimaltodo.eval_o0$g       public abstract android.support.v4.media.session.MediaControllerCompat$TransportControls
com.rubenroy.minimaltodo.eval_o0$h       public abstract android.support.v4.media.session.MediaControllerCompat$Callback
com.rubenroy.minimaltodo.eval_o0$r       abstract interface android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl
com.rubenroy.minimaltodo.eval_o0$v       public final android.support.v4.media.session.MediaControllerCompat$PlaybackInfo
com.rubenroy.minimaltodo.eval_o0$x       android.support.v4.media.session.MediaControllerCompat$TransportControlsApi23
com.rubenroy.minimaltodo.eval_o7$d       android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl
com.rubenroy.minimaltodo.eval_o7$k       android.support.v4.view.ViewParentCompat$ViewParentCompatKitKatImpl
com.rubenroy.minimaltodo.eval_o7$m       android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl
com.rubenroy.minimaltodo.eval_o7$y       abstract interface android.support.v4.view.ViewParentCompat$ViewParentCompatImpl
com.rubenroy.minimaltodo.eval_ob$e       android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl
com.rubenroy.minimaltodo.eval_ob$v       android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl
com.rubenroy.minimaltodo.eval_ob$y       abstract interface android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl
com.rubenroy.minimaltodo.eval_on$_       final android.support.v4.util.MapCollections$ValuesCollection
com.rubenroy.minimaltodo.eval_on$b       final android.support.v4.util.MapCollections$MapIterator
com.rubenroy.minimaltodo.eval_on$l       final android.support.v4.util.MapCollections$EntrySet
com.rubenroy.minimaltodo.eval_on$n       final android.support.v4.util.MapCollections$ArrayIterator
com.rubenroy.minimaltodo.eval_on$v       final android.support.v4.util.MapCollections$KeySet
com.rubenroy.minimaltodo.eval_op$1       final android.support.design.widget.ViewUtils$1
com.rubenroy.minimaltodo.eval_op$u       abstract interface android.support.design.widget.ViewUtils$ViewUtilsImpl
com.rubenroy.minimaltodo.eval_op$v       android.support.design.widget.ViewUtils$ViewUtilsImplBase
com.rubenroy.minimaltodo.eval_op$w       android.support.design.widget.ViewUtils$ViewUtilsImplLollipop
com.rubenroy.minimaltodo.eval_os$1       final android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$1
com.rubenroy.minimaltodo.eval_os$b       public android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject
com.rubenroy.minimaltodo.eval_os$f       public final android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationResultInternal
com.rubenroy.minimaltodo.eval_os$z       public abstract android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationCallback
com.rubenroy.minimaltodo.eval_ov$t       public abstract interface android.support.v4.os.CancellationSignal$OnCancelListener
com.rubenroy.minimaltodo.eval_p3$r       public android.support.v4.app.NotificationCompatJellybean$Builder
com.rubenroy.minimaltodo.eval_p4$1       android.support.v4.net.TrafficStatsCompat$1
com.rubenroy.minimaltodo.eval_p4$_       android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl
com.rubenroy.minimaltodo.eval_p4$e       abstract interface android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl
com.rubenroy.minimaltodo.eval_p4$w       android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl
com.rubenroy.minimaltodo.eval_p5$_       android.support.v4.widget.TextViewCompat$JbMr2TextViewCompatImpl
com.rubenroy.minimaltodo.eval_p5$d       abstract interface android.support.v4.widget.TextViewCompat$TextViewCompatImpl
com.rubenroy.minimaltodo.eval_p5$g       android.support.v4.widget.TextViewCompat$BaseTextViewCompatImpl
com.rubenroy.minimaltodo.eval_p5$j       android.support.v4.widget.TextViewCompat$JbTextViewCompatImpl
com.rubenroy.minimaltodo.eval_p5$w       android.support.v4.widget.TextViewCompat$JbMr1TextViewCompatImpl
com.rubenroy.minimaltodo.eval_p7$c       android.support.v4.hardware.fingerprint.FingerprintManagerCompat$Api23FingerprintManagerCompatImpl
com.rubenroy.minimaltodo.eval_p7$f       public android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject
com.rubenroy.minimaltodo.eval_p7$w       public final android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult
com.rubenroy.minimaltodo.eval_p7$x       public abstract android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback
com.rubenroy.minimaltodo.eval_pa$n       android.support.v4.widget.CircleImageView$OvalShadow
com.rubenroy.minimaltodo.eval_pt$g       android.support.v7.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo
com.rubenroy.minimaltodo.eval_px$a       android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl
com.rubenroy.minimaltodo.eval_px$b       abstract interface android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl
com.rubenroy.minimaltodo.eval_px$l       android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl
com.rubenroy.minimaltodo.eval_px$v       android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl
com.rubenroy.minimaltodo.eval_pz$1       android.support.design.widget.NavigationView$1
com.rubenroy.minimaltodo.eval_pz$m       public abstract interface android.support.design.widget.NavigationView$OnNavigationItemSelectedListener
com.rubenroy.minimaltodo.eval_q0$1       final android.support.v4.app.FragmentTransitionCompat21$1
com.rubenroy.minimaltodo.eval_q0$2       final android.support.v4.app.FragmentTransitionCompat21$2
com.rubenroy.minimaltodo.eval_q0$3       final android.support.v4.app.FragmentTransitionCompat21$3
com.rubenroy.minimaltodo.eval_q0$4       final android.support.v4.app.FragmentTransitionCompat21$4
com.rubenroy.minimaltodo.eval_q0$e       public android.support.v4.app.FragmentTransitionCompat21$EpicenterView
com.rubenroy.minimaltodo.eval_q0$u       public abstract interface android.support.v4.app.FragmentTransitionCompat21$ViewRetriever
com.rubenroy.minimaltodo.eval_q8$1       android.support.v4.content.LocalBroadcastManager$1
com.rubenroy.minimaltodo.eval_q8$c       android.support.v4.content.LocalBroadcastManager$ReceiverRecord
com.rubenroy.minimaltodo.eval_q8$f       android.support.v4.content.LocalBroadcastManager$BroadcastRecord
com.rubenroy.minimaltodo.eval_q9$i       android.support.v4.media.MediaDescriptionCompatApi23$Builder
com.rubenroy.minimaltodo.eval_qa$1       android.support.v13.app.FragmentTabHost$1
com.rubenroy.minimaltodo.eval_qa$d       android.support.v13.app.FragmentTabHost$DummyTabFactory
com.rubenroy.minimaltodo.eval_qa$j       android.support.v13.app.FragmentTabHost$SavedState
com.rubenroy.minimaltodo.eval_qa$r       final android.support.v13.app.FragmentTabHost$TabInfo
com.rubenroy.minimaltodo.eval_qm$b       public abstract interface android.support.v4.app.ActivityCompatApi23$RequestPermissionsRequestCodeValidator
com.rubenroy.minimaltodo.eval_qs$i       android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo
com.rubenroy.minimaltodo.eval_qt$1       final android.support.v4.view.ViewPropertyAnimatorCompatICS$1
com.rubenroy.minimaltodo.eval_qw$u       public android.support.v4.media.session.MediaControllerCompatApi23$TransportControls
com.rubenroy.minimaltodo.eval_qx$y       public abstract interface android.support.v7.graphics.drawable.DrawerArrowDrawable$ArrowDirection
com.rubenroy.minimaltodo.eval_r5$1       final android.support.v4.app.FragmentManagerState$1
com.rubenroy.minimaltodo.eval_ri$b       public android.support.v4.media.session.MediaControllerCompatApi21$TransportControls
com.rubenroy.minimaltodo.eval_ri$f       public abstract interface android.support.v4.media.session.MediaControllerCompatApi21$Callback
com.rubenroy.minimaltodo.eval_ri$i       android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy
com.rubenroy.minimaltodo.eval_ri$r       public android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo
com.rubenroy.minimaltodo.eval_rk$1       android.support.v4.media.MediaBrowserServiceCompat$1
com.rubenroy.minimaltodo.eval_rk$2       android.support.v4.media.MediaBrowserServiceCompat$2
com.rubenroy.minimaltodo.eval_rk$3       android.support.v4.media.MediaBrowserServiceCompat$3
com.rubenroy.minimaltodo.eval_rk$4       android.support.v4.media.MediaBrowserServiceCompat$4
com.rubenroy.minimaltodo.eval_rk$f       android.support.v4.media.MediaBrowserServiceCompat$ConnectionRecord
com.rubenroy.minimaltodo.eval_rk$o       android.support.v4.media.MediaBrowserServiceCompat$ServiceBinder
com.rubenroy.minimaltodo.eval_rk$s       public final android.support.v4.media.MediaBrowserServiceCompat$BrowserRoot
com.rubenroy.minimaltodo.eval_rk$v       public android.support.v4.media.MediaBrowserServiceCompat$Result
com.rubenroy.minimaltodo.eval_rl$g       android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$HoneycombValueAnimatorCompat
com.rubenroy.minimaltodo.eval_rl$x       android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$AnimatorListenerCompatWrapper
com.rubenroy.minimaltodo.eval_rn$a       android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl
com.rubenroy.minimaltodo.eval_rn$i       android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl
com.rubenroy.minimaltodo.eval_rn$n       abstract interface android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl
com.rubenroy.minimaltodo.eval_ru$1       android.support.v4.text.BidiFormatter$1
com.rubenroy.minimaltodo.eval_ru$c       android.support.v4.text.BidiFormatter$DirectionalityEstimator
com.rubenroy.minimaltodo.eval_ru$o       public final android.support.v4.text.BidiFormatter$Builder
com.rubenroy.minimaltodo.eval_rv$1       android.support.v4.widget.MaterialProgressDrawable$1
com.rubenroy.minimaltodo.eval_rv$2       android.support.v4.widget.MaterialProgressDrawable$2
com.rubenroy.minimaltodo.eval_rv$3       android.support.v4.widget.MaterialProgressDrawable$3
com.rubenroy.minimaltodo.eval_rv$a       public abstract interface android.support.v4.widget.MaterialProgressDrawable$ProgressDrawableSize
com.rubenroy.minimaltodo.eval_rv$g       android.support.v4.widget.MaterialProgressDrawable$Ring
com.rubenroy.minimaltodo.eval_s0$1       android.support.v4.view.PagerTabStrip$1
com.rubenroy.minimaltodo.eval_s0$2       android.support.v4.view.PagerTabStrip$2
com.rubenroy.minimaltodo.eval_s1$1       android.support.design.widget.FloatingActionButtonHoneycombMr1$1
com.rubenroy.minimaltodo.eval_s1$2       android.support.design.widget.FloatingActionButtonHoneycombMr1$2
com.rubenroy.minimaltodo.eval_s2$_       android.support.v4.widget.CompoundButtonCompat$BaseCompoundButtonCompat
com.rubenroy.minimaltodo.eval_s2$f       android.support.v4.widget.CompoundButtonCompat$Api23CompoundButtonImpl
com.rubenroy.minimaltodo.eval_s2$l       abstract interface android.support.v4.widget.CompoundButtonCompat$CompoundButtonCompatImpl
com.rubenroy.minimaltodo.eval_s2$w       android.support.v4.widget.CompoundButtonCompat$LollipopCompoundButtonImpl
com.rubenroy.minimaltodo.eval_s3$a       abstract interface android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl
com.rubenroy.minimaltodo.eval_s3$d       android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl
com.rubenroy.minimaltodo.eval_s3$r       android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl
com.rubenroy.minimaltodo.eval_s3$v       android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl
com.rubenroy.minimaltodo.eval_s3$x       android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl
com.rubenroy.minimaltodo.eval_s7$l       public android.support.v4.app.NotificationCompatKitKat$Builder
com.rubenroy.minimaltodo.eval_sa$a       public abstract android.support.v4.app.INotificationSideChannel$Stub
com.rubenroy.minimaltodo.eval_sd$a       public abstract interface android.support.v4.app.LoaderManager$LoaderCallbacks
com.rubenroy.minimaltodo.eval_sg$d       android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1
com.rubenroy.minimaltodo.eval_sg$s       android.support.v4.content.IntentCompat$IntentCompatImplBase
com.rubenroy.minimaltodo.eval_sg$t       abstract interface android.support.v4.content.IntentCompat$IntentCompatImpl
com.rubenroy.minimaltodo.eval_sg$x       android.support.v4.content.IntentCompat$IntentCompatImplHC
com.rubenroy.minimaltodo.eval_sh$e       android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl
com.rubenroy.minimaltodo.eval_sh$j       abstract interface android.support.v4.view.MenuItemCompat$MenuVersionImpl
com.rubenroy.minimaltodo.eval_sh$n       android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl
com.rubenroy.minimaltodo.eval_sh$o       android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl
com.rubenroy.minimaltodo.eval_sh$w       public abstract interface android.support.v4.view.MenuItemCompat$OnActionExpandListener
com.rubenroy.minimaltodo.eval_sj$1       android.support.v4.app.NotificationCompatSideChannelService$1
com.rubenroy.minimaltodo.eval_sj$v       android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub
com.rubenroy.minimaltodo.eval_sl$h       public android.support.v4.app.NotificationCompatIceCreamSandwich$Builder
com.rubenroy.minimaltodo.eval_sq$1       android.support.v7.app.TwilightManager$1
com.rubenroy.minimaltodo.eval_sq$x       android.support.v7.app.TwilightManager$TwilightState
com.rubenroy.minimaltodo.eval_sv$1       android.support.v4.view.ViewPropertyAnimatorCompat$1
com.rubenroy.minimaltodo.eval_sv$c       android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl
com.rubenroy.minimaltodo.eval_sv$e       android.support.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl
com.rubenroy.minimaltodo.eval_sv$h       android.support.v4.view.ViewPropertyAnimatorCompat$KitKatViewPropertyAnimatorCompatImpl
com.rubenroy.minimaltodo.eval_sv$u       android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl
com.rubenroy.minimaltodo.eval_sv$v       android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl
com.rubenroy.minimaltodo.eval_sv$x       android.support.v4.view.ViewPropertyAnimatorCompat$LollipopViewPropertyAnimatorCompatImpl
com.rubenroy.minimaltodo.eval_t6$h       public abstract android.support.v4.os.IResultReceiver$Stub
com.rubenroy.minimaltodo.eval_t9$1       android.support.v4.text.TextUtilsCompat$1
com.rubenroy.minimaltodo.eval_t9$h       android.support.v4.text.TextUtilsCompat$TextUtilsCompatJellybeanMr1Impl
com.rubenroy.minimaltodo.eval_t9$v       android.support.v4.text.TextUtilsCompat$TextUtilsCompatImpl
com.rubenroy.minimaltodo.eval_t_$q       public android.support.v7.internal.view.SupportActionModeWrapper$CallbackWrapper
com.rubenroy.minimaltodo.eval_th$d       public abstract interface android.support.v4.content.PermissionChecker$PermissionResult
com.rubenroy.minimaltodo.eval_tp$1       final android.support.v4.view.ViewPager$1
com.rubenroy.minimaltodo.eval_tp$2       final android.support.v4.view.ViewPager$2
com.rubenroy.minimaltodo.eval_tp$3       android.support.v4.view.ViewPager$3
com.rubenroy.minimaltodo.eval_tp$d       public android.support.v4.view.ViewPager$SimpleOnPageChangeListener
com.rubenroy.minimaltodo.eval_tp$g       public abstract interface android.support.v4.view.ViewPager$OnPageChangeListener
com.rubenroy.minimaltodo.eval_tp$i       public android.support.v4.view.ViewPager$LayoutParams
com.rubenroy.minimaltodo.eval_tp$j       abstract interface android.support.v4.view.ViewPager$OnAdapterChangeListener
com.rubenroy.minimaltodo.eval_tp$l       android.support.v4.view.ViewPager$ItemInfo
com.rubenroy.minimaltodo.eval_tp$n       abstract interface android.support.v4.view.ViewPager$Decor
com.rubenroy.minimaltodo.eval_tp$o       android.support.v4.view.ViewPager$ViewPositionComparator
com.rubenroy.minimaltodo.eval_tp$s       android.support.v4.view.ViewPager$MyAccessibilityDelegate
com.rubenroy.minimaltodo.eval_tp$w       android.support.v4.view.ViewPager$PagerObserver
com.rubenroy.minimaltodo.eval_tu$a       public abstract android.support.v4.app.NotificationCompatBase$Action
com.rubenroy.minimaltodo.eval_tu$f       public abstract android.support.v4.app.NotificationCompatBase$UnreadConversation
com.rubenroy.minimaltodo.eval_ty$1       android.support.v4.widget.SwipeRefreshLayout$1
com.rubenroy.minimaltodo.eval_ty$2       android.support.v4.widget.SwipeRefreshLayout$2
com.rubenroy.minimaltodo.eval_ty$3       android.support.v4.widget.SwipeRefreshLayout$3
com.rubenroy.minimaltodo.eval_ty$4       android.support.v4.widget.SwipeRefreshLayout$4
com.rubenroy.minimaltodo.eval_ty$5       android.support.v4.widget.SwipeRefreshLayout$5
com.rubenroy.minimaltodo.eval_ty$6       android.support.v4.widget.SwipeRefreshLayout$6
com.rubenroy.minimaltodo.eval_ty$7       android.support.v4.widget.SwipeRefreshLayout$7
com.rubenroy.minimaltodo.eval_ty$8       android.support.v4.widget.SwipeRefreshLayout$8
com.rubenroy.minimaltodo.eval_ty$t       public abstract interface android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener
com.rubenroy.minimaltodo.eval_tz$1       android.support.v7.app.AppCompatDelegateImplV7$1
com.rubenroy.minimaltodo.eval_tz$2       android.support.v7.app.AppCompatDelegateImplV7$2
com.rubenroy.minimaltodo.eval_tz$3       android.support.v7.app.AppCompatDelegateImplV7$3
com.rubenroy.minimaltodo.eval_tz$4       android.support.v7.app.AppCompatDelegateImplV7$4
com.rubenroy.minimaltodo.eval_tz$5       android.support.v7.app.AppCompatDelegateImplV7$5
com.rubenroy.minimaltodo.eval_tz$6       android.support.v7.app.AppCompatDelegateImplV7$6
com.rubenroy.minimaltodo.eval_tz$b       final android.support.v7.app.AppCompatDelegateImplV7$PanelMenuPresenterCallback
com.rubenroy.minimaltodo.eval_tz$g       android.support.v7.app.AppCompatDelegateImplV7$ListMenuDecorView
com.rubenroy.minimaltodo.eval_tz$p       final android.support.v7.app.AppCompatDelegateImplV7$ActionMenuPresenterCallback
com.rubenroy.minimaltodo.eval_tz$q       android.support.v7.app.AppCompatDelegateImplV7$ActionModeCallbackWrapperV7
com.rubenroy.minimaltodo.eval_tz$x       final android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState
com.rubenroy.minimaltodo.eval_u2$u       android.support.v4.app.ActivityCompat21$SharedElementCallbackImpl
com.rubenroy.minimaltodo.eval_u2$v       public abstract android.support.v4.app.ActivityCompat21$SharedElementCallback21
com.rubenroy.minimaltodo.eval_u6$p       public abstract interface android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter
com.rubenroy.minimaltodo.eval_u6$q       public abstract interface android.support.v4.widget.SimpleCursorAdapter$ViewBinder
com.rubenroy.minimaltodo.eval_u7$g       public abstract interface android.support.v4.app.FragmentManager$BackStackEntry
com.rubenroy.minimaltodo.eval_u7$k       public abstract interface android.support.v4.app.FragmentManager$OnBackStackChangedListener
com.rubenroy.minimaltodo.eval_ue$1       android.support.design.widget.ValueAnimatorCompat$1
com.rubenroy.minimaltodo.eval_ue$2       android.support.design.widget.ValueAnimatorCompat$2
com.rubenroy.minimaltodo.eval_ue$a       abstract interface android.support.design.widget.ValueAnimatorCompat$Creator
com.rubenroy.minimaltodo.eval_ue$f       abstract android.support.design.widget.ValueAnimatorCompat$Impl
com.rubenroy.minimaltodo.eval_ue$l       android.support.design.widget.ValueAnimatorCompat$AnimatorListenerAdapter
com.rubenroy.minimaltodo.eval_ue$n       abstract interface android.support.design.widget.ValueAnimatorCompat$AnimatorListener
com.rubenroy.minimaltodo.eval_ue$y       abstract interface android.support.design.widget.ValueAnimatorCompat$AnimatorUpdateListener
com.rubenroy.minimaltodo.eval_uf$y       public abstract android.support.v4.media.IMediaBrowserServiceCompat$Stub
com.rubenroy.minimaltodo.eval_ug$b       public android.support.v4.app.NotificationCompatApi21$Builder
com.rubenroy.minimaltodo.eval_uh$v       android.support.v4.widget.DrawerLayoutCompatApi21$InsetsListener
com.rubenroy.minimaltodo.eval_up$_       public final android.support.v4.media.routing.MediaRouterJellybean$RouteInfo
com.rubenroy.minimaltodo.eval_up$a       public final android.support.v4.media.routing.MediaRouterJellybean$GetDefaultRouteWorkaround
com.rubenroy.minimaltodo.eval_up$b       public final android.support.v4.media.routing.MediaRouterJellybean$RouteGroup
com.rubenroy.minimaltodo.eval_up$e       public final android.support.v4.media.routing.MediaRouterJellybean$UserRouteInfo
com.rubenroy.minimaltodo.eval_up$j       android.support.v4.media.routing.MediaRouterJellybean$VolumeCallbackProxy
com.rubenroy.minimaltodo.eval_up$n       android.support.v4.media.routing.MediaRouterJellybean$CallbackProxy
com.rubenroy.minimaltodo.eval_up$p       public abstract interface android.support.v4.media.routing.MediaRouterJellybean$Callback
com.rubenroy.minimaltodo.eval_up$x       public final android.support.v4.media.routing.MediaRouterJellybean$RouteCategory
com.rubenroy.minimaltodo.eval_uq$1       final android.support.v4.media.MediaMetadataCompat$1
com.rubenroy.minimaltodo.eval_uq$d       public abstract interface android.support.v4.media.MediaMetadataCompat$LongKey
com.rubenroy.minimaltodo.eval_uq$j       public abstract interface android.support.v4.media.MediaMetadataCompat$BitmapKey
com.rubenroy.minimaltodo.eval_uq$m       public abstract interface android.support.v4.media.MediaMetadataCompat$RatingKey
com.rubenroy.minimaltodo.eval_uq$o       public abstract interface android.support.v4.media.MediaMetadataCompat$TextKey
com.rubenroy.minimaltodo.eval_uq$v       public final android.support.v4.media.MediaMetadataCompat$Builder
com.rubenroy.minimaltodo.eval_ur$1       final android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1
com.rubenroy.minimaltodo.eval_ur$b       abstract interface android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge
com.rubenroy.minimaltodo.eval_uw$1       android.support.v4.app.AppOpsManagerCompat$1
com.rubenroy.minimaltodo.eval_uw$h       android.support.v4.app.AppOpsManagerCompat$AppOpsManager23
com.rubenroy.minimaltodo.eval_uw$s       android.support.v4.app.AppOpsManagerCompat$AppOpsManagerImpl
com.rubenroy.minimaltodo.eval_uz$1       android.support.v7.internal.app.ToolbarActionBar$1
com.rubenroy.minimaltodo.eval_uz$2       android.support.v7.internal.app.ToolbarActionBar$2
com.rubenroy.minimaltodo.eval_uz$_       final android.support.v7.internal.app.ToolbarActionBar$ActionMenuPresenterCallback
com.rubenroy.minimaltodo.eval_uz$l       android.support.v7.internal.app.ToolbarActionBar$ToolbarCallbackWrapper
com.rubenroy.minimaltodo.eval_uz$q       final android.support.v7.internal.app.ToolbarActionBar$PanelMenuPresenterCallback
com.rubenroy.minimaltodo.eval_uz$y       final android.support.v7.internal.app.ToolbarActionBar$MenuBuilderCallback
com.rubenroy.minimaltodo.eval_v3$1       android.support.v4.media.MediaBrowserCompat$1
com.rubenroy.minimaltodo.eval_v3$e       public abstract android.support.v4.media.MediaBrowserCompat$ItemCallback
com.rubenroy.minimaltodo.eval_v3$g       public android.support.v4.media.MediaBrowserCompat$ConnectionCallback
com.rubenroy.minimaltodo.eval_v3$j       android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase
com.rubenroy.minimaltodo.eval_v3$m       public android.support.v4.media.MediaBrowserCompat$MediaItem
com.rubenroy.minimaltodo.eval_v3$t       public abstract android.support.v4.media.MediaBrowserCompat$SubscriptionCallback
com.rubenroy.minimaltodo.eval_v4$1       android.support.v4.view.accessibility.AccessibilityWindowInfoCompat$1
com.rubenroy.minimaltodo.eval_v4$n       android.support.v4.view.accessibility.AccessibilityWindowInfoCompat$AccessibilityWindowInfoApi21Impl
com.rubenroy.minimaltodo.eval_v4$p       abstract interface android.support.v4.view.accessibility.AccessibilityWindowInfoCompat$AccessibilityWindowInfoImpl
com.rubenroy.minimaltodo.eval_v4$r       android.support.v4.view.accessibility.AccessibilityWindowInfoCompat$AccessibilityWindowInfoStubImpl
com.rubenroy.minimaltodo.eval_w4$1       android.support.v4.app.FragmentActivity$1
com.rubenroy.minimaltodo.eval_w4$f       android.support.v4.app.FragmentActivity$HostCallbacks
com.rubenroy.minimaltodo.eval_w4$p       final android.support.v4.app.FragmentActivity$NonConfigurationInstances
com.rubenroy.minimaltodo.eval_wb$q       android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper
com.rubenroy.minimaltodo.eval_wb$w       abstract interface android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy
com.rubenroy.minimaltodo.eval_wc$1       android.support.v4.widget.ContentLoadingProgressBar$1
com.rubenroy.minimaltodo.eval_wc$2       android.support.v4.widget.ContentLoadingProgressBar$2
com.rubenroy.minimaltodo.eval_wi$f       android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplApi21
com.rubenroy.minimaltodo.eval_wi$j       public android.support.v4.widget.DrawerLayout$LayoutParams
com.rubenroy.minimaltodo.eval_wi$m       public abstract android.support.v4.widget.DrawerLayout$SimpleDrawerListener
com.rubenroy.minimaltodo.eval_wi$p       android.support.v4.widget.DrawerLayout$AccessibilityDelegate
com.rubenroy.minimaltodo.eval_wi$r       final android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate
com.rubenroy.minimaltodo.eval_wi$t       android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplBase
com.rubenroy.minimaltodo.eval_wi$u       abstract interface android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl
com.rubenroy.minimaltodo.eval_wi$w       android.support.v4.widget.DrawerLayout$ViewDragCallback
com.rubenroy.minimaltodo.eval_wj$1       final android.support.v4.view.ViewPropertyAnimatorCompatKK$1
com.rubenroy.minimaltodo.eval_wk$1       android.support.v4.app.ActionBarDrawerToggle$1
com.rubenroy.minimaltodo.eval_wk$d       android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2
com.rubenroy.minimaltodo.eval_wk$f       public abstract interface android.support.v4.app.ActionBarDrawerToggle$DelegateProvider
com.rubenroy.minimaltodo.eval_wk$m       android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC
com.rubenroy.minimaltodo.eval_wk$o       abstract interface android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl
com.rubenroy.minimaltodo.eval_wk$u       android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase
com.rubenroy.minimaltodo.eval_wk$v       public abstract interface android.support.v4.app.ActionBarDrawerToggle$Delegate
com.rubenroy.minimaltodo.eval_wk$x       android.support.v4.app.ActionBarDrawerToggle$SlideDrawable
com.rubenroy.minimaltodo.eval_wp$1       android.support.v4.view.ScaleGestureDetectorCompat$1
com.rubenroy.minimaltodo.eval_wp$c       android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl
com.rubenroy.minimaltodo.eval_wp$d       android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl
com.rubenroy.minimaltodo.eval_wp$u       abstract interface android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl
com.rubenroy.minimaltodo.eval_wt$1       final android.support.v4.media.RatingCompat$1
com.rubenroy.minimaltodo.eval_wt$k       public abstract interface android.support.v4.media.RatingCompat$StarStyle
com.rubenroy.minimaltodo.eval_wt$u       public abstract interface android.support.v4.media.RatingCompat$Style
com.rubenroy.minimaltodo.eval_wv$c       public abstract interface android.support.v4.content.Loader$OnLoadCanceledListener
com.rubenroy.minimaltodo.eval_wv$d       public abstract interface android.support.v4.content.Loader$OnLoadCompleteListener
com.rubenroy.minimaltodo.eval_wv$w       public final android.support.v4.content.Loader$ForceLoadContentObserver
com.rubenroy.minimaltodo.eval_wx$e       android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl
com.rubenroy.minimaltodo.eval_wx$i       android.support.v4.view.ViewGroupCompat$ViewGroupCompatLollipopImpl
com.rubenroy.minimaltodo.eval_wx$l       android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl
com.rubenroy.minimaltodo.eval_wx$o       abstract interface android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl
com.rubenroy.minimaltodo.eval_wx$z       android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl
com.rubenroy.minimaltodo.eval_x2$d       abstract interface android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl
com.rubenroy.minimaltodo.eval_x2$e       android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread
com.rubenroy.minimaltodo.eval_x2$u       android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase
com.rubenroy.minimaltodo.eval_x2$z       android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs
com.rubenroy.minimaltodo.eval_xf$1       android.support.design.widget.CoordinatorLayout$1
com.rubenroy.minimaltodo.eval_xf$_       final android.support.design.widget.CoordinatorLayout$HierarchyChangeListener
com.rubenroy.minimaltodo.eval_xf$f       final android.support.design.widget.CoordinatorLayout$ApplyInsetsListener
com.rubenroy.minimaltodo.eval_xf$h       android.support.design.widget.CoordinatorLayout$OnPreDrawListener
com.rubenroy.minimaltodo.eval_xf$n       public abstract interface android.support.design.widget.CoordinatorLayout$DefaultBehavior
com.rubenroy.minimaltodo.eval_xf$u       android.support.design.widget.CoordinatorLayout$ViewElevationComparator
com.rubenroy.minimaltodo.eval_xf$z       public abstract android.support.design.widget.CoordinatorLayout$Behavior
com.rubenroy.minimaltodo.eval_xg$1       android.support.design.widget.CollapsingToolbarLayout$1
com.rubenroy.minimaltodo.eval_xg$2       android.support.design.widget.CollapsingToolbarLayout$2
com.rubenroy.minimaltodo.eval_xg$_       android.support.design.widget.CollapsingToolbarLayout$OffsetUpdateListener
com.rubenroy.minimaltodo.eval_xg$h       public android.support.design.widget.CollapsingToolbarLayout$LayoutParams
com.rubenroy.minimaltodo.eval_xl$1       android.support.v4.widget.AutoScrollHelper$1
com.rubenroy.minimaltodo.eval_xl$j       android.support.v4.widget.AutoScrollHelper$ClampedScroller
com.rubenroy.minimaltodo.eval_xl$y       android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable
com.rubenroy.minimaltodo.eval_xw$f       android.support.v4.app.ShareCompat$ShareCompatImplBase
com.rubenroy.minimaltodo.eval_xw$o       public android.support.v4.app.ShareCompat$IntentReader
com.rubenroy.minimaltodo.eval_xw$q       abstract interface android.support.v4.app.ShareCompat$ShareCompatImpl
com.rubenroy.minimaltodo.eval_xw$u       public android.support.v4.app.ShareCompat$IntentBuilder
com.rubenroy.minimaltodo.eval_xz$o       public android.support.v7.app.AlertDialog$Builder
com.rubenroy.minimaltodo.eval_y6$f       abstract interface android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl
com.rubenroy.minimaltodo.eval_y6$p       public abstract android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat
com.rubenroy.minimaltodo.eval_y6$v       android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl
com.rubenroy.minimaltodo.eval_y6$x       android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl
com.rubenroy.minimaltodo.eval_y6$y       public abstract android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat
com.rubenroy.minimaltodo.eval_y8$_       android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$RangeInfo
com.rubenroy.minimaltodo.eval_y8$e       android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionInfo
com.rubenroy.minimaltodo.eval_y8$w       android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionItemInfo
com.rubenroy.minimaltodo.eval_yb$1       final android.support.v4.widget.ViewDragHelper$1
com.rubenroy.minimaltodo.eval_yb$2       android.support.v4.widget.ViewDragHelper$2
com.rubenroy.minimaltodo.eval_yb$y       public abstract android.support.v4.widget.ViewDragHelper$Callback
com.rubenroy.minimaltodo.eval_ye$1       android.support.design.widget.TabLayout$1
com.rubenroy.minimaltodo.eval_ye$2       android.support.design.widget.TabLayout$2
com.rubenroy.minimaltodo.eval_ye$_       public abstract interface android.support.design.widget.TabLayout$Mode
com.rubenroy.minimaltodo.eval_ye$a       public android.support.design.widget.TabLayout$TabLayoutOnPageChangeListener
com.rubenroy.minimaltodo.eval_ye$d       android.support.design.widget.TabLayout$SlidingTabStrip
com.rubenroy.minimaltodo.eval_ye$f       public abstract interface android.support.design.widget.TabLayout$OnTabSelectedListener
com.rubenroy.minimaltodo.eval_ye$m       public abstract interface android.support.design.widget.TabLayout$TabGravity
com.rubenroy.minimaltodo.eval_ye$p       public final android.support.design.widget.TabLayout$Tab
com.rubenroy.minimaltodo.eval_ye$v       android.support.design.widget.TabLayout$TabView
com.rubenroy.minimaltodo.eval_yl$c       android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1
com.rubenroy.minimaltodo.eval_yl$l       abstract interface android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl
com.rubenroy.minimaltodo.eval_yl$u       android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase
com.rubenroy.minimaltodo.eval_ys$a       public abstract interface android.support.v7.app.ActionBar$OnNavigationListener
com.rubenroy.minimaltodo.eval_ys$h       public abstract android.support.v7.app.ActionBar$Tab
com.rubenroy.minimaltodo.eval_ys$j       public abstract interface android.support.v7.app.ActionBar$OnMenuVisibilityListener
com.rubenroy.minimaltodo.eval_ys$n       public abstract interface android.support.v7.app.ActionBar$DisplayOptions
com.rubenroy.minimaltodo.eval_ys$q       public abstract interface android.support.v7.app.ActionBar$NavigationMode
com.rubenroy.minimaltodo.eval_ys$y       public android.support.v7.app.ActionBar$LayoutParams
com.rubenroy.minimaltodo.eval_z0$1       android.support.v4.app.FragmentManagerImpl$1
com.rubenroy.minimaltodo.eval_z0$2       android.support.v4.app.FragmentManagerImpl$2
com.rubenroy.minimaltodo.eval_z0$3       android.support.v4.app.FragmentManagerImpl$3
com.rubenroy.minimaltodo.eval_z0$4       android.support.v4.app.FragmentManagerImpl$4
com.rubenroy.minimaltodo.eval_z0$5       android.support.v4.app.FragmentManagerImpl$5
com.rubenroy.minimaltodo.eval_z0$y       android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener
com.rubenroy.minimaltodo.eval_z0$z       android.support.v4.app.FragmentManagerImpl$FragmentTag
com.rubenroy.minimaltodo.eval_z1$1       final android.support.v4.content.ModernAsyncTask$1
com.rubenroy.minimaltodo.eval_z1$2       android.support.v4.content.ModernAsyncTask$2
com.rubenroy.minimaltodo.eval_z1$3       android.support.v4.content.ModernAsyncTask$3
com.rubenroy.minimaltodo.eval_z1$4       android.support.v4.content.ModernAsyncTask$4
com.rubenroy.minimaltodo.eval_z1$b       android.support.v4.content.ModernAsyncTask$AsyncTaskResult
com.rubenroy.minimaltodo.eval_z1$j       public final android.support.v4.content.ModernAsyncTask$Status
com.rubenroy.minimaltodo.eval_z1$n       abstract android.support.v4.content.ModernAsyncTask$WorkerRunnable
com.rubenroy.minimaltodo.eval_z1$p       android.support.v4.content.ModernAsyncTask$InternalHandler
com.rubenroy.minimaltodo.eval_z6$b       android.support.v4.view.ViewCompat$ICSViewCompatImpl
com.rubenroy.minimaltodo.eval_z6$e       android.support.v4.view.ViewCompat$HCViewCompatImpl
com.rubenroy.minimaltodo.eval_z6$f       android.support.v4.view.ViewCompat$LollipopViewCompatImpl
com.rubenroy.minimaltodo.eval_z6$g       android.support.v4.view.ViewCompat$BaseViewCompatImpl
com.rubenroy.minimaltodo.eval_z6$i       android.support.v4.view.ViewCompat$JBViewCompatImpl
com.rubenroy.minimaltodo.eval_z6$j       android.support.v4.view.ViewCompat$ICSMr1ViewCompatImpl
com.rubenroy.minimaltodo.eval_z6$n       android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl
com.rubenroy.minimaltodo.eval_z6$p       android.support.v4.view.ViewCompat$KitKatViewCompatImpl
com.rubenroy.minimaltodo.eval_z6$q       android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl
com.rubenroy.minimaltodo.eval_z6$r       android.support.v4.view.ViewCompat$MarshmallowViewCompatImpl
com.rubenroy.minimaltodo.eval_z6$v       public abstract interface android.support.v4.view.ViewCompat$ScrollIndicators
com.rubenroy.minimaltodo.eval_z6$w       android.support.v4.view.ViewCompat$GBViewCompatImpl
com.rubenroy.minimaltodo.eval_zb$_       android.support.v4.widget.PopupWindowCompat$GingerbreadPopupWindowImpl
com.rubenroy.minimaltodo.eval_zb$e       android.support.v4.widget.PopupWindowCompat$Api21PopupWindowImpl
com.rubenroy.minimaltodo.eval_zb$f       android.support.v4.widget.PopupWindowCompat$Api23PopupWindowImpl
com.rubenroy.minimaltodo.eval_zb$k       android.support.v4.widget.PopupWindowCompat$KitKatPopupWindowImpl
com.rubenroy.minimaltodo.eval_zb$n       abstract interface android.support.v4.widget.PopupWindowCompat$PopupWindowImpl
com.rubenroy.minimaltodo.eval_zi$1       android.support.v4.app.FragmentTabHost$1
com.rubenroy.minimaltodo.eval_zi$a       final android.support.v4.app.FragmentTabHost$TabInfo
com.rubenroy.minimaltodo.eval_zi$g       android.support.v4.app.FragmentTabHost$DummyTabFactory
com.rubenroy.minimaltodo.eval_zi$s       android.support.v4.app.FragmentTabHost$SavedState
com.rubenroy.minimaltodo.eval_zq$_       android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2
com.rubenroy.minimaltodo.eval_zq$l       android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl
com.rubenroy.minimaltodo.eval_zq$n       android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl
com.rubenroy.minimaltodo.eval_zq$p       abstract interface android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl
com.rubenroy.minimaltodo.eval_zr$_       android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb
com.rubenroy.minimaltodo.eval_zr$a       android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean
com.rubenroy.minimaltodo.eval_zr$c       android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase
com.rubenroy.minimaltodo.eval_zr$o       abstract interface android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl
com.rubenroy.minimaltodo.eval_zr$u       public abstract interface android.support.v4.app.TaskStackBuilder$SupportParentable
com.rubenroy.minimaltodo.eval_zs$1       final android.support.v4.view.AccessibilityDelegateCompatJellyBean$1
com.rubenroy.minimaltodo.eval_zs$e       public abstract interface android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean
com.rubenroy.minimaltodo.eval_zv$_       public android.support.v4.util.Pools$SynchronizedPool
com.rubenroy.minimaltodo.eval_zv$c       public android.support.v4.util.Pools$SimplePool
com.rubenroy.minimaltodo.eval_zv$t       public abstract interface android.support.v4.util.Pools$Pool
android.support.v7.widget.Toolbar$a      android.support.v7.widget.Toolbar$ExpandedActionViewMenuPresenter
android.support.v7.widget.Toolbar$l      public abstract interface android.support.v7.widget.Toolbar$OnMenuItemClickListener
android.support.v7.widget.Toolbar$x      public android.support.v7.widget.Toolbar$LayoutParams
android.support.v7.widget.Toolbar$z      public android.support.v7.widget.Toolbar$SavedState
com.rubenroy.minimaltodo.eval__2l$1      uk.co.chrisjenx.calligraphy.CalligraphyFactory$1
com.rubenroy.minimaltodo.eval__2l$2      uk.co.chrisjenx.calligraphy.CalligraphyFactory$2
com.rubenroy.minimaltodo.eval__84$1      com.amulyakhare.textdrawable.TextDrawable$1
com.rubenroy.minimaltodo.eval__84$i      public abstract interface com.amulyakhare.textdrawable.TextDrawable$IBuilder
com.rubenroy.minimaltodo.eval__84$n      public com.amulyakhare.textdrawable.TextDrawable$Builder
com.rubenroy.minimaltodo.eval__84$t      public abstract interface com.amulyakhare.textdrawable.TextDrawable$IShapeBuilder
com.rubenroy.minimaltodo.eval__84$u      public abstract interface com.amulyakhare.textdrawable.TextDrawable$IConfigBuilder
com.rubenroy.minimaltodo.eval__x2$l      public abstract interface android.support.v7.internal.view.menu.MenuPresenter$Callback
com.rubenroy.minimaltodo.eval_a7y$1      com.wdullaer.materialdatetimepicker.time.TimePickerDialog$1
com.rubenroy.minimaltodo.eval_a7y$2      com.wdullaer.materialdatetimepicker.time.TimePickerDialog$2
com.rubenroy.minimaltodo.eval_a7y$3      com.wdullaer.materialdatetimepicker.time.TimePickerDialog$3
com.rubenroy.minimaltodo.eval_a7y$4      com.wdullaer.materialdatetimepicker.time.TimePickerDialog$4
com.rubenroy.minimaltodo.eval_a7y$5      com.wdullaer.materialdatetimepicker.time.TimePickerDialog$5
com.rubenroy.minimaltodo.eval_a7y$a      public abstract interface com.wdullaer.materialdatetimepicker.time.TimePickerDialog$OnTimeSetListener
com.rubenroy.minimaltodo.eval_a7y$m      com.wdullaer.materialdatetimepicker.time.TimePickerDialog$Node
com.rubenroy.minimaltodo.eval_a7y$q      com.wdullaer.materialdatetimepicker.time.TimePickerDialog$KeyboardListener
com.rubenroy.minimaltodo.eval_ag6$1      android.support.v7.internal.view.ViewPropertyAnimatorCompatSet$1
com.rubenroy.minimaltodo.eval_awr$1      android.support.v7.internal.widget.ActivityChooserView$1
com.rubenroy.minimaltodo.eval_awr$2      android.support.v7.internal.widget.ActivityChooserView$2
com.rubenroy.minimaltodo.eval_awr$3      android.support.v7.internal.widget.ActivityChooserView$3
com.rubenroy.minimaltodo.eval_awr$4      android.support.v7.internal.widget.ActivityChooserView$4
com.rubenroy.minimaltodo.eval_awr$g      public android.support.v7.internal.widget.ActivityChooserView$InnerLayout
com.rubenroy.minimaltodo.eval_awr$u      android.support.v7.internal.widget.ActivityChooserView$ActivityChooserViewAdapter
com.rubenroy.minimaltodo.eval_b6t$1      android.support.v7.internal.widget.ToolbarWidgetWrapper$1
com.rubenroy.minimaltodo.eval_b6t$2      android.support.v7.internal.widget.ToolbarWidgetWrapper$2
com.rubenroy.minimaltodo.eval_c05$e      abstract interface android.support.v7.widget.ViewInfoStore$ProcessCallback
com.rubenroy.minimaltodo.eval_c05$y      android.support.v7.widget.ViewInfoStore$InfoRecord
com.rubenroy.minimaltodo.eval_c33$d      public final android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup
com.rubenroy.minimaltodo.eval_c33$s      public abstract android.support.v7.widget.GridLayoutManager$SpanSizeLookup
com.rubenroy.minimaltodo.eval_c33$u      public android.support.v7.widget.GridLayoutManager$LayoutParams
com.rubenroy.minimaltodo.eval_c6b$j      android.support.v7.internal.view.menu.MenuItemWrapperJB$ActionProviderWrapperJB
com.rubenroy.minimaltodo.eval_cug$o      public abstract interface android.support.v7.internal.widget.ViewStubCompat$OnInflateListener
com.rubenroy.minimaltodo.eval_dll$1      android.support.v7.internal.widget.ActionBarContextView$1
com.rubenroy.minimaltodo.eval_dlz$1      fr.ganfra.materialspinner.MaterialSpinner$1
com.rubenroy.minimaltodo.eval_dlz$p      fr.ganfra.materialspinner.MaterialSpinner$HintAdapter
com.rubenroy.minimaltodo.eval_dqf$r      public abstract interface com.wdullaer.materialdatetimepicker.date.MonthView$OnDayClickListener
com.rubenroy.minimaltodo.eval_dqf$t      public com.wdullaer.materialdatetimepicker.date.MonthView$MonthViewTouchHelper
com.rubenroy.minimaltodo.eval_dzn$t      android.support.v7.internal.view.menu.MenuPopupHelper$MenuAdapter
com.rubenroy.minimaltodo.eval_ee4$1      com.wdullaer.materialdatetimepicker.time.RadialPickerLayout$1
com.rubenroy.minimaltodo.eval_ee4$2      com.wdullaer.materialdatetimepicker.time.RadialPickerLayout$2
com.rubenroy.minimaltodo.eval_ee4$r      public abstract interface com.wdullaer.materialdatetimepicker.time.RadialPickerLayout$OnValueSelectedListener
com.rubenroy.minimaltodo.eval_ez4$c      android.support.v7.internal.view.menu.ListMenuPresenter$MenuAdapter
com.rubenroy.minimaltodo.eval_fpr$1      android.support.v7.internal.view.menu.MenuItemImpl$1
com.rubenroy.minimaltodo.eval_ft2$t      public abstract interface android.support.v7.internal.widget.FitWindowsViewGroup$OnFitSystemWindowsListener
com.rubenroy.minimaltodo.eval_fte$1      android.support.v7.widget.SearchView$1
com.rubenroy.minimaltodo.eval_fte$2      android.support.v7.widget.SearchView$2
com.rubenroy.minimaltodo.eval_fte$3      android.support.v7.widget.SearchView$3
com.rubenroy.minimaltodo.eval_fte$4      android.support.v7.widget.SearchView$4
com.rubenroy.minimaltodo.eval_fte$5      android.support.v7.widget.SearchView$5
com.rubenroy.minimaltodo.eval_fte$6      android.support.v7.widget.SearchView$6
com.rubenroy.minimaltodo.eval_fte$7      android.support.v7.widget.SearchView$7
com.rubenroy.minimaltodo.eval_fte$8      android.support.v7.widget.SearchView$8
com.rubenroy.minimaltodo.eval_fte$9      android.support.v7.widget.SearchView$9
com.rubenroy.minimaltodo.eval_fte$c      public abstract interface android.support.v7.widget.SearchView$OnQueryTextListener
com.rubenroy.minimaltodo.eval_fte$m      public abstract interface android.support.v7.widget.SearchView$OnCloseListener
com.rubenroy.minimaltodo.eval_fte$s      android.support.v7.widget.SearchView$AutoCompleteTextViewReflector
com.rubenroy.minimaltodo.eval_fte$z      public android.support.v7.widget.SearchView$SearchAutoComplete
com.rubenroy.minimaltodo.eval_g0u$1      android.support.v7.widget.SwitchCompat$1
com.rubenroy.minimaltodo.eval_g0u$x      android.support.v7.widget.SwitchCompat$ThumbAnimation
com.rubenroy.minimaltodo.eval_g_x$g      android.support.v7.widget.AdapterHelper$UpdateOp
com.rubenroy.minimaltodo.eval_g_x$z      abstract interface android.support.v7.widget.AdapterHelper$Callback
com.rubenroy.minimaltodo.eval_gar$i      public uk.co.chrisjenx.calligraphy.CalligraphyConfig$Builder
com.rubenroy.minimaltodo.eval_gjz$b      public abstract interface android.support.v7.internal.widget.ContentFrameLayout$OnAttachListener
com.rubenroy.minimaltodo.eval_hr5$c      android.support.v7.internal.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener
com.rubenroy.minimaltodo.eval_hr5$y      public abstract android.support.v7.internal.view.menu.ActionMenuItemView$PopupCallback
com.rubenroy.minimaltodo.eval_ht_$e      public abstract interface android.support.v7.internal.view.menu.MenuView$ItemView
com.rubenroy.minimaltodo.eval_i1o$1      android.support.v7.widget.ShareActionProvider$1
com.rubenroy.minimaltodo.eval_i1o$k      android.support.v7.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener
com.rubenroy.minimaltodo.eval_i1o$s      android.support.v7.widget.ShareActionProvider$ShareActivityChooserModelPolicy
com.rubenroy.minimaltodo.eval_i1o$t      public abstract interface android.support.v7.widget.ShareActionProvider$OnShareTargetSelectedListener
com.rubenroy.minimaltodo.eval_ibt$1      android.support.v7.widget.ListPopupWindow$1
com.rubenroy.minimaltodo.eval_ibt$2      android.support.v7.widget.ListPopupWindow$2
com.rubenroy.minimaltodo.eval_ibt$3      android.support.v7.widget.ListPopupWindow$3
com.rubenroy.minimaltodo.eval_ibt$a      android.support.v7.widget.ListPopupWindow$ResizePopupRunnable
com.rubenroy.minimaltodo.eval_ibt$c      android.support.v7.widget.ListPopupWindow$PopupTouchInterceptor
com.rubenroy.minimaltodo.eval_ibt$h      android.support.v7.widget.ListPopupWindow$PopupScrollListener
com.rubenroy.minimaltodo.eval_ibt$i      android.support.v7.widget.ListPopupWindow$PopupDataSetObserver
com.rubenroy.minimaltodo.eval_ibt$r      android.support.v7.widget.ListPopupWindow$DropDownListView
com.rubenroy.minimaltodo.eval_ibt$t      android.support.v7.widget.ListPopupWindow$ListSelectorHider
com.rubenroy.minimaltodo.eval_ibt$y      public abstract android.support.v7.widget.ListPopupWindow$ForwardingListener
com.rubenroy.minimaltodo.eval_j3x$1      com.wdullaer.materialdatetimepicker.time.RadialSelectorView$1
com.rubenroy.minimaltodo.eval_j3x$c      com.wdullaer.materialdatetimepicker.time.RadialSelectorView$InvalidateUpdateListener
com.rubenroy.minimaltodo.eval_j4v$1      android.support.v7.widget.DefaultItemAnimator$1
com.rubenroy.minimaltodo.eval_j4v$2      android.support.v7.widget.DefaultItemAnimator$2
com.rubenroy.minimaltodo.eval_j4v$3      android.support.v7.widget.DefaultItemAnimator$3
com.rubenroy.minimaltodo.eval_j4v$4      android.support.v7.widget.DefaultItemAnimator$4
com.rubenroy.minimaltodo.eval_j4v$5      android.support.v7.widget.DefaultItemAnimator$5
com.rubenroy.minimaltodo.eval_j4v$6      android.support.v7.widget.DefaultItemAnimator$6
com.rubenroy.minimaltodo.eval_j4v$7      android.support.v7.widget.DefaultItemAnimator$7
com.rubenroy.minimaltodo.eval_j4v$8      android.support.v7.widget.DefaultItemAnimator$8
com.rubenroy.minimaltodo.eval_j4v$j      android.support.v7.widget.DefaultItemAnimator$ChangeInfo
com.rubenroy.minimaltodo.eval_j4v$l      android.support.v7.widget.DefaultItemAnimator$MoveInfo
com.rubenroy.minimaltodo.eval_j4v$u      android.support.v7.widget.DefaultItemAnimator$VpaListenerAdapter
com.rubenroy.minimaltodo.eval_jnx$1      com.wdullaer.materialdatetimepicker.time.RadialTextsView$1
com.rubenroy.minimaltodo.eval_jnx$p      com.wdullaer.materialdatetimepicker.time.RadialTextsView$InvalidateUpdateListener
com.rubenroy.minimaltodo.eval_js6$1      android.support.v7.internal.widget.AbsActionBarView$1
com.rubenroy.minimaltodo.eval_js6$a      public android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener
com.rubenroy.minimaltodo.eval_jxr$1      com.wdullaer.materialdatetimepicker.date.DayPickerView$1
com.rubenroy.minimaltodo.eval_jxr$l      public com.wdullaer.materialdatetimepicker.date.DayPickerView$ScrollStateRunnable
com.rubenroy.minimaltodo.eval_k54$1      final android.support.v7.widget.OrientationHelper$1
com.rubenroy.minimaltodo.eval_k54$2      final android.support.v7.widget.OrientationHelper$2
com.rubenroy.minimaltodo.eval_k6u$1      com.wdullaer.materialdatetimepicker.date.DatePickerDialog$1
com.rubenroy.minimaltodo.eval_k6u$2      com.wdullaer.materialdatetimepicker.date.DatePickerDialog$2
com.rubenroy.minimaltodo.eval_k6u$_      public abstract interface com.wdullaer.materialdatetimepicker.date.DatePickerDialog$OnDateChangedListener
com.rubenroy.minimaltodo.eval_k6u$e      public abstract interface com.wdullaer.materialdatetimepicker.date.DatePickerDialog$OnDateSetListener
com.rubenroy.minimaltodo.eval_l2u$g      abstract interface android.support.v7.widget.ChildHelper$Callback
com.rubenroy.minimaltodo.eval_l2u$v      android.support.v7.widget.ChildHelper$Bucket
com.rubenroy.minimaltodo.eval_l2w$f      uk.co.chrisjenx.calligraphy.CalligraphyLayoutInflater$WrapperFactory
com.rubenroy.minimaltodo.eval_l2w$g      uk.co.chrisjenx.calligraphy.CalligraphyLayoutInflater$WrapperFactory2
com.rubenroy.minimaltodo.eval_l2w$k      uk.co.chrisjenx.calligraphy.CalligraphyLayoutInflater$PrivateWrapperFactory2
com.rubenroy.minimaltodo.eval_l45$1      android.support.v7.widget.LinearLayoutManager$1
com.rubenroy.minimaltodo.eval_l45$p      android.support.v7.widget.LinearLayoutManager$LayoutState
com.rubenroy.minimaltodo.eval_l45$q      public android.support.v7.widget.LinearLayoutManager$LayoutChunkResult
com.rubenroy.minimaltodo.eval_l45$v      android.support.v7.widget.LinearLayoutManager$AnchorInfo
com.rubenroy.minimaltodo.eval_lbt$1      android.support.v7.widget.AppCompatSpinner$1
com.rubenroy.minimaltodo.eval_lbt$q      android.support.v7.widget.AppCompatSpinner$DropdownPopup
com.rubenroy.minimaltodo.eval_lbt$x      android.support.v7.widget.AppCompatSpinner$DropDownAdapter
com.rubenroy.minimaltodo.eval_lhy$b      android.support.v7.internal.widget.ListViewCompat$GateKeeperDrawable
com.rubenroy.minimaltodo.eval_lmq$k      final android.support.v7.widget.SuggestionsAdapter$ChildViewCache
com.rubenroy.minimaltodo.eval_mfs$1      android.support.v7.util.MessageThreadUtil$1
com.rubenroy.minimaltodo.eval_mfs$2      android.support.v7.util.MessageThreadUtil$2
com.rubenroy.minimaltodo.eval_mfs$u      android.support.v7.util.MessageThreadUtil$MessageQueue
com.rubenroy.minimaltodo.eval_mfs$v      android.support.v7.util.MessageThreadUtil$SyncQueueItem
com.rubenroy.minimaltodo.eval_nfu$n      abstract interface android.support.v7.widget.OpReorderer$Callback
com.rubenroy.minimaltodo.eval_nge$1      final uk.co.chrisjenx.calligraphy.CalligraphyUtils$1
com.rubenroy.minimaltodo.eval_nof$g      public final android.support.v7.widget.ThemedSpinnerAdapter$Helper
com.rubenroy.minimaltodo.eval_nwg$z      abstract interface android.support.v7.widget.AppCompatCompoundButtonHelper$DirectSetButtonDrawableInterface
com.rubenroy.minimaltodo.eval_o3x$1      com.wdullaer.materialdatetimepicker.date.YearPickerView$1
com.rubenroy.minimaltodo.eval_o3x$l      com.wdullaer.materialdatetimepicker.date.YearPickerView$YearAdapter
com.rubenroy.minimaltodo.eval_opc$1      com.rubenroy.minimaltodo.AboutActivity$1
com.rubenroy.minimaltodo.eval_p8y$1      android.support.v7.util.AsyncListUtil$1
com.rubenroy.minimaltodo.eval_p8y$2      android.support.v7.util.AsyncListUtil$2
com.rubenroy.minimaltodo.eval_p8y$j      public abstract android.support.v7.util.AsyncListUtil$DataCallback
com.rubenroy.minimaltodo.eval_p_d$g      public abstract interface android.support.v7.widget.LinearLayoutCompat$DividerMode
com.rubenroy.minimaltodo.eval_p_d$j      public android.support.v7.widget.LinearLayoutCompat$LayoutParams
com.rubenroy.minimaltodo.eval_p_d$r      public abstract interface android.support.v7.widget.LinearLayoutCompat$OrientationMode
com.rubenroy.minimaltodo.eval_pc8$1      android.support.v7.widget.helper.ItemTouchHelper$1
com.rubenroy.minimaltodo.eval_pc8$2      android.support.v7.widget.helper.ItemTouchHelper$2
com.rubenroy.minimaltodo.eval_pc8$3      android.support.v7.widget.helper.ItemTouchHelper$3
com.rubenroy.minimaltodo.eval_pc8$4      android.support.v7.widget.helper.ItemTouchHelper$4
com.rubenroy.minimaltodo.eval_pc8$5      android.support.v7.widget.helper.ItemTouchHelper$5
com.rubenroy.minimaltodo.eval_pc8$d      public abstract android.support.v7.widget.helper.ItemTouchHelper$Callback
com.rubenroy.minimaltodo.eval_pc8$l      public abstract interface android.support.v7.widget.helper.ItemTouchHelper$ViewDropHandler
com.rubenroy.minimaltodo.eval_pc8$m      public abstract android.support.v7.widget.helper.ItemTouchHelper$SimpleCallback
com.rubenroy.minimaltodo.eval_pc8$q      android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation
com.rubenroy.minimaltodo.eval_pc8$u      android.support.v7.widget.helper.ItemTouchHelper$ItemTouchHelperGestureListener
com.rubenroy.minimaltodo.eval_prc$1      com.rubenroy.minimaltodo.AddToDoActivity$1
com.rubenroy.minimaltodo.eval_prc$2      com.rubenroy.minimaltodo.AddToDoActivity$2
com.rubenroy.minimaltodo.eval_prc$3      com.rubenroy.minimaltodo.AddToDoActivity$3
com.rubenroy.minimaltodo.eval_prc$4      com.rubenroy.minimaltodo.AddToDoActivity$4
com.rubenroy.minimaltodo.eval_prc$5      com.rubenroy.minimaltodo.AddToDoActivity$5
com.rubenroy.minimaltodo.eval_prc$6      com.rubenroy.minimaltodo.AddToDoActivity$6
com.rubenroy.minimaltodo.eval_prc$7      com.rubenroy.minimaltodo.AddToDoActivity$7
com.rubenroy.minimaltodo.eval_prc$8      com.rubenroy.minimaltodo.AddToDoActivity$8
com.rubenroy.minimaltodo.eval_psa$1      com.rubenroy.minimaltodo.ReminderActivity$1
com.rubenroy.minimaltodo.eval_qei$g      android.support.v7.widget.helper.ItemTouchUIUtilImpl$Gingerbread
com.rubenroy.minimaltodo.eval_qei$q      android.support.v7.widget.helper.ItemTouchUIUtilImpl$Lollipop
com.rubenroy.minimaltodo.eval_qei$r      android.support.v7.widget.helper.ItemTouchUIUtilImpl$Honeycomb
com.rubenroy.minimaltodo.eval_qhv$j      android.support.v7.internal.widget.TintManager$ColorFilterLruCache
com.rubenroy.minimaltodo.eval_rlo$j      public android.support.v7.util.TileList$Tile
com.rubenroy.minimaltodo.eval_rwc$_      public final com.rubenroy.minimaltodo.R$layout
com.rubenroy.minimaltodo.eval_rwc$a      public final com.rubenroy.minimaltodo.R$id
com.rubenroy.minimaltodo.eval_rwc$c      public final com.rubenroy.minimaltodo.R$anim
com.rubenroy.minimaltodo.eval_rwc$d      public final com.rubenroy.minimaltodo.R$drawable
com.rubenroy.minimaltodo.eval_rwc$g      public final com.rubenroy.minimaltodo.R$color
com.rubenroy.minimaltodo.eval_rwc$j      public final com.rubenroy.minimaltodo.R$xml
com.rubenroy.minimaltodo.eval_rwc$k      public final com.rubenroy.minimaltodo.R$menu
com.rubenroy.minimaltodo.eval_rwc$l      public final com.rubenroy.minimaltodo.R$bool
com.rubenroy.minimaltodo.eval_rwc$s      public final com.rubenroy.minimaltodo.R$attr
com.rubenroy.minimaltodo.eval_rwc$x      public final com.rubenroy.minimaltodo.R$array
com.rubenroy.minimaltodo.eval_rwc$y      public final com.rubenroy.minimaltodo.R$mipmap
com.rubenroy.minimaltodo.eval_s4w$c      public abstract interface android.support.v7.internal.view.menu.MenuBuilder$Callback
com.rubenroy.minimaltodo.eval_s4w$s      public abstract interface android.support.v7.internal.view.menu.MenuBuilder$ItemInvoker
com.rubenroy.minimaltodo.eval_sqa$h      android.support.v7.widget.PositionMap$ContainerHelpers
com.rubenroy.minimaltodo.eval_t1f$1      android.support.v7.internal.widget.ActivityChooserModel$1
com.rubenroy.minimaltodo.eval_t1f$_      final android.support.v7.internal.widget.ActivityChooserModel$DefaultSorter
com.rubenroy.minimaltodo.eval_t1f$b      final android.support.v7.internal.widget.ActivityChooserModel$PersistHistoryAsyncTask
com.rubenroy.minimaltodo.eval_t1f$c      public abstract interface android.support.v7.internal.widget.ActivityChooserModel$ActivityChooserModelClient
com.rubenroy.minimaltodo.eval_t1f$n      public abstract interface android.support.v7.internal.widget.ActivityChooserModel$ActivitySorter
com.rubenroy.minimaltodo.eval_t1f$q      public abstract interface android.support.v7.internal.widget.ActivityChooserModel$OnChooseActivityListener
com.rubenroy.minimaltodo.eval_t1f$r      public final android.support.v7.internal.widget.ActivityChooserModel$ActivityResolveInfo
com.rubenroy.minimaltodo.eval_t1f$w      public final android.support.v7.internal.widget.ActivityChooserModel$HistoricalRecord
com.rubenroy.minimaltodo.eval_t2h$e      public abstract android.support.v7.util.SortedList$Callback
com.rubenroy.minimaltodo.eval_t2h$k      public android.support.v7.util.SortedList$BatchedCallback
com.rubenroy.minimaltodo.eval_t2q$1      final android.support.v7.internal.widget.AppCompatPopupWindow$1
com.rubenroy.minimaltodo.eval_ty1$1      android.support.v7.widget.PopupMenu$1
com.rubenroy.minimaltodo.eval_ty1$f      public abstract interface android.support.v7.widget.PopupMenu$OnMenuItemClickListener
com.rubenroy.minimaltodo.eval_ty1$w      public abstract interface android.support.v7.widget.PopupMenu$OnDismissListener
com.rubenroy.minimaltodo.eval_u0h$1      com.wdullaer.materialdatetimepicker.HapticFeedbackController$1
com.rubenroy.minimaltodo.eval_u1_$1      android.support.v7.internal.widget.ActionBarOverlayLayout$1
com.rubenroy.minimaltodo.eval_u1_$2      android.support.v7.internal.widget.ActionBarOverlayLayout$2
com.rubenroy.minimaltodo.eval_u1_$3      android.support.v7.internal.widget.ActionBarOverlayLayout$3
com.rubenroy.minimaltodo.eval_u1_$o      public abstract interface android.support.v7.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback
com.rubenroy.minimaltodo.eval_u1_$q      public android.support.v7.internal.widget.ActionBarOverlayLayout$LayoutParams
com.rubenroy.minimaltodo.eval_u1r$1      android.support.v7.internal.widget.ScrollingTabContainerView$1
com.rubenroy.minimaltodo.eval_u1r$_      android.support.v7.internal.widget.ScrollingTabContainerView$TabAdapter
com.rubenroy.minimaltodo.eval_u1r$i      public android.support.v7.internal.widget.ScrollingTabContainerView$VisibilityAnimListener
com.rubenroy.minimaltodo.eval_u1r$o      android.support.v7.internal.widget.ScrollingTabContainerView$TabClickListener
com.rubenroy.minimaltodo.eval_u1r$u      android.support.v7.internal.widget.ScrollingTabContainerView$TabView
com.rubenroy.minimaltodo.eval_udf$1      android.support.v7.widget.RecyclerViewAccessibilityDelegate$1
com.rubenroy.minimaltodo.eval_ukd$w      public abstract interface android.support.v7.view.ActionMode$Callback
com.rubenroy.minimaltodo.eval_w8y$c      public com.wdullaer.materialdatetimepicker.date.MonthAdapter$CalendarDay
com.rubenroy.minimaltodo.eval_whu$1      android.support.v7.widget.ActionMenuPresenter$1
com.rubenroy.minimaltodo.eval_whu$b      android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu
com.rubenroy.minimaltodo.eval_whu$d      android.support.v7.widget.ActionMenuPresenter$PopupPresenterCallback
com.rubenroy.minimaltodo.eval_whu$j      android.support.v7.widget.ActionMenuPresenter$OverflowPopup
com.rubenroy.minimaltodo.eval_whu$m      android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable
com.rubenroy.minimaltodo.eval_whu$q      android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton
com.rubenroy.minimaltodo.eval_whu$v      android.support.v7.widget.ActionMenuPresenter$ActionMenuPopupCallback
com.rubenroy.minimaltodo.eval_whu$x      android.support.v7.widget.ActionMenuPresenter$SavedState
com.rubenroy.minimaltodo.eval_wvi$i      android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper
com.rubenroy.minimaltodo.eval_wvi$p      android.support.v7.internal.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper
com.rubenroy.minimaltodo.eval_wvi$t      android.support.v7.internal.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper
com.rubenroy.minimaltodo.eval_wvi$u      android.support.v7.internal.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper
com.rubenroy.minimaltodo.eval_yf8$1      android.support.v7.widget.StaggeredGridLayoutManager$1
com.rubenroy.minimaltodo.eval_yf8$2      android.support.v7.widget.StaggeredGridLayoutManager$2
com.rubenroy.minimaltodo.eval_yf8$a      android.support.v7.widget.StaggeredGridLayoutManager$Span
com.rubenroy.minimaltodo.eval_yf8$g      android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo
com.rubenroy.minimaltodo.eval_yf8$t      public android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams
com.rubenroy.minimaltodo.eval_yf8$y      public android.support.v7.widget.StaggeredGridLayoutManager$SavedState
com.rubenroy.minimaltodo.eval_ym3$1      android.support.v7.widget.RecyclerView$1
com.rubenroy.minimaltodo.eval_ym3$2      android.support.v7.widget.RecyclerView$2
com.rubenroy.minimaltodo.eval_ym3$3      final android.support.v7.widget.RecyclerView$3
com.rubenroy.minimaltodo.eval_ym3$4      android.support.v7.widget.RecyclerView$4
com.rubenroy.minimaltodo.eval_ym3$5      android.support.v7.widget.RecyclerView$5
com.rubenroy.minimaltodo.eval_ym3$6      android.support.v7.widget.RecyclerView$6
com.rubenroy.minimaltodo.eval_ym3$a      public final android.support.v7.widget.RecyclerView$Recycler
com.rubenroy.minimaltodo.eval_ym3$b      public abstract android.support.v7.widget.RecyclerView$Adapter
com.rubenroy.minimaltodo.eval_ym3$c      public android.support.v7.widget.RecyclerView$State
com.rubenroy.minimaltodo.eval_ym3$d      public abstract android.support.v7.widget.RecyclerView$SmoothScroller
com.rubenroy.minimaltodo.eval_ym3$e      public abstract interface android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener
com.rubenroy.minimaltodo.eval_ym3$j      public android.support.v7.widget.RecyclerView$SavedState
com.rubenroy.minimaltodo.eval_ym3$k      public abstract interface android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback
com.rubenroy.minimaltodo.eval_ym3$l      android.support.v7.widget.RecyclerView$AdapterDataObservable
com.rubenroy.minimaltodo.eval_ym3$n      public abstract android.support.v7.widget.RecyclerView$ItemAnimator
com.rubenroy.minimaltodo.eval_ym3$o      public abstract android.support.v7.widget.RecyclerView$AdapterDataObserver
com.rubenroy.minimaltodo.eval_ym3$p      public abstract android.support.v7.widget.RecyclerView$LayoutManager
com.rubenroy.minimaltodo.eval_ym3$q      public android.support.v7.widget.RecyclerView$RecycledViewPool
com.rubenroy.minimaltodo.eval_ym3$t      public abstract android.support.v7.widget.RecyclerView$ItemDecoration
com.rubenroy.minimaltodo.eval_ym3$w      public abstract interface android.support.v7.widget.RecyclerView$RecyclerListener
com.rubenroy.minimaltodo.eval_ym3$x      android.support.v7.widget.RecyclerView$ViewFlinger
com.rubenroy.minimaltodo.eval_ym3$y      android.support.v7.widget.RecyclerView$ItemAnimatorRestoreListener
com.rubenroy.minimaltodo.eval_ypi$1      android.support.v7.widget.ActionMenuView$1
com.rubenroy.minimaltodo.eval_ypi$f      public android.support.v7.widget.ActionMenuView$LayoutParams
com.rubenroy.minimaltodo.eval_ypi$m      public abstract interface android.support.v7.widget.ActionMenuView$ActionMenuChildView
com.rubenroy.minimaltodo.eval_ypi$q      public abstract interface android.support.v7.widget.ActionMenuView$OnMenuItemClickListener
com.rubenroy.minimaltodo.eval_ypi$x      android.support.v7.widget.ActionMenuView$MenuBuilderCallback
com.rubenroy.minimaltodo.eval_z6y$_      public abstract interface com.rubenroy.minimaltodo.ItemTouchHelperClass$ItemTouchHelperAdapter
com.rubenroy.minimaltodo.eval_zag$u      android.support.v7.internal.widget.TintContextWrapper$TintResources
com.rubenroy.minimaltodo.eval_zs0$p      public abstract interface android.support.v7.util.ThreadUtil$BackgroundCallback
com.rubenroy.minimaltodo.eval_zs0$w      public abstract interface android.support.v7.util.ThreadUtil$MainThreadCallback
com.rubenroy.minimaltodo.eval_as$k$1     final android.support.v4.widget.NestedScrollView$SavedState$1
com.rubenroy.minimaltodo.eval_d3$x$1     android.support.v7.app.AlertController$AlertParams$1
com.rubenroy.minimaltodo.eval_d3$x$2     android.support.v7.app.AlertController$AlertParams$2
com.rubenroy.minimaltodo.eval_d3$x$3     android.support.v7.app.AlertController$AlertParams$3
com.rubenroy.minimaltodo.eval_d3$x$4     android.support.v7.app.AlertController$AlertParams$4
com.rubenroy.minimaltodo.eval_d3$x$l     public abstract interface android.support.v7.app.AlertController$AlertParams$OnPrepareListViewListener
com.rubenroy.minimaltodo.eval_dk$b$1     final android.support.v4.media.session.MediaSessionCompat$Token$1
com.rubenroy.minimaltodo.eval_dk$j$1     android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1
com.rubenroy.minimaltodo.eval_dk$j$2     android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$2
com.rubenroy.minimaltodo.eval_dk$j$b     final android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$Command
com.rubenroy.minimaltodo.eval_dk$j$n     android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub
com.rubenroy.minimaltodo.eval_dk$j$z     android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler
com.rubenroy.minimaltodo.eval_dk$n$d     android.support.v4.media.session.MediaSessionCompat$Callback$StubApi21
com.rubenroy.minimaltodo.eval_dk$n$t     android.support.v4.media.session.MediaSessionCompat$Callback$StubApi23
com.rubenroy.minimaltodo.eval_dk$u$1     final android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1
com.rubenroy.minimaltodo.eval_du$i$f     abstract interface android.support.v4.content.SharedPreferencesCompat$EditorCompat$Helper
com.rubenroy.minimaltodo.eval_du$i$r     android.support.v4.content.SharedPreferencesCompat$EditorCompat$EditorHelperBaseImpl
com.rubenroy.minimaltodo.eval_du$i$t     android.support.v4.content.SharedPreferencesCompat$EditorCompat$EditorHelperApi9Impl
com.rubenroy.minimaltodo.eval_e6$h$n     public abstract interface android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory
com.rubenroy.minimaltodo.eval_er$2$1     android.support.v4.print.PrintHelperKitkat$2$1
com.rubenroy.minimaltodo.eval_es$m$u     android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler
com.rubenroy.minimaltodo.eval_f4$k$1     android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1
com.rubenroy.minimaltodo.eval_fr$i$p     android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord
com.rubenroy.minimaltodo.eval_fte$10     android.support.v7.widget.SearchView$10
com.rubenroy.minimaltodo.eval_fte$11     android.support.v7.widget.SearchView$11
com.rubenroy.minimaltodo.eval_fte$12     android.support.v7.widget.SearchView$12
com.rubenroy.minimaltodo.eval_g9$j$1     android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1
com.rubenroy.minimaltodo.eval_g9$l$1     android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1
com.rubenroy.minimaltodo.eval_gj$p$1     final android.support.v4.media.session.PlaybackStateCompat$CustomAction$1
com.rubenroy.minimaltodo.eval_gj$p$k     public final android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder
com.rubenroy.minimaltodo.eval_hg$f$g     android.support.v4.media.session.IMediaSession$Stub$Proxy
com.rubenroy.minimaltodo.eval_hu$f$_     android.support.v4.media.IMediaBrowserServiceCompatCallbacks$Stub$Proxy
com.rubenroy.minimaltodo.eval_ik$d$1     final android.support.v4.app.NotificationCompat$Action$1
com.rubenroy.minimaltodo.eval_ik$d$b     public abstract interface android.support.v4.app.NotificationCompat$Action$Extender
com.rubenroy.minimaltodo.eval_ik$d$e     public final android.support.v4.app.NotificationCompat$Action$WearableExtender
com.rubenroy.minimaltodo.eval_ik$d$n     public final android.support.v4.app.NotificationCompat$Action$Builder
com.rubenroy.minimaltodo.eval_ik$h$z     public android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation
com.rubenroy.minimaltodo.eval_it$h$1     android.support.v13.app.FragmentCompat$BaseFragmentCompatImpl$1
com.rubenroy.minimaltodo.eval_iz$d$1     android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$1
com.rubenroy.minimaltodo.eval_iz$d$2     android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$2
com.rubenroy.minimaltodo.eval_jk$d$y     android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy
com.rubenroy.minimaltodo.eval_kj$x$1     android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator$1
com.rubenroy.minimaltodo.eval_mu$t$1     final android.support.v4.app.Fragment$SavedState$1
com.rubenroy.minimaltodo.eval_o0$h$c     android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler
com.rubenroy.minimaltodo.eval_o0$h$v     android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat
com.rubenroy.minimaltodo.eval_o0$h$z     android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21
com.rubenroy.minimaltodo.eval_p4$_$1     android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1
com.rubenroy.minimaltodo.eval_p4$_$z     android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags
com.rubenroy.minimaltodo.eval_p7$c$1     final android.support.v4.hardware.fingerprint.FingerprintManagerCompat$Api23FingerprintManagerCompatImpl$1
com.rubenroy.minimaltodo.eval_px$l$1     android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1
com.rubenroy.minimaltodo.eval_px$v$1     android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1
com.rubenroy.minimaltodo.eval_qa$j$1     final android.support.v13.app.FragmentTabHost$SavedState$1
com.rubenroy.minimaltodo.eval_rk$o$1     android.support.v4.media.MediaBrowserServiceCompat$ServiceBinder$1
com.rubenroy.minimaltodo.eval_rk$o$2     android.support.v4.media.MediaBrowserServiceCompat$ServiceBinder$2
com.rubenroy.minimaltodo.eval_rk$o$3     android.support.v4.media.MediaBrowserServiceCompat$ServiceBinder$3
com.rubenroy.minimaltodo.eval_rk$o$4     android.support.v4.media.MediaBrowserServiceCompat$ServiceBinder$4
com.rubenroy.minimaltodo.eval_rk$o$5     android.support.v4.media.MediaBrowserServiceCompat$ServiceBinder$5
com.rubenroy.minimaltodo.eval_rl$g$1     android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$HoneycombValueAnimatorCompat$1
com.rubenroy.minimaltodo.eval_sa$a$s     android.support.v4.app.INotificationSideChannel$Stub$Proxy
com.rubenroy.minimaltodo.eval_sh$n$1     android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1
com.rubenroy.minimaltodo.eval_sv$c$y     android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$MyVpaListener
com.rubenroy.minimaltodo.eval_sv$u$z     android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl$Starter
com.rubenroy.minimaltodo.eval_t6$h$_     android.support.v4.os.IResultReceiver$Stub$Proxy
com.rubenroy.minimaltodo.eval_tu$a$f     public abstract interface android.support.v4.app.NotificationCompatBase$Action$Factory
com.rubenroy.minimaltodo.eval_tu$f$r     public abstract interface android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory
com.rubenroy.minimaltodo.eval_tz$5$1     android.support.v7.app.AppCompatDelegateImplV7$5$1
com.rubenroy.minimaltodo.eval_tz$q$1     android.support.v7.app.AppCompatDelegateImplV7$ActionModeCallbackWrapperV7$1
com.rubenroy.minimaltodo.eval_tz$x$l     android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState$SavedState
com.rubenroy.minimaltodo.eval_ue$f$u     abstract interface android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorUpdateListenerProxy
com.rubenroy.minimaltodo.eval_ue$f$y     abstract interface android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorListenerProxy
com.rubenroy.minimaltodo.eval_uf$y$u     android.support.v4.media.IMediaBrowserServiceCompat$Stub$Proxy
com.rubenroy.minimaltodo.eval_v3$j$1     android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$1
com.rubenroy.minimaltodo.eval_v3$j$2     android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$2
com.rubenroy.minimaltodo.eval_v3$j$3     android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$3
com.rubenroy.minimaltodo.eval_v3$j$4     android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$4
com.rubenroy.minimaltodo.eval_v3$j$5     android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$5
com.rubenroy.minimaltodo.eval_v3$j$6     android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$6
com.rubenroy.minimaltodo.eval_v3$j$7     android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$7
com.rubenroy.minimaltodo.eval_v3$j$h     android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$Subscription
com.rubenroy.minimaltodo.eval_v3$j$v     android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$ServiceCallbacks
com.rubenroy.minimaltodo.eval_v3$j$x     android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection
com.rubenroy.minimaltodo.eval_v3$m$1     final android.support.v4.media.MediaBrowserCompat$MediaItem$1
com.rubenroy.minimaltodo.eval_v3$m$r     public abstract interface android.support.v4.media.MediaBrowserCompat$MediaItem$Flags
com.rubenroy.minimaltodo.eval_wi$w$1     android.support.v4.widget.DrawerLayout$ViewDragCallback$1
com.rubenroy.minimaltodo.eval_y6$x$1     android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1
com.rubenroy.minimaltodo.eval_y6$x$2     android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2
com.rubenroy.minimaltodo.eval_ye$d$1     android.support.design.widget.TabLayout$SlidingTabStrip$1
com.rubenroy.minimaltodo.eval_ye$d$2     android.support.design.widget.TabLayout$SlidingTabStrip$2
com.rubenroy.minimaltodo.eval_z0$y$1     android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$1
com.rubenroy.minimaltodo.eval_z0$y$2     android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$2
com.rubenroy.minimaltodo.eval_zi$s$1     final android.support.v4.app.FragmentTabHost$SavedState$1
android.support.v7.widget.Toolbar$z$1    final android.support.v7.widget.Toolbar$SavedState$1
com.rubenroy.minimaltodo.eval_ibt$y$l    android.support.v7.widget.ListPopupWindow$ForwardingListener$DisallowIntercept
com.rubenroy.minimaltodo.eval_ibt$y$s    android.support.v7.widget.ListPopupWindow$ForwardingListener$TriggerLongPress
com.rubenroy.minimaltodo.eval_lbt$q$1    android.support.v7.widget.AppCompatSpinner$DropdownPopup$1
com.rubenroy.minimaltodo.eval_lbt$q$2    android.support.v7.widget.AppCompatSpinner$DropdownPopup$2
com.rubenroy.minimaltodo.eval_lbt$q$3    android.support.v7.widget.AppCompatSpinner$DropdownPopup$3
com.rubenroy.minimaltodo.eval_mfs$1$1    android.support.v7.util.MessageThreadUtil$1$1
com.rubenroy.minimaltodo.eval_mfs$2$1    android.support.v7.util.MessageThreadUtil$2$1
com.rubenroy.minimaltodo.eval_pc8$d$1    final android.support.v7.widget.helper.ItemTouchHelper$Callback$1
com.rubenroy.minimaltodo.eval_pc8$d$2    final android.support.v7.widget.helper.ItemTouchHelper$Callback$2
com.rubenroy.minimaltodo.eval_pc8$q$1    android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation$1
com.rubenroy.minimaltodo.eval_whu$q$1    android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton$1
com.rubenroy.minimaltodo.eval_whu$x$1    final android.support.v7.widget.ActionMenuPresenter$SavedState$1
com.rubenroy.minimaltodo.eval_yf8$y$1    final android.support.v7.widget.StaggeredGridLayoutManager$SavedState$1
com.rubenroy.minimaltodo.eval_ym3$d$u    public android.support.v7.widget.RecyclerView$SmoothScroller$Action
com.rubenroy.minimaltodo.eval_ym3$j$1    final android.support.v7.widget.RecyclerView$SavedState$1
com.rubenroy.minimaltodo.eval_ym3$n$h    public android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo
com.rubenroy.minimaltodo.eval_ym3$n$s    public abstract interface android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener
com.rubenroy.minimaltodo.eval_ym3$n$w    abstract interface android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener
com.rubenroy.minimaltodo.eval_ym3$n$x    public abstract interface android.support.v7.widget.RecyclerView$ItemAnimator$AdapterChanges
com.rubenroy.minimaltodo.eval_ym3$p$u    public android.support.v7.widget.RecyclerView$LayoutManager$Properties
com.rubenroy.minimaltodo.eval_er$2$1$1   android.support.v4.print.PrintHelperKitkat$2$1$1
com.rubenroy.minimaltodo.eval_ik$h$z$1   final android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$1
com.rubenroy.minimaltodo.eval_ik$h$z$o   public android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder
com.rubenroy.minimaltodo.eval_n$eval_e   abstract interface android.support.design.internal.NavigationMenuPresenter$NavigationMenuItem
com.rubenroy.minimaltodo.eval_n$eval_g   android.support.design.internal.NavigationMenuPresenter$SeparatorViewHolder
com.rubenroy.minimaltodo.eval_n$eval_w   abstract android.support.design.internal.NavigationMenuPresenter$ViewHolder
com.rubenroy.minimaltodo.eval_tz$x$l$1   final android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState$SavedState$1
com.rubenroy.minimaltodo.MainActivity$a  public com.rubenroy.minimaltodo.MainActivity$BasicListAdapter
com.rubenroy.minimaltodo.eval__j$eval_m  android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl
com.rubenroy.minimaltodo.eval_ap$eval__  android.support.v4.widget.SlidingPaneLayout$SavedState
com.rubenroy.minimaltodo.eval_ap$eval_h  public android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener
com.rubenroy.minimaltodo.eval_ap$eval_t  android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB
com.rubenroy.minimaltodo.eval_ap$eval_v  android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1
com.rubenroy.minimaltodo.eval_ba$eval_l  android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl
com.rubenroy.minimaltodo.eval_ba$eval_v  android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl
com.rubenroy.minimaltodo.eval_bc$eval_p  android.support.v7.app.ActionBarDrawerToggle$HoneycombDelegate
com.rubenroy.minimaltodo.eval_d3$eval__  final android.support.v7.app.AlertController$ButtonHandler
com.rubenroy.minimaltodo.eval_dk$eval_o  public abstract interface android.support.v4.media.session.MediaSessionCompat$SessionFlags
com.rubenroy.minimaltodo.eval_dk$eval_s  public final android.support.v4.media.session.MediaSessionCompat$QueueItem
com.rubenroy.minimaltodo.eval_do$eval_n  android.support.v4.app.RemoteInput$ImplJellybean
com.rubenroy.minimaltodo.eval_dr$eval_a  android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl
com.rubenroy.minimaltodo.eval_dr$eval_i  public android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat
com.rubenroy.minimaltodo.eval_dr$eval_j  public android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat
com.rubenroy.minimaltodo.eval_f1$eval_c  android.support.v4.graphics.BitmapCompat$KitKatBitmapCompatImpl
com.rubenroy.minimaltodo.eval_fp$eval_l  android.support.v4.text.ICUCompat$ICUCompatImplLollipop
com.rubenroy.minimaltodo.eval_fr$eval_g  android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent
com.rubenroy.minimaltodo.eval_fr$eval_j  android.support.v4.app.NotificationManagerCompat$ImplEclair
com.rubenroy.minimaltodo.eval_fr$eval_m  android.support.v4.app.NotificationManagerCompat$NotifyTask
com.rubenroy.minimaltodo.eval_fr$eval_q  abstract interface android.support.v4.app.NotificationManagerCompat$Task
com.rubenroy.minimaltodo.eval_h6$eval_x  android.support.v4.app.NavUtils$NavUtilsImplBase
com.rubenroy.minimaltodo.eval_ik$eval_g  public android.support.v4.app.NotificationCompat$BigTextStyle
com.rubenroy.minimaltodo.eval_ik$eval_m  public abstract android.support.v4.app.NotificationCompat$Style
com.rubenroy.minimaltodo.eval_ik$eval_r  android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread
com.rubenroy.minimaltodo.eval_ik$eval_u  android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb
com.rubenroy.minimaltodo.eval_ik$eval_v  android.support.v4.app.NotificationCompat$NotificationCompatImplApi21
com.rubenroy.minimaltodo.eval_le$eval_q  android.support.v4.view.MotionEventCompat$HoneycombMr1MotionEventVersionImpl
com.rubenroy.minimaltodo.eval_mk$eval_q  abstract interface android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm
com.rubenroy.minimaltodo.eval_mk$eval_r  abstract android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl
com.rubenroy.minimaltodo.eval_n5$eval_u  android.support.design.widget.FloatingActionButtonEclairMr1$ResetElevationAnimation
com.rubenroy.minimaltodo.eval_o0$eval_f  android.support.v4.media.session.MediaControllerCompat$TransportControlsApi21
com.rubenroy.minimaltodo.eval_o0$eval_g  android.support.v4.media.session.MediaControllerCompat$TransportControlsBase
com.rubenroy.minimaltodo.eval_o0$eval_k  android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi23
com.rubenroy.minimaltodo.eval_o7$eval_k  android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl
com.rubenroy.minimaltodo.eval_p7$eval_h  android.support.v4.hardware.fingerprint.FingerprintManagerCompat$LegacyFingerprintManagerCompatImpl
com.rubenroy.minimaltodo.eval_p7$eval_q  abstract interface android.support.v4.hardware.fingerprint.FingerprintManagerCompat$FingerprintManagerCompatImpl
com.rubenroy.minimaltodo.eval_pz$eval_a  public android.support.design.widget.NavigationView$SavedState
com.rubenroy.minimaltodo.eval_sv$eval_p  abstract interface android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl
com.rubenroy.minimaltodo.eval_tp$eval_c  public android.support.v4.view.ViewPager$SavedState
com.rubenroy.minimaltodo.eval_tp$eval_x  public abstract interface android.support.v4.view.ViewPager$PageTransformer
com.rubenroy.minimaltodo.eval_up$eval_k  public final android.support.v4.media.routing.MediaRouterJellybean$SelectRouteWorkaround
com.rubenroy.minimaltodo.eval_up$eval_z  public abstract interface android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback
com.rubenroy.minimaltodo.eval_wi$eval_k  public abstract interface android.support.v4.widget.DrawerLayout$DrawerListener
com.rubenroy.minimaltodo.eval_wi$eval_w  public android.support.v4.widget.DrawerLayout$SavedState
com.rubenroy.minimaltodo.eval_wx$eval_b  android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl
com.rubenroy.minimaltodo.eval_xf$eval_b  public android.support.design.widget.CoordinatorLayout$SavedState
com.rubenroy.minimaltodo.eval_xf$eval_i  public android.support.design.widget.CoordinatorLayout$LayoutParams
com.rubenroy.minimaltodo.eval_xw$eval_g  android.support.v4.app.ShareCompat$ShareCompatImplICS
com.rubenroy.minimaltodo.eval_xw$eval_n  android.support.v4.app.ShareCompat$ShareCompatImplJB
com.rubenroy.minimaltodo.eval_y6$eval_l  android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl
com.rubenroy.minimaltodo.eval_ye$eval_u  public android.support.design.widget.TabLayout$ViewPagerOnTabSelectedListener
com.rubenroy.minimaltodo.eval_ys$eval_x  public abstract interface android.support.v7.app.ActionBar$TabListener
com.rubenroy.minimaltodo.eval_z6$eval_a  abstract interface android.support.v4.view.ViewCompat$ViewCompatImpl
com.rubenroy.minimaltodo.eval_z6$eval_g  android.support.v4.view.ViewCompat$JbMr2ViewCompatImpl
com.rubenroy.minimaltodo.eval_zb$eval_v  android.support.v4.widget.PopupWindowCompat$BasePopupWindowImpl
android.support.design.widget.Snackbar$_ public abstract android.support.design.widget.Snackbar$Callback
android.support.design.widget.Snackbar$i public android.support.design.widget.Snackbar$SnackbarLayout
android.support.design.widget.Snackbar$x public abstract interface android.support.design.widget.Snackbar$Duration
com.rubenroy.minimaltodo.eval_awr$eval_f android.support.v7.internal.widget.ActivityChooserView$Callbacks
com.rubenroy.minimaltodo.eval_fte$eval_k public abstract interface android.support.v7.widget.SearchView$OnSuggestionListener
com.rubenroy.minimaltodo.eval_l45$eval_a public android.support.v7.widget.LinearLayoutManager$SavedState
com.rubenroy.minimaltodo.eval_p8y$eval_g public abstract android.support.v7.util.AsyncListUtil$ViewCallback
com.rubenroy.minimaltodo.eval_rwc$eval_k public final com.rubenroy.minimaltodo.R$style
com.rubenroy.minimaltodo.eval_rwc$eval_p public final com.rubenroy.minimaltodo.R$integer
com.rubenroy.minimaltodo.eval_rwc$eval_t public final com.rubenroy.minimaltodo.R$styleable
com.rubenroy.minimaltodo.eval_rwc$eval_y public final com.rubenroy.minimaltodo.R$dimen
com.rubenroy.minimaltodo.eval_rwc$eval_z public final com.rubenroy.minimaltodo.R$string
com.rubenroy.minimaltodo.eval_yf8$eval_o android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup
com.rubenroy.minimaltodo.eval_ym3$eval_c public abstract interface android.support.v7.widget.RecyclerView$OnItemTouchListener
com.rubenroy.minimaltodo.eval_ym3$eval_d public android.support.v7.widget.RecyclerView$SimpleOnItemTouchListener
com.rubenroy.minimaltodo.eval_ym3$eval_m public abstract android.support.v7.widget.RecyclerView$ViewCacheExtension
com.rubenroy.minimaltodo.eval_ym3$eval_n android.support.v7.widget.RecyclerView$RecyclerViewDataObserver
com.rubenroy.minimaltodo.eval_ym3$eval_p public abstract android.support.v7.widget.RecyclerView$ViewHolder
com.rubenroy.minimaltodo.eval_ym3$eval_q public android.support.v7.widget.RecyclerView$LayoutParams
com.rubenroy.minimaltodo.eval_ym3$eval_x public abstract android.support.v7.widget.RecyclerView$OnScrollListener
com.rubenroy.minimaltodo.eval_ypi$eval_t android.support.v7.widget.ActionMenuView$ActionMenuPresenterCallback
com.rubenroy.minimaltodo.MainActivity$a$1        com.rubenroy.minimaltodo.MainActivity$BasicListAdapter$1
com.rubenroy.minimaltodo.MainActivity$a$o        public com.rubenroy.minimaltodo.MainActivity$BasicListAdapter$ViewHolder
com.rubenroy.minimaltodo.eval_ap$eval__$1        final android.support.v4.widget.SlidingPaneLayout$SavedState$1
com.rubenroy.minimaltodo.eval_dk$eval_s$1        final android.support.v4.media.session.MediaSessionCompat$QueueItem$1
com.rubenroy.minimaltodo.eval_pz$eval_a$1        final android.support.design.widget.NavigationView$SavedState$1
com.rubenroy.minimaltodo.eval_tp$eval_c$1        final android.support.v4.view.ViewPager$SavedState$1
com.rubenroy.minimaltodo.eval_wi$eval_w$1        final android.support.v4.widget.DrawerLayout$SavedState$1
com.rubenroy.minimaltodo.eval_xf$eval_b$1        final android.support.design.widget.CoordinatorLayout$SavedState$1
android.support.design.widget.Snackbar$_$d       public abstract interface android.support.design.widget.Snackbar$Callback$DismissEvent
android.support.design.widget.Snackbar$i$w       abstract interface android.support.design.widget.Snackbar$SnackbarLayout$OnAttachStateChangeListener
android.support.design.widget.Snackbar$i$y       abstract interface android.support.design.widget.Snackbar$SnackbarLayout$OnLayoutChangeListener
com.rubenroy.minimaltodo.eval_l45$eval_a$1       final android.support.v7.widget.LinearLayoutManager$SavedState$1
com.rubenroy.minimaltodo.eval_yf8$eval_o$x       android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem
com.rubenroy.minimaltodo.MainActivity$a$o$1      com.rubenroy.minimaltodo.MainActivity$BasicListAdapter$ViewHolder$1
android.support.design.widget.AppBarLayout$m     public android.support.design.widget.AppBarLayout$LayoutParams
android.support.design.widget.AppBarLayout$s     public abstract interface android.support.design.widget.AppBarLayout$OnOffsetChangedListener
com.rubenroy.minimaltodo.eval_yf8$eval_o$x$1     final android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1
android.support.design.widget.AppBarLayout$m$h   public abstract interface android.support.design.widget.AppBarLayout$LayoutParams$ScrollFlags
android.support.design.widget.HeaderBehavior$b   android.support.design.widget.HeaderBehavior$FlingRunnable
android.support.design.widget.FloatingActionButton$l     public abstract android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener
android.support.design.widget.SwipeDismissBehavior$d     public abstract interface android.support.design.widget.SwipeDismissBehavior$OnDismissListener
android.support.design.widget.SwipeDismissBehavior$i     android.support.design.widget.SwipeDismissBehavior$SettleRunnable
android.support.design.widget.AppBarLayout$Behavior$a    public abstract android.support.design.widget.AppBarLayout$Behavior$DragCallback
android.support.design.widget.AppBarLayout$Behavior$y    public android.support.design.widget.AppBarLayout$Behavior$SavedState
android.support.design.widget.AppBarLayout$Behavior$y$1  final android.support.design.widget.AppBarLayout$Behavior$SavedState$1
-------------------------------------------------------------------------------

android.support.design.BuildConfig       (com.rubenroy.minimaltodo.k)
===============================================================================
  No methods

android.support.design.BuildConfig$Exception     (com.rubenroy.minimaltodo.eval_v)
===============================================================================
  No methods

android.support.design.R
===============================================================================
  No methods

android.support.design.R$Exception
===============================================================================
  No methods

android.support.design.R$anim
===============================================================================
  No methods

android.support.design.R$attr
===============================================================================
  No methods

android.support.design.R$bool
===============================================================================
  No methods

android.support.design.R$color
===============================================================================
  No methods

android.support.design.R$dimen
===============================================================================
  No methods

android.support.design.R$drawable
===============================================================================
  No methods

android.support.design.R$id
===============================================================================
  No methods

android.support.design.R$integer
===============================================================================
  No methods

android.support.design.R$layout
===============================================================================
  No methods

android.support.design.R$string
===============================================================================
  No methods

android.support.design.R$style
===============================================================================
  No methods

android.support.design.R$styleable
===============================================================================
  No methods

android.support.design.internal.ForegroundLinearLayout   (com.rubenroy.minimaltodo.eval_t)
===============================================================================
  draw                         public draw(android.graphics.Canvas)
  drawableHotspotChanged       public drawableHotspotChanged(float,float)
  drawableStateChanged         protected drawableStateChanged()
  getForeground                public getForeground()
  getForegroundGravity         public getForegroundGravity()
  jumpDrawablesToCurrentState  public jumpDrawablesToCurrentState()
  onLayout                     protected onLayout(boolean,int,int,int,int)
  onSizeChanged                protected onSizeChanged(int,int,int,int)
  setForeground                public setForeground(android.graphics.drawable.Drawable)
  setForegroundGravity         public setForegroundGravity(int)
  verifyDrawable               protected verifyDrawable(android.graphics.drawable.Drawable)

android.support.design.internal.ForegroundLinearLayout$Exception (com.rubenroy.minimaltodo.eval_m)
===============================================================================
  No methods

android.support.design.internal.NavigationMenu   (com.rubenroy.minimaltodo.eval_w)
===============================================================================
  addSubMenu   public addSubMenu(int,int,int,java.lang.CharSequence)

android.support.design.internal.NavigationMenu$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_s)
===============================================================================
  No methods

android.support.design.internal.NavigationMenuItemView   (com.rubenroy.minimaltodo.eval_f)
===============================================================================
  a                        setIconTintList(android.content.res.ColorStateList)
  a                        public setIcon(android.graphics.drawable.Drawable)
  a                        private setActionView(android.view.View)
  c                        public getItemData()
  c                        public setChecked(boolean)
  c                        public setTitle(java.lang.CharSequence)
  h                        public showsIcon()
  n                        private createDefaultBackground()
  q                        public setTextColor(android.content.res.ColorStateList)
  q                        public setShortcut(boolean,char)
  u                        public setCheckable(boolean)
  v                        public prefersCondensedTitle()
  w                        public setTextAppearance(android.content.Context,int)
  w                        public initialize(android.support.v7.internal.view.menu.MenuItemImpl,int)
  x                        public recycle()
  onCreateDrawableState    protected onCreateDrawableState(int)

android.support.design.internal.NavigationMenuItemView$Exception (com.rubenroy.minimaltodo.eval_y)
===============================================================================
  No methods

android.support.design.internal.NavigationMenuPresenter  (com.rubenroy.minimaltodo.eval_n)
===============================================================================
  a        public onSaveInstanceState()
  a        static access$800(android.support.design.internal.NavigationMenuPresenter)
  a        public collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl)
  a        public setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback)
  b        static access$100(android.support.design.internal.NavigationMenuPresenter)
  d        public flagActionItems()
  e        public setItemTextColor(android.content.res.ColorStateList)
  eval_a   static access$600(android.support.design.internal.NavigationMenuPresenter)
  eval_e   public getItemTintList()
  eval_h   public getItemTextColor()
  eval_z   static access$900(android.support.design.internal.NavigationMenuPresenter)
  f        public setId(int)
  g        static access$500(android.support.design.internal.NavigationMenuPresenter)
  g        public expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl)
  g        public updateMenuView(boolean)
  h        static access$400(android.support.design.internal.NavigationMenuPresenter)
  h        public addHeaderView(android.view.View)
  h        public setItemTextAppearance(int)
  l        static access$200(android.support.design.internal.NavigationMenuPresenter)
  l        public setCheckedItem(android.support.v7.internal.view.menu.MenuItemImpl)
  o        public initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder)
  o        public onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)
  o        public removeHeaderView(android.view.View)
  r        static access$1100(android.support.design.internal.NavigationMenuPresenter)
  r        public onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder)
  t        public setItemIconTintList(android.content.res.ColorStateList)
  t        public setUpdateSuspended(boolean)
  u        public setItemBackground(android.graphics.drawable.Drawable)
  v        public getId()
  v        static access$300(android.support.design.internal.NavigationMenuPresenter)
  v        public inflateHeaderView(int)
  x        static access$700(android.support.design.internal.NavigationMenuPresenter)
  y        public onRestoreInstanceState(android.os.Parcelable)
  y        static access$000(android.support.design.internal.NavigationMenuPresenter)
  z        public getItemBackground()
  z        public getMenuView(android.view.ViewGroup)

android.support.design.internal.NavigationMenuPresenter$1        (com.rubenroy.minimaltodo.eval_n$1)
===============================================================================
  onClick  public onClick(android.view.View)

android.support.design.internal.NavigationMenuPresenter$HeaderViewHolder (com.rubenroy.minimaltodo.eval_n$_)
===============================================================================
  No methods

android.support.design.internal.NavigationMenuPresenter$NavigationMenuAdapter    (com.rubenroy.minimaltodo.eval_n$r)
===============================================================================
  a        public createInstanceState()
  a        public volatile onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)
  e        public setCheckedItem(android.support.v7.internal.view.menu.MenuItemImpl)
  e        public onCreateViewHolder(android.view.ViewGroup,int)
  e        public getItemViewType(int)
  eval_w   public onViewRecycled(android.support.design.internal.NavigationMenuPresenter$ViewHolder)
  eval_y   private prepareMenuItems()
  f        public onBindViewHolder(android.support.design.internal.NavigationMenuPresenter$ViewHolder,int)
  f        public getItemId(int)
  g        private appendTransparentIconIfMissing(int,int)
  j        public volatile onViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder)
  k        public setUpdateSuspended(boolean)
  t        public restoreInstanceState(android.os.Bundle)
  x        public getItemCount()
  z        public update()

android.support.design.internal.NavigationMenuPresenter$NavigationMenuHeaderItem (com.rubenroy.minimaltodo.eval_n$o)
===============================================================================
  No methods

android.support.design.internal.NavigationMenuPresenter$NavigationMenuItem       (com.rubenroy.minimaltodo.eval_n$eval_e)
===============================================================================
  No methods

android.support.design.internal.NavigationMenuPresenter$NavigationMenuSeparatorItem      (com.rubenroy.minimaltodo.eval_n$d)
===============================================================================
  c    public getPaddingBottom()
  j    public getPaddingTop()

android.support.design.internal.NavigationMenuPresenter$NavigationMenuTextItem   (com.rubenroy.minimaltodo.eval_n$b)
===============================================================================
  g    public getMenuItem()

android.support.design.internal.NavigationMenuPresenter$NormalViewHolder (com.rubenroy.minimaltodo.eval_n$q)
===============================================================================
  No methods

android.support.design.internal.NavigationMenuPresenter$NullPointerException     (com.rubenroy.minimaltodo.eval_u)
===============================================================================
  No methods

android.support.design.internal.NavigationMenuPresenter$SeparatorViewHolder      (com.rubenroy.minimaltodo.eval_n$eval_g)
===============================================================================
  No methods

android.support.design.internal.NavigationMenuPresenter$SubheaderViewHolder      (com.rubenroy.minimaltodo.eval_n$m)
===============================================================================
  No methods

android.support.design.internal.NavigationMenuPresenter$ViewHolder       (com.rubenroy.minimaltodo.eval_n$eval_w)
===============================================================================
  No methods

android.support.design.internal.NavigationMenuView       (com.rubenroy.minimaltodo.eval_d)
===============================================================================
  c    public getWindowAnimations()
  d    public initialize(android.support.v7.internal.view.menu.MenuBuilder)

android.support.design.internal.NavigationMenuView$NullPointerException  (com.rubenroy.minimaltodo.eval_q)
===============================================================================
  No methods

android.support.design.internal.NavigationSubMenu        (com.rubenroy.minimaltodo.eval_c)
===============================================================================
  eval_w   private notifyParent()
  add      public add(int)
  add      public add(int,int,int,int)
  add      public add(int,int,int,java.lang.CharSequence)
  add      public add(java.lang.CharSequence)

android.support.design.internal.NavigationSubMenu$Exception      (com.rubenroy.minimaltodo.eval_l)
===============================================================================
  No methods

android.support.design.internal.ParcelableSparseArray    (com.rubenroy.minimaltodo.eval_b)
===============================================================================
  describeContents public describeContents()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.design.internal.ParcelableSparseArray$1  (com.rubenroy.minimaltodo.eval_b$1)
===============================================================================
  j    public createFromParcel(android.os.Parcel,java.lang.ClassLoader)
  x    public newArray(int)

android.support.design.internal.ParcelableSparseArray$IOException        (com.rubenroy.minimaltodo.eval__)
===============================================================================
  No methods

android.support.design.internal.ScrimInsetsFrameLayout   (com.rubenroy.minimaltodo.eval_j)
===============================================================================
  m                    static access$002(android.support.design.internal.ScrimInsetsFrameLayout,android.graphics.Rect)
  x                    static access$000(android.support.design.internal.ScrimInsetsFrameLayout)
  y                    static access$100(android.support.design.internal.ScrimInsetsFrameLayout)
  draw                 public draw(android.graphics.Canvas)
  onAttachedToWindow   protected onAttachedToWindow()
  onDetachedFromWindow protected onDetachedFromWindow()

android.support.design.internal.ScrimInsetsFrameLayout$1 (com.rubenroy.minimaltodo.eval_j$1)
===============================================================================
  h    public onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat)

android.support.design.internal.ScrimInsetsFrameLayout$Exception (com.rubenroy.minimaltodo.eval_a)
===============================================================================
  No methods

android.support.design.widget.AnimationUtils     (com.rubenroy.minimaltodo.eval_e)
===============================================================================
  f    static lerp(int,int,float)
  p    static lerp(float,float,float)

android.support.design.widget.AnimationUtils$AnimationListenerAdapter    (com.rubenroy.minimaltodo.eval_e$k)
===============================================================================
  onAnimationEnd       public onAnimationEnd(android.view.animation.Animation)
  onAnimationRepeat    public onAnimationRepeat(android.view.animation.Animation)
  onAnimationStart     public onAnimationStart(android.view.animation.Animation)

android.support.design.widget.AnimationUtils$Exception   (com.rubenroy.minimaltodo.eval_x)
===============================================================================
  No methods

android.support.design.widget.AppBarLayout
===============================================================================
  c                            static access$000(android.support.design.widget.AppBarLayout,android.support.v4.view.WindowInsetsCompat)
  d                            static access$500(android.support.design.widget.AppBarLayout)
  e                            public final getTotalScrollRange()
  eval_a                       private getPendingAction()
  eval_e                       private getTopInset()
  eval_s                       static access$600(android.support.design.widget.AppBarLayout)
  eval_y                       private getDownNestedPreScrollRange()
  f                            final getMinimumHeightForVisibleOverlappingContent()
  g                            private resetPendingAction()
  generateDefaultLayoutParams  protected generateDefaultLayoutParams()
  generateLayoutParams         public generateLayoutParams(android.util.AttributeSet)
  generateLayoutParams         protected generateLayoutParams(android.view.ViewGroup$LayoutParams)
  i                            private getUpNestedPreScrollRange()
  j                            public getTargetElevation()
  k                            private hasScrollableChildren()
  k                            static access$700(android.support.design.widget.AppBarLayout)
  k                            public removeOnOffsetChangedListener(android.support.design.widget.AppBarLayout$OnOffsetChangedListener)
  k                            private setWindowInsets(android.support.v4.view.WindowInsetsCompat)
  n                            static access$800(android.support.design.widget.AppBarLayout)
  o                            private hasChildWithInterpolator()
  o                            static access$100(android.support.design.widget.AppBarLayout)
  p                            private invalidateScrollRanges()
  q                            static access$200(android.support.design.widget.AppBarLayout)
  r                            private getDownNestedScrollRange()
  r                            static access$400(android.support.design.widget.AppBarLayout)
  t                            public setExpanded(boolean,boolean)
  u                            static access$900(android.support.design.widget.AppBarLayout)
  u                            public addOnOffsetChangedListener(android.support.design.widget.AppBarLayout$OnOffsetChangedListener)
  u                            public setExpanded(boolean)
  w                            public setTargetElevation(float)
  y                            static access$300(android.support.design.widget.AppBarLayout)
  checkLayoutParams            protected checkLayoutParams(android.view.ViewGroup$LayoutParams)
  generateDefaultLayoutParams  protected volatile generateDefaultLayoutParams()
  generateLayoutParams         public volatile generateLayoutParams(android.util.AttributeSet)
  generateLayoutParams         protected volatile generateLayoutParams(android.view.ViewGroup$LayoutParams)
  onLayout                     protected onLayout(boolean,int,int,int,int)
  onMeasure                    protected onMeasure(int,int)
  setOrientation               public setOrientation(int)

android.support.design.widget.AppBarLayout$1
===============================================================================
  h    public onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat)

android.support.design.widget.AppBarLayout$Behavior
===============================================================================
  d        private dispatchOffsetUpdates(android.support.design.widget.AppBarLayout)
  d        volatile setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int)
  e        public onRestoreInstanceState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.os.Parcelable)
  e        public volatile onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int)
  eval_m   private snapToChildIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout)
  f        public onSaveInstanceState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout)
  f        public onNestedScroll(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View,int,int,int,int)
  g        public volatile getLeftAndRightOffset()
  g        public onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View,android.view.View,int)
  h        volatile getMaxDragOffset(android.view.View)
  j        private interpolateOffset(android.support.design.widget.AppBarLayout,int)
  j        public onStopNestedScroll(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View)
  k        getTopBottomOffsetForScrollingSibling()
  k        public setDragCallback(android.support.design.widget.AppBarLayout$Behavior$DragCallback)
  k        setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,int)
  k        public volatile onNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int)
  k        public volatile onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int)
  l        getScrollRangeForDragFling(android.support.design.widget.AppBarLayout)
  l        volatile canDragView(android.view.View)
  n        public volatile getTopAndBottomOffset()
  n        public volatile onNestedFling(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,float,float,boolean)
  n        public volatile setTopAndBottomOffset(int)
  p        public onNestedPreScroll(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View,int,int,int[])
  p        public onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int)
  r        public volatile onSaveInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View)
  s        getMaxDragOffset(android.support.design.widget.AppBarLayout)
  s        public volatile onStopNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View)
  t        private animateOffsetTo(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int)
  u        public onNestedFling(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View,float,float,boolean)
  u        public volatile onRestoreInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View,android.os.Parcelable)
  v        public volatile setLeftAndRightOffset(int)
  w        canDragView(android.support.design.widget.AppBarLayout)
  w        private getChildOnOffset(android.support.design.widget.AppBarLayout,int)
  y        public volatile onNestedPreScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[])
  y        volatile getScrollRangeForDragFling(android.view.View)

android.support.design.widget.AppBarLayout$Behavior$1
===============================================================================
  a    public onAnimationUpdate(android.support.design.widget.ValueAnimatorCompat)

android.support.design.widget.AppBarLayout$Behavior$ArrayOutOfBoundsException    (com.rubenroy.minimaltodo.eval_r)
===============================================================================
  No methods

android.support.design.widget.AppBarLayout$Behavior$DragCallback (android.support.design.widget.AppBarLayout$Behavior$a)
===============================================================================
  f    public abstract canDrag(android.support.design.widget.AppBarLayout)

android.support.design.widget.AppBarLayout$Behavior$SavedState   (android.support.design.widget.AppBarLayout$Behavior$y)
===============================================================================
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.design.widget.AppBarLayout$Behavior$SavedState$1 (android.support.design.widget.AppBarLayout$Behavior$y$1)
===============================================================================
  j    public createFromParcel(android.os.Parcel,java.lang.ClassLoader)
  x    public newArray(int)

android.support.design.widget.AppBarLayout$Behavior$SavedState$ParseException    (com.rubenroy.minimaltodo.eval_p)
===============================================================================
  No methods

android.support.design.widget.AppBarLayout$LayoutParams  (android.support.design.widget.AppBarLayout$m)
===============================================================================
  g    public setScrollInterpolator(android.view.animation.Interpolator)
  g    public setScrollFlags(int)
  i    public getScrollFlags()
  z    public getScrollInterpolator()

android.support.design.widget.AppBarLayout$LayoutParams$NullPointerException     (com.rubenroy.minimaltodo.eval_i)
===============================================================================
  No methods

android.support.design.widget.AppBarLayout$LayoutParams$ScrollFlags      (android.support.design.widget.AppBarLayout$m$h)
===============================================================================
  No methods

android.support.design.widget.AppBarLayout$OnOffsetChangedListener       (android.support.design.widget.AppBarLayout$s)
===============================================================================
  p    public abstract onOffsetChanged(android.support.design.widget.AppBarLayout,int)

android.support.design.widget.AppBarLayout$ParseException        (com.rubenroy.minimaltodo.eval_o)
===============================================================================
  No methods

android.support.design.widget.AppBarLayout$ScrollingViewBehavior
===============================================================================
  c    public getOverlayTop()
  g    public volatile getLeftAndRightOffset()
  g    private getOverlapForOffset(android.view.View,int)
  i    private updateOffset(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View)
  j    public volatile onMeasureChild(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int,int)
  j    findFirstDependency(java.util.List)
  k    public onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int)
  n    public volatile getTopAndBottomOffset()
  n    public volatile setTopAndBottomOffset(int)
  v    public onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View)
  v    public volatile setLeftAndRightOffset(int)
  w    public layoutDependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View)
  y    getScrollRange(android.view.View)
  z    public setOverlayTop(int)

android.support.design.widget.CircularBorderDrawable     (com.rubenroy.minimaltodo.eval_g)
===============================================================================
  e                setBorderWidth(float)
  j                private createGradientShader()
  j                setTintColor(int)
  m                setGradientColors(int,int,int,int)
  draw             public draw(android.graphics.Canvas)
  getOpacity       public getOpacity()
  getPadding       public getPadding(android.graphics.Rect)
  onBoundsChange   protected onBoundsChange(android.graphics.Rect)
  setAlpha         public setAlpha(int)
  setColorFilter   public setColorFilter(android.graphics.ColorFilter)

android.support.design.widget.CircularBorderDrawable$ParseException      (com.rubenroy.minimaltodo.eval_z)
===============================================================================
  No methods

android.support.design.widget.CircularBorderDrawableLollipop     (com.rubenroy.minimaltodo.eval_h)
===============================================================================
  a            private updateTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode)
  draw         public draw(android.graphics.Canvas)
  getOutline   public getOutline(android.graphics.Outline)
  setTintList  public setTintList(android.content.res.ColorStateList)
  setTintMode  public setTintMode(android.graphics.PorterDuff$Mode)

android.support.design.widget.CircularBorderDrawableLollipop$NullPointerException        (com.rubenroy.minimaltodo.eval_rf)
===============================================================================
  No methods

android.support.design.widget.CollapsingTextHelper       (com.rubenroy.minimaltodo.eval_m5)
===============================================================================
  a        getText()
  a        private readFontFamilyTypeface(int)
  b        private static lerp(float,float,float,android.view.animation.Interpolator)
  c        setCollapsedTextGravity(int)
  d        getExpandedTextColor()
  d        setExpandedTextColor(int)
  e        public draw(android.graphics.Canvas)
  e        setCollapsedTypeface(android.graphics.Typeface)
  e        setCollapsedBounds(int,int,int,int)
  eval_d   public recalculate()
  eval_f   private clearTexture()
  eval_g   private static blendColors(int,int,float)
  eval_h   getCollapsedTextColor()
  h        private calculateCurrentOffsets()
  h        setCollapsedTextAppearance(int)
  i        onBoundsChanged()
  i        setTextSizeInterpolator(android.view.animation.Interpolator)
  j        getExpandedTypeface()
  j        setExpansionFraction(float)
  j        private static isClose(float,float)
  k        getCollapsedTextSize()
  k        private calculateIsRtl(java.lang.CharSequence)
  l        getCollapsedTypeface()
  l        setTypefaces(android.graphics.Typeface)
  l        private calculateUsingTextSize(float)
  m        getExpandedTextGravity()
  m        setPositionInterpolator(android.view.animation.Interpolator)
  m        setExpandedTextGravity(int)
  m        setText(java.lang.CharSequence)
  n        private calculateBaseOffsets()
  p        setCollapsedTextColor(int)
  q        getCollapsedTextGravity()
  q        private interpolateBounds(float)
  r        private static rectEquals(android.graphics.Rect,int,int,int,int)
  r        setExpandedTextSize(float)
  s        getExpandedTextSize()
  s        setExpandedBounds(int,int,int,int)
  v        private ensureExpandedTexture()
  v        setExpandedTextAppearance(int)
  w        setExpandedTypeface(android.graphics.Typeface)
  x        private calculateOffsets(float)
  y        getExpansionFraction()
  y        private setInterpolatedTextSize(float)
  z        setCollapsedTextSize(float)

android.support.design.widget.CollapsingTextHelper$NullPointerException  (com.rubenroy.minimaltodo.eval_n3)
===============================================================================
  No methods

android.support.design.widget.CollapsingToolbarLayout    (com.rubenroy.minimaltodo.eval_xg)
===============================================================================
  a                            public setCollapsedTitleTypeface(android.graphics.Typeface)
  b                            public getCollapsedTitleGravity()
  b                            public setCollapsedTitleTextAppearance(int)
  c                            public getContentScrim()
  c                            public setStatusBarScrimResource(int)
  d                            public getCollapsedTitleTypeface()
  d                            static access$700(android.support.design.widget.CollapsingToolbarLayout)
  d                            public setScrimsShown(boolean,boolean)
  eval_f                       public setExpandedTitleTextAppearance(int)
  eval_k                       public setExpandedTitleColor(int)
  eval_n                       public getExpandedTitleTypeface()
  eval_x                       private animateScrim(int)
  eval_z                       private ensureToolbar()
  g                            final getScrimTriggerOffset()
  generateDefaultLayoutParams  protected generateDefaultLayoutParams()
  generateLayoutParams         protected generateLayoutParams(android.view.ViewGroup$LayoutParams)
  h                            public setScrimsShown(boolean)
  h                            public setExpandedTitleGravity(int)
  i                            static access$000(android.support.design.widget.CollapsingToolbarLayout)
  i                            private setScrimAlpha(int)
  k                            static access$400(android.view.View)
  l                            private static getViewOffsetHelper(android.view.View)
  l                            public setTitle(java.lang.CharSequence)
  m                            static access$200(android.support.design.widget.CollapsingToolbarLayout,int)
  m                            public setCollapsedTitleTextColor(int)
  n                            public setContentScrim(android.graphics.drawable.Drawable)
  p                            public getExpandedTitleGravity()
  p                            static access$002(android.support.design.widget.CollapsingToolbarLayout,android.support.v4.view.WindowInsetsCompat)
  q                            public getStatusBarScrim()
  r                            static access$600(android.support.design.widget.CollapsingToolbarLayout)
  r                            public setContentScrimResource(int)
  s                            public getTitle()
  s                            static access$500(android.support.design.widget.CollapsingToolbarLayout)
  t                            private updateDummyView()
  t                            public setStatusBarScrim(android.graphics.drawable.Drawable)
  t                            public setTitleEnabled(boolean)
  u                            static access$302(android.support.design.widget.CollapsingToolbarLayout,int)
  u                            public setContentScrimColor(int)
  w                            public setCollapsedTitleGravity(int)
  x                            public isTitleEnabled()
  y                            public setStatusBarScrimColor(int)
  z                            public setExpandedTitleTypeface(android.graphics.Typeface)
  checkLayoutParams            protected checkLayoutParams(android.view.ViewGroup$LayoutParams)
  draw                         public draw(android.graphics.Canvas)
  drawChild                    protected drawChild(android.graphics.Canvas,android.view.View,long)
  generateDefaultLayoutParams  protected volatile generateDefaultLayoutParams()
  generateLayoutParams         public generateLayoutParams(android.util.AttributeSet)
  generateLayoutParams         protected volatile generateLayoutParams(android.view.ViewGroup$LayoutParams)
  onAttachedToWindow           protected onAttachedToWindow()
  onDetachedFromWindow         protected onDetachedFromWindow()
  onLayout                     protected onLayout(boolean,int,int,int,int)
  onMeasure                    protected onMeasure(int,int)
  onSizeChanged                protected onSizeChanged(int,int,int,int)

android.support.design.widget.CollapsingToolbarLayout$1  (com.rubenroy.minimaltodo.eval_xg$1)
===============================================================================
  h    public onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat)

android.support.design.widget.CollapsingToolbarLayout$2  (com.rubenroy.minimaltodo.eval_xg$2)
===============================================================================
  a    public onAnimationUpdate(android.support.design.widget.ValueAnimatorCompat)

android.support.design.widget.CollapsingToolbarLayout$IOException        (com.rubenroy.minimaltodo.eval_b8)
===============================================================================
  No methods

android.support.design.widget.CollapsingToolbarLayout$LayoutParams       (com.rubenroy.minimaltodo.eval_xg$h)
===============================================================================
  c    public getCollapseMode()
  e    public setCollapseMode(int)
  h    public setParallaxMultiplier(float)
  l    public getParallaxMultiplier()

android.support.design.widget.CollapsingToolbarLayout$OffsetUpdateListener       (com.rubenroy.minimaltodo.eval_xg$_)
===============================================================================
  p    public onOffsetChanged(android.support.design.widget.AppBarLayout,int)

android.support.design.widget.CoordinatorLayout  (com.rubenroy.minimaltodo.eval_xf)
===============================================================================
  a                                private layoutChild(android.view.View,int)
  b                                private prepareChildren()
  b                                private static resolveKeylineGravity(int)
  c                                dispatchDependentViewRemoved(android.view.View)
  e                                static access$100(android.support.design.widget.CoordinatorLayout)
  e                                static access$000(android.support.design.widget.CoordinatorLayout,android.support.v4.view.WindowInsetsCompat)
  e                                public dispatchDependentViewsChanged(android.view.View)
  eval_d                           private getTopSortedChildren(java.util.List)
  eval_j                           getLastChildRect(android.view.View,android.graphics.Rect)
  eval_t                           public getDependencies(android.view.View)
  eval_y                           public onLayoutChild(android.view.View,int)
  f                                private dispatchChildApplyWindowInsets(android.support.v4.view.WindowInsetsCompat)
  f                                public isPointInChildBounds(android.view.View,int,int)
  g                                public setStatusBarBackground(android.graphics.drawable.Drawable)
  g                                private setWindowInsets(android.support.v4.view.WindowInsetsCompat)
  g                                public setStatusBarBackgroundResource(int)
  generateDefaultLayoutParams      protected generateDefaultLayoutParams()
  generateLayoutParams             public generateLayoutParams(android.util.AttributeSet)
  generateLayoutParams             protected generateLayoutParams(android.view.ViewGroup$LayoutParams)
  h                                private static resolveAnchoredChildGravity(int)
  j                                addPreDrawListener()
  k                                private static resolveGravity(int)
  l                                getDesiredAnchoredChildRect(android.view.View,int,android.graphics.Rect,android.graphics.Rect)
  l                                private getKeyline(int)
  m                                offsetChildToAnchor(android.view.View,int)
  n                                removePreDrawListener()
  n                                public doViewsOverlap(android.view.View,android.view.View)
  n                                private layoutChildWithAnchor(android.view.View,android.view.View,int)
  n                                private static selectionSort(java.util.List,java.util.Comparator)
  o                                public getStatusBarBackground()
  o                                static parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)
  o                                private layoutChildWithKeyline(android.view.View,int,int)
  o                                public setStatusBarBackgroundColor(int)
  r                                ensurePreDrawListener()
  s                                hasDependencies(android.view.View)
  s                                dispatchOnDependentViewChanged(boolean)
  u                                getDescendantRect(android.view.View,android.graphics.Rect)
  u                                getChildRect(android.view.View,boolean,android.graphics.Rect)
  w                                private performIntercept(android.view.MotionEvent,int)
  x                                private resetTouchBehaviors()
  x                                getResolvedLayoutParams(android.view.View)
  x                                recordLastChildRect(android.view.View,android.graphics.Rect)
  x                                public onMeasureChild(android.view.View,int,int,int,int)
  checkLayoutParams                protected checkLayoutParams(android.view.ViewGroup$LayoutParams)
  drawChild                        protected drawChild(android.graphics.Canvas,android.view.View,long)
  generateDefaultLayoutParams      protected volatile generateDefaultLayoutParams()
  generateLayoutParams             public volatile generateLayoutParams(android.util.AttributeSet)
  generateLayoutParams             protected volatile generateLayoutParams(android.view.ViewGroup$LayoutParams)
  getNestedScrollAxes              public getNestedScrollAxes()
  getSuggestedMinimumHeight        protected getSuggestedMinimumHeight()
  getSuggestedMinimumWidth         protected getSuggestedMinimumWidth()
  onAttachedToWindow               public onAttachedToWindow()
  onDetachedFromWindow             public onDetachedFromWindow()
  onDraw                           public onDraw(android.graphics.Canvas)
  onInterceptTouchEvent            public onInterceptTouchEvent(android.view.MotionEvent)
  onLayout                         protected onLayout(boolean,int,int,int,int)
  onMeasure                        protected onMeasure(int,int)
  onNestedFling                    public onNestedFling(android.view.View,float,float,boolean)
  onNestedPreFling                 public onNestedPreFling(android.view.View,float,float)
  onNestedPreScroll                public onNestedPreScroll(android.view.View,int,int,int[])
  onNestedScroll                   public onNestedScroll(android.view.View,int,int,int,int)
  onNestedScrollAccepted           public onNestedScrollAccepted(android.view.View,android.view.View,int)
  onRestoreInstanceState           protected onRestoreInstanceState(android.os.Parcelable)
  onSaveInstanceState              protected onSaveInstanceState()
  onStartNestedScroll              public onStartNestedScroll(android.view.View,android.view.View,int)
  onStopNestedScroll               public onStopNestedScroll(android.view.View)
  onTouchEvent                     public onTouchEvent(android.view.MotionEvent)
  requestDisallowInterceptTouchEvent   public requestDisallowInterceptTouchEvent(boolean)
  setOnHierarchyChangeListener     public setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)

android.support.design.widget.CoordinatorLayout$1        (com.rubenroy.minimaltodo.eval_xf$1)
===============================================================================
  k        public compare(android.view.View,android.view.View)
  compare  public volatile compare(java.lang.Object,java.lang.Object)

android.support.design.widget.CoordinatorLayout$ApplyInsetsListener      (com.rubenroy.minimaltodo.eval_xf$f)
===============================================================================
  h    public onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat)

android.support.design.widget.CoordinatorLayout$Behavior (com.rubenroy.minimaltodo.eval_xf$z)
===============================================================================
  c        public onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)
  d        public onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)
  e        public onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int)
  eval_i   public onApplyWindowInsets(android.support.design.widget.CoordinatorLayout,android.view.View,android.support.v4.view.WindowInsetsCompat)
  eval_k   public final getScrimColor(android.support.design.widget.CoordinatorLayout,android.view.View)
  g        public onDependentViewRemoved(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View)
  i        public final getScrimOpacity(android.support.design.widget.CoordinatorLayout,android.view.View)
  i        public static setTag(android.view.View,java.lang.Object)
  j        public onMeasureChild(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int,int)
  k        public onNestedPreFling(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,float,float)
  k        public onNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int)
  k        public onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int)
  m        public onNestedScrollAccepted(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int)
  n        public onNestedFling(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,float,float,boolean)
  o        public isDirty(android.support.design.widget.CoordinatorLayout,android.view.View)
  r        public onSaveInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View)
  s        public onStopNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View)
  u        public onRestoreInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View,android.os.Parcelable)
  u        public static getTag(android.view.View)
  v        public onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View)
  w        public layoutDependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View)
  x        public blocksInteractionBelow(android.support.design.widget.CoordinatorLayout,android.view.View)
  y        public onNestedPreScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[])

android.support.design.widget.CoordinatorLayout$DefaultBehavior  (com.rubenroy.minimaltodo.eval_xf$n)
===============================================================================
  n    public abstract value()

android.support.design.widget.CoordinatorLayout$HierarchyChangeListener  (com.rubenroy.minimaltodo.eval_xf$_)
===============================================================================
  onChildViewAdded     public onChildViewAdded(android.view.View,android.view.View)
  onChildViewRemoved   public onChildViewRemoved(android.view.View,android.view.View)

android.support.design.widget.CoordinatorLayout$LayoutParams     (com.rubenroy.minimaltodo.eval_xf$eval_i)
===============================================================================
  d        public setAnchorId(int)
  e        invalidateAnchor()
  eval_r   isNestedScrollAccepted()
  eval_x   isBlockingInteractionBelow(android.support.design.widget.CoordinatorLayout,android.view.View)
  f        getChangedAfterNestedScroll()
  g        isDirty(android.support.design.widget.CoordinatorLayout,android.view.View)
  h        dependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View)
  h        private verifyAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout)
  l        resetNestedScroll()
  m        public setBehavior(android.support.design.widget.CoordinatorLayout$Behavior)
  n        public getAnchorId()
  n        findAnchorView(android.support.design.widget.CoordinatorLayout,android.view.View)
  o        public getBehavior()
  p        setChangedAfterNestedScroll(boolean)
  r        resetChangedAfterNestedScroll()
  s        checkAnchorChanged()
  t        resetTouchBehaviorTracking()
  u        getLastChildRect()
  w        private resolveAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout)
  x        didBlockInteraction()
  x        acceptNestedScroll(boolean)
  z        setLastChildRect(android.graphics.Rect)

android.support.design.widget.CoordinatorLayout$OnPreDrawListener        (com.rubenroy.minimaltodo.eval_xf$h)
===============================================================================
  onPreDraw    public onPreDraw()

android.support.design.widget.CoordinatorLayout$ParseException   (com.rubenroy.minimaltodo.eval_q6)
===============================================================================
  No methods

android.support.design.widget.CoordinatorLayout$SavedState       (com.rubenroy.minimaltodo.eval_xf$eval_b)
===============================================================================
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.design.widget.CoordinatorLayout$SavedState$1     (com.rubenroy.minimaltodo.eval_xf$eval_b$1)
===============================================================================
  j    public createFromParcel(android.os.Parcel,java.lang.ClassLoader)
  x    public newArray(int)

android.support.design.widget.CoordinatorLayout$SavedState$IOException   (com.rubenroy.minimaltodo.eval_wq)
===============================================================================
  No methods

android.support.design.widget.CoordinatorLayout$ViewElevationComparator  (com.rubenroy.minimaltodo.eval_xf$u)
===============================================================================
  b        public compare(android.view.View,android.view.View)
  compare  public volatile compare(java.lang.Object,java.lang.Object)

android.support.design.widget.CoordinatorLayoutInsetsHelper      (com.rubenroy.minimaltodo.eval_gx)
===============================================================================
  d    public abstract setupForWindowInsets(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener)

android.support.design.widget.CoordinatorLayoutInsetsHelper$Exception    (com.rubenroy.minimaltodo.eval_se)
===============================================================================
  No methods

android.support.design.widget.CoordinatorLayoutInsetsHelperLollipop      (com.rubenroy.minimaltodo.eval_lo)
===============================================================================
  d    public setupForWindowInsets(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener)

android.support.design.widget.CoordinatorLayoutInsetsHelperLollipop$ParseException       (com.rubenroy.minimaltodo.eval_qq)
===============================================================================
  No methods

android.support.design.widget.FloatingActionButton
===============================================================================
  c                            public show(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener)
  g                            static access$100(android.support.design.widget.FloatingActionButton)
  j                            private wrapOnVisibilityChangedListener(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener)
  k                            final getSizeDimension()
  k                            static access$000(android.support.design.widget.FloatingActionButton)
  m                            private static resolveAdjustedSize(int,int)
  n                            public hide()
  r                            public setRippleColor(int)
  v                            static parseTintMode(int,android.graphics.PorterDuff$Mode)
  x                            public show()
  y                            static access$201(android.support.design.widget.FloatingActionButton,android.graphics.drawable.Drawable)
  z                            public hide(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener)
  drawableStateChanged         protected drawableStateChanged()
  getBackgroundTintList        public getBackgroundTintList()
  getBackgroundTintMode        public getBackgroundTintMode()
  jumpDrawablesToCurrentState  public jumpDrawablesToCurrentState()
  onMeasure                    protected onMeasure(int,int)
  setBackgroundDrawable        public setBackgroundDrawable(android.graphics.drawable.Drawable)
  setBackgroundTintList        public setBackgroundTintList(android.content.res.ColorStateList)
  setBackgroundTintMode        public setBackgroundTintMode(android.graphics.PorterDuff$Mode)

android.support.design.widget.FloatingActionButton$1
===============================================================================
  d    public getRadius()
  r    public setBackgroundDrawable(android.graphics.drawable.Drawable)
  y    public setShadowPadding(int,int,int,int)

android.support.design.widget.FloatingActionButton$2
===============================================================================
  c    public onShown()
  e    public onHidden()

android.support.design.widget.FloatingActionButton$Behavior
===============================================================================
  a    private getFabTranslationYForSnackbar(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton)
  h    public layoutDependsOn(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton,android.view.View)
  h    public onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton,int)
  k    public volatile onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int)
  l    private offsetIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton)
  u    public onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton,android.view.View)
  v    public volatile onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View)
  w    public volatile layoutDependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View)
  x    private updateFabTranslationForSnackbar(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton,android.view.View)
  y    private updateFabVisibility(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.support.design.widget.FloatingActionButton)

android.support.design.widget.FloatingActionButton$NullPointerException  (com.rubenroy.minimaltodo.eval_n1)
===============================================================================
  No methods

android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener   (android.support.design.widget.FloatingActionButton$l)
===============================================================================
  m    public onShown(android.support.design.widget.FloatingActionButton)
  n    public onHidden(android.support.design.widget.FloatingActionButton)

android.support.design.widget.FloatingActionButtonEclairMr1      (com.rubenroy.minimaltodo.eval_n5)
===============================================================================
  a        jumpDrawableToCurrentState()
  b        show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener)
  c        setBackgroundTintMode(android.graphics.PorterDuff$Mode)
  d        static access$400(android.support.design.widget.FloatingActionButtonEclairMr1)
  eval_s   private static mutateDrawable(android.graphics.drawable.Drawable)
  eval_x   private updatePadding()
  j        setBackgroundTintList(android.content.res.ColorStateList)
  j        setElevation(float)
  k        static access$202(android.support.design.widget.FloatingActionButtonEclairMr1,boolean)
  n        private static createColorStateList(int)
  o        setBackgroundDrawable(android.graphics.drawable.Drawable,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int,int)
  o        private setupAnimation(android.view.animation.Animation)
  s        setRippleColor(int)
  t        hide(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener)
  t        setPressedTranslationZ(float)
  v        static access$500(android.support.design.widget.FloatingActionButtonEclairMr1)
  y        onDrawableStateChanged(int[])

android.support.design.widget.FloatingActionButtonEclairMr1$1    (com.rubenroy.minimaltodo.eval_n5$1)
===============================================================================
  onAnimationEnd   public onAnimationEnd(android.view.animation.Animation)
  onAnimationStart public onAnimationStart(android.view.animation.Animation)

android.support.design.widget.FloatingActionButtonEclairMr1$2    (com.rubenroy.minimaltodo.eval_n5$2)
===============================================================================
  onAnimationEnd   public onAnimationEnd(android.view.animation.Animation)

android.support.design.widget.FloatingActionButtonEclairMr1$BaseShadowAnimation  (com.rubenroy.minimaltodo.eval_n5$x)
===============================================================================
  f                    protected abstract getTargetShadowSize()
  applyTransformation  protected applyTransformation(float,android.view.animation.Transformation)
  reset                public reset()

android.support.design.widget.FloatingActionButtonEclairMr1$ElevateToTranslationZAnimation       (com.rubenroy.minimaltodo.eval_n5$n)
===============================================================================
  f    protected getTargetShadowSize()

android.support.design.widget.FloatingActionButtonEclairMr1$Exception    (com.rubenroy.minimaltodo.eval__8)
===============================================================================
  No methods

android.support.design.widget.FloatingActionButtonEclairMr1$ResetElevationAnimation      (com.rubenroy.minimaltodo.eval_n5$eval_u)
===============================================================================
  f    protected getTargetShadowSize()

android.support.design.widget.FloatingActionButtonHoneycombMr1   (com.rubenroy.minimaltodo.eval_s1)
===============================================================================
  b    show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener)
  l    static access$002(android.support.design.widget.FloatingActionButtonHoneycombMr1,boolean)
  t    hide(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener)

android.support.design.widget.FloatingActionButtonHoneycombMr1$1 (com.rubenroy.minimaltodo.eval_s1$1)
===============================================================================
  onAnimationCancel    public onAnimationCancel(android.animation.Animator)
  onAnimationEnd       public onAnimationEnd(android.animation.Animator)
  onAnimationStart     public onAnimationStart(android.animation.Animator)

android.support.design.widget.FloatingActionButtonHoneycombMr1$2 (com.rubenroy.minimaltodo.eval_s1$2)
===============================================================================
  onAnimationEnd   public onAnimationEnd(android.animation.Animator)
  onAnimationStart public onAnimationStart(android.animation.Animator)

android.support.design.widget.FloatingActionButtonHoneycombMr1$ParseException    (com.rubenroy.minimaltodo.eval_no)
===============================================================================
  No methods

android.support.design.widget.FloatingActionButtonImpl   (com.rubenroy.minimaltodo.eval_b3)
===============================================================================
  a    abstract jumpDrawableToCurrentState()
  b    abstract show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener)
  c    abstract setBackgroundTintMode(android.graphics.PorterDuff$Mode)
  i    createBorderDrawable(int,android.content.res.ColorStateList)
  j    abstract setBackgroundTintList(android.content.res.ColorStateList)
  j    abstract setElevation(float)
  o    abstract setBackgroundDrawable(android.graphics.drawable.Drawable,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int,int)
  r    newCircularDrawable()
  s    abstract setRippleColor(int)
  t    abstract hide(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener)
  t    abstract setPressedTranslationZ(float)
  y    abstract onDrawableStateChanged(int[])

android.support.design.widget.FloatingActionButtonImpl$Exception (com.rubenroy.minimaltodo.eval_v2)
===============================================================================
  No methods

android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener (com.rubenroy.minimaltodo.eval_b3$c)
===============================================================================
  c    public abstract onShown()
  e    public abstract onHidden()

android.support.design.widget.FloatingActionButtonLollipop       (com.rubenroy.minimaltodo.eval_ph)
===============================================================================
  a    jumpDrawableToCurrentState()
  c    setBackgroundTintMode(android.graphics.PorterDuff$Mode)
  f    private setupAnimator(android.animation.Animator)
  j    setBackgroundTintList(android.content.res.ColorStateList)
  j    public setElevation(float)
  o    setBackgroundDrawable(android.graphics.drawable.Drawable,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int,int)
  r    newCircularDrawable()
  s    setRippleColor(int)
  t    setPressedTranslationZ(float)
  y    onDrawableStateChanged(int[])

android.support.design.widget.FloatingActionButtonLollipop$IOException   (com.rubenroy.minimaltodo.eval_s_)
===============================================================================
  No methods

android.support.design.widget.HeaderBehavior
===============================================================================
  c    public onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)
  d    public onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)
  d    setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int)
  h    getMaxDragOffset(android.view.View)
  i    final scroll(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int)
  k    getTopBottomOffsetForScrollingSibling()
  k    final fling(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,float)
  l    setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.view.View,int)
  l    canDragView(android.view.View)
  o    static access$000(android.support.design.widget.HeaderBehavior)
  y    getScrollRangeForDragFling(android.view.View)
  z    private ensureVelocityTracker()

android.support.design.widget.HeaderBehavior$Exception   (com.rubenroy.minimaltodo.eval_f2)
===============================================================================
  No methods

android.support.design.widget.HeaderBehavior$FlingRunnable       (android.support.design.widget.HeaderBehavior$b)
===============================================================================
  run  public run()

android.support.design.widget.HeaderScrollingViewBehavior
===============================================================================
  j    public onMeasureChild(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int,int)
  j    abstract findFirstDependency(java.util.List)
  y    getScrollRange(android.view.View)

android.support.design.widget.HeaderScrollingViewBehavior$ParseException (com.rubenroy.minimaltodo.eval_su)
===============================================================================
  No methods

android.support.design.widget.MathUtils  (com.rubenroy.minimaltodo.eval_yu)
===============================================================================
  c    static constrain(int,int,int)
  z    static constrain(float,float,float)

android.support.design.widget.MathUtils$Exception        (com.rubenroy.minimaltodo.eval_e8)
===============================================================================
  No methods

android.support.design.widget.NavigationView     (com.rubenroy.minimaltodo.eval_pz)
===============================================================================
  a                        public setCheckedItem(int)
  d                        public getMenu()
  eval_f                   public setItemBackgroundResource(int)
  g                        static access$000(android.support.design.widget.NavigationView)
  g                        private createDefaultColorStateList(int)
  j                        public setNavigationItemSelectedListener(android.support.design.widget.NavigationView$OnNavigationItemSelectedListener)
  m                        public addHeaderView(android.view.View)
  o                        public getItemBackground()
  p                        private getMenuInflater()
  p                        public removeHeaderView(android.view.View)
  q                        public setItemBackground(android.graphics.drawable.Drawable)
  q                        public inflateMenu(int)
  t                        public getItemTextColor()
  u                        public setItemIconTintList(android.content.res.ColorStateList)
  v                        public getItemIconTintList()
  v                        public inflateHeaderView(int)
  x                        public setItemTextAppearance(int)
  y                        public setItemTextColor(android.content.res.ColorStateList)
  onMeasure                protected onMeasure(int,int)
  onRestoreInstanceState   protected onRestoreInstanceState(android.os.Parcelable)
  onSaveInstanceState      protected onSaveInstanceState()

android.support.design.widget.NavigationView$1   (com.rubenroy.minimaltodo.eval_pz$1)
===============================================================================
  c    public onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder)
  k    public onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem)

android.support.design.widget.NavigationView$Exception   (com.rubenroy.minimaltodo.eval_sb)
===============================================================================
  No methods

android.support.design.widget.NavigationView$OnNavigationItemSelectedListener    (com.rubenroy.minimaltodo.eval_pz$m)
===============================================================================
  eval_i   public abstract onNavigationItemSelected(android.view.MenuItem)

android.support.design.widget.NavigationView$SavedState  (com.rubenroy.minimaltodo.eval_pz$eval_a)
===============================================================================
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.design.widget.NavigationView$SavedState$1        (com.rubenroy.minimaltodo.eval_pz$eval_a$1)
===============================================================================
  j    public createFromParcel(android.os.Parcel,java.lang.ClassLoader)
  x    public newArray(int)

android.support.design.widget.NavigationView$SavedState$NullPointerException     (com.rubenroy.minimaltodo.eval_y3)
===============================================================================
  No methods

android.support.design.widget.ShadowDrawableWrapper      (com.rubenroy.minimaltodo.eval_bp)
===============================================================================
  b                public setShadowSize(float)
  e                public getShadowSize()
  f                private drawShadow(android.graphics.Canvas)
  m                public getMinWidth()
  o                public static calculateVerticalPadding(float,float,boolean)
  q                private buildShadowCorners()
  q                public setMaxShadowSize(float)
  q                public static calculateHorizontalPadding(float,float,boolean)
  s                public getMaxShadowSize()
  t                public getCornerRadius()
  t                public setAddPaddingForCorners(boolean)
  v                public getMinHeight()
  v                private buildComponents(android.graphics.Rect)
  x                setShadowSize(float,float)
  y                public setCornerRadius(float)
  z                private static toEven(float)
  draw             public draw(android.graphics.Canvas)
  getOpacity       public getOpacity()
  getPadding       public getPadding(android.graphics.Rect)
  onBoundsChange   protected onBoundsChange(android.graphics.Rect)
  setAlpha         public setAlpha(int)

android.support.design.widget.ShadowDrawableWrapper$ArrayOutOfBoundsException    (com.rubenroy.minimaltodo.eval_jd)
===============================================================================
  No methods

android.support.design.widget.ShadowViewDelegate (com.rubenroy.minimaltodo.eval_sm)
===============================================================================
  d    public abstract getRadius()
  r    public abstract setBackgroundDrawable(android.graphics.drawable.Drawable)
  y    public abstract setShadowPadding(int,int,int,int)

android.support.design.widget.ShadowViewDelegate$IOException     (com.rubenroy.minimaltodo.eval_uu)
===============================================================================
  No methods

android.support.design.widget.Snackbar
===============================================================================
  a        public show()
  a        public static make(android.view.View,int,int)
  a        public setText(int)
  c        static access$500(android.support.design.widget.Snackbar)
  c        private animateViewOut(int)
  eval_t   static access$100()
  f        final hideView(int)
  g        public isShownOrQueued()
  g        static access$200(android.support.design.widget.Snackbar)
  h        private dispatchDismiss(int)
  i        final showView()
  j        private onViewHidden(int)
  k        static access$300(android.support.design.widget.Snackbar,int)
  k        public setDuration(int)
  m        public isShown()
  m        public setCallback(android.support.design.widget.Snackbar$Callback)
  m        private static findSuitableParent(android.view.View)
  m        public static make(android.view.View,java.lang.CharSequence,int)
  n        static access$600(android.support.design.widget.Snackbar)
  o        public dismiss()
  p        public getDuration()
  p        public setAction(int,android.view.View$OnClickListener)
  p        public setAction(java.lang.CharSequence,android.view.View$OnClickListener)
  q        static access$000(android.support.design.widget.Snackbar,int)
  q        public setActionTextColor(int)
  v        public getView()
  w        static access$400(android.support.design.widget.Snackbar)
  x        private animateViewIn()
  x        public setActionTextColor(android.content.res.ColorStateList)
  y        private isBeingDragged()
  y        public setText(java.lang.CharSequence)

android.support.design.widget.Snackbar$1
===============================================================================
  handleMessage    public handleMessage(android.os.Message)

android.support.design.widget.Snackbar$10
===============================================================================
  onAnimationEnd       public onAnimationEnd(android.view.animation.Animation)
  onAnimationRepeat    public onAnimationRepeat(android.view.animation.Animation)
  onAnimationStart     public onAnimationStart(android.view.animation.Animation)

android.support.design.widget.Snackbar$2
===============================================================================
  onClick  public onClick(android.view.View)

android.support.design.widget.Snackbar$3
===============================================================================
  d        public dismiss(int)
  eval_k   public show()

android.support.design.widget.Snackbar$4
===============================================================================
  m    public onDismiss(android.view.View)
  o    public onDragStateChanged(int)

android.support.design.widget.Snackbar$5
===============================================================================
  i    public onViewAttachedToWindow(android.view.View)
  r    public onViewDetachedFromWindow(android.view.View)

android.support.design.widget.Snackbar$5$1
===============================================================================
  run  public run()

android.support.design.widget.Snackbar$5$NullPointerException    (com.rubenroy.minimaltodo.eval_na)
===============================================================================
  No methods

android.support.design.widget.Snackbar$6
===============================================================================
  b    public onLayoutChange(android.view.View,int,int,int,int)

android.support.design.widget.Snackbar$7
===============================================================================
  d    public onAnimationStart(android.view.View)
  v    public onAnimationEnd(android.view.View)

android.support.design.widget.Snackbar$8
===============================================================================
  onAnimationEnd       public onAnimationEnd(android.view.animation.Animation)
  onAnimationRepeat    public onAnimationRepeat(android.view.animation.Animation)
  onAnimationStart     public onAnimationStart(android.view.animation.Animation)

android.support.design.widget.Snackbar$9
===============================================================================
  d    public onAnimationStart(android.view.View)
  v    public onAnimationEnd(android.view.View)

android.support.design.widget.Snackbar$Behavior
===============================================================================
  a    public onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.support.design.widget.Snackbar$SnackbarLayout,android.view.MotionEvent)
  c    public volatile onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)

android.support.design.widget.Snackbar$Callback  (android.support.design.widget.Snackbar$_)
===============================================================================
  f    public onShown(android.support.design.widget.Snackbar)
  s    public onDismissed(android.support.design.widget.Snackbar,int)

android.support.design.widget.Snackbar$Callback$DismissEvent     (android.support.design.widget.Snackbar$_$d)
===============================================================================
  No methods

android.support.design.widget.Snackbar$Callback$ParseException   (com.rubenroy.minimaltodo.eval_gb)
===============================================================================
  No methods

android.support.design.widget.Snackbar$Duration  (android.support.design.widget.Snackbar$x)
===============================================================================
  No methods

android.support.design.widget.Snackbar$IOException       (com.rubenroy.minimaltodo.eval_sr)
===============================================================================
  No methods

android.support.design.widget.Snackbar$SnackbarLayout    (android.support.design.widget.Snackbar$i)
===============================================================================
  c                    animateChildrenIn(int,int)
  eval_t               setOnAttachStateChangeListener(android.support.design.widget.Snackbar$SnackbarLayout$OnAttachStateChangeListener)
  n                    setOnLayoutChangeListener(android.support.design.widget.Snackbar$SnackbarLayout$OnLayoutChangeListener)
  n                    private updateViewsWithinLayout(int,int,int)
  t                    getMessageView()
  t                    animateChildrenOut(int,int)
  u                    private static updateTopBottomPadding(android.view.View,int,int)
  w                    getActionView()
  onAttachedToWindow   protected onAttachedToWindow()
  onDetachedFromWindow protected onDetachedFromWindow()
  onFinishInflate      protected onFinishInflate()
  onLayout             protected onLayout(boolean,int,int,int,int)
  onMeasure            protected onMeasure(int,int)

android.support.design.widget.Snackbar$SnackbarLayout$IOException        (com.rubenroy.minimaltodo.eval_kq)
===============================================================================
  No methods

android.support.design.widget.Snackbar$SnackbarLayout$OnAttachStateChangeListener        (android.support.design.widget.Snackbar$i$w)
===============================================================================
  i    public abstract onViewAttachedToWindow(android.view.View)
  r    public abstract onViewDetachedFromWindow(android.view.View)

android.support.design.widget.Snackbar$SnackbarLayout$OnLayoutChangeListener     (android.support.design.widget.Snackbar$i$y)
===============================================================================
  b    public abstract onLayoutChange(android.view.View,int,int,int,int)

android.support.design.widget.SnackbarManager    (com.rubenroy.minimaltodo.eval_bo)
===============================================================================
  e    public isCurrent(android.support.design.widget.SnackbarManager$Callback)
  e    private handleTimeout(android.support.design.widget.SnackbarManager$SnackbarRecord)
  j    public cancelTimeout(android.support.design.widget.SnackbarManager$Callback)
  l    static getInstance()
  l    private isCurrentSnackbarLocked(android.support.design.widget.SnackbarManager$Callback)
  m    public onShown(android.support.design.widget.SnackbarManager$Callback)
  m    static access$000(android.support.design.widget.SnackbarManager,android.support.design.widget.SnackbarManager$SnackbarRecord)
  o    public restoreTimeout(android.support.design.widget.SnackbarManager$Callback)
  p    public onDismissed(android.support.design.widget.SnackbarManager$Callback)
  p    public show(int,android.support.design.widget.SnackbarManager$Callback)
  q    public isCurrentOrNext(android.support.design.widget.SnackbarManager$Callback)
  r    public dismiss(android.support.design.widget.SnackbarManager$Callback,int)
  u    private showNextSnackbarLocked()
  w    private cancelSnackbarLocked(android.support.design.widget.SnackbarManager$SnackbarRecord,int)
  y    private isNextSnackbarLocked(android.support.design.widget.SnackbarManager$Callback)
  y    private scheduleTimeoutLocked(android.support.design.widget.SnackbarManager$SnackbarRecord)

android.support.design.widget.SnackbarManager$1  (com.rubenroy.minimaltodo.eval_bo$1)
===============================================================================
  handleMessage    public handleMessage(android.os.Message)

android.support.design.widget.SnackbarManager$Callback   (com.rubenroy.minimaltodo.eval_bo$r)
===============================================================================
  d        public abstract dismiss(int)
  eval_k   public abstract show()

android.support.design.widget.SnackbarManager$NullPointerException       (com.rubenroy.minimaltodo.eval_vw)
===============================================================================
  No methods

android.support.design.widget.SnackbarManager$SnackbarRecord     (com.rubenroy.minimaltodo.eval_bo$p)
===============================================================================
  b    static access$100(android.support.design.widget.SnackbarManager$SnackbarRecord)
  d    static access$102(android.support.design.widget.SnackbarManager$SnackbarRecord,int)
  e    static access$200(android.support.design.widget.SnackbarManager$SnackbarRecord)
  o    isSnackbar(android.support.design.widget.SnackbarManager$Callback)

android.support.design.widget.StateListAnimator  (com.rubenroy.minimaltodo.eval_a7)
===============================================================================
  a        getTuples()
  c        setState(int[])
  e        setTarget(android.view.View)
  eval_k   getTarget()
  eval_s   public jumpToCurrentState()
  o        private cancel()
  p        static access$000(android.support.design.widget.StateListAnimator)
  u        private clearTarget()
  u        private start(android.support.design.widget.StateListAnimator$Tuple)
  u        public addState(int[],android.view.animation.Animation)
  x        getRunningAnimation()
  z        static access$002(android.support.design.widget.StateListAnimator,android.view.animation.Animation)

android.support.design.widget.StateListAnimator$1        (com.rubenroy.minimaltodo.eval_a7$1)
===============================================================================
  onAnimationEnd       public onAnimationEnd(android.view.animation.Animation)
  onAnimationRepeat    public onAnimationRepeat(android.view.animation.Animation)
  onAnimationStart     public onAnimationStart(android.view.animation.Animation)

android.support.design.widget.StateListAnimator$ParseException   (com.rubenroy.minimaltodo.eval_ss)
===============================================================================
  No methods

android.support.design.widget.StateListAnimator$Tuple    (com.rubenroy.minimaltodo.eval_a7$v)
===============================================================================
  r    getAnimation()
  u    getSpecs()

android.support.design.widget.SwipeDismissBehavior
===============================================================================
  a        private static clamp(float,float,float)
  c        public onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)
  d        public onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)
  eval_c   static access$500(android.support.design.widget.SwipeDismissBehavior)
  eval_h   static access$600(android.support.design.widget.SwipeDismissBehavior)
  eval_m   public setEndAlphaSwipeDistance(float)
  g        static access$000(android.support.design.widget.SwipeDismissBehavior)
  g        public setSwipeDirection(int)
  i        public getDragState()
  l        public setSensitivity(float)
  m        static access$400(int,int,int)
  p        public setStartAlphaSwipeDistance(float)
  s        static access$100(android.support.design.widget.SwipeDismissBehavior)
  s        private ensureViewDragHelper(android.view.ViewGroup)
  t        static access$300(android.support.design.widget.SwipeDismissBehavior)
  t        public setDragDismissDistance(float)
  v        static fraction(float,float,float)
  w        static access$200(android.support.design.widget.SwipeDismissBehavior)
  w        public setListener(android.support.design.widget.SwipeDismissBehavior$OnDismissListener)
  y        private static clamp(int,int,int)
  z        static access$700(float,float,float)

android.support.design.widget.SwipeDismissBehavior$1
===============================================================================
  d    public clampViewPositionVertical(android.view.View,int,int)
  j    public getViewHorizontalDragRange(android.view.View)
  q    public onViewDragStateChanged(int)
  t    public onViewReleased(android.view.View,float,float)
  v    public onViewPositionChanged(android.view.View,int,int,int,int)
  w    public tryCaptureView(android.view.View,int)
  x    private shouldDismiss(android.view.View,float)
  x    public clampViewPositionHorizontal(android.view.View,int,int)

android.support.design.widget.SwipeDismissBehavior$NullPointerException  (com.rubenroy.minimaltodo.eval_cq)
===============================================================================
  No methods

android.support.design.widget.SwipeDismissBehavior$OnDismissListener     (android.support.design.widget.SwipeDismissBehavior$d)
===============================================================================
  m    public abstract onDismiss(android.view.View)
  o    public abstract onDragStateChanged(int)

android.support.design.widget.SwipeDismissBehavior$SettleRunnable        (android.support.design.widget.SwipeDismissBehavior$i)
===============================================================================
  run  public run()

android.support.design.widget.TabLayout  (com.rubenroy.minimaltodo.eval_ye)
===============================================================================
  a            static access$200(android.support.design.widget.TabLayout)
  a            selectTab(android.support.design.widget.TabLayout$Tab,boolean)
  a            private calculateScrollXForTab(int,float)
  b            public getTabMode()
  b            private removeTabViewAt(int)
  c            static access$1100(android.support.design.widget.TabLayout)
  c            public addTab(android.support.design.widget.TabLayout$Tab)
  c            public getTabAt(int)
  d            static access$1000(android.support.design.widget.TabLayout)
  d            private configureTab(android.support.design.widget.TabLayout$Tab,int)
  e            private applyModeAndGravity()
  eval_a       static access$1500(android.support.design.widget.TabLayout)
  eval_f       private createLayoutParamsForTabs()
  eval_i       public setTabGravity(int)
  eval_j       static access$500(android.support.design.widget.TabLayout)
  eval_l       private getScrollPosition()
  eval_r       private animateToTab(int)
  eval_u       public getTabGravity()
  eval_y       private getDefaultHeight()
  eval_z       selectTab(android.support.design.widget.TabLayout$Tab)
  f            private createTabView(android.support.design.widget.TabLayout$Tab)
  g            public newTab()
  g            public removeTab(android.support.design.widget.TabLayout$Tab)
  h            private getTabMinWidth()
  h            static access$1502(android.support.design.widget.TabLayout,int)
  h            private dpToPx(int)
  i            public setScrollPosition(int,float,boolean)
  j            static access$300(android.support.design.widget.TabLayout)
  j            public setTabTextColors(int,int)
  k            private setSelectedTabView(int)
  l            public getSelectedTabPosition()
  l            static access$600(android.support.design.widget.TabLayout)
  l            public addTab(android.support.design.widget.TabLayout$Tab,boolean)
  m            static access$1200(android.support.design.widget.TabLayout)
  m            private addTabView(android.support.design.widget.TabLayout$Tab,int,boolean)
  n            private getTabMaxWidth()
  n            public setTabsFromPagerAdapter(android.support.v4.view.PagerAdapter)
  o            private updateTabViews(boolean)
  o            public setSelectedTabIndicatorColor(int)
  o            private static createColorStateList(int,int)
  p            static access$1300(android.support.design.widget.TabLayout)
  p            public removeTabAt(int)
  q            private updateAllTabs()
  r            public setTabTextColors(android.content.res.ColorStateList)
  r            public addTab(android.support.design.widget.TabLayout$Tab,int)
  r            private updateTab(int)
  s            static access$1400(android.support.design.widget.TabLayout,int)
  t            public setSelectedTabIndicatorHeight(int)
  u            public getTabTextColors()
  u            static access$400(android.support.design.widget.TabLayout)
  u            public setOnTabSelectedListener(android.support.design.widget.TabLayout$OnTabSelectedListener)
  u            private updateTabViewLayoutParams(android.widget.LinearLayout$LayoutParams)
  v            public getTabCount()
  v            static access$1702(android.support.design.widget.TabLayout,android.support.design.widget.ValueAnimatorCompat)
  v            static access$1600(android.support.design.widget.TabLayout,boolean)
  w            public addTab(android.support.design.widget.TabLayout$Tab,int,boolean)
  x            static access$800(android.support.design.widget.TabLayout)
  x            private addTabView(android.support.design.widget.TabLayout$Tab,boolean)
  y            public removeAllTabs()
  y            static access$900(android.support.design.widget.TabLayout)
  y            static access$100(android.support.design.widget.TabLayout,int)
  y            public setupWithViewPager(android.support.v4.view.ViewPager)
  y            public setTabMode(int)
  z            static access$700(android.support.design.widget.TabLayout)
  onMeasure    protected onMeasure(int,int)

android.support.design.widget.TabLayout$1        (com.rubenroy.minimaltodo.eval_ye$1)
===============================================================================
  onClick  public onClick(android.view.View)

android.support.design.widget.TabLayout$2        (com.rubenroy.minimaltodo.eval_ye$2)
===============================================================================
  a    public onAnimationUpdate(android.support.design.widget.ValueAnimatorCompat)

android.support.design.widget.TabLayout$Exception        (com.rubenroy.minimaltodo.eval_xo)
===============================================================================
  No methods

android.support.design.widget.TabLayout$Mode     (com.rubenroy.minimaltodo.eval_ye$_)
===============================================================================
  No methods

android.support.design.widget.TabLayout$OnTabSelectedListener    (com.rubenroy.minimaltodo.eval_ye$f)
===============================================================================
  c    public abstract onTabUnselected(android.support.design.widget.TabLayout$Tab)
  n    public abstract onTabSelected(android.support.design.widget.TabLayout$Tab)
  y    public abstract onTabReselected(android.support.design.widget.TabLayout$Tab)

android.support.design.widget.TabLayout$SlidingTabStrip  (com.rubenroy.minimaltodo.eval_ye$d)
===============================================================================
  b            childrenNeedLayout()
  eval_x       getIndicatorPosition()
  g            setSelectedIndicatorColor(int)
  h            static access$1800(android.support.design.widget.TabLayout$SlidingTabStrip,int,int)
  h            setSelectedIndicatorHeight(int)
  j            static access$1902(android.support.design.widget.TabLayout$SlidingTabStrip,int)
  o            setIndicatorPositionFromTabPosition(int,float)
  q            animateIndicatorToPosition(int,int)
  t            private setIndicatorPosition(int,int)
  y            private updateIndicatorPosition()
  z            static access$2002(android.support.design.widget.TabLayout$SlidingTabStrip,float)
  draw         public draw(android.graphics.Canvas)
  onLayout     protected onLayout(boolean,int,int,int,int)
  onMeasure    protected onMeasure(int,int)

android.support.design.widget.TabLayout$SlidingTabStrip$1        (com.rubenroy.minimaltodo.eval_ye$d$1)
===============================================================================
  a    public onAnimationUpdate(android.support.design.widget.ValueAnimatorCompat)

android.support.design.widget.TabLayout$SlidingTabStrip$2        (com.rubenroy.minimaltodo.eval_ye$d$2)
===============================================================================
  d    public onAnimationCancel(android.support.design.widget.ValueAnimatorCompat)
  w    public onAnimationEnd(android.support.design.widget.ValueAnimatorCompat)

android.support.design.widget.TabLayout$SlidingTabStrip$NullPointerException     (com.rubenroy.minimaltodo.eval_j4)
===============================================================================
  No methods

android.support.design.widget.TabLayout$Tab      (com.rubenroy.minimaltodo.eval_ye$p)
===============================================================================
  e        setPosition(int)
  eval_e   public getPosition()
  eval_z   public setContentDescription(int)
  f        public getText()
  f        public setIcon(android.graphics.drawable.Drawable)
  i        public getIcon()
  i        public setCustomView(android.view.View)
  k        public isSelected()
  k        static access$000(android.support.design.widget.TabLayout$Tab)
  l        public getTag()
  m        public getContentDescription()
  m        public setText(java.lang.CharSequence)
  n        public setIcon(int)
  r        public select()
  r        public setText(int)
  r        public setContentDescription(java.lang.CharSequence)
  u        public getCustomView()
  z        public setCustomView(int)
  z        public setTag(java.lang.Object)

android.support.design.widget.TabLayout$TabGravity       (com.rubenroy.minimaltodo.eval_ye$m)
===============================================================================
  No methods

android.support.design.widget.TabLayout$TabLayoutOnPageChangeListener    (com.rubenroy.minimaltodo.eval_ye$a)
===============================================================================
  f    public onPageSelected(int)
  f    public onPageScrolled(int,float,int)
  v    public onPageScrollStateChanged(int)

android.support.design.widget.TabLayout$TabView  (com.rubenroy.minimaltodo.eval_ye$v)
===============================================================================
  a                                private updateTextAndIcon(android.support.design.widget.TabLayout$Tab,android.widget.TextView,android.widget.ImageView)
  eval_k                           public getTab()
  n                                final update()
  r                                private approximateLineWidth(android.text.Layout,int,float)
  onInitializeAccessibilityEvent   public onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
  onInitializeAccessibilityNodeInfo    public onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
  onLongClick                      public onLongClick(android.view.View)
  onMeasure                        public onMeasure(int,int)
  setSelected                      public setSelected(boolean)

android.support.design.widget.TabLayout$ViewPagerOnTabSelectedListener   (com.rubenroy.minimaltodo.eval_ye$eval_u)
===============================================================================
  c    public onTabUnselected(android.support.design.widget.TabLayout$Tab)
  n    public onTabSelected(android.support.design.widget.TabLayout$Tab)
  y    public onTabReselected(android.support.design.widget.TabLayout$Tab)

android.support.design.widget.TextInputLayout    (com.rubenroy.minimaltodo.eval_mi)
===============================================================================
  a                    static access$400(android.support.design.widget.TextInputLayout)
  e                    public setErrorEnabled(boolean)
  eval_r               private updateCounter(int)
  f                    public setTypeface(android.graphics.Typeface)
  f                    static access$200(android.support.design.widget.TextInputLayout)
  g                    private adjustIndicatorPadding()
  h                    public getEditText()
  h                    private static arrayContains(int[],int)
  i                    private updateEditTextMargin(android.view.ViewGroup$LayoutParams)
  i                    public setHintTextAppearance(int)
  j                    public getCounterMaxLength()
  k                    static access$500(android.support.design.widget.TextInputLayout)
  k                    private updateLabelVisibility(boolean)
  l                    public getError()
  l                    public setCounterEnabled(boolean)
  m                    static access$300(android.support.design.widget.TextInputLayout,int)
  m                    private setEditText(android.widget.EditText)
  m                    public setError(java.lang.CharSequence)
  n                    public setCounterMaxLength(int)
  p                    private expandHint(boolean)
  q                    static access$600(android.support.design.widget.TextInputLayout)
  s                    private updateEditTextBackground()
  s                    private collapseHint(boolean)
  s                    private getThemeAttrColor(int)
  t                    public getTypeface()
  u                    static access$100(android.support.design.widget.TextInputLayout,boolean)
  u                    private animateToExpansionFraction(float)
  v                    public isHintAnimationEnabled()
  v                    private addIndicator(android.widget.TextView,int,android.widget.LinearLayout$LayoutParams)
  w                    private removeIndicator(android.widget.TextView)
  w                    public setHintAnimationEnabled(boolean)
  x                    public getHint()
  y                    public isErrorEnabled()
  z                    public setHint(java.lang.CharSequence)
  addView              public addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
  draw                 public draw(android.graphics.Canvas)
  onLayout             protected onLayout(boolean,int,int,int,int)
  refreshDrawableState public refreshDrawableState()

android.support.design.widget.TextInputLayout$1  (com.rubenroy.minimaltodo.eval_mi$1)
===============================================================================
  afterTextChanged     public afterTextChanged(android.text.Editable)
  beforeTextChanged    public beforeTextChanged(java.lang.CharSequence,int,int,int)
  onTextChanged        public onTextChanged(java.lang.CharSequence,int,int,int)

android.support.design.widget.TextInputLayout$2  (com.rubenroy.minimaltodo.eval_mi$2)
===============================================================================
  d    public onAnimationStart(android.view.View)

android.support.design.widget.TextInputLayout$3  (com.rubenroy.minimaltodo.eval_mi$3)
===============================================================================
  v    public onAnimationEnd(android.view.View)

android.support.design.widget.TextInputLayout$4  (com.rubenroy.minimaltodo.eval_mi$4)
===============================================================================
  a    public onAnimationUpdate(android.support.design.widget.ValueAnimatorCompat)

android.support.design.widget.TextInputLayout$NullPointerException       (com.rubenroy.minimaltodo.eval_ee)
===============================================================================
  No methods

android.support.design.widget.TextInputLayout$TextInputAccessibilityDelegate     (com.rubenroy.minimaltodo.eval_mi$i)
===============================================================================
  d    public onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  y    public onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  z    public onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)

android.support.design.widget.ThemeUtils (com.rubenroy.minimaltodo.eval_rm)
===============================================================================
  c    static checkAppCompatTheme(android.content.Context)

android.support.design.widget.ThemeUtils$NullPointerException    (com.rubenroy.minimaltodo.eval_sn)
===============================================================================
  No methods

android.support.design.widget.ValueAnimatorCompat        (com.rubenroy.minimaltodo.eval_ue)
===============================================================================
  c    public end()
  i    public setListener(android.support.design.widget.ValueAnimatorCompat$AnimatorListener)
  j    public setUpdateListener(android.support.design.widget.ValueAnimatorCompat$AnimatorUpdateListener)
  m    public setDuration(int)
  n    public isRunning()
  o    public getAnimatedFloatValue()
  q    public start()
  r    public getAnimatedIntValue()
  r    public setInterpolator(android.view.animation.Interpolator)
  r    public setFloatValues(float,float)
  s    public getDuration()
  t    public setIntValues(int,int)
  w    public getAnimatedFraction()
  x    public cancel()

android.support.design.widget.ValueAnimatorCompat$1      (com.rubenroy.minimaltodo.eval_ue$1)
===============================================================================
  u    public onAnimationUpdate()

android.support.design.widget.ValueAnimatorCompat$2      (com.rubenroy.minimaltodo.eval_ue$2)
===============================================================================
  a    public onAnimationEnd()
  o    public onAnimationStart()
  t    public onAnimationCancel()

android.support.design.widget.ValueAnimatorCompat$AnimatorListener       (com.rubenroy.minimaltodo.eval_ue$n)
===============================================================================
  d    public abstract onAnimationCancel(android.support.design.widget.ValueAnimatorCompat)
  f    public abstract onAnimationStart(android.support.design.widget.ValueAnimatorCompat)
  w    public abstract onAnimationEnd(android.support.design.widget.ValueAnimatorCompat)

android.support.design.widget.ValueAnimatorCompat$AnimatorListenerAdapter        (com.rubenroy.minimaltodo.eval_ue$l)
===============================================================================
  d    public onAnimationCancel(android.support.design.widget.ValueAnimatorCompat)
  f    public onAnimationStart(android.support.design.widget.ValueAnimatorCompat)
  w    public onAnimationEnd(android.support.design.widget.ValueAnimatorCompat)

android.support.design.widget.ValueAnimatorCompat$AnimatorUpdateListener (com.rubenroy.minimaltodo.eval_ue$y)
===============================================================================
  a    public abstract onAnimationUpdate(android.support.design.widget.ValueAnimatorCompat)

android.support.design.widget.ValueAnimatorCompat$Creator        (com.rubenroy.minimaltodo.eval_ue$a)
===============================================================================
  w    public abstract createAnimator()

android.support.design.widget.ValueAnimatorCompat$Exception      (com.rubenroy.minimaltodo.eval__i)
===============================================================================
  No methods

android.support.design.widget.ValueAnimatorCompat$Impl   (com.rubenroy.minimaltodo.eval_ue$f)
===============================================================================
  c        abstract isRunning()
  e        abstract setInterpolator(android.view.animation.Interpolator)
  eval_e   abstract end()
  eval_n   abstract setIntValues(int,int)
  f        abstract cancel()
  f        abstract setDuration(int)
  g        abstract getDuration()
  j        abstract getAnimatedFloatValue()
  j        abstract setUpdateListener(android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorUpdateListenerProxy)
  m        abstract getAnimatedFraction()
  p        abstract setFloatValues(float,float)
  q        abstract setListener(android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorListenerProxy)
  y        abstract getAnimatedIntValue()
  z        abstract start()

android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorListenerProxy     (com.rubenroy.minimaltodo.eval_ue$f$y)
===============================================================================
  a    public abstract onAnimationEnd()
  o    public abstract onAnimationStart()
  t    public abstract onAnimationCancel()

android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorUpdateListenerProxy       (com.rubenroy.minimaltodo.eval_ue$f$u)
===============================================================================
  u    public abstract onAnimationUpdate()

android.support.design.widget.ValueAnimatorCompat$Impl$Exception (com.rubenroy.minimaltodo.eval_p8)
===============================================================================
  No methods

android.support.design.widget.ValueAnimatorCompatImplEclairMr1   (com.rubenroy.minimaltodo.eval_bq)
===============================================================================
  c        public isRunning()
  e        public setInterpolator(android.view.animation.Interpolator)
  eval_e   public end()
  eval_n   public setIntValues(int,int)
  f        public cancel()
  f        public setDuration(int)
  g        public getDuration()
  j        public getAnimatedFloatValue()
  j        public setUpdateListener(android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorUpdateListenerProxy)
  j        static access$000(android.support.design.widget.ValueAnimatorCompatImplEclairMr1)
  m        public getAnimatedFraction()
  p        public setFloatValues(float,float)
  q        public setListener(android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorListenerProxy)
  t        private update()
  y        public getAnimatedIntValue()
  z        public start()

android.support.design.widget.ValueAnimatorCompatImplEclairMr1$1 (com.rubenroy.minimaltodo.eval_bq$1)
===============================================================================
  run  public run()

android.support.design.widget.ValueAnimatorCompatImplEclairMr1$ParseException    (com.rubenroy.minimaltodo.eval_p0)
===============================================================================
  No methods

android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1        (com.rubenroy.minimaltodo.eval_gg)
===============================================================================
  c        public isRunning()
  e        public setInterpolator(android.view.animation.Interpolator)
  eval_e   public end()
  eval_n   public setIntValues(int,int)
  f        public cancel()
  f        public setDuration(int)
  g        public getDuration()
  j        public getAnimatedFloatValue()
  j        public setUpdateListener(android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorUpdateListenerProxy)
  m        public getAnimatedFraction()
  p        public setFloatValues(float,float)
  q        public setListener(android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorListenerProxy)
  y        public getAnimatedIntValue()
  z        public start()

android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1$1      (com.rubenroy.minimaltodo.eval_gg$1)
===============================================================================
  onAnimationUpdate    public onAnimationUpdate(android.animation.ValueAnimator)

android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1$2      (com.rubenroy.minimaltodo.eval_gg$2)
===============================================================================
  onAnimationCancel    public onAnimationCancel(android.animation.Animator)
  onAnimationEnd       public onAnimationEnd(android.animation.Animator)
  onAnimationStart     public onAnimationStart(android.animation.Animator)

android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1$NullPointerException   (com.rubenroy.minimaltodo.eval_k3)
===============================================================================
  No methods

android.support.design.widget.ViewGroupUtils     (com.rubenroy.minimaltodo.eval_fz)
===============================================================================
  a    static offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect)
  e    static getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect)

android.support.design.widget.ViewGroupUtils$1   (com.rubenroy.minimaltodo.eval_fz$1)
===============================================================================
  No methods

android.support.design.widget.ViewGroupUtils$Exception   (com.rubenroy.minimaltodo.eval_ip)
===============================================================================
  No methods

android.support.design.widget.ViewGroupUtils$ViewGroupUtilsImpl  (com.rubenroy.minimaltodo.eval_fz$l)
===============================================================================
  y    public abstract offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect)

android.support.design.widget.ViewGroupUtils$ViewGroupUtilsImplBase      (com.rubenroy.minimaltodo.eval_fz$f)
===============================================================================
  y    public offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect)

android.support.design.widget.ViewGroupUtils$ViewGroupUtilsImplHoneycomb (com.rubenroy.minimaltodo.eval_fz$_)
===============================================================================
  y    public offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect)

android.support.design.widget.ViewGroupUtilsHoneycomb    (com.rubenroy.minimaltodo.eval_c0)
===============================================================================
  d        public static offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect)
  eval_h   static offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix)

android.support.design.widget.ViewGroupUtilsHoneycomb$IOException        (com.rubenroy.minimaltodo.eval_vb)
===============================================================================
  No methods

android.support.design.widget.ViewOffsetBehavior
===============================================================================
  g    public getLeftAndRightOffset()
  k    public onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int)
  n    public getTopAndBottomOffset()
  n    public setTopAndBottomOffset(int)
  v    public setLeftAndRightOffset(int)

android.support.design.widget.ViewOffsetBehavior$IOException     (com.rubenroy.minimaltodo.eval_la)
===============================================================================
  No methods

android.support.design.widget.ViewOffsetHelper   (com.rubenroy.minimaltodo.eval_km)
===============================================================================
  a    public getLeftAndRightOffset()
  b    public getTopAndBottomOffset()
  f    public setTopAndBottomOffset(int)
  h    private static tickleInvalidationFlag(android.view.View)
  h    public setLeftAndRightOffset(int)
  m    private updateOffsets()
  v    public onViewLayout()

android.support.design.widget.ViewOffsetHelper$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_zh)
===============================================================================
  No methods

android.support.design.widget.ViewUtils  (com.rubenroy.minimaltodo.eval_op)
===============================================================================
  g    static createAnimator()
  x    static setBoundsViewOutlineProvider(android.view.View)

android.support.design.widget.ViewUtils$1        (com.rubenroy.minimaltodo.eval_op$1)
===============================================================================
  w    public createAnimator()

android.support.design.widget.ViewUtils$Exception        (com.rubenroy.minimaltodo.eval__3)
===============================================================================
  No methods

android.support.design.widget.ViewUtils$ViewUtilsImpl    (com.rubenroy.minimaltodo.eval_op$u)
===============================================================================
  l    public abstract setBoundsViewOutlineProvider(android.view.View)

android.support.design.widget.ViewUtils$ViewUtilsImplBase        (com.rubenroy.minimaltodo.eval_op$v)
===============================================================================
  l    public setBoundsViewOutlineProvider(android.view.View)

android.support.design.widget.ViewUtils$ViewUtilsImplLollipop    (com.rubenroy.minimaltodo.eval_op$w)
===============================================================================
  l    public setBoundsViewOutlineProvider(android.view.View)

android.support.design.widget.ViewUtilsLollipop  (com.rubenroy.minimaltodo.eval_dj)
===============================================================================
  y    static setBoundsViewOutlineProvider(android.view.View)

android.support.design.widget.ViewUtilsLollipop$ParseException   (com.rubenroy.minimaltodo.eval_b1)
===============================================================================
  No methods

android.support.v13.BuildConfig  (com.rubenroy.minimaltodo.eval_zg)
===============================================================================
  No methods

android.support.v13.BuildConfig$ArrayOutOfBoundsException        (com.rubenroy.minimaltodo.eval_gn)
===============================================================================
  No methods

android.support.v13.app.FragmentCompat   (com.rubenroy.minimaltodo.eval_it)
===============================================================================
  f    public static shouldShowRequestPermissionRationale(android.app.Fragment,java.lang.String)
  g    public static requestPermissions(android.app.Fragment,java.lang.String[],int)
  k    public static setUserVisibleHint(android.app.Fragment,boolean)
  w    public static setMenuVisibility(android.app.Fragment,boolean)

android.support.v13.app.FragmentCompat$BaseFragmentCompatImpl    (com.rubenroy.minimaltodo.eval_it$h)
===============================================================================
  a    public requestPermissions(android.app.Fragment,java.lang.String[],int)
  i    public setMenuVisibility(android.app.Fragment,boolean)
  m    public shouldShowRequestPermissionRationale(android.app.Fragment,java.lang.String)
  o    public setUserVisibleHint(android.app.Fragment,boolean)

android.support.v13.app.FragmentCompat$BaseFragmentCompatImpl$1  (com.rubenroy.minimaltodo.eval_it$h$1)
===============================================================================
  run  public run()

android.support.v13.app.FragmentCompat$BaseFragmentCompatImpl$ArrayOutOfBoundsException  (com.rubenroy.minimaltodo.eval_ig)
===============================================================================
  No methods

android.support.v13.app.FragmentCompat$FragmentCompatImpl        (com.rubenroy.minimaltodo.eval_it$z)
===============================================================================
  a    public abstract requestPermissions(android.app.Fragment,java.lang.String[],int)
  i    public abstract setMenuVisibility(android.app.Fragment,boolean)
  m    public abstract shouldShowRequestPermissionRationale(android.app.Fragment,java.lang.String)
  o    public abstract setUserVisibleHint(android.app.Fragment,boolean)

android.support.v13.app.FragmentCompat$ICSFragmentCompatImpl     (com.rubenroy.minimaltodo.eval_it$v)
===============================================================================
  i    public setMenuVisibility(android.app.Fragment,boolean)

android.support.v13.app.FragmentCompat$ICSMR1FragmentCompatImpl  (com.rubenroy.minimaltodo.eval_it$k)
===============================================================================
  o    public setUserVisibleHint(android.app.Fragment,boolean)

android.support.v13.app.FragmentCompat$IOException       (com.rubenroy.minimaltodo.eval_ia)
===============================================================================
  No methods

android.support.v13.app.FragmentCompat$MncFragmentCompatImpl     (com.rubenroy.minimaltodo.eval_it$_)
===============================================================================
  a    public requestPermissions(android.app.Fragment,java.lang.String[],int)
  m    public shouldShowRequestPermissionRationale(android.app.Fragment,java.lang.String)

android.support.v13.app.FragmentCompat$OnRequestPermissionsResultCallback        (com.rubenroy.minimaltodo.eval_it$l)
===============================================================================
  x    public abstract onRequestPermissionsResult(int,java.lang.String[],int[])

android.support.v13.app.FragmentCompat23 (com.rubenroy.minimaltodo.eval_p_)
===============================================================================
  a    public static requestPermissions(android.app.Fragment,java.lang.String[],int)
  j    public static shouldShowRequestPermissionRationale(android.app.Fragment,java.lang.String)

android.support.v13.app.FragmentCompat23$NullPointerException    (com.rubenroy.minimaltodo.eval_wo)
===============================================================================
  No methods

android.support.v13.app.FragmentCompatICS        (com.rubenroy.minimaltodo.eval_q7)
===============================================================================
  t    public static setMenuVisibility(android.app.Fragment,boolean)

android.support.v13.app.FragmentCompatICS$ArrayOutOfBoundsException      (com.rubenroy.minimaltodo.eval_kz)
===============================================================================
  No methods

android.support.v13.app.FragmentCompatICSMR1     (com.rubenroy.minimaltodo.eval_gt)
===============================================================================
  n    public static setUserVisibleHint(android.app.Fragment,boolean)

android.support.v13.app.FragmentCompatICSMR1$Exception   (com.rubenroy.minimaltodo.eval_mc)
===============================================================================
  No methods

android.support.v13.app.FragmentPagerAdapter     (com.rubenroy.minimaltodo.eval_bx)
===============================================================================
  e    public startUpdate(android.view.ViewGroup)
  g    private static makeFragmentName(int,long)
  i    public finishUpdate(android.view.ViewGroup)
  j    public saveState()
  l    public instantiateItem(android.view.ViewGroup,int)
  m    public restoreState(android.os.Parcelable,java.lang.ClassLoader)
  t    public isViewFromObject(android.view.View,java.lang.Object)
  t    public getItemId(int)
  x    public destroyItem(android.view.ViewGroup,int,java.lang.Object)
  y    public setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)
  z    public abstract getItem(int)

android.support.v13.app.FragmentPagerAdapter$Exception   (com.rubenroy.minimaltodo.eval_jy)
===============================================================================
  No methods

android.support.v13.app.FragmentStatePagerAdapter        (com.rubenroy.minimaltodo.eval_ow)
===============================================================================
  e    public startUpdate(android.view.ViewGroup)
  i    public finishUpdate(android.view.ViewGroup)
  j    public saveState()
  j    public abstract getItem(int)
  l    public instantiateItem(android.view.ViewGroup,int)
  m    public restoreState(android.os.Parcelable,java.lang.ClassLoader)
  t    public isViewFromObject(android.view.View,java.lang.Object)
  x    public destroyItem(android.view.ViewGroup,int,java.lang.Object)
  y    public setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)

android.support.v13.app.FragmentStatePagerAdapter$Exception      (com.rubenroy.minimaltodo.eval_ma)
===============================================================================
  No methods

android.support.v13.app.FragmentTabHost  (com.rubenroy.minimaltodo.eval_qa)
===============================================================================
  a                        public setup(android.content.Context,android.app.FragmentManager,int)
  b                        private doTabChanged(java.lang.String,android.app.FragmentTransaction)
  e                        public setup(android.content.Context,android.app.FragmentManager)
  j                        public addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle)
  l                        private initFragmentTabHost(android.content.Context,android.util.AttributeSet)
  p                        private ensureHierarchy(android.content.Context)
  z                        private ensureContent()
  onAttachedToWindow       protected onAttachedToWindow()
  onDetachedFromWindow     protected onDetachedFromWindow()
  onRestoreInstanceState   protected onRestoreInstanceState(android.os.Parcelable)
  onSaveInstanceState      protected onSaveInstanceState()
  onTabChanged             public onTabChanged(java.lang.String)
  setOnTabChangedListener  public setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener)
  setup                    public setup()

android.support.v13.app.FragmentTabHost$1        (com.rubenroy.minimaltodo.eval_qa$1)
===============================================================================
  No methods

android.support.v13.app.FragmentTabHost$DummyTabFactory  (com.rubenroy.minimaltodo.eval_qa$d)
===============================================================================
  createTabContent public createTabContent(java.lang.String)

android.support.v13.app.FragmentTabHost$Exception        (com.rubenroy.minimaltodo.eval_ww)
===============================================================================
  No methods

android.support.v13.app.FragmentTabHost$SavedState       (com.rubenroy.minimaltodo.eval_qa$j)
===============================================================================
  toString         public toString()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v13.app.FragmentTabHost$SavedState$1     (com.rubenroy.minimaltodo.eval_qa$j$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v13.app.FragmentTabHost$SavedState$NullPointerException  (com.rubenroy.minimaltodo.eval_td)
===============================================================================
  No methods

android.support.v13.app.FragmentTabHost$TabInfo  (com.rubenroy.minimaltodo.eval_qa$r)
===============================================================================
  a    static access$300(android.support.v13.app.FragmentTabHost$TabInfo)
  c    static access$102(android.support.v13.app.FragmentTabHost$TabInfo,android.app.Fragment)
  h    static access$100(android.support.v13.app.FragmentTabHost$TabInfo)
  k    static access$400(android.support.v13.app.FragmentTabHost$TabInfo)
  u    static access$200(android.support.v13.app.FragmentTabHost$TabInfo)

android.support.v4.BuildConfig   (com.rubenroy.minimaltodo.eval_gr)
===============================================================================
  No methods

android.support.v4.BuildConfig$NullPointerException      (com.rubenroy.minimaltodo.eval_rd)
===============================================================================
  No methods

android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat   (com.rubenroy.minimaltodo.eval_zq)
===============================================================================
  a        public static getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo)
  eval_i   public static feedbackTypeToString(int)
  eval_m   public static getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo)
  j        public static getDescription(android.accessibilityservice.AccessibilityServiceInfo)
  j        public static capabilityToString(int)
  m        public static flagToString(int)
  s        public static getId(android.accessibilityservice.AccessibilityServiceInfo)
  t        public static getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo)
  w        public static getCapabilities(android.accessibilityservice.AccessibilityServiceInfo)

android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl   (com.rubenroy.minimaltodo.eval_zq$n)
===============================================================================
  eval_c   public getId(android.accessibilityservice.AccessibilityServiceInfo)
  g        public getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo)
  i        public getDescription(android.accessibilityservice.AccessibilityServiceInfo)
  j        public getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo)
  m        public getCapabilities(android.accessibilityservice.AccessibilityServiceInfo)
  o        public getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo)

android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2      (com.rubenroy.minimaltodo.eval_zq$_)
===============================================================================
  m    public getCapabilities(android.accessibilityservice.AccessibilityServiceInfo)

android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl  (com.rubenroy.minimaltodo.eval_zq$l)
===============================================================================
  eval_c   public getId(android.accessibilityservice.AccessibilityServiceInfo)
  g        public getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo)
  i        public getDescription(android.accessibilityservice.AccessibilityServiceInfo)
  j        public getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo)
  m        public getCapabilities(android.accessibilityservice.AccessibilityServiceInfo)
  o        public getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo)

android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl       (com.rubenroy.minimaltodo.eval_zq$p)
===============================================================================
  eval_c   public abstract getId(android.accessibilityservice.AccessibilityServiceInfo)
  g        public abstract getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo)
  i        public abstract getDescription(android.accessibilityservice.AccessibilityServiceInfo)
  j        public abstract getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo)
  m        public abstract getCapabilities(android.accessibilityservice.AccessibilityServiceInfo)
  o        public abstract getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo)

android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$NullPointerException      (com.rubenroy.minimaltodo.eval__b)
===============================================================================
  No methods

android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs        (com.rubenroy.minimaltodo.eval_rs)
===============================================================================
  a    public static getDescription(android.accessibilityservice.AccessibilityServiceInfo)
  i    public static getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo)
  q    public static getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo)
  r    public static getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo)
  x    public static getId(android.accessibilityservice.AccessibilityServiceInfo)

android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs$IOException    (com.rubenroy.minimaltodo.eval_iy)
===============================================================================
  No methods

android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2       (com.rubenroy.minimaltodo.eval_t3)
===============================================================================
  b    public static getCapabilities(android.accessibilityservice.AccessibilityServiceInfo)

android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2$ParseException        (com.rubenroy.minimaltodo.eval_e3)
===============================================================================
  No methods

android.support.v4.animation.AnimatorCompatHelper        (com.rubenroy.minimaltodo.eval_au)
===============================================================================
  eval_t   public static clearInterpolator(android.view.View)
  r        public static emptyValueAnimator()

android.support.v4.animation.AnimatorCompatHelper$Exception      (com.rubenroy.minimaltodo.eval_hx)
===============================================================================
  No methods

android.support.v4.animation.AnimatorListenerCompat      (com.rubenroy.minimaltodo.eval_z3)
===============================================================================
  c        public abstract onAnimationRepeat(android.support.v4.animation.ValueAnimatorCompat)
  eval_e   public abstract onAnimationCancel(android.support.v4.animation.ValueAnimatorCompat)
  eval_h   public abstract onAnimationEnd(android.support.v4.animation.ValueAnimatorCompat)
  m        public abstract onAnimationStart(android.support.v4.animation.ValueAnimatorCompat)

android.support.v4.animation.AnimatorListenerCompat$ArrayOutOfBoundsException    (com.rubenroy.minimaltodo.eval_el)
===============================================================================
  No methods

android.support.v4.animation.AnimatorProvider    (com.rubenroy.minimaltodo.eval_po)
===============================================================================
  g    public abstract emptyValueAnimator()
  k    public abstract clearInterpolator(android.view.View)

android.support.v4.animation.AnimatorProvider$NullPointerException       (com.rubenroy.minimaltodo.eval_u_)
===============================================================================
  No methods

android.support.v4.animation.AnimatorUpdateListenerCompat        (com.rubenroy.minimaltodo.eval_pw)
===============================================================================
  x    public abstract onAnimationUpdate(android.support.v4.animation.ValueAnimatorCompat)

android.support.v4.animation.AnimatorUpdateListenerCompat$ParseException (com.rubenroy.minimaltodo.eval_rz)
===============================================================================
  No methods

android.support.v4.animation.DonutAnimatorCompatProvider (com.rubenroy.minimaltodo.eval_kj)
===============================================================================
  g    public emptyValueAnimator()
  k    public clearInterpolator(android.view.View)

android.support.v4.animation.DonutAnimatorCompatProvider$ArrayOutOfBoundsException       (com.rubenroy.minimaltodo.eval_vs)
===============================================================================
  No methods

android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator (com.rubenroy.minimaltodo.eval_kj$x)
===============================================================================
  c        public setTarget(android.view.View)
  eval_b   static access$100(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator)
  eval_p   private dispatchCancel()
  eval_z   private dispatchStart()
  f        public addUpdateListener(android.support.v4.animation.AnimatorUpdateListenerCompat)
  g        static access$200(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator)
  i        private dispatchEnd()
  j        public addListener(android.support.v4.animation.AnimatorListenerCompat)
  k        static access$300(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator)
  l        public start()
  m        public cancel()
  m        static access$000(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator)
  n        private notifyUpdateListeners()
  o        public getAnimatedFraction()
  q        private getTime()
  s        static access$400(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator)
  s        static access$302(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator,float)
  t        static access$500(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator)
  v        static access$600(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator)
  x        public setDuration(long)

android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator$1       (com.rubenroy.minimaltodo.eval_kj$x$1)
===============================================================================
  run  public run()

android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator$NullPointerException    (com.rubenroy.minimaltodo.eval_ld)
===============================================================================
  No methods

android.support.v4.animation.HoneycombMr1AnimatorCompatProvider  (com.rubenroy.minimaltodo.eval_rl)
===============================================================================
  g    public emptyValueAnimator()
  k    public clearInterpolator(android.view.View)

android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$AnimatorListenerCompatWrapper    (com.rubenroy.minimaltodo.eval_rl$x)
===============================================================================
  onAnimationCancel    public onAnimationCancel(android.animation.Animator)
  onAnimationEnd       public onAnimationEnd(android.animation.Animator)
  onAnimationRepeat    public onAnimationRepeat(android.animation.Animator)
  onAnimationStart     public onAnimationStart(android.animation.Animator)

android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$HoneycombValueAnimatorCompat     (com.rubenroy.minimaltodo.eval_rl$g)
===============================================================================
  c    public setTarget(android.view.View)
  f    public addUpdateListener(android.support.v4.animation.AnimatorUpdateListenerCompat)
  j    public addListener(android.support.v4.animation.AnimatorListenerCompat)
  l    public start()
  m    public cancel()
  o    public getAnimatedFraction()
  x    public setDuration(long)

android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$HoneycombValueAnimatorCompat$1   (com.rubenroy.minimaltodo.eval_rl$g$1)
===============================================================================
  onAnimationUpdate    public onAnimationUpdate(android.animation.ValueAnimator)

android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$HoneycombValueAnimatorCompat$ParseException      (com.rubenroy.minimaltodo.eval_qn)
===============================================================================
  No methods

android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$IOException      (com.rubenroy.minimaltodo.eval_pu)
===============================================================================
  No methods

android.support.v4.animation.ValueAnimatorCompat (com.rubenroy.minimaltodo.eval_bd)
===============================================================================
  c    public abstract setTarget(android.view.View)
  f    public abstract addUpdateListener(android.support.v4.animation.AnimatorUpdateListenerCompat)
  j    public abstract addListener(android.support.v4.animation.AnimatorListenerCompat)
  l    public abstract start()
  m    public abstract cancel()
  o    public abstract getAnimatedFraction()
  x    public abstract setDuration(long)

android.support.v4.animation.ValueAnimatorCompat$IOException     (com.rubenroy.minimaltodo.eval_wl)
===============================================================================
  No methods

android.support.v4.app.ActionBarDrawerToggle     (com.rubenroy.minimaltodo.eval_wk)
===============================================================================
  a    public isDrawerIndicatorEnabled()
  a    public onConfigurationChanged(android.content.res.Configuration)
  d    public syncState()
  e    public setHomeAsUpIndicator(android.graphics.drawable.Drawable)
  g    private static assumeMaterial(android.content.Context)
  h    public setDrawerIndicatorEnabled(boolean)
  k    public onDrawerOpened(android.view.View)
  k    public setHomeAsUpIndicator(int)
  m    public onOptionsItemSelected(android.view.MenuItem)
  n    public onDrawerStateChanged(int)
  q    getThemeUpIndicator()
  r    setActionBarUpIndicator(android.graphics.drawable.Drawable,int)
  s    public onDrawerClosed(android.view.View)
  t    setActionBarDescription(int)
  x    static access$400(android.support.v4.app.ActionBarDrawerToggle)
  z    public onDrawerSlide(android.view.View,float)

android.support.v4.app.ActionBarDrawerToggle$1   (com.rubenroy.minimaltodo.eval_wk$1)
===============================================================================
  No methods

android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl   (com.rubenroy.minimaltodo.eval_wk$o)
===============================================================================
  a    public abstract setActionBarDescription(java.lang.Object,android.app.Activity,int)
  q    public abstract getThemeUpIndicator(android.app.Activity)
  r    public abstract setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int)

android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase       (com.rubenroy.minimaltodo.eval_wk$u)
===============================================================================
  a    public setActionBarDescription(java.lang.Object,android.app.Activity,int)
  q    public getThemeUpIndicator(android.app.Activity)
  r    public setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int)

android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC (com.rubenroy.minimaltodo.eval_wk$m)
===============================================================================
  a    public setActionBarDescription(java.lang.Object,android.app.Activity,int)
  q    public getThemeUpIndicator(android.app.Activity)
  r    public setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int)

android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2       (com.rubenroy.minimaltodo.eval_wk$d)
===============================================================================
  a    public setActionBarDescription(java.lang.Object,android.app.Activity,int)
  q    public getThemeUpIndicator(android.app.Activity)
  r    public setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int)

android.support.v4.app.ActionBarDrawerToggle$Delegate    (com.rubenroy.minimaltodo.eval_wk$v)
===============================================================================
  g    public abstract getThemeUpIndicator()
  m    public abstract setActionBarUpIndicator(android.graphics.drawable.Drawable,int)
  z    public abstract setActionBarDescription(int)

android.support.v4.app.ActionBarDrawerToggle$DelegateProvider    (com.rubenroy.minimaltodo.eval_wk$f)
===============================================================================
  k    public abstract getDrawerToggleDelegate()

android.support.v4.app.ActionBarDrawerToggle$Exception   (com.rubenroy.minimaltodo.eval_d8)
===============================================================================
  No methods

android.support.v4.app.ActionBarDrawerToggle$SlideDrawable       (com.rubenroy.minimaltodo.eval_wk$x)
===============================================================================
  h    public setOffset(float)
  s    public getPosition()
  u    public setPosition(float)
  draw public draw(android.graphics.Canvas)

android.support.v4.app.ActionBarDrawerToggleHoneycomb    (com.rubenroy.minimaltodo.eval_qs)
===============================================================================
  o    public static setActionBarDescription(java.lang.Object,android.app.Activity,int)
  s    public static setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int)
  u    public static getThemeUpIndicator(android.app.Activity)

android.support.v4.app.ActionBarDrawerToggleHoneycomb$IOException        (com.rubenroy.minimaltodo.eval_ms)
===============================================================================
  No methods

android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo   (com.rubenroy.minimaltodo.eval_qs$i)
===============================================================================
  No methods

android.support.v4.app.ActionBarDrawerToggleJellybeanMR2 (com.rubenroy.minimaltodo.eval_mg)
===============================================================================
  i    public static getThemeUpIndicator(android.app.Activity)
  n    public static setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int)
  r    public static setActionBarDescription(java.lang.Object,android.app.Activity,int)

android.support.v4.app.ActionBarDrawerToggleJellybeanMR2$ArrayOutOfBoundsException       (com.rubenroy.minimaltodo.eval_be)
===============================================================================
  No methods

android.support.v4.app.ActivityCompat    (com.rubenroy.minimaltodo.eval_f6)
===============================================================================
  a        public static startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)
  d        public static finishAffinity(android.app.Activity)
  eval_e   public static startPostponedEnterTransition(android.app.Activity)
  eval_m   public static invalidateOptionsMenu(android.app.Activity)
  i        public static finishAfterTransition(android.app.Activity)
  l        private static createCallback(android.support.v4.app.SharedElementCallback)
  n        public static setEnterSharedElementCallback(android.app.Activity,android.support.v4.app.SharedElementCallback)
  q        public static startActivity(android.app.Activity,android.content.Intent,android.os.Bundle)
  u        public static postponeEnterTransition(android.app.Activity)
  w        public getReferrer(android.app.Activity)
  x        public static setExitSharedElementCallback(android.app.Activity,android.support.v4.app.SharedElementCallback)
  x        public static shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
  y        public static requestPermissions(android.app.Activity,java.lang.String[],int)

android.support.v4.app.ActivityCompat$1  (com.rubenroy.minimaltodo.eval_f6$1)
===============================================================================
  run  public run()

android.support.v4.app.ActivityCompat$OnRequestPermissionsResultCallback (com.rubenroy.minimaltodo.eval_f6$b)
===============================================================================
  onRequestPermissionsResult   public abstract onRequestPermissionsResult(int,java.lang.String[],int[])

android.support.v4.app.ActivityCompat$ParseException     (com.rubenroy.minimaltodo.eval_t4)
===============================================================================
  No methods

android.support.v4.app.ActivityCompat$SharedElementCallback21Impl        (com.rubenroy.minimaltodo.eval_f6$h)
===============================================================================
  a    public onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)
  a    public onRejectSharedElements(java.util.List)
  k    public onSharedElementStart(java.util.List,java.util.List,java.util.List)
  l    public onSharedElementEnd(java.util.List,java.util.List,java.util.List)
  v    public onMapSharedElements(java.util.List,java.util.Map)
  y    public onCreateSnapshotView(android.content.Context,android.os.Parcelable)

android.support.v4.app.ActivityCompat21  (com.rubenroy.minimaltodo.eval_u2)
===============================================================================
  c    public static startPostponedEnterTransition(android.app.Activity)
  d    public static setMediaController(android.app.Activity,java.lang.Object)
  p    public static postponeEnterTransition(android.app.Activity)
  s    public static setExitSharedElementCallback(android.app.Activity,android.support.v4.app.ActivityCompat21$SharedElementCallback21)
  t    private static createCallback(android.support.v4.app.ActivityCompat21$SharedElementCallback21)
  v    public static finishAfterTransition(android.app.Activity)
  w    public static setEnterSharedElementCallback(android.app.Activity,android.support.v4.app.ActivityCompat21$SharedElementCallback21)

android.support.v4.app.ActivityCompat21$Exception        (com.rubenroy.minimaltodo.eval_us)
===============================================================================
  No methods

android.support.v4.app.ActivityCompat21$SharedElementCallback21  (com.rubenroy.minimaltodo.eval_u2$v)
===============================================================================
  a    public abstract onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)
  a    public abstract onRejectSharedElements(java.util.List)
  k    public abstract onSharedElementStart(java.util.List,java.util.List,java.util.List)
  l    public abstract onSharedElementEnd(java.util.List,java.util.List,java.util.List)
  v    public abstract onMapSharedElements(java.util.List,java.util.Map)
  y    public abstract onCreateSnapshotView(android.content.Context,android.os.Parcelable)

android.support.v4.app.ActivityCompat21$SharedElementCallbackImpl        (com.rubenroy.minimaltodo.eval_u2$u)
===============================================================================
  onCaptureSharedElementSnapshot   public onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)
  onCreateSnapshotView             public onCreateSnapshotView(android.content.Context,android.os.Parcelable)
  onMapSharedElements              public onMapSharedElements(java.util.List,java.util.Map)
  onRejectSharedElements           public onRejectSharedElements(java.util.List)
  onSharedElementEnd               public onSharedElementEnd(java.util.List,java.util.List,java.util.List)
  onSharedElementStart             public onSharedElementStart(java.util.List,java.util.List,java.util.List)

android.support.v4.app.ActivityCompat22  (com.rubenroy.minimaltodo.eval_h2)
===============================================================================
  g    public static getReferrer(android.app.Activity)

android.support.v4.app.ActivityCompat22$Exception        (com.rubenroy.minimaltodo.eval_rh)
===============================================================================
  No methods

android.support.v4.app.ActivityCompatApi23       (com.rubenroy.minimaltodo.eval_qm)
===============================================================================
  d    public static shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
  x    public static requestPermissions(android.app.Activity,java.lang.String[],int)

android.support.v4.app.ActivityCompatApi23$ParseException        (com.rubenroy.minimaltodo.eval_dq)
===============================================================================
  No methods

android.support.v4.app.ActivityCompatApi23$RequestPermissionsRequestCodeValidator        (com.rubenroy.minimaltodo.eval_qm$b)
===============================================================================
  j    public abstract validateRequestPermissionsRequestCode(int)

android.support.v4.app.ActivityCompatHoneycomb   (com.rubenroy.minimaltodo.eval_is)
===============================================================================
  p    static invalidateOptionsMenu(android.app.Activity)
  w    static dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])

android.support.v4.app.ActivityCompatHoneycomb$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_r1)
===============================================================================
  No methods

android.support.v4.app.ActivityCompatJB  (com.rubenroy.minimaltodo.eval_d4)
===============================================================================
  c    public static startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
  o    public static finishAffinity(android.app.Activity)
  t    public static startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)

android.support.v4.app.ActivityCompatJB$Exception        (com.rubenroy.minimaltodo.eval_ul)
===============================================================================
  No methods

android.support.v4.app.ActivityManagerCompat     (com.rubenroy.minimaltodo.eval_m_)
===============================================================================
  j    public static isLowRamDevice(android.app.ActivityManager)

android.support.v4.app.ActivityManagerCompat$Exception   (com.rubenroy.minimaltodo.eval_n8)
===============================================================================
  No methods

android.support.v4.app.ActivityManagerCompatKitKat       (com.rubenroy.minimaltodo.eval_l1)
===============================================================================
  v    public static isLowRamDevice(android.app.ActivityManager)

android.support.v4.app.ActivityManagerCompatKitKat$NullPointerException  (com.rubenroy.minimaltodo.eval_zx)
===============================================================================
  No methods

android.support.v4.app.ActivityOptionsCompat     (com.rubenroy.minimaltodo.eval_ar)
===============================================================================
  a    public toBundle()
  a    public update(android.support.v4.app.ActivityOptionsCompat)
  c    public static makeCustomAnimation(android.content.Context,int,int)
  e    public static makeScaleUpAnimation(android.view.View,int,int,int,int)
  f    public static makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int)
  i    public static makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String)
  q    public static transient makeSceneTransitionAnimation(android.app.Activity,android.support.v4.util.Pair[])

android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImpl21       (com.rubenroy.minimaltodo.eval_ar$h)
===============================================================================
  a    public toBundle()
  a    public update(android.support.v4.app.ActivityOptionsCompat)

android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB       (com.rubenroy.minimaltodo.eval_ar$f)
===============================================================================
  a    public toBundle()
  a    public update(android.support.v4.app.ActivityOptionsCompat)

android.support.v4.app.ActivityOptionsCompat$Exception   (com.rubenroy.minimaltodo.eval_r8)
===============================================================================
  No methods

android.support.v4.app.ActivityOptionsCompat21   (com.rubenroy.minimaltodo.eval_i5)
===============================================================================
  f    public static makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String)
  p    public update(android.support.v4.app.ActivityOptionsCompat21)
  r    public toBundle()
  u    public static makeSceneTransitionAnimation(android.app.Activity,android.view.View[],java.lang.String[])

android.support.v4.app.ActivityOptionsCompat21$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_r2)
===============================================================================
  No methods

android.support.v4.app.ActivityOptionsCompatJB   (com.rubenroy.minimaltodo.eval_n0)
===============================================================================
  c    public toBundle()
  g    public update(android.support.v4.app.ActivityOptionsCompatJB)
  h    public static makeCustomAnimation(android.content.Context,int,int)
  v    public static makeScaleUpAnimation(android.view.View,int,int,int,int)
  x    public static makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int)

android.support.v4.app.ActivityOptionsCompatJB$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_if)
===============================================================================
  No methods

android.support.v4.app.AppOpsManagerCompat       (com.rubenroy.minimaltodo.eval_uw)
===============================================================================
  c    public static noteOp(android.content.Context,java.lang.String,int,java.lang.String)
  j    public static noteProxyOp(android.content.Context,java.lang.String,java.lang.String)
  w    public static permissionToOp(java.lang.String)

android.support.v4.app.AppOpsManagerCompat$1     (com.rubenroy.minimaltodo.eval_uw$1)
===============================================================================
  No methods

android.support.v4.app.AppOpsManagerCompat$AppOpsManager23       (com.rubenroy.minimaltodo.eval_uw$h)
===============================================================================
  i    public noteOp(android.content.Context,java.lang.String,int,java.lang.String)
  s    public noteProxyOp(android.content.Context,java.lang.String,java.lang.String)
  t    public permissionToOp(java.lang.String)

android.support.v4.app.AppOpsManagerCompat$AppOpsManagerImpl     (com.rubenroy.minimaltodo.eval_uw$s)
===============================================================================
  i    public noteOp(android.content.Context,java.lang.String,int,java.lang.String)
  s    public noteProxyOp(android.content.Context,java.lang.String,java.lang.String)
  t    public permissionToOp(java.lang.String)

android.support.v4.app.AppOpsManagerCompat$ParseException        (com.rubenroy.minimaltodo.eval_xa)
===============================================================================
  No methods

android.support.v4.app.AppOpsManagerCompat23     (com.rubenroy.minimaltodo.eval_i7)
===============================================================================
  c    public static noteOp(android.content.Context,java.lang.String,int,java.lang.String)
  l    public static noteProxyOp(android.content.Context,java.lang.String,java.lang.String)
  u    public static permissionToOp(java.lang.String)

android.support.v4.app.AppOpsManagerCompat23$Exception   (com.rubenroy.minimaltodo.eval_d_)
===============================================================================
  No methods

android.support.v4.app.BackStackRecord   (com.rubenroy.minimaltodo.eval_cl)
===============================================================================
  b        public commitAllowingStateLoss()
  b        public add(int,android.support.v4.app.Fragment)
  b        public setBreadCrumbTitle(java.lang.CharSequence)
  b        public addToBackStack(java.lang.String)
  c        private static setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,java.util.ArrayList,java.util.ArrayList)
  c        static access$100(android.support.v4.app.BackStackRecord,android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState)
  d        private remapSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean)
  d        public setTransitionStyle(int)
  d        public setCustomAnimations(int,int)
  e        private beginTransition(android.util.SparseArray,android.util.SparseArray,boolean)
  eval__   public commit()
  eval_g   public getName()
  eval_g   private excludeHiddenFragments(android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object)
  eval_h   public isEmpty()
  eval_n   private static getSharedElementTransition(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean)
  eval_r   bumpBackStackNesting(int)
  f        private static setFirstOut(android.util.SparseArray,android.support.v4.app.Fragment)
  g        private callSharedElementEnd(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap)
  g        private static setNameOverride(android.support.v4.util.ArrayMap,java.lang.String,java.lang.String)
  g        public replace(int,android.support.v4.app.Fragment,java.lang.String)
  g        private doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)
  h        public getBreadCrumbTitleRes()
  h        static access$200(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap)
  i        public dump(java.lang.String,java.io.PrintWriter,boolean)
  j        public getBreadCrumbShortTitle()
  j        public popFromBackStack(boolean,android.support.v4.app.BackStackRecord$TransitionState,android.util.SparseArray,android.util.SparseArray)
  k        private mapSharedElementsIn(android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment)
  k        commitInternal(boolean)
  l        private mapEnteringSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean)
  l        public hide(android.support.v4.app.Fragment)
  l        public setTransition(int)
  l        public replace(int,android.support.v4.app.Fragment)
  l        private static captureExitingViews(java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList,android.support.v4.util.ArrayMap,android.view.View)
  l        public dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
  m        private static getExitTransition(android.support.v4.app.Fragment,boolean)
  m        private configureTransitions(int,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.util.SparseArray,android.util.SparseArray)
  m        public setBreadCrumbShortTitle(java.lang.CharSequence)
  n        public getTransition()
  n        static access$000(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment)
  n        public setBreadCrumbTitle(int)
  o        public remove(android.support.v4.app.Fragment)
  o        public setBreadCrumbShortTitle(int)
  p        private prepareSharedElementTransition(android.support.v4.app.BackStackRecord$TransitionState,android.view.View,java.lang.Object,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,java.util.ArrayList)
  p        public show(android.support.v4.app.Fragment)
  p        public add(int,android.support.v4.app.Fragment,java.lang.String)
  p        public setCustomAnimations(int,int,int,int)
  q        public isAddToBackStackAllowed()
  q        private static remapNames(java.util.ArrayList,java.util.ArrayList,android.support.v4.util.ArrayMap)
  r        static access$300(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object)
  r        private setLastIn(android.util.SparseArray,android.support.v4.app.Fragment)
  s        public getTransitionStyle()
  s        private setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean)
  t        public disallowAddToBackStack()
  t        private setBackNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean)
  u        public getBreadCrumbShortTitleRes()
  u        addOp(android.support.v4.app.BackStackRecord$Op)
  u        private excludeHiddenFragmentsAfterEnter(android.view.View,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object)
  v        private setEpicenterIn(android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState)
  v        public calculateBackFragments(android.util.SparseArray,android.util.SparseArray)
  w        public getBreadCrumbTitle()
  w        private calculateFragments(android.util.SparseArray,android.util.SparseArray)
  w        public addSharedElement(android.view.View,java.lang.String)
  x        public getId()
  x        public add(android.support.v4.app.Fragment,java.lang.String)
  y        public attach(android.support.v4.app.Fragment)
  y        private static getEnterTransition(android.support.v4.app.Fragment,boolean)
  z        public detach(android.support.v4.app.Fragment)
  run      public run()
  toString public toString()

android.support.v4.app.BackStackRecord$1 (com.rubenroy.minimaltodo.eval_cl$1)
===============================================================================
  i    public getView()

android.support.v4.app.BackStackRecord$2 (com.rubenroy.minimaltodo.eval_cl$2)
===============================================================================
  onPreDraw    public onPreDraw()

android.support.v4.app.BackStackRecord$3 (com.rubenroy.minimaltodo.eval_cl$3)
===============================================================================
  onPreDraw    public onPreDraw()

android.support.v4.app.BackStackRecord$IOException       (com.rubenroy.minimaltodo.eval_x5)
===============================================================================
  No methods

android.support.v4.app.BackStackRecord$Op        (com.rubenroy.minimaltodo.eval_cl$m)
===============================================================================
  No methods

android.support.v4.app.BackStackRecord$TransitionState   (com.rubenroy.minimaltodo.eval_cl$z)
===============================================================================
  No methods

android.support.v4.app.BackStackState    (com.rubenroy.minimaltodo.eval__9)
===============================================================================
  b                public instantiate(android.support.v4.app.FragmentManagerImpl)
  describeContents public describeContents()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.app.BackStackState$1  (com.rubenroy.minimaltodo.eval__9$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.app.BackStackState$ParseException     (com.rubenroy.minimaltodo.eval_v5)
===============================================================================
  No methods

android.support.v4.app.BaseFragmentActivityDonut (com.rubenroy.minimaltodo.eval_g6)
===============================================================================
  s            abstract dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
  onCreate     protected onCreate(android.os.Bundle)
  onCreateView public onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)

android.support.v4.app.BaseFragmentActivityDonut$IOException     (com.rubenroy.minimaltodo.eval_w3)
===============================================================================
  No methods

android.support.v4.app.BaseFragmentActivityHoneycomb     (com.rubenroy.minimaltodo.eval_ya)
===============================================================================
  onCreateView public onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)

android.support.v4.app.BaseFragmentActivityHoneycomb$ParseException      (com.rubenroy.minimaltodo.eval_w6)
===============================================================================
  No methods

android.support.v4.app.BundleCompat      (com.rubenroy.minimaltodo.eval_il)
===============================================================================
  j    public static putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)
  o    public static getBinder(android.os.Bundle,java.lang.String)

android.support.v4.app.BundleCompat$NullPointerException (com.rubenroy.minimaltodo.eval_nd)
===============================================================================
  No methods

android.support.v4.app.BundleCompatDonut (com.rubenroy.minimaltodo.eval_ui)
===============================================================================
  d    public static putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)
  m    public static getBinder(android.os.Bundle,java.lang.String)

android.support.v4.app.BundleCompatDonut$NullPointerException    (com.rubenroy.minimaltodo.eval_hl)
===============================================================================
  No methods

android.support.v4.app.BundleCompatJellybeanMR2  (com.rubenroy.minimaltodo.eval_hh)
===============================================================================
  a    public static getBinder(android.os.Bundle,java.lang.String)
  c    public static putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)

android.support.v4.app.BundleCompatJellybeanMR2$ParseException   (com.rubenroy.minimaltodo.eval_dm)
===============================================================================
  No methods

android.support.v4.app.BundleUtil        (com.rubenroy.minimaltodo.eval_u3)
===============================================================================
  k    public static getBundleArrayFromBundle(android.os.Bundle,java.lang.String)

android.support.v4.app.BundleUtil$IOException    (com.rubenroy.minimaltodo.eval_ku)
===============================================================================
  No methods

android.support.v4.app.DialogFragment
===============================================================================
  a            public dismiss()
  a            public onActivityCreated(android.os.Bundle)
  b            public isCancelable()
  c            public onStop()
  d            public getTheme()
  eval_e       public onDestroyView()
  eval_o       public getLayoutInflater(android.os.Bundle)
  eval_u       public setCancelable(boolean)
  g            public onCreateDialog(android.os.Bundle)
  k            public getDialog()
  l            public onSaveInstanceState(android.os.Bundle)
  l            public setShowsDialog(boolean)
  n            public show(android.support.v4.app.FragmentManager,java.lang.String)
  n            public show(android.support.v4.app.FragmentTransaction,java.lang.String)
  o            public getShowsDialog()
  o            public onAttach(android.app.Activity)
  q            dismissInternal(boolean)
  r            public onDetach()
  r            public setupDialog(android.app.Dialog,int)
  u            public dismissAllowingStateLoss()
  v            public onStart()
  x            public onCreate(android.os.Bundle)
  z            public setStyle(int,int)
  onCancel     public onCancel(android.content.DialogInterface)
  onDismiss    public onDismiss(android.content.DialogInterface)

android.support.v4.app.DialogFragment$ParseException     (com.rubenroy.minimaltodo.eval_g1)
===============================================================================
  No methods

android.support.v4.app.Fragment  (com.rubenroy.minimaltodo.eval_mu)
===============================================================================
  a                        public onActivityCreated(android.os.Bundle)
  a                        public setExitSharedElementCallback(android.support.v4.app.SharedElementCallback)
  b                        public startActivityForResult(android.content.Intent,int)
  b                        public onViewStateRestored(android.os.Bundle)
  b                        public onCreateAnimation(int,boolean,int)
  c                        public onStop()
  c                        public static instantiate(android.content.Context,java.lang.String)
  c                        public setEnterSharedElementCallback(android.support.v4.app.SharedElementCallback)
  c                        public onPrepareOptionsMenu(android.view.Menu)
  c                        public setAllowReturnTransitionOverlap(boolean)
  c                        public final getString(int)
  d                        performCreate(android.os.Bundle)
  e                        public final getChildFragmentManager()
  e                        public onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)
  e                        public setReturnTransition(java.lang.Object)
  eval__                   public final isInLayout()
  eval_a                   public getSharedElementReturnTransition()
  eval_b                   public final isAdded()
  eval_c                   public onDestroy()
  eval_d                   instantiateChildFragmentManager()
  eval_d                   public onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
  eval_e                   public onDestroyView()
  eval_et                  performLowMemory()
  eval_f                   public getReturnTransition()
  eval_f                   public registerForContextMenu(android.view.View)
  eval_g                   public final isMenuVisible()
  eval_g                   public setReenterTransition(java.lang.Object)
  eval_h                   public getAllowReturnTransitionOverlap()
  eval_i                   public onDestroyOptionsMenu()
  eval_j                   final isInBackStack()
  eval_j                   public setUserVisibleHint(boolean)
  eval_j2                  performReallyStop()
  eval_k                   public final isVisible()
  eval_ke                  performDestroy()
  eval_kz                  performDestroyView()
  eval_l                   public getSharedElementEnterTransition()
  eval_l                   public onOptionsItemSelected(android.view.MenuItem)
  eval_m                   public final isHidden()
  eval_m                   public setHasOptionsMenu(boolean)
  eval_n                   public getExitTransition()
  eval_n                   final restoreViewState(android.os.Bundle)
  eval_n3                  performStop()
  eval_o                   public final getTargetFragment()
  eval_o                   public getLayoutInflater(android.os.Bundle)
  eval_p                   public final getTag()
  eval_q                   public getEnterTransition()
  eval_r                   public getAllowEnterTransitionOverlap()
  eval_s                   performStart()
  eval_t                   public final getResources()
  eval_u                   public final isResumed()
  eval_u                   public onOptionsMenuClosed(android.view.Menu)
  eval_ug                  performPause()
  eval_v                   public onPause()
  eval_v                   public setRetainInstance(boolean)
  eval_w                   public onResume()
  eval_x                   public final getRetainInstance()
  eval_x                   public setSharedElementEnterTransition(java.lang.Object)
  eval_y                   public final isRemoving()
  eval_z                   public getLoaderManager()
  f                        public getContext()
  f                        public setInitialSavedState(android.support.v4.app.Fragment$SavedState)
  f                        performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
  g                        public final getTargetRequestCode()
  g                        public onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
  g                        public setAllowEnterTransitionOverlap(boolean)
  h                        initState()
  h                        performSaveInstanceState(android.os.Bundle)
  h                        public final transient getString(int,java.lang.Object[])
  h                        findFragmentByWho(java.lang.String)
  i                        public final getId()
  i                        performActivityCreated(android.os.Bundle)
  j                        public final getHost()
  k                        public dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
  l                        public getUserVisibleHint()
  l                        static isSupportFragmentClass(android.content.Context,java.lang.String)
  l                        public onSaveInstanceState(android.os.Bundle)
  m                        public final getFragmentManager()
  n                        public final getActivity()
  n                        performPrepareOptionsMenu(android.view.Menu)
  n                        public onViewCreated(android.view.View,android.os.Bundle)
  o                        public onAttach(android.app.Activity)
  o                        performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
  o                        public final getText(int)
  o                        public final requestPermissions(java.lang.String[],int)
  p                        public final getParentFragment()
  p                        public onContextItemSelected(android.view.MenuItem)
  p                        public onRequestPermissionsResult(int,java.lang.String[],int[])
  p                        public setSharedElementReturnTransition(java.lang.Object)
  q                        public final getArguments()
  r                        public onDetach()
  r                        public static instantiate(android.content.Context,java.lang.String,android.os.Bundle)
  r                        performOptionsMenuClosed(android.view.Menu)
  r                        performContextItemSelected(android.view.MenuItem)
  r                        public setMenuVisibility(boolean)
  r                        final setIndex(int,android.support.v4.app.Fragment)
  r                        public setEnterTransition(java.lang.Object)
  s                        public getView()
  s                        public setTargetFragment(android.support.v4.app.Fragment,int)
  s                        public onHiddenChanged(boolean)
  s                        public onActivityResult(int,int,android.content.Intent)
  t                        public getReenterTransition()
  t                        performOptionsItemSelected(android.view.MenuItem)
  v                        public onStart()
  v                        public setExitTransition(java.lang.Object)
  w                        public final isDetached()
  w                        public onAttach(android.content.Context)
  w                        public onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle)
  w                        public startActivity(android.content.Intent)
  x                        public final hasOptionsMenu()
  x                        public onCreate(android.os.Bundle)
  y                        performResume()
  y                        public unregisterForContextMenu(android.view.View)
  y                        public shouldShowRequestPermissionRationale(java.lang.String)
  z                        performConfigurationChanged(android.content.res.Configuration)
  z                        public setArguments(android.os.Bundle)
  equals                   public final equals(java.lang.Object)
  hashCode                 public final hashCode()
  onConfigurationChanged   public onConfigurationChanged(android.content.res.Configuration)
  onCreateContextMenu      public onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)
  onLowMemory              public onLowMemory()
  toString                 public toString()

android.support.v4.app.Fragment$1        (com.rubenroy.minimaltodo.eval_mu$1)
===============================================================================
  h    public onFindViewById(int)
  m    public onHasView()

android.support.v4.app.Fragment$ArrayOutOfBoundsException        (com.rubenroy.minimaltodo.eval_a1)
===============================================================================
  No methods

android.support.v4.app.Fragment$InstantiationException   (com.rubenroy.minimaltodo.eval_mu$_)
===============================================================================
  No methods

android.support.v4.app.Fragment$SavedState       (com.rubenroy.minimaltodo.eval_mu$t)
===============================================================================
  describeContents public describeContents()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.app.Fragment$SavedState$1     (com.rubenroy.minimaltodo.eval_mu$t$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.app.Fragment$SavedState$ParseException        (com.rubenroy.minimaltodo.eval_lg)
===============================================================================
  No methods

android.support.v4.app.FragmentActivity  (com.rubenroy.minimaltodo.eval_w4)
===============================================================================
  a                                public final getSupportMediaController()
  a                                public onAttachFragment(android.support.v4.app.Fragment)
  e                                protected onPrepareOptionsPanel(android.view.View,android.view.Menu)
  e                                private dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View)
  eval_a                           onReallyStop()
  eval_g                           public getSupportFragmentManager()
  eval_o                           public getSupportLoaderManager()
  h                                public supportPostponeEnterTransition()
  i                                public supportStartPostponedEnterTransition()
  j                                public final validateRequestPermissionsRequestCode(int)
  k                                public supportInvalidateOptionsMenu()
  k                                public setExitSharedElementCallback(android.support.v4.app.SharedElementCallback)
  l                                public supportFinishAfterTransition()
  l                                doReallyStop(boolean)
  n                                static access$000(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment,java.lang.String[],int)
  p                                public onRetainCustomNonConfigurationInstance()
  q                                public getLastCustomNonConfigurationInstance()
  q                                private requestPermissionsFromFragment(android.support.v4.app.Fragment,java.lang.String[],int)
  s                                final dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
  t                                public setEnterSharedElementCallback(android.support.v4.app.SharedElementCallback)
  u                                private static viewToString(android.view.View)
  w                                protected onResumeFragments()
  x                                public startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int)
  z                                public final setSupportMediaController(android.support.v4.media.session.MediaControllerCompat)
  dump                             public dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
  onActivityResult                 protected onActivityResult(int,int,android.content.Intent)
  onBackPressed                    public onBackPressed()
  onConfigurationChanged           public onConfigurationChanged(android.content.res.Configuration)
  onCreate                         protected onCreate(android.os.Bundle)
  onCreatePanelMenu                public onCreatePanelMenu(int,android.view.Menu)
  onCreateView                     public volatile onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
  onCreateView                     public volatile onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
  onDestroy                        protected onDestroy()
  onKeyDown                        public onKeyDown(int,android.view.KeyEvent)
  onLowMemory                      public onLowMemory()
  onMenuItemSelected               public onMenuItemSelected(int,android.view.MenuItem)
  onNewIntent                      protected onNewIntent(android.content.Intent)
  onPanelClosed                    public onPanelClosed(int,android.view.Menu)
  onPause                          protected onPause()
  onPostResume                     protected onPostResume()
  onPreparePanel                   public onPreparePanel(int,android.view.View,android.view.Menu)
  onRequestPermissionsResult       public onRequestPermissionsResult(int,java.lang.String[],int[])
  onResume                         protected onResume()
  onRetainNonConfigurationInstance public final onRetainNonConfigurationInstance()
  onSaveInstanceState              protected onSaveInstanceState(android.os.Bundle)
  onStart                          protected onStart()
  onStateNotSaved                  public onStateNotSaved()
  onStop                           protected onStop()
  startActivityForResult           public startActivityForResult(android.content.Intent,int)

android.support.v4.app.FragmentActivity$1        (com.rubenroy.minimaltodo.eval_w4$1)
===============================================================================
  handleMessage    public handleMessage(android.os.Message)

android.support.v4.app.FragmentActivity$Exception        (com.rubenroy.minimaltodo.eval_qr)
===============================================================================
  No methods

android.support.v4.app.FragmentActivity$HostCallbacks    (com.rubenroy.minimaltodo.eval_w4$f)
===============================================================================
  e    public onStartActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int)
  h    public onFindViewById(int)
  j    public onHasWindowAnimations()
  j    public onAttachFragment(android.support.v4.app.Fragment)
  j    public onShouldShowRequestPermissionRationale(java.lang.String)
  k    public onGetLayoutInflater()
  m    public onHasView()
  m    public onRequestPermissionsFromFragment(android.support.v4.app.Fragment,java.lang.String[],int)
  n    public onGetHost()
  r    public onShouldSaveFragmentState(android.support.v4.app.Fragment)
  s    public onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
  t    public onSupportInvalidateOptionsMenu()
  v    public onGetWindowAnimations()

android.support.v4.app.FragmentActivity$NonConfigurationInstances        (com.rubenroy.minimaltodo.eval_w4$p)
===============================================================================
  No methods

android.support.v4.app.FragmentContainer (com.rubenroy.minimaltodo.eval_ol)
===============================================================================
  h    public abstract onFindViewById(int)
  m    public abstract onHasView()

android.support.v4.app.FragmentContainer$NullPointerException    (com.rubenroy.minimaltodo.eval_bh)
===============================================================================
  No methods

android.support.v4.app.FragmentController        (com.rubenroy.minimaltodo.eval_qz)
===============================================================================
  a        public retainNonConfig()
  b        public dispatchOptionsItemSelected(android.view.MenuItem)
  b        public onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
  c        public dispatchCreate()
  d        public getSupportLoaderManager()
  e        public dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
  eval__   public getActiveFragmentsCount()
  eval_e   public dispatchDestroyView()
  eval_i   public retainLoaderNonConfig()
  eval_k   public dispatchPause()
  eval_m   public doLoaderDestroy()
  eval_v   public execPendingActions()
  eval_x   public dispatchDestroy()
  f        public dispatchStart()
  f        public attachHost(android.support.v4.app.Fragment)
  f        public dispatchPrepareOptionsMenu(android.view.Menu)
  g        public saveAllState()
  h        public doLoaderStart()
  h        public dispatchOptionsMenuClosed(android.view.Menu)
  i        public dispatchConfigurationChanged(android.content.res.Configuration)
  l        public dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
  m        public dispatchStop()
  n        public dispatchReallyStop()
  o        public doLoaderRetain()
  o        public static final createController(android.support.v4.app.FragmentHostCallback)
  r        public dispatchLowMemory()
  s        public reportLoaderStart()
  s        public getActiveFragments(java.util.List)
  t        public dispatchResume()
  u        public getSupportFragmentManager()
  v        public doLoaderStop(boolean)
  w        public restoreAllState(android.os.Parcelable,java.util.List)
  x        public dispatchActivityCreated()
  x        public restoreLoaderNonConfig(android.support.v4.util.SimpleArrayMap)
  x        public dispatchContextItemSelected(android.view.MenuItem)
  y        public noteStateNotSaved()

android.support.v4.app.FragmentController$ArrayOutOfBoundsException      (com.rubenroy.minimaltodo.eval_bj)
===============================================================================
  No methods

android.support.v4.app.FragmentHostCallback      (com.rubenroy.minimaltodo.eval_ha)
===============================================================================
  a        getFragmentManagerImpl()
  b        retainLoaderNonConfig()
  c        getLoaderManager(java.lang.String,boolean,boolean)
  e        public onStartActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int)
  eval__   getActivity()
  eval_f   reportLoaderStart()
  eval_i   doLoaderRetain()
  eval_n   doLoaderStart()
  eval_r   getHandler()
  f        dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
  g        getContext()
  h        public onFindViewById(int)
  j        public onHasWindowAnimations()
  j        onAttachFragment(android.support.v4.app.Fragment)
  j        public onShouldShowRequestPermissionRationale(java.lang.String)
  k        public onGetLayoutInflater()
  l        getLoaderManagerImpl()
  m        public onHasView()
  m        public onRequestPermissionsFromFragment(android.support.v4.app.Fragment,java.lang.String[],int)
  n        public abstract onGetHost()
  o        doLoaderDestroy()
  o        doLoaderStop(boolean)
  r        public onShouldSaveFragmentState(android.support.v4.app.Fragment)
  s        public onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
  t        public onSupportInvalidateOptionsMenu()
  t        inactivateFragment(java.lang.String)
  v        public onGetWindowAnimations()
  w        restoreLoaderNonConfig(android.support.v4.util.SimpleArrayMap)

android.support.v4.app.FragmentHostCallback$IOException  (com.rubenroy.minimaltodo.eval_y2)
===============================================================================
  No methods

android.support.v4.app.FragmentManager   (com.rubenroy.minimaltodo.eval_u7)
===============================================================================
  b        public abstract findFragmentByTag(java.lang.String)
  b        public abstract popBackStack(java.lang.String,int)
  eval_l   public abstract getFragments()
  eval_n   public abstract executePendingTransactions()
  eval_n   public abstract getBackStackEntryAt(int)
  eval_x   public abstract popBackStackImmediate(int,int)
  f        public abstract getBackStackEntryCount()
  g        public abstract popBackStack(int,int)
  i        public abstract getFragment(android.os.Bundle,java.lang.String)
  j        public abstract popBackStackImmediate()
  k        public abstract findFragmentById(int)
  k        public abstract dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
  m        public abstract addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener)
  n        public abstract saveFragmentInstanceState(android.support.v4.app.Fragment)
  q        public abstract popBackStack()
  q        public abstract putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment)
  r        public abstract beginTransaction()
  r        public abstract removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener)
  s        public static enableDebugLogging(boolean)
  t        public openTransaction()
  y        public abstract isDestroyed()
  y        public abstract popBackStackImmediate(java.lang.String,int)

android.support.v4.app.FragmentManager$BackStackEntry    (com.rubenroy.minimaltodo.eval_u7$g)
===============================================================================
  eval_g   public abstract getName()
  h        public abstract getBreadCrumbTitleRes()
  j        public abstract getBreadCrumbShortTitle()
  u        public abstract getBreadCrumbShortTitleRes()
  w        public abstract getBreadCrumbTitle()
  x        public abstract getId()

android.support.v4.app.FragmentManager$IOException       (com.rubenroy.minimaltodo.eval_ah)
===============================================================================
  No methods

android.support.v4.app.FragmentManager$OnBackStackChangedListener        (com.rubenroy.minimaltodo.eval_u7$k)
===============================================================================
  y    public abstract onBackStackChanged()

android.support.v4.app.FragmentManagerImpl       (com.rubenroy.minimaltodo.eval_z0)
===============================================================================
  a        reportBackStackChanged()
  a        public dispatchOptionsMenuClosed(android.view.Menu)
  b        public attachFragment(android.support.v4.app.Fragment,int,int)
  b        moveToState(android.support.v4.app.Fragment,int,int,int,boolean)
  b        public findFragmentByTag(java.lang.String)
  b        public popBackStack(java.lang.String,int)
  c        public execPendingActions()
  d        moveToState(int,int,int,boolean)
  e        public allocBackStackIndex(android.support.v4.app.BackStackRecord)
  eval_a   public dispatchPause()
  eval_b   public dispatchCreate()
  eval_f   public dispatchStop()
  eval_i   public dispatchLowMemory()
  eval_k   saveFragmentBasicState(android.support.v4.app.Fragment)
  eval_l   public getFragments()
  eval_n   public executePendingTransactions()
  eval_n   public getBackStackEntryAt(int)
  eval_o   static modifiesAlpha(android.view.animation.Animation)
  eval_q   public dispatchReallyStop()
  eval_t   public dispatchDestroy()
  eval_t   public attachController(android.support.v4.app.FragmentHostCallback,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment)
  eval_u   retainNonConfig()
  eval_v   public dispatchStart()
  eval_w   public static reverseTransit(int)
  eval_x   public popBackStackImmediate(int,int)
  eval_z   public dispatchResume()
  f        public getBackStackEntryCount()
  f        setRetainLoader(boolean)
  g        public dispatchDestroyView()
  g        public popBackStack(int,int)
  h        private checkStateLoss()
  h        addBackStackState(android.support.v4.app.BackStackRecord)
  h        public hideFragment(android.support.v4.app.Fragment,int,int)
  h        public static transitToStyleIndex(int,boolean)
  h        public enqueueAction(java.lang.Runnable,boolean)
  i        public getFragment(android.os.Bundle,java.lang.String)
  i        makeActive(android.support.v4.app.Fragment)
  i        public removeFragment(android.support.v4.app.Fragment,int,int)
  i        public dispatchPrepareOptionsMenu(android.view.Menu)
  j        public popBackStackImmediate()
  j        static makeOpenCloseAnimation(android.content.Context,float,float,float,float)
  j        public performPendingDeferredStart(android.support.v4.app.Fragment)
  j        public addFragment(android.support.v4.app.Fragment,boolean)
  j        public dispatchContextItemSelected(android.view.MenuItem)
  k        saveAllState()
  k        saveFragmentViewState(android.support.v4.app.Fragment)
  k        public findFragmentById(int)
  k        public setBackStackIndex(int,android.support.v4.app.BackStackRecord)
  k        moveToState(int,boolean)
  k        public dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
  l        getLayoutInflaterFactory()
  l        makeInactive(android.support.v4.app.Fragment)
  m        public addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener)
  m        public dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
  n        public saveFragmentInstanceState(android.support.v4.app.Fragment)
  n        loadAnimation(android.support.v4.app.Fragment,int,boolean,int)
  n        public showFragment(android.support.v4.app.Fragment,int,int)
  n        static shouldRunOnHWLayer(android.view.View,android.view.animation.Animation)
  o        static makeFadeAnimation(android.content.Context,float,float)
  p        public noteStateNotSaved()
  p        public freeBackStackIndex(int)
  q        public popBackStack()
  q        public putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment)
  q        public detachFragment(android.support.v4.app.Fragment,int,int)
  q        public onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
  r        public beginTransaction()
  r        popBackStackState(android.os.Handler,java.lang.String,int,int)
  r        public removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener)
  s        public dispatchActivityCreated()
  t        restoreAllState(android.os.Parcelable,java.util.List)
  t        public dispatchOptionsItemSelected(android.view.MenuItem)
  t        private throwException(java.lang.RuntimeException)
  u        public dispatchConfigurationChanged(android.content.res.Configuration)
  u        moveToState(android.support.v4.app.Fragment)
  w        public findFragmentByWho(java.lang.String)
  x        startPendingDeferredFragments()
  y        public isDestroyed()
  y        private setHWLayerAnimListenerIfAlpha(android.view.View,android.view.animation.Animation)
  y        public popBackStackImmediate(java.lang.String,int)
  toString public toString()

android.support.v4.app.FragmentManagerImpl$1     (com.rubenroy.minimaltodo.eval_z0$1)
===============================================================================
  run  public run()

android.support.v4.app.FragmentManagerImpl$2     (com.rubenroy.minimaltodo.eval_z0$2)
===============================================================================
  run  public run()

android.support.v4.app.FragmentManagerImpl$3     (com.rubenroy.minimaltodo.eval_z0$3)
===============================================================================
  run  public run()

android.support.v4.app.FragmentManagerImpl$4     (com.rubenroy.minimaltodo.eval_z0$4)
===============================================================================
  run  public run()

android.support.v4.app.FragmentManagerImpl$5     (com.rubenroy.minimaltodo.eval_z0$5)
===============================================================================
  onAnimationEnd   public onAnimationEnd(android.view.animation.Animation)

android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener      (com.rubenroy.minimaltodo.eval_z0$y)
===============================================================================
  u                    static access$000(android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener)
  onAnimationEnd       public onAnimationEnd(android.view.animation.Animation)
  onAnimationRepeat    public onAnimationRepeat(android.view.animation.Animation)
  onAnimationStart     public onAnimationStart(android.view.animation.Animation)

android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$1    (com.rubenroy.minimaltodo.eval_z0$y$1)
===============================================================================
  run  public run()

android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$2    (com.rubenroy.minimaltodo.eval_z0$y$2)
===============================================================================
  run  public run()

android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$NullPointerException (com.rubenroy.minimaltodo.eval_vj)
===============================================================================
  No methods

android.support.v4.app.FragmentManagerImpl$FragmentTag   (com.rubenroy.minimaltodo.eval_z0$z)
===============================================================================
  No methods

android.support.v4.app.FragmentManagerImpl$ParseException        (com.rubenroy.minimaltodo.eval__n)
===============================================================================
  No methods

android.support.v4.app.FragmentManagerState      (com.rubenroy.minimaltodo.eval_r5)
===============================================================================
  describeContents public describeContents()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.app.FragmentManagerState$1    (com.rubenroy.minimaltodo.eval_r5$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.app.FragmentManagerState$IOException  (com.rubenroy.minimaltodo.eval_k1)
===============================================================================
  No methods

android.support.v4.app.FragmentPagerAdapter      (com.rubenroy.minimaltodo.eval_gh)
===============================================================================
  d    private static makeFragmentName(int,long)
  e    public startUpdate(android.view.ViewGroup)
  i    public finishUpdate(android.view.ViewGroup)
  j    public saveState()
  l    public instantiateItem(android.view.ViewGroup,int)
  m    public restoreState(android.os.Parcelable,java.lang.ClassLoader)
  n    public getItemId(int)
  t    public isViewFromObject(android.view.View,java.lang.Object)
  w    public abstract getItem(int)
  x    public destroyItem(android.view.ViewGroup,int,java.lang.Object)
  y    public setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)

android.support.v4.app.FragmentPagerAdapter$IOException  (com.rubenroy.minimaltodo.eval_xu)
===============================================================================
  No methods

android.support.v4.app.FragmentState     (com.rubenroy.minimaltodo.eval_fg)
===============================================================================
  f                public instantiate(android.support.v4.app.FragmentHostCallback,android.support.v4.app.Fragment)
  describeContents public describeContents()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.app.FragmentState$1   (com.rubenroy.minimaltodo.eval_fg$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.app.FragmentState$ArrayOutOfBoundsException   (com.rubenroy.minimaltodo.eval_ih)
===============================================================================
  No methods

android.support.v4.app.FragmentStatePagerAdapter (com.rubenroy.minimaltodo.eval_d9)
===============================================================================
  e    public startUpdate(android.view.ViewGroup)
  i    public finishUpdate(android.view.ViewGroup)
  j    public saveState()
  j    public abstract getItem(int)
  l    public instantiateItem(android.view.ViewGroup,int)
  m    public restoreState(android.os.Parcelable,java.lang.ClassLoader)
  t    public isViewFromObject(android.view.View,java.lang.Object)
  x    public destroyItem(android.view.ViewGroup,int,java.lang.Object)
  y    public setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)

android.support.v4.app.FragmentStatePagerAdapter$IOException     (com.rubenroy.minimaltodo.eval_vr)
===============================================================================
  No methods

android.support.v4.app.FragmentTabHost   (com.rubenroy.minimaltodo.eval_zi)
===============================================================================
  j                        private ensureHierarchy(android.content.Context)
  j                        public addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle)
  k                        private initFragmentTabHost(android.content.Context,android.util.AttributeSet)
  m                        public setup(android.content.Context,android.support.v4.app.FragmentManager,int)
  q                        public setup(android.content.Context,android.support.v4.app.FragmentManager)
  t                        private doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction)
  w                        private ensureContent()
  onAttachedToWindow       protected onAttachedToWindow()
  onDetachedFromWindow     protected onDetachedFromWindow()
  onRestoreInstanceState   protected onRestoreInstanceState(android.os.Parcelable)
  onSaveInstanceState      protected onSaveInstanceState()
  onTabChanged             public onTabChanged(java.lang.String)
  setOnTabChangedListener  public setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener)
  setup                    public setup()

android.support.v4.app.FragmentTabHost$1 (com.rubenroy.minimaltodo.eval_zi$1)
===============================================================================
  No methods

android.support.v4.app.FragmentTabHost$DummyTabFactory   (com.rubenroy.minimaltodo.eval_zi$g)
===============================================================================
  createTabContent public createTabContent(java.lang.String)

android.support.v4.app.FragmentTabHost$IOException       (com.rubenroy.minimaltodo.eval_zz)
===============================================================================
  No methods

android.support.v4.app.FragmentTabHost$SavedState        (com.rubenroy.minimaltodo.eval_zi$s)
===============================================================================
  toString         public toString()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.app.FragmentTabHost$SavedState$1      (com.rubenroy.minimaltodo.eval_zi$s$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.app.FragmentTabHost$SavedState$Exception      (com.rubenroy.minimaltodo.eval_wy)
===============================================================================
  No methods

android.support.v4.app.FragmentTabHost$TabInfo   (com.rubenroy.minimaltodo.eval_zi$a)
===============================================================================
  h    static access$300(android.support.v4.app.FragmentTabHost$TabInfo)
  k    static access$200(android.support.v4.app.FragmentTabHost$TabInfo)
  r    static access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment)
  y    static access$100(android.support.v4.app.FragmentTabHost$TabInfo)
  z    static access$400(android.support.v4.app.FragmentTabHost$TabInfo)

android.support.v4.app.FragmentTransaction       (com.rubenroy.minimaltodo.eval_oc)
===============================================================================
  b        public abstract commitAllowingStateLoss()
  b        public abstract add(int,android.support.v4.app.Fragment)
  b        public abstract setBreadCrumbTitle(java.lang.CharSequence)
  b        public abstract addToBackStack(java.lang.String)
  d        public abstract setTransitionStyle(int)
  d        public abstract setCustomAnimations(int,int)
  eval__   public abstract commit()
  eval_h   public abstract isEmpty()
  g        public abstract replace(int,android.support.v4.app.Fragment,java.lang.String)
  l        public abstract hide(android.support.v4.app.Fragment)
  l        public abstract setTransition(int)
  l        public abstract replace(int,android.support.v4.app.Fragment)
  m        public abstract setBreadCrumbShortTitle(java.lang.CharSequence)
  n        public abstract setBreadCrumbTitle(int)
  o        public abstract remove(android.support.v4.app.Fragment)
  o        public abstract setBreadCrumbShortTitle(int)
  p        public abstract show(android.support.v4.app.Fragment)
  p        public abstract add(int,android.support.v4.app.Fragment,java.lang.String)
  p        public abstract setCustomAnimations(int,int,int,int)
  q        public abstract isAddToBackStackAllowed()
  t        public abstract disallowAddToBackStack()
  w        public abstract addSharedElement(android.view.View,java.lang.String)
  x        public abstract add(android.support.v4.app.Fragment,java.lang.String)
  y        public abstract attach(android.support.v4.app.Fragment)
  z        public abstract detach(android.support.v4.app.Fragment)

android.support.v4.app.FragmentTransaction$ParseException        (com.rubenroy.minimaltodo.eval_np)
===============================================================================
  No methods

android.support.v4.app.FragmentTransitionCompat21        (com.rubenroy.minimaltodo.eval_q0)
===============================================================================
  d        private static getBoundsOnScreen(android.view.View)
  e        public static addTransitionTargets(java.lang.Object,java.lang.Object,android.view.View,android.support.v4.app.FragmentTransitionCompat21$ViewRetriever,android.view.View,android.support.v4.app.FragmentTransitionCompat21$EpicenterView,java.util.Map,java.util.ArrayList,java.util.Map,java.util.Map,java.util.ArrayList)
  e        public static removeTargets(java.lang.Object,java.util.ArrayList)
  e        static access$000(java.util.ArrayList,android.view.View)
  eval_d   public static setSharedElementTargets(java.lang.Object,android.view.View,java.util.Map,java.util.ArrayList)
  eval_f   public static mergeTransitions(java.lang.Object,java.lang.Object,java.lang.Object,boolean)
  f        public static findNamedViews(java.util.Map,android.view.View)
  j        public static captureExitingViews(java.lang.Object,android.view.View,java.util.ArrayList,java.util.Map,android.view.View)
  l        public static cleanupTransitions(android.view.View,android.view.View,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.util.Map)
  m        public static getTransitionName(android.view.View)
  p        private static hasSimpleTarget(android.transition.Transition)
  p        static access$100(android.view.View)
  p        public static wrapSharedElementTransition(java.lang.Object)
  p        public static excludeTarget(java.lang.Object,android.view.View,boolean)
  p        private static bfsAddViewChildren(java.util.List,android.view.View)
  s        public static cloneTransition(java.lang.Object)
  s        private static isNullOrEmpty(java.util.List)
  u        public static addTargets(java.lang.Object,java.util.ArrayList)
  v        private static containedBeforeIndex(java.util.List,android.view.View,int)
  w        private static setSharedElementEpicenter(android.transition.Transition,android.support.v4.app.FragmentTransitionCompat21$EpicenterView)
  w        public static beginDelayedTransition(android.view.ViewGroup,java.lang.Object)
  y        public static setEpicenter(java.lang.Object,android.view.View)
  z        private static captureTransitioningViews(java.util.ArrayList,android.view.View)

android.support.v4.app.FragmentTransitionCompat21$1      (com.rubenroy.minimaltodo.eval_q0$1)
===============================================================================
  onGetEpicenter   public onGetEpicenter(android.transition.Transition)

android.support.v4.app.FragmentTransitionCompat21$2      (com.rubenroy.minimaltodo.eval_q0$2)
===============================================================================
  onPreDraw    public onPreDraw()

android.support.v4.app.FragmentTransitionCompat21$3      (com.rubenroy.minimaltodo.eval_q0$3)
===============================================================================
  onGetEpicenter   public onGetEpicenter(android.transition.Transition)

android.support.v4.app.FragmentTransitionCompat21$4      (com.rubenroy.minimaltodo.eval_q0$4)
===============================================================================
  onPreDraw    public onPreDraw()

android.support.v4.app.FragmentTransitionCompat21$EpicenterView  (com.rubenroy.minimaltodo.eval_q0$e)
===============================================================================
  No methods

android.support.v4.app.FragmentTransitionCompat21$Exception      (com.rubenroy.minimaltodo.eval_oy)
===============================================================================
  No methods

android.support.v4.app.FragmentTransitionCompat21$ViewRetriever  (com.rubenroy.minimaltodo.eval_q0$u)
===============================================================================
  i    public abstract getView()

android.support.v4.app.INotificationSideChannel  (com.rubenroy.minimaltodo.eval_sa)
===============================================================================
  a    public abstract cancelAll(java.lang.String)
  h    public abstract notify(java.lang.String,int,java.lang.String,android.app.Notification)
  s    public abstract cancel(java.lang.String,int,java.lang.String)

android.support.v4.app.INotificationSideChannel$ParseException   (com.rubenroy.minimaltodo.eval_hf)
===============================================================================
  No methods

android.support.v4.app.INotificationSideChannel$Stub     (com.rubenroy.minimaltodo.eval_sa$a)
===============================================================================
  a            public abstract cancelAll(java.lang.String)
  h            public abstract notify(java.lang.String,int,java.lang.String,android.app.Notification)
  r            public static asInterface(android.os.IBinder)
  s            public abstract cancel(java.lang.String,int,java.lang.String)
  asBinder     public asBinder()
  onTransact   public onTransact(int,android.os.Parcel,android.os.Parcel,int)

android.support.v4.app.INotificationSideChannel$Stub$ParseException      (com.rubenroy.minimaltodo.eval_c7)
===============================================================================
  No methods

android.support.v4.app.INotificationSideChannel$Stub$Proxy       (com.rubenroy.minimaltodo.eval_sa$a$s)
===============================================================================
  a        public cancelAll(java.lang.String)
  e        public getInterfaceDescriptor()
  h        public notify(java.lang.String,int,java.lang.String,android.app.Notification)
  s        public cancel(java.lang.String,int,java.lang.String)
  asBinder public asBinder()

android.support.v4.app.ListFragment
===============================================================================
  b        public onListItemClick(android.widget.ListView,android.view.View,int,long)
  b        public setListShown(boolean)
  eval_bn  private ensureList()
  eval_e   public onDestroyView()
  eval_i   public setListShownNoAnimation(boolean)
  eval_lh  public getListAdapter()
  eval_o   public setSelection(int)
  eval_rx  public getSelectedItemId()
  g        public onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
  g        private setListShown(boolean,boolean)
  n        public onViewCreated(android.view.View,android.os.Bundle)
  o        public getListView()
  o        public setListAdapter(android.widget.ListAdapter)
  z        public getSelectedItemPosition()
  z        public setEmptyText(java.lang.CharSequence)

android.support.v4.app.ListFragment$1
===============================================================================
  run  public run()

android.support.v4.app.ListFragment$2
===============================================================================
  onItemClick  public onItemClick(android.widget.AdapterView,android.view.View,int,long)

android.support.v4.app.ListFragment$NullPointerException (com.rubenroy.minimaltodo.eval_fe)
===============================================================================
  No methods

android.support.v4.app.LoaderManager     (com.rubenroy.minimaltodo.eval_sd)
===============================================================================
  b    public abstract restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)
  c    public static enableDebugLogging(boolean)
  e    public abstract destroyLoader(int)
  m    public abstract initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)
  s    public abstract getLoader(int)
  t    public abstract dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
  v    public hasRunningLoaders()

android.support.v4.app.LoaderManager$ArrayOutOfBoundsException   (com.rubenroy.minimaltodo.eval_s4)
===============================================================================
  No methods

android.support.v4.app.LoaderManager$LoaderCallbacks     (com.rubenroy.minimaltodo.eval_sd$a)
===============================================================================
  c    public abstract onCreateLoader(int,android.os.Bundle)
  l    public abstract onLoadFinished(android.support.v4.content.Loader,java.lang.Object)
  v    public abstract onLoaderReset(android.support.v4.content.Loader)

android.support.v4.app.LoaderManagerImpl (com.rubenroy.minimaltodo.eval_mn)
===============================================================================
  a        doReportNextStart()
  b        public restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)
  e        doRetain()
  e        public destroyLoader(int)
  eval_a   doStop()
  eval_h   doDestroy()
  eval_t   updateHostController(android.support.v4.app.FragmentHostCallback)
  i        doStart()
  i        private createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)
  j        finishRetain()
  l        installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo)
  m        public initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)
  s        public getLoader(int)
  t        public dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
  v        public hasRunningLoaders()
  y        doReportStart()
  z        static access$000(android.support.v4.app.LoaderManagerImpl)
  z        private createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)
  toString public toString()

android.support.v4.app.LoaderManagerImpl$LoaderInfo      (com.rubenroy.minimaltodo.eval_mn$i)
===============================================================================
  a        callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object)
  d        reportStart()
  eval_x   public onLoadComplete(android.support.v4.content.Loader,java.lang.Object)
  h        public onLoadCanceled(android.support.v4.content.Loader)
  i        start()
  n        destroy()
  p        public dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
  v        cancel()
  w        stop()
  x        retain()
  z        finishRetain()
  toString public toString()

android.support.v4.app.LoaderManagerImpl$NullPointerException    (com.rubenroy.minimaltodo.eval_yr)
===============================================================================
  No methods

android.support.v4.app.NavUtils  (com.rubenroy.minimaltodo.eval_h6)
===============================================================================
  a    public static getParentActivityName(android.app.Activity)
  h    public static getParentActivityName(android.content.Context,android.content.ComponentName)
  n    public static shouldUpRecreateTask(android.app.Activity,android.content.Intent)
  n    public static getParentActivityIntent(android.content.Context,java.lang.Class)
  o    public static navigateUpTo(android.app.Activity,android.content.Intent)
  u    public static getParentActivityIntent(android.content.Context,android.content.ComponentName)
  w    public static navigateUpFromSameTask(android.app.Activity)
  y    public static getParentActivityIntent(android.app.Activity)

android.support.v4.app.NavUtils$ArrayOutOfBoundsException        (com.rubenroy.minimaltodo.eval_s5)
===============================================================================
  No methods

android.support.v4.app.NavUtils$NavUtilsImpl     (com.rubenroy.minimaltodo.eval_h6$q)
===============================================================================
  i    public abstract navigateUpTo(android.app.Activity,android.content.Intent)
  k    public abstract getParentActivityIntent(android.app.Activity)
  v    public abstract shouldUpRecreateTask(android.app.Activity,android.content.Intent)
  w    public abstract getParentActivityName(android.content.Context,android.content.pm.ActivityInfo)

android.support.v4.app.NavUtils$NavUtilsImplBase (com.rubenroy.minimaltodo.eval_h6$eval_x)
===============================================================================
  i    public navigateUpTo(android.app.Activity,android.content.Intent)
  k    public getParentActivityIntent(android.app.Activity)
  v    public shouldUpRecreateTask(android.app.Activity,android.content.Intent)
  w    public getParentActivityName(android.content.Context,android.content.pm.ActivityInfo)

android.support.v4.app.NavUtils$NavUtilsImplJB   (com.rubenroy.minimaltodo.eval_h6$p)
===============================================================================
  h    superGetParentActivityIntent(android.app.Activity)
  i    public navigateUpTo(android.app.Activity,android.content.Intent)
  k    public getParentActivityIntent(android.app.Activity)
  v    public shouldUpRecreateTask(android.app.Activity,android.content.Intent)
  w    public getParentActivityName(android.content.Context,android.content.pm.ActivityInfo)

android.support.v4.app.NavUtilsJB        (com.rubenroy.minimaltodo.eval_jz)
===============================================================================
  q    public static getParentActivityIntent(android.app.Activity)
  t    public static getParentActivityName(android.content.pm.ActivityInfo)
  x    public static navigateUpTo(android.app.Activity,android.content.Intent)
  y    public static shouldUpRecreateTask(android.app.Activity,android.content.Intent)

android.support.v4.app.NavUtilsJB$IOException    (com.rubenroy.minimaltodo.eval_gp)
===============================================================================
  No methods

android.support.v4.app.NoSaveStateFrameLayout    (com.rubenroy.minimaltodo.eval_aa)
===============================================================================
  eval_q                       static wrap(android.view.View)
  dispatchRestoreInstanceState protected dispatchRestoreInstanceState(android.util.SparseArray)
  dispatchSaveInstanceState    protected dispatchSaveInstanceState(android.util.SparseArray)

android.support.v4.app.NoSaveStateFrameLayout$NullPointerException       (com.rubenroy.minimaltodo.eval_gy)
===============================================================================
  No methods

android.support.v4.app.NotificationBuilderWithActions    (com.rubenroy.minimaltodo.eval_z4)
===============================================================================
  y    public abstract addAction(android.support.v4.app.NotificationCompatBase$Action)

android.support.v4.app.NotificationBuilderWithActions$IOException        (com.rubenroy.minimaltodo.eval_yd)
===============================================================================
  No methods

android.support.v4.app.NotificationBuilderWithBuilderAccessor    (com.rubenroy.minimaltodo.eval_ks)
===============================================================================
  l    public abstract build()
  x    public abstract getBuilder()

android.support.v4.app.NotificationBuilderWithBuilderAccessor$ArrayOutOfBoundsException  (com.rubenroy.minimaltodo.eval_ko)
===============================================================================
  No methods

android.support.v4.app.NotificationCompat        (com.rubenroy.minimaltodo.eval_ik)
===============================================================================
  a        public static getActionCount(android.app.Notification)
  c        private static addActionsToBuilder(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList)
  e        public static isGroupSummary(android.app.Notification)
  eval_p   private static addStyleToBuilderJellybean(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style)
  eval_u   public static getLocalOnly(android.app.Notification)
  h        public static getAction(android.app.Notification,int)
  i        public static getExtras(android.app.Notification)
  p        public static getGroup(android.app.Notification)
  q        public static getSortKey(android.app.Notification)
  r        static access$500(android.os.Bundle,java.lang.String)
  r        static access$100(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style)
  t        public static getCategory(android.app.Notification)
  u        static access$200()
  y        static access$000(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList)
  z        private static getNotificationArrayFromBundle(android.os.Bundle,java.lang.String)

android.support.v4.app.NotificationCompat$1      (com.rubenroy.minimaltodo.eval_ik$1)
===============================================================================
  No methods

android.support.v4.app.NotificationCompat$Action (com.rubenroy.minimaltodo.eval_ik$d)
===============================================================================
  a        public getRemoteInputs()
  c        static access$300(android.support.v4.app.NotificationCompat$Action)
  eval_l   public getActionIntent()
  h        public getTitle()
  m        public getExtras()
  z        public getIcon()

android.support.v4.app.NotificationCompat$Action$1       (com.rubenroy.minimaltodo.eval_ik$d$1)
===============================================================================
  k    public newArray(int)
  r    public build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[])

android.support.v4.app.NotificationCompat$Action$Builder (com.rubenroy.minimaltodo.eval_ik$d$n)
===============================================================================
  d    public extend(android.support.v4.app.NotificationCompat$Action$Extender)
  k    public addExtras(android.os.Bundle)
  m    public getExtras()
  o    public addRemoteInput(android.support.v4.app.RemoteInput)
  z    public build()

android.support.v4.app.NotificationCompat$Action$Extender        (com.rubenroy.minimaltodo.eval_ik$d$b)
===============================================================================
  u    public abstract extend(android.support.v4.app.NotificationCompat$Action$Builder)

android.support.v4.app.NotificationCompat$Action$IOException     (com.rubenroy.minimaltodo.eval_vq)
===============================================================================
  No methods

android.support.v4.app.NotificationCompat$Action$WearableExtender        (com.rubenroy.minimaltodo.eval_ik$d$e)
===============================================================================
  a        public setAvailableOffline(boolean)
  c        private setFlag(int,boolean)
  c        public setCancelLabel(java.lang.CharSequence)
  clone    public clone()
  g        public setConfirmLabel(java.lang.CharSequence)
  h        public getCancelLabel()
  l        public getConfirmLabel()
  p        public isAvailableOffline()
  p        public setInProgressLabel(java.lang.CharSequence)
  u        public getInProgressLabel()
  u        public extend(android.support.v4.app.NotificationCompat$Action$Builder)
  clone    public volatile clone()

android.support.v4.app.NotificationCompat$ArrayOutOfBoundsException      (com.rubenroy.minimaltodo.eval_ox)
===============================================================================
  No methods

android.support.v4.app.NotificationCompat$BigPictureStyle        (com.rubenroy.minimaltodo.eval_ik$v)
===============================================================================
  f    public bigPicture(android.graphics.Bitmap)
  i    public setSummaryText(java.lang.CharSequence)
  t    public setBigContentTitle(java.lang.CharSequence)
  x    public bigLargeIcon(android.graphics.Bitmap)

android.support.v4.app.NotificationCompat$BigTextStyle   (com.rubenroy.minimaltodo.eval_ik$eval_g)
===============================================================================
  d    public setBigContentTitle(java.lang.CharSequence)
  h    public bigText(java.lang.CharSequence)
  l    public setSummaryText(java.lang.CharSequence)

android.support.v4.app.NotificationCompat$Builder        (com.rubenroy.minimaltodo.eval_ik$x)
===============================================================================
  a        public setContentText(java.lang.CharSequence)
  b        public setStyle(android.support.v4.app.NotificationCompat$Style)
  c        public setSound(android.net.Uri)
  c        public setUsesChronometer(boolean)
  e        public setPublicVersion(android.app.Notification)
  e        public setDefaults(int)
  e        public setLights(int,int,int)
  eval_b   public setNumber(int)
  eval_c   public build()
  eval_c   public setVisibility(int)
  eval_t   protected static limitCharSequenceLength(java.lang.CharSequence)
  eval_u   protected getExtender()
  f        public getExtras()
  f        public setLargeIcon(android.graphics.Bitmap)
  f        public setSound(android.net.Uri,int)
  f        public setOngoing(boolean)
  f        public addAction(int,java.lang.CharSequence,android.app.PendingIntent)
  f        public setContentInfo(java.lang.CharSequence)
  g        public addPerson(java.lang.String)
  h        public setExtras(android.os.Bundle)
  h        public setContentTitle(java.lang.CharSequence)
  i        public addExtras(android.os.Bundle)
  i        public setLocalOnly(boolean)
  i        public setSubText(java.lang.CharSequence)
  j        public setGroupSummary(boolean)
  k        public setShowWhen(boolean)
  k        public setCategory(java.lang.String)
  k        public setVibrate(long[])
  n        public setContent(android.widget.RemoteViews)
  n        public setPriority(int)
  n        public setSortKey(java.lang.String)
  o        public setWhen(long)
  p        public setOnlyAlertOnce(boolean)
  p        public setColor(int)
  p        public setTicker(java.lang.CharSequence)
  q        public setContentIntent(android.app.PendingIntent)
  s        public setProgress(int,int,boolean)
  t        public setSmallIcon(int,int)
  u        public addAction(android.support.v4.app.NotificationCompat$Action)
  u        private setFlag(int,boolean)
  u        public setTicker(java.lang.CharSequence,android.widget.RemoteViews)
  v        public setAutoCancel(boolean)
  w        public setDeleteIntent(android.app.PendingIntent)
  x        public getNotification()
  y        public setSmallIcon(int)
  y        public setGroup(java.lang.String)
  z        public setFullScreenIntent(android.app.PendingIntent,boolean)
  z        public extend(android.support.v4.app.NotificationCompat$Extender)

android.support.v4.app.NotificationCompat$BuilderExtender        (com.rubenroy.minimaltodo.eval_ik$s)
===============================================================================
  j    public build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationBuilderWithBuilderAccessor)

android.support.v4.app.NotificationCompat$CarExtender    (com.rubenroy.minimaltodo.eval_ik$h)
===============================================================================
  a        public setColor(int)
  d        public setUnreadConversation(android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation)
  eval_b   public getUnreadConversation()
  g        public setLargeIcon(android.graphics.Bitmap)
  h        public getColor()
  j        public extend(android.support.v4.app.NotificationCompat$Builder)
  y        public getLargeIcon()

android.support.v4.app.NotificationCompat$CarExtender$IOException        (com.rubenroy.minimaltodo.eval_eg)
===============================================================================
  No methods

android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation (com.rubenroy.minimaltodo.eval_ik$h$z)
===============================================================================
  c        public getParticipants()
  eval_n   public getParticipant()
  eval_x   public getLatestTimestamp()
  j        public getRemoteInput()
  n        public getMessages()
  p        public getReadPendingIntent()
  u        public getReplyPendingIntent()

android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$1       (com.rubenroy.minimaltodo.eval_ik$h$z$1)
===============================================================================
  b    public build(java.lang.String[],android.support.v4.app.RemoteInputCompatBase$RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long)

android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder (com.rubenroy.minimaltodo.eval_ik$h$z$o)
===============================================================================
  d    public setReplyAction(android.app.PendingIntent,android.support.v4.app.RemoteInput)
  d    public addMessage(java.lang.String)
  j    public build()
  n    public setLatestTimestamp(long)
  y    public setReadPendingIntent(android.app.PendingIntent)

android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$ParseException  (com.rubenroy.minimaltodo.eval_wu)
===============================================================================
  No methods

android.support.v4.app.NotificationCompat$Extender       (com.rubenroy.minimaltodo.eval_ik$_)
===============================================================================
  j    public abstract extend(android.support.v4.app.NotificationCompat$Builder)

android.support.v4.app.NotificationCompat$InboxStyle     (com.rubenroy.minimaltodo.eval_ik$i)
===============================================================================
  a    public addLine(java.lang.CharSequence)
  j    public setBigContentTitle(java.lang.CharSequence)
  l    public setSummaryText(java.lang.CharSequence)

android.support.v4.app.NotificationCompat$NotificationCompatImpl (com.rubenroy.minimaltodo.eval_ik$c)
===============================================================================
  b        public abstract getExtras(android.app.Notification)
  c        public abstract getAction(android.app.Notification,int)
  d        public abstract getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[])
  eval_e   public abstract getGroup(android.app.Notification)
  h        public abstract getCategory(android.app.Notification)
  l        public abstract getLocalOnly(android.app.Notification)
  m        public abstract getSortKey(android.app.Notification)
  q        public abstract getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory)
  t        public abstract isGroupSummary(android.app.Notification)
  u        public abstract build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender)
  w        public abstract getActionsFromParcelableArrayList(java.util.ArrayList)
  x        public abstract getActionCount(android.app.Notification)
  x        public abstract getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation)

android.support.v4.app.NotificationCompat$NotificationCompatImplApi20    (com.rubenroy.minimaltodo.eval_ik$q)
===============================================================================
  c        public getAction(android.app.Notification,int)
  d        public getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[])
  eval_e   public getGroup(android.app.Notification)
  l        public getLocalOnly(android.app.Notification)
  m        public getSortKey(android.app.Notification)
  t        public isGroupSummary(android.app.Notification)
  u        public build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender)
  w        public getActionsFromParcelableArrayList(java.util.ArrayList)

android.support.v4.app.NotificationCompat$NotificationCompatImplApi21    (com.rubenroy.minimaltodo.eval_ik$eval_v)
===============================================================================
  h    public getCategory(android.app.Notification)
  q    public getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory)
  u    public build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender)
  x    public getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation)

android.support.v4.app.NotificationCompat$NotificationCompatImplBase     (com.rubenroy.minimaltodo.eval_ik$w)
===============================================================================
  b        public getExtras(android.app.Notification)
  c        public getAction(android.app.Notification,int)
  d        public getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[])
  eval_e   public getGroup(android.app.Notification)
  h        public getCategory(android.app.Notification)
  l        public getLocalOnly(android.app.Notification)
  m        public getSortKey(android.app.Notification)
  q        public getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory)
  t        public isGroupSummary(android.app.Notification)
  u        public build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender)
  w        public getActionsFromParcelableArrayList(java.util.ArrayList)
  x        public getActionCount(android.app.Notification)
  x        public getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation)

android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread      (com.rubenroy.minimaltodo.eval_ik$eval_r)
===============================================================================
  u    public build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender)

android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb        (com.rubenroy.minimaltodo.eval_ik$eval_u)
===============================================================================
  u    public build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender)

android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich (com.rubenroy.minimaltodo.eval_ik$f)
===============================================================================
  u    public build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender)

android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean        (com.rubenroy.minimaltodo.eval_ik$y)
===============================================================================
  b        public getExtras(android.app.Notification)
  c        public getAction(android.app.Notification,int)
  d        public getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[])
  eval_e   public getGroup(android.app.Notification)
  l        public getLocalOnly(android.app.Notification)
  m        public getSortKey(android.app.Notification)
  t        public isGroupSummary(android.app.Notification)
  u        public build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender)
  w        public getActionsFromParcelableArrayList(java.util.ArrayList)
  x        public getActionCount(android.app.Notification)

android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat   (com.rubenroy.minimaltodo.eval_ik$l)
===============================================================================
  b        public getExtras(android.app.Notification)
  c        public getAction(android.app.Notification,int)
  eval_e   public getGroup(android.app.Notification)
  l        public getLocalOnly(android.app.Notification)
  m        public getSortKey(android.app.Notification)
  t        public isGroupSummary(android.app.Notification)
  u        public build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender)
  x        public getActionCount(android.app.Notification)

android.support.v4.app.NotificationCompat$Style  (com.rubenroy.minimaltodo.eval_ik$eval_m)
===============================================================================
  i    public build()
  v    public setBuilder(android.support.v4.app.NotificationCompat$Builder)

android.support.v4.app.NotificationCompat$WearableExtender       (com.rubenroy.minimaltodo.eval_ik$a)
===============================================================================
  a        public getHintShowBackgroundOnly()
  a        public setCustomSizePreset(int)
  b        public clearPages()
  b        public setHintShowBackgroundOnly(boolean)
  c        public setContentIcon(int)
  clone    public clone()
  d        public getCustomSizePreset()
  e        public getHintAvoidBackgroundClipping()
  eval_c   public getHintHideIcon()
  eval_e   public setGravity(int)
  eval_k   public getHintScreenTimeout()
  eval_k   public setHintScreenTimeout(int)
  eval_l   public getGravity()
  eval_o   public getStartScrollBottom()
  eval_y   public getDisplayIntent()
  f        public setContentIconGravity(int)
  h        public getContentIntentAvailableOffline()
  h        public setCustomContentHeight(int)
  i        public getContentIconGravity()
  i        public setHintAvoidBackgroundClipping(boolean)
  j        public extend(android.support.v4.app.NotificationCompat$Builder)
  k        public getCustomContentHeight()
  k        private setFlag(int,boolean)
  l        public addPage(android.app.Notification)
  m        public setStartScrollBottom(boolean)
  o        public getContentIcon()
  p        public getActions()
  p        public setBackground(android.graphics.Bitmap)
  r        public setDisplayIntent(android.app.PendingIntent)
  s        public getContentAction()
  t        public getBackground()
  t        public addAction(android.support.v4.app.NotificationCompat$Action)
  u        public clearActions()
  u        public setContentIntentAvailableOffline(boolean)
  v        public addPages(java.util.List)
  w        public setHintHideIcon(boolean)
  w        public addActions(java.util.List)
  x        public getPages()
  z        public setContentAction(int)
  clone    public volatile clone()

android.support.v4.app.NotificationCompatApi20   (com.rubenroy.minimaltodo.eval_n2)
===============================================================================
  a        private static getActionCompatFromAction(android.app.Notification$Action,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory)
  a        public static getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory)
  eval_c   public static addAction(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action)
  eval_h   public static getGroup(android.app.Notification)
  n        public static isGroupSummary(android.app.Notification)
  n        private static getActionFromActionCompat(android.support.v4.app.NotificationCompatBase$Action)
  p        public static getSortKey(android.app.Notification)
  r        public static getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory)
  v        public static getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[])
  x        public static getLocalOnly(android.app.Notification)

android.support.v4.app.NotificationCompatApi20$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_h8)
===============================================================================
  No methods

android.support.v4.app.NotificationCompatApi20$Builder   (com.rubenroy.minimaltodo.eval_n2$q)
===============================================================================
  l    public build()
  x    public getBuilder()
  y    public addAction(android.support.v4.app.NotificationCompatBase$Action)

android.support.v4.app.NotificationCompatApi21   (com.rubenroy.minimaltodo.eval_ug)
===============================================================================
  eval_y   private static toCompatRemoteInput(android.app.RemoteInput,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory)
  m        static getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation)
  m        private static fromCompatRemoteInput(android.support.v4.app.RemoteInputCompatBase$RemoteInput)
  o        public static getCategory(android.app.Notification)
  o        static getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory)

android.support.v4.app.NotificationCompatApi21$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_b0)
===============================================================================
  No methods

android.support.v4.app.NotificationCompatApi21$Builder   (com.rubenroy.minimaltodo.eval_ug$b)
===============================================================================
  l    public build()
  x    public getBuilder()
  y    public addAction(android.support.v4.app.NotificationCompatBase$Action)

android.support.v4.app.NotificationCompatBase    (com.rubenroy.minimaltodo.eval_tu)
===============================================================================
  No methods

android.support.v4.app.NotificationCompatBase$Action     (com.rubenroy.minimaltodo.eval_tu$a)
===============================================================================
  a        public abstract getRemoteInputs()
  eval_l   public abstract getActionIntent()
  h        public abstract getTitle()
  m        public abstract getExtras()
  z        public abstract getIcon()

android.support.v4.app.NotificationCompatBase$Action$Factory     (com.rubenroy.minimaltodo.eval_tu$a$f)
===============================================================================
  k    public abstract newArray(int)
  r    public abstract build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[])

android.support.v4.app.NotificationCompatBase$Action$ParseException      (com.rubenroy.minimaltodo.eval_ts)
===============================================================================
  No methods

android.support.v4.app.NotificationCompatBase$NullPointerException       (com.rubenroy.minimaltodo.eval_m3)
===============================================================================
  No methods

android.support.v4.app.NotificationCompatBase$UnreadConversation (com.rubenroy.minimaltodo.eval_tu$f)
===============================================================================
  c        abstract getParticipants()
  eval_n   abstract getParticipant()
  eval_x   abstract getLatestTimestamp()
  j        abstract getRemoteInput()
  n        abstract getMessages()
  p        abstract getReadPendingIntent()
  u        abstract getReplyPendingIntent()

android.support.v4.app.NotificationCompatBase$UnreadConversation$Exception       (com.rubenroy.minimaltodo.eval_vf)
===============================================================================
  No methods

android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory (com.rubenroy.minimaltodo.eval_tu$f$r)
===============================================================================
  b    public abstract build(java.lang.String[],android.support.v4.app.RemoteInputCompatBase$RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long)

android.support.v4.app.NotificationCompatExtras  (com.rubenroy.minimaltodo.eval_hm)
===============================================================================
  No methods

android.support.v4.app.NotificationCompatExtras$ParseException   (com.rubenroy.minimaltodo.eval_r3)
===============================================================================
  No methods

android.support.v4.app.NotificationCompatGingerbread     (com.rubenroy.minimaltodo.eval_o1)
===============================================================================
  q    public static add(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,android.app.PendingIntent)

android.support.v4.app.NotificationCompatGingerbread$ParseException      (com.rubenroy.minimaltodo.eval_ed)
===============================================================================
  No methods

android.support.v4.app.NotificationCompatHoneycomb       (com.rubenroy.minimaltodo.eval_nq)
===============================================================================
  d    static add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap)

android.support.v4.app.NotificationCompatHoneycomb$NullPointerException  (com.rubenroy.minimaltodo.eval_tm)
===============================================================================
  No methods

android.support.v4.app.NotificationCompatIceCreamSandwich        (com.rubenroy.minimaltodo.eval_sl)
===============================================================================
  No methods

android.support.v4.app.NotificationCompatIceCreamSandwich$Builder        (com.rubenroy.minimaltodo.eval_sl$h)
===============================================================================
  l    public build()
  x    public getBuilder()

android.support.v4.app.NotificationCompatIceCreamSandwich$ParseException (com.rubenroy.minimaltodo.eval_bi)
===============================================================================
  No methods

android.support.v4.app.NotificationCompatJellybean       (com.rubenroy.minimaltodo.eval_p3)
===============================================================================
  a        public static getSortKey(android.app.Notification)
  a        private static getActionFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory)
  b        private static getActionObjectsLocked(android.app.Notification)
  b        public static writeActionAndGetExtras(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action)
  e        public static addBigTextStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence)
  eval_f   public static addInboxStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList)
  h        public static getExtras(android.app.Notification)
  i        public static isGroupSummary(android.app.Notification)
  j        public static addBigPictureStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean)
  k        public static getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory)
  m        public static getGroup(android.app.Notification)
  m        public static getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[])
  p        public static getActionCount(android.app.Notification)
  r        public static buildActionExtrasMap(java.util.List)
  t        public static getLocalOnly(android.app.Notification)
  t        private static getBundleForAction(android.support.v4.app.NotificationCompatBase$Action)
  t        public static getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory)
  u        private static ensureActionReflectionReadyLocked()
  x        public static readAction(android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory,int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle)

android.support.v4.app.NotificationCompatJellybean$Builder       (com.rubenroy.minimaltodo.eval_p3$r)
===============================================================================
  l    public build()
  x    public getBuilder()
  y    public addAction(android.support.v4.app.NotificationCompatBase$Action)

android.support.v4.app.NotificationCompatJellybean$NullPointerException  (com.rubenroy.minimaltodo.eval_v_)
===============================================================================
  No methods

android.support.v4.app.NotificationCompatKitKat  (com.rubenroy.minimaltodo.eval_s7)
===============================================================================
  eval_q   public static getGroup(android.app.Notification)
  f        public static getExtras(android.app.Notification)
  h        public static getSortKey(android.app.Notification)
  j        public static getActionCount(android.app.Notification)
  m        public static isGroupSummary(android.app.Notification)
  p        public static getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory)
  v        public static getLocalOnly(android.app.Notification)

android.support.v4.app.NotificationCompatKitKat$Builder  (com.rubenroy.minimaltodo.eval_s7$l)
===============================================================================
  l    public build()
  x    public getBuilder()
  y    public addAction(android.support.v4.app.NotificationCompatBase$Action)

android.support.v4.app.NotificationCompatKitKat$ParseException   (com.rubenroy.minimaltodo.eval_kn)
===============================================================================
  No methods

android.support.v4.app.NotificationCompatSideChannelService      (com.rubenroy.minimaltodo.eval_sj)
===============================================================================
  b        public abstract notify(java.lang.String,int,java.lang.String,android.app.Notification)
  f        static access$100(android.support.v4.app.NotificationCompatSideChannelService,int,java.lang.String)
  k        public abstract cancelAll(java.lang.String)
  o        private checkPermission(int,java.lang.String)
  p        public abstract cancel(java.lang.String,int,java.lang.String)
  onBind   public onBind(android.content.Intent)

android.support.v4.app.NotificationCompatSideChannelService$1    (com.rubenroy.minimaltodo.eval_sj$1)
===============================================================================
  No methods

android.support.v4.app.NotificationCompatSideChannelService$Exception    (com.rubenroy.minimaltodo.eval_cs)
===============================================================================
  No methods

android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub  (com.rubenroy.minimaltodo.eval_sj$v)
===============================================================================
  a    public cancelAll(java.lang.String)
  h    public notify(java.lang.String,int,java.lang.String,android.app.Notification)
  s    public cancel(java.lang.String,int,java.lang.String)

android.support.v4.app.NotificationManagerCompat (com.rubenroy.minimaltodo.eval_fr)
===============================================================================
  d    public static from(android.content.Context)
  f    public static getEnabledListenerPackages(android.content.Context)
  g    private pushSideChannelQueue(android.support.v4.app.NotificationManagerCompat$Task)
  h    private static useSideChannelForNotification(android.app.Notification)
  i    public cancel(int)
  l    static access$000()
  o    public notify(java.lang.String,int,android.app.Notification)
  p    public cancel(java.lang.String,int)
  w    public notify(int,android.app.Notification)
  y    public cancelAll()

android.support.v4.app.NotificationManagerCompat$CancelTask      (com.rubenroy.minimaltodo.eval_fr$y)
===============================================================================
  g        public send(android.support.v4.app.INotificationSideChannel)
  toString public toString()

android.support.v4.app.NotificationManagerCompat$IOException     (com.rubenroy.minimaltodo.eval_si)
===============================================================================
  No methods

android.support.v4.app.NotificationManagerCompat$Impl    (com.rubenroy.minimaltodo.eval_fr$n)
===============================================================================
  h    public abstract postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification)
  k    public abstract getSideChannelBindFlags()
  v    public abstract cancelNotification(android.app.NotificationManager,java.lang.String,int)

android.support.v4.app.NotificationManagerCompat$ImplBase        (com.rubenroy.minimaltodo.eval_fr$e)
===============================================================================
  h    public postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification)
  k    public getSideChannelBindFlags()
  v    public cancelNotification(android.app.NotificationManager,java.lang.String,int)

android.support.v4.app.NotificationManagerCompat$ImplEclair      (com.rubenroy.minimaltodo.eval_fr$eval_j)
===============================================================================
  h    public postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification)
  v    public cancelNotification(android.app.NotificationManager,java.lang.String,int)

android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich    (com.rubenroy.minimaltodo.eval_fr$b)
===============================================================================
  k    public getSideChannelBindFlags()

android.support.v4.app.NotificationManagerCompat$NotifyTask      (com.rubenroy.minimaltodo.eval_fr$eval_m)
===============================================================================
  g        public send(android.support.v4.app.INotificationSideChannel)
  toString public toString()

android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent   (com.rubenroy.minimaltodo.eval_fr$eval_g)
===============================================================================
  No methods

android.support.v4.app.NotificationManagerCompat$SideChannelManager      (com.rubenroy.minimaltodo.eval_fr$i)
===============================================================================
  e                        private processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
  g                        private updateListenerMap()
  g                        private handleServiceDisconnected(android.content.ComponentName)
  g                        private ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
  k                        private handleQueueTask(android.support.v4.app.NotificationManagerCompat$Task)
  l                        private handleRetryListenerQueue(android.content.ComponentName)
  r                        private ensureServiceUnbound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
  t                        private scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
  v                        private handleServiceConnected(android.content.ComponentName,android.os.IBinder)
  w                        public queueTask(android.support.v4.app.NotificationManagerCompat$Task)
  handleMessage            public handleMessage(android.os.Message)
  onServiceConnected       public onServiceConnected(android.content.ComponentName,android.os.IBinder)
  onServiceDisconnected    public onServiceDisconnected(android.content.ComponentName)

android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord       (com.rubenroy.minimaltodo.eval_fr$i$p)
===============================================================================
  No methods

android.support.v4.app.NotificationManagerCompat$SideChannelManager$ParseException       (com.rubenroy.minimaltodo.eval_ns)
===============================================================================
  No methods

android.support.v4.app.NotificationManagerCompat$Task    (com.rubenroy.minimaltodo.eval_fr$eval_q)
===============================================================================
  g    public abstract send(android.support.v4.app.INotificationSideChannel)

android.support.v4.app.NotificationManagerCompatEclair   (com.rubenroy.minimaltodo.eval_r6)
===============================================================================
  m    public static postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification)
  s    static cancelNotification(android.app.NotificationManager,java.lang.String,int)

android.support.v4.app.NotificationManagerCompatEclair$Exception (com.rubenroy.minimaltodo.eval_r7)
===============================================================================
  No methods

android.support.v4.app.NotificationManagerCompatIceCreamSandwich (com.rubenroy.minimaltodo.eval_ng)
===============================================================================
  No methods

android.support.v4.app.NotificationManagerCompatIceCreamSandwich$Exception       (com.rubenroy.minimaltodo.eval_fi)
===============================================================================
  No methods

android.support.v4.app.RemoteInput       (com.rubenroy.minimaltodo.eval_do)
===============================================================================
  c    public getLabel()
  g    public getChoices()
  i    public getAllowFreeFormInput()
  k    public getResultKey()
  m    public static addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle)
  s    public getExtras()
  u    public static getResultsFromIntent(android.content.Intent)

android.support.v4.app.RemoteInput$1     (com.rubenroy.minimaltodo.eval_do$1)
===============================================================================
  p    public build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle)
  q    public newArray(int)

android.support.v4.app.RemoteInput$Builder       (com.rubenroy.minimaltodo.eval_do$n)
===============================================================================
  a    public setLabel(java.lang.CharSequence)
  b    public getExtras()
  r    public addExtras(android.os.Bundle)
  s    public build()
  w    public setChoices(java.lang.CharSequence[])
  z    public setAllowFreeFormInput(boolean)

android.support.v4.app.RemoteInput$Exception     (com.rubenroy.minimaltodo.eval_vl)
===============================================================================
  No methods

android.support.v4.app.RemoteInput$Impl  (com.rubenroy.minimaltodo.eval_do$s)
===============================================================================
  s    public abstract getResultsFromIntent(android.content.Intent)
  w    public abstract addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle)

android.support.v4.app.RemoteInput$ImplApi20     (com.rubenroy.minimaltodo.eval_do$m)
===============================================================================
  s    public getResultsFromIntent(android.content.Intent)
  w    public addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle)

android.support.v4.app.RemoteInput$ImplBase      (com.rubenroy.minimaltodo.eval_do$h)
===============================================================================
  s    public getResultsFromIntent(android.content.Intent)
  w    public addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle)

android.support.v4.app.RemoteInput$ImplJellybean (com.rubenroy.minimaltodo.eval_do$eval_n)
===============================================================================
  s    public getResultsFromIntent(android.content.Intent)
  w    public addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle)

android.support.v4.app.RemoteInputCompatApi20    (com.rubenroy.minimaltodo.eval_fu)
===============================================================================
  a    static getResultsFromIntent(android.content.Intent)
  n    static toCompat(android.app.RemoteInput[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory)
  n    static fromCompat(android.support.v4.app.RemoteInputCompatBase$RemoteInput[])
  z    static addResultsToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.content.Intent,android.os.Bundle)

android.support.v4.app.RemoteInputCompatApi20$NullPointerException       (com.rubenroy.minimaltodo.eval_me)
===============================================================================
  No methods

android.support.v4.app.RemoteInputCompatBase     (com.rubenroy.minimaltodo.eval_e6)
===============================================================================
  No methods

android.support.v4.app.RemoteInputCompatBase$Exception   (com.rubenroy.minimaltodo.eval_pr)
===============================================================================
  No methods

android.support.v4.app.RemoteInputCompatBase$RemoteInput (com.rubenroy.minimaltodo.eval_e6$h)
===============================================================================
  c    protected abstract getLabel()
  g    protected abstract getChoices()
  i    protected abstract getAllowFreeFormInput()
  k    protected abstract getResultKey()
  s    protected abstract getExtras()

android.support.v4.app.RemoteInputCompatBase$RemoteInput$ArrayOutOfBoundsException       (com.rubenroy.minimaltodo.eval_pf)
===============================================================================
  No methods

android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory (com.rubenroy.minimaltodo.eval_e6$h$n)
===============================================================================
  p    public abstract build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle)
  q    public abstract newArray(int)

android.support.v4.app.RemoteInputCompatJellybean        (com.rubenroy.minimaltodo.eval_nr)
===============================================================================
  i    static fromBundle(android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory)
  i    static addResultsToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.content.Intent,android.os.Bundle)
  k    static toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput)
  k    static toBundleArray(android.support.v4.app.RemoteInputCompatBase$RemoteInput[])
  w    static getResultsFromIntent(android.content.Intent)
  x    static fromBundleArray(android.os.Bundle[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory)

android.support.v4.app.RemoteInputCompatJellybean$Exception      (com.rubenroy.minimaltodo.eval_o6)
===============================================================================
  No methods

android.support.v4.app.ServiceCompat     (com.rubenroy.minimaltodo.eval_ql)
===============================================================================
  No methods

android.support.v4.app.ServiceCompat$ArrayOutOfBoundsException   (com.rubenroy.minimaltodo.eval_a_)
===============================================================================
  No methods

android.support.v4.app.ShareCompat       (com.rubenroy.minimaltodo.eval_xw)
===============================================================================
  f    public static getCallingActivity(android.app.Activity)
  l    static access$000()
  l    public static getCallingPackage(android.app.Activity)
  p    public static configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder)
  z    public static configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder)

android.support.v4.app.ShareCompat$Exception     (com.rubenroy.minimaltodo.eval_ax)
===============================================================================
  No methods

android.support.v4.app.ShareCompat$IntentBuilder (com.rubenroy.minimaltodo.eval_xw$u)
===============================================================================
  a        public setEmailBcc(java.lang.String[])
  c        public setHtmlText(java.lang.String)
  d        public addEmailCc(java.lang.String)
  d        public addEmailBcc(java.lang.String[])
  eval_e   public createChooserIntent()
  eval_y   public addEmailCc(java.lang.String[])
  f        private combineArrayExtra(java.lang.String,java.util.ArrayList)
  g        public setStream(android.net.Uri)
  g        public setType(java.lang.String)
  h        public startChooser()
  h        public setEmailCc(java.lang.String[])
  i        public addStream(android.net.Uri)
  i        public setEmailTo(java.lang.String[])
  j        getActivity()
  k        public static from(android.app.Activity)
  m        public setSubject(java.lang.String)
  o        public setChooserTitle(int)
  p        public getIntent()
  p        public setText(java.lang.CharSequence)
  p        private combineArrayExtra(java.lang.String,java.lang.String[])
  r        public setChooserTitle(java.lang.CharSequence)
  r        public addEmailTo(java.lang.String)
  s        public addEmailTo(java.lang.String[])
  x        public addEmailBcc(java.lang.String)

android.support.v4.app.ShareCompat$IntentReader  (com.rubenroy.minimaltodo.eval_xw$o)
===============================================================================
  b        public isMultipleShare()
  d        public getCallingApplicationLabel()
  e        public getText()
  e        public static from(android.app.Activity)
  eval_i   public getCallingApplicationIcon()
  eval_r   public getSubject()
  eval_x   public getHtmlText()
  eval_z   public getEmailCc()
  f        public isSingleShare()
  i        public getStream(int)
  j        public getType()
  l        public getCallingActivity()
  p        public getEmailTo()
  q        public isShareIntent()
  s        public getCallingPackage()
  u        public getEmailBcc()
  w        public getStreamCount()
  x        public getCallingActivityIcon()
  z        public getStream()

android.support.v4.app.ShareCompat$ShareCompatImpl       (com.rubenroy.minimaltodo.eval_xw$q)
===============================================================================
  a    public abstract escapeHtml(java.lang.CharSequence)
  n    public abstract configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder)

android.support.v4.app.ShareCompat$ShareCompatImplBase   (com.rubenroy.minimaltodo.eval_xw$f)
===============================================================================
  a    public escapeHtml(java.lang.CharSequence)
  n    public configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder)
  q    private static withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int)

android.support.v4.app.ShareCompat$ShareCompatImplICS    (com.rubenroy.minimaltodo.eval_xw$eval_g)
===============================================================================
  h    shouldAddChooserIntent(android.view.MenuItem)
  n    public configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder)

android.support.v4.app.ShareCompat$ShareCompatImplJB     (com.rubenroy.minimaltodo.eval_xw$eval_n)
===============================================================================
  a    public escapeHtml(java.lang.CharSequence)
  h    shouldAddChooserIntent(android.view.MenuItem)

android.support.v4.app.ShareCompatICS    (com.rubenroy.minimaltodo.eval_vy)
===============================================================================
  c    public static configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent)

android.support.v4.app.ShareCompatICS$ParseException     (com.rubenroy.minimaltodo.eval_cf)
===============================================================================
  No methods

android.support.v4.app.ShareCompatJB     (com.rubenroy.minimaltodo.eval_dl)
===============================================================================
  e    public static escapeHtml(java.lang.CharSequence)

android.support.v4.app.ShareCompatJB$ArrayOutOfBoundsException   (com.rubenroy.minimaltodo.eval_un)
===============================================================================
  No methods

android.support.v4.app.SharedElementCallback     (com.rubenroy.minimaltodo.eval_ir)
===============================================================================
  a        public onRejectSharedElements(java.util.List)
  eval_e   private static createDrawableBitmap(android.graphics.drawable.Drawable)
  eval_l   public onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)
  t        public onSharedElementEnd(java.util.List,java.util.List,java.util.List)
  u        public onSharedElementStart(java.util.List,java.util.List,java.util.List)
  v        public onCreateSnapshotView(android.content.Context,android.os.Parcelable)
  x        public onMapSharedElements(java.util.List,java.util.Map)

android.support.v4.app.SharedElementCallback$Exception   (com.rubenroy.minimaltodo.eval_gw)
===============================================================================
  No methods

android.support.v4.app.SuperNotCalledException   (com.rubenroy.minimaltodo.eval_ua)
===============================================================================
  No methods

android.support.v4.app.SuperNotCalledException$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_aj)
===============================================================================
  No methods

android.support.v4.app.TaskStackBuilder  (com.rubenroy.minimaltodo.eval_zr)
===============================================================================
  d        public addParentStack(android.app.Activity)
  d        public static from(android.content.Context)
  d        public addNextIntent(android.content.Intent)
  d        public startActivities(android.os.Bundle)
  eval_g   public getPendingIntent(int,int)
  eval_t   public getIntent(int)
  f        public startActivities()
  f        public addParentStack(android.content.ComponentName)
  i        public addNextIntentWithParentStack(android.content.Intent)
  i        public editIntentAt(int)
  i        public getPendingIntent(int,int,android.os.Bundle)
  k        public static create(android.content.Context)
  m        public getIntentCount()
  p        public addParentStack(java.lang.Class)
  z        public getIntents()
  iterator public iterator()

android.support.v4.app.TaskStackBuilder$Exception        (com.rubenroy.minimaltodo.eval_om)
===============================================================================
  No methods

android.support.v4.app.TaskStackBuilder$SupportParentable        (com.rubenroy.minimaltodo.eval_zr$u)
===============================================================================
  eval_t   public abstract getSupportParentActivityIntent()

android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl     (com.rubenroy.minimaltodo.eval_zr$o)
===============================================================================
  d    public abstract getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle)

android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase (com.rubenroy.minimaltodo.eval_zr$c)
===============================================================================
  d    public getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle)

android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb    (com.rubenroy.minimaltodo.eval_zr$_)
===============================================================================
  d    public getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle)

android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean    (com.rubenroy.minimaltodo.eval_zr$a)
===============================================================================
  d    public getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle)

android.support.v4.app.TaskStackBuilderHoneycomb (com.rubenroy.minimaltodo.eval_tq)
===============================================================================
  b    public static getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int)

android.support.v4.app.TaskStackBuilderHoneycomb$IOException     (com.rubenroy.minimaltodo.eval_tl)
===============================================================================
  No methods

android.support.v4.app.TaskStackBuilderJellybean (com.rubenroy.minimaltodo.eval_ib)
===============================================================================
  d    public static getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle)

android.support.v4.app.TaskStackBuilderJellybean$IOException     (com.rubenroy.minimaltodo.eval_zk)
===============================================================================
  No methods

android.support.v4.content.AsyncTaskLoader       (com.rubenroy.minimaltodo.eval_kt)
===============================================================================
  eval_g   protected onCancelLoad()
  f        dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object)
  i        public cancelLoadInBackground()
  j        executePendingTask()
  l        protected onForceLoad()
  m        public abstract loadInBackground()
  o        public onCanceled(java.lang.Object)
  r        dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object)
  v        public setUpdateThrottle(long)
  w        public waitForLoader()
  y        public isLoadInBackgroundCanceled()
  y        public dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
  z        protected onLoadInBackground()

android.support.v4.content.AsyncTaskLoader$LoadTask      (com.rubenroy.minimaltodo.eval_kt$f)
===============================================================================
  eval_q   protected volatile doInBackground(java.lang.Object[])
  r        protected onPostExecute(java.lang.Object)
  t        protected onCancelled(java.lang.Object)
  w        public waitForLoader()
  y        protected transient doInBackground(java.lang.Void[])
  run      public run()

android.support.v4.content.AsyncTaskLoader$ParseException        (com.rubenroy.minimaltodo.eval_so)
===============================================================================
  No methods

android.support.v4.content.ContentResolverCompat (com.rubenroy.minimaltodo.eval_d2)
===============================================================================
  x    public static query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.support.v4.os.CancellationSignal)

android.support.v4.content.ContentResolverCompat$ContentResolverCompatImpl       (com.rubenroy.minimaltodo.eval_d2$i)
===============================================================================
  c    public abstract query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.support.v4.os.CancellationSignal)

android.support.v4.content.ContentResolverCompat$ContentResolverCompatImplBase   (com.rubenroy.minimaltodo.eval_d2$f)
===============================================================================
  c    public query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.support.v4.os.CancellationSignal)

android.support.v4.content.ContentResolverCompat$ContentResolverCompatImplJB     (com.rubenroy.minimaltodo.eval_d2$n)
===============================================================================
  c    public query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.support.v4.os.CancellationSignal)

android.support.v4.content.ContentResolverCompat$IOException     (com.rubenroy.minimaltodo.eval__f)
===============================================================================
  No methods

android.support.v4.content.ContentResolverCompatJellybean        (com.rubenroy.minimaltodo.eval_rq)
===============================================================================
  eval_q   static isFrameworkOperationCanceledException(java.lang.Exception)
  m        public static query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.Object)

android.support.v4.content.ContentResolverCompatJellybean$ParseException (com.rubenroy.minimaltodo.eval_m9)
===============================================================================
  No methods

android.support.v4.content.ContextCompat (com.rubenroy.minimaltodo.eval_y_)
===============================================================================
  b        public static final getColorStateList(android.content.Context,int)
  d        public final getNoBackupFilesDir(android.content.Context)
  eval_g   public final getCodeCacheDir(android.content.Context)
  j        private static transient buildPath(java.io.File,java.lang.String[])
  k        public static getObbDirs(android.content.Context)
  l        public static getExternalCacheDirs(android.content.Context)
  m        public static getExternalFilesDirs(android.content.Context,java.lang.String)
  n        public static final getDrawable(android.content.Context,int)
  p        public static final getColor(android.content.Context,int)
  q        public static startActivities(android.content.Context,android.content.Intent[])
  r        public static startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
  x        private static synchronized createFilesDir(java.io.File)
  y        public static checkSelfPermission(android.content.Context,java.lang.String)

android.support.v4.content.ContextCompat$NullPointerException    (com.rubenroy.minimaltodo.eval_sk)
===============================================================================
  No methods

android.support.v4.content.ContextCompatApi21    (com.rubenroy.minimaltodo.eval_i6)
===============================================================================
  c    public static getNoBackupFilesDir(android.content.Context)
  n    public static getDrawable(android.content.Context,int)
  y    public static getCodeCacheDir(android.content.Context)

android.support.v4.content.ContextCompatApi21$NullPointerException       (com.rubenroy.minimaltodo.eval_mj)
===============================================================================
  No methods

android.support.v4.content.ContextCompatApi23    (com.rubenroy.minimaltodo.eval_zj)
===============================================================================
  e    public static getColorStateList(android.content.Context,int)
  n    public static getColor(android.content.Context,int)

android.support.v4.content.ContextCompatApi23$NullPointerException       (com.rubenroy.minimaltodo.eval_mr)
===============================================================================
  No methods

android.support.v4.content.ContextCompatFroyo    (com.rubenroy.minimaltodo.eval_x8)
===============================================================================
  a    public static getExternalCacheDir(android.content.Context)
  m    public static getExternalFilesDir(android.content.Context,java.lang.String)

android.support.v4.content.ContextCompatFroyo$NullPointerException       (com.rubenroy.minimaltodo.eval_cv)
===============================================================================
  No methods

android.support.v4.content.ContextCompatHoneycomb        (com.rubenroy.minimaltodo.eval_cg)
===============================================================================
  eval_e   static startActivities(android.content.Context,android.content.Intent[])
  z        public static getObbDir(android.content.Context)

android.support.v4.content.ContextCompatHoneycomb$Exception      (com.rubenroy.minimaltodo.eval_xm)
===============================================================================
  No methods

android.support.v4.content.ContextCompatJellybean        (com.rubenroy.minimaltodo.eval_iu)
===============================================================================
  p    public static startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)

android.support.v4.content.ContextCompatJellybean$Exception      (com.rubenroy.minimaltodo.eval_k9)
===============================================================================
  No methods

android.support.v4.content.ContextCompatKitKat   (com.rubenroy.minimaltodo.eval_z9)
===============================================================================
  a    public static getObbDirs(android.content.Context)
  o    public static getExternalFilesDirs(android.content.Context,java.lang.String)
  z    public static getExternalCacheDirs(android.content.Context)

android.support.v4.content.ContextCompatKitKat$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_og)
===============================================================================
  No methods

android.support.v4.content.CursorLoader  (com.rubenroy.minimaltodo.eval_rt)
===============================================================================
  a        public setSelectionArgs(java.lang.String[])
  b        public getProjection()
  c        public getUri()
  eval_e   protected onReset()
  eval_n   public getSortOrder()
  eval_p   public volatile deliverResult(java.lang.Object)
  h        public onCanceled(android.database.Cursor)
  i        public cancelLoadInBackground()
  m        public loadInBackground()
  m        public setProjection(java.lang.String[])
  n        public getSelectionArgs()
  n        public setSelection(java.lang.String)
  o        public setUri(android.net.Uri)
  o        public volatile onCanceled(java.lang.Object)
  p        public setSortOrder(java.lang.String)
  q        public getSelection()
  r        protected onStopLoading()
  s        protected onStartLoading()
  t        public deliverResult(android.database.Cursor)
  y        public dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])

android.support.v4.content.CursorLoader$Exception        (com.rubenroy.minimaltodo.eval_h4)
===============================================================================
  No methods

android.support.v4.content.EditorCompatGingerbread       (com.rubenroy.minimaltodo.eval_hr)
===============================================================================
  e    public static apply(android.content.SharedPreferences$Editor)

android.support.v4.content.EditorCompatGingerbread$NullPointerException  (com.rubenroy.minimaltodo.eval_gk)
===============================================================================
  No methods

android.support.v4.content.ExecutorCompatHoneycomb       (com.rubenroy.minimaltodo.eval_jt)
===============================================================================
  v    public static getParallelExecutor()

android.support.v4.content.ExecutorCompatHoneycomb$NullPointerException  (com.rubenroy.minimaltodo.eval_b6)
===============================================================================
  No methods

android.support.v4.content.FileProvider  (com.rubenroy.minimaltodo.eval_lp)
===============================================================================
  f            private static modeToMode(java.lang.String)
  j            private static parsePathStrategy(android.content.Context,java.lang.String)
  p            private static getPathStrategy(android.content.Context,java.lang.String)
  q            private static transient buildPath(java.io.File,java.lang.String[])
  t            private static copyOf(java.lang.String[],int)
  z            public static getUriForFile(android.content.Context,java.lang.String,java.io.File)
  z            private static copyOf(java.lang.Object[],int)
  attachInfo   public attachInfo(android.content.Context,android.content.pm.ProviderInfo)
  delete       public delete(android.net.Uri,java.lang.String,java.lang.String[])
  getType      public getType(android.net.Uri)
  insert       public insert(android.net.Uri,android.content.ContentValues)
  onCreate     public onCreate()
  openFile     public openFile(android.net.Uri,java.lang.String)
  query        public query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
  update       public update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])

android.support.v4.content.FileProvider$Exception        (com.rubenroy.minimaltodo.eval_hn)
===============================================================================
  No methods

android.support.v4.content.FileProvider$PathStrategy     (com.rubenroy.minimaltodo.eval_lp$w)
===============================================================================
  e    public abstract getUriForFile(java.io.File)
  v    public abstract getFileForUri(android.net.Uri)

android.support.v4.content.FileProvider$SimplePathStrategy       (com.rubenroy.minimaltodo.eval_lp$h)
===============================================================================
  e    public getUriForFile(java.io.File)
  k    public addRoot(java.lang.String,java.io.File)
  v    public getFileForUri(android.net.Uri)

android.support.v4.content.IntentCompat  (com.rubenroy.minimaltodo.eval_sg)
===============================================================================
  g    public static makeRestartActivityTask(android.content.ComponentName)
  j    public static makeMainSelectorActivity(java.lang.String,java.lang.String)
  v    public static makeMainActivity(android.content.ComponentName)

android.support.v4.content.IntentCompat$Exception        (com.rubenroy.minimaltodo.eval_f_)
===============================================================================
  No methods

android.support.v4.content.IntentCompat$IntentCompatImpl (com.rubenroy.minimaltodo.eval_sg$t)
===============================================================================
  c    public abstract makeMainActivity(android.content.ComponentName)
  t    public abstract makeMainSelectorActivity(java.lang.String,java.lang.String)
  u    public abstract makeRestartActivityTask(android.content.ComponentName)

android.support.v4.content.IntentCompat$IntentCompatImplBase     (com.rubenroy.minimaltodo.eval_sg$s)
===============================================================================
  c    public makeMainActivity(android.content.ComponentName)
  t    public makeMainSelectorActivity(java.lang.String,java.lang.String)
  u    public makeRestartActivityTask(android.content.ComponentName)

android.support.v4.content.IntentCompat$IntentCompatImplHC       (com.rubenroy.minimaltodo.eval_sg$x)
===============================================================================
  c    public makeMainActivity(android.content.ComponentName)
  u    public makeRestartActivityTask(android.content.ComponentName)

android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1   (com.rubenroy.minimaltodo.eval_sg$d)
===============================================================================
  t    public makeMainSelectorActivity(java.lang.String,java.lang.String)

android.support.v4.content.IntentCompatHoneycomb (com.rubenroy.minimaltodo.eval_bf)
===============================================================================
  r    public static makeMainActivity(android.content.ComponentName)
  y    public static makeRestartActivityTask(android.content.ComponentName)

android.support.v4.content.IntentCompatHoneycomb$IOException     (com.rubenroy.minimaltodo.eval_fd)
===============================================================================
  No methods

android.support.v4.content.IntentCompatIcsMr1    (com.rubenroy.minimaltodo.eval_n4)
===============================================================================
  l    public static makeMainSelectorActivity(java.lang.String,java.lang.String)

android.support.v4.content.IntentCompatIcsMr1$NullPointerException       (com.rubenroy.minimaltodo.eval_z8)
===============================================================================
  No methods

android.support.v4.content.Loader        (com.rubenroy.minimaltodo.eval_wv)
===============================================================================
  a        public getId()
  b        public registerOnLoadCanceledListener(android.support.v4.content.Loader$OnLoadCanceledListener)
  eval__   public takeContentChanged()
  eval_a   public final startLoading()
  eval_b   public isReset()
  eval_e   protected onReset()
  eval_f   public deliverCancellation()
  eval_g   protected onCancelLoad()
  eval_k   public getContext()
  eval_o   public reset()
  eval_p   public deliverResult(java.lang.Object)
  eval_s   protected onAbandon()
  eval_v   public abandon()
  eval_w   public isStarted()
  eval_x   public cancelLoad()
  eval_z   public commitContentChanged()
  f        public stopLoading()
  f        public unregisterOnLoadCanceledListener(android.support.v4.content.Loader$OnLoadCanceledListener)
  g        public isAbandoned()
  l        protected onForceLoad()
  o        public onContentChanged()
  o        public unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener)
  r        protected onStopLoading()
  r        public registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener)
  s        protected onStartLoading()
  u        public rollbackContentChanged()
  v        public forceLoad()
  w        public dataToString(java.lang.Object)
  y        public dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
  toString public toString()

android.support.v4.content.Loader$ForceLoadContentObserver       (com.rubenroy.minimaltodo.eval_wv$w)
===============================================================================
  deliverSelfNotifications public deliverSelfNotifications()
  onChange                 public onChange(boolean)

android.support.v4.content.Loader$IOException    (com.rubenroy.minimaltodo.eval_rj)
===============================================================================
  No methods

android.support.v4.content.Loader$OnLoadCanceledListener (com.rubenroy.minimaltodo.eval_wv$c)
===============================================================================
  h    public abstract onLoadCanceled(android.support.v4.content.Loader)

android.support.v4.content.Loader$OnLoadCompleteListener (com.rubenroy.minimaltodo.eval_wv$d)
===============================================================================
  eval_x   public abstract onLoadComplete(android.support.v4.content.Loader,java.lang.Object)

android.support.v4.content.LocalBroadcastManager (com.rubenroy.minimaltodo.eval_q8)
===============================================================================
  b        public sendBroadcast(android.content.Intent)
  eval_k   public registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)
  i        static access$000(android.support.v4.content.LocalBroadcastManager)
  o        public static getInstance(android.content.Context)
  s        public sendBroadcastSync(android.content.Intent)
  u        public unregisterReceiver(android.content.BroadcastReceiver)
  z        private executePendingBroadcasts()

android.support.v4.content.LocalBroadcastManager$1       (com.rubenroy.minimaltodo.eval_q8$1)
===============================================================================
  handleMessage    public handleMessage(android.os.Message)

android.support.v4.content.LocalBroadcastManager$BroadcastRecord (com.rubenroy.minimaltodo.eval_q8$f)
===============================================================================
  No methods

android.support.v4.content.LocalBroadcastManager$IOException     (com.rubenroy.minimaltodo.eval_l4)
===============================================================================
  No methods

android.support.v4.content.LocalBroadcastManager$ReceiverRecord  (com.rubenroy.minimaltodo.eval_q8$c)
===============================================================================
  toString public toString()

android.support.v4.content.ModernAsyncTask       (com.rubenroy.minimaltodo.eval_z1)
===============================================================================
  c        static access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object)
  c        protected final transient publishProgress(java.lang.Object[])
  d        static access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object)
  e        public final isCancelled()
  e        public final transient executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])
  eval_o   private static getHandler()
  eval_q   protected abstract transient doInBackground(java.lang.Object[])
  f        public final getStatus()
  i        private postResultIfNotInvoked(java.lang.Object)
  k        public final cancel(boolean)
  o        public static execute(java.lang.Runnable)
  p        public final transient execute(java.lang.Object[])
  r        protected onPostExecute(java.lang.Object)
  r        protected transient onProgressUpdate(java.lang.Object[])
  s        static access$200(android.support.v4.content.ModernAsyncTask,java.lang.Object)
  t        protected onCancelled(java.lang.Object)
  u        public final get(long,java.util.concurrent.TimeUnit)
  v        protected onCancelled()
  v        public static setDefaultExecutor(java.util.concurrent.Executor)
  w        private finish(java.lang.Object)
  x        public final get()
  x        static access$100(android.support.v4.content.ModernAsyncTask)
  z        protected onPreExecute()
  z        private postResult(java.lang.Object)

android.support.v4.content.ModernAsyncTask$1     (com.rubenroy.minimaltodo.eval_z1$1)
===============================================================================
  newThread    public newThread(java.lang.Runnable)

android.support.v4.content.ModernAsyncTask$2     (com.rubenroy.minimaltodo.eval_z1$2)
===============================================================================
  call public call()

android.support.v4.content.ModernAsyncTask$3     (com.rubenroy.minimaltodo.eval_z1$3)
===============================================================================
  done protected done()

android.support.v4.content.ModernAsyncTask$4     (com.rubenroy.minimaltodo.eval_z1$4)
===============================================================================
  No methods

android.support.v4.content.ModernAsyncTask$AsyncTaskResult       (com.rubenroy.minimaltodo.eval_z1$b)
===============================================================================
  No methods

android.support.v4.content.ModernAsyncTask$InternalHandler       (com.rubenroy.minimaltodo.eval_z1$p)
===============================================================================
  handleMessage    public handleMessage(android.os.Message)

android.support.v4.content.ModernAsyncTask$ParseException        (com.rubenroy.minimaltodo.eval_u0)
===============================================================================
  No methods

android.support.v4.content.ModernAsyncTask$Status        (com.rubenroy.minimaltodo.eval_z1$j)
===============================================================================
  valueOf  public static valueOf(java.lang.String)
  values   public static values()

android.support.v4.content.ModernAsyncTask$WorkerRunnable        (com.rubenroy.minimaltodo.eval_z1$n)
===============================================================================
  No methods

android.support.v4.content.ParallelExecutorCompat        (com.rubenroy.minimaltodo.eval_et)
===============================================================================
  i    public static getParallelExecutor()

android.support.v4.content.ParallelExecutorCompat$Exception      (com.rubenroy.minimaltodo.eval_jr)
===============================================================================
  No methods

android.support.v4.content.PermissionChecker     (com.rubenroy.minimaltodo.eval_th)
===============================================================================
  f    public static checkSelfPermission(android.content.Context,java.lang.String)
  i    public static checkCallingOrSelfPermission(android.content.Context,java.lang.String)
  k    public static checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)
  y    public static checkCallingPermission(android.content.Context,java.lang.String,java.lang.String)

android.support.v4.content.PermissionChecker$Exception   (com.rubenroy.minimaltodo.eval_pv)
===============================================================================
  No methods

android.support.v4.content.PermissionChecker$PermissionResult    (com.rubenroy.minimaltodo.eval_th$d)
===============================================================================
  No methods

android.support.v4.content.SharedPreferencesCompat       (com.rubenroy.minimaltodo.eval_du)
===============================================================================
  No methods

android.support.v4.content.SharedPreferencesCompat$1     (com.rubenroy.minimaltodo.eval_du$1)
===============================================================================
  No methods

android.support.v4.content.SharedPreferencesCompat$EditorCompat  (com.rubenroy.minimaltodo.eval_du$i)
===============================================================================
  m    public apply(android.content.SharedPreferences$Editor)
  s    public static getInstance()

android.support.v4.content.SharedPreferencesCompat$EditorCompat$EditorHelperApi9Impl     (com.rubenroy.minimaltodo.eval_du$i$t)
===============================================================================
  d    public apply(android.content.SharedPreferences$Editor)

android.support.v4.content.SharedPreferencesCompat$EditorCompat$EditorHelperBaseImpl     (com.rubenroy.minimaltodo.eval_du$i$r)
===============================================================================
  d    public apply(android.content.SharedPreferences$Editor)

android.support.v4.content.SharedPreferencesCompat$EditorCompat$Helper   (com.rubenroy.minimaltodo.eval_du$i$f)
===============================================================================
  d    public abstract apply(android.content.SharedPreferences$Editor)

android.support.v4.content.SharedPreferencesCompat$EditorCompat$IOException      (com.rubenroy.minimaltodo.eval_m2)
===============================================================================
  No methods

android.support.v4.content.SharedPreferencesCompat$NullPointerException  (com.rubenroy.minimaltodo.eval_gq)
===============================================================================
  No methods

android.support.v4.content.WakefulBroadcastReceiver      (com.rubenroy.minimaltodo.eval_lc)
===============================================================================
  h    public static startWakefulService(android.content.Context,android.content.Intent)
  o    public static completeWakefulIntent(android.content.Intent)

android.support.v4.content.WakefulBroadcastReceiver$ArrayOutOfBoundsException    (com.rubenroy.minimaltodo.eval__7)
===============================================================================
  No methods

android.support.v4.content.pm.ActivityInfoCompat (com.rubenroy.minimaltodo.eval_hs)
===============================================================================
  No methods

android.support.v4.content.pm.ActivityInfoCompat$IOException     (com.rubenroy.minimaltodo.eval__z)
===============================================================================
  No methods

android.support.v4.content.res.ResourcesCompat   (com.rubenroy.minimaltodo.eval_rb)
===============================================================================
  h    public static getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
  l    public getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
  s    public getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
  s    public static getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)

android.support.v4.content.res.ResourcesCompat$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_ni)
===============================================================================
  No methods

android.support.v4.content.res.ResourcesCompatApi21      (com.rubenroy.minimaltodo.eval_qk)
===============================================================================
  r    public static getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
  y    public static getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)

android.support.v4.content.res.ResourcesCompatApi21$ArrayOutOfBoundsException    (com.rubenroy.minimaltodo.eval_bs)
===============================================================================
  No methods

android.support.v4.content.res.ResourcesCompatApi23      (com.rubenroy.minimaltodo.eval_k_)
===============================================================================
  i    public static getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
  p    public static getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)

android.support.v4.content.res.ResourcesCompatApi23$ArrayOutOfBoundsException    (com.rubenroy.minimaltodo.eval_m4)
===============================================================================
  No methods

android.support.v4.content.res.ResourcesCompatIcsMr1     (com.rubenroy.minimaltodo.eval_r0)
===============================================================================
  s    public static getDrawableForDensity(android.content.res.Resources,int,int)

android.support.v4.content.res.ResourcesCompatIcsMr1$ParseException      (com.rubenroy.minimaltodo.eval_hq)
===============================================================================
  No methods

android.support.v4.content.res.TypedArrayUtils   (com.rubenroy.minimaltodo.eval_my)
===============================================================================
  b    public static getString(android.content.res.TypedArray,int,int)
  d    public static getInt(android.content.res.TypedArray,int,int,int)
  o    public static getTextArray(android.content.res.TypedArray,int,int)
  o    public static getBoolean(android.content.res.TypedArray,int,int,boolean)
  p    public static getResourceId(android.content.res.TypedArray,int,int,int)
  u    public static getDrawable(android.content.res.TypedArray,int,int)

android.support.v4.content.res.TypedArrayUtils$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval__4)
===============================================================================
  No methods

android.support.v4.database.DatabaseUtilsCompat  (com.rubenroy.minimaltodo.eval_q1)
===============================================================================
  v    public static appendSelectionArgs(java.lang.String[],java.lang.String[])
  x    public static concatenateWhere(java.lang.String,java.lang.String)

android.support.v4.database.DatabaseUtilsCompat$ParseException   (com.rubenroy.minimaltodo.eval_js)
===============================================================================
  No methods

android.support.v4.graphics.BitmapCompat (com.rubenroy.minimaltodo.eval_f1)
===============================================================================
  eval_t   public static setHasMipMap(android.graphics.Bitmap,boolean)
  u        public static hasMipMap(android.graphics.Bitmap)
  w        public static getAllocationByteCount(android.graphics.Bitmap)

android.support.v4.graphics.BitmapCompat$BaseBitmapImpl  (com.rubenroy.minimaltodo.eval_f1$n)
===============================================================================
  b    public setHasMipMap(android.graphics.Bitmap,boolean)
  m    public getAllocationByteCount(android.graphics.Bitmap)
  r    public hasMipMap(android.graphics.Bitmap)

android.support.v4.graphics.BitmapCompat$BitmapImpl      (com.rubenroy.minimaltodo.eval_f1$l)
===============================================================================
  b    public abstract setHasMipMap(android.graphics.Bitmap,boolean)
  m    public abstract getAllocationByteCount(android.graphics.Bitmap)
  r    public abstract hasMipMap(android.graphics.Bitmap)

android.support.v4.graphics.BitmapCompat$HcMr1BitmapCompatImpl   (com.rubenroy.minimaltodo.eval_f1$t)
===============================================================================
  m    public getAllocationByteCount(android.graphics.Bitmap)

android.support.v4.graphics.BitmapCompat$JbMr2BitmapCompatImpl   (com.rubenroy.minimaltodo.eval_f1$e)
===============================================================================
  b    public setHasMipMap(android.graphics.Bitmap,boolean)
  r    public hasMipMap(android.graphics.Bitmap)

android.support.v4.graphics.BitmapCompat$KitKatBitmapCompatImpl  (com.rubenroy.minimaltodo.eval_f1$eval_c)
===============================================================================
  m    public getAllocationByteCount(android.graphics.Bitmap)

android.support.v4.graphics.BitmapCompat$NullPointerException    (com.rubenroy.minimaltodo.eval_t5)
===============================================================================
  No methods

android.support.v4.graphics.BitmapCompatHoneycombMr1     (com.rubenroy.minimaltodo.eval_xr)
===============================================================================
  t    static getAllocationByteCount(android.graphics.Bitmap)

android.support.v4.graphics.BitmapCompatHoneycombMr1$ParseException      (com.rubenroy.minimaltodo.eval_y1)
===============================================================================
  No methods

android.support.v4.graphics.BitmapCompatJellybeanMR2     (com.rubenroy.minimaltodo.eval_kw)
===============================================================================
  z    public static hasMipMap(android.graphics.Bitmap)
  z    public static setHasMipMap(android.graphics.Bitmap,boolean)

android.support.v4.graphics.BitmapCompatJellybeanMR2$ParseException      (com.rubenroy.minimaltodo.eval_ja)
===============================================================================
  No methods

android.support.v4.graphics.BitmapCompatKitKat   (com.rubenroy.minimaltodo.eval_z7)
===============================================================================
  m    static getAllocationByteCount(android.graphics.Bitmap)

android.support.v4.graphics.BitmapCompatKitKat$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_kk)
===============================================================================
  No methods

android.support.v4.graphics.ColorUtils   (com.rubenroy.minimaltodo.eval_xd)
===============================================================================
  c        public static RGBToHSL(int,int,int,float[])
  eval_k   private static compositeComponent(int,int,int,int,int)
  k        private static constrain(float,float,float)
  k        public static setAlphaComponent(int,int)
  m        public static calculateLuminance(int)
  m        public static compositeColors(int,int)
  p        private static compositeAlpha(int,int)
  q        public static calculateContrast(int,int)
  t        public static calculateMinimumAlpha(int,int,float)
  u        private static constrain(int,int,int)
  x        public static colorToHSL(int,float[])
  y        public static HSLToColor(float[])

android.support.v4.graphics.ColorUtils$IOException       (com.rubenroy.minimaltodo.eval_sx)
===============================================================================
  No methods

android.support.v4.graphics.drawable.DrawableCompat      (com.rubenroy.minimaltodo.eval_ba)
===============================================================================
  c        public static unwrap(android.graphics.drawable.Drawable)
  eval_m   public static setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
  g        public static setTint(android.graphics.drawable.Drawable,int)
  j        public static jumpToCurrentState(android.graphics.drawable.Drawable)
  k        public static setLayoutDirection(android.graphics.drawable.Drawable,int)
  m        public static setAutoMirrored(android.graphics.drawable.Drawable,boolean)
  p        public static setHotspot(android.graphics.drawable.Drawable,float,float)
  q        public static wrap(android.graphics.drawable.Drawable)
  s        public static setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
  u        public static isAutoMirrored(android.graphics.drawable.Drawable)
  w        public static getLayoutDirection(android.graphics.drawable.Drawable)
  w        public static setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)

android.support.v4.graphics.drawable.DrawableCompat$ArrayOutOfBoundsException    (com.rubenroy.minimaltodo.eval_ub)
===============================================================================
  No methods

android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl     (com.rubenroy.minimaltodo.eval_ba$o)
===============================================================================
  b    public setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
  e    public setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
  e    public setHotspot(android.graphics.drawable.Drawable,float,float)
  h    public getLayoutDirection(android.graphics.drawable.Drawable)
  i    public wrap(android.graphics.drawable.Drawable)
  k    public setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
  o    public isAutoMirrored(android.graphics.drawable.Drawable)
  o    public setLayoutDirection(android.graphics.drawable.Drawable,int)
  q    public setTint(android.graphics.drawable.Drawable,int)
  t    public jumpToCurrentState(android.graphics.drawable.Drawable)
  t    public setAutoMirrored(android.graphics.drawable.Drawable,boolean)

android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl (com.rubenroy.minimaltodo.eval_ba$l)
===============================================================================
  b    public abstract setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
  e    public abstract setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
  e    public abstract setHotspot(android.graphics.drawable.Drawable,float,float)
  h    public abstract getLayoutDirection(android.graphics.drawable.Drawable)
  i    public abstract wrap(android.graphics.drawable.Drawable)
  k    public abstract setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
  o    public abstract isAutoMirrored(android.graphics.drawable.Drawable)
  o    public abstract setLayoutDirection(android.graphics.drawable.Drawable,int)
  q    public abstract setTint(android.graphics.drawable.Drawable,int)
  t    public abstract jumpToCurrentState(android.graphics.drawable.Drawable)
  t    public abstract setAutoMirrored(android.graphics.drawable.Drawable,boolean)

android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl        (com.rubenroy.minimaltodo.eval_ba$i)
===============================================================================
  i    public wrap(android.graphics.drawable.Drawable)
  t    public jumpToCurrentState(android.graphics.drawable.Drawable)

android.support.v4.graphics.drawable.DrawableCompat$JellybeanMr1DrawableImpl     (com.rubenroy.minimaltodo.eval_ba$a)
===============================================================================
  h    public getLayoutDirection(android.graphics.drawable.Drawable)
  o    public setLayoutDirection(android.graphics.drawable.Drawable,int)

android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl   (com.rubenroy.minimaltodo.eval_ba$eval_l)
===============================================================================
  i    public wrap(android.graphics.drawable.Drawable)
  o    public isAutoMirrored(android.graphics.drawable.Drawable)
  t    public setAutoMirrored(android.graphics.drawable.Drawable,boolean)

android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl (com.rubenroy.minimaltodo.eval_ba$eval_v)
===============================================================================
  b    public setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
  e    public setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
  e    public setHotspot(android.graphics.drawable.Drawable,float,float)
  i    public wrap(android.graphics.drawable.Drawable)
  k    public setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
  q    public setTint(android.graphics.drawable.Drawable,int)

android.support.v4.graphics.drawable.DrawableCompat$LollipopMr1DrawableImpl      (com.rubenroy.minimaltodo.eval_ba$t)
===============================================================================
  i    public wrap(android.graphics.drawable.Drawable)

android.support.v4.graphics.drawable.DrawableCompat$MDrawableImpl        (com.rubenroy.minimaltodo.eval_ba$n)
===============================================================================
  h    public getLayoutDirection(android.graphics.drawable.Drawable)
  o    public setLayoutDirection(android.graphics.drawable.Drawable,int)

android.support.v4.graphics.drawable.DrawableCompatApi22 (com.rubenroy.minimaltodo.eval_g3)
===============================================================================
  z    public static wrapForTinting(android.graphics.drawable.Drawable)

android.support.v4.graphics.drawable.DrawableCompatApi22$ArrayOutOfBoundsException       (com.rubenroy.minimaltodo.eval_kc)
===============================================================================
  No methods

android.support.v4.graphics.drawable.DrawableCompatApi23 (com.rubenroy.minimaltodo.eval_wh)
===============================================================================
  g    public static getLayoutDirection(android.graphics.drawable.Drawable)
  x    public static setLayoutDirection(android.graphics.drawable.Drawable,int)

android.support.v4.graphics.drawable.DrawableCompatApi23$ArrayOutOfBoundsException       (com.rubenroy.minimaltodo.eval_ff)
===============================================================================
  No methods

android.support.v4.graphics.drawable.DrawableCompatBase  (com.rubenroy.minimaltodo.eval_u5)
===============================================================================
  a        public static setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
  eval_p   public static wrapForTinting(android.graphics.drawable.Drawable)
  g        public static setTint(android.graphics.drawable.Drawable,int)
  x        public static setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)

android.support.v4.graphics.drawable.DrawableCompatBase$NullPointerException     (com.rubenroy.minimaltodo.eval_ou)
===============================================================================
  No methods

android.support.v4.graphics.drawable.DrawableCompatHoneycomb     (com.rubenroy.minimaltodo.eval_qi)
===============================================================================
  b    public static wrapForTinting(android.graphics.drawable.Drawable)
  y    public static jumpToCurrentState(android.graphics.drawable.Drawable)

android.support.v4.graphics.drawable.DrawableCompatHoneycomb$NullPointerException        (com.rubenroy.minimaltodo.eval_uo)
===============================================================================
  No methods

android.support.v4.graphics.drawable.DrawableCompatJellybeanMr1  (com.rubenroy.minimaltodo.eval_cw)
===============================================================================
  f    public static getLayoutDirection(android.graphics.drawable.Drawable)
  w    public static setLayoutDirection(android.graphics.drawable.Drawable,int)

android.support.v4.graphics.drawable.DrawableCompatJellybeanMr1$IOException      (com.rubenroy.minimaltodo.eval_fq)
===============================================================================
  No methods

android.support.v4.graphics.drawable.DrawableCompatKitKat        (com.rubenroy.minimaltodo.eval_fw)
===============================================================================
  g    public static isAutoMirrored(android.graphics.drawable.Drawable)
  j    public static setAutoMirrored(android.graphics.drawable.Drawable,boolean)
  p    public static wrapForTinting(android.graphics.drawable.Drawable)

android.support.v4.graphics.drawable.DrawableCompatKitKat$ParseException (com.rubenroy.minimaltodo.eval_mz)
===============================================================================
  No methods

android.support.v4.graphics.drawable.DrawableCompatLollipop      (com.rubenroy.minimaltodo.eval_pp)
===============================================================================
  e    public static setTint(android.graphics.drawable.Drawable,int)
  j    public static setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
  j    public static setHotspot(android.graphics.drawable.Drawable,float,float)
  m    public static setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
  n    public static wrapForTinting(android.graphics.drawable.Drawable)
  r    public static setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)

android.support.v4.graphics.drawable.DrawableCompatLollipop$Exception    (com.rubenroy.minimaltodo.eval_fk)
===============================================================================
  No methods

android.support.v4.graphics.drawable.DrawableWrapper     (com.rubenroy.minimaltodo.eval_aq)
===============================================================================
  f            public abstract getWrappedDrawable()
  s            public abstract setWrappedDrawable(android.graphics.drawable.Drawable)
  setTint      public abstract setTint(int)
  setTintList  public abstract setTintList(android.content.res.ColorStateList)
  setTintMode  public abstract setTintMode(android.graphics.PorterDuff$Mode)

android.support.v4.graphics.drawable.DrawableWrapper$ParseException      (com.rubenroy.minimaltodo.eval_bg)
===============================================================================
  No methods

android.support.v4.graphics.drawable.DrawableWrapperDonut        (com.rubenroy.minimaltodo.eval_xn)
===============================================================================
  f                            public getWrappedDrawable()
  s                            public setWrappedDrawable(android.graphics.drawable.Drawable)
  v                            private updateTint(int[])
  draw                         public draw(android.graphics.Canvas)
  getChangingConfigurations    public getChangingConfigurations()
  getCurrent                   public getCurrent()
  getIntrinsicHeight           public getIntrinsicHeight()
  getIntrinsicWidth            public getIntrinsicWidth()
  getMinimumHeight             public getMinimumHeight()
  getMinimumWidth              public getMinimumWidth()
  getOpacity                   public getOpacity()
  getPadding                   public getPadding(android.graphics.Rect)
  getState                     public getState()
  getTransparentRegion         public getTransparentRegion()
  invalidateDrawable           public invalidateDrawable(android.graphics.drawable.Drawable)
  isStateful                   public isStateful()
  mutate                       public mutate()
  onBoundsChange               protected onBoundsChange(android.graphics.Rect)
  onLevelChange                protected onLevelChange(int)
  scheduleDrawable             public scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
  setAlpha                     public setAlpha(int)
  setChangingConfigurations    public setChangingConfigurations(int)
  setColorFilter               public setColorFilter(android.graphics.ColorFilter)
  setDither                    public setDither(boolean)
  setFilterBitmap              public setFilterBitmap(boolean)
  setState                     public setState(int[])
  setTint                      public setTint(int)
  setTintList                  public setTintList(android.content.res.ColorStateList)
  setTintMode                  public setTintMode(android.graphics.PorterDuff$Mode)
  setVisible                   public setVisible(boolean,boolean)
  unscheduleDrawable           public unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)

android.support.v4.graphics.drawable.DrawableWrapperDonut$ParseException (com.rubenroy.minimaltodo.eval_q2)
===============================================================================
  No methods

android.support.v4.graphics.drawable.DrawableWrapperHoneycomb    (com.rubenroy.minimaltodo.eval__r)
===============================================================================
  jumpToCurrentState   public jumpToCurrentState()

android.support.v4.graphics.drawable.DrawableWrapperHoneycomb$ArrayOutOfBoundsException  (com.rubenroy.minimaltodo.eval_em)
===============================================================================
  No methods

android.support.v4.graphics.drawable.DrawableWrapperKitKat       (com.rubenroy.minimaltodo.eval_v1)
===============================================================================
  isAutoMirrored   public isAutoMirrored()
  setAutoMirrored  public setAutoMirrored(boolean)

android.support.v4.graphics.drawable.DrawableWrapperKitKat$IOException   (com.rubenroy.minimaltodo.eval_wr)
===============================================================================
  No methods

android.support.v4.graphics.drawable.DrawableWrapperLollipop     (com.rubenroy.minimaltodo.eval_ry)
===============================================================================
  applyTheme       public applyTheme(android.content.res.Resources$Theme)
  canApplyTheme    public canApplyTheme()
  getDirtyBounds   public getDirtyBounds()
  getOutline       public getOutline(android.graphics.Outline)
  setHotspot       public setHotspot(float,float)
  setHotspotBounds public setHotspotBounds(int,int,int,int)

android.support.v4.graphics.drawable.DrawableWrapperLollipop$NullPointerException        (com.rubenroy.minimaltodo.eval_pm)
===============================================================================
  No methods

android.support.v4.graphics.drawable.RoundedBitmapDrawable       (com.rubenroy.minimaltodo.eval_mb)
===============================================================================
  a                    public setCornerRadius(float)
  c                    public final getBitmap()
  c                    public setAntiAlias(boolean)
  d                    public isCircular()
  e                    private computeBitmapSize()
  eval_u               updateDstRect()
  f                    public getGravity()
  g                    gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect)
  i                    public hasAntiAlias()
  j                    public final getPaint()
  k                    public setMipMap(boolean)
  o                    private updateCircularCornerRadius()
  o                    public setCircular(boolean)
  q                    public hasMipMap()
  r                    public setTargetDensity(int)
  s                    private static isGreaterThanZero(float)
  u                    public setTargetDensity(android.util.DisplayMetrics)
  v                    public getCornerRadius()
  w                    public setTargetDensity(android.graphics.Canvas)
  w                    public setGravity(int)
  draw                 public draw(android.graphics.Canvas)
  getAlpha             public getAlpha()
  getColorFilter       public getColorFilter()
  getIntrinsicHeight   public getIntrinsicHeight()
  getIntrinsicWidth    public getIntrinsicWidth()
  getOpacity           public getOpacity()
  onBoundsChange       protected onBoundsChange(android.graphics.Rect)
  setAlpha             public setAlpha(int)
  setColorFilter       public setColorFilter(android.graphics.ColorFilter)
  setDither            public setDither(boolean)
  setFilterBitmap      public setFilterBitmap(boolean)

android.support.v4.graphics.drawable.RoundedBitmapDrawable$IOException   (com.rubenroy.minimaltodo.eval_jm)
===============================================================================
  No methods

android.support.v4.graphics.drawable.RoundedBitmapDrawable21     (com.rubenroy.minimaltodo.eval_h5)
===============================================================================
  g            gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect)
  k            public setMipMap(boolean)
  q            public hasMipMap()
  getOutline   public getOutline(android.graphics.Outline)

android.support.v4.graphics.drawable.RoundedBitmapDrawable21$NullPointerException        (com.rubenroy.minimaltodo.eval_fs)
===============================================================================
  No methods

android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory        (com.rubenroy.minimaltodo.eval_bn)
===============================================================================
  k    public static create(android.content.res.Resources,android.graphics.Bitmap)
  t    public static create(android.content.res.Resources,java.lang.String)
  v    public static create(android.content.res.Resources,java.io.InputStream)

android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable   (com.rubenroy.minimaltodo.eval_bn$n)
===============================================================================
  g    gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect)
  k    public setMipMap(boolean)
  q    public hasMipMap()

android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory$NullPointerException   (com.rubenroy.minimaltodo.eval_n9)
===============================================================================
  No methods

android.support.v4.hardware.display.DisplayManagerCompat (com.rubenroy.minimaltodo.eval_ge)
===============================================================================
  l    public abstract getDisplay(int)
  l    public abstract getDisplays(java.lang.String)
  o    public static getInstance(android.content.Context)
  u    public abstract getDisplays()

android.support.v4.hardware.display.DisplayManagerCompat$ArrayOutOfBoundsException       (com.rubenroy.minimaltodo.eval_wz)
===============================================================================
  No methods

android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl        (com.rubenroy.minimaltodo.eval_ge$t)
===============================================================================
  l    public getDisplay(int)
  l    public getDisplays(java.lang.String)
  u    public getDisplays()

android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl      (com.rubenroy.minimaltodo.eval_ge$o)
===============================================================================
  l    public getDisplay(int)
  l    public getDisplays(java.lang.String)
  u    public getDisplays()

android.support.v4.hardware.display.DisplayManagerJellybeanMr1   (com.rubenroy.minimaltodo.eval_lj)
===============================================================================
  k    public static getDisplays(java.lang.Object,java.lang.String)
  n    public static getDisplays(java.lang.Object)
  w    public static getDisplay(java.lang.Object,int)
  z    public static getDisplayManager(android.content.Context)

android.support.v4.hardware.display.DisplayManagerJellybeanMr1$ParseException    (com.rubenroy.minimaltodo.eval_t7)
===============================================================================
  No methods

android.support.v4.hardware.fingerprint.FingerprintManagerCompat (com.rubenroy.minimaltodo.eval_p7)
===============================================================================
  eval_d   public authenticate(android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,android.support.v4.os.CancellationSignal,android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler)
  o        public static from(android.content.Context)
  r        public isHardwareDetected()
  s        public hasEnrolledFingerprints()

android.support.v4.hardware.fingerprint.FingerprintManagerCompat$Api23FingerprintManagerCompatImpl       (com.rubenroy.minimaltodo.eval_p7$c)
===============================================================================
  h    static access$000(android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject)
  j    private static unwrapCryptoObject(android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject)
  l    public isHardwareDetected(android.content.Context)
  m    public hasEnrolledFingerprints(android.content.Context)
  p    private static wrapCryptoObject(android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)
  r    private static wrapCallback(android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback)
  u    public authenticate(android.content.Context,android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,android.support.v4.os.CancellationSignal,android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler)

android.support.v4.hardware.fingerprint.FingerprintManagerCompat$Api23FingerprintManagerCompatImpl$1     (com.rubenroy.minimaltodo.eval_p7$c$1)
===============================================================================
  a    public onAuthenticationHelp(int,java.lang.CharSequence)
  b    public onAuthenticationSucceeded(android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationResultInternal)
  i    public onAuthenticationFailed()
  t    public onAuthenticationError(int,java.lang.CharSequence)

android.support.v4.hardware.fingerprint.FingerprintManagerCompat$Api23FingerprintManagerCompatImpl$IOException   (com.rubenroy.minimaltodo.eval_cd)
===============================================================================
  No methods

android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback  (com.rubenroy.minimaltodo.eval_p7$x)
===============================================================================
  d        public onAuthenticationError(int,java.lang.CharSequence)
  eval_h   public onAuthenticationHelp(int,java.lang.CharSequence)
  j        public onAuthenticationFailed()
  s        public onAuthenticationSucceeded(android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult)

android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult    (com.rubenroy.minimaltodo.eval_p7$w)
===============================================================================
  v    public getCryptoObject()

android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject    (com.rubenroy.minimaltodo.eval_p7$f)
===============================================================================
  c    public getMac()
  d    public getCipher()
  i    public getSignature()

android.support.v4.hardware.fingerprint.FingerprintManagerCompat$Exception       (com.rubenroy.minimaltodo.eval_zu)
===============================================================================
  No methods

android.support.v4.hardware.fingerprint.FingerprintManagerCompat$FingerprintManagerCompatImpl    (com.rubenroy.minimaltodo.eval_p7$eval_q)
===============================================================================
  l    public abstract isHardwareDetected(android.content.Context)
  m    public abstract hasEnrolledFingerprints(android.content.Context)
  u    public abstract authenticate(android.content.Context,android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,android.support.v4.os.CancellationSignal,android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler)

android.support.v4.hardware.fingerprint.FingerprintManagerCompat$LegacyFingerprintManagerCompatImpl      (com.rubenroy.minimaltodo.eval_p7$eval_h)
===============================================================================
  l    public isHardwareDetected(android.content.Context)
  m    public hasEnrolledFingerprints(android.content.Context)
  u    public authenticate(android.content.Context,android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,android.support.v4.os.CancellationSignal,android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler)

android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23    (com.rubenroy.minimaltodo.eval_os)
===============================================================================
  b    private static unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject)
  h    private static wrapCryptoObject(android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject)
  m    private static wrapCallback(android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationCallback)
  p    private static getFingerprintManager(android.content.Context)
  s    static access$000(android.hardware.fingerprint.FingerprintManager$CryptoObject)
  t    public static hasEnrolledFingerprints(android.content.Context)
  t    public static authenticate(android.content.Context,android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject,int,java.lang.Object,android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationCallback,android.os.Handler)
  x    public static isHardwareDetected(android.content.Context)

android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$1  (com.rubenroy.minimaltodo.eval_os$1)
===============================================================================
  onAuthenticationError        public onAuthenticationError(int,java.lang.CharSequence)
  onAuthenticationFailed       public onAuthenticationFailed()
  onAuthenticationHelp         public onAuthenticationHelp(int,java.lang.CharSequence)
  onAuthenticationSucceeded    public onAuthenticationSucceeded(android.hardware.fingerprint.FingerprintManager$AuthenticationResult)

android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationCallback     (com.rubenroy.minimaltodo.eval_os$z)
===============================================================================
  a    public onAuthenticationHelp(int,java.lang.CharSequence)
  b    public onAuthenticationSucceeded(android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationResultInternal)
  i    public onAuthenticationFailed()
  t    public onAuthenticationError(int,java.lang.CharSequence)

android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationResultInternal       (com.rubenroy.minimaltodo.eval_os$f)
===============================================================================
  i    public getCryptoObject()

android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject       (com.rubenroy.minimaltodo.eval_os$b)
===============================================================================
  a    public getCipher()
  i    public getMac()
  x    public getSignature()

android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$Exception  (com.rubenroy.minimaltodo.eval_fy)
===============================================================================
  No methods

android.support.v4.internal.view.SupportMenu     (com.rubenroy.minimaltodo.eval_lw)
===============================================================================
  No methods

android.support.v4.internal.view.SupportMenu$Exception   (com.rubenroy.minimaltodo.eval_vn)
===============================================================================
  No methods

android.support.v4.internal.view.SupportMenuItem (com.rubenroy.minimaltodo.eval_dy)
===============================================================================
  c                    public abstract setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener)
  t                    public abstract setSupportActionProvider(android.support.v4.view.ActionProvider)
  y                    public abstract getSupportActionProvider()
  collapseActionView   public abstract collapseActionView()
  expandActionView     public abstract expandActionView()
  getActionView        public abstract getActionView()
  isActionViewExpanded public abstract isActionViewExpanded()
  setActionView        public abstract setActionView(android.view.View)
  setActionView        public abstract setActionView(int)
  setShowAsAction      public abstract setShowAsAction(int)
  setShowAsActionFlags public abstract setShowAsActionFlags(int)

android.support.v4.internal.view.SupportMenuItem$IOException     (com.rubenroy.minimaltodo.eval_hk)
===============================================================================
  No methods

android.support.v4.internal.view.SupportSubMenu  (com.rubenroy.minimaltodo.eval_mf)
===============================================================================
  No methods

android.support.v4.internal.view.SupportSubMenu$ParseException   (com.rubenroy.minimaltodo.eval_br)
===============================================================================
  No methods

android.support.v4.media.IMediaBrowserServiceCompat      (com.rubenroy.minimaltodo.eval_uf)
===============================================================================
  c        public abstract addSubscription(java.lang.String,android.support.v4.media.IMediaBrowserServiceCompatCallbacks)
  eval_i   public abstract removeSubscription(java.lang.String,android.support.v4.media.IMediaBrowserServiceCompatCallbacks)
  n        public abstract disconnect(android.support.v4.media.IMediaBrowserServiceCompatCallbacks)
  s        public abstract connect(java.lang.String,android.os.Bundle,android.support.v4.media.IMediaBrowserServiceCompatCallbacks)
  v        public abstract getMediaItem(java.lang.String,android.support.v4.os.ResultReceiver)

android.support.v4.media.IMediaBrowserServiceCompat$ArrayOutOfBoundsException    (com.rubenroy.minimaltodo.eval_jg)
===============================================================================
  No methods

android.support.v4.media.IMediaBrowserServiceCompat$Stub (com.rubenroy.minimaltodo.eval_uf$y)
===============================================================================
  c            public abstract addSubscription(java.lang.String,android.support.v4.media.IMediaBrowserServiceCompatCallbacks)
  d            public static asInterface(android.os.IBinder)
  eval_i       public abstract removeSubscription(java.lang.String,android.support.v4.media.IMediaBrowserServiceCompatCallbacks)
  n            public abstract disconnect(android.support.v4.media.IMediaBrowserServiceCompatCallbacks)
  s            public abstract connect(java.lang.String,android.os.Bundle,android.support.v4.media.IMediaBrowserServiceCompatCallbacks)
  v            public abstract getMediaItem(java.lang.String,android.support.v4.os.ResultReceiver)
  asBinder     public asBinder()
  onTransact   public onTransact(int,android.os.Parcel,android.os.Parcel,int)

android.support.v4.media.IMediaBrowserServiceCompat$Stub$ArrayOutOfBoundsException       (com.rubenroy.minimaltodo.eval_o3)
===============================================================================
  No methods

android.support.v4.media.IMediaBrowserServiceCompat$Stub$Proxy   (com.rubenroy.minimaltodo.eval_uf$y$u)
===============================================================================
  c        public addSubscription(java.lang.String,android.support.v4.media.IMediaBrowserServiceCompatCallbacks)
  eval_i   public removeSubscription(java.lang.String,android.support.v4.media.IMediaBrowserServiceCompatCallbacks)
  n        public disconnect(android.support.v4.media.IMediaBrowserServiceCompatCallbacks)
  p        public getInterfaceDescriptor()
  s        public connect(java.lang.String,android.os.Bundle,android.support.v4.media.IMediaBrowserServiceCompatCallbacks)
  v        public getMediaItem(java.lang.String,android.support.v4.os.ResultReceiver)
  asBinder public asBinder()

android.support.v4.media.IMediaBrowserServiceCompatCallbacks     (com.rubenroy.minimaltodo.eval_hu)
===============================================================================
  j    public abstract onConnectFailed()
  p    public abstract onLoadChildren(java.lang.String,java.util.List)
  q    public abstract onConnect(java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle)

android.support.v4.media.IMediaBrowserServiceCompatCallbacks$NullPointerException        (com.rubenroy.minimaltodo.eval_f7)
===============================================================================
  No methods

android.support.v4.media.IMediaBrowserServiceCompatCallbacks$Stub        (com.rubenroy.minimaltodo.eval_hu$f)
===============================================================================
  a            public static asInterface(android.os.IBinder)
  j            public abstract onConnectFailed()
  p            public abstract onLoadChildren(java.lang.String,java.util.List)
  q            public abstract onConnect(java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle)
  asBinder     public asBinder()
  onTransact   public onTransact(int,android.os.Parcel,android.os.Parcel,int)

android.support.v4.media.IMediaBrowserServiceCompatCallbacks$Stub$NullPointerException   (com.rubenroy.minimaltodo.eval_x7)
===============================================================================
  No methods

android.support.v4.media.IMediaBrowserServiceCompatCallbacks$Stub$Proxy  (com.rubenroy.minimaltodo.eval_hu$f$_)
===============================================================================
  j        public onConnectFailed()
  p        public onLoadChildren(java.lang.String,java.util.List)
  q        public onConnect(java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle)
  y        public getInterfaceDescriptor()
  asBinder public asBinder()

android.support.v4.media.MediaBrowserCompat      (com.rubenroy.minimaltodo.eval_v3)
===============================================================================
  c    public isConnected()
  m    public getServiceComponent()
  o    public disconnect()
  p    public getItem(java.lang.String,android.support.v4.media.MediaBrowserCompat$ItemCallback)
  q    public connect()
  r    public getRoot()
  t    public getExtras()
  t    public unsubscribe(java.lang.String)
  x    public subscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback)
  z    public getSessionToken()

android.support.v4.media.MediaBrowserCompat$1    (com.rubenroy.minimaltodo.eval_v3$1)
===============================================================================
  No methods

android.support.v4.media.MediaBrowserCompat$ConnectionCallback   (com.rubenroy.minimaltodo.eval_v3$g)
===============================================================================
  n    public onConnectionFailed()
  q    public onConnected()
  x    public onConnectionSuspended()

android.support.v4.media.MediaBrowserCompat$IOException  (com.rubenroy.minimaltodo.eval_pb)
===============================================================================
  No methods

android.support.v4.media.MediaBrowserCompat$ItemCallback (com.rubenroy.minimaltodo.eval_v3$e)
===============================================================================
  c    public onItemLoaded(android.support.v4.media.MediaBrowserCompat$MediaItem)
  t    public onError(java.lang.String)

android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase (com.rubenroy.minimaltodo.eval_v3$j)
===============================================================================
  a        static access$700(int)
  b        static access$1200(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase)
  c        public disconnect()
  d        static access$200(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase)
  e        public isConnected()
  eval_d   static access$600(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase)
  eval_n   static access$1202(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase,android.support.v4.media.IMediaBrowserServiceCompatCallbacks)
  eval_o   public getExtras()
  eval_v   static access$2000(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase,android.support.v4.media.IMediaBrowserServiceCompatCallbacks,java.lang.String,java.util.List)
  f        static access$1500(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase)
  f        public subscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback)
  g        public getServiceComponent()
  g        private final onConnectionFailed(android.support.v4.media.IMediaBrowserServiceCompatCallbacks)
  g        private final onServiceConnected(android.support.v4.media.IMediaBrowserServiceCompatCallbacks,java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle)
  h        static access$500(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase,android.support.v4.media.IMediaBrowserServiceCompatCallbacks,java.lang.String)
  h        static access$602(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase,int)
  i        static access$902(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase,android.support.v4.media.session.MediaSessionCompat$Token)
  j        dump()
  k        public unsubscribe(java.lang.String)
  m        private forceCloseConnection()
  m        static access$802(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase,java.lang.String)
  m        public getItem(java.lang.String,android.support.v4.media.MediaBrowserCompat$ItemCallback)
  n        public connect()
  n        private isCurrent(android.support.v4.media.IMediaBrowserServiceCompatCallbacks,java.lang.String)
  n        static access$1302(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase,android.support.v4.media.IMediaBrowserServiceCompat)
  p        static access$1300(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase)
  p        static access$1900(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase,android.support.v4.media.IMediaBrowserServiceCompatCallbacks)
  q        static access$1400(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase)
  r        public getSessionToken()
  r        static access$1002(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase,android.os.Bundle)
  s        private final onLoadChildren(android.support.v4.media.IMediaBrowserServiceCompatCallbacks,java.lang.String,java.util.List)
  t        static access$300(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase)
  v        public getRoot()
  v        static access$1800(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase,android.support.v4.media.IMediaBrowserServiceCompatCallbacks,java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle)
  w        private getNewServiceCallbacks()
  w        static access$1700(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase)
  w        private static getStateLabel(int)
  x        static access$1100(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase)
  y        static access$400(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase)
  z        static access$1600(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase)

android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$1       (com.rubenroy.minimaltodo.eval_v3$j$1)
===============================================================================
  run  public run()

android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$2       (com.rubenroy.minimaltodo.eval_v3$j$2)
===============================================================================
  run  public run()

android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$3       (com.rubenroy.minimaltodo.eval_v3$j$3)
===============================================================================
  u    protected onReceiveResult(int,android.os.Bundle)

android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$4       (com.rubenroy.minimaltodo.eval_v3$j$4)
===============================================================================
  run  public run()

android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$5       (com.rubenroy.minimaltodo.eval_v3$j$5)
===============================================================================
  run  public run()

android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$6       (com.rubenroy.minimaltodo.eval_v3$j$6)
===============================================================================
  run  public run()

android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$7       (com.rubenroy.minimaltodo.eval_v3$j$7)
===============================================================================
  run  public run()

android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$Exception       (com.rubenroy.minimaltodo.eval_da)
===============================================================================
  No methods

android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection  (com.rubenroy.minimaltodo.eval_v3$j$x)
===============================================================================
  b                        private isCurrent(java.lang.String)
  onServiceConnected       public onServiceConnected(android.content.ComponentName,android.os.IBinder)
  onServiceDisconnected    public onServiceDisconnected(android.content.ComponentName)

android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$ServiceCallbacks        (com.rubenroy.minimaltodo.eval_v3$j$v)
===============================================================================
  j    public onConnectFailed()
  p    public onLoadChildren(java.lang.String,java.util.List)
  q    public onConnect(java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle)

android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$Subscription    (com.rubenroy.minimaltodo.eval_v3$j$h)
===============================================================================
  No methods

android.support.v4.media.MediaBrowserCompat$MediaItem    (com.rubenroy.minimaltodo.eval_v3$m)
===============================================================================
  c                public getFlags()
  d                public getMediaId()
  eval_i           public getDescription()
  eval_v           public isBrowsable()
  n                public isPlayable()
  describeContents public describeContents()
  toString         public toString()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.media.MediaBrowserCompat$MediaItem$1  (com.rubenroy.minimaltodo.eval_v3$m$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.media.MediaBrowserCompat$MediaItem$Flags      (com.rubenroy.minimaltodo.eval_v3$m$r)
===============================================================================
  No methods

android.support.v4.media.MediaBrowserCompat$MediaItem$IOException        (com.rubenroy.minimaltodo.eval_uk)
===============================================================================
  No methods

android.support.v4.media.MediaBrowserCompat$SubscriptionCallback (com.rubenroy.minimaltodo.eval_v3$t)
===============================================================================
  a    public onChildrenLoaded(java.lang.String,java.util.List)
  p    public onError(java.lang.String)

android.support.v4.media.MediaBrowserServiceCompat       (com.rubenroy.minimaltodo.eval_rk)
===============================================================================
  c        static access$500(android.support.v4.media.MediaBrowserServiceCompat,java.lang.String,android.support.v4.os.ResultReceiver)
  c        private performLoadChildren(java.lang.String,android.support.v4.media.MediaBrowserServiceCompat$ConnectionRecord)
  c        private performLoadItem(java.lang.String,android.support.v4.os.ResultReceiver)
  d        public setSessionToken(android.support.v4.media.session.MediaSessionCompat$Token)
  e        static access$300(android.support.v4.media.MediaBrowserServiceCompat)
  eval_h   static access$400(android.support.v4.media.MediaBrowserServiceCompat,java.lang.String,android.support.v4.media.MediaBrowserServiceCompat$ConnectionRecord)
  eval_w   public onLoadItem(java.lang.String,android.support.v4.media.MediaBrowserServiceCompat$Result)
  f        public notifyChildrenChanged(java.lang.String)
  f        public abstract onLoadChildren(java.lang.String,android.support.v4.media.MediaBrowserServiceCompat$Result)
  g        public getSessionToken()
  h        private addSubscription(java.lang.String,android.support.v4.media.MediaBrowserServiceCompat$ConnectionRecord)
  k        private isValidPackage(java.lang.String,int)
  m        static access$100(android.support.v4.media.MediaBrowserServiceCompat)
  p        static access$700(android.support.v4.media.MediaBrowserServiceCompat,java.lang.String,android.support.v4.media.MediaBrowserServiceCompat$ConnectionRecord)
  p        public abstract onGetRoot(java.lang.String,int,android.os.Bundle)
  v        static access$000(android.support.v4.media.MediaBrowserServiceCompat,java.lang.String,int)
  dump     public dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
  onBind   public onBind(android.content.Intent)
  onCreate public onCreate()

android.support.v4.media.MediaBrowserServiceCompat$1     (com.rubenroy.minimaltodo.eval_rk$1)
===============================================================================
  run  public run()

android.support.v4.media.MediaBrowserServiceCompat$2     (com.rubenroy.minimaltodo.eval_rk$2)
===============================================================================
  run  public run()

android.support.v4.media.MediaBrowserServiceCompat$3     (com.rubenroy.minimaltodo.eval_rk$3)
===============================================================================
  b        onResultSent(java.util.List)
  eval_y   volatile onResultSent(java.lang.Object)

android.support.v4.media.MediaBrowserServiceCompat$4     (com.rubenroy.minimaltodo.eval_rk$4)
===============================================================================
  eval_y   volatile onResultSent(java.lang.Object)
  p        onResultSent(android.support.v4.media.MediaBrowserCompat$MediaItem)

android.support.v4.media.MediaBrowserServiceCompat$BrowserRoot   (com.rubenroy.minimaltodo.eval_rk$s)
===============================================================================
  n    public getExtras()
  y    public getRootId()

android.support.v4.media.MediaBrowserServiceCompat$ConnectionRecord      (com.rubenroy.minimaltodo.eval_rk$f)
===============================================================================
  No methods

android.support.v4.media.MediaBrowserServiceCompat$NullPointerException  (com.rubenroy.minimaltodo.eval_g5)
===============================================================================
  No methods

android.support.v4.media.MediaBrowserServiceCompat$Result        (com.rubenroy.minimaltodo.eval_rk$v)
===============================================================================
  eval_y   onResultSent(java.lang.Object)
  i        public sendResult(java.lang.Object)
  l        public detach()
  u        isDone()

android.support.v4.media.MediaBrowserServiceCompat$ServiceBinder (com.rubenroy.minimaltodo.eval_rk$o)
===============================================================================
  c        public addSubscription(java.lang.String,android.support.v4.media.IMediaBrowserServiceCompatCallbacks)
  eval_i   public removeSubscription(java.lang.String,android.support.v4.media.IMediaBrowserServiceCompatCallbacks)
  n        public disconnect(android.support.v4.media.IMediaBrowserServiceCompatCallbacks)
  s        public connect(java.lang.String,android.os.Bundle,android.support.v4.media.IMediaBrowserServiceCompatCallbacks)
  v        public getMediaItem(java.lang.String,android.support.v4.os.ResultReceiver)

android.support.v4.media.MediaBrowserServiceCompat$ServiceBinder$1       (com.rubenroy.minimaltodo.eval_rk$o$1)
===============================================================================
  run  public run()

android.support.v4.media.MediaBrowserServiceCompat$ServiceBinder$2       (com.rubenroy.minimaltodo.eval_rk$o$2)
===============================================================================
  run  public run()

android.support.v4.media.MediaBrowserServiceCompat$ServiceBinder$3       (com.rubenroy.minimaltodo.eval_rk$o$3)
===============================================================================
  run  public run()

android.support.v4.media.MediaBrowserServiceCompat$ServiceBinder$4       (com.rubenroy.minimaltodo.eval_rk$o$4)
===============================================================================
  run  public run()

android.support.v4.media.MediaBrowserServiceCompat$ServiceBinder$5       (com.rubenroy.minimaltodo.eval_rk$o$5)
===============================================================================
  run  public run()

android.support.v4.media.MediaBrowserServiceCompat$ServiceBinder$Exception       (com.rubenroy.minimaltodo.eval_g2)
===============================================================================
  No methods

android.support.v4.media.MediaDescriptionCompat  (com.rubenroy.minimaltodo.eval_nh)
===============================================================================
  c                public getExtras()
  e                public getMediaDescription()
  eval_a           public getSubtitle()
  eval_h           public getIconUri()
  k                public getTitle()
  l                public getMediaUri()
  m                public static fromMediaDescription(java.lang.Object)
  p                public getIconBitmap()
  w                public getMediaId()
  z                public getDescription()
  describeContents public describeContents()
  toString         public toString()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.media.MediaDescriptionCompat$1        (com.rubenroy.minimaltodo.eval_nh$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.media.MediaDescriptionCompat$Builder  (com.rubenroy.minimaltodo.eval_nh$n)
===============================================================================
  b    public setTitle(java.lang.CharSequence)
  e    public setMediaUri(android.net.Uri)
  j    public setExtras(android.os.Bundle)
  k    public setMediaId(java.lang.String)
  l    public build()
  m    public setSubtitle(java.lang.CharSequence)
  o    public setIconBitmap(android.graphics.Bitmap)
  r    public setIconUri(android.net.Uri)
  t    public setDescription(java.lang.CharSequence)

android.support.v4.media.MediaDescriptionCompat$ParseException   (com.rubenroy.minimaltodo.eval_bv)
===============================================================================
  No methods

android.support.v4.media.MediaDescriptionCompatApi21     (com.rubenroy.minimaltodo.eval_by)
===============================================================================
  a        public static getTitle(java.lang.Object)
  eval_x   public static getDescription(java.lang.Object)
  l        public static writeToParcel(java.lang.Object,android.os.Parcel,int)
  m        public static getSubtitle(java.lang.Object)
  n        public static getIconUri(java.lang.Object)
  t        public static getExtras(java.lang.Object)
  w        public static fromParcel(android.os.Parcel)
  x        public static getMediaId(java.lang.Object)
  z        public static getIconBitmap(java.lang.Object)

android.support.v4.media.MediaDescriptionCompatApi21$Builder     (com.rubenroy.minimaltodo.eval_by$j)
===============================================================================
  a    public static setDescription(java.lang.Object,java.lang.CharSequence)
  b    public static setIconUri(java.lang.Object,android.net.Uri)
  j    public static setSubtitle(java.lang.Object,java.lang.CharSequence)
  p    public static setExtras(java.lang.Object,android.os.Bundle)
  q    public static setIconBitmap(java.lang.Object,android.graphics.Bitmap)
  t    public static setMediaId(java.lang.Object,java.lang.String)
  v    public static build(java.lang.Object)
  x    public static setTitle(java.lang.Object,java.lang.CharSequence)
  y    public static newInstance()

android.support.v4.media.MediaDescriptionCompatApi21$ParseException      (com.rubenroy.minimaltodo.eval_dg)
===============================================================================
  No methods

android.support.v4.media.MediaDescriptionCompatApi23     (com.rubenroy.minimaltodo.eval_q9)
===============================================================================
  i    public static getMediaUri(java.lang.Object)

android.support.v4.media.MediaDescriptionCompatApi23$Builder     (com.rubenroy.minimaltodo.eval_q9$i)
===============================================================================
  u    public static setMediaUri(java.lang.Object,android.net.Uri)

android.support.v4.media.MediaDescriptionCompatApi23$ParseException      (com.rubenroy.minimaltodo.eval_t1)
===============================================================================
  No methods

android.support.v4.media.MediaMetadataCompat     (com.rubenroy.minimaltodo.eval_uq)
===============================================================================
  d                public getMediaMetadata()
  d                static access$100(android.support.v4.media.MediaMetadataCompat)
  eval_k           public getBitmap(java.lang.String)
  h                public getBundle()
  h                public static fromMediaMetadata(java.lang.Object)
  k                public getLong(java.lang.String)
  l                public getText(java.lang.String)
  m                static access$200()
  n                public getRating(java.lang.String)
  p                public containsKey(java.lang.String)
  q                public getDescription()
  s                public getString(java.lang.String)
  v                public keySet()
  w                public size()
  describeContents public describeContents()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.media.MediaMetadataCompat$1   (com.rubenroy.minimaltodo.eval_uq$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.media.MediaMetadataCompat$BitmapKey   (com.rubenroy.minimaltodo.eval_uq$j)
===============================================================================
  No methods

android.support.v4.media.MediaMetadataCompat$Builder     (com.rubenroy.minimaltodo.eval_uq$v)
===============================================================================
  g    public build()
  i    public putBitmap(java.lang.String,android.graphics.Bitmap)
  p    public putText(java.lang.String,java.lang.CharSequence)
  r    public putLong(java.lang.String,long)
  v    public putRating(java.lang.String,android.support.v4.media.RatingCompat)
  z    public putString(java.lang.String,java.lang.String)

android.support.v4.media.MediaMetadataCompat$Exception   (com.rubenroy.minimaltodo.eval_x0)
===============================================================================
  No methods

android.support.v4.media.MediaMetadataCompat$LongKey     (com.rubenroy.minimaltodo.eval_uq$d)
===============================================================================
  No methods

android.support.v4.media.MediaMetadataCompat$RatingKey   (com.rubenroy.minimaltodo.eval_uq$m)
===============================================================================
  No methods

android.support.v4.media.MediaMetadataCompat$TextKey     (com.rubenroy.minimaltodo.eval_uq$o)
===============================================================================
  No methods

android.support.v4.media.MediaMetadataCompatApi21        (com.rubenroy.minimaltodo.eval_nc)
===============================================================================
  a    public static getBitmap(java.lang.Object,java.lang.String)
  g    public static keySet(java.lang.Object)
  g    public static getRating(java.lang.Object,java.lang.String)
  n    public static getText(java.lang.Object,java.lang.String)
  t    public static getLong(java.lang.Object,java.lang.String)

android.support.v4.media.MediaMetadataCompatApi21$Builder        (com.rubenroy.minimaltodo.eval_nc$m)
===============================================================================
  g    public static putText(java.lang.Object,java.lang.String,java.lang.CharSequence)
  g    public static putLong(java.lang.Object,java.lang.String,long)
  i    public static newInstance()
  j    public static putRating(java.lang.Object,java.lang.String,java.lang.Object)
  n    public static putString(java.lang.Object,java.lang.String,java.lang.String)
  r    public static putBitmap(java.lang.Object,java.lang.String,android.graphics.Bitmap)
  x    public static build(java.lang.Object)

android.support.v4.media.MediaMetadataCompatApi21$Exception      (com.rubenroy.minimaltodo.eval__g)
===============================================================================
  No methods

android.support.v4.media.RatingCompat    (com.rubenroy.minimaltodo.eval_wt)
===============================================================================
  a                public getRating()
  b                public static newThumbRating(boolean)
  h                public static fromRating(java.lang.Object)
  i                public getRatingStyle()
  i                public static newUnratedRating(int)
  k                public static newStarRating(int,float)
  l                public hasHeart()
  m                public static newHeartRating(boolean)
  o                public isRated()
  r                public getPercentRating()
  t                public static newPercentageRating(float)
  u                public getStarRating()
  v                public isThumbUp()
  describeContents public describeContents()
  toString         public toString()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.media.RatingCompat$1  (com.rubenroy.minimaltodo.eval_wt$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.media.RatingCompat$ParseException     (com.rubenroy.minimaltodo.eval_co)
===============================================================================
  No methods

android.support.v4.media.RatingCompat$StarStyle  (com.rubenroy.minimaltodo.eval_wt$k)
===============================================================================
  No methods

android.support.v4.media.RatingCompat$Style      (com.rubenroy.minimaltodo.eval_wt$u)
===============================================================================
  No methods

android.support.v4.media.RatingCompatApi21       (com.rubenroy.minimaltodo.eval_dw)
===============================================================================
  a        public static newThumbRating(boolean)
  b        public static newStarRating(int,float)
  b        public static getRatingStyle(java.lang.Object)
  eval_e   public static isRated(java.lang.Object)
  g        public static newUnratedRating(int)
  g        public static getPercentRating(java.lang.Object)
  j        public static isThumbUp(java.lang.Object)
  k        public static newHeartRating(boolean)
  t        public static getStarRating(java.lang.Object)
  w        public static hasHeart(java.lang.Object)
  z        public static newPercentageRating(float)

android.support.v4.media.RatingCompatApi21$ParseException        (com.rubenroy.minimaltodo.eval_tg)
===============================================================================
  No methods

android.support.v4.media.TransportController     (com.rubenroy.minimaltodo.eval_q5)
===============================================================================
  b        public abstract registerStateListener(android.support.v4.media.TransportStateListener)
  c        public abstract stopPlaying()
  d        public abstract getBufferPercentage()
  eval_f   public abstract unregisterStateListener(android.support.v4.media.TransportStateListener)
  eval_g   public abstract getCurrentPosition()
  l        public abstract isPlaying()
  r        public abstract getTransportControlFlags()
  s        public abstract startPlaying()
  w        public abstract getDuration()
  x        public abstract seekTo(long)
  z        public abstract pausePlaying()

android.support.v4.media.TransportController$Exception   (com.rubenroy.minimaltodo.eval_rr)
===============================================================================
  No methods

android.support.v4.media.TransportMediator       (com.rubenroy.minimaltodo.eval_ak)
===============================================================================
  b        public registerStateListener(android.support.v4.media.TransportStateListener)
  c        public stopPlaying()
  d        public getBufferPercentage()
  e        private pushControllerState()
  eval_f   public unregisterStateListener(android.support.v4.media.TransportStateListener)
  eval_g   public getCurrentPosition()
  eval_p   public destroy()
  j        private reportPlayingChanged()
  k        private reportTransportControlsChanged()
  l        public isPlaying()
  n        public getRemoteControlClient()
  n        static isMediaKey(int)
  q        public dispatchKeyEvent(android.view.KeyEvent)
  r        public getTransportControlFlags()
  s        public startPlaying()
  w        public getDuration()
  x        private getListeners()
  x        public seekTo(long)
  y        public refreshState()
  z        public pausePlaying()

android.support.v4.media.TransportMediator$1     (com.rubenroy.minimaltodo.eval_ak$1)
===============================================================================
  n    public getPlaybackPosition()
  r    public playbackPositionUpdate(long)
  t    public handleAudioFocusChange(int)
  z    public handleKey(android.view.KeyEvent)

android.support.v4.media.TransportMediator$2     (com.rubenroy.minimaltodo.eval_ak$2)
===============================================================================
  onKeyDown        public onKeyDown(int,android.view.KeyEvent)
  onKeyLongPress   public onKeyLongPress(int,android.view.KeyEvent)
  onKeyMultiple    public onKeyMultiple(int,int,android.view.KeyEvent)
  onKeyUp          public onKeyUp(int,android.view.KeyEvent)

android.support.v4.media.TransportMediator$ParseException        (com.rubenroy.minimaltodo.eval_bu)
===============================================================================
  No methods

android.support.v4.media.TransportMediatorCallback       (com.rubenroy.minimaltodo.eval_jn)
===============================================================================
  n    public abstract getPlaybackPosition()
  r    public abstract playbackPositionUpdate(long)
  t    public abstract handleAudioFocusChange(int)
  z    public abstract handleKey(android.view.KeyEvent)

android.support.v4.media.TransportMediatorCallback$NullPointerException  (com.rubenroy.minimaltodo.eval_fx)
===============================================================================
  No methods

android.support.v4.media.TransportMediatorJellybeanMR2   (com.rubenroy.minimaltodo.eval_jp)
===============================================================================
  e        loseFocus()
  eval_g   public destroy()
  eval_r   dropAudioFocus()
  eval_z   takeAudioFocus()
  j        public startPlaying()
  l        windowAttached()
  n        windowDetached()
  p        public pausePlaying()
  t        public getRemoteControlClient()
  v        gainFocus()
  x        public stopPlaying()
  x        public refreshState(boolean,long,int)

android.support.v4.media.TransportMediatorJellybeanMR2$1 (com.rubenroy.minimaltodo.eval_jp$1)
===============================================================================
  onWindowAttached public onWindowAttached()
  onWindowDetached public onWindowDetached()

android.support.v4.media.TransportMediatorJellybeanMR2$2 (com.rubenroy.minimaltodo.eval_jp$2)
===============================================================================
  onWindowFocusChanged public onWindowFocusChanged(boolean)

android.support.v4.media.TransportMediatorJellybeanMR2$3 (com.rubenroy.minimaltodo.eval_jp$3)
===============================================================================
  onReceive    public onReceive(android.content.Context,android.content.Intent)

android.support.v4.media.TransportMediatorJellybeanMR2$4 (com.rubenroy.minimaltodo.eval_jp$4)
===============================================================================
  onAudioFocusChange   public onAudioFocusChange(int)

android.support.v4.media.TransportMediatorJellybeanMR2$5 (com.rubenroy.minimaltodo.eval_jp$5)
===============================================================================
  onGetPlaybackPosition    public onGetPlaybackPosition()

android.support.v4.media.TransportMediatorJellybeanMR2$6 (com.rubenroy.minimaltodo.eval_jp$6)
===============================================================================
  onPlaybackPositionUpdate public onPlaybackPositionUpdate(long)

android.support.v4.media.TransportMediatorJellybeanMR2$Exception (com.rubenroy.minimaltodo.eval_tk)
===============================================================================
  No methods

android.support.v4.media.TransportPerformer      (com.rubenroy.minimaltodo.eval_f8)
===============================================================================
  d        public onMediaButtonUp(int,android.view.KeyEvent)
  e        public onGetBufferPercentage()
  e        public onAudioFocusChange(int)
  eval_z   public abstract onStop()
  f        public abstract onGetDuration()
  g        public abstract onStart()
  g        public onMediaButtonDown(int,android.view.KeyEvent)
  g        public abstract onSeekTo(long)
  j        public abstract onGetCurrentPosition()
  m        public abstract onIsPlaying()
  q        public onGetTransportControlFlags()
  s        public abstract onPause()

android.support.v4.media.TransportPerformer$IOException  (com.rubenroy.minimaltodo.eval_wa)
===============================================================================
  No methods

android.support.v4.media.TransportStateListener  (com.rubenroy.minimaltodo.eval_dz)
===============================================================================
  eval_e   public onPlayingChanged(android.support.v4.media.TransportController)
  k        public onTransportControlsChanged(android.support.v4.media.TransportController)

android.support.v4.media.TransportStateListener$ParseException   (com.rubenroy.minimaltodo.eval_fo)
===============================================================================
  No methods

android.support.v4.media.VolumeProviderCompat    (com.rubenroy.minimaltodo.eval_c_)
===============================================================================
  f    public final getVolumeControl()
  f    public setCallback(android.support.v4.media.VolumeProviderCompat$Callback)
  f    public onSetVolumeTo(int)
  h    public final getCurrentVolume()
  j    public final setCurrentVolume(int)
  p    public onAdjustVolume(int)
  q    public final getMaxVolume()
  u    public getVolumeProvider()

android.support.v4.media.VolumeProviderCompat$1  (com.rubenroy.minimaltodo.eval_c_$1)
===============================================================================
  h    public onSetVolumeTo(int)
  x    public onAdjustVolume(int)

android.support.v4.media.VolumeProviderCompat$Callback   (com.rubenroy.minimaltodo.eval_c_$w)
===============================================================================
  i    public abstract onVolumeChanged(android.support.v4.media.VolumeProviderCompat)

android.support.v4.media.VolumeProviderCompat$ControlType        (com.rubenroy.minimaltodo.eval_c_$p)
===============================================================================
  No methods

android.support.v4.media.VolumeProviderCompat$NullPointerException       (com.rubenroy.minimaltodo.eval_ro)
===============================================================================
  No methods

android.support.v4.media.VolumeProviderCompatApi21       (com.rubenroy.minimaltodo.eval_je)
===============================================================================
  w    public static createVolumeProvider(int,int,int,android.support.v4.media.VolumeProviderCompatApi21$Delegate)
  y    public static setCurrentVolume(java.lang.Object,int)

android.support.v4.media.VolumeProviderCompatApi21$1     (com.rubenroy.minimaltodo.eval_je$1)
===============================================================================
  onAdjustVolume   public onAdjustVolume(int)
  onSetVolumeTo    public onSetVolumeTo(int)

android.support.v4.media.VolumeProviderCompatApi21$Delegate      (com.rubenroy.minimaltodo.eval_je$f)
===============================================================================
  h    public abstract onSetVolumeTo(int)
  x    public abstract onAdjustVolume(int)

android.support.v4.media.VolumeProviderCompatApi21$NullPointerException  (com.rubenroy.minimaltodo.eval_cp)
===============================================================================
  No methods

android.support.v4.media.routing.MediaRouterJellybean    (com.rubenroy.minimaltodo.eval_up)
===============================================================================
  e        public static getMediaRouter(android.content.Context)
  e        public static createCallback(android.support.v4.media.routing.MediaRouterJellybean$Callback)
  eval_d   public static selectRoute(java.lang.Object,int,java.lang.Object)
  eval_s   public static createUserRoute(java.lang.Object,java.lang.Object)
  j        public static createVolumeCallback(android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback)
  k        public static addUserRoute(java.lang.Object,java.lang.Object)
  m        public static addCallback(java.lang.Object,int,java.lang.Object)
  p        public static getRoutes(java.lang.Object)
  p        public static removeCallback(java.lang.Object,java.lang.Object)
  t        public static getCategories(java.lang.Object)
  u        public static createRouteCategory(java.lang.Object,java.lang.String,boolean)
  v        public static getSelectedRoute(java.lang.Object,int)
  x        public static removeUserRoute(java.lang.Object,java.lang.Object)

android.support.v4.media.routing.MediaRouterJellybean$Callback   (com.rubenroy.minimaltodo.eval_up$p)
===============================================================================
  d    public abstract onRouteSelected(int,java.lang.Object)
  e    public abstract onRouteUnselected(int,java.lang.Object)
  e    public abstract onRouteGrouped(java.lang.Object,java.lang.Object,int)
  g    public abstract onRouteAdded(java.lang.Object)
  j    public abstract onRouteUngrouped(java.lang.Object,java.lang.Object)
  r    public abstract onRouteRemoved(java.lang.Object)
  v    public abstract onRouteChanged(java.lang.Object)
  x    public abstract onRouteVolumeChanged(java.lang.Object)

android.support.v4.media.routing.MediaRouterJellybean$CallbackProxy      (com.rubenroy.minimaltodo.eval_up$n)
===============================================================================
  onRouteAdded         public onRouteAdded(android.media.MediaRouter,android.media.MediaRouter$RouteInfo)
  onRouteChanged       public onRouteChanged(android.media.MediaRouter,android.media.MediaRouter$RouteInfo)
  onRouteGrouped       public onRouteGrouped(android.media.MediaRouter,android.media.MediaRouter$RouteInfo,android.media.MediaRouter$RouteGroup,int)
  onRouteRemoved       public onRouteRemoved(android.media.MediaRouter,android.media.MediaRouter$RouteInfo)
  onRouteSelected      public onRouteSelected(android.media.MediaRouter,int,android.media.MediaRouter$RouteInfo)
  onRouteUngrouped     public onRouteUngrouped(android.media.MediaRouter,android.media.MediaRouter$RouteInfo,android.media.MediaRouter$RouteGroup)
  onRouteUnselected    public onRouteUnselected(android.media.MediaRouter,int,android.media.MediaRouter$RouteInfo)
  onRouteVolumeChanged public onRouteVolumeChanged(android.media.MediaRouter,android.media.MediaRouter$RouteInfo)

android.support.v4.media.routing.MediaRouterJellybean$GetDefaultRouteWorkaround  (com.rubenroy.minimaltodo.eval_up$a)
===============================================================================
  b    public getDefaultRoute(java.lang.Object)

android.support.v4.media.routing.MediaRouterJellybean$IOException        (com.rubenroy.minimaltodo.eval__p)
===============================================================================
  No methods

android.support.v4.media.routing.MediaRouterJellybean$RouteCategory      (com.rubenroy.minimaltodo.eval_up$x)
===============================================================================
  d    public static getSupportedTypes(java.lang.Object)
  n    public static getName(java.lang.Object,android.content.Context)
  o    public static getRoutes(java.lang.Object)
  v    public static isGroupable(java.lang.Object)

android.support.v4.media.routing.MediaRouterJellybean$RouteGroup (com.rubenroy.minimaltodo.eval_up$b)
===============================================================================
  o    public static getGroupedRoutes(java.lang.Object)

android.support.v4.media.routing.MediaRouterJellybean$RouteInfo  (com.rubenroy.minimaltodo.eval_up$_)
===============================================================================
  d        public static getStatus(java.lang.Object)
  eval_d   public static getPlaybackStream(java.lang.Object)
  eval_p   public static isGroup(java.lang.Object)
  eval_q   public static getGroup(java.lang.Object)
  g        public static getCategory(java.lang.Object)
  i        public static requestUpdateVolume(java.lang.Object,int)
  j        public static getVolumeMax(java.lang.Object)
  k        public static getTag(java.lang.Object)
  m        public static getPlaybackType(java.lang.Object)
  n        public static setTag(java.lang.Object,java.lang.Object)
  p        public static getVolume(java.lang.Object)
  q        public static getSupportedTypes(java.lang.Object)
  s        public static getName(java.lang.Object,android.content.Context)
  u        public static getIconDrawable(java.lang.Object)
  z        public static getVolumeHandling(java.lang.Object)
  z        public static requestSetVolume(java.lang.Object,int)

android.support.v4.media.routing.MediaRouterJellybean$SelectRouteWorkaround      (com.rubenroy.minimaltodo.eval_up$eval_k)
===============================================================================
  p    public selectRoute(java.lang.Object,int,java.lang.Object)

android.support.v4.media.routing.MediaRouterJellybean$UserRouteInfo      (com.rubenroy.minimaltodo.eval_up$e)
===============================================================================
  b    public static setVolume(java.lang.Object,int)
  c    public static setIconDrawable(java.lang.Object,android.graphics.drawable.Drawable)
  e    public static setName(java.lang.Object,java.lang.CharSequence)
  l    public static setPlaybackType(java.lang.Object,int)
  m    public static setRemoteControlClient(java.lang.Object,java.lang.Object)
  n    public static setVolumeMax(java.lang.Object,int)
  u    public static setVolumeCallback(java.lang.Object,java.lang.Object)
  x    public static setPlaybackStream(java.lang.Object,int)
  y    public static setVolumeHandling(java.lang.Object,int)
  y    public static setStatus(java.lang.Object,java.lang.CharSequence)

android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback     (com.rubenroy.minimaltodo.eval_up$eval_z)
===============================================================================
  e    public abstract onVolumeSetRequest(java.lang.Object,int)
  k    public abstract onVolumeUpdateRequest(java.lang.Object,int)

android.support.v4.media.routing.MediaRouterJellybean$VolumeCallbackProxy        (com.rubenroy.minimaltodo.eval_up$j)
===============================================================================
  onVolumeSetRequest       public onVolumeSetRequest(android.media.MediaRouter$RouteInfo,int)
  onVolumeUpdateRequest    public onVolumeUpdateRequest(android.media.MediaRouter$RouteInfo,int)

android.support.v4.media.routing.MediaRouterJellybeanMr1 (com.rubenroy.minimaltodo.eval_c2)
===============================================================================
  h    public static createCallback(android.support.v4.media.routing.MediaRouterJellybeanMr1$Callback)

android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround    (com.rubenroy.minimaltodo.eval_c2$k)
===============================================================================
  g    public setActiveScanRouteTypes(int)
  run  public run()

android.support.v4.media.routing.MediaRouterJellybeanMr1$ArrayOutOfBoundsException       (com.rubenroy.minimaltodo.eval_yn)
===============================================================================
  No methods

android.support.v4.media.routing.MediaRouterJellybeanMr1$Callback        (com.rubenroy.minimaltodo.eval_c2$p)
===============================================================================
  b    public abstract onRoutePresentationDisplayChanged(java.lang.Object)

android.support.v4.media.routing.MediaRouterJellybeanMr1$CallbackProxy   (com.rubenroy.minimaltodo.eval_c2$b)
===============================================================================
  onRoutePresentationDisplayChanged    public onRoutePresentationDisplayChanged(android.media.MediaRouter,android.media.MediaRouter$RouteInfo)

android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround  (com.rubenroy.minimaltodo.eval_c2$u)
===============================================================================
  z    public isConnecting(java.lang.Object)

android.support.v4.media.routing.MediaRouterJellybeanMr1$RouteInfo       (com.rubenroy.minimaltodo.eval_c2$q)
===============================================================================
  a    public static isEnabled(java.lang.Object)
  g    public static getPresentationDisplay(java.lang.Object)

android.support.v4.media.routing.MediaRouterJellybeanMr2 (com.rubenroy.minimaltodo.eval_l7)
===============================================================================
  eval_t   public static getDefaultRoute(java.lang.Object)
  u        public static addCallback(java.lang.Object,int,java.lang.Object,int)

android.support.v4.media.routing.MediaRouterJellybeanMr2$ArrayOutOfBoundsException       (com.rubenroy.minimaltodo.eval_zd)
===============================================================================
  No methods

android.support.v4.media.routing.MediaRouterJellybeanMr2$RouteInfo       (com.rubenroy.minimaltodo.eval_l7$k)
===============================================================================
  j    public static getDescription(java.lang.Object)
  m    public static isConnecting(java.lang.Object)

android.support.v4.media.routing.MediaRouterJellybeanMr2$UserRouteInfo   (com.rubenroy.minimaltodo.eval_l7$e)
===============================================================================
  f    public static setDescription(java.lang.Object,java.lang.CharSequence)

android.support.v4.media.session.IMediaControllerCallback        (com.rubenroy.minimaltodo.eval_jk)
===============================================================================
  d    public abstract onExtrasChanged(android.os.Bundle)
  d    public abstract onQueueChanged(java.util.List)
  m    public abstract onSessionDestroyed()
  m    public abstract onQueueTitleChanged(java.lang.CharSequence)
  m    public abstract onEvent(java.lang.String,android.os.Bundle)
  r    public abstract onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)
  v    public abstract onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat)
  z    public abstract onMetadataChanged(android.support.v4.media.MediaMetadataCompat)

android.support.v4.media.session.IMediaControllerCallback$ParseException (com.rubenroy.minimaltodo.eval_uj)
===============================================================================
  No methods

android.support.v4.media.session.IMediaControllerCallback$Stub   (com.rubenroy.minimaltodo.eval_jk$d)
===============================================================================
  d            public abstract onExtrasChanged(android.os.Bundle)
  d            public abstract onQueueChanged(java.util.List)
  m            public abstract onSessionDestroyed()
  m            public abstract onQueueTitleChanged(java.lang.CharSequence)
  m            public abstract onEvent(java.lang.String,android.os.Bundle)
  r            public abstract onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)
  t            public static asInterface(android.os.IBinder)
  v            public abstract onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat)
  z            public abstract onMetadataChanged(android.support.v4.media.MediaMetadataCompat)
  asBinder     public asBinder()
  onTransact   public onTransact(int,android.os.Parcel,android.os.Parcel,int)

android.support.v4.media.session.IMediaControllerCallback$Stub$ParseException    (com.rubenroy.minimaltodo.eval_de)
===============================================================================
  No methods

android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy     (com.rubenroy.minimaltodo.eval_jk$d$y)
===============================================================================
  d        public onExtrasChanged(android.os.Bundle)
  d        public onQueueChanged(java.util.List)
  m        public onSessionDestroyed()
  m        public onQueueTitleChanged(java.lang.CharSequence)
  m        public onEvent(java.lang.String,android.os.Bundle)
  p        public getInterfaceDescriptor()
  r        public onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)
  v        public onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat)
  z        public onMetadataChanged(android.support.v4.media.MediaMetadataCompat)
  asBinder public asBinder()

android.support.v4.media.session.IMediaSession   (com.rubenroy.minimaltodo.eval_hg)
===============================================================================
  b        public abstract getLaunchPendingIntent()
  b        public abstract sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper)
  c        public abstract getVolumeAttributes()
  d        public abstract stop()
  d        public abstract adjustVolume(int,int,java.lang.String)
  e        public abstract getFlags()
  eval__   public abstract previous()
  eval_a   public abstract getExtras()
  eval_d   public abstract playFromSearch(java.lang.String,android.os.Bundle)
  eval_f   public abstract next()
  eval_i   public abstract getRatingType()
  eval_o   public abstract getQueue()
  eval_t   public abstract getPlaybackState()
  f        public abstract rate(android.support.v4.media.RatingCompat)
  g        public abstract play()
  h        public abstract rewind()
  i        public abstract getPackageName()
  j        public abstract fastForward()
  j        public abstract unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback)
  k        public abstract isTransportControlEnabled()
  l        public abstract getQueueTitle()
  l        public abstract sendMediaButton(android.view.KeyEvent)
  m        public abstract pause()
  m        public abstract seekTo(long)
  p        public abstract setVolumeTo(int,int,java.lang.String)
  r        public abstract sendCustomAction(java.lang.String,android.os.Bundle)
  s        public abstract skipToQueueItem(long)
  u        public abstract getMetadata()
  u        public abstract playFromUri(android.net.Uri,android.os.Bundle)
  u        public abstract playFromMediaId(java.lang.String,android.os.Bundle)
  w        public abstract getTag()
  w        public abstract registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback)

android.support.v4.media.session.IMediaSession$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_an)
===============================================================================
  No methods

android.support.v4.media.session.IMediaSession$Stub      (com.rubenroy.minimaltodo.eval_hg$f)
===============================================================================
  b            public abstract getLaunchPendingIntent()
  b            public abstract sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper)
  c            public abstract getVolumeAttributes()
  d            public abstract stop()
  d            public abstract adjustVolume(int,int,java.lang.String)
  e            public abstract getFlags()
  eval__       public abstract previous()
  eval_a       public abstract getExtras()
  eval_d       public abstract playFromSearch(java.lang.String,android.os.Bundle)
  eval_f       public abstract next()
  eval_i       public abstract getRatingType()
  eval_o       public abstract getQueue()
  eval_t       public abstract getPlaybackState()
  f            public abstract rate(android.support.v4.media.RatingCompat)
  g            public abstract play()
  h            public abstract rewind()
  i            public abstract getPackageName()
  j            public abstract fastForward()
  j            public abstract unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback)
  k            public abstract isTransportControlEnabled()
  l            public abstract getQueueTitle()
  l            public abstract sendMediaButton(android.view.KeyEvent)
  m            public abstract pause()
  m            public abstract seekTo(long)
  p            public abstract setVolumeTo(int,int,java.lang.String)
  r            public abstract sendCustomAction(java.lang.String,android.os.Bundle)
  s            public abstract skipToQueueItem(long)
  u            public abstract getMetadata()
  u            public abstract playFromUri(android.net.Uri,android.os.Bundle)
  u            public static asInterface(android.os.IBinder)
  u            public abstract playFromMediaId(java.lang.String,android.os.Bundle)
  w            public abstract getTag()
  w            public abstract registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback)
  asBinder     public asBinder()
  onTransact   public onTransact(int,android.os.Parcel,android.os.Parcel,int)

android.support.v4.media.session.IMediaSession$Stub$ArrayOutOfBoundsException    (com.rubenroy.minimaltodo.eval_ok)
===============================================================================
  No methods

android.support.v4.media.session.IMediaSession$Stub$Proxy        (com.rubenroy.minimaltodo.eval_hg$f$g)
===============================================================================
  b        public getLaunchPendingIntent()
  b        public sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper)
  c        public getVolumeAttributes()
  d        public stop()
  d        public adjustVolume(int,int,java.lang.String)
  e        public getFlags()
  eval__   public previous()
  eval_a   public getExtras()
  eval_d   public playFromSearch(java.lang.String,android.os.Bundle)
  eval_f   public next()
  eval_i   public getRatingType()
  eval_o   public getQueue()
  eval_t   public getPlaybackState()
  f        public rate(android.support.v4.media.RatingCompat)
  g        public play()
  h        public rewind()
  i        public getPackageName()
  j        public fastForward()
  j        public unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback)
  k        public isTransportControlEnabled()
  l        public getQueueTitle()
  l        public sendMediaButton(android.view.KeyEvent)
  m        public pause()
  m        public seekTo(long)
  p        public setVolumeTo(int,int,java.lang.String)
  r        public sendCustomAction(java.lang.String,android.os.Bundle)
  s        public getInterfaceDescriptor()
  s        public skipToQueueItem(long)
  u        public getMetadata()
  u        public playFromUri(android.net.Uri,android.os.Bundle)
  u        public playFromMediaId(java.lang.String,android.os.Bundle)
  w        public getTag()
  w        public registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback)
  asBinder public asBinder()

android.support.v4.media.session.MediaButtonReceiver     (com.rubenroy.minimaltodo.eval_vd)
===============================================================================
  e            public static handleIntent(android.support.v4.media.session.MediaSessionCompat,android.content.Intent)
  onReceive    public onReceive(android.content.Context,android.content.Intent)

android.support.v4.media.session.MediaButtonReceiver$ParseException      (com.rubenroy.minimaltodo.eval_eb)
===============================================================================
  No methods

android.support.v4.media.session.MediaControllerCompat   (com.rubenroy.minimaltodo.eval_o0)
===============================================================================
  a        public dispatchMediaButtonEvent(android.view.KeyEvent)
  c        public sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)
  d        public registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler)
  eval_d   public getQueueTitle()
  eval_e   public getFlags()
  eval_r   public getPackageName()
  f        public getQueue()
  g        public unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback)
  h        public getExtras()
  h        public registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback)
  h        public adjustVolume(int,int)
  l        public getPlaybackState()
  m        public getPlaybackInfo()
  n        public getSessionToken()
  o        public getMetadata()
  o        public setVolumeTo(int,int)
  q        public getTransportControls()
  t        public getRatingType()
  w        public getMediaController()
  x        public getSessionActivity()

android.support.v4.media.session.MediaControllerCompat$1 (com.rubenroy.minimaltodo.eval_o0$1)
===============================================================================
  No methods

android.support.v4.media.session.MediaControllerCompat$Callback  (com.rubenroy.minimaltodo.eval_o0$h)
===============================================================================
  c            static access$400(android.support.v4.media.session.MediaControllerCompat$Callback)
  g            public onSessionDestroyed()
  g            public onAudioInfoChanged(android.support.v4.media.session.MediaControllerCompat$PlaybackInfo)
  h            private setHandler(android.os.Handler)
  h            public onQueueTitleChanged(java.lang.CharSequence)
  i            public onExtrasChanged(android.os.Bundle)
  i            public onQueueChanged(java.util.List)
  j            static access$302(android.support.v4.media.session.MediaControllerCompat$Callback,boolean)
  l            static access$300(android.support.v4.media.session.MediaControllerCompat$Callback)
  q            static access$500(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler)
  r            public onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat)
  r            public onSessionEvent(java.lang.String,android.os.Bundle)
  v            static access$200(android.support.v4.media.session.MediaControllerCompat$Callback)
  z            public onMetadataChanged(android.support.v4.media.MediaMetadataCompat)
  binderDied   public binderDied()

android.support.v4.media.session.MediaControllerCompat$Callback$IOException      (com.rubenroy.minimaltodo.eval_yy)
===============================================================================
  No methods

android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler   (com.rubenroy.minimaltodo.eval_o0$h$c)
===============================================================================
  o                public post(int,java.lang.Object,android.os.Bundle)
  handleMessage    public handleMessage(android.os.Message)

android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21        (com.rubenroy.minimaltodo.eval_o0$h$z)
===============================================================================
  b    public onSessionDestroyed()
  d    public onPlaybackStateChanged(java.lang.Object)
  h    public onSessionEvent(java.lang.String,android.os.Bundle)
  y    public onMetadataChanged(java.lang.Object)

android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat       (com.rubenroy.minimaltodo.eval_o0$h$v)
===============================================================================
  d    public onExtrasChanged(android.os.Bundle)
  d    public onQueueChanged(java.util.List)
  m    public onSessionDestroyed()
  m    public onQueueTitleChanged(java.lang.CharSequence)
  m    public onEvent(java.lang.String,android.os.Bundle)
  r    public onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)
  v    public onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat)
  z    public onMetadataChanged(android.support.v4.media.MediaMetadataCompat)

android.support.v4.media.session.MediaControllerCompat$Exception (com.rubenroy.minimaltodo.eval_q3)
===============================================================================
  No methods

android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl       (com.rubenroy.minimaltodo.eval_o0$r)
===============================================================================
  d        public abstract registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler)
  eval_d   public abstract getPackageName()
  eval_u   public abstract getMediaController()
  f        public abstract getExtras()
  f        public abstract sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)
  h        public abstract getRatingType()
  k        public abstract getSessionActivity()
  k        public abstract adjustVolume(int,int)
  l        public abstract getTransportControls()
  n        public abstract getQueue()
  r        public abstract getMetadata()
  r        public abstract setVolumeTo(int,int)
  s        public abstract getQueueTitle()
  t        public abstract getPlaybackState()
  u        public abstract getFlags()
  w        public abstract getPlaybackInfo()
  w        public abstract unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback)
  z        public abstract dispatchMediaButtonEvent(android.view.KeyEvent)

android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21  (com.rubenroy.minimaltodo.eval_o0$_)
===============================================================================
  d        public registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler)
  eval_d   public getPackageName()
  eval_u   public getMediaController()
  f        public getExtras()
  f        public sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)
  h        public getRatingType()
  k        public getSessionActivity()
  k        public adjustVolume(int,int)
  l        public getTransportControls()
  n        public getQueue()
  r        public getMetadata()
  r        public setVolumeTo(int,int)
  s        public getQueueTitle()
  t        public getPlaybackState()
  u        public getFlags()
  w        public getPlaybackInfo()
  w        public unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback)
  z        public dispatchMediaButtonEvent(android.view.KeyEvent)

android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi23  (com.rubenroy.minimaltodo.eval_o0$eval_k)
===============================================================================
  l    public getTransportControls()

android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase   (com.rubenroy.minimaltodo.eval_o0$d)
===============================================================================
  d        public registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler)
  eval_d   public getPackageName()
  eval_u   public getMediaController()
  f        public getExtras()
  f        public sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)
  h        public getRatingType()
  k        public getSessionActivity()
  k        public adjustVolume(int,int)
  l        public getTransportControls()
  n        public getQueue()
  r        public getMetadata()
  r        public setVolumeTo(int,int)
  s        public getQueueTitle()
  t        public getPlaybackState()
  u        public getFlags()
  w        public getPlaybackInfo()
  w        public unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback)
  z        public dispatchMediaButtonEvent(android.view.KeyEvent)

android.support.v4.media.session.MediaControllerCompat$PlaybackInfo      (com.rubenroy.minimaltodo.eval_o0$v)
===============================================================================
  d    public getMaxVolume()
  l    public getAudioStream()
  o    public getVolumeControl()
  q    public getPlaybackType()
  x    public getCurrentVolume()

android.support.v4.media.session.MediaControllerCompat$TransportControls (com.rubenroy.minimaltodo.eval_o0$g)
===============================================================================
  eval_k   public abstract skipToNext()
  eval_m   public abstract fastForward()
  f        public abstract pause()
  l        public abstract sendCustomAction(java.lang.String,android.os.Bundle)
  m        public abstract rewind()
  n        public abstract playFromSearch(java.lang.String,android.os.Bundle)
  o        public abstract stop()
  p        public abstract playFromUri(android.net.Uri,android.os.Bundle)
  r        public abstract play()
  s        public abstract seekTo(long)
  t        public abstract setRating(android.support.v4.media.RatingCompat)
  t        public abstract sendCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction,android.os.Bundle)
  t        public abstract skipToQueueItem(long)
  v        public abstract skipToPrevious()
  v        public abstract playFromMediaId(java.lang.String,android.os.Bundle)

android.support.v4.media.session.MediaControllerCompat$TransportControlsApi21    (com.rubenroy.minimaltodo.eval_o0$eval_f)
===============================================================================
  eval_k   public skipToNext()
  eval_m   public fastForward()
  f        public pause()
  l        public sendCustomAction(java.lang.String,android.os.Bundle)
  m        public rewind()
  n        public playFromSearch(java.lang.String,android.os.Bundle)
  o        public stop()
  p        public playFromUri(android.net.Uri,android.os.Bundle)
  r        public play()
  s        public seekTo(long)
  t        public setRating(android.support.v4.media.RatingCompat)
  t        public sendCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction,android.os.Bundle)
  t        public skipToQueueItem(long)
  v        public skipToPrevious()
  v        public playFromMediaId(java.lang.String,android.os.Bundle)

android.support.v4.media.session.MediaControllerCompat$TransportControlsApi23    (com.rubenroy.minimaltodo.eval_o0$x)
===============================================================================
  p    public playFromUri(android.net.Uri,android.os.Bundle)

android.support.v4.media.session.MediaControllerCompat$TransportControlsBase     (com.rubenroy.minimaltodo.eval_o0$eval_g)
===============================================================================
  eval_k   public skipToNext()
  eval_m   public fastForward()
  f        public pause()
  l        public sendCustomAction(java.lang.String,android.os.Bundle)
  m        public rewind()
  n        public playFromSearch(java.lang.String,android.os.Bundle)
  o        public stop()
  p        public playFromUri(android.net.Uri,android.os.Bundle)
  r        public play()
  s        public seekTo(long)
  t        public setRating(android.support.v4.media.RatingCompat)
  t        public sendCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction,android.os.Bundle)
  t        public skipToQueueItem(long)
  v        public skipToPrevious()
  v        public playFromMediaId(java.lang.String,android.os.Bundle)

android.support.v4.media.session.MediaControllerCompatApi21      (com.rubenroy.minimaltodo.eval_ri)
===============================================================================
  d        public static registerCallback(java.lang.Object,java.lang.Object,android.os.Handler)
  eval_u   public static getFlags(java.lang.Object)
  f        public static getTransportControls(java.lang.Object)
  h        public static setVolumeTo(java.lang.Object,int,int)
  i        public static getSessionActivity(java.lang.Object)
  j        public static getQueueTitle(java.lang.Object)
  k        public static getPlaybackState(java.lang.Object)
  l        public static getExtras(java.lang.Object)
  m        public static sendCommand(java.lang.Object,java.lang.String,android.os.Bundle,android.os.ResultReceiver)
  p        public static getQueue(java.lang.Object)
  s        public static getPackageName(java.lang.Object)
  t        public static fromToken(android.content.Context,java.lang.Object)
  t        public static createCallback(android.support.v4.media.session.MediaControllerCompatApi21$Callback)
  t        public static dispatchMediaButtonEvent(java.lang.Object,android.view.KeyEvent)
  t        public static adjustVolume(java.lang.Object,int,int)
  u        public static getPlaybackInfo(java.lang.Object)
  u        public static unregisterCallback(java.lang.Object,java.lang.Object)
  w        public static getMetadata(java.lang.Object)
  z        public static getRatingType(java.lang.Object)

android.support.v4.media.session.MediaControllerCompatApi21$Callback     (com.rubenroy.minimaltodo.eval_ri$f)
===============================================================================
  b    public abstract onSessionDestroyed()
  d    public abstract onPlaybackStateChanged(java.lang.Object)
  h    public abstract onSessionEvent(java.lang.String,android.os.Bundle)
  y    public abstract onMetadataChanged(java.lang.Object)

android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy        (com.rubenroy.minimaltodo.eval_ri$i)
===============================================================================
  onMetadataChanged        public onMetadataChanged(android.media.MediaMetadata)
  onPlaybackStateChanged   public onPlaybackStateChanged(android.media.session.PlaybackState)
  onSessionDestroyed       public onSessionDestroyed()
  onSessionEvent           public onSessionEvent(java.lang.String,android.os.Bundle)

android.support.v4.media.session.MediaControllerCompatApi21$Exception    (com.rubenroy.minimaltodo.eval_f3)
===============================================================================
  No methods

android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo (com.rubenroy.minimaltodo.eval_ri$r)
===============================================================================
  k    public static getMaxVolume(java.lang.Object)
  l    public static getVolumeControl(java.lang.Object)
  r    public static getPlaybackType(java.lang.Object)
  t    public static getAudioAttributes(java.lang.Object)
  v    public static getCurrentVolume(java.lang.Object)
  x    private static toLegacyStreamType(android.media.AudioAttributes)
  z    public static getLegacyAudioStream(java.lang.Object)

android.support.v4.media.session.MediaControllerCompatApi21$TransportControls    (com.rubenroy.minimaltodo.eval_ri$b)
===============================================================================
  b        public static play(java.lang.Object)
  e        public static setRating(java.lang.Object,java.lang.Object)
  e        public static playFromSearch(java.lang.Object,java.lang.String,android.os.Bundle)
  eval_l   public static seekTo(java.lang.Object,long)
  g        public static fastForward(java.lang.Object)
  i        public static sendCustomAction(java.lang.Object,java.lang.String,android.os.Bundle)
  j        public static stop(java.lang.Object)
  k        public static rewind(java.lang.Object)
  o        public static skipToNext(java.lang.Object)
  q        public static skipToQueueItem(java.lang.Object,long)
  r        public static playFromMediaId(java.lang.Object,java.lang.String,android.os.Bundle)
  y        public static pause(java.lang.Object)
  z        public static skipToPrevious(java.lang.Object)

android.support.v4.media.session.MediaControllerCompatApi23      (com.rubenroy.minimaltodo.eval_qw)
===============================================================================
  No methods

android.support.v4.media.session.MediaControllerCompatApi23$Exception    (com.rubenroy.minimaltodo.eval_hv)
===============================================================================
  No methods

android.support.v4.media.session.MediaControllerCompatApi23$TransportControls    (com.rubenroy.minimaltodo.eval_qw$u)
===============================================================================
  w    public static playFromUri(java.lang.Object,android.net.Uri,android.os.Bundle)

android.support.v4.media.session.MediaSessionCompat      (com.rubenroy.minimaltodo.eval_dk)
===============================================================================
  b        public getMediaSession()
  d        public setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat)
  e        public setSessionActivity(android.app.PendingIntent)
  eval_r   public release()
  eval_t   public getController()
  f        public sendSessionEvent(java.lang.String,android.os.Bundle)
  g        public isActive()
  g        public setExtras(android.os.Bundle)
  g        public setActive(boolean)
  h        public setFlags(int)
  i        public setPlaybackToLocal(int)
  k        public setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)
  l        public setRatingType(int)
  n        public setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler)
  o        public setMediaButtonReceiver(android.app.PendingIntent)
  s        public getSessionToken()
  s        public setMetadata(android.support.v4.media.MediaMetadataCompat)
  s        public setQueue(java.util.List)
  t        public removeOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener)
  t        public setQueueTitle(java.lang.CharSequence)
  v        public setCallback(android.support.v4.media.session.MediaSessionCompat$Callback)
  w        public static obtain(android.content.Context,java.lang.Object)
  x        public getRemoteControlClient()
  z        public addOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener)

android.support.v4.media.session.MediaSessionCompat$1    (com.rubenroy.minimaltodo.eval_dk$1)
===============================================================================
  No methods

android.support.v4.media.session.MediaSessionCompat$ArrayOutOfBoundsException    (com.rubenroy.minimaltodo.eval_df)
===============================================================================
  No methods

android.support.v4.media.session.MediaSessionCompat$Callback     (com.rubenroy.minimaltodo.eval_dk$n)
===============================================================================
  b        public onPlayFromMediaId(java.lang.String,android.os.Bundle)
  c        public onStop()
  eval_n   public onRewind()
  eval_q   public onSetRating(android.support.v4.media.RatingCompat)
  eval_t   public onPlay()
  g        public onMediaButtonEvent(android.content.Intent)
  g        public onSkipToQueueItem(long)
  h        public onSeekTo(long)
  o        public onPlayFromSearch(java.lang.String,android.os.Bundle)
  s        public onFastForward()
  t        public onPause()
  u        public onSkipToPrevious()
  u        public onPlayFromUri(android.net.Uri,android.os.Bundle)
  u        public onCustomAction(java.lang.String,android.os.Bundle)
  u        public onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)
  w        public onSkipToNext()

android.support.v4.media.session.MediaSessionCompat$Callback$NullPointerException        (com.rubenroy.minimaltodo.eval_h3)
===============================================================================
  No methods

android.support.v4.media.session.MediaSessionCompat$Callback$StubApi21   (com.rubenroy.minimaltodo.eval_dk$n$d)
===============================================================================
  b    public onSkipToNext()
  c    public onPause()
  c    public onPlayFromMediaId(java.lang.String,android.os.Bundle)
  d    public onMediaButtonEvent(android.content.Intent)
  e    public onPlay()
  i    public onRewind()
  k    public onSkipToQueueItem(long)
  m    public onStop()
  m    public onPlayFromSearch(java.lang.String,android.os.Bundle)
  n    public onSetRating(java.lang.Object)
  t    public onSkipToPrevious()
  u    public onFastForward()
  u    public onCustomAction(java.lang.String,android.os.Bundle)
  v    public onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)
  z    public onSeekTo(long)

android.support.v4.media.session.MediaSessionCompat$Callback$StubApi23   (com.rubenroy.minimaltodo.eval_dk$n$t)
===============================================================================
  k    public onPlayFromUri(android.net.Uri,android.os.Bundle)

android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl     (com.rubenroy.minimaltodo.eval_dk$a)
===============================================================================
  d        public abstract setActive(boolean)
  d        public abstract setFlags(int)
  eval_h   public abstract setPlaybackToLocal(int)
  g        public abstract getRemoteControlClient()
  g        public abstract setQueue(java.util.List)
  j        public abstract setExtras(android.os.Bundle)
  m        public abstract setSessionActivity(android.app.PendingIntent)
  n        public abstract setMediaButtonReceiver(android.app.PendingIntent)
  o        public abstract setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)
  s        public abstract release()
  t        public abstract isActive()
  t        public abstract setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler)
  u        public abstract getMediaSession()
  v        public abstract setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat)
  v        public abstract setRatingType(int)
  x        public abstract sendSessionEvent(java.lang.String,android.os.Bundle)
  y        public abstract getSessionToken()
  z        public abstract setMetadata(android.support.v4.media.MediaMetadataCompat)
  z        public abstract setQueueTitle(java.lang.CharSequence)

android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21        (com.rubenroy.minimaltodo.eval_dk$o)
===============================================================================
  d        public setActive(boolean)
  d        public setFlags(int)
  eval_h   public setPlaybackToLocal(int)
  g        public getRemoteControlClient()
  g        public setQueue(java.util.List)
  j        public setExtras(android.os.Bundle)
  m        public setSessionActivity(android.app.PendingIntent)
  n        public setMediaButtonReceiver(android.app.PendingIntent)
  o        public setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)
  s        public release()
  t        public isActive()
  t        public setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler)
  u        public getMediaSession()
  v        public setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat)
  v        public setRatingType(int)
  x        public sendSessionEvent(java.lang.String,android.os.Bundle)
  y        public getSessionToken()
  z        public setMetadata(android.support.v4.media.MediaMetadataCompat)
  z        public setQueueTitle(java.lang.CharSequence)

android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase (com.rubenroy.minimaltodo.eval_dk$j)
===============================================================================
  b        static access$1600(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  b        private sendQueueTitle(java.lang.CharSequence)
  c        private sendEvent(java.lang.String,android.os.Bundle)
  d        static access$900(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  d        private sendVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)
  d        public setActive(boolean)
  d        public setFlags(int)
  e        private sendSessionDestroyed()
  eval_a   static access$2600(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  eval_c   static access$2200(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  eval_h   public setPlaybackToLocal(int)
  eval_i   static access$2500(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  eval_j   static access$1500(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  eval_k   static access$1200(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  eval_p   static access$2300(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  eval_u   static access$1900(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  eval_w   static access$1300(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  f        static access$2000(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  g        public getRemoteControlClient()
  g        public setQueue(java.util.List)
  h        static access$300(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  i        private getStateWithUpdatedPosition()
  i        static access$400(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  j        public setExtras(android.os.Bundle)
  j        static access$600(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase,android.support.v4.media.session.ParcelableVolumeInfo)
  k        private adjustVolume(int,int)
  k        private sendQueue(java.util.List)
  l        static access$1000(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  m        public setSessionActivity(android.app.PendingIntent)
  m        static access$500(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  n        public setMediaButtonReceiver(android.app.PendingIntent)
  o        private update()
  o        public setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)
  p        static access$2100(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  p        static access$1800(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase,int,int)
  p        private setVolumeTo(int,int)
  q        static access$800(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  s        public release()
  s        static access$1400(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  t        public isActive()
  t        public setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler)
  u        public getMediaSession()
  v        public setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat)
  v        public setRatingType(int)
  w        private sendMetadata(android.support.v4.media.MediaMetadataCompat)
  w        static access$2400(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  x        static access$1700(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase,int,int)
  x        public sendSessionEvent(java.lang.String,android.os.Bundle)
  y        public getSessionToken()
  y        static access$1100(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
  y        private sendState(android.support.v4.media.session.PlaybackStateCompat)
  z        public setMetadata(android.support.v4.media.MediaMetadataCompat)
  z        public setQueueTitle(java.lang.CharSequence)

android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1       (com.rubenroy.minimaltodo.eval_dk$j$1)
===============================================================================
  i    public onVolumeChanged(android.support.v4.media.VolumeProviderCompat)

android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$2       (com.rubenroy.minimaltodo.eval_dk$j$2)
===============================================================================
  d        public onRewind()
  eval_a   public onFastForward()
  eval_v   public onMediaButtonEvent(android.content.Intent)
  l        public onStop()
  p        public onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)
  q        public onSetRating(java.lang.Object)
  s        public onSkipToNext()
  u        public onPause()
  v        public onSeekTo(long)
  w        public onSkipToPrevious()
  z        public onPlay()

android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$Command (com.rubenroy.minimaltodo.eval_dk$j$b)
===============================================================================
  No methods

android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub        (com.rubenroy.minimaltodo.eval_dk$j$n)
===============================================================================
  b        public getLaunchPendingIntent()
  b        public sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper)
  c        public getVolumeAttributes()
  d        public stop()
  d        public adjustVolume(int,int,java.lang.String)
  e        public getFlags()
  eval__   public previous()
  eval_a   public getExtras()
  eval_d   public playFromSearch(java.lang.String,android.os.Bundle)
  eval_f   public next()
  eval_i   public getRatingType()
  eval_o   public getQueue()
  eval_t   public getPlaybackState()
  f        public rate(android.support.v4.media.RatingCompat)
  g        public play()
  h        public rewind()
  i        public getPackageName()
  j        public fastForward()
  j        public unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback)
  k        public isTransportControlEnabled()
  l        public getQueueTitle()
  l        public sendMediaButton(android.view.KeyEvent)
  m        public pause()
  m        public seekTo(long)
  p        public setVolumeTo(int,int,java.lang.String)
  r        public sendCustomAction(java.lang.String,android.os.Bundle)
  s        public skipToQueueItem(long)
  u        public getMetadata()
  u        public playFromUri(android.net.Uri,android.os.Bundle)
  u        public playFromMediaId(java.lang.String,android.os.Bundle)
  w        public getTag()
  w        public registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback)

android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler  (com.rubenroy.minimaltodo.eval_dk$j$z)
===============================================================================
  d                private onMediaButtonEvent(android.view.KeyEvent)
  s                public post(int,java.lang.Object,android.os.Bundle)
  s                public post(int,java.lang.Object,int)
  v                public post(int,java.lang.Object)
  w                public post(int)
  handleMessage    public handleMessage(android.os.Message)

android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$ParseException  (com.rubenroy.minimaltodo.eval_cr)
===============================================================================
  No methods

android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener       (com.rubenroy.minimaltodo.eval_dk$k)
===============================================================================
  l    public abstract onActiveChanged()

android.support.v4.media.session.MediaSessionCompat$QueueItem    (com.rubenroy.minimaltodo.eval_dk$eval_s)
===============================================================================
  b                public getQueueItem()
  f                public getDescription()
  p                public static obtain(java.lang.Object)
  w                public getQueueId()
  describeContents public describeContents()
  toString         public toString()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.media.session.MediaSessionCompat$QueueItem$1  (com.rubenroy.minimaltodo.eval_dk$eval_s$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.media.session.MediaSessionCompat$QueueItem$ArrayOutOfBoundsException  (com.rubenroy.minimaltodo.eval__y)
===============================================================================
  No methods

android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper        (com.rubenroy.minimaltodo.eval_dk$u)
===============================================================================
  f                static access$700(android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper)
  describeContents public describeContents()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1      (com.rubenroy.minimaltodo.eval_dk$u$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$IOException    (com.rubenroy.minimaltodo.eval_a9)
===============================================================================
  No methods

android.support.v4.media.session.MediaSessionCompat$SessionFlags (com.rubenroy.minimaltodo.eval_dk$eval_o)
===============================================================================
  No methods

android.support.v4.media.session.MediaSessionCompat$Token        (com.rubenroy.minimaltodo.eval_dk$b)
===============================================================================
  eval_t           public static fromToken(java.lang.Object)
  i                public getToken()
  describeContents public describeContents()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.media.session.MediaSessionCompat$Token$1      (com.rubenroy.minimaltodo.eval_dk$b$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.media.session.MediaSessionCompat$Token$ParseException (com.rubenroy.minimaltodo.eval_l_)
===============================================================================
  No methods

android.support.v4.media.session.MediaSessionCompatApi14 (com.rubenroy.minimaltodo.eval_j6)
===============================================================================
  b    public static setMetadata(java.lang.Object,android.os.Bundle)
  c    public static registerRemoteControlClient(android.content.Context,java.lang.Object)
  e    public static setState(java.lang.Object,int)
  i    static getRccTransportControlFlagsFromActions(long)
  k    public static unregisterRemoteControlClient(android.content.Context,java.lang.Object)
  q    static buildOldMetadata(android.os.Bundle,android.media.RemoteControlClient$MetadataEditor)
  t    static getRccStateFromState(int)
  x    public static createRemoteControlClient(android.app.PendingIntent)
  y    public static setTransportControlFlags(java.lang.Object,long)

android.support.v4.media.session.MediaSessionCompatApi14$ArrayOutOfBoundsException       (com.rubenroy.minimaltodo.eval_p2)
===============================================================================
  No methods

android.support.v4.media.session.MediaSessionCompatApi14$Callback        (com.rubenroy.minimaltodo.eval_j6$l)
===============================================================================
  d        public abstract onRewind()
  eval_a   public abstract onFastForward()
  eval_v   public abstract onMediaButtonEvent(android.content.Intent)
  l        public abstract onStop()
  p        public abstract onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)
  q        public abstract onSetRating(java.lang.Object)
  s        public abstract onSkipToNext()
  u        public abstract onPause()
  v        public abstract onSeekTo(long)
  w        public abstract onSkipToPrevious()
  z        public abstract onPlay()

android.support.v4.media.session.MediaSessionCompatApi18 (com.rubenroy.minimaltodo.eval_jc)
===============================================================================
  c    public static unregisterMediaButtonEventReceiver(android.content.Context,android.app.PendingIntent,android.content.ComponentName)
  f    public static setOnPlaybackPositionUpdateListener(java.lang.Object,java.lang.Object)
  h    public static registerMediaButtonEventReceiver(android.content.Context,android.app.PendingIntent,android.content.ComponentName)
  j    public static createPlaybackPositionUpdateListener(android.support.v4.media.session.MediaSessionCompatApi14$Callback)
  o    public static setTransportControlFlags(java.lang.Object,long)
  v    public static setState(java.lang.Object,int,long,float,long)
  w    static getRccTransportControlFlagsFromActions(long)

android.support.v4.media.session.MediaSessionCompatApi18$ArrayOutOfBoundsException       (com.rubenroy.minimaltodo.eval_jh)
===============================================================================
  No methods

android.support.v4.media.session.MediaSessionCompatApi18$OnPlaybackPositionUpdateListener        (com.rubenroy.minimaltodo.eval_jc$j)
===============================================================================
  onPlaybackPositionUpdate public onPlaybackPositionUpdate(long)

android.support.v4.media.session.MediaSessionCompatApi19 (com.rubenroy.minimaltodo.eval_m7)
===============================================================================
  b    public static setMetadata(java.lang.Object,android.os.Bundle,long)
  c    public static createMetadataUpdateListener(android.support.v4.media.session.MediaSessionCompatApi14$Callback)
  d    public static setOnMetadataUpdateListener(java.lang.Object,java.lang.Object)
  d    static getRccTransportControlFlagsFromActions(long)
  t    static addNewMetadata(android.os.Bundle,android.media.RemoteControlClient$MetadataEditor)
  y    public static setTransportControlFlags(java.lang.Object,long)

android.support.v4.media.session.MediaSessionCompatApi19$ArrayOutOfBoundsException       (com.rubenroy.minimaltodo.eval_kp)
===============================================================================
  No methods

android.support.v4.media.session.MediaSessionCompatApi19$OnMetadataUpdateListener        (com.rubenroy.minimaltodo.eval_m7$u)
===============================================================================
  onMetadataUpdate public onMetadataUpdate(int,java.lang.Object)

android.support.v4.media.session.MediaSessionCompatApi21 (com.rubenroy.minimaltodo.eval_ac)
===============================================================================
  b        public static setActive(java.lang.Object,boolean)
  b        public static setMetadata(java.lang.Object,java.lang.Object)
  d        public static setPlaybackToLocal(java.lang.Object,int)
  d        public static setQueue(java.lang.Object,java.util.List)
  eval_e   public static setMediaButtonReceiver(java.lang.Object,android.app.PendingIntent)
  eval_s   public static setCallback(java.lang.Object,java.lang.Object,android.os.Handler)
  f        public static setQueueTitle(java.lang.Object,java.lang.CharSequence)
  g        public static setPlaybackToRemote(java.lang.Object,java.lang.Object)
  h        public static setSessionActivity(java.lang.Object,android.app.PendingIntent)
  h        public static setExtras(java.lang.Object,android.os.Bundle)
  j        public static getSessionToken(java.lang.Object)
  m        public static release(java.lang.Object)
  m        public static setPlaybackState(java.lang.Object,java.lang.Object)
  o        public static verifyToken(java.lang.Object)
  o        public static sendSessionEvent(java.lang.Object,java.lang.String,android.os.Bundle)
  r        public static createSession(android.content.Context,java.lang.String)
  s        public static verifySession(java.lang.Object)
  u        public static isActive(java.lang.Object)
  z        public static createCallback(android.support.v4.media.session.MediaSessionCompatApi21$Callback)
  z        public static setFlags(java.lang.Object,int)

android.support.v4.media.session.MediaSessionCompatApi21$ArrayOutOfBoundsException       (com.rubenroy.minimaltodo.eval_wm)
===============================================================================
  No methods

android.support.v4.media.session.MediaSessionCompatApi21$Callback        (com.rubenroy.minimaltodo.eval_ac$v)
===============================================================================
  b    public abstract onSkipToNext()
  c    public abstract onPause()
  c    public abstract onPlayFromMediaId(java.lang.String,android.os.Bundle)
  d    public abstract onMediaButtonEvent(android.content.Intent)
  e    public abstract onPlay()
  i    public abstract onRewind()
  k    public abstract onSkipToQueueItem(long)
  m    public abstract onStop()
  m    public abstract onPlayFromSearch(java.lang.String,android.os.Bundle)
  n    public abstract onSetRating(java.lang.Object)
  t    public abstract onSkipToPrevious()
  u    public abstract onFastForward()
  u    public abstract onCustomAction(java.lang.String,android.os.Bundle)
  v    public abstract onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)
  z    public abstract onSeekTo(long)

android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy   (com.rubenroy.minimaltodo.eval_ac$j)
===============================================================================
  onCommand            public onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)
  onCustomAction       public onCustomAction(java.lang.String,android.os.Bundle)
  onFastForward        public onFastForward()
  onMediaButtonEvent   public onMediaButtonEvent(android.content.Intent)
  onPause              public onPause()
  onPlay               public onPlay()
  onPlayFromMediaId    public onPlayFromMediaId(java.lang.String,android.os.Bundle)
  onPlayFromSearch     public onPlayFromSearch(java.lang.String,android.os.Bundle)
  onRewind             public onRewind()
  onSeekTo             public onSeekTo(long)
  onSetRating          public onSetRating(android.media.Rating)
  onSkipToNext         public onSkipToNext()
  onSkipToPrevious     public onSkipToPrevious()
  onSkipToQueueItem    public onSkipToQueueItem(long)
  onStop               public onStop()

android.support.v4.media.session.MediaSessionCompatApi21$QueueItem       (com.rubenroy.minimaltodo.eval_ac$a)
===============================================================================
  f    public static getDescription(java.lang.Object)
  n    public static createItem(java.lang.Object,long)
  w    public static getQueueId(java.lang.Object)

android.support.v4.media.session.MediaSessionCompatApi22 (com.rubenroy.minimaltodo.eval_jo)
===============================================================================
  eval_e   public static setRatingType(java.lang.Object,int)

android.support.v4.media.session.MediaSessionCompatApi22$ArrayOutOfBoundsException       (com.rubenroy.minimaltodo.eval_tn)
===============================================================================
  No methods

android.support.v4.media.session.MediaSessionCompatApi23 (com.rubenroy.minimaltodo.eval_lx)
===============================================================================
  g    public static createCallback(android.support.v4.media.session.MediaSessionCompatApi23$Callback)

android.support.v4.media.session.MediaSessionCompatApi23$ArrayOutOfBoundsException       (com.rubenroy.minimaltodo.eval_oa)
===============================================================================
  No methods

android.support.v4.media.session.MediaSessionCompatApi23$Callback        (com.rubenroy.minimaltodo.eval_lx$d)
===============================================================================
  k    public abstract onPlayFromUri(android.net.Uri,android.os.Bundle)

android.support.v4.media.session.MediaSessionCompatApi23$CallbackProxy   (com.rubenroy.minimaltodo.eval_lx$b)
===============================================================================
  onPlayFromUri    public onPlayFromUri(android.net.Uri,android.os.Bundle)

android.support.v4.media.session.MediaSessionCompatApi8  (com.rubenroy.minimaltodo.eval_zy)
===============================================================================
  d    public static unregisterMediaButtonEventReceiver(android.content.Context,android.content.ComponentName)
  o    public static registerMediaButtonEventReceiver(android.content.Context,android.content.ComponentName)

android.support.v4.media.session.MediaSessionCompatApi8$NullPointerException     (com.rubenroy.minimaltodo.eval_in)
===============================================================================
  No methods

android.support.v4.media.session.ParcelableVolumeInfo    (com.rubenroy.minimaltodo.eval_mo)
===============================================================================
  describeContents public describeContents()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.media.session.ParcelableVolumeInfo$1  (com.rubenroy.minimaltodo.eval_mo$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.media.session.ParcelableVolumeInfo$IOException        (com.rubenroy.minimaltodo.eval_kv)
===============================================================================
  No methods

android.support.v4.media.session.PlaybackStateCompat     (com.rubenroy.minimaltodo.eval_gj)
===============================================================================
  c                public getLastPositionUpdateTime()
  d                public getPlaybackSpeed()
  d                static access$400(android.support.v4.media.session.PlaybackStateCompat)
  e                public getCustomActions()
  eval_i           public getErrorMessage()
  eval_q           public getPlaybackState()
  eval_w           public getActions()
  eval_z           static access$1100(android.support.v4.media.session.PlaybackStateCompat)
  f                static access$900(android.support.v4.media.session.PlaybackStateCompat)
  g                public getPosition()
  h                static access$700(android.support.v4.media.session.PlaybackStateCompat)
  i                static access$600(android.support.v4.media.session.PlaybackStateCompat)
  k                static access$1000(android.support.v4.media.session.PlaybackStateCompat)
  l                static access$500(android.support.v4.media.session.PlaybackStateCompat)
  m                static access$800(android.support.v4.media.session.PlaybackStateCompat)
  n                static access$300(android.support.v4.media.session.PlaybackStateCompat)
  q                static access$1200(android.support.v4.media.session.PlaybackStateCompat)
  t                public getActiveQueueItemId()
  u                public static fromPlaybackState(java.lang.Object)
  v                public getState()
  w                public getExtras()
  z                public getBufferedPosition()
  describeContents public describeContents()
  toString         public toString()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.media.session.PlaybackStateCompat$1   (com.rubenroy.minimaltodo.eval_gj$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.media.session.PlaybackStateCompat$Actions     (com.rubenroy.minimaltodo.eval_gj$y)
===============================================================================
  No methods

android.support.v4.media.session.PlaybackStateCompat$Builder     (com.rubenroy.minimaltodo.eval_gj$o)
===============================================================================
  c        public setActions(long)
  eval_s   public setBufferedPosition(long)
  h        public setState(int,long,float,long)
  i        public setExtras(android.os.Bundle)
  i        public setState(int,long,float)
  m        public build()
  o        public addCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction)
  w        public addCustomAction(java.lang.String,java.lang.String,int)
  w        public setActiveQueueItemId(long)
  x        public setErrorMessage(java.lang.CharSequence)

android.support.v4.media.session.PlaybackStateCompat$CustomAction        (com.rubenroy.minimaltodo.eval_gj$p)
===============================================================================
  e                public static fromCustomAction(java.lang.Object)
  eval_y           public getExtras()
  f                public getName()
  o                public getAction()
  q                public getCustomAction()
  u                public getIcon()
  describeContents public describeContents()
  toString         public toString()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.media.session.PlaybackStateCompat$CustomAction$1      (com.rubenroy.minimaltodo.eval_gj$p$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder        (com.rubenroy.minimaltodo.eval_gj$p$k)
===============================================================================
  g    public build()
  m    public setExtras(android.os.Bundle)

android.support.v4.media.session.PlaybackStateCompat$CustomAction$NullPointerException   (com.rubenroy.minimaltodo.eval_zt)
===============================================================================
  No methods

android.support.v4.media.session.PlaybackStateCompat$ParseException      (com.rubenroy.minimaltodo.eval__o)
===============================================================================
  No methods

android.support.v4.media.session.PlaybackStateCompat$State       (com.rubenroy.minimaltodo.eval_gj$f)
===============================================================================
  No methods

android.support.v4.media.session.PlaybackStateCompatApi21        (com.rubenroy.minimaltodo.eval_j5)
===============================================================================
  c        public static getPosition(java.lang.Object)
  eval_m   public static getLastPositionUpdateTime(java.lang.Object)
  eval_y   public static getCustomActions(java.lang.Object)
  f        public static getPlaybackSpeed(java.lang.Object)
  g        public static newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long)
  h        public static getBufferedPosition(java.lang.Object)
  p        public static getActions(java.lang.Object)
  r        public static getErrorMessage(java.lang.Object)
  u        public static getActiveQueueItemId(java.lang.Object)
  z        public static getState(java.lang.Object)

android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction   (com.rubenroy.minimaltodo.eval_j5$x)
===============================================================================
  eval_g   public static getExtras(java.lang.Object)
  t        public static getIcon(java.lang.Object)
  u        public static getName(java.lang.Object)
  x        public static getAction(java.lang.Object)
  x        public static newInstance(java.lang.String,java.lang.CharSequence,int,android.os.Bundle)

android.support.v4.media.session.PlaybackStateCompatApi21$ParseException (com.rubenroy.minimaltodo.eval_rg)
===============================================================================
  No methods

android.support.v4.media.session.PlaybackStateCompatApi22        (com.rubenroy.minimaltodo.eval_dc)
===============================================================================
  v    public static newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle)
  x    public static getExtras(java.lang.Object)

android.support.v4.media.session.PlaybackStateCompatApi22$ParseException (com.rubenroy.minimaltodo.eval_vk)
===============================================================================
  No methods

android.support.v4.net.ConnectivityManagerCompat (com.rubenroy.minimaltodo.eval_s3)
===============================================================================
  c    public static getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent)
  p    public static isActiveNetworkMetered(android.net.ConnectivityManager)

android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl       (com.rubenroy.minimaltodo.eval_s3$v)
===============================================================================
  s    public isActiveNetworkMetered(android.net.ConnectivityManager)

android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl   (com.rubenroy.minimaltodo.eval_s3$a)
===============================================================================
  s    public abstract isActiveNetworkMetered(android.net.ConnectivityManager)

android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl        (com.rubenroy.minimaltodo.eval_s3$x)
===============================================================================
  s    public isActiveNetworkMetered(android.net.ConnectivityManager)

android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl       (com.rubenroy.minimaltodo.eval_s3$d)
===============================================================================
  s    public isActiveNetworkMetered(android.net.ConnectivityManager)

android.support.v4.net.ConnectivityManagerCompat$IOException     (com.rubenroy.minimaltodo.eval_h1)
===============================================================================
  No methods

android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl  (com.rubenroy.minimaltodo.eval_s3$r)
===============================================================================
  s    public isActiveNetworkMetered(android.net.ConnectivityManager)

android.support.v4.net.ConnectivityManagerCompatGingerbread      (com.rubenroy.minimaltodo.eval_av)
===============================================================================
  x    public static isActiveNetworkMetered(android.net.ConnectivityManager)

android.support.v4.net.ConnectivityManagerCompatGingerbread$Exception    (com.rubenroy.minimaltodo.eval_b7)
===============================================================================
  No methods

android.support.v4.net.ConnectivityManagerCompatHoneycombMR2     (com.rubenroy.minimaltodo.eval_yo)
===============================================================================
  z    public static isActiveNetworkMetered(android.net.ConnectivityManager)

android.support.v4.net.ConnectivityManagerCompatHoneycombMR2$NullPointerException        (com.rubenroy.minimaltodo.eval_ds)
===============================================================================
  No methods

android.support.v4.net.ConnectivityManagerCompatJellyBean        (com.rubenroy.minimaltodo.eval_xi)
===============================================================================
  n    public static isActiveNetworkMetered(android.net.ConnectivityManager)

android.support.v4.net.ConnectivityManagerCompatJellyBean$ParseException (com.rubenroy.minimaltodo.eval_rp)
===============================================================================
  No methods

android.support.v4.net.TrafficStatsCompat        (com.rubenroy.minimaltodo.eval_p4)
===============================================================================
  c        public static untagSocket(java.net.Socket)
  eval_d   public static getThreadStatsTag()
  i        public static tagSocket(java.net.Socket)
  j        public static clearThreadStatsTag()
  p        public static incrementOperationCount(int,int)
  s        public static setThreadStatsTag(int)
  t        public static incrementOperationCount(int)

android.support.v4.net.TrafficStatsCompat$1      (com.rubenroy.minimaltodo.eval_p4$1)
===============================================================================
  No methods

android.support.v4.net.TrafficStatsCompat$ArrayOutOfBoundsException      (com.rubenroy.minimaltodo.eval_vg)
===============================================================================
  No methods

android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl     (com.rubenroy.minimaltodo.eval_p4$_)
===============================================================================
  c    public incrementOperationCount(int,int)
  f    public clearThreadStatsTag()
  f    public untagSocket(java.net.Socket)
  j    public getThreadStatsTag()
  k    public setThreadStatsTag(int)
  s    public incrementOperationCount(int)
  s    public tagSocket(java.net.Socket)

android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1   (com.rubenroy.minimaltodo.eval_p4$_$1)
===============================================================================
  initialValue protected initialValue()
  initialValue protected volatile initialValue()

android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$IOException (com.rubenroy.minimaltodo.eval_kx)
===============================================================================
  No methods

android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags  (com.rubenroy.minimaltodo.eval_p4$_$z)
===============================================================================
  No methods

android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl      (com.rubenroy.minimaltodo.eval_p4$w)
===============================================================================
  c    public incrementOperationCount(int,int)
  f    public clearThreadStatsTag()
  f    public untagSocket(java.net.Socket)
  j    public getThreadStatsTag()
  k    public setThreadStatsTag(int)
  s    public incrementOperationCount(int)
  s    public tagSocket(java.net.Socket)

android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl (com.rubenroy.minimaltodo.eval_p4$e)
===============================================================================
  c    public abstract incrementOperationCount(int,int)
  f    public abstract clearThreadStatsTag()
  f    public abstract untagSocket(java.net.Socket)
  j    public abstract getThreadStatsTag()
  k    public abstract setThreadStatsTag(int)
  s    public abstract incrementOperationCount(int)
  s    public abstract tagSocket(java.net.Socket)

android.support.v4.net.TrafficStatsCompatIcs     (com.rubenroy.minimaltodo.eval_k2)
===============================================================================
  g    public static clearThreadStatsTag()
  g    public static tagSocket(java.net.Socket)
  n    public static incrementOperationCount(int,int)
  r    public static untagSocket(java.net.Socket)
  t    public static getThreadStatsTag()
  x    public static incrementOperationCount(int)
  z    public static setThreadStatsTag(int)

android.support.v4.net.TrafficStatsCompatIcs$Exception   (com.rubenroy.minimaltodo.eval_ta)
===============================================================================
  No methods

android.support.v4.os.AsyncTaskCompat    (com.rubenroy.minimaltodo.eval__c)
===============================================================================
  y    public static transient executeParallel(android.os.AsyncTask,java.lang.Object[])

android.support.v4.os.AsyncTaskCompat$ParseException     (com.rubenroy.minimaltodo.eval_bb)
===============================================================================
  No methods

android.support.v4.os.AsyncTaskCompatHoneycomb   (com.rubenroy.minimaltodo.eval_qp)
===============================================================================
  u    static transient executeParallel(android.os.AsyncTask,java.lang.Object[])

android.support.v4.os.AsyncTaskCompatHoneycomb$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_s9)
===============================================================================
  No methods

android.support.v4.os.CancellationSignal (com.rubenroy.minimaltodo.eval_ov)
===============================================================================
  eval_i   public getCancellationSignalObject()
  f        public setOnCancelListener(android.support.v4.os.CancellationSignal$OnCancelListener)
  g        private waitForCancelFinishedLocked()
  h        public cancel()
  n        public isCanceled()
  z        public throwIfCanceled()

android.support.v4.os.CancellationSignal$NullPointerException    (com.rubenroy.minimaltodo.eval_nm)
===============================================================================
  No methods

android.support.v4.os.CancellationSignal$OnCancelListener        (com.rubenroy.minimaltodo.eval_ov$t)
===============================================================================
  w    public abstract onCancel()

android.support.v4.os.CancellationSignalCompatJellybean  (com.rubenroy.minimaltodo.eval_h0)
===============================================================================
  f    public static cancel(java.lang.Object)
  w    public static create()

android.support.v4.os.CancellationSignalCompatJellybean$NullPointerException     (com.rubenroy.minimaltodo.eval__l)
===============================================================================
  No methods

android.support.v4.os.EnvironmentCompat  (com.rubenroy.minimaltodo.eval_g_)
===============================================================================
  b    public static getStorageState(java.io.File)

android.support.v4.os.EnvironmentCompat$Exception        (com.rubenroy.minimaltodo.eval_cx)
===============================================================================
  No methods

android.support.v4.os.EnvironmentCompatKitKat    (com.rubenroy.minimaltodo.eval_tx)
===============================================================================
  b    public static getStorageState(java.io.File)

android.support.v4.os.EnvironmentCompatKitKat$NullPointerException       (com.rubenroy.minimaltodo.eval_nk)
===============================================================================
  No methods

android.support.v4.os.IResultReceiver    (com.rubenroy.minimaltodo.eval_t6)
===============================================================================
  u    public abstract send(int,android.os.Bundle)

android.support.v4.os.IResultReceiver$ParseException     (com.rubenroy.minimaltodo.eval_b9)
===============================================================================
  No methods

android.support.v4.os.IResultReceiver$Stub       (com.rubenroy.minimaltodo.eval_t6$h)
===============================================================================
  o            public static asInterface(android.os.IBinder)
  u            public abstract send(int,android.os.Bundle)
  asBinder     public asBinder()
  onTransact   public onTransact(int,android.os.Parcel,android.os.Parcel,int)

android.support.v4.os.IResultReceiver$Stub$ParseException        (com.rubenroy.minimaltodo.eval_m1)
===============================================================================
  No methods

android.support.v4.os.IResultReceiver$Stub$Proxy (com.rubenroy.minimaltodo.eval_t6$h$_)
===============================================================================
  u        public getInterfaceDescriptor()
  u        public send(int,android.os.Bundle)
  asBinder public asBinder()

android.support.v4.os.OperationCanceledException (com.rubenroy.minimaltodo.eval_ly)
===============================================================================
  No methods

android.support.v4.os.OperationCanceledException$IOException     (com.rubenroy.minimaltodo.eval_kd)
===============================================================================
  No methods

android.support.v4.os.ParcelableCompat   (com.rubenroy.minimaltodo.eval_nz)
===============================================================================
  t    public static newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks)

android.support.v4.os.ParcelableCompat$CompatCreator     (com.rubenroy.minimaltodo.eval_nz$u)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)

android.support.v4.os.ParcelableCompat$IOException       (com.rubenroy.minimaltodo.eval_jb)
===============================================================================
  No methods

android.support.v4.os.ParcelableCompatCreatorCallbacks   (com.rubenroy.minimaltodo.eval_wf)
===============================================================================
  j    public abstract createFromParcel(android.os.Parcel,java.lang.ClassLoader)
  x    public abstract newArray(int)

android.support.v4.os.ParcelableCompatCreatorCallbacks$Exception (com.rubenroy.minimaltodo.eval_bl)
===============================================================================
  No methods

android.support.v4.os.ParcelableCompatCreatorHoneycombMR2        (com.rubenroy.minimaltodo.eval__v)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  createFromParcel public createFromParcel(android.os.Parcel,java.lang.ClassLoader)
  newArray         public newArray(int)

android.support.v4.os.ParcelableCompatCreatorHoneycombMR2$ParseException (com.rubenroy.minimaltodo.eval_yg)
===============================================================================
  No methods

android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub    (com.rubenroy.minimaltodo.eval_vh)
===============================================================================
  k    static instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks)

android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub$ArrayOutOfBoundsException  (com.rubenroy.minimaltodo.eval_fn)
===============================================================================
  No methods

android.support.v4.os.ResultReceiver     (com.rubenroy.minimaltodo.eval_ca)
===============================================================================
  eval_n           public send(int,android.os.Bundle)
  u                protected onReceiveResult(int,android.os.Bundle)
  describeContents public describeContents()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.os.ResultReceiver$1   (com.rubenroy.minimaltodo.eval_ca$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.os.ResultReceiver$ArrayOutOfBoundsException   (com.rubenroy.minimaltodo.eval_fa)
===============================================================================
  No methods

android.support.v4.os.ResultReceiver$MyResultReceiver    (com.rubenroy.minimaltodo.eval_ca$s)
===============================================================================
  u    public send(int,android.os.Bundle)

android.support.v4.os.ResultReceiver$MyRunnable  (com.rubenroy.minimaltodo.eval_ca$z)
===============================================================================
  run  public run()

android.support.v4.os.TraceCompat        (com.rubenroy.minimaltodo.eval_mx)
===============================================================================
  e    public static endSection()
  x    public static beginSection(java.lang.String)

android.support.v4.os.TraceCompat$IOException    (com.rubenroy.minimaltodo.eval_oi)
===============================================================================
  No methods

android.support.v4.os.TraceJellybeanMR2  (com.rubenroy.minimaltodo.eval_vi)
===============================================================================
  m    public static endSection()
  s    public static beginSection(java.lang.String)

android.support.v4.os.TraceJellybeanMR2$Exception        (com.rubenroy.minimaltodo.eval_i4)
===============================================================================
  No methods

android.support.v4.print.PrintHelper     (com.rubenroy.minimaltodo.eval_iz)
===============================================================================
  h    public printBitmap(java.lang.String,android.net.Uri)
  m    public setScaleMode(int)
  n    public getScaleMode()
  o    public setOrientation(int)
  p    public static systemSupportsPrint()
  p    public printBitmap(java.lang.String,android.graphics.Bitmap)
  q    public getOrientation()
  t    public getColorMode()
  t    public printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback)
  t    public printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback)
  z    public setColorMode(int)

android.support.v4.print.PrintHelper$1   (com.rubenroy.minimaltodo.eval_iz$1)
===============================================================================
  No methods

android.support.v4.print.PrintHelper$ArrayOutOfBoundsException   (com.rubenroy.minimaltodo.eval_wd)
===============================================================================
  No methods

android.support.v4.print.PrintHelper$OnPrintFinishCallback       (com.rubenroy.minimaltodo.eval_iz$t)
===============================================================================
  u    public abstract onFinish()

android.support.v4.print.PrintHelper$PrintHelperKitkatImpl       (com.rubenroy.minimaltodo.eval_iz$d)
===============================================================================
  b        public setColorMode(int)
  e        public getScaleMode()
  eval_m   public setOrientation(int)
  i        public getColorMode()
  j        public setScaleMode(int)
  n        public getOrientation()
  n        public printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback)
  x        public printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback)

android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$1     (com.rubenroy.minimaltodo.eval_iz$d$1)
===============================================================================
  u    public onFinish()

android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$2     (com.rubenroy.minimaltodo.eval_iz$d$2)
===============================================================================
  u    public onFinish()

android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$IOException   (com.rubenroy.minimaltodo.eval_ce)
===============================================================================
  No methods

android.support.v4.print.PrintHelper$PrintHelperStubImpl (com.rubenroy.minimaltodo.eval_iz$i)
===============================================================================
  b        public setColorMode(int)
  e        public getScaleMode()
  eval_m   public setOrientation(int)
  i        public getColorMode()
  j        public setScaleMode(int)
  n        public getOrientation()
  n        public printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback)
  x        public printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback)

android.support.v4.print.PrintHelper$PrintHelperVersionImpl      (com.rubenroy.minimaltodo.eval_iz$l)
===============================================================================
  b        public abstract setColorMode(int)
  e        public abstract getScaleMode()
  eval_m   public abstract setOrientation(int)
  i        public abstract getColorMode()
  j        public abstract setScaleMode(int)
  n        public abstract getOrientation()
  n        public abstract printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback)
  x        public abstract printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback)

android.support.v4.print.PrintHelperKitkat       (com.rubenroy.minimaltodo.eval_er)
===============================================================================
  b        private loadConstrainedBitmap(android.net.Uri,int)
  c        public setColorMode(int)
  eval_e   public getColorMode()
  eval_v   private loadBitmap(android.net.Uri,android.graphics.BitmapFactory$Options)
  h        private convertBitmapForColorMode(android.graphics.Bitmap,int)
  k        static access$000(android.support.v4.print.PrintHelperKitkat,android.graphics.Bitmap,int)
  m        static access$100(android.support.v4.print.PrintHelperKitkat,int,int,android.graphics.RectF,int)
  r        static access$300(android.support.v4.print.PrintHelperKitkat,android.net.Uri,int)
  s        public getOrientation()
  s        public setScaleMode(int)
  t        public printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback)
  w        public setOrientation(int)
  x        public getScaleMode()
  x        static access$400(android.support.v4.print.PrintHelperKitkat)
  x        private getMatrix(int,int,android.graphics.RectF,int)
  z        public printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback)

android.support.v4.print.PrintHelperKitkat$1     (com.rubenroy.minimaltodo.eval_er$1)
===============================================================================
  onFinish public onFinish()
  onLayout public onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle)
  onWrite  public onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)

android.support.v4.print.PrintHelperKitkat$2     (com.rubenroy.minimaltodo.eval_er$2)
===============================================================================
  i        static access$200(android.support.v4.print.PrintHelperKitkat$2)
  q        private cancelLoad()
  onFinish public onFinish()
  onLayout public onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle)
  onWrite  public onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)

android.support.v4.print.PrintHelperKitkat$2$1   (com.rubenroy.minimaltodo.eval_er$2$1)
===============================================================================
  c                protected onPostExecute(android.graphics.Bitmap)
  j                protected transient doInBackground(android.net.Uri[])
  m                protected onCancelled(android.graphics.Bitmap)
  doInBackground   protected volatile doInBackground(java.lang.Object[])
  onCancelled      protected volatile onCancelled(java.lang.Object)
  onPostExecute    protected volatile onPostExecute(java.lang.Object)
  onPreExecute     protected onPreExecute()

android.support.v4.print.PrintHelperKitkat$2$1$1 (com.rubenroy.minimaltodo.eval_er$2$1$1)
===============================================================================
  onCancel public onCancel()

android.support.v4.print.PrintHelperKitkat$2$1$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_v8)
===============================================================================
  No methods

android.support.v4.print.PrintHelperKitkat$2$Exception   (com.rubenroy.minimaltodo.eval_lu)
===============================================================================
  No methods

android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback (com.rubenroy.minimaltodo.eval_er$v)
===============================================================================
  u    public abstract onFinish()

android.support.v4.print.PrintHelperKitkat$ParseException        (com.rubenroy.minimaltodo.eval_ux)
===============================================================================
  No methods

android.support.v4.provider.DocumentFile (com.rubenroy.minimaltodo.eval_yh)
===============================================================================
  a        public abstract getUri()
  b        public abstract listFiles()
  e        public static isDocumentUri(android.content.Context,android.net.Uri)
  eval_d   public abstract exists()
  eval_i   public abstract canWrite()
  eval_s   public abstract createDirectory(java.lang.String)
  f        public abstract lastModified()
  f        public static fromSingleUri(android.content.Context,android.net.Uri)
  h        public abstract canRead()
  j        public abstract getName()
  l        public abstract isDirectory()
  m        public static fromTreeUri(android.content.Context,android.net.Uri)
  m        public findFile(java.lang.String)
  n        public abstract getType()
  p        public static fromFile(java.io.File)
  r        public abstract renameTo(java.lang.String)
  s        public abstract length()
  t        public abstract delete()
  v        public abstract createFile(java.lang.String,java.lang.String)
  x        public getParentFile()
  y        public abstract isFile()

android.support.v4.provider.DocumentFile$NullPointerException    (com.rubenroy.minimaltodo.eval_tw)
===============================================================================
  No methods

android.support.v4.provider.DocumentsContractApi19       (com.rubenroy.minimaltodo.eval_a5)
===============================================================================
  b        public static getType(android.content.Context,android.net.Uri)
  eval__   public static exists(android.content.Context,android.net.Uri)
  eval_j   public static canRead(android.content.Context,android.net.Uri)
  eval_o   public static delete(android.content.Context,android.net.Uri)
  eval_s   public static canWrite(android.content.Context,android.net.Uri)
  g        public static getName(android.content.Context,android.net.Uri)
  h        public static isDocumentUri(android.content.Context,android.net.Uri)
  i        public static isFile(android.content.Context,android.net.Uri)
  j        private static queryForInt(android.content.Context,android.net.Uri,java.lang.String,int)
  j        private static closeQuietly(java.lang.AutoCloseable)
  n        public static length(android.content.Context,android.net.Uri)
  o        private static getRawType(android.content.Context,android.net.Uri)
  o        private static queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)
  s        private static queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)
  x        public static lastModified(android.content.Context,android.net.Uri)
  y        public static isDirectory(android.content.Context,android.net.Uri)

android.support.v4.provider.DocumentsContractApi19$NullPointerException  (com.rubenroy.minimaltodo.eval_jf)
===============================================================================
  No methods

android.support.v4.provider.DocumentsContractApi21       (com.rubenroy.minimaltodo.eval_qe)
===============================================================================
  a    public static createFile(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)
  d    public static renameTo(android.content.Context,android.net.Uri,java.lang.String)
  d    private static closeQuietly(java.lang.AutoCloseable)
  g    public static createDirectory(android.content.Context,android.net.Uri,java.lang.String)
  t    public static listFiles(android.content.Context,android.net.Uri)
  x    public static prepareTreeUri(android.net.Uri)

android.support.v4.provider.DocumentsContractApi21$NullPointerException  (com.rubenroy.minimaltodo.eval_iw)
===============================================================================
  No methods

android.support.v4.provider.RawDocumentFile      (com.rubenroy.minimaltodo.eval_eu)
===============================================================================
  a        public getUri()
  b        public listFiles()
  eval_d   public exists()
  eval_i   public canWrite()
  eval_s   public createDirectory(java.lang.String)
  f        public lastModified()
  h        public canRead()
  j        public getName()
  l        public isDirectory()
  n        public getType()
  n        private static getTypeForName(java.lang.String)
  q        private static deleteContents(java.io.File)
  r        public renameTo(java.lang.String)
  s        public length()
  t        public delete()
  v        public createFile(java.lang.String,java.lang.String)
  y        public isFile()

android.support.v4.provider.RawDocumentFile$IOException  (com.rubenroy.minimaltodo.eval_h_)
===============================================================================
  No methods

android.support.v4.provider.SingleDocumentFile   (com.rubenroy.minimaltodo.eval_ey)
===============================================================================
  a        public getUri()
  b        public listFiles()
  eval_d   public exists()
  eval_i   public canWrite()
  eval_s   public createDirectory(java.lang.String)
  f        public lastModified()
  h        public canRead()
  j        public getName()
  l        public isDirectory()
  n        public getType()
  r        public renameTo(java.lang.String)
  s        public length()
  t        public delete()
  v        public createFile(java.lang.String,java.lang.String)
  y        public isFile()

android.support.v4.provider.SingleDocumentFile$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_e0)
===============================================================================
  No methods

android.support.v4.provider.TreeDocumentFile     (com.rubenroy.minimaltodo.eval_xj)
===============================================================================
  a        public getUri()
  b        public listFiles()
  eval_d   public exists()
  eval_i   public canWrite()
  eval_s   public createDirectory(java.lang.String)
  f        public lastModified()
  h        public canRead()
  j        public getName()
  l        public isDirectory()
  n        public getType()
  r        public renameTo(java.lang.String)
  s        public length()
  t        public delete()
  v        public createFile(java.lang.String,java.lang.String)
  y        public isFile()

android.support.v4.provider.TreeDocumentFile$Exception   (com.rubenroy.minimaltodo.eval_ki)
===============================================================================
  No methods

android.support.v4.speech.tts.TextToSpeechICS    (com.rubenroy.minimaltodo.eval__m)
===============================================================================
  y    static construct(android.content.Context,android.speech.tts.TextToSpeech$OnInitListener,java.lang.String)

android.support.v4.speech.tts.TextToSpeechICS$NullPointerException       (com.rubenroy.minimaltodo.eval_x4)
===============================================================================
  No methods

android.support.v4.speech.tts.TextToSpeechICSMR1 (com.rubenroy.minimaltodo.eval_dp)
===============================================================================
  u    static getFeatures(android.speech.tts.TextToSpeech,java.util.Locale)
  x    static setUtteranceProgressListener(android.speech.tts.TextToSpeech,android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1)

android.support.v4.speech.tts.TextToSpeechICSMR1$1       (com.rubenroy.minimaltodo.eval_dp$1)
===============================================================================
  onDone   public onDone(java.lang.String)
  onError  public onError(java.lang.String)
  onStart  public onStart(java.lang.String)

android.support.v4.speech.tts.TextToSpeechICSMR1$2       (com.rubenroy.minimaltodo.eval_dp$2)
===============================================================================
  onUtteranceCompleted public onUtteranceCompleted(java.lang.String)

android.support.v4.speech.tts.TextToSpeechICSMR1$IOException     (com.rubenroy.minimaltodo.eval_w8)
===============================================================================
  No methods

android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1 (com.rubenroy.minimaltodo.eval_dp$m)
===============================================================================
  n    public abstract onStart(java.lang.String)
  w    public abstract onError(java.lang.String)
  y    public abstract onDone(java.lang.String)

android.support.v4.text.BidiFormatter    (com.rubenroy.minimaltodo.eval_ru)
===============================================================================
  a        static access$200()
  a        public isRtl(java.lang.String)
  a        public static getInstance(java.util.Locale)
  b        private markAfter(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat)
  c        private static isRtlLocale(java.util.Locale)
  eval_i   static access$100()
  eval_r   private markBefore(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat)
  f        private static getExitDir(java.lang.String)
  f        static access$000(java.util.Locale)
  i        public isRtlContext()
  j        private static getEntryDir(java.lang.String)
  q        static access$300()
  q        public unicodeWrap(java.lang.String)
  r        public static getInstance(boolean)
  v        public getStereoReset()
  v        public unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat)
  x        public unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat,boolean)
  x        public unicodeWrap(java.lang.String,boolean)
  y        public static getInstance()

android.support.v4.text.BidiFormatter$1  (com.rubenroy.minimaltodo.eval_ru$1)
===============================================================================
  No methods

android.support.v4.text.BidiFormatter$Builder    (com.rubenroy.minimaltodo.eval_ru$o)
===============================================================================
  n    public stereoReset(boolean)
  p    public build()
  q    private static getDefaultInstanceFromContext(boolean)
  s    public setTextDirectionHeuristic(android.support.v4.text.TextDirectionHeuristicCompat)
  s    private initialize(boolean)

android.support.v4.text.BidiFormatter$DirectionalityEstimator    (com.rubenroy.minimaltodo.eval_ru$c)
===============================================================================
  a        private static getCachedDirectionality(char)
  d        dirTypeBackward()
  eval_c   private skipEntityForward()
  eval_k   private skipEntityBackward()
  f        private skipTagBackward()
  g        dirTypeForward()
  o        getExitDir()
  r        private skipTagForward()
  z        getEntryDir()

android.support.v4.text.BidiFormatter$ParseException     (com.rubenroy.minimaltodo.eval_b_)
===============================================================================
  No methods

android.support.v4.text.ICUCompat        (com.rubenroy.minimaltodo.eval_fp)
===============================================================================
  x    public static maximizeAndGetScript(java.util.Locale)

android.support.v4.text.ICUCompat$ICUCompatImpl  (com.rubenroy.minimaltodo.eval_fp$v)
===============================================================================
  z    public abstract maximizeAndGetScript(java.util.Locale)

android.support.v4.text.ICUCompat$ICUCompatImplBase      (com.rubenroy.minimaltodo.eval_fp$x)
===============================================================================
  z    public maximizeAndGetScript(java.util.Locale)

android.support.v4.text.ICUCompat$ICUCompatImplIcs       (com.rubenroy.minimaltodo.eval_fp$p)
===============================================================================
  z    public maximizeAndGetScript(java.util.Locale)

android.support.v4.text.ICUCompat$ICUCompatImplLollipop  (com.rubenroy.minimaltodo.eval_fp$eval_l)
===============================================================================
  z    public maximizeAndGetScript(java.util.Locale)

android.support.v4.text.ICUCompat$IOException    (com.rubenroy.minimaltodo.eval_nb)
===============================================================================
  No methods

android.support.v4.text.ICUCompatApi23   (com.rubenroy.minimaltodo.eval_tv)
===============================================================================
  m    public static maximizeAndGetScript(java.util.Locale)

android.support.v4.text.ICUCompatApi23$IOException       (com.rubenroy.minimaltodo.eval_w9)
===============================================================================
  No methods

android.support.v4.text.ICUCompatIcs     (com.rubenroy.minimaltodo.eval_od)
===============================================================================
  j    private static getScript(java.lang.String)
  p    public static maximizeAndGetScript(java.util.Locale)
  x    private static addLikelySubtags(java.util.Locale)

android.support.v4.text.ICUCompatIcs$ArrayOutOfBoundsException   (com.rubenroy.minimaltodo.eval_e1)
===============================================================================
  No methods

android.support.v4.text.TextDirectionHeuristicCompat     (com.rubenroy.minimaltodo.eval__s)
===============================================================================
  e    public abstract isRtl(java.lang.CharSequence,int,int)
  n    public abstract isRtl(char[],int,int)

android.support.v4.text.TextDirectionHeuristicCompat$ParseException      (com.rubenroy.minimaltodo.eval_qd)
===============================================================================
  No methods

android.support.v4.text.TextDirectionHeuristicsCompat    (com.rubenroy.minimaltodo.eval_mk)
===============================================================================
  d    static access$100(int)
  j    static access$200(int)
  m    private static isRtlText(int)
  r    private static isRtlTextOrFormat(int)

android.support.v4.text.TextDirectionHeuristicsCompat$1  (com.rubenroy.minimaltodo.eval_mk$1)
===============================================================================
  No methods

android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong  (com.rubenroy.minimaltodo.eval_mk$o)
===============================================================================
  p    public checkRtl(java.lang.CharSequence,int,int)

android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong        (com.rubenroy.minimaltodo.eval_mk$n)
===============================================================================
  p    public checkRtl(java.lang.CharSequence,int,int)

android.support.v4.text.TextDirectionHeuristicsCompat$IOException        (com.rubenroy.minimaltodo.eval_r4)
===============================================================================
  No methods

android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm     (com.rubenroy.minimaltodo.eval_mk$eval_q)
===============================================================================
  p    public abstract checkRtl(java.lang.CharSequence,int,int)

android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl (com.rubenroy.minimaltodo.eval_mk$eval_r)
===============================================================================
  e    public isRtl(java.lang.CharSequence,int,int)
  n    public isRtl(char[],int,int)
  p    protected abstract defaultIsRtl()
  v    private doCheck(java.lang.CharSequence,int,int)

android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal     (com.rubenroy.minimaltodo.eval_mk$m)
===============================================================================
  p    protected defaultIsRtl()

android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale       (com.rubenroy.minimaltodo.eval_mk$r)
===============================================================================
  p    protected defaultIsRtl()

android.support.v4.text.TextUtilsCompat  (com.rubenroy.minimaltodo.eval_t9)
===============================================================================
  eval_r   static access$000()
  f        public static getLayoutDirectionFromLocale(java.util.Locale)
  n        public static htmlEncode(java.lang.String)
  w        static access$100()

android.support.v4.text.TextUtilsCompat$1        (com.rubenroy.minimaltodo.eval_t9$1)
===============================================================================
  No methods

android.support.v4.text.TextUtilsCompat$Exception        (com.rubenroy.minimaltodo.eval_tb)
===============================================================================
  No methods

android.support.v4.text.TextUtilsCompat$TextUtilsCompatImpl      (com.rubenroy.minimaltodo.eval_t9$v)
===============================================================================
  q    public htmlEncode(java.lang.String)
  t    public getLayoutDirectionFromLocale(java.util.Locale)
  v    private static getLayoutDirectionFromFirstChar(java.util.Locale)

android.support.v4.text.TextUtilsCompat$TextUtilsCompatJellybeanMr1Impl  (com.rubenroy.minimaltodo.eval_t9$h)
===============================================================================
  q    public htmlEncode(java.lang.String)
  t    public getLayoutDirectionFromLocale(java.util.Locale)

android.support.v4.text.TextUtilsCompatJellybeanMr1      (com.rubenroy.minimaltodo.eval_tc)
===============================================================================
  j    public static htmlEncode(java.lang.String)
  q    public static getLayoutDirectionFromLocale(java.util.Locale)

android.support.v4.text.TextUtilsCompatJellybeanMr1$ArrayOutOfBoundsException    (com.rubenroy.minimaltodo.eval_gd)
===============================================================================
  No methods

android.support.v4.util.ArrayMap (com.rubenroy.minimaltodo.eval_g4)
===============================================================================
  d        private getCollection()
  eval_w   public retainAll(java.util.Collection)
  i        public removeAll(java.util.Collection)
  l        public containsAll(java.util.Collection)
  entrySet public entrySet()
  keySet   public keySet()
  putAll   public putAll(java.util.Map)
  values   public values()

android.support.v4.util.ArrayMap$1       (com.rubenroy.minimaltodo.eval_g4$1)
===============================================================================
  e    protected colIndexOfKey(java.lang.Object)
  f    protected colGetMap()
  h    protected colRemoveAt(int)
  j    protected colGetSize()
  k    protected colGetEntry(int,int)
  q    protected colIndexOfValue(java.lang.Object)
  u    protected colSetValue(int,java.lang.Object)
  w    protected colPut(java.lang.Object,java.lang.Object)
  y    protected colClear()

android.support.v4.util.ArrayMap$ParseException  (com.rubenroy.minimaltodo.eval_o2)
===============================================================================
  No methods

android.support.v4.util.AtomicFile       (com.rubenroy.minimaltodo.eval_oq)
===============================================================================
  a        public readFully()
  d        public getBaseFile()
  d        static sync(java.io.FileOutputStream)
  eval__   public failWrite(java.io.FileOutputStream)
  g        public delete()
  g        public finishWrite(java.io.FileOutputStream)
  m        public openRead()
  n        public startWrite()

android.support.v4.util.AtomicFile$Exception     (com.rubenroy.minimaltodo.eval_nn)
===============================================================================
  No methods

android.support.v4.util.CircularArray    (com.rubenroy.minimaltodo.eval_f5)
===============================================================================
  a        public size()
  c        private doubleCapacity()
  d        public get(int)
  eval_x   public removeFromEnd(int)
  g        public popLast()
  j        public clear()
  m        public addLast(java.lang.Object)
  o        public addFirst(java.lang.Object)
  q        public removeFromStart(int)
  r        public popFirst()
  t        public getFirst()
  u        public isEmpty()
  x        public getLast()

android.support.v4.util.CircularArray$ParseException     (com.rubenroy.minimaltodo.eval_j2)
===============================================================================
  No methods

android.support.v4.util.CircularIntArray (com.rubenroy.minimaltodo.eval_sf)
===============================================================================
  b        public addFirst(int)
  eval_c   public popFirst()
  g        public removeFromStart(int)
  k        private doubleCapacity()
  l        public isEmpty()
  m        public addLast(int)
  n        public popLast()
  o        public getFirst()
  o        public get(int)
  p        public clear()
  r        public size()
  w        public getLast()
  w        public removeFromEnd(int)

android.support.v4.util.CircularIntArray$NullPointerException    (com.rubenroy.minimaltodo.eval_ny)
===============================================================================
  No methods

android.support.v4.util.ContainerHelpers (com.rubenroy.minimaltodo.eval_lr)
===============================================================================
  d        static binarySearch(int[],int,int)
  eval_w   public static idealIntArraySize(int)
  m        public static idealLongArraySize(int)
  o        public static idealByteArraySize(int)
  q        static binarySearch(long[],int,long)
  u        public static equal(java.lang.Object,java.lang.Object)

android.support.v4.util.ContainerHelpers$NullPointerException    (com.rubenroy.minimaltodo.eval_k0)
===============================================================================
  No methods

android.support.v4.util.DebugUtils       (com.rubenroy.minimaltodo.eval_lz)
===============================================================================
  w    public static buildShortClassTag(java.lang.Object,java.lang.StringBuilder)

android.support.v4.util.DebugUtils$Exception     (com.rubenroy.minimaltodo.eval_cn)
===============================================================================
  No methods

android.support.v4.util.LogWriter        (com.rubenroy.minimaltodo.eval_nx)
===============================================================================
  a        private flushBuilder()
  close    public close()
  flush    public flush()
  write    public write(char[],int,int)

android.support.v4.util.LogWriter$IOException    (com.rubenroy.minimaltodo.eval_ve)
===============================================================================
  No methods

android.support.v4.util.LongSparseArray  (com.rubenroy.minimaltodo.eval_w_)
===============================================================================
  b        public setValueAt(int,java.lang.Object)
  b        public delete(long)
  clone    public clone()
  d        public remove(long)
  e        public removeAt(int)
  e        public get(long)
  eval_e   public get(long,java.lang.Object)
  eval_h   public keyAt(int)
  eval_t   private gc()
  f        public put(long,java.lang.Object)
  g        public indexOfValue(java.lang.Object)
  j        public indexOfKey(long)
  n        public clear()
  o        public append(long,java.lang.Object)
  p        public valueAt(int)
  x        public size()
  clone    public volatile clone()
  toString public toString()

android.support.v4.util.LongSparseArray$Exception        (com.rubenroy.minimaltodo.eval_ke)
===============================================================================
  No methods

android.support.v4.util.LruCache (com.rubenroy.minimaltodo.eval_jv)
===============================================================================
  a        public final synchronized size()
  b        public final synchronized missCount()
  c        public final evictAll()
  d        public final synchronized putCount()
  eval_r   public final synchronized hitCount()
  eval_u   protected sizeOf(java.lang.Object,java.lang.Object)
  f        private safeSizeOf(java.lang.Object,java.lang.Object)
  i        public final remove(java.lang.Object)
  j        public final synchronized createCount()
  j        protected entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)
  n        public final synchronized snapshot()
  q        protected create(java.lang.Object)
  r        public final put(java.lang.Object,java.lang.Object)
  s        public final synchronized evictionCount()
  t        public final synchronized maxSize()
  v        public final get(java.lang.Object)
  w        public resize(int)
  z        public trimToSize(int)
  toString public final synchronized toString()

android.support.v4.util.LruCache$ParseException  (com.rubenroy.minimaltodo.eval_st)
===============================================================================
  No methods

android.support.v4.util.MapCollections   (com.rubenroy.minimaltodo.eval_on)
===============================================================================
  c    public getValues()
  d    public toArrayHelper(java.lang.Object[],int)
  e    public toArrayHelper(int)
  e    protected abstract colIndexOfKey(java.lang.Object)
  e    public static retainAllHelper(java.util.Map,java.util.Collection)
  f    protected abstract colGetMap()
  g    public getKeySet()
  h    protected abstract colRemoveAt(int)
  j    protected abstract colGetSize()
  k    protected abstract colGetEntry(int,int)
  m    public static containsAllHelper(java.util.Map,java.util.Collection)
  n    public getEntrySet()
  q    protected abstract colIndexOfValue(java.lang.Object)
  s    public static removeAllHelper(java.util.Map,java.util.Collection)
  u    protected abstract colSetValue(int,java.lang.Object)
  w    protected abstract colPut(java.lang.Object,java.lang.Object)
  y    protected abstract colClear()
  y    public static equalsSetHelper(java.util.Set,java.lang.Object)

android.support.v4.util.MapCollections$ArrayIterator     (com.rubenroy.minimaltodo.eval_on$n)
===============================================================================
  hasNext  public hasNext()
  next     public next()
  remove   public remove()

android.support.v4.util.MapCollections$EntrySet  (com.rubenroy.minimaltodo.eval_on$l)
===============================================================================
  f            public add(java.util.Map$Entry)
  add          public volatile add(java.lang.Object)
  addAll       public addAll(java.util.Collection)
  clear        public clear()
  contains     public contains(java.lang.Object)
  containsAll  public containsAll(java.util.Collection)
  equals       public equals(java.lang.Object)
  hashCode     public hashCode()
  isEmpty      public isEmpty()
  iterator     public iterator()
  remove       public remove(java.lang.Object)
  removeAll    public removeAll(java.util.Collection)
  retainAll    public retainAll(java.util.Collection)
  size         public size()
  toArray      public toArray()
  toArray      public toArray(java.lang.Object[])

android.support.v4.util.MapCollections$IOException       (com.rubenroy.minimaltodo.eval_sz)
===============================================================================
  No methods

android.support.v4.util.MapCollections$KeySet    (com.rubenroy.minimaltodo.eval_on$v)
===============================================================================
  add          public add(java.lang.Object)
  addAll       public addAll(java.util.Collection)
  clear        public clear()
  contains     public contains(java.lang.Object)
  containsAll  public containsAll(java.util.Collection)
  equals       public equals(java.lang.Object)
  hashCode     public hashCode()
  isEmpty      public isEmpty()
  iterator     public iterator()
  remove       public remove(java.lang.Object)
  removeAll    public removeAll(java.util.Collection)
  retainAll    public retainAll(java.util.Collection)
  size         public size()
  toArray      public toArray()
  toArray      public toArray(java.lang.Object[])

android.support.v4.util.MapCollections$MapIterator       (com.rubenroy.minimaltodo.eval_on$b)
===============================================================================
  next     public next()
  equals   public final equals(java.lang.Object)
  getKey   public getKey()
  getValue public getValue()
  hasNext  public hasNext()
  hashCode public final hashCode()
  next     public volatile next()
  remove   public remove()
  setValue public setValue(java.lang.Object)
  toString public final toString()

android.support.v4.util.MapCollections$ValuesCollection  (com.rubenroy.minimaltodo.eval_on$_)
===============================================================================
  add          public add(java.lang.Object)
  addAll       public addAll(java.util.Collection)
  clear        public clear()
  contains     public contains(java.lang.Object)
  containsAll  public containsAll(java.util.Collection)
  isEmpty      public isEmpty()
  iterator     public iterator()
  remove       public remove(java.lang.Object)
  removeAll    public removeAll(java.util.Collection)
  retainAll    public retainAll(java.util.Collection)
  size         public size()
  toArray      public toArray()
  toArray      public toArray(java.lang.Object[])

android.support.v4.util.Pair     (com.rubenroy.minimaltodo.eval_af)
===============================================================================
  j        private static objectsEqual(java.lang.Object,java.lang.Object)
  z        public static create(java.lang.Object,java.lang.Object)
  equals   public equals(java.lang.Object)
  hashCode public hashCode()

android.support.v4.util.Pair$IOException (com.rubenroy.minimaltodo.eval__6)
===============================================================================
  No methods

android.support.v4.util.Pools    (com.rubenroy.minimaltodo.eval_zv)
===============================================================================
  No methods

android.support.v4.util.Pools$Exception  (com.rubenroy.minimaltodo.eval_lv)
===============================================================================
  No methods

android.support.v4.util.Pools$Pool       (com.rubenroy.minimaltodo.eval_zv$t)
===============================================================================
  e    public abstract release(java.lang.Object)
  l    public abstract acquire()

android.support.v4.util.Pools$SimplePool (com.rubenroy.minimaltodo.eval_zv$c)
===============================================================================
  e    public release(java.lang.Object)
  l    public acquire()
  p    private isInPool(java.lang.Object)

android.support.v4.util.Pools$SynchronizedPool   (com.rubenroy.minimaltodo.eval_zv$_)
===============================================================================
  e    public release(java.lang.Object)
  l    public acquire()

android.support.v4.util.SimpleArrayMap   (com.rubenroy.minimaltodo.eval_q4)
===============================================================================
  a                public valueAt(int)
  b                public ensureCapacity(int)
  c                public indexOfKey(java.lang.Object)
  e                public keyAt(int)
  eval_k           public removeAt(int)
  f                public putAll(android.support.v4.util.SimpleArrayMap)
  l                indexOfValue(java.lang.Object)
  n                private static freeArrays(int[],java.lang.Object[],int)
  o                indexOfNull()
  p                indexOf(java.lang.Object,int)
  s                private allocArrays(int)
  v                public setValueAt(int,java.lang.Object)
  clear            public clear()
  containsKey      public containsKey(java.lang.Object)
  containsValue    public containsValue(java.lang.Object)
  equals           public equals(java.lang.Object)
  get              public get(java.lang.Object)
  hashCode         public hashCode()
  isEmpty          public isEmpty()
  put              public put(java.lang.Object,java.lang.Object)
  remove           public remove(java.lang.Object)
  size             public size()
  toString         public toString()

android.support.v4.util.SimpleArrayMap$IOException       (com.rubenroy.minimaltodo.eval_hd)
===============================================================================
  No methods

android.support.v4.util.SparseArrayCompat        (com.rubenroy.minimaltodo.eval_kr)
===============================================================================
  b        public setValueAt(int,java.lang.Object)
  clone    public clone()
  d        private gc()
  e        public indexOfKey(int)
  eval_p   public get(int)
  f        public valueAt(int)
  k        public removeAt(int)
  l        public get(int,java.lang.Object)
  p        public remove(int)
  q        public put(int,java.lang.Object)
  q        public indexOfValue(java.lang.Object)
  r        public keyAt(int)
  v        public clear()
  v        public delete(int)
  w        public append(int,java.lang.Object)
  x        public removeAtRange(int,int)
  y        public size()
  clone    public volatile clone()
  toString public toString()

android.support.v4.util.SparseArrayCompat$ArrayOutOfBoundsException      (com.rubenroy.minimaltodo.eval_m8)
===============================================================================
  No methods

android.support.v4.util.TimeUtils        (com.rubenroy.minimaltodo.eval_ll)
===============================================================================
  eval_x   public static formatDuration(long,java.lang.StringBuilder)
  f        private static printField(char[],int,char,int,boolean,int)
  h        public static formatDuration(long,long,java.io.PrintWriter)
  j        private static formatDurationLocked(long,int)
  s        private static accumField(int,int,boolean,int)
  s        public static formatDuration(long,java.io.PrintWriter)
  z        public static formatDuration(long,java.io.PrintWriter,int)

android.support.v4.util.TimeUtils$IOException    (com.rubenroy.minimaltodo.eval_xc)
===============================================================================
  No methods

android.support.v4.view.AccessibilityDelegateCompat      (com.rubenroy.minimaltodo.eval_px)
===============================================================================
  a    public sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
  d    public onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  d    public sendAccessibilityEvent(android.view.View,int)
  g    public getAccessibilityNodeProvider(android.view.View)
  h    public dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  i    getBridge()
  s    public onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
  x    public performAccessibilityAction(android.view.View,int,android.os.Bundle)
  y    public onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  z    public onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)

android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl (com.rubenroy.minimaltodo.eval_px$l)
===============================================================================
  c    public dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
  e    public newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat)
  g    public onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
  h    public sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
  h    public onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
  q    public newAccessiblityDelegateDefaultImpl()
  t    public onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
  y    public onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  z    public sendAccessibilityEvent(java.lang.Object,android.view.View,int)

android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1       (com.rubenroy.minimaltodo.eval_px$l$1)
===============================================================================
  c        public dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  eval_h   public onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  eval_v   public onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  i        public sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
  p        public onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object)
  w        public onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
  x        public sendAccessibilityEvent(android.view.View,int)

android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$NullPointerException    (com.rubenroy.minimaltodo.eval_r9)
===============================================================================
  No methods

android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl    (com.rubenroy.minimaltodo.eval_px$b)
===============================================================================
  c    public abstract dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
  e    public abstract newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat)
  f    public abstract getAccessibilityNodeProvider(java.lang.Object,android.view.View)
  g    public abstract onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
  h    public abstract sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
  h    public abstract onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
  q    public abstract newAccessiblityDelegateDefaultImpl()
  q    public abstract performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle)
  t    public abstract onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
  y    public abstract onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  z    public abstract sendAccessibilityEvent(java.lang.Object,android.view.View,int)

android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl   (com.rubenroy.minimaltodo.eval_px$v)
===============================================================================
  e    public newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat)
  f    public getAccessibilityNodeProvider(java.lang.Object,android.view.View)
  q    public performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle)

android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 (com.rubenroy.minimaltodo.eval_px$v$1)
===============================================================================
  d    public getAccessibilityNodeProvider(android.view.View)
  e    public sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
  e    public performAccessibilityAction(android.view.View,int,android.os.Bundle)
  j    public sendAccessibilityEvent(android.view.View,int)
  k    public onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  k    public onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
  m    public onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object)
  w    public dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  z    public onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)

android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_oj)
===============================================================================
  No methods

android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl        (com.rubenroy.minimaltodo.eval_px$a)
===============================================================================
  c    public dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
  e    public newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat)
  f    public getAccessibilityNodeProvider(java.lang.Object,android.view.View)
  g    public onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
  h    public sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
  h    public onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
  q    public newAccessiblityDelegateDefaultImpl()
  q    public performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle)
  t    public onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
  y    public onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  z    public sendAccessibilityEvent(java.lang.Object,android.view.View,int)

android.support.v4.view.AccessibilityDelegateCompat$ArrayOutOfBoundsException    (com.rubenroy.minimaltodo.eval_hj)
===============================================================================
  No methods

android.support.v4.view.AccessibilityDelegateCompatIcs   (com.rubenroy.minimaltodo.eval_ne)
===============================================================================
  b        public static onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
  c        public static sendAccessibilityEvent(java.lang.Object,android.view.View,int)
  e        public static sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
  eval_e   public static onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
  h        public static newAccessibilityDelegateDefaultImpl()
  j        public static onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object)
  n        public static dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)
  t        public static newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge)
  u        public static onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)

android.support.v4.view.AccessibilityDelegateCompatIcs$1 (com.rubenroy.minimaltodo.eval_ne$1)
===============================================================================
  dispatchPopulateAccessibilityEvent   public dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  onInitializeAccessibilityEvent   public onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  onInitializeAccessibilityNodeInfo    public onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)
  onPopulateAccessibilityEvent     public onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  onRequestSendAccessibilityEvent  public onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
  sendAccessibilityEvent           public sendAccessibilityEvent(android.view.View,int)
  sendAccessibilityEventUnchecked  public sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)

android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge       (com.rubenroy.minimaltodo.eval_ne$z)
===============================================================================
  c        public abstract dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  eval_h   public abstract onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  eval_v   public abstract onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  i        public abstract sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
  p        public abstract onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object)
  w        public abstract onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
  x        public abstract sendAccessibilityEvent(android.view.View,int)

android.support.v4.view.AccessibilityDelegateCompatIcs$Exception (com.rubenroy.minimaltodo.eval_vu)
===============================================================================
  No methods

android.support.v4.view.AccessibilityDelegateCompatJellyBean     (com.rubenroy.minimaltodo.eval_zs)
===============================================================================
  c    public static newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean)
  d    public static getAccessibilityNodeProvider(java.lang.Object,android.view.View)
  g    public static performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle)

android.support.v4.view.AccessibilityDelegateCompatJellyBean$1   (com.rubenroy.minimaltodo.eval_zs$1)
===============================================================================
  dispatchPopulateAccessibilityEvent   public dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  getAccessibilityNodeProvider     public getAccessibilityNodeProvider(android.view.View)
  onInitializeAccessibilityEvent   public onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  onInitializeAccessibilityNodeInfo    public onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)
  onPopulateAccessibilityEvent     public onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  onRequestSendAccessibilityEvent  public onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
  performAccessibilityAction       public performAccessibilityAction(android.view.View,int,android.os.Bundle)
  sendAccessibilityEvent           public sendAccessibilityEvent(android.view.View,int)
  sendAccessibilityEventUnchecked  public sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)

android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean        (com.rubenroy.minimaltodo.eval_zs$e)
===============================================================================
  d    public abstract getAccessibilityNodeProvider(android.view.View)
  e    public abstract sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
  e    public abstract performAccessibilityAction(android.view.View,int,android.os.Bundle)
  j    public abstract sendAccessibilityEvent(android.view.View,int)
  k    public abstract onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  k    public abstract onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
  m    public abstract onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object)
  w    public abstract dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  z    public abstract onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)

android.support.v4.view.AccessibilityDelegateCompatJellyBean$NullPointerException        (com.rubenroy.minimaltodo.eval_qb)
===============================================================================
  No methods

android.support.v4.view.ActionProvider   (com.rubenroy.minimaltodo.eval_e_)
===============================================================================
  c        public onPrepareSubMenu(android.view.SubMenu)
  d        public getContext()
  e        public overridesItemVisibility()
  eval_a   public refreshVisibility()
  eval_m   public isVisible()
  eval_t   public onPerformDefaultAction()
  g        public subUiVisibilityChanged(boolean)
  h        public hasSubMenu()
  k        public onCreateActionView(android.view.MenuItem)
  p        public abstract onCreateActionView()
  q        public reset()
  q        public setSubUiVisibilityListener(android.support.v4.view.ActionProvider$SubUiVisibilityListener)
  z        public setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener)

android.support.v4.view.ActionProvider$IOException       (com.rubenroy.minimaltodo.eval_ju)
===============================================================================
  No methods

android.support.v4.view.ActionProvider$SubUiVisibilityListener   (com.rubenroy.minimaltodo.eval_e_$m)
===============================================================================
  d    public abstract onSubUiVisibilityChanged(boolean)

android.support.v4.view.ActionProvider$VisibilityListener        (com.rubenroy.minimaltodo.eval_e_$o)
===============================================================================
  i    public abstract onActionProviderVisibilityChanged(boolean)

android.support.v4.view.GestureDetectorCompat    (com.rubenroy.minimaltodo.eval_es)
===============================================================================
  g    public onTouchEvent(android.view.MotionEvent)
  h    public isLongpressEnabled()
  p    public setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)
  u    public setIsLongpressEnabled(boolean)

android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl  (com.rubenroy.minimaltodo.eval_es$j)
===============================================================================
  a        public abstract setIsLongpressEnabled(boolean)
  eval_n   public abstract isLongpressEnabled()
  g        public abstract setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)
  r        public abstract onTouchEvent(android.view.MotionEvent)

android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase      (com.rubenroy.minimaltodo.eval_es$m)
===============================================================================
  a        private cancelTaps()
  a        static access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase)
  a        public setIsLongpressEnabled(boolean)
  b        private dispatchLongPress()
  b        static access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase)
  c        static access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase)
  e        static access$502(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase,boolean)
  eval_n   public isLongpressEnabled()
  f        static access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase)
  g        public setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)
  h        private isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent)
  i        static access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase)
  q        private cancel()
  r        public onTouchEvent(android.view.MotionEvent)
  z        private init(android.content.Context)

android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler       (com.rubenroy.minimaltodo.eval_es$m$u)
===============================================================================
  handleMessage    public handleMessage(android.os.Message)

android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$NullPointerException (com.rubenroy.minimaltodo.eval_ef)
===============================================================================
  No methods

android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2      (com.rubenroy.minimaltodo.eval_es$z)
===============================================================================
  a        public setIsLongpressEnabled(boolean)
  eval_n   public isLongpressEnabled()
  g        public setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)
  r        public onTouchEvent(android.view.MotionEvent)

android.support.v4.view.GestureDetectorCompat$NullPointerException       (com.rubenroy.minimaltodo.eval_a0)
===============================================================================
  No methods

android.support.v4.view.GravityCompat    (com.rubenroy.minimaltodo.eval_jq)
===============================================================================
  g    public static apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)
  t    public static getAbsoluteGravity(int,int)
  u    public static apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)
  z    public static applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)

android.support.v4.view.GravityCompat$GravityCompatImpl  (com.rubenroy.minimaltodo.eval_jq$d)
===============================================================================
  eval_b   public abstract applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)
  j        public abstract apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)
  w        public abstract apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)
  z        public abstract getAbsoluteGravity(int,int)

android.support.v4.view.GravityCompat$GravityCompatImplBase      (com.rubenroy.minimaltodo.eval_jq$v)
===============================================================================
  eval_b   public applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)
  j        public apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)
  w        public apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)
  z        public getAbsoluteGravity(int,int)

android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1      (com.rubenroy.minimaltodo.eval_jq$z)
===============================================================================
  eval_b   public applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)
  j        public apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)
  w        public apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)
  z        public getAbsoluteGravity(int,int)

android.support.v4.view.GravityCompat$ParseException     (com.rubenroy.minimaltodo.eval_i_)
===============================================================================
  No methods

android.support.v4.view.GravityCompatJellybeanMr1        (com.rubenroy.minimaltodo.eval_hy)
===============================================================================
  b    public static apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)
  e    public static applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)
  e    public static getAbsoluteGravity(int,int)
  v    public static apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)

android.support.v4.view.GravityCompatJellybeanMr1$Exception      (com.rubenroy.minimaltodo.eval_ln)
===============================================================================
  No methods

android.support.v4.view.InputDeviceCompat        (com.rubenroy.minimaltodo.eval_w2)
===============================================================================
  No methods

android.support.v4.view.InputDeviceCompat$ArrayOutOfBoundsException      (com.rubenroy.minimaltodo.eval_rx)
===============================================================================
  No methods

android.support.v4.view.KeyEventCompat   (com.rubenroy.minimaltodo.eval_fm)
===============================================================================
  a    public static hasModifiers(android.view.KeyEvent,int)
  b    public static getKeyDispatcherState(android.view.View)
  d    public static isTracking(android.view.KeyEvent)
  d    public static metaStateHasNoModifiers(int)
  e    public static normalizeMetaState(int)
  j    public static dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object)
  s    public static startTracking(android.view.KeyEvent)
  t    public static hasNoModifiers(android.view.KeyEvent)
  x    public static metaStateHasModifiers(int,int)

android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl   (com.rubenroy.minimaltodo.eval_fm$t)
===============================================================================
  g    public metaStateHasModifiers(int,int)
  m    public metaStateHasNoModifiers(int)
  n    public startTracking(android.view.KeyEvent)
  o    public normalizeMetaState(int)
  t    public isTracking(android.view.KeyEvent)
  v    public dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object)
  v    public getKeyDispatcherState(android.view.View)
  y    private static metaStateFilterDirectionalModifiers(int,int,int,int,int)

android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl (com.rubenroy.minimaltodo.eval_fm$p)
===============================================================================
  n    public startTracking(android.view.KeyEvent)
  t    public isTracking(android.view.KeyEvent)
  v    public dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object)
  v    public getKeyDispatcherState(android.view.View)

android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl      (com.rubenroy.minimaltodo.eval_fm$_)
===============================================================================
  g    public metaStateHasModifiers(int,int)
  m    public metaStateHasNoModifiers(int)
  o    public normalizeMetaState(int)

android.support.v4.view.KeyEventCompat$IOException       (com.rubenroy.minimaltodo.eval_y4)
===============================================================================
  No methods

android.support.v4.view.KeyEventCompat$KeyEventVersionImpl       (com.rubenroy.minimaltodo.eval_fm$b)
===============================================================================
  g    public abstract metaStateHasModifiers(int,int)
  m    public abstract metaStateHasNoModifiers(int)
  n    public abstract startTracking(android.view.KeyEvent)
  o    public abstract normalizeMetaState(int)
  t    public abstract isTracking(android.view.KeyEvent)
  v    public abstract dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object)
  v    public abstract getKeyDispatcherState(android.view.View)

android.support.v4.view.KeyEventCompatEclair     (com.rubenroy.minimaltodo.eval_o9)
===============================================================================
  c        public static isTracking(android.view.KeyEvent)
  eval_p   public static startTracking(android.view.KeyEvent)
  g        public static dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object)
  y        public static getKeyDispatcherState(android.view.View)

android.support.v4.view.KeyEventCompatEclair$Exception   (com.rubenroy.minimaltodo.eval_ck)
===============================================================================
  No methods

android.support.v4.view.KeyEventCompatHoneycomb  (com.rubenroy.minimaltodo.eval_to)
===============================================================================
  d    public static normalizeMetaState(int)
  r    public static metaStateHasModifiers(int,int)
  x    public static metaStateHasNoModifiers(int)

android.support.v4.view.KeyEventCompatHoneycomb$ParseException   (com.rubenroy.minimaltodo.eval_fb)
===============================================================================
  No methods

android.support.v4.view.LayoutInflaterCompat     (com.rubenroy.minimaltodo.eval_mt)
===============================================================================
  o    public static setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory)

android.support.v4.view.LayoutInflaterCompat$Exception   (com.rubenroy.minimaltodo.eval_l2)
===============================================================================
  No methods

android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImpl    (com.rubenroy.minimaltodo.eval_mt$z)
===============================================================================
  u    public abstract setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory)

android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplBase        (com.rubenroy.minimaltodo.eval_mt$f)
===============================================================================
  u    public setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory)

android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV11 (com.rubenroy.minimaltodo.eval_mt$c)
===============================================================================
  u    public setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory)

android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV21 (com.rubenroy.minimaltodo.eval_mt$m)
===============================================================================
  u    public setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory)

android.support.v4.view.LayoutInflaterCompatBase (com.rubenroy.minimaltodo.eval_k4)
===============================================================================
  eval_g   static setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory)

android.support.v4.view.LayoutInflaterCompatBase$FactoryWrapper  (com.rubenroy.minimaltodo.eval_k4$t)
===============================================================================
  onCreateView public onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
  toString     public toString()

android.support.v4.view.LayoutInflaterCompatBase$IOException     (com.rubenroy.minimaltodo.eval_vx)
===============================================================================
  No methods

android.support.v4.view.LayoutInflaterCompatHC   (com.rubenroy.minimaltodo.eval_c4)
===============================================================================
  k    static forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)
  z    static setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory)

android.support.v4.view.LayoutInflaterCompatHC$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_ct)
===============================================================================
  No methods

android.support.v4.view.LayoutInflaterCompatHC$FactoryWrapperHC  (com.rubenroy.minimaltodo.eval_c4$f)
===============================================================================
  onCreateView public onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)

android.support.v4.view.LayoutInflaterCompatLollipop     (com.rubenroy.minimaltodo.eval_ew)
===============================================================================
  x    static setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory)

android.support.v4.view.LayoutInflaterCompatLollipop$ParseException      (com.rubenroy.minimaltodo.eval_y9)
===============================================================================
  No methods

android.support.v4.view.LayoutInflaterFactory    (com.rubenroy.minimaltodo.eval_kh)
===============================================================================
  q    public abstract onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)

android.support.v4.view.LayoutInflaterFactory$NullPointerException       (com.rubenroy.minimaltodo.eval_iq)
===============================================================================
  No methods

android.support.v4.view.MarginLayoutParamsCompat (com.rubenroy.minimaltodo.eval_yl)
===============================================================================
  a    public static setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
  c    public static resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
  f    public static isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
  f    public static setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)
  g    public static getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
  m    public static getMarginStart(android.view.ViewGroup$MarginLayoutParams)
  p    public static getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
  w    public static setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)

android.support.v4.view.MarginLayoutParamsCompat$IOException     (com.rubenroy.minimaltodo.eval_at)
===============================================================================
  No methods

android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl    (com.rubenroy.minimaltodo.eval_yl$l)
===============================================================================
  eval_p   public abstract setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)
  f        public abstract getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
  j        public abstract getMarginStart(android.view.ViewGroup$MarginLayoutParams)
  l        public abstract isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
  n        public abstract setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
  v        public abstract setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
  w        public abstract getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
  y        public abstract resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)

android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase        (com.rubenroy.minimaltodo.eval_yl$u)
===============================================================================
  eval_p   public setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)
  f        public getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
  j        public getMarginStart(android.view.ViewGroup$MarginLayoutParams)
  l        public isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
  n        public setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
  v        public setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
  w        public getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
  y        public resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)

android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1       (com.rubenroy.minimaltodo.eval_yl$c)
===============================================================================
  eval_p   public setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)
  f        public getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
  j        public getMarginStart(android.view.ViewGroup$MarginLayoutParams)
  l        public isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
  n        public setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
  v        public setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
  w        public getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
  y        public resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)

android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1     (com.rubenroy.minimaltodo.eval_c1)
===============================================================================
  a    public static getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
  e    public static getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
  i    public static setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)
  m    public static setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
  n    public static setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
  p    public static getMarginStart(android.view.ViewGroup$MarginLayoutParams)
  q    public static resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
  w    public static isMarginRelative(android.view.ViewGroup$MarginLayoutParams)

android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1$NullPointerException        (com.rubenroy.minimaltodo.eval_l9)
===============================================================================
  No methods

android.support.v4.view.MenuCompat       (com.rubenroy.minimaltodo.eval_qg)
===============================================================================
  p    public static setShowAsAction(android.view.MenuItem,int)

android.support.v4.view.MenuCompat$Exception     (com.rubenroy.minimaltodo.eval_f0)
===============================================================================
  No methods

android.support.v4.view.MenuItemCompat   (com.rubenroy.minimaltodo.eval_sh)
===============================================================================
  f    public static expandActionView(android.view.MenuItem)
  h    public static setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider)
  m    public static setActionView(android.view.MenuItem,int)
  n    public static isActionViewExpanded(android.view.MenuItem)
  p    public static collapseActionView(android.view.MenuItem)
  u    public static getActionProvider(android.view.MenuItem)
  w    public static setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener)
  w    public static setShowAsAction(android.view.MenuItem,int)
  x    public static setActionView(android.view.MenuItem,android.view.View)
  y    public static getActionView(android.view.MenuItem)

android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl       (com.rubenroy.minimaltodo.eval_sh$o)
===============================================================================
  c        public setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener)
  c        public setActionView(android.view.MenuItem,int)
  e        public getActionView(android.view.MenuItem)
  eval_y   public expandActionView(android.view.MenuItem)
  j        public isActionViewExpanded(android.view.MenuItem)
  n        public setActionView(android.view.MenuItem,android.view.View)
  o        public collapseActionView(android.view.MenuItem)
  s        public setShowAsAction(android.view.MenuItem,int)

android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl  (com.rubenroy.minimaltodo.eval_sh$e)
===============================================================================
  c        public setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener)
  c        public setActionView(android.view.MenuItem,int)
  e        public getActionView(android.view.MenuItem)
  eval_y   public expandActionView(android.view.MenuItem)
  j        public isActionViewExpanded(android.view.MenuItem)
  n        public setActionView(android.view.MenuItem,android.view.View)
  o        public collapseActionView(android.view.MenuItem)
  s        public setShowAsAction(android.view.MenuItem,int)

android.support.v4.view.MenuItemCompat$IOException       (com.rubenroy.minimaltodo.eval_cz)
===============================================================================
  No methods

android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl        (com.rubenroy.minimaltodo.eval_sh$n)
===============================================================================
  c        public setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener)
  eval_y   public expandActionView(android.view.MenuItem)
  j        public isActionViewExpanded(android.view.MenuItem)
  o        public collapseActionView(android.view.MenuItem)

android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1      (com.rubenroy.minimaltodo.eval_sh$n$1)
===============================================================================
  f    public onMenuItemActionExpand(android.view.MenuItem)
  k    public onMenuItemActionCollapse(android.view.MenuItem)

android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$ParseException (com.rubenroy.minimaltodo.eval_xb)
===============================================================================
  No methods

android.support.v4.view.MenuItemCompat$MenuVersionImpl   (com.rubenroy.minimaltodo.eval_sh$j)
===============================================================================
  c        public abstract setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener)
  c        public abstract setActionView(android.view.MenuItem,int)
  e        public abstract getActionView(android.view.MenuItem)
  eval_y   public abstract expandActionView(android.view.MenuItem)
  j        public abstract isActionViewExpanded(android.view.MenuItem)
  n        public abstract setActionView(android.view.MenuItem,android.view.View)
  o        public abstract collapseActionView(android.view.MenuItem)
  s        public abstract setShowAsAction(android.view.MenuItem,int)

android.support.v4.view.MenuItemCompat$OnActionExpandListener    (com.rubenroy.minimaltodo.eval_sh$w)
===============================================================================
  f    public abstract onMenuItemActionCollapse(android.view.MenuItem)
  g    public abstract onMenuItemActionExpand(android.view.MenuItem)

android.support.v4.view.MenuItemCompatHoneycomb  (com.rubenroy.minimaltodo.eval_aw)
===============================================================================
  b    public static getActionView(android.view.MenuItem)
  k    public static setActionView(android.view.MenuItem,android.view.View)
  t    public static setShowAsAction(android.view.MenuItem,int)
  z    public static setActionView(android.view.MenuItem,int)

android.support.v4.view.MenuItemCompatHoneycomb$ParseException   (com.rubenroy.minimaltodo.eval_z5)
===============================================================================
  No methods

android.support.v4.view.MenuItemCompatIcs        (com.rubenroy.minimaltodo.eval_wb)
===============================================================================
  h    public static setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy)
  i    public static collapseActionView(android.view.MenuItem)
  p    public static expandActionView(android.view.MenuItem)
  y    public static isActionViewExpanded(android.view.MenuItem)

android.support.v4.view.MenuItemCompatIcs$ArrayOutOfBoundsException      (com.rubenroy.minimaltodo.eval_pn)
===============================================================================
  No methods

android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper  (com.rubenroy.minimaltodo.eval_wb$q)
===============================================================================
  onMenuItemActionCollapse public onMenuItemActionCollapse(android.view.MenuItem)
  onMenuItemActionExpand   public onMenuItemActionExpand(android.view.MenuItem)

android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy       (com.rubenroy.minimaltodo.eval_wb$w)
===============================================================================
  f    public abstract onMenuItemActionExpand(android.view.MenuItem)
  k    public abstract onMenuItemActionCollapse(android.view.MenuItem)

android.support.v4.view.MotionEventCompat        (com.rubenroy.minimaltodo.eval_le)
===============================================================================
  b        public static getActionIndex(android.view.MotionEvent)
  eval_l   public static getPointerCount(android.view.MotionEvent)
  h        public static getSource(android.view.MotionEvent)
  h        public static findPointerIndex(android.view.MotionEvent,int)
  o        public static getY(android.view.MotionEvent,int)
  s        public static getActionMasked(android.view.MotionEvent)
  s        public static getPointerId(android.view.MotionEvent,int)
  t        public static getX(android.view.MotionEvent,int)
  w        public static getAxisValue(android.view.MotionEvent,int)
  w        public static getAxisValue(android.view.MotionEvent,int,int)

android.support.v4.view.MotionEventCompat$ArrayOutOfBoundsException      (com.rubenroy.minimaltodo.eval__2)
===============================================================================
  No methods

android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl     (com.rubenroy.minimaltodo.eval_le$x)
===============================================================================
  c        public getSource(android.view.MotionEvent)
  eval_t   public getAxisValue(android.view.MotionEvent,int)
  f        public getX(android.view.MotionEvent,int)
  m        public getAxisValue(android.view.MotionEvent,int,int)
  r        public findPointerIndex(android.view.MotionEvent,int)
  x        public getY(android.view.MotionEvent,int)
  z        public getPointerCount(android.view.MotionEvent)
  z        public getPointerId(android.view.MotionEvent,int)

android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl   (com.rubenroy.minimaltodo.eval_le$t)
===============================================================================
  f    public getX(android.view.MotionEvent,int)
  r    public findPointerIndex(android.view.MotionEvent,int)
  x    public getY(android.view.MotionEvent,int)
  z    public getPointerCount(android.view.MotionEvent)
  z    public getPointerId(android.view.MotionEvent,int)

android.support.v4.view.MotionEventCompat$GingerbreadMotionEventVersionImpl      (com.rubenroy.minimaltodo.eval_le$l)
===============================================================================
  c    public getSource(android.view.MotionEvent)

android.support.v4.view.MotionEventCompat$HoneycombMr1MotionEventVersionImpl     (com.rubenroy.minimaltodo.eval_le$eval_q)
===============================================================================
  eval_t   public getAxisValue(android.view.MotionEvent,int)
  m        public getAxisValue(android.view.MotionEvent,int,int)

android.support.v4.view.MotionEventCompat$MotionEventVersionImpl (com.rubenroy.minimaltodo.eval_le$o)
===============================================================================
  c        public abstract getSource(android.view.MotionEvent)
  eval_t   public abstract getAxisValue(android.view.MotionEvent,int)
  f        public abstract getX(android.view.MotionEvent,int)
  m        public abstract getAxisValue(android.view.MotionEvent,int,int)
  r        public abstract findPointerIndex(android.view.MotionEvent,int)
  x        public abstract getY(android.view.MotionEvent,int)
  z        public abstract getPointerCount(android.view.MotionEvent)
  z        public abstract getPointerId(android.view.MotionEvent,int)

android.support.v4.view.MotionEventCompatEclair  (com.rubenroy.minimaltodo.eval_xk)
===============================================================================
  a        public static findPointerIndex(android.view.MotionEvent,int)
  d        public static getY(android.view.MotionEvent,int)
  eval_z   public static getPointerId(android.view.MotionEvent,int)
  h        public static getX(android.view.MotionEvent,int)
  i        public static getPointerCount(android.view.MotionEvent)

android.support.v4.view.MotionEventCompatEclair$ParseException   (com.rubenroy.minimaltodo.eval_eo)
===============================================================================
  No methods

android.support.v4.view.MotionEventCompatGingerbread     (com.rubenroy.minimaltodo.eval_kf)
===============================================================================
  w    public static getSource(android.view.MotionEvent)

android.support.v4.view.MotionEventCompatGingerbread$ParseException      (com.rubenroy.minimaltodo.eval_cb)
===============================================================================
  No methods

android.support.v4.view.MotionEventCompatHoneycombMr1    (com.rubenroy.minimaltodo.eval_i8)
===============================================================================
  k    static getAxisValue(android.view.MotionEvent,int,int)
  w    static getAxisValue(android.view.MotionEvent,int)

android.support.v4.view.MotionEventCompatHoneycombMr1$IOException        (com.rubenroy.minimaltodo.eval_qc)
===============================================================================
  No methods

android.support.v4.view.NestedScrollingChild     (com.rubenroy.minimaltodo.eval_r_)
===============================================================================
  dispatchNestedFling          public abstract dispatchNestedFling(float,float,boolean)
  dispatchNestedPreFling       public abstract dispatchNestedPreFling(float,float)
  dispatchNestedPreScroll      public abstract dispatchNestedPreScroll(int,int,int[],int[])
  dispatchNestedScroll         public abstract dispatchNestedScroll(int,int,int,int,int[])
  hasNestedScrollingParent     public abstract hasNestedScrollingParent()
  isNestedScrollingEnabled     public abstract isNestedScrollingEnabled()
  setNestedScrollingEnabled    public abstract setNestedScrollingEnabled(boolean)
  startNestedScroll            public abstract startNestedScroll(int)
  stopNestedScroll             public abstract stopNestedScroll()

android.support.v4.view.NestedScrollingChild$Exception   (com.rubenroy.minimaltodo.eval_lt)
===============================================================================
  No methods

android.support.v4.view.NestedScrollingChildHelper       (com.rubenroy.minimaltodo.eval_dh)
===============================================================================
  b        public startNestedScroll(int)
  b        public dispatchNestedScroll(int,int,int,int,int[])
  c        public dispatchNestedFling(float,float,boolean)
  e        public dispatchNestedPreFling(float,float)
  e        public dispatchNestedPreScroll(int,int,int[],int[])
  eval_d   public stopNestedScroll()
  p        public isNestedScrollingEnabled()
  r        public setNestedScrollingEnabled(boolean)
  u        public onDetachedFromWindow()
  y        public hasNestedScrollingParent()
  z        public onStopNestedScroll(android.view.View)

android.support.v4.view.NestedScrollingChildHelper$NullPointerException  (com.rubenroy.minimaltodo.eval___)
===============================================================================
  No methods

android.support.v4.view.NestedScrollingParent    (com.rubenroy.minimaltodo.eval_pl)
===============================================================================
  getNestedScrollAxes      public abstract getNestedScrollAxes()
  onNestedFling            public abstract onNestedFling(android.view.View,float,float,boolean)
  onNestedPreFling         public abstract onNestedPreFling(android.view.View,float,float)
  onNestedPreScroll        public abstract onNestedPreScroll(android.view.View,int,int,int[])
  onNestedScroll           public abstract onNestedScroll(android.view.View,int,int,int,int)
  onNestedScrollAccepted   public abstract onNestedScrollAccepted(android.view.View,android.view.View,int)
  onStartNestedScroll      public abstract onStartNestedScroll(android.view.View,android.view.View,int)
  onStopNestedScroll       public abstract onStopNestedScroll(android.view.View)

android.support.v4.view.NestedScrollingParent$NullPointerException       (com.rubenroy.minimaltodo.eval_cc)
===============================================================================
  No methods

android.support.v4.view.NestedScrollingParentHelper      (com.rubenroy.minimaltodo.eval_yk)
===============================================================================
  e    public onStopNestedScroll(android.view.View)
  m    public getNestedScrollAxes()
  p    public onNestedScrollAccepted(android.view.View,android.view.View,int)

android.support.v4.view.NestedScrollingParentHelper$ArrayOutOfBoundsException    (com.rubenroy.minimaltodo.eval_ga)
===============================================================================
  No methods

android.support.v4.view.OnApplyWindowInsetsListener      (com.rubenroy.minimaltodo.eval_e9)
===============================================================================
  h    public abstract onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat)

android.support.v4.view.OnApplyWindowInsetsListener$ArrayOutOfBoundsException    (com.rubenroy.minimaltodo.eval_ec)
===============================================================================
  No methods

android.support.v4.view.PagerAdapter     (com.rubenroy.minimaltodo.eval_tr)
===============================================================================
  a    public unregisterDataSetObserver(android.database.DataSetObserver)
  c    public getPageTitle(int)
  e    public instantiateItem(android.view.View,int)
  e    public startUpdate(android.view.ViewGroup)
  f    public abstract getCount()
  i    public finishUpdate(android.view.ViewGroup)
  j    public saveState()
  l    public instantiateItem(android.view.ViewGroup,int)
  l    public getPageWidth(int)
  m    public registerDataSetObserver(android.database.DataSetObserver)
  m    public restoreState(android.os.Parcelable,java.lang.ClassLoader)
  m    public destroyItem(android.view.View,int,java.lang.Object)
  p    public startUpdate(android.view.View)
  s    public finishUpdate(android.view.View)
  t    public setPrimaryItem(android.view.View,int,java.lang.Object)
  t    public abstract isViewFromObject(android.view.View,java.lang.Object)
  t    public getItemPosition(java.lang.Object)
  v    public notifyDataSetChanged()
  x    public destroyItem(android.view.ViewGroup,int,java.lang.Object)
  y    public setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)

android.support.v4.view.PagerAdapter$ArrayOutOfBoundsException   (com.rubenroy.minimaltodo.eval_y0)
===============================================================================
  No methods

android.support.v4.view.PagerTabStrip    (com.rubenroy.minimaltodo.eval_s0)
===============================================================================
  e                        public setDrawFullUnderline(boolean)
  eval_u                   getMinHeight()
  f                        public setTabIndicatorColor(int)
  p                        public setTextSpacing(int)
  t                        public setTabIndicatorColorResource(int)
  x                        public getTabIndicatorColor()
  y                        public getDrawFullUnderline()
  y                        updateTextPositions(int,float,boolean)
  onDraw                   protected onDraw(android.graphics.Canvas)
  onTouchEvent             public onTouchEvent(android.view.MotionEvent)
  setBackgroundColor       public setBackgroundColor(int)
  setBackgroundDrawable    public setBackgroundDrawable(android.graphics.drawable.Drawable)
  setBackgroundResource    public setBackgroundResource(int)
  setPadding               public setPadding(int,int,int,int)

android.support.v4.view.PagerTabStrip$1  (com.rubenroy.minimaltodo.eval_s0$1)
===============================================================================
  onClick  public onClick(android.view.View)

android.support.v4.view.PagerTabStrip$2  (com.rubenroy.minimaltodo.eval_s0$2)
===============================================================================
  onClick  public onClick(android.view.View)

android.support.v4.view.PagerTabStrip$ParseException     (com.rubenroy.minimaltodo.eval_ra)
===============================================================================
  No methods

android.support.v4.view.PagerTitleStrip  (com.rubenroy.minimaltodo.eval_md)
===============================================================================
  a                    updateText(int,android.support.v4.view.PagerAdapter)
  c                    public setTextColor(int)
  e                    private static setSingleLineAllCaps(android.widget.TextView)
  eval_u               getMinHeight()
  f                    static access$100(android.support.v4.view.PagerTitleStrip)
  f                    public setTextSize(int,float)
  o                    updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter)
  p                    public getTextSpacing()
  p                    public setTextSpacing(int)
  q                    public setGravity(int)
  y                    updateTextPositions(int,float,boolean)
  z                    public setNonPrimaryAlpha(float)
  onAttachedToWindow   protected onAttachedToWindow()
  onDetachedFromWindow protected onDetachedFromWindow()
  onLayout             protected onLayout(boolean,int,int,int,int)
  onMeasure            protected onMeasure(int,int)
  requestLayout        public requestLayout()

android.support.v4.view.PagerTitleStrip$1        (com.rubenroy.minimaltodo.eval_md$1)
===============================================================================
  No methods

android.support.v4.view.PagerTitleStrip$Exception        (com.rubenroy.minimaltodo.eval_h9)
===============================================================================
  No methods

android.support.v4.view.PagerTitleStrip$PageListener     (com.rubenroy.minimaltodo.eval_md$_)
===============================================================================
  a            public onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter)
  f            public onPageSelected(int)
  f            public onPageScrolled(int,float,int)
  v            public onPageScrollStateChanged(int)
  onChanged    public onChanged()

android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl      (com.rubenroy.minimaltodo.eval_md$a)
===============================================================================
  h    public abstract setSingleLineAllCaps(android.widget.TextView)

android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase  (com.rubenroy.minimaltodo.eval_md$p)
===============================================================================
  h    public setSingleLineAllCaps(android.widget.TextView)

android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs   (com.rubenroy.minimaltodo.eval_md$l)
===============================================================================
  h    public setSingleLineAllCaps(android.widget.TextView)

android.support.v4.view.PagerTitleStripIcs       (com.rubenroy.minimaltodo.eval_nw)
===============================================================================
  f    public static setSingleLineAllCaps(android.widget.TextView)

android.support.v4.view.PagerTitleStripIcs$ParseException        (com.rubenroy.minimaltodo.eval_cu)
===============================================================================
  No methods

android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform    (com.rubenroy.minimaltodo.eval_nw$o)
===============================================================================
  getTransformation    public getTransformation(java.lang.CharSequence,android.view.View)

android.support.v4.view.ScaleGestureDetectorCompat       (com.rubenroy.minimaltodo.eval_wp)
===============================================================================
  i    public static isQuickScaleEnabled(java.lang.Object)
  s    public static setQuickScaleEnabled(java.lang.Object,boolean)

android.support.v4.view.ScaleGestureDetectorCompat$1     (com.rubenroy.minimaltodo.eval_wp$1)
===============================================================================
  No methods

android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl  (com.rubenroy.minimaltodo.eval_wp$c)
===============================================================================
  a    public isQuickScaleEnabled(java.lang.Object)
  x    public setQuickScaleEnabled(java.lang.Object,boolean)

android.support.v4.view.ScaleGestureDetectorCompat$NullPointerException  (com.rubenroy.minimaltodo.eval_b4)
===============================================================================
  No methods

android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl  (com.rubenroy.minimaltodo.eval_wp$d)
===============================================================================
  a    public isQuickScaleEnabled(java.lang.Object)
  x    public setQuickScaleEnabled(java.lang.Object,boolean)

android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl      (com.rubenroy.minimaltodo.eval_wp$u)
===============================================================================
  a    public abstract isQuickScaleEnabled(java.lang.Object)
  x    public abstract setQuickScaleEnabled(java.lang.Object,boolean)

android.support.v4.view.ScaleGestureDetectorCompatKitKat (com.rubenroy.minimaltodo.eval_rc)
===============================================================================
  e    public static setQuickScaleEnabled(java.lang.Object,boolean)
  s    public static isQuickScaleEnabled(java.lang.Object)

android.support.v4.view.ScaleGestureDetectorCompatKitKat$ArrayOutOfBoundsException       (com.rubenroy.minimaltodo.eval__e)
===============================================================================
  No methods

android.support.v4.view.ScrollingView    (com.rubenroy.minimaltodo.eval_c5)
===============================================================================
  computeHorizontalScrollExtent    public abstract computeHorizontalScrollExtent()
  computeHorizontalScrollOffset    public abstract computeHorizontalScrollOffset()
  computeHorizontalScrollRange     public abstract computeHorizontalScrollRange()
  computeVerticalScrollExtent      public abstract computeVerticalScrollExtent()
  computeVerticalScrollOffset      public abstract computeVerticalScrollOffset()
  computeVerticalScrollRange       public abstract computeVerticalScrollRange()

android.support.v4.view.ScrollingView$ParseException     (com.rubenroy.minimaltodo.eval_n6)
===============================================================================
  No methods

android.support.v4.view.TintableBackgroundView   (com.rubenroy.minimaltodo.eval_cj)
===============================================================================
  a    public abstract getSupportBackgroundTintList()
  e    public abstract setSupportBackgroundTintList(android.content.res.ColorStateList)
  n    public abstract setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
  o    public abstract getSupportBackgroundTintMode()

android.support.v4.view.TintableBackgroundView$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_x6)
===============================================================================
  No methods

android.support.v4.view.VelocityTrackerCompat    (com.rubenroy.minimaltodo.eval_rn)
===============================================================================
  e    public static getYVelocity(android.view.VelocityTracker,int)
  i    public static getXVelocity(android.view.VelocityTracker,int)

android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl     (com.rubenroy.minimaltodo.eval_rn$i)
===============================================================================
  d    public getYVelocity(android.view.VelocityTracker,int)
  m    public getXVelocity(android.view.VelocityTracker,int)

android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl        (com.rubenroy.minimaltodo.eval_rn$a)
===============================================================================
  d    public getYVelocity(android.view.VelocityTracker,int)
  m    public getXVelocity(android.view.VelocityTracker,int)

android.support.v4.view.VelocityTrackerCompat$NullPointerException       (com.rubenroy.minimaltodo.eval_mm)
===============================================================================
  No methods

android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl (com.rubenroy.minimaltodo.eval_rn$n)
===============================================================================
  d    public abstract getYVelocity(android.view.VelocityTracker,int)
  m    public abstract getXVelocity(android.view.VelocityTracker,int)

android.support.v4.view.VelocityTrackerCompatHoneycomb   (com.rubenroy.minimaltodo.eval_e4)
===============================================================================
  d    public static getXVelocity(android.view.VelocityTracker,int)
  y    public static getYVelocity(android.view.VelocityTracker,int)

android.support.v4.view.VelocityTrackerCompatHoneycomb$Exception (com.rubenroy.minimaltodo.eval_xv)
===============================================================================
  No methods

android.support.v4.view.ViewCompat       (com.rubenroy.minimaltodo.eval_z6)
===============================================================================
  a        public static dispatchFinishTemporaryDetach(android.view.View)
  a        public static onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  a        public static setPivotX(android.view.View,float)
  b        public static getMeasuredHeightAndState(android.view.View)
  b        public static setActivated(android.view.View,boolean)
  b        public static canScrollHorizontally(android.view.View,int)
  b        public static postOnAnimation(android.view.View,java.lang.Runnable)
  c        public static getAccessibilityNodeProvider(android.view.View)
  c        public static startNestedScroll(android.view.View,int)
  c        public static setScrollIndicators(android.view.View,int,int)
  c        public static resolveSizeAndState(int,int,int)
  d        public static getTranslationZ(android.view.View)
  d        public static setHasTransientState(android.view.View,boolean)
  d        public static setScaleX(android.view.View,float)
  d        public static postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
  e        public static setTranslationX(android.view.View,float)
  eval__   public static getWindowSystemUiVisibility(android.view.View)
  eval_a   public static getBackgroundTintList(android.view.View)
  eval_b   public static stopNestedScroll(android.view.View)
  eval_c   public static getRotationX(android.view.View)
  eval_c   public static setLayoutDirection(android.view.View,int)
  eval_d   public static getPivotX(android.view.View)
  eval_d   public static performAccessibilityAction(android.view.View,int,android.os.Bundle)
  eval_e   public static getTransitionName(android.view.View)
  eval_f   public static hasNestedScrollingParent(android.view.View)
  eval_g   public static isNestedScrollingEnabled(android.view.View)
  eval_g   public static setScaleY(android.view.View,float)
  eval_h   public static getScaleY(android.view.View)
  eval_i   public static getMinimumHeight(android.view.View)
  eval_i   public static offsetTopAndBottom(android.view.View,int)
  eval_j   public static isPaddingRelative(android.view.View)
  eval_k   public static getRotation(android.view.View)
  eval_kk  public static isLaidOut(android.view.View)
  eval_l   public static getLayerType(android.view.View)
  eval_m   public static getTranslationX(android.view.View)
  eval_n   public static getParentForAccessibility(android.view.View)
  eval_n6  public static hasOnClickListeners(android.view.View)
  eval_nu  public static getZ(android.view.View)
  eval_o   public static hasOverlappingRendering(android.view.View)
  eval_p   public static getElevation(android.view.View)
  eval_p   public static setNestedScrollingEnabled(android.view.View,boolean)
  eval_q   public static getBackgroundTintMode(android.view.View)
  eval_q4  public static getClipBounds(android.view.View)
  eval_r   public static getAlpha(android.view.View)
  eval_s   public static getMeasuredWidthAndState(android.view.View)
  eval_s   public static setY(android.view.View,float)
  eval_t   public static getY(android.view.View)
  eval_u   public static getPaddingStart(android.view.View)
  eval_v   public static dispatchStartTemporaryDetach(android.view.View)
  eval_w   public static getX(android.view.View)
  eval_wz  public static isAttachedToWindow(android.view.View)
  eval_x   public static getPivotY(android.view.View)
  eval_y   public static getRotationY(android.view.View)
  eval_z   public static getPaddingEnd(android.view.View)
  eval_z   public static setAccessibilityLiveRegion(android.view.View,int)
  eval_zm  public static getScrollIndicators(android.view.View)
  f        public static animate(android.view.View)
  f        public static onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat)
  f        public static setPivotY(android.view.View,float)
  f        public static dispatchNestedFling(android.view.View,float,float,boolean)
  g        public static getImportantForAccessibility(android.view.View)
  g        public static setRotation(android.view.View,float)
  g        public static setImportantForAccessibility(android.view.View,int)
  g        public static dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
  h        public static getScaleX(android.view.View)
  h        public static canScrollVertically(android.view.View,int)
  h        public static setLayerType(android.view.View,int,android.graphics.Paint)
  i        public static isOpaque(android.view.View)
  i        public static setRotationX(android.view.View,float)
  i        public static offsetLeftAndRight(android.view.View,int)
  j        public static getLabelFor(android.view.View)
  j        public static setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
  j        public static setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener)
  j        public static setPaddingRelative(android.view.View,int,int,int,int)
  k        public static requestApplyInsets(android.view.View)
  l        public static getAccessibilityLiveRegion(android.view.View)
  l        public static onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  m        public static setLayerPaint(android.view.View,android.graphics.Paint)
  m        public static setScrollIndicators(android.view.View,int)
  n        public static getFitsSystemWindows(android.view.View)
  n        public static setElevation(android.view.View,float)
  n        public static setLabelFor(android.view.View,int)
  o        public static getOverScrollMode(android.view.View)
  o        public static setSaveFromParentEnabled(android.view.View,boolean)
  o        public static setRotationY(android.view.View,float)
  p        public static hasAccessibilityDelegate(android.view.View)
  p        public static setFitsSystemWindows(android.view.View,boolean)
  p        public static setTranslationZ(android.view.View,float)
  p        public static setTransitionName(android.view.View,java.lang.String)
  r        public static jumpDrawablesToCurrentState(android.view.View)
  r        public static postInvalidateOnAnimation(android.view.View,int,int,int,int)
  r        public static setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean)
  s        public static setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
  s        public static setOverScrollMode(android.view.View,int)
  t        public static setAlpha(android.view.View,float)
  u        public static hasTransientState(android.view.View)
  v        public static getMeasuredState(android.view.View)
  v        public static setX(android.view.View,float)
  v        public static combineMeasuredStates(int,int)
  w        public static getLayoutDirection(android.view.View)
  w        public static setTranslationY(android.view.View,float)
  w        public static dispatchNestedPreFling(android.view.View,float,float)
  x        public static postInvalidateOnAnimation(android.view.View)
  x        public static setClipBounds(android.view.View,android.graphics.Rect)
  x        public static dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat)
  y        public static getMinimumWidth(android.view.View)
  y        public static setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)
  z        public static getTranslationY(android.view.View)
  z        public static onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  z        public static dispatchNestedScroll(android.view.View,int,int,int,int,int[])

android.support.v4.view.ViewCompat$BaseViewCompatImpl    (com.rubenroy.minimaltodo.eval_z6$g)
===============================================================================
  a        public getParentForAccessibility(android.view.View)
  a        public setClipBounds(android.view.View,android.graphics.Rect)
  a        public setHasTransientState(android.view.View,boolean)
  b        public getPivotX(android.view.View)
  b        public onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  b        public setImportantForAccessibility(android.view.View,int)
  c        public getLayerType(android.view.View)
  d        public getMeasuredWidthAndState(android.view.View)
  d        public setRotationY(android.view.View,float)
  d        public setScrollIndicators(android.view.View,int,int)
  d        public postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
  e        public isOpaque(android.view.View)
  eval__   public dispatchFinishTemporaryDetach(android.view.View)
  eval_a   public getClipBounds(android.view.View)
  eval_a   public setElevation(android.view.View,float)
  eval_ao  public isLaidOut(android.view.View)
  eval_b   public isNestedScrollingEnabled(android.view.View)
  eval_b   public setTranslationZ(android.view.View,float)
  eval_c   public getTranslationZ(android.view.View)
  eval_c0  public isAttachedToWindow(android.view.View)
  eval_c4  public getZ(android.view.View)
  eval_c5  public hasOnClickListeners(android.view.View)
  eval_d   public dispatchStartTemporaryDetach(android.view.View)
  eval_e   public animate(android.view.View)
  eval_f   public getX(android.view.View)
  eval_g   public getMeasuredHeightAndState(android.view.View)
  eval_h   public getElevation(android.view.View)
  eval_i   public getMinimumHeight(android.view.View)
  eval_j   public jumpDrawablesToCurrentState(android.view.View)
  eval_k   public stopNestedScroll(android.view.View)
  eval_k   public setY(android.view.View,float)
  eval_l   public getPivotY(android.view.View)
  eval_l   public setAccessibilityLiveRegion(android.view.View,int)
  eval_m   public getY(android.view.View)
  eval_n   public getRotationY(android.view.View)
  eval_o   public isPaddingRelative(android.view.View)
  eval_p   public getBackgroundTintMode(android.view.View)
  eval_p   public setActivated(android.view.View,boolean)
  eval_p   public setScaleX(android.view.View,float)
  eval_q   public getAccessibilityLiveRegion(android.view.View)
  eval_r   public getMinimumWidth(android.view.View)
  eval_r   public setLabelFor(android.view.View,int)
  eval_s   public getPaddingEnd(android.view.View)
  eval_sr  public hasNestedScrollingParent(android.view.View)
  eval_t   public getAlpha(android.view.View)
  eval_u   public getFitsSystemWindows(android.view.View)
  eval_v   public requestApplyInsets(android.view.View)
  eval_w   public getBackgroundTintList(android.view.View)
  eval_w   public setX(android.view.View,float)
  eval_x   public getScaleX(android.view.View)
  eval_y   public getRotationX(android.view.View)
  eval_y0  public getScrollIndicators(android.view.View)
  eval_z   public getPaddingStart(android.view.View)
  f        public postInvalidateOnAnimation(android.view.View)
  f        public setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener)
  f        public canScrollVertically(android.view.View,int)
  f        public performAccessibilityAction(android.view.View,int,android.os.Bundle)
  f        public setPaddingRelative(android.view.View,int,int,int,int)
  g        public getTranslationX(android.view.View)
  g        public setNestedScrollingEnabled(android.view.View,boolean)
  g        public startNestedScroll(android.view.View,int)
  g        public postInvalidateOnAnimation(android.view.View,int,int,int,int)
  h        public hasTransientState(android.view.View)
  h        public setTranslationY(android.view.View,float)
  i        public hasOverlappingRendering(android.view.View)
  i        public setAlpha(android.view.View,float)
  i        public setScrollIndicators(android.view.View,int)
  i        public dispatchNestedScroll(android.view.View,int,int,int,int,int[])
  i        public postOnAnimation(android.view.View,java.lang.Runnable)
  j        public getRotation(android.view.View)
  j        public onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat)
  j        public canScrollHorizontally(android.view.View,int)
  k        private bindTempDetach()
  k        public dispatchNestedPreFling(android.view.View,float,float)
  k        public dispatchNestedFling(android.view.View,float,float,boolean)
  k        public combineMeasuredStates(int,int)
  l        public getImportantForAccessibility(android.view.View)
  m        getFrameTime()
  m        private canScrollingViewScrollHorizontally(android.support.v4.view.ScrollingView,int)
  m        public getLayoutDirection(android.view.View)
  m        public setPivotX(android.view.View,float)
  n        public isImportantForAccessibility(android.view.View)
  n        public resolveSizeAndState(int,int,int)
  o        public setTranslationX(android.view.View,float)
  o        public setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean)
  p        public getTransitionName(android.view.View)
  p        public onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  p        public setSaveFromParentEnabled(android.view.View,boolean)
  p        public setRotationX(android.view.View,float)
  r        public getMeasuredState(android.view.View)
  r        public setLayerPaint(android.view.View,android.graphics.Paint)
  r        public onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  s        private canScrollingViewScrollVertically(android.support.v4.view.ScrollingView,int)
  s        public getScaleY(android.view.View)
  s        public setLayoutDirection(android.view.View,int)
  s        public setTransitionName(android.view.View,java.lang.String)
  t        public getLabelFor(android.view.View)
  t        public setPivotY(android.view.View,float)
  u        public getWindowSystemUiVisibility(android.view.View)
  v        public hasAccessibilityDelegate(android.view.View)
  v        public setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
  v        public setScaleY(android.view.View,float)
  w        public getAccessibilityNodeProvider(android.view.View)
  w        public setLayerType(android.view.View,int,android.graphics.Paint)
  w        public dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
  x        public getOverScrollMode(android.view.View)
  x        public setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
  x        public setFitsSystemWindows(android.view.View,boolean)
  y        public setOverScrollMode(android.view.View,int)
  z        public getTranslationY(android.view.View)
  z        public setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)
  z        public dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat)
  z        public setRotation(android.view.View,float)

android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl       (com.rubenroy.minimaltodo.eval_z6$q)
===============================================================================
  e    public isOpaque(android.view.View)
  o    public setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean)

android.support.v4.view.ViewCompat$Exception     (com.rubenroy.minimaltodo.eval_ie)
===============================================================================
  No methods

android.support.v4.view.ViewCompat$GBViewCompatImpl      (com.rubenroy.minimaltodo.eval_z6$w)
===============================================================================
  x    public getOverScrollMode(android.view.View)
  y    public setOverScrollMode(android.view.View,int)

android.support.v4.view.ViewCompat$HCViewCompatImpl      (com.rubenroy.minimaltodo.eval_z6$e)
===============================================================================
  b        public getPivotX(android.view.View)
  c        public getLayerType(android.view.View)
  d        public getMeasuredWidthAndState(android.view.View)
  d        public setRotationY(android.view.View,float)
  eval_f   public getX(android.view.View)
  eval_g   public getMeasuredHeightAndState(android.view.View)
  eval_j   public jumpDrawablesToCurrentState(android.view.View)
  eval_k   public setY(android.view.View,float)
  eval_l   public getPivotY(android.view.View)
  eval_m   public getY(android.view.View)
  eval_n   public getRotationY(android.view.View)
  eval_p   public setActivated(android.view.View,boolean)
  eval_p   public setScaleX(android.view.View,float)
  eval_t   public getAlpha(android.view.View)
  eval_w   public setX(android.view.View,float)
  eval_x   public getScaleX(android.view.View)
  eval_y   public getRotationX(android.view.View)
  g        public getTranslationX(android.view.View)
  h        public setTranslationY(android.view.View,float)
  i        public setAlpha(android.view.View,float)
  j        public getRotation(android.view.View)
  k        public combineMeasuredStates(int,int)
  m        getFrameTime()
  m        public setPivotX(android.view.View,float)
  n        public resolveSizeAndState(int,int,int)
  o        public setTranslationX(android.view.View,float)
  p        public setSaveFromParentEnabled(android.view.View,boolean)
  p        public setRotationX(android.view.View,float)
  r        public getMeasuredState(android.view.View)
  r        public setLayerPaint(android.view.View,android.graphics.Paint)
  s        public getScaleY(android.view.View)
  t        public setPivotY(android.view.View,float)
  v        public setScaleY(android.view.View,float)
  w        public setLayerType(android.view.View,int,android.graphics.Paint)
  z        public getTranslationY(android.view.View)
  z        public setRotation(android.view.View,float)

android.support.v4.view.ViewCompat$ICSMr1ViewCompatImpl  (com.rubenroy.minimaltodo.eval_z6$j)
===============================================================================
  eval_c5  public hasOnClickListeners(android.view.View)

android.support.v4.view.ViewCompat$ICSViewCompatImpl     (com.rubenroy.minimaltodo.eval_z6$b)
===============================================================================
  b        public onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  eval_e   public animate(android.view.View)
  f        public canScrollVertically(android.view.View,int)
  j        public canScrollHorizontally(android.view.View,int)
  p        public onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  r        public onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  v        public hasAccessibilityDelegate(android.view.View)
  x        public setFitsSystemWindows(android.view.View,boolean)
  z        public setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)

android.support.v4.view.ViewCompat$JBViewCompatImpl      (com.rubenroy.minimaltodo.eval_z6$i)
===============================================================================
  a        public getParentForAccessibility(android.view.View)
  a        public setHasTransientState(android.view.View,boolean)
  b        public setImportantForAccessibility(android.view.View,int)
  d        public postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
  eval_i   public getMinimumHeight(android.view.View)
  eval_r   public getMinimumWidth(android.view.View)
  eval_u   public getFitsSystemWindows(android.view.View)
  eval_v   public requestApplyInsets(android.view.View)
  f        public postInvalidateOnAnimation(android.view.View)
  f        public performAccessibilityAction(android.view.View,int,android.os.Bundle)
  g        public postInvalidateOnAnimation(android.view.View,int,int,int,int)
  h        public hasTransientState(android.view.View)
  i        public hasOverlappingRendering(android.view.View)
  i        public postOnAnimation(android.view.View,java.lang.Runnable)
  l        public getImportantForAccessibility(android.view.View)
  w        public getAccessibilityNodeProvider(android.view.View)

android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl   (com.rubenroy.minimaltodo.eval_z6$n)
===============================================================================
  eval_o   public isPaddingRelative(android.view.View)
  eval_r   public setLabelFor(android.view.View,int)
  eval_s   public getPaddingEnd(android.view.View)
  eval_z   public getPaddingStart(android.view.View)
  f        public setPaddingRelative(android.view.View,int,int,int,int)
  m        public getLayoutDirection(android.view.View)
  r        public setLayerPaint(android.view.View,android.graphics.Paint)
  s        public setLayoutDirection(android.view.View,int)
  t        public getLabelFor(android.view.View)
  u        public getWindowSystemUiVisibility(android.view.View)

android.support.v4.view.ViewCompat$JbMr2ViewCompatImpl   (com.rubenroy.minimaltodo.eval_z6$eval_g)
===============================================================================
  a        public setClipBounds(android.view.View,android.graphics.Rect)
  eval_a   public getClipBounds(android.view.View)

android.support.v4.view.ViewCompat$KitKatViewCompatImpl  (com.rubenroy.minimaltodo.eval_z6$p)
===============================================================================
  b        public setImportantForAccessibility(android.view.View,int)
  eval_ao  public isLaidOut(android.view.View)
  eval_c0  public isAttachedToWindow(android.view.View)
  eval_l   public setAccessibilityLiveRegion(android.view.View,int)
  eval_q   public getAccessibilityLiveRegion(android.view.View)

android.support.v4.view.ViewCompat$LollipopViewCompatImpl        (com.rubenroy.minimaltodo.eval_z6$f)
===============================================================================
  eval_a   public setElevation(android.view.View,float)
  eval_b   public isNestedScrollingEnabled(android.view.View)
  eval_b   public setTranslationZ(android.view.View,float)
  eval_c   public getTranslationZ(android.view.View)
  eval_c4  public getZ(android.view.View)
  eval_h   public getElevation(android.view.View)
  eval_k   public stopNestedScroll(android.view.View)
  eval_p   public getBackgroundTintMode(android.view.View)
  eval_sr  public hasNestedScrollingParent(android.view.View)
  eval_v   public requestApplyInsets(android.view.View)
  eval_w   public getBackgroundTintList(android.view.View)
  f        public setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener)
  g        public setNestedScrollingEnabled(android.view.View,boolean)
  g        public startNestedScroll(android.view.View,int)
  i        public dispatchNestedScroll(android.view.View,int,int,int,int,int[])
  j        public onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat)
  k        public dispatchNestedPreFling(android.view.View,float,float)
  k        public dispatchNestedFling(android.view.View,float,float,boolean)
  n        public isImportantForAccessibility(android.view.View)
  p        public getTransitionName(android.view.View)
  s        public setTransitionName(android.view.View,java.lang.String)
  v        public setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
  w        public dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
  x        public setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
  z        public dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat)

android.support.v4.view.ViewCompat$MarshmallowViewCompatImpl     (com.rubenroy.minimaltodo.eval_z6$r)
===============================================================================
  d        public setScrollIndicators(android.view.View,int,int)
  eval_y0  public getScrollIndicators(android.view.View)
  i        public setScrollIndicators(android.view.View,int)

android.support.v4.view.ViewCompat$ScrollIndicators      (com.rubenroy.minimaltodo.eval_z6$v)
===============================================================================
  No methods

android.support.v4.view.ViewCompat$ViewCompatImpl        (com.rubenroy.minimaltodo.eval_z6$eval_a)
===============================================================================
  a        public abstract getParentForAccessibility(android.view.View)
  a        public abstract setClipBounds(android.view.View,android.graphics.Rect)
  a        public abstract setHasTransientState(android.view.View,boolean)
  b        public abstract getPivotX(android.view.View)
  b        public abstract onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  b        public abstract setImportantForAccessibility(android.view.View,int)
  c        public abstract getLayerType(android.view.View)
  d        public abstract getMeasuredWidthAndState(android.view.View)
  d        public abstract setRotationY(android.view.View,float)
  d        public abstract setScrollIndicators(android.view.View,int,int)
  d        public abstract postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
  e        public abstract isOpaque(android.view.View)
  eval__   public abstract dispatchFinishTemporaryDetach(android.view.View)
  eval_a   public abstract getClipBounds(android.view.View)
  eval_a   public abstract setElevation(android.view.View,float)
  eval_ao  public abstract isLaidOut(android.view.View)
  eval_b   public abstract isNestedScrollingEnabled(android.view.View)
  eval_b   public abstract setTranslationZ(android.view.View,float)
  eval_c   public abstract getTranslationZ(android.view.View)
  eval_c0  public abstract isAttachedToWindow(android.view.View)
  eval_c4  public abstract getZ(android.view.View)
  eval_c5  public abstract hasOnClickListeners(android.view.View)
  eval_d   public abstract dispatchStartTemporaryDetach(android.view.View)
  eval_e   public abstract animate(android.view.View)
  eval_f   public abstract getX(android.view.View)
  eval_g   public abstract getMeasuredHeightAndState(android.view.View)
  eval_h   public abstract getElevation(android.view.View)
  eval_i   public abstract getMinimumHeight(android.view.View)
  eval_j   public abstract jumpDrawablesToCurrentState(android.view.View)
  eval_k   public abstract stopNestedScroll(android.view.View)
  eval_k   public abstract setY(android.view.View,float)
  eval_l   public abstract getPivotY(android.view.View)
  eval_l   public abstract setAccessibilityLiveRegion(android.view.View,int)
  eval_m   public abstract getY(android.view.View)
  eval_n   public abstract getRotationY(android.view.View)
  eval_o   public abstract isPaddingRelative(android.view.View)
  eval_p   public abstract getBackgroundTintMode(android.view.View)
  eval_p   public abstract setActivated(android.view.View,boolean)
  eval_p   public abstract setScaleX(android.view.View,float)
  eval_q   public abstract getAccessibilityLiveRegion(android.view.View)
  eval_r   public abstract getMinimumWidth(android.view.View)
  eval_r   public abstract setLabelFor(android.view.View,int)
  eval_s   public abstract getPaddingEnd(android.view.View)
  eval_sr  public abstract hasNestedScrollingParent(android.view.View)
  eval_t   public abstract getAlpha(android.view.View)
  eval_u   public abstract getFitsSystemWindows(android.view.View)
  eval_v   public abstract requestApplyInsets(android.view.View)
  eval_w   public abstract getBackgroundTintList(android.view.View)
  eval_w   public abstract setX(android.view.View,float)
  eval_x   public abstract getScaleX(android.view.View)
  eval_y   public abstract getRotationX(android.view.View)
  eval_y0  public abstract getScrollIndicators(android.view.View)
  eval_z   public abstract getPaddingStart(android.view.View)
  f        public abstract postInvalidateOnAnimation(android.view.View)
  f        public abstract setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener)
  f        public abstract canScrollVertically(android.view.View,int)
  f        public abstract performAccessibilityAction(android.view.View,int,android.os.Bundle)
  f        public abstract setPaddingRelative(android.view.View,int,int,int,int)
  g        public abstract getTranslationX(android.view.View)
  g        public abstract setNestedScrollingEnabled(android.view.View,boolean)
  g        public abstract startNestedScroll(android.view.View,int)
  g        public abstract postInvalidateOnAnimation(android.view.View,int,int,int,int)
  h        public abstract hasTransientState(android.view.View)
  h        public abstract setTranslationY(android.view.View,float)
  i        public abstract hasOverlappingRendering(android.view.View)
  i        public abstract setAlpha(android.view.View,float)
  i        public abstract setScrollIndicators(android.view.View,int)
  i        public abstract dispatchNestedScroll(android.view.View,int,int,int,int,int[])
  i        public abstract postOnAnimation(android.view.View,java.lang.Runnable)
  j        public abstract getRotation(android.view.View)
  j        public abstract onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat)
  j        public abstract canScrollHorizontally(android.view.View,int)
  k        public abstract dispatchNestedPreFling(android.view.View,float,float)
  k        public abstract dispatchNestedFling(android.view.View,float,float,boolean)
  k        public abstract combineMeasuredStates(int,int)
  l        public abstract getImportantForAccessibility(android.view.View)
  m        public abstract getLayoutDirection(android.view.View)
  m        public abstract setPivotX(android.view.View,float)
  n        public abstract isImportantForAccessibility(android.view.View)
  n        public abstract resolveSizeAndState(int,int,int)
  o        public abstract setTranslationX(android.view.View,float)
  o        public abstract setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean)
  p        public abstract getTransitionName(android.view.View)
  p        public abstract onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  p        public abstract setSaveFromParentEnabled(android.view.View,boolean)
  p        public abstract setRotationX(android.view.View,float)
  r        public abstract getMeasuredState(android.view.View)
  r        public abstract setLayerPaint(android.view.View,android.graphics.Paint)
  r        public abstract onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  s        public abstract getScaleY(android.view.View)
  s        public abstract setLayoutDirection(android.view.View,int)
  s        public abstract setTransitionName(android.view.View,java.lang.String)
  t        public abstract getLabelFor(android.view.View)
  t        public abstract setPivotY(android.view.View,float)
  u        public abstract getWindowSystemUiVisibility(android.view.View)
  v        public abstract hasAccessibilityDelegate(android.view.View)
  v        public abstract setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
  v        public abstract setScaleY(android.view.View,float)
  w        public abstract getAccessibilityNodeProvider(android.view.View)
  w        public abstract setLayerType(android.view.View,int,android.graphics.Paint)
  w        public abstract dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
  x        public abstract getOverScrollMode(android.view.View)
  x        public abstract setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
  x        public abstract setFitsSystemWindows(android.view.View,boolean)
  y        public abstract setOverScrollMode(android.view.View,int)
  z        public abstract getTranslationY(android.view.View)
  z        public abstract setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)
  z        public abstract dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat)
  z        public abstract setRotation(android.view.View,float)

android.support.v4.view.ViewCompatBase   (com.rubenroy.minimaltodo.eval_rw)
===============================================================================
  c        static getBackgroundTintMode(android.view.View)
  d        static getMinimumWidth(android.view.View)
  eval_f   static isLaidOut(android.view.View)
  eval_p   static getMinimumHeight(android.view.View)
  f        static setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
  i        static isAttachedToWindow(android.view.View)
  l        static setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
  o        static getBackgroundTintList(android.view.View)

android.support.v4.view.ViewCompatBase$IOException       (com.rubenroy.minimaltodo.eval_o5)
===============================================================================
  No methods

android.support.v4.view.ViewCompatEclairMr1      (com.rubenroy.minimaltodo.eval_w0)
===============================================================================
  b        public static isOpaque(android.view.View)
  eval_r   public static setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean)

android.support.v4.view.ViewCompatEclairMr1$IOException  (com.rubenroy.minimaltodo.eval_za)
===============================================================================
  No methods

android.support.v4.view.ViewCompatGingerbread    (com.rubenroy.minimaltodo.eval_ao)
===============================================================================
  l    public static setOverScrollMode(android.view.View,int)
  m    public static getOverScrollMode(android.view.View)

android.support.v4.view.ViewCompatGingerbread$NullPointerException       (com.rubenroy.minimaltodo.eval_k7)
===============================================================================
  No methods

android.support.v4.view.ViewCompatHC     (com.rubenroy.minimaltodo.eval_ex)
===============================================================================
  a        static getFrameTime()
  a        public static getAlpha(android.view.View)
  a        public static setScaleX(android.view.View,float)
  b        public static setActivated(android.view.View,boolean)
  d        public static getMeasuredState(android.view.View)
  e        public static getY(android.view.View)
  eval_b   public static getScaleY(android.view.View)
  eval_e   public static setSaveFromParentEnabled(android.view.View,boolean)
  eval_f   public static setRotationY(android.view.View,float)
  eval_g   public static getTranslationX(android.view.View)
  eval_i   public static getPivotX(android.view.View)
  eval_j   public static setTranslationY(android.view.View,float)
  eval_l   public static jumpDrawablesToCurrentState(android.view.View)
  eval_m   public static getScaleX(android.view.View)
  eval_o   public static getPivotY(android.view.View)
  eval_v   public static getRotation(android.view.View)
  eval_y   public static getRotationX(android.view.View)
  eval_z   public static setX(android.view.View,float)
  f        public static getRotationY(android.view.View)
  i        public static getLayerType(android.view.View)
  i        public static setScaleY(android.view.View,float)
  j        public static getMeasuredHeightAndState(android.view.View)
  j        public static setY(android.view.View,float)
  l        public static setTranslationX(android.view.View,float)
  m        public static setLayerType(android.view.View,int,android.graphics.Paint)
  m        public static resolveSizeAndState(int,int,int)
  o        public static setRotation(android.view.View,float)
  p        public static combineMeasuredStates(int,int)
  q        public static getX(android.view.View)
  r        public static setPivotX(android.view.View,float)
  s        public static getMeasuredWidthAndState(android.view.View)
  u        public static setRotationX(android.view.View,float)
  x        public static setPivotY(android.view.View,float)
  y        public static setAlpha(android.view.View,float)
  z        public static getTranslationY(android.view.View)

android.support.v4.view.ViewCompatHC$ArrayOutOfBoundsException   (com.rubenroy.minimaltodo.eval_eq)
===============================================================================
  No methods

android.support.v4.view.ViewCompatICS    (com.rubenroy.minimaltodo.eval_l3)
===============================================================================
  d        public static canScrollHorizontally(android.view.View,int)
  eval_h   public static onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object)
  f        public static onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  i        public static onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  o        public static setAccessibilityDelegate(android.view.View,java.lang.Object)
  u        public static setFitsSystemWindows(android.view.View,boolean)
  u        public static canScrollVertically(android.view.View,int)

android.support.v4.view.ViewCompatICS$ParseException     (com.rubenroy.minimaltodo.eval_j_)
===============================================================================
  No methods

android.support.v4.view.ViewCompatICSMr1 (com.rubenroy.minimaltodo.eval_lh)
===============================================================================
  m    public static hasOnClickListeners(android.view.View)

android.support.v4.view.ViewCompatICSMr1$NullPointerException    (com.rubenroy.minimaltodo.eval_id)
===============================================================================
  No methods

android.support.v4.view.ViewCompatJB     (com.rubenroy.minimaltodo.eval_py)
===============================================================================
  a        public static performAccessibilityAction(android.view.View,int,android.os.Bundle)
  c        public static hasTransientState(android.view.View)
  d        public static getImportantForAccessibility(android.view.View)
  d        public static setHasTransientState(android.view.View,boolean)
  e        public static getAccessibilityNodeProvider(android.view.View)
  e        public static postInvalidateOnAnimation(android.view.View,int,int,int,int)
  eval_z   public static postInvalidateOnAnimation(android.view.View)
  g        public static requestApplyInsets(android.view.View)
  j        public static getMinimumHeight(android.view.View)
  o        public static hasOverlappingRendering(android.view.View)
  t        public static getParentForAccessibility(android.view.View)
  u        public static getFitsSystemWindows(android.view.View)
  w        public static getMinimumWidth(android.view.View)
  x        public static setImportantForAccessibility(android.view.View,int)
  x        public static postOnAnimation(android.view.View,java.lang.Runnable)
  x        public static postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)

android.support.v4.view.ViewCompatJB$ArrayOutOfBoundsException   (com.rubenroy.minimaltodo.eval_ho)
===============================================================================
  No methods

android.support.v4.view.ViewCompatJellybeanMr1   (com.rubenroy.minimaltodo.eval__h)
===============================================================================
  b        public static getWindowSystemUiVisibility(android.view.View)
  d        public static isPaddingRelative(android.view.View)
  eval_o   public static getPaddingEnd(android.view.View)
  h        public static setLabelFor(android.view.View,int)
  m        public static setLayoutDirection(android.view.View,int)
  o        public static getLabelFor(android.view.View)
  s        public static setLayerPaint(android.view.View,android.graphics.Paint)
  u        public static setPaddingRelative(android.view.View,int,int,int,int)
  x        public static getLayoutDirection(android.view.View)
  z        public static getPaddingStart(android.view.View)

android.support.v4.view.ViewCompatJellybeanMr1$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_eh)
===============================================================================
  No methods

android.support.v4.view.ViewCompatJellybeanMr2   (com.rubenroy.minimaltodo.eval_d6)
===============================================================================
  k    public static getClipBounds(android.view.View)
  m    public static setClipBounds(android.view.View,android.graphics.Rect)

android.support.v4.view.ViewCompatJellybeanMr2$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_xs)
===============================================================================
  No methods

android.support.v4.view.ViewCompatKitKat (com.rubenroy.minimaltodo.eval_xy)
===============================================================================
  n    public static getAccessibilityLiveRegion(android.view.View)
  r    public static isLaidOut(android.view.View)
  t    public static isAttachedToWindow(android.view.View)
  w    public static setAccessibilityLiveRegion(android.view.View,int)

android.support.v4.view.ViewCompatKitKat$NullPointerException    (com.rubenroy.minimaltodo.eval_vv)
===============================================================================
  No methods

android.support.v4.view.ViewCompatLollipop       (com.rubenroy.minimaltodo.eval_i2)
===============================================================================
  a        public static getTransitionName(android.view.View)
  b        public static getElevation(android.view.View)
  b        public static dispatchNestedPreFling(android.view.View,float,float)
  b        public static dispatchNestedScroll(android.view.View,int,int,int,int,int[])
  d        public static getTranslationZ(android.view.View)
  e        public static isImportantForAccessibility(android.view.View)
  e        public static dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat)
  eval_g   static getBackgroundTintMode(android.view.View)
  eval_y   public static getZ(android.view.View)
  g        public static setNestedScrollingEnabled(android.view.View,boolean)
  g        public static startNestedScroll(android.view.View,int)
  h        static setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
  h        public static onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat)
  i        static getBackgroundTintList(android.view.View)
  m        public static hasNestedScrollingParent(android.view.View)
  m        public static setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener)
  m        public static setTranslationZ(android.view.View,float)
  n        public static isNestedScrollingEnabled(android.view.View)
  q        public static setElevation(android.view.View,float)
  s        public static stopNestedScroll(android.view.View)
  s        public static setTransitionName(android.view.View,java.lang.String)
  u        public static requestApplyInsets(android.view.View)
  v        public static dispatchNestedFling(android.view.View,float,float,boolean)
  z        static setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
  z        public static dispatchNestedPreScroll(android.view.View,int,int,int[],int[])

android.support.v4.view.ViewCompatLollipop$1     (com.rubenroy.minimaltodo.eval_i2$1)
===============================================================================
  onApplyWindowInsets  public onApplyWindowInsets(android.view.View,android.view.WindowInsets)

android.support.v4.view.ViewCompatLollipop$ParseException        (com.rubenroy.minimaltodo.eval_ae)
===============================================================================
  No methods

android.support.v4.view.ViewCompatMarshmallow    (com.rubenroy.minimaltodo.eval_yc)
===============================================================================
  b    public static getScrollIndicators(android.view.View)
  g    public static setScrollIndicators(android.view.View,int)
  n    public static setScrollIndicators(android.view.View,int,int)

android.support.v4.view.ViewCompatMarshmallow$NullPointerException       (com.rubenroy.minimaltodo.eval_ze)
===============================================================================
  No methods

android.support.v4.view.ViewConfigurationCompat  (com.rubenroy.minimaltodo.eval_j0)
===============================================================================
  h    public static getScaledPagingTouchSlop(android.view.ViewConfiguration)
  q    public static hasPermanentMenuKey(android.view.ViewConfiguration)

android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl (com.rubenroy.minimaltodo.eval_j0$p)
===============================================================================
  c    public getScaledPagingTouchSlop(android.view.ViewConfiguration)
  r    public hasPermanentMenuKey(android.view.ViewConfiguration)

android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl        (com.rubenroy.minimaltodo.eval_j0$k)
===============================================================================
  c    public getScaledPagingTouchSlop(android.view.ViewConfiguration)

android.support.v4.view.ViewConfigurationCompat$HoneycombViewConfigurationVersionImpl    (com.rubenroy.minimaltodo.eval_j0$g)
===============================================================================
  r    public hasPermanentMenuKey(android.view.ViewConfiguration)

android.support.v4.view.ViewConfigurationCompat$IcsViewConfigurationVersionImpl  (com.rubenroy.minimaltodo.eval_j0$_)
===============================================================================
  r    public hasPermanentMenuKey(android.view.ViewConfiguration)

android.support.v4.view.ViewConfigurationCompat$ParseException   (com.rubenroy.minimaltodo.eval_x3)
===============================================================================
  No methods

android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl     (com.rubenroy.minimaltodo.eval_j0$b)
===============================================================================
  c    public abstract getScaledPagingTouchSlop(android.view.ViewConfiguration)
  r    public abstract hasPermanentMenuKey(android.view.ViewConfiguration)

android.support.v4.view.ViewConfigurationCompatFroyo     (com.rubenroy.minimaltodo.eval_xq)
===============================================================================
  m    public static getScaledPagingTouchSlop(android.view.ViewConfiguration)

android.support.v4.view.ViewConfigurationCompatFroyo$ParseException      (com.rubenroy.minimaltodo.eval_mq)
===============================================================================
  No methods

android.support.v4.view.ViewConfigurationCompatICS       (com.rubenroy.minimaltodo.eval_ab)
===============================================================================
  z    static hasPermanentMenuKey(android.view.ViewConfiguration)

android.support.v4.view.ViewConfigurationCompatICS$NullPointerException  (com.rubenroy.minimaltodo.eval_mh)
===============================================================================
  No methods

android.support.v4.view.ViewGroupCompat  (com.rubenroy.minimaltodo.eval_wx)
===============================================================================
  a    public static setLayoutMode(android.view.ViewGroup,int)
  d    public static getLayoutMode(android.view.ViewGroup)
  h    public static onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
  s    public static getNestedScrollAxes(android.view.ViewGroup)
  t    public static isTransitionGroup(android.view.ViewGroup)
  u    public static setTransitionGroup(android.view.ViewGroup,boolean)
  v    public static setMotionEventSplittingEnabled(android.view.ViewGroup,boolean)

android.support.v4.view.ViewGroupCompat$Exception        (com.rubenroy.minimaltodo.eval_iv)
===============================================================================
  No methods

android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl    (com.rubenroy.minimaltodo.eval_wx$e)
===============================================================================
  e    public setMotionEventSplittingEnabled(android.view.ViewGroup,boolean)

android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl   (com.rubenroy.minimaltodo.eval_wx$l)
===============================================================================
  q    public onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)

android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl      (com.rubenroy.minimaltodo.eval_wx$o)
===============================================================================
  a    public abstract setLayoutMode(android.view.ViewGroup,int)
  e    public abstract setMotionEventSplittingEnabled(android.view.ViewGroup,boolean)
  o    public abstract getNestedScrollAxes(android.view.ViewGroup)
  q    public abstract onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
  w    public abstract setTransitionGroup(android.view.ViewGroup,boolean)
  y    public abstract isTransitionGroup(android.view.ViewGroup)
  z    public abstract getLayoutMode(android.view.ViewGroup)

android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl  (com.rubenroy.minimaltodo.eval_wx$eval_b)
===============================================================================
  a    public setLayoutMode(android.view.ViewGroup,int)
  z    public getLayoutMode(android.view.ViewGroup)

android.support.v4.view.ViewGroupCompat$ViewGroupCompatLollipopImpl      (com.rubenroy.minimaltodo.eval_wx$i)
===============================================================================
  o    public getNestedScrollAxes(android.view.ViewGroup)
  w    public setTransitionGroup(android.view.ViewGroup,boolean)
  y    public isTransitionGroup(android.view.ViewGroup)

android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl  (com.rubenroy.minimaltodo.eval_wx$z)
===============================================================================
  a    public setLayoutMode(android.view.ViewGroup,int)
  e    public setMotionEventSplittingEnabled(android.view.ViewGroup,boolean)
  o    public getNestedScrollAxes(android.view.ViewGroup)
  q    public onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
  w    public setTransitionGroup(android.view.ViewGroup,boolean)
  y    public isTransitionGroup(android.view.ViewGroup)
  z    public getLayoutMode(android.view.ViewGroup)

android.support.v4.view.ViewGroupCompatHC        (com.rubenroy.minimaltodo.eval_ji)
===============================================================================
  c    public static setMotionEventSplittingEnabled(android.view.ViewGroup,boolean)

android.support.v4.view.ViewGroupCompatHC$ArrayOutOfBoundsException      (com.rubenroy.minimaltodo.eval_j9)
===============================================================================
  No methods

android.support.v4.view.ViewGroupCompatIcs       (com.rubenroy.minimaltodo.eval_sy)
===============================================================================
  l    public static onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)

android.support.v4.view.ViewGroupCompatIcs$ParseException        (com.rubenroy.minimaltodo.eval_hb)
===============================================================================
  No methods

android.support.v4.view.ViewGroupCompatJellybeanMR2      (com.rubenroy.minimaltodo.eval_v9)
===============================================================================
  i    public static getLayoutMode(android.view.ViewGroup)
  t    public static setLayoutMode(android.view.ViewGroup,int)

android.support.v4.view.ViewGroupCompatJellybeanMR2$ArrayOutOfBoundsException    (com.rubenroy.minimaltodo.eval_nl)
===============================================================================
  No methods

android.support.v4.view.ViewGroupCompatLollipop  (com.rubenroy.minimaltodo.eval_qj)
===============================================================================
  a    public static getNestedScrollAxes(android.view.ViewGroup)
  f    public static setTransitionGroup(android.view.ViewGroup,boolean)
  z    public static isTransitionGroup(android.view.ViewGroup)

android.support.v4.view.ViewGroupCompatLollipop$ParseException   (com.rubenroy.minimaltodo.eval_ci)
===============================================================================
  No methods

android.support.v4.view.ViewPager        (com.rubenroy.minimaltodo.eval_tp)
===============================================================================
  a                                private determineTargetPage(int,float,int,int)
  b                                pageLeft()
  b                                infoForChild(android.view.View)
  b                                private dispatchOnScrollStateChanged(int)
  b                                public setCurrentItem(int,boolean)
  b                                private scrollToItem(int,boolean,int,boolean)
  c                                private infoForCurrentScrollPosition()
  c                                public removeOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)
  c                                populate(int)
  d                                public getPageMargin()
  d                                public setPageMargin(int)
  e                                private dispatchOnPageSelected(int)
  eval__                           infoForPosition(int)
  eval_a                           public beginFakeDrag()
  eval_b                           private sortChildDrawingOrder()
  eval_b                           private pageScrolled(int)
  eval_e                           private resetTouch()
  eval_g                           public isFakeDragging()
  eval_i                           static access$400()
  eval_i                           private setScrollState(int)
  eval_k                           infoForAnyChild(android.view.View)
  eval_q                           addNewItem(int,int)
  eval_s                           private getClientWidth()
  eval_z                           public getCurrentItem()
  eval_z                           setChildrenDrawingOrderEnabledCompat(boolean)
  f                                public setOffscreenPageLimit(int)
  g                                private endDrag()
  h                                private calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo)
  h                                private onSecondaryPointerUp(android.view.MotionEvent)
  h                                protected canScroll(android.view.View,boolean,int,int,int)
  i                                public setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)
  i                                protected onPageScrolled(int,float,int)
  j                                public addOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)
  j                                public arrowScroll(int)
  k                                setCurrentItemInternal(int,boolean,boolean)
  l                                public getAdapter()
  l                                public setAdapter(android.support.v4.view.PagerAdapter)
  l                                private setScrollingCacheEnabled(boolean)
  m                                public getOffscreenPageLimit()
  m                                static access$300(android.support.v4.view.ViewPager)
  m                                private enableLayers(boolean)
  m                                public fakeDragBy(float)
  o                                private requestParentDisallowInterceptTouchEvent(boolean)
  o                                private isGutterDrag(float,float)
  o                                private recomputeScrollPosition(int,int,int,int)
  p                                private removeNonDecorViews()
  p                                static access$200(android.support.v4.view.ViewPager)
  p                                static access$000(android.support.v4.view.ViewPager,int)
  p                                public executeKeyEvent(android.view.KeyEvent)
  p                                setCurrentItemInternal(int,boolean,boolean,int)
  p                                smoothScrollTo(int,int,int)
  q                                populate()
  q                                public setCurrentItem(int)
  r                                public setPageMarginDrawable(int)
  s                                pageRight()
  s                                distanceInfluenceForSnapDuration(float)
  t                                initViewPager()
  t                                private getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)
  t                                public setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer)
  u                                public endFakeDrag()
  u                                public setPageMarginDrawable(android.graphics.drawable.Drawable)
  u                                setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)
  v                                public clearOnPageChangeListeners()
  v                                smoothScrollTo(int,int)
  w                                dataSetChanged()
  w                                private dispatchOnPageScrolled(int,float,int)
  x                                private completeScroll(boolean)
  y                                setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener)
  y                                private performDrag(float)
  addFocusables                    public addFocusables(java.util.ArrayList,int,int)
  addTouchables                    public addTouchables(java.util.ArrayList)
  addView                          public addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
  canScrollHorizontally            public canScrollHorizontally(int)
  checkLayoutParams                protected checkLayoutParams(android.view.ViewGroup$LayoutParams)
  computeScroll                    public computeScroll()
  dispatchKeyEvent                 public dispatchKeyEvent(android.view.KeyEvent)
  dispatchPopulateAccessibilityEvent   public dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
  draw                             public draw(android.graphics.Canvas)
  drawableStateChanged             protected drawableStateChanged()
  generateDefaultLayoutParams      protected generateDefaultLayoutParams()
  generateLayoutParams             public generateLayoutParams(android.util.AttributeSet)
  generateLayoutParams             protected generateLayoutParams(android.view.ViewGroup$LayoutParams)
  getChildDrawingOrder             protected getChildDrawingOrder(int,int)
  onAttachedToWindow               protected onAttachedToWindow()
  onDetachedFromWindow             protected onDetachedFromWindow()
  onDraw                           protected onDraw(android.graphics.Canvas)
  onInterceptTouchEvent            public onInterceptTouchEvent(android.view.MotionEvent)
  onLayout                         protected onLayout(boolean,int,int,int,int)
  onMeasure                        protected onMeasure(int,int)
  onRequestFocusInDescendants      protected onRequestFocusInDescendants(int,android.graphics.Rect)
  onRestoreInstanceState           public onRestoreInstanceState(android.os.Parcelable)
  onSaveInstanceState              public onSaveInstanceState()
  onSizeChanged                    protected onSizeChanged(int,int,int,int)
  onTouchEvent                     public onTouchEvent(android.view.MotionEvent)
  removeView                       public removeView(android.view.View)
  verifyDrawable                   protected verifyDrawable(android.graphics.drawable.Drawable)

android.support.v4.view.ViewPager$1      (com.rubenroy.minimaltodo.eval_tp$1)
===============================================================================
  n        public compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo)
  compare  public volatile compare(java.lang.Object,java.lang.Object)

android.support.v4.view.ViewPager$2      (com.rubenroy.minimaltodo.eval_tp$2)
===============================================================================
  getInterpolation public getInterpolation(float)

android.support.v4.view.ViewPager$3      (com.rubenroy.minimaltodo.eval_tp$3)
===============================================================================
  run  public run()

android.support.v4.view.ViewPager$Decor  (com.rubenroy.minimaltodo.eval_tp$n)
===============================================================================
  No methods

android.support.v4.view.ViewPager$IOException    (com.rubenroy.minimaltodo.eval_wg)
===============================================================================
  No methods

android.support.v4.view.ViewPager$ItemInfo       (com.rubenroy.minimaltodo.eval_tp$l)
===============================================================================
  No methods

android.support.v4.view.ViewPager$LayoutParams   (com.rubenroy.minimaltodo.eval_tp$i)
===============================================================================
  No methods

android.support.v4.view.ViewPager$MyAccessibilityDelegate        (com.rubenroy.minimaltodo.eval_tp$s)
===============================================================================
  d    public onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  p    private canScroll()
  x    public performAccessibilityAction(android.view.View,int,android.os.Bundle)
  z    public onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)

android.support.v4.view.ViewPager$OnAdapterChangeListener        (com.rubenroy.minimaltodo.eval_tp$j)
===============================================================================
  a    public abstract onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter)

android.support.v4.view.ViewPager$OnPageChangeListener   (com.rubenroy.minimaltodo.eval_tp$g)
===============================================================================
  f    public abstract onPageSelected(int)
  f    public abstract onPageScrolled(int,float,int)
  v    public abstract onPageScrollStateChanged(int)

android.support.v4.view.ViewPager$PageTransformer        (com.rubenroy.minimaltodo.eval_tp$eval_x)
===============================================================================
  a    public abstract transformPage(android.view.View,float)

android.support.v4.view.ViewPager$PagerObserver  (com.rubenroy.minimaltodo.eval_tp$w)
===============================================================================
  onChanged        public onChanged()
  onInvalidated    public onInvalidated()

android.support.v4.view.ViewPager$SavedState     (com.rubenroy.minimaltodo.eval_tp$eval_c)
===============================================================================
  toString         public toString()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.view.ViewPager$SavedState$1   (com.rubenroy.minimaltodo.eval_tp$eval_c$1)
===============================================================================
  j    public createFromParcel(android.os.Parcel,java.lang.ClassLoader)
  x    public newArray(int)

android.support.v4.view.ViewPager$SavedState$Exception   (com.rubenroy.minimaltodo.eval_ez)
===============================================================================
  No methods

android.support.v4.view.ViewPager$SimpleOnPageChangeListener     (com.rubenroy.minimaltodo.eval_tp$d)
===============================================================================
  f    public onPageSelected(int)
  f    public onPageScrolled(int,float,int)
  v    public onPageScrollStateChanged(int)

android.support.v4.view.ViewPager$ViewPositionComparator (com.rubenroy.minimaltodo.eval_tp$o)
===============================================================================
  i        public compare(android.view.View,android.view.View)
  compare  public volatile compare(java.lang.Object,java.lang.Object)

android.support.v4.view.ViewParentCompat (com.rubenroy.minimaltodo.eval_o7)
===============================================================================
  eval_s   public static requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent)
  h        public static onStopNestedScroll(android.view.ViewParent,android.view.View)
  j        public static notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
  q        public static onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
  r        public static onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
  v        public static onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
  v        public static onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
  w        public static onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
  y        public static onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)

android.support.v4.view.ViewParentCompat$NullPointerException    (com.rubenroy.minimaltodo.eval_jl)
===============================================================================
  No methods

android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl (com.rubenroy.minimaltodo.eval_o7$d)
===============================================================================
  j    public requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent)

android.support.v4.view.ViewParentCompat$ViewParentCompatImpl    (com.rubenroy.minimaltodo.eval_o7$y)
===============================================================================
  eval_m   public abstract onStopNestedScroll(android.view.ViewParent,android.view.View)
  i        public abstract onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
  j        public abstract requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent)
  m        public abstract onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
  p        public abstract onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
  r        public abstract notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
  v        public abstract onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
  y        public abstract onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
  z        public abstract onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)

android.support.v4.view.ViewParentCompat$ViewParentCompatKitKatImpl      (com.rubenroy.minimaltodo.eval_o7$k)
===============================================================================
  r    public notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)

android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl    (com.rubenroy.minimaltodo.eval_o7$m)
===============================================================================
  eval_m   public onStopNestedScroll(android.view.ViewParent,android.view.View)
  i        public onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
  m        public onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
  p        public onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
  v        public onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
  y        public onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
  z        public onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)

android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl        (com.rubenroy.minimaltodo.eval_o7$eval_k)
===============================================================================
  eval_m   public onStopNestedScroll(android.view.ViewParent,android.view.View)
  i        public onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
  j        public requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent)
  m        public onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
  p        public onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
  r        public notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
  v        public onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
  y        public onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
  z        public onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)

android.support.v4.view.ViewParentCompatICS      (com.rubenroy.minimaltodo.eval_z_)
===============================================================================
  l    public static requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent)

android.support.v4.view.ViewParentCompatICS$IOException  (com.rubenroy.minimaltodo.eval_l5)
===============================================================================
  No methods

android.support.v4.view.ViewParentCompatKitKat   (com.rubenroy.minimaltodo.eval_zm)
===============================================================================
  s    public static notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)

android.support.v4.view.ViewParentCompatKitKat$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_j3)
===============================================================================
  No methods

android.support.v4.view.ViewParentCompatLollipop (com.rubenroy.minimaltodo.eval_bz)
===============================================================================
  b    public static onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
  c    public static onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
  f    public static onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
  f    public static onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
  h    public static onStopNestedScroll(android.view.ViewParent,android.view.View)
  u    public static onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
  z    public static onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)

android.support.v4.view.ViewParentCompatLollipop$IOException     (com.rubenroy.minimaltodo.eval_yq)
===============================================================================
  No methods

android.support.v4.view.ViewPropertyAnimatorCompat       (com.rubenroy.minimaltodo.eval_sv)
===============================================================================
  a        static access$400(android.support.v4.view.ViewPropertyAnimatorCompat)
  b        static access$100(android.support.v4.view.ViewPropertyAnimatorCompat)
  b        public scaleXBy(float)
  c        public translationX(float)
  c        public withStartAction(java.lang.Runnable)
  d        public setInterpolator(android.view.animation.Interpolator)
  eval_a   public translationZBy(float)
  eval_i   public yBy(float)
  eval_m   public rotationBy(float)
  eval_r   public translationXBy(float)
  eval_t   public xBy(float)
  eval_u   public getInterpolator()
  eval_u   public scaleYBy(float)
  eval_v   static access$402(android.support.v4.view.ViewPropertyAnimatorCompat,int)
  eval_v   public rotationY(float)
  g        public rotationX(float)
  h        static access$102(android.support.v4.view.ViewPropertyAnimatorCompat,java.lang.Runnable)
  h        public translationYBy(float)
  h        public setStartDelay(long)
  i        public getStartDelay()
  i        public z(float)
  j        public zBy(float)
  k        public cancel()
  k        public rotationYBy(float)
  l        public translationZ(float)
  m        public translationY(float)
  m        public withEndAction(java.lang.Runnable)
  n        public x(float)
  o        static access$002(android.support.v4.view.ViewPropertyAnimatorCompat,java.lang.Runnable)
  o        public alphaBy(float)
  p        public getDuration()
  p        public rotation(float)
  q        static access$000(android.support.v4.view.ViewPropertyAnimatorCompat)
  q        public scaleX(float)
  r        public withLayer()
  r        public setUpdateListener(android.support.v4.view.ViewPropertyAnimatorUpdateListener)
  r        public alpha(float)
  v        public scaleY(float)
  w        public start()
  w        public rotationXBy(float)
  y        public y(float)
  y        public setDuration(long)
  z        public setListener(android.support.v4.view.ViewPropertyAnimatorListener)

android.support.v4.view.ViewPropertyAnimatorCompat$1     (com.rubenroy.minimaltodo.eval_sv$1)
===============================================================================
  No methods

android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl    (com.rubenroy.minimaltodo.eval_sv$u)
===============================================================================
  a        public setStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long)
  b        public yBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  c        public getInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  d        public withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable)
  e        public cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  eval_a   public zBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_b   public xBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_d   public scaleXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_g   public scaleX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_h   public withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  eval_i   public rotationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_k   public translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_l   public translationZ(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_r   public translationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_s   public rotationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_w   private postStartMessage(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  eval_x   public y(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_y   public translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_z   public z(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  g        public scaleYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  h        public translationZBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  h        public withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable)
  i        public getDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  i        public rotationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  k        public scaleY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  l        static access$200(android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl,android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  l        private startAnimation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  m        public getStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  m        public rotation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  n        public setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator)
  n        private removeStartMessage(android.view.View)
  p        public setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener)
  p        public alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  p        public setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long)
  q        public x(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  r        public rotationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  s        public rotationBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  t        public setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener)
  t        public alphaBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  w        public translationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  y        public start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)

android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl$NullPointerException       (com.rubenroy.minimaltodo.eval_wn)
===============================================================================
  No methods

android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl$Starter    (com.rubenroy.minimaltodo.eval_sv$u$z)
===============================================================================
  run  public run()

android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl     (com.rubenroy.minimaltodo.eval_sv$c)
===============================================================================
  a        public setStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long)
  b        public yBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  d        public withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable)
  e        public cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  eval_b   public xBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_d   public scaleXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_g   public scaleX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_h   public withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  eval_i   public rotationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_k   public translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_r   public translationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_s   public rotationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_x   public y(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_y   public translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  g        public scaleYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  h        public withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable)
  i        public getDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  i        public rotationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  k        public scaleY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  m        public getStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  m        public rotation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  n        public setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator)
  p        public setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener)
  p        public alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  p        public setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long)
  q        public x(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  r        public rotationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  s        public rotationBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  t        public alphaBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  w        public translationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  y        public start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)

android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$Exception   (com.rubenroy.minimaltodo.eval_uv)
===============================================================================
  No methods

android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$MyVpaListener       (com.rubenroy.minimaltodo.eval_sv$c$y)
===============================================================================
  b    public onAnimationCancel(android.view.View)
  d    public onAnimationStart(android.view.View)
  v    public onAnimationEnd(android.view.View)

android.support.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl   (com.rubenroy.minimaltodo.eval_sv$e)
===============================================================================
  c    public getInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)

android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl      (com.rubenroy.minimaltodo.eval_sv$v)
===============================================================================
  d        public withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable)
  eval_h   public withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  h        public withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable)
  p        public setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener)

android.support.v4.view.ViewPropertyAnimatorCompat$KitKatViewPropertyAnimatorCompatImpl  (com.rubenroy.minimaltodo.eval_sv$h)
===============================================================================
  t    public setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener)

android.support.v4.view.ViewPropertyAnimatorCompat$LollipopViewPropertyAnimatorCompatImpl        (com.rubenroy.minimaltodo.eval_sv$x)
===============================================================================
  eval_a   public zBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_l   public translationZ(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_z   public z(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  h        public translationZBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)

android.support.v4.view.ViewPropertyAnimatorCompat$NullPointerException  (com.rubenroy.minimaltodo.eval_i3)
===============================================================================
  No methods

android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl        (com.rubenroy.minimaltodo.eval_sv$eval_p)
===============================================================================
  a        public abstract setStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long)
  b        public abstract yBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  c        public abstract getInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  d        public abstract withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable)
  e        public abstract cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  eval_a   public abstract zBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_b   public abstract xBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_d   public abstract scaleXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_g   public abstract scaleX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_h   public abstract withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  eval_i   public abstract rotationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_k   public abstract translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_l   public abstract translationZ(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_r   public abstract translationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_s   public abstract rotationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_x   public abstract y(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_y   public abstract translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  eval_z   public abstract z(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  g        public abstract scaleYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  h        public abstract translationZBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  h        public abstract withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable)
  i        public abstract getDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  i        public abstract rotationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  k        public abstract scaleY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  m        public abstract getStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)
  m        public abstract rotation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  n        public abstract setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator)
  p        public abstract setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener)
  p        public abstract alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  p        public abstract setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long)
  q        public abstract x(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  r        public abstract rotationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  s        public abstract rotationBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  t        public abstract setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener)
  t        public abstract alphaBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  w        public abstract translationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float)
  y        public abstract start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View)

android.support.v4.view.ViewPropertyAnimatorCompatICS    (com.rubenroy.minimaltodo.eval_qt)
===============================================================================
  b        public static setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener)
  b        public static y(android.view.View,float)
  eval__   public static rotationBy(android.view.View,float)
  eval_c   public static translationYBy(android.view.View,float)
  eval_e   public static scaleX(android.view.View,float)
  eval_f   public static yBy(android.view.View,float)
  eval_g   public static translationXBy(android.view.View,float)
  eval_j   public static rotationYBy(android.view.View,float)
  eval_k   public static xBy(android.view.View,float)
  eval_m   public static rotationY(android.view.View,float)
  eval_u   public static rotationXBy(android.view.View,float)
  i        public static getStartDelay(android.view.View)
  i        public static rotationX(android.view.View,float)
  j        public static setStartDelay(android.view.View,long)
  k        public static setInterpolator(android.view.View,android.view.animation.Interpolator)
  k        public static alphaBy(android.view.View,float)
  l        public static rotation(android.view.View,float)
  m        public static translationY(android.view.View,float)
  o        public static cancel(android.view.View)
  s        public static x(android.view.View,float)
  t        public static scaleYBy(android.view.View,float)
  u        public static scaleXBy(android.view.View,float)
  v        public static start(android.view.View)
  v        public static translationX(android.view.View,float)
  w        public static alpha(android.view.View,float)
  x        public static getDuration(android.view.View)
  x        public static setDuration(android.view.View,long)
  z        public static scaleY(android.view.View,float)

android.support.v4.view.ViewPropertyAnimatorCompatICS$1  (com.rubenroy.minimaltodo.eval_qt$1)
===============================================================================
  onAnimationCancel    public onAnimationCancel(android.animation.Animator)
  onAnimationEnd       public onAnimationEnd(android.animation.Animator)
  onAnimationStart     public onAnimationStart(android.animation.Animator)

android.support.v4.view.ViewPropertyAnimatorCompatICS$IOException        (com.rubenroy.minimaltodo.eval_c9)
===============================================================================
  No methods

android.support.v4.view.ViewPropertyAnimatorCompatJB     (com.rubenroy.minimaltodo.eval_dx)
===============================================================================
  n    public static setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener)
  q    public static withEndAction(android.view.View,java.lang.Runnable)
  t    public static withLayer(android.view.View)
  y    public static withStartAction(android.view.View,java.lang.Runnable)

android.support.v4.view.ViewPropertyAnimatorCompatJB$1   (com.rubenroy.minimaltodo.eval_dx$1)
===============================================================================
  onAnimationCancel    public onAnimationCancel(android.animation.Animator)
  onAnimationEnd       public onAnimationEnd(android.animation.Animator)
  onAnimationStart     public onAnimationStart(android.animation.Animator)

android.support.v4.view.ViewPropertyAnimatorCompatJB$ParseException      (com.rubenroy.minimaltodo.eval_ay)
===============================================================================
  No methods

android.support.v4.view.ViewPropertyAnimatorCompatJellybeanMr2   (com.rubenroy.minimaltodo.eval_yf)
===============================================================================
  e    public static getInterpolator(android.view.View)

android.support.v4.view.ViewPropertyAnimatorCompatJellybeanMr2$ParseException    (com.rubenroy.minimaltodo.eval_v7)
===============================================================================
  No methods

android.support.v4.view.ViewPropertyAnimatorCompatKK     (com.rubenroy.minimaltodo.eval_wj)
===============================================================================
  r    public static setUpdateListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener)

android.support.v4.view.ViewPropertyAnimatorCompatKK$1   (com.rubenroy.minimaltodo.eval_wj$1)
===============================================================================
  onAnimationUpdate    public onAnimationUpdate(android.animation.ValueAnimator)

android.support.v4.view.ViewPropertyAnimatorCompatKK$ParseException      (com.rubenroy.minimaltodo.eval_oz)
===============================================================================
  No methods

android.support.v4.view.ViewPropertyAnimatorCompatLollipop       (com.rubenroy.minimaltodo.eval_al)
===============================================================================
  eval_l   public static zBy(android.view.View,float)
  eval_u   public static translationZBy(android.view.View,float)
  l        public static z(android.view.View,float)
  n        public static translationZ(android.view.View,float)

android.support.v4.view.ViewPropertyAnimatorCompatLollipop$IOException   (com.rubenroy.minimaltodo.eval_di)
===============================================================================
  No methods

android.support.v4.view.ViewPropertyAnimatorListener     (com.rubenroy.minimaltodo.eval_zn)
===============================================================================
  b    public abstract onAnimationCancel(android.view.View)
  d    public abstract onAnimationStart(android.view.View)
  v    public abstract onAnimationEnd(android.view.View)

android.support.v4.view.ViewPropertyAnimatorListener$ParseException      (com.rubenroy.minimaltodo.eval__x)
===============================================================================
  No methods

android.support.v4.view.ViewPropertyAnimatorListenerAdapter      (com.rubenroy.minimaltodo.eval_dd)
===============================================================================
  b    public onAnimationCancel(android.view.View)
  d    public onAnimationStart(android.view.View)
  v    public onAnimationEnd(android.view.View)

android.support.v4.view.ViewPropertyAnimatorListenerAdapter$Exception    (com.rubenroy.minimaltodo.eval_yz)
===============================================================================
  No methods

android.support.v4.view.ViewPropertyAnimatorUpdateListener       (com.rubenroy.minimaltodo.eval_sw)
===============================================================================
  p    public abstract onAnimationUpdate(android.view.View)

android.support.v4.view.ViewPropertyAnimatorUpdateListener$IOException   (com.rubenroy.minimaltodo.eval_fv)
===============================================================================
  No methods

android.support.v4.view.WindowCompat     (com.rubenroy.minimaltodo.eval_oe)
===============================================================================
  No methods

android.support.v4.view.WindowCompat$ArrayOutOfBoundsException   (com.rubenroy.minimaltodo.eval_pc)
===============================================================================
  No methods

android.support.v4.view.WindowInsetsCompat       (com.rubenroy.minimaltodo.eval_va)
===============================================================================
  b        public getStableInsetBottom()
  eval_g   public hasStableInsets()
  eval_m   public getSystemWindowInsetLeft()
  eval_p   public getStableInsetLeft()
  g        public hasInsets()
  h        public consumeStableInsets()
  h        public replaceSystemWindowInsets(android.graphics.Rect)
  j        public getStableInsetTop()
  l        public getSystemWindowInsetBottom()
  n        public replaceSystemWindowInsets(int,int,int,int)
  o        public getStableInsetRight()
  p        public getSystemWindowInsetTop()
  t        public getSystemWindowInsetRight()
  u        public isRound()
  v        public hasSystemWindowInsets()
  w        public isConsumed()
  z        public consumeSystemWindowInsets()

android.support.v4.view.WindowInsetsCompat$ParseException        (com.rubenroy.minimaltodo.eval_lq)
===============================================================================
  No methods

android.support.v4.view.WindowInsetsCompatApi21  (com.rubenroy.minimaltodo.eval_kb)
===============================================================================
  b        public getStableInsetBottom()
  eval_g   public hasStableInsets()
  eval_m   public getSystemWindowInsetLeft()
  eval_p   public getStableInsetLeft()
  g        public hasInsets()
  h        public consumeStableInsets()
  h        public replaceSystemWindowInsets(android.graphics.Rect)
  j        public getStableInsetTop()
  l        public getSystemWindowInsetBottom()
  n        unwrap()
  n        public replaceSystemWindowInsets(int,int,int,int)
  o        public getStableInsetRight()
  p        public getSystemWindowInsetTop()
  t        public getSystemWindowInsetRight()
  u        public isRound()
  v        public hasSystemWindowInsets()
  w        public isConsumed()
  z        public consumeSystemWindowInsets()

android.support.v4.view.WindowInsetsCompatApi21$ParseException   (com.rubenroy.minimaltodo.eval_ym)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityEventCompat   (com.rubenroy.minimaltodo.eval_ix)
===============================================================================
  d    public static getContentChangeTypes(android.view.accessibility.AccessibilityEvent)
  f    public static getRecordCount(android.view.accessibility.AccessibilityEvent)
  j    public static setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
  r    public static appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat)
  u    public static getRecord(android.view.accessibility.AccessibilityEvent,int)
  v    public static asRecord(android.view.accessibility.AccessibilityEvent)

android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl (com.rubenroy.minimaltodo.eval_ix$a)
===============================================================================
  e    public getRecordCount(android.view.accessibility.AccessibilityEvent)
  g    public appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object)
  k    public getRecord(android.view.accessibility.AccessibilityEvent,int)

android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventKitKatImpl      (com.rubenroy.minimaltodo.eval_ix$g)
===============================================================================
  b    public getContentChangeTypes(android.view.accessibility.AccessibilityEvent)
  v    public setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)

android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl        (com.rubenroy.minimaltodo.eval_ix$o)
===============================================================================
  b    public getContentChangeTypes(android.view.accessibility.AccessibilityEvent)
  e    public getRecordCount(android.view.accessibility.AccessibilityEvent)
  g    public appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object)
  k    public getRecord(android.view.accessibility.AccessibilityEvent,int)
  v    public setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)

android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl     (com.rubenroy.minimaltodo.eval_ix$b)
===============================================================================
  b    public abstract getContentChangeTypes(android.view.accessibility.AccessibilityEvent)
  e    public abstract getRecordCount(android.view.accessibility.AccessibilityEvent)
  g    public abstract appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object)
  k    public abstract getRecord(android.view.accessibility.AccessibilityEvent,int)
  v    public abstract setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)

android.support.v4.view.accessibility.AccessibilityEventCompat$ParseException    (com.rubenroy.minimaltodo.eval_o8)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityEventCompatIcs        (com.rubenroy.minimaltodo.eval_j7)
===============================================================================
  d    public static appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object)
  g    public static setScrollable(android.view.accessibility.AccessibilityEvent,boolean)
  x    public static getRecordCount(android.view.accessibility.AccessibilityEvent)
  y    public static getRecord(android.view.accessibility.AccessibilityEvent,int)

android.support.v4.view.accessibility.AccessibilityEventCompatIcs$NullPointerException   (com.rubenroy.minimaltodo.eval_p9)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityEventCompatKitKat     (com.rubenroy.minimaltodo.eval_io)
===============================================================================
  k    public static setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
  z    public static getContentChangeTypes(android.view.accessibility.AccessibilityEvent)

android.support.v4.view.accessibility.AccessibilityEventCompatKitKat$IOException (com.rubenroy.minimaltodo.eval_f9)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityManagerCompat (com.rubenroy.minimaltodo.eval_f4)
===============================================================================
  c    public static getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager)
  e    public static isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager)
  f    public static removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)
  u    static access$000()
  w    public static addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)
  w    public static getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int)

android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl     (com.rubenroy.minimaltodo.eval_f4$k)
===============================================================================
  b    public getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int)
  g    public newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)
  g    public addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)
  n    public removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)
  x    public getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager)
  y    public isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager)

android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1   (com.rubenroy.minimaltodo.eval_f4$k$1)
===============================================================================
  t    public onAccessibilityStateChanged(boolean)

android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$ParseException      (com.rubenroy.minimaltodo.eval_sp)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl    (com.rubenroy.minimaltodo.eval_f4$q)
===============================================================================
  b    public getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int)
  g    public newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)
  g    public addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)
  n    public removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)
  x    public getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager)
  y    public isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager)

android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl (com.rubenroy.minimaltodo.eval_f4$s)
===============================================================================
  b    public abstract getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int)
  g    public abstract newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)
  g    public abstract addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)
  n    public abstract removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)
  x    public abstract getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager)
  y    public abstract isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager)

android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat  (com.rubenroy.minimaltodo.eval_f4$n)
===============================================================================
  a    public abstract onAccessibilityStateChanged(boolean)

android.support.v4.view.accessibility.AccessibilityManagerCompat$Exception       (com.rubenroy.minimaltodo.eval_gc)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityManagerCompatIcs      (com.rubenroy.minimaltodo.eval_dv)
===============================================================================
  e    public static getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager)
  h    public static newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge)
  p    public static addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object)
  q    public static getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int)
  s    public static isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager)
  s    public static removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object)

android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1    (com.rubenroy.minimaltodo.eval_dv$1)
===============================================================================
  onAccessibilityStateChanged  public onAccessibilityStateChanged(boolean)

android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge       (com.rubenroy.minimaltodo.eval_dv$z)
===============================================================================
  t    public abstract onAccessibilityStateChanged(boolean)

android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$ParseException       (com.rubenroy.minimaltodo.eval_ft)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityNodeInfoCompat        (com.rubenroy.minimaltodo.eval_dr)
===============================================================================
  a        public isVisibleToUser()
  a        public setChecked(boolean)
  a        public addAction(int)
  a        public findAccessibilityNodeInfosByViewId(java.lang.String)
  b        public isFocused()
  b        public setSource(android.view.View)
  b        public setParent(android.view.View,int)
  b        public setCheckable(boolean)
  b        public setMovementGranularities(int)
  c        public getMovementGranularities()
  c        public setEditable(boolean)
  d        public isCheckable()
  d        public addAction(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
  d        public setParent(android.view.View)
  d        public setPackageName(java.lang.CharSequence)
  e        public isEnabled()
  e        public removeChild(android.view.View)
  eval__   public getLabelFor()
  eval__   public setDismissable(boolean)
  eval_a   public isContentInvalid()
  eval_a   public setTraversalBefore(android.view.View)
  eval_a   public setInputType(int)
  eval_b   public refresh()
  eval_c   public getWindow()
  eval_c   public setEnabled(boolean)
  eval_d   public getError()
  eval_d   public performAction(int)
  eval_dy  static access$000()
  eval_e   public isLongClickable()
  eval_f   public recycle()
  eval_g   public getRangeInfo()
  eval_g   public setText(java.lang.CharSequence)
  eval_h   public isEditable()
  eval_i   public getTraversalBefore()
  eval_j   public getLiveRegion()
  eval_j   public setMaxTextLength(int)
  eval_k   public getCollectionInfo()
  eval_l   public getLabeledBy()
  eval_m   public getMaxTextLength()
  eval_n   public canOpenPopup()
  eval_o   public getClassName()
  eval_p   public isMultiLine()
  eval_q   public isPassword()
  eval_q   public addChild(android.view.View,int)
  eval_q   public setClassName(java.lang.CharSequence)
  eval_r   public getTraversalAfter()
  eval_s   public getCollectionItemInfo()
  eval_t   public getText()
  eval_u   public getViewIdResourceName()
  eval_v   public isDismissable()
  eval_w   public getTextSelectionEnd()
  eval_w   public setScrollable(boolean)
  eval_x   public getExtras()
  eval_y   public isAccessibilityFocused()
  eval_z   public getActionList()
  eval_z   public setClickable(boolean)
  f        public getPackageName()
  f        public removeChild(android.view.View,int)
  f        public findFocus(int)
  f        public performAction(int,android.os.Bundle)
  f        public setTextSelection(int,int)
  g        public setTraversalBefore(android.view.View,int)
  h        public getChildCount()
  h        public setLabeledBy(android.view.View)
  i        public getActions()
  i        public static obtain(android.view.View)
  i        static wrapNonNullInstance(java.lang.Object)
  j        public getParent()
  j        public setSelected(boolean)
  k        public isChecked()
  k        public setLabeledBy(android.view.View,int)
  k        private static getActionSymbolicName(int)
  k        public findAccessibilityNodeInfosByText(java.lang.String)
  l        public setCanOpenPopup(boolean)
  l        public setError(java.lang.CharSequence)
  m        public getWindowId()
  m        public setFocused(boolean)
  m        public setCollectionInfo(java.lang.Object)
  n        public getInfo()
  n        public setSource(android.view.View,int)
  n        public setPassword(boolean)
  o        public getContentDescription()
  o        public setTraversalAfter(android.view.View,int)
  o        public setCollectionItemInfo(java.lang.Object)
  p        public isSelected()
  q        public setRangeInfo(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat)
  r        public isClickable()
  r        public addChild(android.view.View)
  r        public setContentInvalid(boolean)
  s        public isScrollable()
  s        public setBoundsInParent(android.graphics.Rect)
  s        public setAccessibilityFocused(boolean)
  t        public isFocusable()
  t        public setTraversalAfter(android.view.View)
  u        public getBoundsInParent(android.graphics.Rect)
  u        public static obtain(android.view.View,int)
  v        public static obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  v        public setLabelFor(android.view.View)
  v        public setMultiLine(boolean)
  v        public focusSearch(int)
  w        public getInputType()
  w        public getBoundsInScreen(android.graphics.Rect)
  w        public removeAction(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
  w        public setFocusable(boolean)
  w        public setContentDescription(java.lang.CharSequence)
  x        public static obtain()
  x        public setBoundsInScreen(android.graphics.Rect)
  x        public setVisibleToUser(boolean)
  x        public getChild(int)
  y        public getTextSelectionStart()
  y        public setLongClickable(boolean)
  y        public setLiveRegion(int)
  z        public setLabelFor(android.view.View,int)
  z        public setViewIdResourceName(java.lang.String)
  equals   public equals(java.lang.Object)
  hashCode public hashCode()
  toString public toString()

android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$1      (com.rubenroy.minimaltodo.eval_dr$1)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat      (com.rubenroy.minimaltodo.eval_dr$r)
===============================================================================
  b    static access$100(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
  h    public getId()
  y    public getLabel()

android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi21Impl (com.rubenroy.minimaltodo.eval_dr$g)
===============================================================================
  a        public newAccessibilityAction(int,java.lang.CharSequence)
  a        public getAccessibilityActionId(java.lang.Object)
  a        public addAction(java.lang.Object,java.lang.Object)
  b        public getWindow(java.lang.Object)
  c        public getActionList(java.lang.Object)
  e        public removeChild(java.lang.Object,android.view.View)
  eval_u   public getAccessibilityActionLabel(java.lang.Object)
  l        public setError(java.lang.Object,java.lang.CharSequence)
  m        public getError(java.lang.Object)
  m        public setMaxTextLength(java.lang.Object,int)
  q        public getMaxTextLength(java.lang.Object)
  q        public removeAction(java.lang.Object,java.lang.Object)
  t        public obtainCollectionItemInfo(int,int,int,int,boolean,boolean)
  w        public obtainCollectionInfo(int,int,boolean,int)
  x        public removeChild(java.lang.Object,android.view.View,int)
  y        public isCollectionItemSelected(java.lang.Object)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi22Impl (com.rubenroy.minimaltodo.eval_dr$_)
===============================================================================
  c        public setTraversalAfter(java.lang.Object,android.view.View)
  eval_o   public getTraversalAfter(java.lang.Object)
  u        public setTraversalBefore(java.lang.Object,android.view.View,int)
  w        public getTraversalBefore(java.lang.Object)
  w        public setTraversalBefore(java.lang.Object,android.view.View)
  y        public setTraversalAfter(java.lang.Object,android.view.View,int)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl   (com.rubenroy.minimaltodo.eval_dr$eval_a)
===============================================================================
  b        public setPassword(java.lang.Object,boolean)
  c        public obtain()
  c        public setBoundsInScreen(java.lang.Object,android.graphics.Rect)
  c        public findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String)
  d        public isLongClickable(java.lang.Object)
  e        public obtain(java.lang.Object)
  e        public setText(java.lang.Object,java.lang.CharSequence)
  eval__   public getClassName(java.lang.Object)
  eval_c   public isChecked(java.lang.Object)
  eval_e   public isFocusable(java.lang.Object)
  eval_e   public setChecked(java.lang.Object,boolean)
  eval_k   public setContentDescription(java.lang.Object,java.lang.CharSequence)
  eval_l   public setScrollable(java.lang.Object,boolean)
  eval_n   public recycle(java.lang.Object)
  eval_q   public isPassword(java.lang.Object)
  eval_r   public getWindowId(java.lang.Object)
  eval_s   public isScrollable(java.lang.Object)
  eval_t   public isFocused(java.lang.Object)
  eval_z   public isEnabled(java.lang.Object)
  f        public isCheckable(java.lang.Object)
  f        public setFocused(java.lang.Object,boolean)
  g        public getContentDescription(java.lang.Object)
  g        public getBoundsInScreen(java.lang.Object,android.graphics.Rect)
  i        public getChildCount(java.lang.Object)
  i        public setSelected(java.lang.Object,boolean)
  m        public obtain(android.view.View)
  m        public setEnabled(java.lang.Object,boolean)
  m        public setClassName(java.lang.Object,java.lang.CharSequence)
  n        public getPackageName(java.lang.Object)
  n        public setCheckable(java.lang.Object,boolean)
  o        public getText(java.lang.Object)
  o        public getBoundsInParent(java.lang.Object,android.graphics.Rect)
  o        public setSource(java.lang.Object,android.view.View)
  p        public setPackageName(java.lang.Object,java.lang.CharSequence)
  q        public setBoundsInParent(java.lang.Object,android.graphics.Rect)
  q        public getChild(java.lang.Object,int)
  r        public setParent(java.lang.Object,android.view.View)
  s        public isSelected(java.lang.Object)
  t        public isClickable(java.lang.Object)
  u        public addChild(java.lang.Object,android.view.View)
  u        public setClickable(java.lang.Object,boolean)
  v        public performAction(java.lang.Object,int)
  w        public setLongClickable(java.lang.Object,boolean)
  x        public getActions(java.lang.Object)
  x        public setFocusable(java.lang.Object,boolean)
  y        public addAction(java.lang.Object,int)
  z        public getParent(java.lang.Object)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl      (com.rubenroy.minimaltodo.eval_dr$j)
===============================================================================
  a        public abstract newAccessibilityAction(int,java.lang.CharSequence)
  a        public abstract getAccessibilityActionId(java.lang.Object)
  a        public abstract addAction(java.lang.Object,java.lang.Object)
  a        public abstract setViewIdResourceName(java.lang.Object,java.lang.String)
  b        public abstract getWindow(java.lang.Object)
  b        public abstract setLabeledBy(java.lang.Object,android.view.View)
  b        public abstract setPassword(java.lang.Object,boolean)
  c        public abstract obtain()
  c        public abstract getActionList(java.lang.Object)
  c        public abstract setBoundsInScreen(java.lang.Object,android.graphics.Rect)
  c        public abstract setTraversalAfter(java.lang.Object,android.view.View)
  c        public abstract findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String)
  d        public abstract isLongClickable(java.lang.Object)
  d        public abstract setSource(java.lang.Object,android.view.View,int)
  e        public abstract obtain(java.lang.Object)
  e        public abstract removeChild(java.lang.Object,android.view.View)
  e        public abstract setText(java.lang.Object,java.lang.CharSequence)
  eval__   public abstract getClassName(java.lang.Object)
  eval_a   public abstract isContentInvalid(java.lang.Object)
  eval_b   public abstract getLabelFor(java.lang.Object)
  eval_c   public abstract isChecked(java.lang.Object)
  eval_d   public abstract isVisibleToUser(java.lang.Object)
  eval_e   public abstract isFocusable(java.lang.Object)
  eval_e   public abstract setChecked(java.lang.Object,boolean)
  eval_f   public abstract getCollectionItemInfo(java.lang.Object)
  eval_g   public abstract getMovementGranularities(java.lang.Object)
  eval_gw  public abstract isDismissable(java.lang.Object)
  eval_h   public abstract getRangeInfo(java.lang.Object)
  eval_h   public abstract setContentInvalid(java.lang.Object,boolean)
  eval_h   public abstract setMovementGranularities(java.lang.Object,int)
  eval_i   public abstract getLiveRegion(java.lang.Object)
  eval_i   public abstract setAccessibilityFocused(java.lang.Object,boolean)
  eval_j   public abstract getCollectionItemRowSpan(java.lang.Object)
  eval_jr  public abstract isEditable(java.lang.Object)
  eval_k   public abstract getCollectionItemColumnSpan(java.lang.Object)
  eval_k   public abstract setContentDescription(java.lang.Object,java.lang.CharSequence)
  eval_l   public abstract isCollectionItemHeading(java.lang.Object)
  eval_l   public abstract setScrollable(java.lang.Object,boolean)
  eval_m   public abstract getCollectionInfo(java.lang.Object)
  eval_m0  public abstract isMultiLine(java.lang.Object)
  eval_n   public abstract recycle(java.lang.Object)
  eval_o   public abstract getTraversalAfter(java.lang.Object)
  eval_p   public abstract canOpenPopup(java.lang.Object)
  eval_q   public abstract isPassword(java.lang.Object)
  eval_qi  public abstract getTextSelectionEnd(java.lang.Object)
  eval_r   public abstract getWindowId(java.lang.Object)
  eval_r   public abstract setLabelFor(java.lang.Object,android.view.View)
  eval_r   public abstract findFocus(java.lang.Object,int)
  eval_ry  public abstract getTextSelectionStart(java.lang.Object)
  eval_s   public abstract isScrollable(java.lang.Object)
  eval_t   public abstract isFocused(java.lang.Object)
  eval_u   public abstract getAccessibilityActionLabel(java.lang.Object)
  eval_v   public abstract getLabeledBy(java.lang.Object)
  eval_v   public abstract setLabeledBy(java.lang.Object,android.view.View,int)
  eval_v   public abstract setVisibleToUser(java.lang.Object,boolean)
  eval_w   public abstract getCollectionInfoRowCount(java.lang.Object)
  eval_x   public abstract getCollectionInfoColumnCount(java.lang.Object)
  eval_x   public abstract setEditable(java.lang.Object,boolean)
  eval_y   public abstract getCollectionItemColumnIndex(java.lang.Object)
  eval_y   public abstract setMultiLine(java.lang.Object,boolean)
  eval_z   public abstract isEnabled(java.lang.Object)
  f        public abstract isCheckable(java.lang.Object)
  f        public abstract setFocused(java.lang.Object,boolean)
  g        public abstract getContentDescription(java.lang.Object)
  g        public abstract getBoundsInScreen(java.lang.Object,android.graphics.Rect)
  g        public abstract setDismissable(java.lang.Object,boolean)
  g        public abstract focusSearch(java.lang.Object,int)
  h        public abstract getCollectionItemRowIndex(java.lang.Object)
  h        public abstract setLabelFor(java.lang.Object,android.view.View,int)
  i        public abstract getChildCount(java.lang.Object)
  i        public abstract addChild(java.lang.Object,android.view.View,int)
  i        public abstract setSelected(java.lang.Object,boolean)
  j        public abstract getExtras(java.lang.Object)
  l        public abstract isCollectionInfoHierarchical(java.lang.Object)
  l        public abstract setError(java.lang.Object,java.lang.CharSequence)
  m        public abstract obtain(android.view.View)
  m        public abstract getError(java.lang.Object)
  m        public abstract setEnabled(java.lang.Object,boolean)
  m        public abstract setMaxTextLength(java.lang.Object,int)
  m        public abstract setClassName(java.lang.Object,java.lang.CharSequence)
  n        public abstract obtain(android.view.View,int)
  n        public abstract getPackageName(java.lang.Object)
  n        public abstract setCheckable(java.lang.Object,boolean)
  n        public abstract setTextSelection(java.lang.Object,int,int)
  o        public abstract getText(java.lang.Object)
  o        public abstract getBoundsInParent(java.lang.Object,android.graphics.Rect)
  o        public abstract setSource(java.lang.Object,android.view.View)
  o        public abstract setLiveRegion(java.lang.Object,int)
  o        public abstract performAction(java.lang.Object,int,android.os.Bundle)
  o        public abstract setCollectionItemInfo(java.lang.Object,java.lang.Object)
  p        public abstract getInputType(java.lang.Object)
  p        public abstract setInputType(java.lang.Object,int)
  p        public abstract setPackageName(java.lang.Object,java.lang.CharSequence)
  p        public abstract findAccessibilityNodeInfosByViewId(java.lang.Object,java.lang.String)
  q        public abstract getMaxTextLength(java.lang.Object)
  q        public abstract setBoundsInParent(java.lang.Object,android.graphics.Rect)
  q        public abstract getChild(java.lang.Object,int)
  q        public abstract removeAction(java.lang.Object,java.lang.Object)
  r        public abstract refresh(java.lang.Object)
  r        public abstract setParent(java.lang.Object,android.view.View)
  r        public abstract setCanOpenPopup(java.lang.Object,boolean)
  s        public abstract isSelected(java.lang.Object)
  t        public abstract obtainCollectionItemInfo(int,int,int,int,boolean,boolean)
  t        public abstract isClickable(java.lang.Object)
  u        public abstract isAccessibilityFocused(java.lang.Object)
  u        public abstract addChild(java.lang.Object,android.view.View)
  u        public abstract setTraversalBefore(java.lang.Object,android.view.View,int)
  u        public abstract setClickable(java.lang.Object,boolean)
  u        public abstract setRangeInfo(java.lang.Object,java.lang.Object)
  v        public abstract getViewIdResourceName(java.lang.Object)
  v        public abstract performAction(java.lang.Object,int)
  w        public abstract obtainCollectionInfo(int,int,boolean,int)
  w        public abstract getTraversalBefore(java.lang.Object)
  w        public abstract setTraversalBefore(java.lang.Object,android.view.View)
  w        public abstract setParent(java.lang.Object,android.view.View,int)
  w        public abstract setLongClickable(java.lang.Object,boolean)
  w        public abstract setCollectionInfo(java.lang.Object,java.lang.Object)
  x        public abstract getActions(java.lang.Object)
  x        public abstract removeChild(java.lang.Object,android.view.View,int)
  x        public abstract setFocusable(java.lang.Object,boolean)
  y        public abstract isCollectionItemSelected(java.lang.Object)
  y        public abstract setTraversalAfter(java.lang.Object,android.view.View,int)
  y        public abstract addAction(java.lang.Object,int)
  z        public abstract getParent(java.lang.Object)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl     (com.rubenroy.minimaltodo.eval_dr$e)
===============================================================================
  d        public setSource(java.lang.Object,android.view.View,int)
  eval_d   public isVisibleToUser(java.lang.Object)
  eval_g   public getMovementGranularities(java.lang.Object)
  eval_h   public setMovementGranularities(java.lang.Object,int)
  eval_i   public setAccessibilityFocused(java.lang.Object,boolean)
  eval_r   public findFocus(java.lang.Object,int)
  eval_v   public setVisibleToUser(java.lang.Object,boolean)
  g        public focusSearch(java.lang.Object,int)
  i        public addChild(java.lang.Object,android.view.View,int)
  n        public obtain(android.view.View,int)
  o        public performAction(java.lang.Object,int,android.os.Bundle)
  u        public isAccessibilityFocused(java.lang.Object)
  w        public setParent(java.lang.Object,android.view.View,int)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr1Impl  (com.rubenroy.minimaltodo.eval_dr$w)
===============================================================================
  b        public setLabeledBy(java.lang.Object,android.view.View)
  eval_b   public getLabelFor(java.lang.Object)
  eval_r   public setLabelFor(java.lang.Object,android.view.View)
  eval_v   public getLabeledBy(java.lang.Object)
  eval_v   public setLabeledBy(java.lang.Object,android.view.View,int)
  h        public setLabelFor(java.lang.Object,android.view.View,int)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl  (com.rubenroy.minimaltodo.eval_dr$k)
===============================================================================
  a        public setViewIdResourceName(java.lang.Object,java.lang.String)
  eval_jr  public isEditable(java.lang.Object)
  eval_qi  public getTextSelectionEnd(java.lang.Object)
  eval_ry  public getTextSelectionStart(java.lang.Object)
  eval_x   public setEditable(java.lang.Object,boolean)
  n        public setTextSelection(java.lang.Object,int,int)
  p        public findAccessibilityNodeInfosByViewId(java.lang.Object,java.lang.String)
  r        public refresh(java.lang.Object)
  v        public getViewIdResourceName(java.lang.Object)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl        (com.rubenroy.minimaltodo.eval_dr$l)
===============================================================================
  eval_a   public isContentInvalid(java.lang.Object)
  eval_f   public getCollectionItemInfo(java.lang.Object)
  eval_gw  public isDismissable(java.lang.Object)
  eval_h   public getRangeInfo(java.lang.Object)
  eval_h   public setContentInvalid(java.lang.Object,boolean)
  eval_i   public getLiveRegion(java.lang.Object)
  eval_j   public getCollectionItemRowSpan(java.lang.Object)
  eval_k   public getCollectionItemColumnSpan(java.lang.Object)
  eval_l   public isCollectionItemHeading(java.lang.Object)
  eval_m   public getCollectionInfo(java.lang.Object)
  eval_m0  public isMultiLine(java.lang.Object)
  eval_p   public canOpenPopup(java.lang.Object)
  eval_w   public getCollectionInfoRowCount(java.lang.Object)
  eval_x   public getCollectionInfoColumnCount(java.lang.Object)
  eval_y   public getCollectionItemColumnIndex(java.lang.Object)
  eval_y   public setMultiLine(java.lang.Object,boolean)
  g        public setDismissable(java.lang.Object,boolean)
  h        public getCollectionItemRowIndex(java.lang.Object)
  j        public getExtras(java.lang.Object)
  l        public isCollectionInfoHierarchical(java.lang.Object)
  o        public setLiveRegion(java.lang.Object,int)
  o        public setCollectionItemInfo(java.lang.Object,java.lang.Object)
  p        public getInputType(java.lang.Object)
  p        public setInputType(java.lang.Object,int)
  r        public setCanOpenPopup(java.lang.Object,boolean)
  t        public obtainCollectionItemInfo(int,int,int,int,boolean,boolean)
  u        public setRangeInfo(java.lang.Object,java.lang.Object)
  w        public obtainCollectionInfo(int,int,boolean,int)
  w        public setCollectionInfo(java.lang.Object,java.lang.Object)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl  (com.rubenroy.minimaltodo.eval_dr$h)
===============================================================================
  a        public newAccessibilityAction(int,java.lang.CharSequence)
  a        public getAccessibilityActionId(java.lang.Object)
  a        public addAction(java.lang.Object,java.lang.Object)
  a        public setViewIdResourceName(java.lang.Object,java.lang.String)
  b        public getWindow(java.lang.Object)
  b        public setLabeledBy(java.lang.Object,android.view.View)
  b        public setPassword(java.lang.Object,boolean)
  c        public obtain()
  c        public getActionList(java.lang.Object)
  c        public setBoundsInScreen(java.lang.Object,android.graphics.Rect)
  c        public setTraversalAfter(java.lang.Object,android.view.View)
  c        public findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String)
  d        public isLongClickable(java.lang.Object)
  d        public setSource(java.lang.Object,android.view.View,int)
  e        public obtain(java.lang.Object)
  e        public removeChild(java.lang.Object,android.view.View)
  e        public setText(java.lang.Object,java.lang.CharSequence)
  eval__   public getClassName(java.lang.Object)
  eval_a   public isContentInvalid(java.lang.Object)
  eval_b   public getLabelFor(java.lang.Object)
  eval_c   public isChecked(java.lang.Object)
  eval_d   public isVisibleToUser(java.lang.Object)
  eval_e   public isFocusable(java.lang.Object)
  eval_e   public setChecked(java.lang.Object,boolean)
  eval_f   public getCollectionItemInfo(java.lang.Object)
  eval_g   public getMovementGranularities(java.lang.Object)
  eval_gw  public isDismissable(java.lang.Object)
  eval_h   public getRangeInfo(java.lang.Object)
  eval_h   public setContentInvalid(java.lang.Object,boolean)
  eval_h   public setMovementGranularities(java.lang.Object,int)
  eval_i   public getLiveRegion(java.lang.Object)
  eval_i   public setAccessibilityFocused(java.lang.Object,boolean)
  eval_j   public getCollectionItemRowSpan(java.lang.Object)
  eval_jr  public isEditable(java.lang.Object)
  eval_k   public getCollectionItemColumnSpan(java.lang.Object)
  eval_k   public setContentDescription(java.lang.Object,java.lang.CharSequence)
  eval_l   public isCollectionItemHeading(java.lang.Object)
  eval_l   public setScrollable(java.lang.Object,boolean)
  eval_m   public getCollectionInfo(java.lang.Object)
  eval_m0  public isMultiLine(java.lang.Object)
  eval_n   public recycle(java.lang.Object)
  eval_o   public getTraversalAfter(java.lang.Object)
  eval_p   public canOpenPopup(java.lang.Object)
  eval_q   public isPassword(java.lang.Object)
  eval_qi  public getTextSelectionEnd(java.lang.Object)
  eval_r   public getWindowId(java.lang.Object)
  eval_r   public setLabelFor(java.lang.Object,android.view.View)
  eval_r   public findFocus(java.lang.Object,int)
  eval_ry  public getTextSelectionStart(java.lang.Object)
  eval_s   public isScrollable(java.lang.Object)
  eval_t   public isFocused(java.lang.Object)
  eval_u   public getAccessibilityActionLabel(java.lang.Object)
  eval_v   public getLabeledBy(java.lang.Object)
  eval_v   public setLabeledBy(java.lang.Object,android.view.View,int)
  eval_v   public setVisibleToUser(java.lang.Object,boolean)
  eval_w   public getCollectionInfoRowCount(java.lang.Object)
  eval_x   public getCollectionInfoColumnCount(java.lang.Object)
  eval_x   public setEditable(java.lang.Object,boolean)
  eval_y   public getCollectionItemColumnIndex(java.lang.Object)
  eval_y   public setMultiLine(java.lang.Object,boolean)
  eval_z   public isEnabled(java.lang.Object)
  f        public isCheckable(java.lang.Object)
  f        public setFocused(java.lang.Object,boolean)
  g        public getContentDescription(java.lang.Object)
  g        public getBoundsInScreen(java.lang.Object,android.graphics.Rect)
  g        public setDismissable(java.lang.Object,boolean)
  g        public focusSearch(java.lang.Object,int)
  h        public getCollectionItemRowIndex(java.lang.Object)
  h        public setLabelFor(java.lang.Object,android.view.View,int)
  i        public getChildCount(java.lang.Object)
  i        public addChild(java.lang.Object,android.view.View,int)
  i        public setSelected(java.lang.Object,boolean)
  j        public getExtras(java.lang.Object)
  l        public isCollectionInfoHierarchical(java.lang.Object)
  l        public setError(java.lang.Object,java.lang.CharSequence)
  m        public obtain(android.view.View)
  m        public getError(java.lang.Object)
  m        public setEnabled(java.lang.Object,boolean)
  m        public setMaxTextLength(java.lang.Object,int)
  m        public setClassName(java.lang.Object,java.lang.CharSequence)
  n        public obtain(android.view.View,int)
  n        public getPackageName(java.lang.Object)
  n        public setCheckable(java.lang.Object,boolean)
  n        public setTextSelection(java.lang.Object,int,int)
  o        public getText(java.lang.Object)
  o        public getBoundsInParent(java.lang.Object,android.graphics.Rect)
  o        public setSource(java.lang.Object,android.view.View)
  o        public setLiveRegion(java.lang.Object,int)
  o        public performAction(java.lang.Object,int,android.os.Bundle)
  o        public setCollectionItemInfo(java.lang.Object,java.lang.Object)
  p        public getInputType(java.lang.Object)
  p        public setInputType(java.lang.Object,int)
  p        public setPackageName(java.lang.Object,java.lang.CharSequence)
  p        public findAccessibilityNodeInfosByViewId(java.lang.Object,java.lang.String)
  q        public getMaxTextLength(java.lang.Object)
  q        public setBoundsInParent(java.lang.Object,android.graphics.Rect)
  q        public getChild(java.lang.Object,int)
  q        public removeAction(java.lang.Object,java.lang.Object)
  r        public refresh(java.lang.Object)
  r        public setParent(java.lang.Object,android.view.View)
  r        public setCanOpenPopup(java.lang.Object,boolean)
  s        public isSelected(java.lang.Object)
  t        public obtainCollectionItemInfo(int,int,int,int,boolean,boolean)
  t        public isClickable(java.lang.Object)
  u        public isAccessibilityFocused(java.lang.Object)
  u        public addChild(java.lang.Object,android.view.View)
  u        public setTraversalBefore(java.lang.Object,android.view.View,int)
  u        public setClickable(java.lang.Object,boolean)
  u        public setRangeInfo(java.lang.Object,java.lang.Object)
  v        public getViewIdResourceName(java.lang.Object)
  v        public performAction(java.lang.Object,int)
  w        public obtainCollectionInfo(int,int,boolean,int)
  w        public getTraversalBefore(java.lang.Object)
  w        public setTraversalBefore(java.lang.Object,android.view.View)
  w        public setParent(java.lang.Object,android.view.View,int)
  w        public setLongClickable(java.lang.Object,boolean)
  w        public setCollectionInfo(java.lang.Object,java.lang.Object)
  x        public getActions(java.lang.Object)
  x        public removeChild(java.lang.Object,android.view.View,int)
  x        public setFocusable(java.lang.Object,boolean)
  y        public isCollectionItemSelected(java.lang.Object)
  y        public setTraversalAfter(java.lang.Object,android.view.View,int)
  y        public addAction(java.lang.Object,int)
  z        public getParent(java.lang.Object)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat   (com.rubenroy.minimaltodo.eval_dr$eval_i)
===============================================================================
  b    public isHierarchical()
  c    public getColumnCount()
  j    public getRowCount()
  m    public static obtain(int,int,boolean,int)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat       (com.rubenroy.minimaltodo.eval_dr$a)
===============================================================================
  a    public isSelected()
  f    public static obtain(int,int,int,int,boolean,boolean)
  o    public getColumnSpan()
  o    static access$300(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat)
  p    public getColumnIndex()
  s    public isHeading()
  w    public getRowSpan()
  x    public getRowIndex()

android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$NullPointerException   (com.rubenroy.minimaltodo.eval_e5)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat        (com.rubenroy.minimaltodo.eval_dr$eval_j)
===============================================================================
  a    public getMax()
  h    public getCurrent()
  m    public getMin()
  m    static access$600(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat)
  z    public getType()

android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21   (com.rubenroy.minimaltodo.eval_l6)
===============================================================================
  b        static getAccessibilityActionId(java.lang.Object)
  d        static getActionList(java.lang.Object)
  d        public static setError(java.lang.Object,java.lang.CharSequence)
  e        public static obtainCollectionItemInfo(int,int,int,int,boolean,boolean)
  eval_j   public static getWindow(java.lang.Object)
  f        static addAction(java.lang.Object,java.lang.Object)
  n        public static removeChild(java.lang.Object,android.view.View)
  n        public static removeChild(java.lang.Object,android.view.View,int)
  p        static newAccessibilityAction(int,java.lang.CharSequence)
  p        public static setMaxTextLength(java.lang.Object,int)
  s        public static getMaxTextLength(java.lang.Object)
  t        static getAccessibilityActionLabel(java.lang.Object)
  v        public static obtainCollectionInfo(int,int,boolean,int)
  w        public static getError(java.lang.Object)
  z        public static removeAction(java.lang.Object,java.lang.Object)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21$CollectionItemInfo        (com.rubenroy.minimaltodo.eval_l6$a)
===============================================================================
  d    public static isSelected(java.lang.Object)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21$NullPointerException      (com.rubenroy.minimaltodo.eval_ii)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi22   (com.rubenroy.minimaltodo.eval__d)
===============================================================================
  c    public static setTraversalAfter(java.lang.Object,android.view.View)
  e    public static getTraversalAfter(java.lang.Object)
  e    public static setTraversalAfter(java.lang.Object,android.view.View,int)
  g    public static getTraversalBefore(java.lang.Object)
  k    public static setTraversalBefore(java.lang.Object,android.view.View,int)
  s    public static setTraversalBefore(java.lang.Object,android.view.View)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi22$NullPointerException      (com.rubenroy.minimaltodo.eval_fh)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs     (com.rubenroy.minimaltodo.eval_d1)
===============================================================================
  a        public static isFocusable(java.lang.Object)
  a        public static setBoundsInParent(java.lang.Object,android.graphics.Rect)
  a        public static setPassword(java.lang.Object,boolean)
  d        public static performAction(java.lang.Object,int)
  d        public static setPackageName(java.lang.Object,java.lang.CharSequence)
  e        public static getClassName(java.lang.Object)
  eval_c   public static setClickable(java.lang.Object,boolean)
  eval_f   public static isEnabled(java.lang.Object)
  eval_i   public static isCheckable(java.lang.Object)
  eval_q   public static getBoundsInScreen(java.lang.Object,android.graphics.Rect)
  eval_s   public static isScrollable(java.lang.Object)
  eval_u   public static isLongClickable(java.lang.Object)
  f        public static obtain()
  f        public static getPackageName(java.lang.Object)
  f        public static setFocusable(java.lang.Object,boolean)
  g        public static getChildCount(java.lang.Object)
  g        public static getBoundsInParent(java.lang.Object,android.graphics.Rect)
  h        public static obtain(java.lang.Object)
  i        public static isFocused(java.lang.Object)
  i        public static setEnabled(java.lang.Object,boolean)
  i        public static setContentDescription(java.lang.Object,java.lang.CharSequence)
  j        public static isSelected(java.lang.Object)
  k        public static setText(java.lang.Object,java.lang.CharSequence)
  l        public static isClickable(java.lang.Object)
  l        public static addChild(java.lang.Object,android.view.View)
  l        public static setLongClickable(java.lang.Object,boolean)
  l        public static getChild(java.lang.Object,int)
  m        public static getWindowId(java.lang.Object)
  n        public static setClassName(java.lang.Object,java.lang.CharSequence)
  o        public static recycle(java.lang.Object)
  p        public static setParent(java.lang.Object,android.view.View)
  p        public static setFocused(java.lang.Object,boolean)
  p        public static addAction(java.lang.Object,int)
  q        public static setBoundsInScreen(java.lang.Object,android.graphics.Rect)
  q        public static setSource(java.lang.Object,android.view.View)
  r        public static getText(java.lang.Object)
  s        public static obtain(android.view.View)
  s        public static getParent(java.lang.Object)
  s        public static findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String)
  t        public static isPassword(java.lang.Object)
  u        public static getContentDescription(java.lang.Object)
  u        public static setChecked(java.lang.Object,boolean)
  v        public static setSelected(java.lang.Object,boolean)
  w        public static getActions(java.lang.Object)
  w        public static setScrollable(java.lang.Object,boolean)
  z        public static isChecked(java.lang.Object)
  z        public static setCheckable(java.lang.Object,boolean)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs$IOException (com.rubenroy.minimaltodo.eval_qo)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean       (com.rubenroy.minimaltodo.eval_ud)
===============================================================================
  b        public static performAction(java.lang.Object,int,android.os.Bundle)
  c        public static isAccessibilityFocused(java.lang.Object)
  c        public static setAccesibilityFocused(java.lang.Object,boolean)
  d        public static isVisibleToUser(java.lang.Object)
  e        public static obtain(android.view.View,int)
  eval_d   public static getMovementGranularities(java.lang.Object)
  eval_v   public static setMovementGranularities(java.lang.Object,int)
  g        public static addChild(java.lang.Object,android.view.View,int)
  g        public static findFocus(java.lang.Object,int)
  o        public static setParent(java.lang.Object,android.view.View,int)
  p        public static setSource(java.lang.Object,android.view.View,int)
  p        public static focusSearch(java.lang.Object,int)
  y        public static setVisibleToUser(java.lang.Object,boolean)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean$Exception     (com.rubenroy.minimaltodo.eval_v6)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr1    (com.rubenroy.minimaltodo.eval_ws)
===============================================================================
  j    public static setLabeledBy(java.lang.Object,android.view.View,int)
  k    public static getLabelFor(java.lang.Object)
  l    public static setLabelFor(java.lang.Object,android.view.View)
  n    public static setLabeledBy(java.lang.Object,android.view.View)
  n    public static setLabelFor(java.lang.Object,android.view.View,int)
  r    public static getLabeledBy(java.lang.Object)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr1$ParseException     (com.rubenroy.minimaltodo.eval_he)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2    (com.rubenroy.minimaltodo.eval_gu)
===============================================================================
  c        public static getTextSelectionStart(java.lang.Object)
  e        public static getViewIdResourceName(java.lang.Object)
  eval_h   public static refresh(java.lang.Object)
  f        public static setViewIdResourceName(java.lang.Object,java.lang.String)
  j        public static setTextSelection(java.lang.Object,int,int)
  r        public static findAccessibilityNodeInfosByViewId(java.lang.Object,java.lang.String)
  u        public static isEditable(java.lang.Object)
  v        public static getTextSelectionEnd(java.lang.Object)
  z        public static setEditable(java.lang.Object,boolean)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2$ParseException     (com.rubenroy.minimaltodo.eval_ml)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat  (com.rubenroy.minimaltodo.eval_y8)
===============================================================================
  a        public static getInputType(java.lang.Object)
  a        public static setCollectionInfo(java.lang.Object,java.lang.Object)
  c        static getRangeInfo(java.lang.Object)
  c        static setLiveRegion(java.lang.Object,int)
  eval_c   static getLiveRegion(java.lang.Object)
  eval_h   public static isContentInvalid(java.lang.Object)
  eval_j   public static getExtras(java.lang.Object)
  eval_z   public static isDismissable(java.lang.Object)
  h        public static setCanOpenPopup(java.lang.Object,boolean)
  j        public static obtainCollectionItemInfo(int,int,int,int,boolean)
  j        public static setInputType(java.lang.Object,int)
  k        static getCollectionItemInfo(java.lang.Object)
  m        public static isMultiLine(java.lang.Object)
  n        static getCollectionInfo(java.lang.Object)
  p        public static setDismissable(java.lang.Object,boolean)
  q        public static setRangeInfo(java.lang.Object,java.lang.Object)
  v        public static obtainCollectionInfo(int,int,boolean,int)
  v        public static setContentInvalid(java.lang.Object,boolean)
  x        public static canOpenPopup(java.lang.Object)
  x        public static setCollectionItemInfo(java.lang.Object,java.lang.Object)
  z        public static setMultiLine(java.lang.Object,boolean)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$ArrayOutOfBoundsException        (com.rubenroy.minimaltodo.eval_go)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionInfo   (com.rubenroy.minimaltodo.eval_y8$e)
===============================================================================
  a        static getRowCount(java.lang.Object)
  c        static isHierarchical(java.lang.Object)
  eval_h   static getColumnCount(java.lang.Object)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionItemInfo       (com.rubenroy.minimaltodo.eval_y8$w)
===============================================================================
  d    static getColumnSpan(java.lang.Object)
  g    static isHeading(java.lang.Object)
  l    static getColumnIndex(java.lang.Object)
  s    static getRowIndex(java.lang.Object)
  t    static getRowSpan(java.lang.Object)

android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$RangeInfo        (com.rubenroy.minimaltodo.eval_y8$_)
===============================================================================
  eval_q   static getMax(java.lang.Object)
  q        static getCurrent(java.lang.Object)
  w        static getType(java.lang.Object)
  y        static getMin(java.lang.Object)

android.support.v4.view.accessibility.AccessibilityNodeProviderCompat    (com.rubenroy.minimaltodo.eval_g9)
===============================================================================
  a    public findFocus(int)
  c    public getProvider()
  c    public findAccessibilityNodeInfosByText(java.lang.String,int)
  h    public performAction(int,int,android.os.Bundle)
  j    public createAccessibilityNodeInfo(int)

android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl      (com.rubenroy.minimaltodo.eval_g9$y)
===============================================================================
  q    public abstract newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat)

android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl     (com.rubenroy.minimaltodo.eval_g9$j)
===============================================================================
  q    public newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat)

android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1   (com.rubenroy.minimaltodo.eval_g9$j$1)
===============================================================================
  b    public createAccessibilityNodeInfo(int)
  b    public findAccessibilityNodeInfosByText(java.lang.String,int)
  x    public performAction(int,int,android.os.Bundle)

android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$IOException (com.rubenroy.minimaltodo.eval_zc)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl        (com.rubenroy.minimaltodo.eval_g9$l)
===============================================================================
  q    public newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat)

android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1      (com.rubenroy.minimaltodo.eval_g9$l$1)
===============================================================================
  eval_t   public performAction(int,int,android.os.Bundle)
  l        public createAccessibilityNodeInfo(int)
  r        public findAccessibilityNodeInfosByText(java.lang.String,int)
  y        public findFocus(int)

android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$NullPointerException   (com.rubenroy.minimaltodo.eval_zw)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl  (com.rubenroy.minimaltodo.eval_g9$m)
===============================================================================
  q    public newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat)

android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$Exception  (com.rubenroy.minimaltodo.eval_oh)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean   (com.rubenroy.minimaltodo.eval__q)
===============================================================================
  l    public static newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge)

android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 (com.rubenroy.minimaltodo.eval__q$1)
===============================================================================
  createAccessibilityNodeInfo      public createAccessibilityNodeInfo(int)
  findAccessibilityNodeInfosByText public findAccessibilityNodeInfosByText(java.lang.String,int)
  performAction                    public performAction(int,int,android.os.Bundle)

android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge       (com.rubenroy.minimaltodo.eval__q$b)
===============================================================================
  b    public abstract createAccessibilityNodeInfo(int)
  b    public abstract findAccessibilityNodeInfosByText(java.lang.String,int)
  x    public abstract performAction(int,int,android.os.Bundle)

android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$IOException       (com.rubenroy.minimaltodo.eval_ht)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat      (com.rubenroy.minimaltodo.eval_ur)
===============================================================================
  f    public static newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge)

android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1    (com.rubenroy.minimaltodo.eval_ur$1)
===============================================================================
  createAccessibilityNodeInfo      public createAccessibilityNodeInfo(int)
  findAccessibilityNodeInfosByText public findAccessibilityNodeInfosByText(java.lang.String,int)
  findFocus                        public findFocus(int)
  performAction                    public performAction(int,int,android.os.Bundle)

android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge  (com.rubenroy.minimaltodo.eval_ur$b)
===============================================================================
  eval_t   public abstract performAction(int,int,android.os.Bundle)
  l        public abstract createAccessibilityNodeInfo(int)
  r        public abstract findAccessibilityNodeInfosByText(java.lang.String,int)
  y        public abstract findFocus(int)

android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$NullPointerException (com.rubenroy.minimaltodo.eval_c3)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityRecordCompat  (com.rubenroy.minimaltodo.eval__j)
===============================================================================
  a        public getFromIndex()
  a        public setParcelableData(android.os.Parcelable)
  a        public setFromIndex(int)
  b        public isChecked()
  b        public setEnabled(boolean)
  c        public getImpl()
  c        public setChecked(boolean)
  d        public isFullScreen()
  d        public setClassName(java.lang.CharSequence)
  eval__   public getAddedCount()
  eval_d   public getToIndex()
  eval_d   public setPassword(boolean)
  eval_e   public setMaxScrollY(int)
  eval_h   public getCurrentItemIndex()
  eval_i   public getParcelableData()
  eval_l   public getClassName()
  eval_r   public recycle()
  eval_s   public getMaxScrollX()
  eval_s   public setMaxScrollX(int)
  eval_u   public getText()
  eval_v   public getSource()
  eval_w   public setToIndex(int)
  f        public isScrollable()
  g        public setBeforeText(java.lang.CharSequence)
  h        public getRemovedCount()
  i        public getMaxScrollY()
  j        public setSource(android.view.View)
  k        public getWindowId()
  k        public static obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat)
  k        public setScrollY(int)
  l        public getContentDescription()
  m        public isPassword()
  m        public setScrollX(int)
  o        public getItemCount()
  o        public setFullScreen(boolean)
  p        public getBeforeText()
  p        public setCurrentItemIndex(int)
  p        public setContentDescription(java.lang.CharSequence)
  q        public static obtain()
  q        public setItemCount(int)
  r        public getScrollX()
  r        public setRemovedCount(int)
  s        public setAddedCount(int)
  x        public getScrollY()
  y        public setSource(android.view.View,int)
  z        public isEnabled()
  z        public setScrollable(boolean)
  equals   public equals(java.lang.Object)
  hashCode public hashCode()

android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl       (com.rubenroy.minimaltodo.eval__j$_)
===============================================================================
  a        public getContentDescription(java.lang.Object)
  a        public setFromIndex(java.lang.Object,int)
  b        public getScrollX(java.lang.Object)
  c        public obtain()
  c        public isEnabled(java.lang.Object)
  d        public recycle(java.lang.Object)
  d        public setCurrentItemIndex(java.lang.Object,int)
  e        public getAddedCount(java.lang.Object)
  eval_g   public getText(java.lang.Object)
  eval_g   public setSource(java.lang.Object,android.view.View)
  eval_n   public isFullScreen(java.lang.Object)
  eval_r   public getCurrentItemIndex(java.lang.Object)
  eval_v   public isPassword(java.lang.Object)
  eval_w   public getSource(java.lang.Object)
  eval_x   public getRemovedCount(java.lang.Object)
  f        public getParcelableData(java.lang.Object)
  g        public setItemCount(java.lang.Object,int)
  j        public getBeforeText(java.lang.Object)
  k        public getFromIndex(java.lang.Object)
  k        public setScrollY(java.lang.Object,int)
  k        public setContentDescription(java.lang.Object,java.lang.CharSequence)
  l        public setChecked(java.lang.Object,boolean)
  m        public isScrollable(java.lang.Object)
  m        public setScrollable(java.lang.Object,boolean)
  n        public getToIndex(java.lang.Object)
  n        public setAddedCount(java.lang.Object,int)
  o        public obtain(java.lang.Object)
  p        public isChecked(java.lang.Object)
  p        public setParcelableData(java.lang.Object,android.os.Parcelable)
  p        public setClassName(java.lang.Object,java.lang.CharSequence)
  q        public setPassword(java.lang.Object,boolean)
  r        public getWindowId(java.lang.Object)
  r        public setScrollX(java.lang.Object,int)
  s        public getScrollY(java.lang.Object)
  s        public setFullScreen(java.lang.Object,boolean)
  t        public setRemovedCount(java.lang.Object,int)
  u        public setBeforeText(java.lang.Object,java.lang.CharSequence)
  w        public setEnabled(java.lang.Object,boolean)
  y        public getClassName(java.lang.Object)
  y        public setToIndex(java.lang.Object,int)
  z        public getItemCount(java.lang.Object)

android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl    (com.rubenroy.minimaltodo.eval__j$y)
===============================================================================
  eval_a   public getMaxScrollX(java.lang.Object)
  eval_m   public getMaxScrollY(java.lang.Object)
  l        public setMaxScrollX(java.lang.Object,int)
  u        public setMaxScrollY(java.lang.Object,int)

android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl  (com.rubenroy.minimaltodo.eval__j$z)
===============================================================================
  a        public abstract getContentDescription(java.lang.Object)
  a        public abstract setFromIndex(java.lang.Object,int)
  b        public abstract getScrollX(java.lang.Object)
  c        public abstract obtain()
  c        public abstract isEnabled(java.lang.Object)
  d        public abstract recycle(java.lang.Object)
  d        public abstract setCurrentItemIndex(java.lang.Object,int)
  e        public abstract getAddedCount(java.lang.Object)
  e        public abstract setSource(java.lang.Object,android.view.View,int)
  eval_a   public abstract getMaxScrollX(java.lang.Object)
  eval_g   public abstract getText(java.lang.Object)
  eval_g   public abstract setSource(java.lang.Object,android.view.View)
  eval_m   public abstract getMaxScrollY(java.lang.Object)
  eval_n   public abstract isFullScreen(java.lang.Object)
  eval_r   public abstract getCurrentItemIndex(java.lang.Object)
  eval_v   public abstract isPassword(java.lang.Object)
  eval_w   public abstract getSource(java.lang.Object)
  eval_x   public abstract getRemovedCount(java.lang.Object)
  f        public abstract getParcelableData(java.lang.Object)
  g        public abstract setItemCount(java.lang.Object,int)
  j        public abstract getBeforeText(java.lang.Object)
  k        public abstract getFromIndex(java.lang.Object)
  k        public abstract setScrollY(java.lang.Object,int)
  k        public abstract setContentDescription(java.lang.Object,java.lang.CharSequence)
  l        public abstract setChecked(java.lang.Object,boolean)
  l        public abstract setMaxScrollX(java.lang.Object,int)
  m        public abstract isScrollable(java.lang.Object)
  m        public abstract setScrollable(java.lang.Object,boolean)
  n        public abstract getToIndex(java.lang.Object)
  n        public abstract setAddedCount(java.lang.Object,int)
  o        public abstract obtain(java.lang.Object)
  p        public abstract isChecked(java.lang.Object)
  p        public abstract setParcelableData(java.lang.Object,android.os.Parcelable)
  p        public abstract setClassName(java.lang.Object,java.lang.CharSequence)
  q        public abstract setPassword(java.lang.Object,boolean)
  r        public abstract getWindowId(java.lang.Object)
  r        public abstract setScrollX(java.lang.Object,int)
  s        public abstract getScrollY(java.lang.Object)
  s        public abstract setFullScreen(java.lang.Object,boolean)
  t        public abstract setRemovedCount(java.lang.Object,int)
  u        public abstract setMaxScrollY(java.lang.Object,int)
  u        public abstract setBeforeText(java.lang.Object,java.lang.CharSequence)
  w        public abstract setEnabled(java.lang.Object,boolean)
  y        public abstract getClassName(java.lang.Object)
  y        public abstract setToIndex(java.lang.Object,int)
  z        public abstract getItemCount(java.lang.Object)

android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl (com.rubenroy.minimaltodo.eval__j$a)
===============================================================================
  e    public setSource(java.lang.Object,android.view.View,int)

android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl      (com.rubenroy.minimaltodo.eval__j$eval_m)
===============================================================================
  a        public getContentDescription(java.lang.Object)
  a        public setFromIndex(java.lang.Object,int)
  b        public getScrollX(java.lang.Object)
  c        public obtain()
  c        public isEnabled(java.lang.Object)
  d        public recycle(java.lang.Object)
  d        public setCurrentItemIndex(java.lang.Object,int)
  e        public getAddedCount(java.lang.Object)
  e        public setSource(java.lang.Object,android.view.View,int)
  eval_a   public getMaxScrollX(java.lang.Object)
  eval_g   public getText(java.lang.Object)
  eval_g   public setSource(java.lang.Object,android.view.View)
  eval_m   public getMaxScrollY(java.lang.Object)
  eval_n   public isFullScreen(java.lang.Object)
  eval_r   public getCurrentItemIndex(java.lang.Object)
  eval_v   public isPassword(java.lang.Object)
  eval_w   public getSource(java.lang.Object)
  eval_x   public getRemovedCount(java.lang.Object)
  f        public getParcelableData(java.lang.Object)
  g        public setItemCount(java.lang.Object,int)
  j        public getBeforeText(java.lang.Object)
  k        public getFromIndex(java.lang.Object)
  k        public setScrollY(java.lang.Object,int)
  k        public setContentDescription(java.lang.Object,java.lang.CharSequence)
  l        public setChecked(java.lang.Object,boolean)
  l        public setMaxScrollX(java.lang.Object,int)
  m        public isScrollable(java.lang.Object)
  m        public setScrollable(java.lang.Object,boolean)
  n        public getToIndex(java.lang.Object)
  n        public setAddedCount(java.lang.Object,int)
  o        public obtain(java.lang.Object)
  p        public isChecked(java.lang.Object)
  p        public setParcelableData(java.lang.Object,android.os.Parcelable)
  p        public setClassName(java.lang.Object,java.lang.CharSequence)
  q        public setPassword(java.lang.Object,boolean)
  r        public getWindowId(java.lang.Object)
  r        public setScrollX(java.lang.Object,int)
  s        public getScrollY(java.lang.Object)
  s        public setFullScreen(java.lang.Object,boolean)
  t        public setRemovedCount(java.lang.Object,int)
  u        public setMaxScrollY(java.lang.Object,int)
  u        public setBeforeText(java.lang.Object,java.lang.CharSequence)
  w        public setEnabled(java.lang.Object,boolean)
  y        public getClassName(java.lang.Object)
  y        public setToIndex(java.lang.Object,int)
  z        public getItemCount(java.lang.Object)

android.support.v4.view.accessibility.AccessibilityRecordCompat$IOException      (com.rubenroy.minimaltodo.eval_gv)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityRecordCompatIcs       (com.rubenroy.minimaltodo.eval_ot)
===============================================================================
  a        public static setFullScreen(java.lang.Object,boolean)
  b        public static obtain()
  e        public static isPassword(java.lang.Object)
  e        public static setClassName(java.lang.Object,java.lang.CharSequence)
  eval_b   public static setEnabled(java.lang.Object,boolean)
  eval_g   public static setToIndex(java.lang.Object,int)
  eval_i   public static getAddedCount(java.lang.Object)
  eval_m   public static getSource(java.lang.Object)
  eval_t   public static isChecked(java.lang.Object)
  eval_u   public static getCurrentItemIndex(java.lang.Object)
  eval_y   public static getToIndex(java.lang.Object)
  g        public static getRemovedCount(java.lang.Object)
  g        public static setScrollY(java.lang.Object,int)
  h        public static isFullScreen(java.lang.Object)
  h        public static setScrollable(java.lang.Object,boolean)
  h        public static setItemCount(java.lang.Object,int)
  i        public static getWindowId(java.lang.Object)
  i        public static setAddedCount(java.lang.Object,int)
  j        public static getScrollY(java.lang.Object)
  k        public static isEnabled(java.lang.Object)
  l        public static getItemCount(java.lang.Object)
  l        public static setRemovedCount(java.lang.Object,int)
  m        public static setCurrentItemIndex(java.lang.Object,int)
  o        public static isScrollable(java.lang.Object)
  p        public static getContentDescription(java.lang.Object)
  p        public static setParcelableData(java.lang.Object,android.os.Parcelable)
  q        public static recycle(java.lang.Object)
  r        public static getText(java.lang.Object)
  s        public static getScrollX(java.lang.Object)
  u        public static getFromIndex(java.lang.Object)
  u        public static setPassword(java.lang.Object,boolean)
  v        public static getClassName(java.lang.Object)
  w        public static getParcelableData(java.lang.Object)
  w        public static setBeforeText(java.lang.Object,java.lang.CharSequence)
  x        public static obtain(java.lang.Object)
  x        public static setFromIndex(java.lang.Object,int)
  x        public static setContentDescription(java.lang.Object,java.lang.CharSequence)
  z        public static getBeforeText(java.lang.Object)
  z        public static setSource(java.lang.Object,android.view.View)
  z        public static setChecked(java.lang.Object,boolean)
  z        public static setScrollX(java.lang.Object,int)

android.support.v4.view.accessibility.AccessibilityRecordCompatIcs$ArrayOutOfBoundsException     (com.rubenroy.minimaltodo.eval_gm)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1    (com.rubenroy.minimaltodo.eval_u4)
===============================================================================
  a    public static getMaxScrollY(java.lang.Object)
  e    public static setMaxScrollY(java.lang.Object,int)
  l    public static setMaxScrollX(java.lang.Object,int)
  q    public static getMaxScrollX(java.lang.Object)

android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1$Exception  (com.rubenroy.minimaltodo.eval_yi)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean (com.rubenroy.minimaltodo.eval_xt)
===============================================================================
  x    public static setSource(java.lang.Object,android.view.View,int)

android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean$ParseException  (com.rubenroy.minimaltodo.eval_ut)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityWindowInfoCompat      (com.rubenroy.minimaltodo.eval_v4)
===============================================================================
  a        static wrapNonNullInstance(java.lang.Object)
  c        public getRoot()
  eval_x   public isActive()
  h        public getLayer()
  i        public static obtain()
  i        public getChild(int)
  k        private static typeToString(int)
  m        public getId()
  p        public static obtain(android.support.v4.view.accessibility.AccessibilityWindowInfoCompat)
  q        public getType()
  u        public getChildCount()
  v        public getParent()
  w        public isFocused()
  y        public isAccessibilityFocused()
  z        public recycle()
  z        public getBoundsInScreen(android.graphics.Rect)
  equals   public equals(java.lang.Object)
  hashCode public hashCode()
  toString public toString()

android.support.v4.view.accessibility.AccessibilityWindowInfoCompat$1    (com.rubenroy.minimaltodo.eval_v4$1)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityWindowInfoCompat$AccessibilityWindowInfoApi21Impl     (com.rubenroy.minimaltodo.eval_v4$n)
===============================================================================
  c        public getType(java.lang.Object)
  d        public isFocused(java.lang.Object)
  e        public getId(java.lang.Object)
  e        public getChild(java.lang.Object,int)
  eval_a   public getParent(java.lang.Object)
  eval_d   public obtain()
  g        public getChildCount(java.lang.Object)
  h        public isAccessibilityFocused(java.lang.Object)
  l        public obtain(java.lang.Object)
  n        public getRoot(java.lang.Object)
  u        public recycle(java.lang.Object)
  w        public getLayer(java.lang.Object)
  z        public isActive(java.lang.Object)
  z        public getBoundsInScreen(java.lang.Object,android.graphics.Rect)

android.support.v4.view.accessibility.AccessibilityWindowInfoCompat$AccessibilityWindowInfoImpl  (com.rubenroy.minimaltodo.eval_v4$p)
===============================================================================
  c        public abstract getType(java.lang.Object)
  d        public abstract isFocused(java.lang.Object)
  e        public abstract getId(java.lang.Object)
  e        public abstract getChild(java.lang.Object,int)
  eval_a   public abstract getParent(java.lang.Object)
  eval_d   public abstract obtain()
  g        public abstract getChildCount(java.lang.Object)
  h        public abstract isAccessibilityFocused(java.lang.Object)
  l        public abstract obtain(java.lang.Object)
  n        public abstract getRoot(java.lang.Object)
  u        public abstract recycle(java.lang.Object)
  w        public abstract getLayer(java.lang.Object)
  z        public abstract isActive(java.lang.Object)
  z        public abstract getBoundsInScreen(java.lang.Object,android.graphics.Rect)

android.support.v4.view.accessibility.AccessibilityWindowInfoCompat$AccessibilityWindowInfoStubImpl      (com.rubenroy.minimaltodo.eval_v4$r)
===============================================================================
  c        public getType(java.lang.Object)
  d        public isFocused(java.lang.Object)
  e        public getId(java.lang.Object)
  e        public getChild(java.lang.Object,int)
  eval_a   public getParent(java.lang.Object)
  eval_d   public obtain()
  g        public getChildCount(java.lang.Object)
  h        public isAccessibilityFocused(java.lang.Object)
  l        public obtain(java.lang.Object)
  n        public getRoot(java.lang.Object)
  u        public recycle(java.lang.Object)
  w        public getLayer(java.lang.Object)
  z        public isActive(java.lang.Object)
  z        public getBoundsInScreen(java.lang.Object,android.graphics.Rect)

android.support.v4.view.accessibility.AccessibilityWindowInfoCompat$ParseException       (com.rubenroy.minimaltodo.eval_bw)
===============================================================================
  No methods

android.support.v4.view.accessibility.AccessibilityWindowInfoCompatApi21 (com.rubenroy.minimaltodo.eval_hz)
===============================================================================
  c        public static isActive(java.lang.Object)
  e        public static getLayer(java.lang.Object)
  eval_c   public static getChildCount(java.lang.Object)
  eval_d   public static recycle(java.lang.Object)
  eval_e   public static getParent(java.lang.Object)
  h        public static getId(java.lang.Object)
  j        public static getChild(java.lang.Object,int)
  k        public static getType(java.lang.Object)
  l        public static isAccessibilityFocused(java.lang.Object)
  o        public static getBoundsInScreen(java.lang.Object,android.graphics.Rect)
  q        public static getRoot(java.lang.Object)
  s        public static obtain()
  u        public static obtain(java.lang.Object)
  x        public static isFocused(java.lang.Object)

android.support.v4.view.accessibility.AccessibilityWindowInfoCompatApi21$ParseException  (com.rubenroy.minimaltodo.eval_vc)
===============================================================================
  No methods

android.support.v4.view.animation.FastOutLinearInInterpolator    (com.rubenroy.minimaltodo.eval_c8)
===============================================================================
  getInterpolation public volatile getInterpolation(float)

android.support.v4.view.animation.FastOutLinearInInterpolator$ArrayOutOfBoundsException  (com.rubenroy.minimaltodo.eval_ch)
===============================================================================
  No methods

android.support.v4.view.animation.FastOutSlowInInterpolator      (com.rubenroy.minimaltodo.eval_bm)
===============================================================================
  getInterpolation public volatile getInterpolation(float)

android.support.v4.view.animation.FastOutSlowInInterpolator$Exception    (com.rubenroy.minimaltodo.eval_x9)
===============================================================================
  No methods

android.support.v4.view.animation.LinearOutSlowInInterpolator    (com.rubenroy.minimaltodo.eval_k8)
===============================================================================
  getInterpolation public volatile getInterpolation(float)

android.support.v4.view.animation.LinearOutSlowInInterpolator$ArrayOutOfBoundsException  (com.rubenroy.minimaltodo.eval_xp)
===============================================================================
  No methods

android.support.v4.view.animation.LookupTableInterpolator        (com.rubenroy.minimaltodo.eval_zp)
===============================================================================
  getInterpolation public getInterpolation(float)

android.support.v4.view.animation.LookupTableInterpolator$ParseException (com.rubenroy.minimaltodo.eval_i1)
===============================================================================
  No methods

android.support.v4.view.animation.PathInterpolatorCompat (com.rubenroy.minimaltodo.eval_gf)
===============================================================================
  m    public static create(float,float)
  s    public static create(float,float,float,float)
  v    public static create(android.graphics.Path)

android.support.v4.view.animation.PathInterpolatorCompat$ArrayOutOfBoundsException       (com.rubenroy.minimaltodo.eval_a3)
===============================================================================
  No methods

android.support.v4.view.animation.PathInterpolatorCompatApi21    (com.rubenroy.minimaltodo.eval_qv)
===============================================================================
  l    public static create(float,float,float,float)
  m    public static create(android.graphics.Path)
  p    public static create(float,float)

android.support.v4.view.animation.PathInterpolatorCompatApi21$ArrayOutOfBoundsException  (com.rubenroy.minimaltodo.eval_n_)
===============================================================================
  No methods

android.support.v4.view.animation.PathInterpolatorCompatBase     (com.rubenroy.minimaltodo.eval_cm)
===============================================================================
  f    public static create(float,float)
  f    public static create(float,float,float,float)
  x    public static create(android.graphics.Path)

android.support.v4.view.animation.PathInterpolatorCompatBase$NullPointerException        (com.rubenroy.minimaltodo.eval_gs)
===============================================================================
  No methods

android.support.v4.view.animation.PathInterpolatorDonut  (com.rubenroy.minimaltodo.eval_qf)
===============================================================================
  c                private static createQuad(float,float)
  x                private static createCubic(float,float,float,float)
  getInterpolation public getInterpolation(float)

android.support.v4.view.animation.PathInterpolatorDonut$NullPointerException     (com.rubenroy.minimaltodo.eval_pd)
===============================================================================
  No methods

android.support.v4.widget.AutoScrollHelper       (com.rubenroy.minimaltodo.eval_xl)
===============================================================================
  a        static access$700(android.support.v4.widget.AutoScrollHelper)
  a        public setMinimumVelocity(float,float)
  a        public abstract scrollTargetBy(int,int)
  b        public setRampDownDuration(int)
  c        static access$400(android.support.v4.widget.AutoScrollHelper)
  c        private static constrain(float,float,float)
  d        public setRelativeEdges(float,float)
  eval_d   public setRampUpDuration(int)
  eval_f   static access$502(android.support.v4.widget.AutoScrollHelper,boolean)
  eval_p   private shouldAnimate()
  eval_v   static access$300(android.support.v4.widget.AutoScrollHelper)
  f        static access$102(android.support.v4.widget.AutoScrollHelper,boolean)
  g        private static constrain(int,int,int)
  i        public setEnabled(boolean)
  i        public abstract canTargetScrollHorizontally(int)
  j        public isEnabled()
  j        public setMaximumVelocity(float,float)
  k        private cancelTargetTouch()
  k        public setMaximumEdges(float,float)
  l        private requestStop()
  l        public setActivationDelay(int)
  m        public abstract canTargetScrollVertically(int)
  n        private constrainEdgeValue(float,float)
  p        static access$200(android.support.v4.widget.AutoScrollHelper)
  r        private getEdgeValue(float,float,float,float)
  s        public setExclusive(boolean)
  s        public setRelativeVelocity(float,float)
  s        private computeTargetVelocity(int,float,float,float)
  t        static access$800(int,int,int)
  v        public isExclusive()
  w        static access$202(android.support.v4.widget.AutoScrollHelper,boolean)
  x        static access$500(android.support.v4.widget.AutoScrollHelper)
  y        private startAnimating()
  y        static access$600(android.support.v4.widget.AutoScrollHelper)
  y        public setEdgeType(int)
  z        static access$100(android.support.v4.widget.AutoScrollHelper)
  z        static access$900(float,float,float)
  onTouch  public onTouch(android.view.View,android.view.MotionEvent)

android.support.v4.widget.AutoScrollHelper$1     (com.rubenroy.minimaltodo.eval_xl$1)
===============================================================================
  No methods

android.support.v4.widget.AutoScrollHelper$ClampedScroller       (com.rubenroy.minimaltodo.eval_xl$j)
===============================================================================
  b        public requestStop()
  eval_a   public setRampDownDuration(int)
  eval_d   public isFinished()
  i        public getVerticalDirection()
  p        public getDeltaX()
  r        public getDeltaY()
  u        public getHorizontalDirection()
  u        private interpolateValue(float)
  v        public start()
  w        public setRampUpDuration(int)
  y        public computeScrollDelta()
  y        public setTargetVelocity(float,float)
  z        private getValueAt(long)

android.support.v4.widget.AutoScrollHelper$ParseException        (com.rubenroy.minimaltodo.eval_vz)
===============================================================================
  No methods

android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable       (com.rubenroy.minimaltodo.eval_xl$y)
===============================================================================
  run  public run()

android.support.v4.widget.CircleImageView        (com.rubenroy.minimaltodo.eval_pa)
===============================================================================
  e                    public setAnimationListener(android.view.animation.Animation$AnimationListener)
  k                    static access$002(android.support.v4.widget.CircleImageView,int)
  v                    private elevationSupported()
  v                    static access$000(android.support.v4.widget.CircleImageView)
  x                    public setBackgroundColorRes(int)
  onAnimationEnd       public onAnimationEnd()
  onAnimationStart     public onAnimationStart()
  onMeasure            protected onMeasure(int,int)
  setBackgroundColor   public setBackgroundColor(int)

android.support.v4.widget.CircleImageView$ArrayOutOfBoundsException      (com.rubenroy.minimaltodo.eval_ic)
===============================================================================
  No methods

android.support.v4.widget.CircleImageView$OvalShadow     (com.rubenroy.minimaltodo.eval_pa$n)
===============================================================================
  draw public draw(android.graphics.Canvas,android.graphics.Paint)

android.support.v4.widget.CompoundButtonCompat   (com.rubenroy.minimaltodo.eval_s2)
===============================================================================
  c    public static getButtonDrawable(android.widget.CompoundButton)
  d    public static getButtonTintList(android.widget.CompoundButton)
  e    public static setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
  k    public static setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
  y    public static getButtonTintMode(android.widget.CompoundButton)

android.support.v4.widget.CompoundButtonCompat$Api23CompoundButtonImpl   (com.rubenroy.minimaltodo.eval_s2$f)
===============================================================================
  h    public getButtonDrawable(android.widget.CompoundButton)

android.support.v4.widget.CompoundButtonCompat$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_jw)
===============================================================================
  No methods

android.support.v4.widget.CompoundButtonCompat$BaseCompoundButtonCompat  (com.rubenroy.minimaltodo.eval_s2$_)
===============================================================================
  b    public setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
  h    public getButtonDrawable(android.widget.CompoundButton)
  p    public getButtonTintMode(android.widget.CompoundButton)
  w    public setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
  y    public getButtonTintList(android.widget.CompoundButton)

android.support.v4.widget.CompoundButtonCompat$CompoundButtonCompatImpl  (com.rubenroy.minimaltodo.eval_s2$l)
===============================================================================
  b    public abstract setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
  h    public abstract getButtonDrawable(android.widget.CompoundButton)
  p    public abstract getButtonTintMode(android.widget.CompoundButton)
  w    public abstract setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
  y    public abstract getButtonTintList(android.widget.CompoundButton)

android.support.v4.widget.CompoundButtonCompat$LollipopCompoundButtonImpl        (com.rubenroy.minimaltodo.eval_s2$w)
===============================================================================
  b    public setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
  p    public getButtonTintMode(android.widget.CompoundButton)
  w    public setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
  y    public getButtonTintList(android.widget.CompoundButton)

android.support.v4.widget.CompoundButtonCompatApi23      (com.rubenroy.minimaltodo.eval_sc)
===============================================================================
  s    static getButtonDrawable(android.widget.CompoundButton)

android.support.v4.widget.CompoundButtonCompatApi23$ArrayOutOfBoundsException    (com.rubenroy.minimaltodo.eval_x1)
===============================================================================
  No methods

android.support.v4.widget.CompoundButtonCompatDonut      (com.rubenroy.minimaltodo.eval_q_)
===============================================================================
  eval_q   static getButtonTintMode(android.widget.CompoundButton)
  g        static getButtonTintList(android.widget.CompoundButton)
  o        static getButtonDrawable(android.widget.CompoundButton)
  p        static setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
  s        static setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)

android.support.v4.widget.CompoundButtonCompatDonut$ArrayOutOfBoundsException    (com.rubenroy.minimaltodo.eval_t8)
===============================================================================
  No methods

android.support.v4.widget.CompoundButtonCompatLollipop   (com.rubenroy.minimaltodo.eval_m0)
===============================================================================
  r    static getButtonTintMode(android.widget.CompoundButton)
  r    static setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
  v    static setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
  y    static getButtonTintList(android.widget.CompoundButton)

android.support.v4.widget.CompoundButtonCompatLollipop$Exception (com.rubenroy.minimaltodo.eval_yw)
===============================================================================
  No methods

android.support.v4.widget.ContentLoadingProgressBar      (com.rubenroy.minimaltodo.eval_wc)
===============================================================================
  a                    public show()
  h                    static access$300(android.support.v4.widget.ContentLoadingProgressBar)
  k                    public hide()
  l                    static access$002(android.support.v4.widget.ContentLoadingProgressBar,boolean)
  v                    private removeCallbacks()
  w                    static access$202(android.support.v4.widget.ContentLoadingProgressBar,boolean)
  x                    static access$102(android.support.v4.widget.ContentLoadingProgressBar,long)
  onAttachedToWindow   public onAttachedToWindow()
  onDetachedFromWindow public onDetachedFromWindow()

android.support.v4.widget.ContentLoadingProgressBar$1    (com.rubenroy.minimaltodo.eval_wc$1)
===============================================================================
  run  public run()

android.support.v4.widget.ContentLoadingProgressBar$2    (com.rubenroy.minimaltodo.eval_wc$2)
===============================================================================
  run  public run()

android.support.v4.widget.ContentLoadingProgressBar$ArrayOutOfBoundsException    (com.rubenroy.minimaltodo.eval_a8)
===============================================================================
  No methods

android.support.v4.widget.CursorAdapter  (com.rubenroy.minimaltodo.eval__u)
===============================================================================
  d                protected onContentChanged()
  f                public getCursor()
  h                public convertToString(android.database.Cursor)
  i                public changeCursor(android.database.Cursor)
  k                public abstract bindView(android.view.View,android.content.Context,android.database.Cursor)
  l                public abstract newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
  n                protected init(android.content.Context,android.database.Cursor,boolean)
  o                init(android.content.Context,android.database.Cursor,int)
  u                public swapCursor(android.database.Cursor)
  v                public runQueryOnBackgroundThread(java.lang.CharSequence)
  x                public getFilterQueryProvider()
  x                public newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
  z                public setFilterQueryProvider(android.widget.FilterQueryProvider)
  getCount         public getCount()
  getDropDownView  public getDropDownView(int,android.view.View,android.view.ViewGroup)
  getFilter        public getFilter()
  getItem          public getItem(int)
  getItemId        public getItemId(int)
  getView          public getView(int,android.view.View,android.view.ViewGroup)
  hasStableIds     public hasStableIds()

android.support.v4.widget.CursorAdapter$1        (com.rubenroy.minimaltodo.eval__u$1)
===============================================================================
  No methods

android.support.v4.widget.CursorAdapter$ChangeObserver   (com.rubenroy.minimaltodo.eval__u$_)
===============================================================================
  deliverSelfNotifications public deliverSelfNotifications()
  onChange                 public onChange(boolean)

android.support.v4.widget.CursorAdapter$Exception        (com.rubenroy.minimaltodo.eval_gz)
===============================================================================
  No methods

android.support.v4.widget.CursorAdapter$MyDataSetObserver        (com.rubenroy.minimaltodo.eval__u$u)
===============================================================================
  onChanged        public onChanged()
  onInvalidated    public onInvalidated()

android.support.v4.widget.CursorFilter   (com.rubenroy.minimaltodo.eval_d0)
===============================================================================
  convertResultToString    public convertResultToString(java.lang.Object)
  performFiltering         protected performFiltering(java.lang.CharSequence)
  publishResults           protected publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults)

android.support.v4.widget.CursorFilter$CursorFilterClient        (com.rubenroy.minimaltodo.eval_d0$j)
===============================================================================
  f    public abstract getCursor()
  h    public abstract convertToString(android.database.Cursor)
  i    public abstract changeCursor(android.database.Cursor)
  v    public abstract runQueryOnBackgroundThread(java.lang.CharSequence)

android.support.v4.widget.CursorFilter$IOException       (com.rubenroy.minimaltodo.eval_a4)
===============================================================================
  No methods

android.support.v4.widget.DrawerLayout   (com.rubenroy.minimaltodo.eval_wi)
===============================================================================
  b                                private mirror(android.graphics.drawable.Drawable,int)
  b                                static access$300(android.support.v4.widget.DrawerLayout)
  c                                private resolveLeftShadow()
  e                                public setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener)
  e                                public setStatusBarBackgroundColor(int)
  eval__                           private static includeChildForAccessibility(android.view.View)
  eval_c                           public isDrawerOpen(android.view.View)
  eval_d                           public getStatusBarBackgroundDrawable()
  eval_f                           getDrawerViewOffset(android.view.View)
  eval_h                           static gravityToString(int)
  eval_l                           public closeDrawer(android.view.View)
  eval_o                           private static hasOpaqueBackground(android.view.View)
  eval_q                           public closeDrawers()
  eval_t                           private resolveShadowDrawables()
  eval_t                           public closeDrawer(int)
  eval_x                           public setStatusBarBackground(int)
  eval_z                           isDrawerView(android.view.View)
  g                                public getDrawerLockMode(int)
  g                                public setDrawerTitle(int,java.lang.CharSequence)
  h                                findOpenDrawer()
  h                                public openDrawer(android.view.View)
  i                                moveDrawerToOffset(android.view.View,float)
  j                                private hasVisibleDrawer()
  j                                public getDrawerLockMode(android.view.View)
  j                                dispatchOnDrawerSlide(android.view.View,float)
  k                                private findVisibleDrawer()
  l                                public setStatusBarBackground(android.graphics.drawable.Drawable)
  n                                private resolveRightShadow()
  n                                private updateChildrenImportantForAccessibility(android.view.View,boolean)
  n                                findDrawerWithGravity(int)
  n                                public setDrawerShadow(int,int)
  o                                public getDrawerElevation()
  o                                dispatchOnDrawerOpened(android.view.View)
  o                                public setDrawerLockMode(int)
  p                                static access$400(android.view.View)
  p                                checkDrawerViewAbsoluteGravity(android.view.View,int)
  p                                closeDrawers(boolean)
  q                                public setDrawerLockMode(int,android.view.View)
  r                                public setChildInsets(java.lang.Object,boolean)
  s                                public getDrawerTitle(int)
  t                                private hasPeekingDrawer()
  t                                public isDrawerVisible(android.view.View)
  t                                public isDrawerVisible(int)
  u                                public setDrawerShadow(android.graphics.drawable.Drawable,int)
  u                                isContentView(android.view.View)
  v                                cancelChildViewTouch()
  v                                getDrawerViewAbsoluteGravity(android.view.View)
  v                                public setDrawerElevation(float)
  v                                public openDrawer(int)
  v                                public setDrawerLockMode(int,int)
  w                                updateDrawerState(int,int,android.view.View)
  x                                dispatchOnDrawerClosed(android.view.View)
  x                                public setScrimColor(int)
  y                                static access$100()
  y                                setDrawerViewOffset(android.view.View,float)
  z                                static access$200()
  z                                public isDrawerOpen(int)
  addFocusables                    public addFocusables(java.util.ArrayList,int,int)
  addView                          public addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
  checkLayoutParams                protected checkLayoutParams(android.view.ViewGroup$LayoutParams)
  computeScroll                    public computeScroll()
  drawChild                        protected drawChild(android.graphics.Canvas,android.view.View,long)
  generateDefaultLayoutParams      protected generateDefaultLayoutParams()
  generateLayoutParams             public generateLayoutParams(android.util.AttributeSet)
  generateLayoutParams             protected generateLayoutParams(android.view.ViewGroup$LayoutParams)
  onAttachedToWindow               protected onAttachedToWindow()
  onDetachedFromWindow             protected onDetachedFromWindow()
  onDraw                           public onDraw(android.graphics.Canvas)
  onInterceptTouchEvent            public onInterceptTouchEvent(android.view.MotionEvent)
  onKeyDown                        public onKeyDown(int,android.view.KeyEvent)
  onKeyUp                          public onKeyUp(int,android.view.KeyEvent)
  onLayout                         protected onLayout(boolean,int,int,int,int)
  onMeasure                        protected onMeasure(int,int)
  onRestoreInstanceState           protected onRestoreInstanceState(android.os.Parcelable)
  onRtlPropertiesChanged           public onRtlPropertiesChanged(int)
  onSaveInstanceState              protected onSaveInstanceState()
  onTouchEvent                     public onTouchEvent(android.view.MotionEvent)
  requestDisallowInterceptTouchEvent   public requestDisallowInterceptTouchEvent(boolean)
  requestLayout                    public requestLayout()

android.support.v4.widget.DrawerLayout$AccessibilityDelegate     (com.rubenroy.minimaltodo.eval_wi$p)
===============================================================================
  b    private addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup)
  d    public onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  h    public dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
  i    private copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  s    public onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
  z    public onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)

android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate        (com.rubenroy.minimaltodo.eval_wi$r)
===============================================================================
  d    public onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)

android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl    (com.rubenroy.minimaltodo.eval_wi$u)
===============================================================================
  c        public abstract dispatchChildInsets(android.view.View,java.lang.Object,int)
  eval_r   public abstract applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int)
  l        public abstract getTopInset(java.lang.Object)
  o        public abstract getDefaultStatusBarBackground(android.content.Context)
  p        public abstract configureApplyInsets(android.view.View)

android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplApi21       (com.rubenroy.minimaltodo.eval_wi$f)
===============================================================================
  c        public dispatchChildInsets(android.view.View,java.lang.Object,int)
  eval_r   public applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int)
  l        public getTopInset(java.lang.Object)
  o        public getDefaultStatusBarBackground(android.content.Context)
  p        public configureApplyInsets(android.view.View)

android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplBase        (com.rubenroy.minimaltodo.eval_wi$t)
===============================================================================
  c        public dispatchChildInsets(android.view.View,java.lang.Object,int)
  eval_r   public applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int)
  l        public getTopInset(java.lang.Object)
  o        public getDefaultStatusBarBackground(android.content.Context)
  p        public configureApplyInsets(android.view.View)

android.support.v4.widget.DrawerLayout$DrawerListener    (com.rubenroy.minimaltodo.eval_wi$eval_k)
===============================================================================
  k    public abstract onDrawerOpened(android.view.View)
  n    public abstract onDrawerStateChanged(int)
  s    public abstract onDrawerClosed(android.view.View)
  z    public abstract onDrawerSlide(android.view.View,float)

android.support.v4.widget.DrawerLayout$IOException       (com.rubenroy.minimaltodo.eval_b5)
===============================================================================
  No methods

android.support.v4.widget.DrawerLayout$LayoutParams      (com.rubenroy.minimaltodo.eval_wi$j)
===============================================================================
  No methods

android.support.v4.widget.DrawerLayout$SavedState        (com.rubenroy.minimaltodo.eval_wi$eval_w)
===============================================================================
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.widget.DrawerLayout$SavedState$1      (com.rubenroy.minimaltodo.eval_wi$eval_w$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.widget.DrawerLayout$SavedState$Exception      (com.rubenroy.minimaltodo.eval_lf)
===============================================================================
  No methods

android.support.v4.widget.DrawerLayout$SimpleDrawerListener      (com.rubenroy.minimaltodo.eval_wi$m)
===============================================================================
  k    public onDrawerOpened(android.view.View)
  n    public onDrawerStateChanged(int)
  s    public onDrawerClosed(android.view.View)
  z    public onDrawerSlide(android.view.View,float)

android.support.v4.widget.DrawerLayout$ViewDragCallback  (com.rubenroy.minimaltodo.eval_wi$w)
===============================================================================
  c    public removeCallbacks()
  c    public setDragger(android.support.v4.widget.ViewDragHelper)
  c    public onEdgeDragStarted(int,int)
  d    public clampViewPositionVertical(android.view.View,int,int)
  j    private closeOtherDrawer()
  j    public getViewHorizontalDragRange(android.view.View)
  q    public onViewCaptured(android.view.View,int)
  q    public onViewDragStateChanged(int)
  r    static access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback)
  s    private peekDrawer()
  t    public onViewReleased(android.view.View,float,float)
  t    public onEdgeLock(int)
  v    public onViewPositionChanged(android.view.View,int,int,int,int)
  w    public tryCaptureView(android.view.View,int)
  x    public clampViewPositionHorizontal(android.view.View,int,int)
  z    public onEdgeTouched(int,int)

android.support.v4.widget.DrawerLayout$ViewDragCallback$1        (com.rubenroy.minimaltodo.eval_wi$w$1)
===============================================================================
  run  public run()

android.support.v4.widget.DrawerLayout$ViewDragCallback$NullPointerException     (com.rubenroy.minimaltodo.eval_y5)
===============================================================================
  No methods

android.support.v4.widget.DrawerLayoutCompatApi21        (com.rubenroy.minimaltodo.eval_uh)
===============================================================================
  d    public static configureApplyInsets(android.view.View)
  j    public static getDefaultStatusBarBackground(android.content.Context)
  j    public static applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int)
  o    public static getTopInset(java.lang.Object)
  v    public static dispatchChildInsets(android.view.View,java.lang.Object,int)

android.support.v4.widget.DrawerLayoutCompatApi21$Exception      (com.rubenroy.minimaltodo.eval_vp)
===============================================================================
  No methods

android.support.v4.widget.DrawerLayoutCompatApi21$InsetsListener (com.rubenroy.minimaltodo.eval_uh$v)
===============================================================================
  onApplyWindowInsets  public onApplyWindowInsets(android.view.View,android.view.WindowInsets)

android.support.v4.widget.DrawerLayoutImpl       (com.rubenroy.minimaltodo.eval_s8)
===============================================================================
  r    public abstract setChildInsets(java.lang.Object,boolean)

android.support.v4.widget.DrawerLayoutImpl$ParseException        (com.rubenroy.minimaltodo.eval_k5)
===============================================================================
  No methods

android.support.v4.widget.EdgeEffectCompat       (com.rubenroy.minimaltodo.eval__k)
===============================================================================
  eval_c   public finish()
  eval_d   public onPull(float,float)
  k        public setSize(int,int)
  l        public onRelease()
  q        public draw(android.graphics.Canvas)
  r        public isFinished()
  r        public onAbsorb(int)
  s        public onPull(float)

android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl    (com.rubenroy.minimaltodo.eval__k$t)
===============================================================================
  a    public onPull(java.lang.Object,float)
  f    public onRelease(java.lang.Object)
  i    public newEdgeEffect(android.content.Context)
  m    public finish(java.lang.Object)
  m    public setSize(java.lang.Object,int,int)
  n    public isFinished(java.lang.Object)
  n    public onAbsorb(java.lang.Object,int)
  p    public draw(java.lang.Object,android.graphics.Canvas)
  t    public onPull(java.lang.Object,float,float)

android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl     (com.rubenroy.minimaltodo.eval__k$h)
===============================================================================
  a    public onPull(java.lang.Object,float)
  f    public onRelease(java.lang.Object)
  i    public newEdgeEffect(android.content.Context)
  m    public finish(java.lang.Object)
  m    public setSize(java.lang.Object,int,int)
  n    public isFinished(java.lang.Object)
  n    public onAbsorb(java.lang.Object,int)
  p    public draw(java.lang.Object,android.graphics.Canvas)
  t    public onPull(java.lang.Object,float,float)

android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl        (com.rubenroy.minimaltodo.eval__k$q)
===============================================================================
  a    public abstract onPull(java.lang.Object,float)
  f    public abstract onRelease(java.lang.Object)
  i    public abstract newEdgeEffect(android.content.Context)
  m    public abstract finish(java.lang.Object)
  m    public abstract setSize(java.lang.Object,int,int)
  n    public abstract isFinished(java.lang.Object)
  n    public abstract onAbsorb(java.lang.Object,int)
  p    public abstract draw(java.lang.Object,android.graphics.Canvas)
  t    public abstract onPull(java.lang.Object,float,float)

android.support.v4.widget.EdgeEffectCompat$EdgeEffectLollipopImpl        (com.rubenroy.minimaltodo.eval__k$y)
===============================================================================
  t    public onPull(java.lang.Object,float,float)

android.support.v4.widget.EdgeEffectCompat$ParseException        (com.rubenroy.minimaltodo.eval_db)
===============================================================================
  No methods

android.support.v4.widget.EdgeEffectCompatIcs    (com.rubenroy.minimaltodo.eval_te)
===============================================================================
  eval_q   public static finish(java.lang.Object)
  g        public static draw(java.lang.Object,android.graphics.Canvas)
  l        public static isFinished(java.lang.Object)
  m        public static onAbsorb(java.lang.Object,int)
  n        public static setSize(java.lang.Object,int,int)
  q        public static onPull(java.lang.Object,float)
  w        public static newEdgeEffect(android.content.Context)
  y        public static onRelease(java.lang.Object)

android.support.v4.widget.EdgeEffectCompatIcs$NullPointerException       (com.rubenroy.minimaltodo.eval_qh)
===============================================================================
  No methods

android.support.v4.widget.EdgeEffectCompatLollipop       (com.rubenroy.minimaltodo.eval_yp)
===============================================================================
  v    public static onPull(java.lang.Object,float,float)

android.support.v4.widget.EdgeEffectCompatLollipop$NullPointerException  (com.rubenroy.minimaltodo.eval_xh)
===============================================================================
  No methods

android.support.v4.widget.ExploreByTouchHelper   (com.rubenroy.minimaltodo.eval__1)
===============================================================================
  a        private updateHoveredVirtualView(int)
  b        protected abstract getVisibleVirtualViews(java.util.List)
  d        private manageFocusForChild(int,int,android.os.Bundle)
  e        private performAction(int,int,android.os.Bundle)
  eval_c   private requestAccessibilityFocus(int)
  eval_d   protected abstract onPopulateNodeForVirtualView(int,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  eval_p   public dispatchHoverEvent(android.view.MotionEvent)
  eval_r   private createNodeForHost()
  eval_v   private clearAccessibilityFocus(int)
  eval_z   private performActionForChild(int,int,android.os.Bundle)
  f        public onPopulateNodeForHost(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  f        private createNodeForChild(int)
  g        static access$100(android.support.v4.widget.ExploreByTouchHelper,int)
  g        public getAccessibilityNodeProvider(android.view.View)
  i        private createNode(int)
  j        public invalidateVirtualView(int)
  k        private createEventForHost(int)
  k        protected abstract onPerformActionForVirtualView(int,int,android.os.Bundle)
  l        public getFocusedVirtualView()
  m        static access$200(android.support.v4.widget.ExploreByTouchHelper,int,int,android.os.Bundle)
  s        private intersectVisibleToUser(android.graphics.Rect)
  s        protected abstract onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent)
  s        private createEvent(int,int)
  t        private createEventForChild(int,int)
  u        public sendEventForVirtualView(int,int)
  w        protected abstract getVirtualViewAt(float,float)
  w        private performActionForHost(int,android.os.Bundle)
  z        public invalidateRoot()
  z        private isAccessibilityFocused(int)

android.support.v4.widget.ExploreByTouchHelper$1 (com.rubenroy.minimaltodo.eval__1$1)
===============================================================================
  No methods

android.support.v4.widget.ExploreByTouchHelper$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_yv)
===============================================================================
  No methods

android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider        (com.rubenroy.minimaltodo.eval__1$b)
===============================================================================
  h    public performAction(int,int,android.os.Bundle)
  j    public createAccessibilityNodeInfo(int)

android.support.v4.widget.ListPopupWindowCompat  (com.rubenroy.minimaltodo.eval_ob)
===============================================================================
  l    public static createDragToOpenListener(java.lang.Object,android.view.View)

android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl  (com.rubenroy.minimaltodo.eval_ob$e)
===============================================================================
  a    public createDragToOpenListener(java.lang.Object,android.view.View)

android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl        (com.rubenroy.minimaltodo.eval_ob$v)
===============================================================================
  a    public createDragToOpenListener(java.lang.Object,android.view.View)

android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl      (com.rubenroy.minimaltodo.eval_ob$y)
===============================================================================
  a    public abstract createDragToOpenListener(java.lang.Object,android.view.View)

android.support.v4.widget.ListPopupWindowCompat$ParseException   (com.rubenroy.minimaltodo.eval_c6)
===============================================================================
  No methods

android.support.v4.widget.ListPopupWindowCompatKitKat    (com.rubenroy.minimaltodo.eval_h7)
===============================================================================
  w    public static createDragToOpenListener(java.lang.Object,android.view.View)

android.support.v4.widget.ListPopupWindowCompatKitKat$IOException        (com.rubenroy.minimaltodo.eval__t)
===============================================================================
  No methods

android.support.v4.widget.ListViewAutoScrollHelper       (com.rubenroy.minimaltodo.eval_qy)
===============================================================================
  a    public scrollTargetBy(int,int)
  i    public canTargetScrollHorizontally(int)
  m    public canTargetScrollVertically(int)

android.support.v4.widget.ListViewAutoScrollHelper$NullPointerException  (com.rubenroy.minimaltodo.eval_yt)
===============================================================================
  No methods

android.support.v4.widget.MaterialProgressDrawable       (com.rubenroy.minimaltodo.eval_rv)
===============================================================================
  c                    static access$100(android.support.v4.widget.MaterialProgressDrawable,android.support.v4.widget.MaterialProgressDrawable$Ring)
  e                    private getMinProgressArc(android.support.v4.widget.MaterialProgressDrawable$Ring)
  e                    private applyFinishTranslation(float,android.support.v4.widget.MaterialProgressDrawable$Ring)
  e                    public setBackgroundColor(int)
  g                    private setSizeParameters(double,double,double,double,float,float)
  m                    static access$300()
  m                    static access$000(android.support.v4.widget.MaterialProgressDrawable,float,android.support.v4.widget.MaterialProgressDrawable$Ring)
  n                    static access$400(android.support.v4.widget.MaterialProgressDrawable)
  o                    private updateRingColor(float,android.support.v4.widget.MaterialProgressDrawable$Ring)
  o                    public updateSizes(int)
  p                    setRotation(float)
  r                    private setupAnimators()
  r                    public showArrow(boolean)
  s                    public setStartEndTrim(float,float)
  t                    static access$200(android.support.v4.widget.MaterialProgressDrawable,float,android.support.v4.widget.MaterialProgressDrawable$Ring)
  u                    private getRotation()
  u                    static access$402(android.support.v4.widget.MaterialProgressDrawable,float)
  u                    public setArrowScale(float)
  v                    private evaluateColorChange(float,int,int)
  w                    public setProgressRotation(float)
  y                    public transient setColorSchemeColors(int[])
  draw                 public draw(android.graphics.Canvas)
  getAlpha             public getAlpha()
  getIntrinsicHeight   public getIntrinsicHeight()
  getIntrinsicWidth    public getIntrinsicWidth()
  getOpacity           public getOpacity()
  isRunning            public isRunning()
  setAlpha             public setAlpha(int)
  setColorFilter       public setColorFilter(android.graphics.ColorFilter)
  start                public start()
  stop                 public stop()

android.support.v4.widget.MaterialProgressDrawable$1     (com.rubenroy.minimaltodo.eval_rv$1)
===============================================================================
  applyTransformation  public applyTransformation(float,android.view.animation.Transformation)

android.support.v4.widget.MaterialProgressDrawable$2     (com.rubenroy.minimaltodo.eval_rv$2)
===============================================================================
  onAnimationEnd       public onAnimationEnd(android.view.animation.Animation)
  onAnimationRepeat    public onAnimationRepeat(android.view.animation.Animation)
  onAnimationStart     public onAnimationStart(android.view.animation.Animation)

android.support.v4.widget.MaterialProgressDrawable$3     (com.rubenroy.minimaltodo.eval_rv$3)
===============================================================================
  invalidateDrawable   public invalidateDrawable(android.graphics.drawable.Drawable)
  scheduleDrawable     public scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
  unscheduleDrawable   public unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)

android.support.v4.widget.MaterialProgressDrawable$NullPointerException  (com.rubenroy.minimaltodo.eval_ti)
===============================================================================
  No methods

android.support.v4.widget.MaterialProgressDrawable$ProgressDrawableSize  (com.rubenroy.minimaltodo.eval_rv$a)
===============================================================================
  No methods

android.support.v4.widget.MaterialProgressDrawable$Ring  (com.rubenroy.minimaltodo.eval_rv$g)
===============================================================================
  a        public getNextColor()
  a        public setStrokeWidth(float)
  b        public setColors(int[])
  c        public resetOriginals()
  d        public getAlpha()
  e        public getStrokeWidth()
  e        public setEndTrim(float)
  eval_b   public getStartingColor()
  eval_c   public getCenterRadius()
  eval_e   public getRotation()
  eval_f   private getNextColorIndex()
  eval_i   public getStartingRotation()
  f        public setArrowScale(float)
  f        public setArrowDimensions(float,float)
  h        public setRotation(float)
  h        public setColorIndex(int)
  j        public setCenterRadius(double)
  j        public setBackgroundColor(int)
  k        private drawTriangle(android.graphics.Canvas,float,float,android.graphics.Rect)
  l        public setAlpha(int)
  m        public storeOriginals()
  o        private invalidateSelf()
  p        public goToNextColor()
  p        public setStartTrim(float)
  q        public setInsets(int,int)
  s        public getStartingStartTrim()
  t        public getEndTrim()
  t        public draw(android.graphics.Canvas,android.graphics.Rect)
  u        public setColor(int)
  v        public getStartTrim()
  v        public setShowArrow(boolean)
  w        public getInsets()
  x        public setColorFilter(android.graphics.ColorFilter)
  z        public getStartingEndTrim()

android.support.v4.widget.NestedScrollView       (com.rubenroy.minimaltodo.eval_as)
===============================================================================
  a                                private static isViewDescendantOf(android.view.View,android.view.View)
  b                                public getMaxScrollAmount()
  b                                protected computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)
  b                                private findFocusableViewInBounds(boolean,int,int)
  c                                public isFillViewport()
  d                                private onSecondaryPointerUp(android.view.MotionEvent)
  d                                private isOffScreen(android.view.View)
  e                                private endDrag()
  eval_k                           private flingWithNestedDispatch(int)
  eval_u                           private getScrollRange()
  eval_y                           private initVelocityTrackerIfNotExists()
  f                                private inChild(int,int)
  h                                public pageScroll(int)
  i                                private recycleVelocityTracker()
  i                                private scrollAndFocus(int,int,int)
  j                                private doScrollY(int)
  j                                public final smoothScrollTo(int,int)
  k                                overScrollByCompat(int,int,int,int,int,int,int,int,boolean)
  o                                private canScroll()
  p                                private scrollToChild(android.view.View)
  q                                private isWithinDeltaOfScreen(android.view.View,int,int)
  r                                private initOrResetVelocityTracker()
  s                                public fling(int)
  u                                public isSmoothScrollingEnabled()
  u                                private scrollToChildRect(android.graphics.Rect,boolean)
  u                                public setSmoothScrollingEnabled(boolean)
  v                                private initScrollView()
  v                                public setOnScrollChangeListener(android.support.v4.widget.NestedScrollView$OnScrollChangeListener)
  v                                public final smoothScrollBy(int,int)
  w                                private getVerticalScrollFactorCompat()
  w                                static access$000(android.support.v4.widget.NestedScrollView)
  w                                private static clamp(int,int,int)
  x                                private ensureGlows()
  x                                public setFillViewport(boolean)
  x                                public fullScroll(int)
  y                                public arrowScroll(int)
  z                                public executeKeyEvent(android.view.KeyEvent)
  addView                          public addView(android.view.View)
  addView                          public addView(android.view.View,android.view.ViewGroup$LayoutParams)
  addView                          public addView(android.view.View,int)
  addView                          public addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
  computeHorizontalScrollExtent    public computeHorizontalScrollExtent()
  computeHorizontalScrollOffset    public computeHorizontalScrollOffset()
  computeHorizontalScrollRange     public computeHorizontalScrollRange()
  computeScroll                    public computeScroll()
  computeVerticalScrollExtent      public computeVerticalScrollExtent()
  computeVerticalScrollOffset      public computeVerticalScrollOffset()
  computeVerticalScrollRange       public computeVerticalScrollRange()
  dispatchKeyEvent                 public dispatchKeyEvent(android.view.KeyEvent)
  dispatchNestedFling              public dispatchNestedFling(float,float,boolean)
  dispatchNestedPreFling           public dispatchNestedPreFling(float,float)
  dispatchNestedPreScroll          public dispatchNestedPreScroll(int,int,int[],int[])
  dispatchNestedScroll             public dispatchNestedScroll(int,int,int,int,int[])
  draw                             public draw(android.graphics.Canvas)
  getBottomFadingEdgeStrength      protected getBottomFadingEdgeStrength()
  getNestedScrollAxes              public getNestedScrollAxes()
  getTopFadingEdgeStrength         protected getTopFadingEdgeStrength()
  hasNestedScrollingParent         public hasNestedScrollingParent()
  isNestedScrollingEnabled         public isNestedScrollingEnabled()
  measureChild                     protected measureChild(android.view.View,int,int)
  measureChildWithMargins          protected measureChildWithMargins(android.view.View,int,int,int,int)
  onAttachedToWindow               public onAttachedToWindow()
  onGenericMotionEvent             public onGenericMotionEvent(android.view.MotionEvent)
  onInterceptTouchEvent            public onInterceptTouchEvent(android.view.MotionEvent)
  onLayout                         protected onLayout(boolean,int,int,int,int)
  onMeasure                        protected onMeasure(int,int)
  onNestedFling                    public onNestedFling(android.view.View,float,float,boolean)
  onNestedPreFling                 public onNestedPreFling(android.view.View,float,float)
  onNestedPreScroll                public onNestedPreScroll(android.view.View,int,int,int[])
  onNestedScroll                   public onNestedScroll(android.view.View,int,int,int,int)
  onNestedScrollAccepted           public onNestedScrollAccepted(android.view.View,android.view.View,int)
  onOverScrolled                   protected onOverScrolled(int,int,boolean,boolean)
  onRequestFocusInDescendants      protected onRequestFocusInDescendants(int,android.graphics.Rect)
  onRestoreInstanceState           protected onRestoreInstanceState(android.os.Parcelable)
  onSaveInstanceState              protected onSaveInstanceState()
  onScrollChanged                  protected onScrollChanged(int,int,int,int)
  onSizeChanged                    protected onSizeChanged(int,int,int,int)
  onStartNestedScroll              public onStartNestedScroll(android.view.View,android.view.View,int)
  onStopNestedScroll               public onStopNestedScroll(android.view.View)
  onTouchEvent                     public onTouchEvent(android.view.MotionEvent)
  requestChildFocus                public requestChildFocus(android.view.View,android.view.View)
  requestChildRectangleOnScreen    public requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)
  requestDisallowInterceptTouchEvent   public requestDisallowInterceptTouchEvent(boolean)
  requestLayout                    public requestLayout()
  scrollTo                         public scrollTo(int,int)
  setNestedScrollingEnabled        public setNestedScrollingEnabled(boolean)
  shouldDelayChildPressedState     public shouldDelayChildPressedState()
  startNestedScroll                public startNestedScroll(int)
  stopNestedScroll                 public stopNestedScroll()

android.support.v4.widget.NestedScrollView$AccessibilityDelegate (com.rubenroy.minimaltodo.eval_as$f)
===============================================================================
  d    public onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  x    public performAccessibilityAction(android.view.View,int,android.os.Bundle)
  z    public onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)

android.support.v4.widget.NestedScrollView$OnScrollChangeListener        (com.rubenroy.minimaltodo.eval_as$c)
===============================================================================
  n    public abstract onScrollChange(android.support.v4.widget.NestedScrollView,int,int,int,int)

android.support.v4.widget.NestedScrollView$ParseException        (com.rubenroy.minimaltodo.eval_hi)
===============================================================================
  No methods

android.support.v4.widget.NestedScrollView$SavedState    (com.rubenroy.minimaltodo.eval_as$k)
===============================================================================
  toString         public toString()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.widget.NestedScrollView$SavedState$1  (com.rubenroy.minimaltodo.eval_as$k$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.widget.NestedScrollView$SavedState$IOException        (com.rubenroy.minimaltodo.eval_m6)
===============================================================================
  No methods

android.support.v4.widget.PopupMenuCompat        (com.rubenroy.minimaltodo.eval_n7)
===============================================================================
  n    public static getDragToOpenListener(java.lang.Object)

android.support.v4.widget.PopupMenuCompat$ArrayOutOfBoundsException      (com.rubenroy.minimaltodo.eval_lb)
===============================================================================
  No methods

android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl      (com.rubenroy.minimaltodo.eval_n7$j)
===============================================================================
  h    public getDragToOpenListener(java.lang.Object)

android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl    (com.rubenroy.minimaltodo.eval_n7$m)
===============================================================================
  h    public getDragToOpenListener(java.lang.Object)

android.support.v4.widget.PopupMenuCompat$PopupMenuImpl  (com.rubenroy.minimaltodo.eval_n7$p)
===============================================================================
  h    public abstract getDragToOpenListener(java.lang.Object)

android.support.v4.widget.PopupMenuCompatKitKat  (com.rubenroy.minimaltodo.eval_nv)
===============================================================================
  f    public static getDragToOpenListener(java.lang.Object)

android.support.v4.widget.PopupMenuCompatKitKat$ParseException   (com.rubenroy.minimaltodo.eval_l8)
===============================================================================
  No methods

android.support.v4.widget.PopupWindowCompat      (com.rubenroy.minimaltodo.eval_zb)
===============================================================================
  q    public static getWindowLayoutType(android.widget.PopupWindow)
  s    public static showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
  t    public static getOverlapAnchor(android.widget.PopupWindow)
  x    public static setOverlapAnchor(android.widget.PopupWindow,boolean)
  z    public static setWindowLayoutType(android.widget.PopupWindow,int)

android.support.v4.widget.PopupWindowCompat$Api21PopupWindowImpl (com.rubenroy.minimaltodo.eval_zb$e)
===============================================================================
  a    public getOverlapAnchor(android.widget.PopupWindow)
  y    public setOverlapAnchor(android.widget.PopupWindow,boolean)

android.support.v4.widget.PopupWindowCompat$Api23PopupWindowImpl (com.rubenroy.minimaltodo.eval_zb$f)
===============================================================================
  a    public getOverlapAnchor(android.widget.PopupWindow)
  b    public getWindowLayoutType(android.widget.PopupWindow)
  c    public setWindowLayoutType(android.widget.PopupWindow,int)
  y    public setOverlapAnchor(android.widget.PopupWindow,boolean)

android.support.v4.widget.PopupWindowCompat$BasePopupWindowImpl  (com.rubenroy.minimaltodo.eval_zb$eval_v)
===============================================================================
  a    public getOverlapAnchor(android.widget.PopupWindow)
  b    public getWindowLayoutType(android.widget.PopupWindow)
  c    public setWindowLayoutType(android.widget.PopupWindow,int)
  v    public showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
  y    public setOverlapAnchor(android.widget.PopupWindow,boolean)

android.support.v4.widget.PopupWindowCompat$GingerbreadPopupWindowImpl   (com.rubenroy.minimaltodo.eval_zb$_)
===============================================================================
  b    public getWindowLayoutType(android.widget.PopupWindow)
  c    public setWindowLayoutType(android.widget.PopupWindow,int)

android.support.v4.widget.PopupWindowCompat$IOException  (com.rubenroy.minimaltodo.eval__5)
===============================================================================
  No methods

android.support.v4.widget.PopupWindowCompat$KitKatPopupWindowImpl        (com.rubenroy.minimaltodo.eval_zb$k)
===============================================================================
  v    public showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)

android.support.v4.widget.PopupWindowCompat$PopupWindowImpl      (com.rubenroy.minimaltodo.eval_zb$n)
===============================================================================
  a    public abstract getOverlapAnchor(android.widget.PopupWindow)
  b    public abstract getWindowLayoutType(android.widget.PopupWindow)
  c    public abstract setWindowLayoutType(android.widget.PopupWindow,int)
  v    public abstract showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
  y    public abstract setOverlapAnchor(android.widget.PopupWindow,boolean)

android.support.v4.widget.PopupWindowCompatApi21 (com.rubenroy.minimaltodo.eval_kg)
===============================================================================
  f    static setOverlapAnchor(android.widget.PopupWindow,boolean)
  o    static getOverlapAnchor(android.widget.PopupWindow)

android.support.v4.widget.PopupWindowCompatApi21$IOException     (com.rubenroy.minimaltodo.eval__a)
===============================================================================
  No methods

android.support.v4.widget.PopupWindowCompatApi23 (com.rubenroy.minimaltodo.eval_a6)
===============================================================================
  l    static getOverlapAnchor(android.widget.PopupWindow)
  m    static getWindowLayoutType(android.widget.PopupWindow)
  n    static setWindowLayoutType(android.widget.PopupWindow,int)
  r    static setOverlapAnchor(android.widget.PopupWindow,boolean)

android.support.v4.widget.PopupWindowCompatApi23$IOException     (com.rubenroy.minimaltodo.eval_ls)
===============================================================================
  No methods

android.support.v4.widget.PopupWindowCompatGingerbread   (com.rubenroy.minimaltodo.eval_oo)
===============================================================================
  f    static setWindowLayoutType(android.widget.PopupWindow,int)
  p    static getWindowLayoutType(android.widget.PopupWindow)

android.support.v4.widget.PopupWindowCompatGingerbread$Exception (com.rubenroy.minimaltodo.eval_am)
===============================================================================
  No methods

android.support.v4.widget.PopupWindowCompatKitKat        (com.rubenroy.minimaltodo.eval__0)
===============================================================================
  n    public static showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)

android.support.v4.widget.PopupWindowCompatKitKat$Exception      (com.rubenroy.minimaltodo.eval_yj)
===============================================================================
  No methods

android.support.v4.widget.ResourceCursorAdapter  (com.rubenroy.minimaltodo.eval_uc)
===============================================================================
  l    public newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
  o    public setViewResource(int)
  u    public setDropDownViewResource(int)
  x    public newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)

android.support.v4.widget.ResourceCursorAdapter$ParseException   (com.rubenroy.minimaltodo.eval_mv)
===============================================================================
  No methods

android.support.v4.widget.ScrollerCompat (com.rubenroy.minimaltodo.eval_x2)
===============================================================================
  a        public getFinalX()
  b        public abortAnimation()
  c        public startScroll(int,int,int,int,int)
  d        public isOverScrolled()
  e        public springBack(int,int,int,int,int,int)
  eval_q   public computeScrollOffset()
  g        public static create(android.content.Context,android.view.animation.Interpolator)
  h        public getCurrVelocity()
  i        public getCurrY()
  i        public notifyHorizontalEdgeReached(int,int,int)
  j        public fling(int,int,int,int,int,int,int,int)
  k        public getFinalY()
  n        public isFinished()
  o        public static create(android.content.Context)
  u        public fling(int,int,int,int,int,int,int,int,int,int)
  v        public getCurrX()
  x        public notifyVerticalEdgeReached(int,int,int)
  y        public startScroll(int,int,int,int)

android.support.v4.widget.ScrollerCompat$NullPointerException    (com.rubenroy.minimaltodo.eval_e7)
===============================================================================
  No methods

android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl      (com.rubenroy.minimaltodo.eval_x2$d)
===============================================================================
  a        public abstract getCurrY(java.lang.Object)
  c        public abstract isFinished(java.lang.Object)
  e        public abstract computeScrollOffset(java.lang.Object)
  eval_a   public abstract getFinalX(java.lang.Object)
  eval_z   public abstract getFinalY(java.lang.Object)
  g        public abstract springBack(java.lang.Object,int,int,int,int,int,int)
  g        public abstract fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int)
  h        public abstract getCurrVelocity(java.lang.Object)
  h        public abstract notifyHorizontalEdgeReached(java.lang.Object,int,int,int)
  j        public abstract createScroller(android.content.Context,android.view.animation.Interpolator)
  j        public abstract notifyVerticalEdgeReached(java.lang.Object,int,int,int)
  n        public abstract isOverScrolled(java.lang.Object)
  r        public abstract startScroll(java.lang.Object,int,int,int,int)
  s        public abstract getCurrX(java.lang.Object)
  s        public abstract fling(java.lang.Object,int,int,int,int,int,int,int,int)
  t        public abstract abortAnimation(java.lang.Object)
  x        public abstract startScroll(java.lang.Object,int,int,int,int,int)

android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase  (com.rubenroy.minimaltodo.eval_x2$u)
===============================================================================
  a        public getCurrY(java.lang.Object)
  c        public isFinished(java.lang.Object)
  e        public computeScrollOffset(java.lang.Object)
  eval_a   public getFinalX(java.lang.Object)
  eval_z   public getFinalY(java.lang.Object)
  g        public springBack(java.lang.Object,int,int,int,int,int,int)
  g        public fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int)
  h        public getCurrVelocity(java.lang.Object)
  h        public notifyHorizontalEdgeReached(java.lang.Object,int,int,int)
  j        public createScroller(android.content.Context,android.view.animation.Interpolator)
  j        public notifyVerticalEdgeReached(java.lang.Object,int,int,int)
  n        public isOverScrolled(java.lang.Object)
  r        public startScroll(java.lang.Object,int,int,int,int)
  s        public getCurrX(java.lang.Object)
  s        public fling(java.lang.Object,int,int,int,int,int,int,int,int)
  t        public abortAnimation(java.lang.Object)
  x        public startScroll(java.lang.Object,int,int,int,int,int)

android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread   (com.rubenroy.minimaltodo.eval_x2$e)
===============================================================================
  a        public getCurrY(java.lang.Object)
  c        public isFinished(java.lang.Object)
  e        public computeScrollOffset(java.lang.Object)
  eval_a   public getFinalX(java.lang.Object)
  eval_z   public getFinalY(java.lang.Object)
  g        public springBack(java.lang.Object,int,int,int,int,int,int)
  g        public fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int)
  h        public getCurrVelocity(java.lang.Object)
  h        public notifyHorizontalEdgeReached(java.lang.Object,int,int,int)
  j        public createScroller(android.content.Context,android.view.animation.Interpolator)
  j        public notifyVerticalEdgeReached(java.lang.Object,int,int,int)
  n        public isOverScrolled(java.lang.Object)
  r        public startScroll(java.lang.Object,int,int,int,int)
  s        public getCurrX(java.lang.Object)
  s        public fling(java.lang.Object,int,int,int,int,int,int,int,int)
  t        public abortAnimation(java.lang.Object)
  x        public startScroll(java.lang.Object,int,int,int,int,int)

android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs   (com.rubenroy.minimaltodo.eval_x2$z)
===============================================================================
  h    public getCurrVelocity(java.lang.Object)

android.support.v4.widget.ScrollerCompatGingerbread      (com.rubenroy.minimaltodo.eval_p6)
===============================================================================
  a        public static createScroller(android.content.Context,android.view.animation.Interpolator)
  b        public static computeScrollOffset(java.lang.Object)
  b        public static fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int)
  c        public static startScroll(java.lang.Object,int,int,int,int)
  d        public static getCurrY(java.lang.Object)
  d        public static fling(java.lang.Object,int,int,int,int,int,int,int,int)
  eval_a   public static getCurrX(java.lang.Object)
  eval_e   public static abortAnimation(java.lang.Object)
  h        public static notifyHorizontalEdgeReached(java.lang.Object,int,int,int)
  o        public static getFinalX(java.lang.Object)
  p        public static isOverScrolled(java.lang.Object)
  r        public static startScroll(java.lang.Object,int,int,int,int,int)
  s        public static notifyVerticalEdgeReached(java.lang.Object,int,int,int)
  x        public static springBack(java.lang.Object,int,int,int,int,int,int)
  y        public static isFinished(java.lang.Object)
  z        public static getFinalY(java.lang.Object)

android.support.v4.widget.ScrollerCompatGingerbread$ArrayOutOfBoundsException    (com.rubenroy.minimaltodo.eval_e2)
===============================================================================
  No methods

android.support.v4.widget.ScrollerCompatIcs      (com.rubenroy.minimaltodo.eval_t0)
===============================================================================
  q    public static getCurrVelocity(java.lang.Object)

android.support.v4.widget.ScrollerCompatIcs$IOException  (com.rubenroy.minimaltodo.eval_ev)
===============================================================================
  No methods

android.support.v4.widget.SearchViewCompat       (com.rubenroy.minimaltodo.eval_y6)
===============================================================================
  a        public static setSearchableInfo(android.view.View,android.content.ComponentName)
  c        public static setIconified(android.view.View,boolean)
  d        public static getQuery(android.view.View)
  eval__   public static isQueryRefinementEnabled(android.view.View)
  eval_g   public static setQueryRefinementEnabled(android.view.View,boolean)
  f        static access$000()
  f        public static setInputType(android.view.View,int)
  l        public static setQueryHint(android.view.View,java.lang.CharSequence)
  n        public static setImeOptions(android.view.View,int)
  p        public static newSearchView(android.content.Context)
  p        public static setSubmitButtonEnabled(android.view.View,boolean)
  q        public static isIconified(android.view.View)
  t        public static setQuery(android.view.View,java.lang.CharSequence,boolean)
  u        public static isSubmitButtonEnabled(android.view.View)
  u        public static setMaxWidth(android.view.View,int)
  x        public static setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat)
  z        public static setOnCloseListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat)

android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat (com.rubenroy.minimaltodo.eval_y6$y)
===============================================================================
  t    public onClose()

android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat     (com.rubenroy.minimaltodo.eval_y6$p)
===============================================================================
  a    public onQueryTextSubmit(java.lang.String)
  m    public onQueryTextChange(java.lang.String)

android.support.v4.widget.SearchViewCompat$ParseException        (com.rubenroy.minimaltodo.eval_nj)
===============================================================================
  No methods

android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl (com.rubenroy.minimaltodo.eval_y6$x)
===============================================================================
  i    public setSubmitButtonEnabled(android.view.View,boolean)
  k    public isQueryRefinementEnabled(android.view.View)
  k    public setMaxWidth(android.view.View,int)
  l    public setOnQueryTextListener(java.lang.Object,java.lang.Object)
  m    public newSearchView(android.content.Context)
  n    public newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat)
  o    public newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat)
  o    public setQueryHint(android.view.View,java.lang.CharSequence)
  p    public isSubmitButtonEnabled(android.view.View)
  p    public setIconified(android.view.View,boolean)
  q    public getQuery(android.view.View)
  r    public isIconified(android.view.View)
  u    public setSearchableInfo(android.view.View,android.content.ComponentName)
  u    public setQuery(android.view.View,java.lang.CharSequence,boolean)
  v    public setQueryRefinementEnabled(android.view.View,boolean)
  w    public setOnCloseListener(java.lang.Object,java.lang.Object)

android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1       (com.rubenroy.minimaltodo.eval_y6$x$1)
===============================================================================
  a    public onQueryTextSubmit(java.lang.String)
  n    public onQueryTextChange(java.lang.String)

android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2       (com.rubenroy.minimaltodo.eval_y6$x$2)
===============================================================================
  m    public onClose()

android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$ParseException  (com.rubenroy.minimaltodo.eval_bk)
===============================================================================
  No methods

android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl       (com.rubenroy.minimaltodo.eval_y6$eval_l)
===============================================================================
  d    public setInputType(android.view.View,int)
  m    public newSearchView(android.content.Context)
  v    public setImeOptions(android.view.View,int)

android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl  (com.rubenroy.minimaltodo.eval_y6$f)
===============================================================================
  d    public abstract setInputType(android.view.View,int)
  i    public abstract setSubmitButtonEnabled(android.view.View,boolean)
  k    public abstract isQueryRefinementEnabled(android.view.View)
  k    public abstract setMaxWidth(android.view.View,int)
  l    public abstract setOnQueryTextListener(java.lang.Object,java.lang.Object)
  m    public abstract newSearchView(android.content.Context)
  n    public abstract newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat)
  o    public abstract newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat)
  o    public abstract setQueryHint(android.view.View,java.lang.CharSequence)
  p    public abstract isSubmitButtonEnabled(android.view.View)
  p    public abstract setIconified(android.view.View,boolean)
  q    public abstract getQuery(android.view.View)
  r    public abstract isIconified(android.view.View)
  u    public abstract setSearchableInfo(android.view.View,android.content.ComponentName)
  u    public abstract setQuery(android.view.View,java.lang.CharSequence,boolean)
  v    public abstract setQueryRefinementEnabled(android.view.View,boolean)
  v    public abstract setImeOptions(android.view.View,int)
  w    public abstract setOnCloseListener(java.lang.Object,java.lang.Object)

android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl      (com.rubenroy.minimaltodo.eval_y6$v)
===============================================================================
  d    public setInputType(android.view.View,int)
  i    public setSubmitButtonEnabled(android.view.View,boolean)
  k    public isQueryRefinementEnabled(android.view.View)
  k    public setMaxWidth(android.view.View,int)
  l    public setOnQueryTextListener(java.lang.Object,java.lang.Object)
  m    public newSearchView(android.content.Context)
  n    public newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat)
  o    public newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat)
  o    public setQueryHint(android.view.View,java.lang.CharSequence)
  p    public isSubmitButtonEnabled(android.view.View)
  p    public setIconified(android.view.View,boolean)
  q    public getQuery(android.view.View)
  r    public isIconified(android.view.View)
  u    public setSearchableInfo(android.view.View,android.content.ComponentName)
  u    public setQuery(android.view.View,java.lang.CharSequence,boolean)
  v    public setQueryRefinementEnabled(android.view.View,boolean)
  v    public setImeOptions(android.view.View,int)
  w    public setOnCloseListener(java.lang.Object,java.lang.Object)

android.support.v4.widget.SearchViewCompatHoneycomb      (com.rubenroy.minimaltodo.eval_d7)
===============================================================================
  a        public static getQuery(android.view.View)
  a        public static setSearchableInfo(android.view.View,android.content.ComponentName)
  b        public static setOnCloseListener(java.lang.Object,java.lang.Object)
  d        public static setSubmitButtonEnabled(android.view.View,boolean)
  e        public static isQueryRefinementEnabled(android.view.View)
  eval_c   public static setQueryRefinementEnabled(android.view.View,boolean)
  f        public static newOnCloseListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge)
  g        public static newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge)
  j        public static newSearchView(android.content.Context)
  m        public static setMaxWidth(android.view.View,int)
  m        public static setOnQueryTextListener(java.lang.Object,java.lang.Object)
  p        public static isSubmitButtonEnabled(android.view.View)
  p        public static setQueryHint(android.view.View,java.lang.CharSequence)
  q        public static setQuery(android.view.View,java.lang.CharSequence,boolean)
  u        public static isIconified(android.view.View)
  u        public static setIconified(android.view.View,boolean)

android.support.v4.widget.SearchViewCompatHoneycomb$1    (com.rubenroy.minimaltodo.eval_d7$1)
===============================================================================
  onQueryTextChange    public onQueryTextChange(java.lang.String)
  onQueryTextSubmit    public onQueryTextSubmit(java.lang.String)

android.support.v4.widget.SearchViewCompatHoneycomb$2    (com.rubenroy.minimaltodo.eval_d7$2)
===============================================================================
  onClose  public onClose()

android.support.v4.widget.SearchViewCompatHoneycomb$ArrayOutOfBoundsException    (com.rubenroy.minimaltodo.eval_w5)
===============================================================================
  No methods

android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge  (com.rubenroy.minimaltodo.eval_d7$a)
===============================================================================
  m    public abstract onClose()

android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge      (com.rubenroy.minimaltodo.eval_d7$i)
===============================================================================
  a    public abstract onQueryTextSubmit(java.lang.String)
  n    public abstract onQueryTextChange(java.lang.String)

android.support.v4.widget.SearchViewCompatIcs    (com.rubenroy.minimaltodo.eval_mp)
===============================================================================
  c        public static setImeOptions(android.view.View,int)
  eval_i   public static setInputType(android.view.View,int)
  v        public static newSearchView(android.content.Context)

android.support.v4.widget.SearchViewCompatIcs$MySearchView       (com.rubenroy.minimaltodo.eval_mp$c)
===============================================================================
  onActionViewCollapsed    public onActionViewCollapsed()

android.support.v4.widget.SearchViewCompatIcs$NullPointerException       (com.rubenroy.minimaltodo.eval_v0)
===============================================================================
  No methods

android.support.v4.widget.SimpleCursorAdapter    (com.rubenroy.minimaltodo.eval_u6)
===============================================================================
  a        public setViewText(android.widget.TextView,java.lang.String)
  eval_x   public getViewBinder()
  h        public convertToString(android.database.Cursor)
  h        public setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter)
  j        public getStringConversionColumn()
  k        public bindView(android.view.View,android.content.Context,android.database.Cursor)
  m        public setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder)
  n        public setViewImage(android.widget.ImageView,java.lang.String)
  r        private findColumns(java.lang.String[])
  u        public swapCursor(android.database.Cursor)
  y        public getCursorToStringConverter()
  y        public setStringConversionColumn(int)
  z        public changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[])

android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter    (com.rubenroy.minimaltodo.eval_u6$p)
===============================================================================
  c    public abstract convertToString(android.database.Cursor)

android.support.v4.widget.SimpleCursorAdapter$NullPointerException       (com.rubenroy.minimaltodo.eval_qu)
===============================================================================
  No methods

android.support.v4.widget.SimpleCursorAdapter$ViewBinder (com.rubenroy.minimaltodo.eval_u6$q)
===============================================================================
  x    public abstract setViewValue(android.view.View,android.database.Cursor,int)

android.support.v4.widget.SlidingPaneLayout      (com.rubenroy.minimaltodo.eval_ap)
===============================================================================
  a                            static access$600(android.support.v4.widget.SlidingPaneLayout,int)
  a                            private closePane(android.view.View,int)
  c                            public openPane()
  d                            public getParallaxDistance()
  d                            updateObscuredViewsVisibility(android.view.View)
  d                            protected canScroll(android.view.View,boolean,int,int,int)
  d                            public setShadowResourceLeft(int)
  e                            public closePane()
  e                            public setShadowResourceRight(int)
  eval_f                       public canSlide()
  eval_o                       public getCoveredFadeColor()
  eval_r                       public setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener)
  eval_t                       public isOpen()
  eval_t                       private static viewIsOpaque(android.view.View)
  eval_u                       public isSlideable()
  eval_y                       public smoothSlideOpen()
  g                            static access$300(android.support.v4.widget.SlidingPaneLayout)
  h                            setAllChildrenVisible()
  h                            public setShadowDrawableLeft(android.graphics.drawable.Drawable)
  h                            static access$800(android.support.v4.widget.SlidingPaneLayout)
  h                            static access$1000(android.support.v4.widget.SlidingPaneLayout,android.view.View)
  i                            private invalidateChildRegion(android.view.View)
  i                            public setParallaxDistance(int)
  j                            public smoothSlideClosed()
  j                            static access$200(android.support.v4.widget.SlidingPaneLayout)
  k                            public setShadowDrawable(android.graphics.drawable.Drawable)
  k                            static access$1100(android.support.v4.widget.SlidingPaneLayout)
  l                            public setShadowDrawableRight(android.graphics.drawable.Drawable)
  m                            dispatchOnPanelSlide(android.view.View)
  m                            private parallaxOtherViews(float)
  p                            private isLayoutRtlSupport()
  p                            dispatchOnPanelClosed(android.view.View)
  p                            public setShadowResource(int)
  q                            static access$100(android.support.v4.widget.SlidingPaneLayout)
  r                            private dimChildView(android.view.View,float,int)
  s                            static access$400(android.support.v4.widget.SlidingPaneLayout)
  t                            static access$502(android.support.v4.widget.SlidingPaneLayout,boolean)
  t                            private openPane(android.view.View,int)
  t                            private onPanelDragged(int)
  v                            static access$700(android.support.v4.widget.SlidingPaneLayout)
  v                            isDimmed(android.view.View)
  x                            public getSliderFadeColor()
  x                            dispatchOnPanelOpened(android.view.View)
  x                            public setSliderFadeColor(int)
  y                            public setCoveredFadeColor(int)
  z                            smoothSlideTo(float,int)
  checkLayoutParams            protected checkLayoutParams(android.view.ViewGroup$LayoutParams)
  computeScroll                public computeScroll()
  draw                         public draw(android.graphics.Canvas)
  drawChild                    protected drawChild(android.graphics.Canvas,android.view.View,long)
  generateDefaultLayoutParams  protected generateDefaultLayoutParams()
  generateLayoutParams         public generateLayoutParams(android.util.AttributeSet)
  generateLayoutParams         protected generateLayoutParams(android.view.ViewGroup$LayoutParams)
  onAttachedToWindow           protected onAttachedToWindow()
  onDetachedFromWindow         protected onDetachedFromWindow()
  onInterceptTouchEvent        public onInterceptTouchEvent(android.view.MotionEvent)
  onLayout                     protected onLayout(boolean,int,int,int,int)
  onMeasure                    protected onMeasure(int,int)
  onRestoreInstanceState       protected onRestoreInstanceState(android.os.Parcelable)
  onSaveInstanceState          protected onSaveInstanceState()
  onSizeChanged                protected onSizeChanged(int,int,int,int)
  onTouchEvent                 public onTouchEvent(android.view.MotionEvent)
  requestChildFocus            public requestChildFocus(android.view.View,android.view.View)

android.support.v4.widget.SlidingPaneLayout$1    (com.rubenroy.minimaltodo.eval_ap$1)
===============================================================================
  No methods

android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate        (com.rubenroy.minimaltodo.eval_ap$h)
===============================================================================
  d    public onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  j    private copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  s    public onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
  u    public filter(android.view.View)
  z    public onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)

android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable (com.rubenroy.minimaltodo.eval_ap$x)
===============================================================================
  run  public run()

android.support.v4.widget.SlidingPaneLayout$DragHelperCallback   (com.rubenroy.minimaltodo.eval_ap$d)
===============================================================================
  c    public onEdgeDragStarted(int,int)
  d    public clampViewPositionVertical(android.view.View,int,int)
  j    public getViewHorizontalDragRange(android.view.View)
  q    public onViewCaptured(android.view.View,int)
  q    public onViewDragStateChanged(int)
  t    public onViewReleased(android.view.View,float,float)
  v    public onViewPositionChanged(android.view.View,int,int,int,int)
  w    public tryCaptureView(android.view.View,int)
  x    public clampViewPositionHorizontal(android.view.View,int,int)

android.support.v4.widget.SlidingPaneLayout$IOException  (com.rubenroy.minimaltodo.eval_xx)
===============================================================================
  No methods

android.support.v4.widget.SlidingPaneLayout$LayoutParams (com.rubenroy.minimaltodo.eval_ap$q)
===============================================================================
  No methods

android.support.v4.widget.SlidingPaneLayout$PanelSlideListener   (com.rubenroy.minimaltodo.eval_ap$e)
===============================================================================
  eval_w   public abstract onPanelClosed(android.view.View)
  p        public abstract onPanelSlide(android.view.View,float)
  v        public abstract onPanelOpened(android.view.View)

android.support.v4.widget.SlidingPaneLayout$SavedState   (com.rubenroy.minimaltodo.eval_ap$eval__)
===============================================================================
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v4.widget.SlidingPaneLayout$SavedState$1 (com.rubenroy.minimaltodo.eval_ap$eval__$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v4.widget.SlidingPaneLayout$SavedState$Exception (com.rubenroy.minimaltodo.eval_ad)
===============================================================================
  No methods

android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener     (com.rubenroy.minimaltodo.eval_ap$eval_h)
===============================================================================
  eval_w   public onPanelClosed(android.view.View)
  p        public onPanelSlide(android.view.View,float)
  v        public onPanelOpened(android.view.View)

android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl       (com.rubenroy.minimaltodo.eval_ap$p)
===============================================================================
  i    public abstract invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View)

android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase   (com.rubenroy.minimaltodo.eval_ap$b)
===============================================================================
  i    public invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View)

android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB     (com.rubenroy.minimaltodo.eval_ap$eval_t)
===============================================================================
  i    public invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View)

android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1  (com.rubenroy.minimaltodo.eval_ap$eval_v)
===============================================================================
  i    public invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View)

android.support.v4.widget.Space  (com.rubenroy.minimaltodo.eval_pq)
===============================================================================
  h            private static getDefaultSize2(int,int)
  draw         public draw(android.graphics.Canvas)
  onMeasure    protected onMeasure(int,int)

android.support.v4.widget.Space$ArrayOutOfBoundsException        (com.rubenroy.minimaltodo.eval_pi)
===============================================================================
  No methods

android.support.v4.widget.SwipeProgressBar       (com.rubenroy.minimaltodo.eval_j8)
===============================================================================
  c    stop()
  i    private drawTrigger(android.graphics.Canvas,int,int)
  n    isRunning()
  n    setBounds(int,int,int,int)
  p    setColorScheme(int,int,int,int)
  q    start()
  y    setTriggerPercentage(float)
  z    draw(android.graphics.Canvas)
  z    private drawCircle(android.graphics.Canvas,float,float,int,float)

android.support.v4.widget.SwipeProgressBar$ParseException        (com.rubenroy.minimaltodo.eval_ei)
===============================================================================
  No methods

android.support.v4.widget.SwipeRefreshLayout     (com.rubenroy.minimaltodo.eval_ty)
===============================================================================
  a                                static access$400(android.support.v4.widget.SwipeRefreshLayout)
  a                                static access$802(android.support.v4.widget.SwipeRefreshLayout,int)
  a                                public setRefreshing(boolean)
  a                                private animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener)
  a                                public transient setColorSchemeResources(int[])
  b                                private isAlphaUsedForScale()
  b                                static access$200(android.support.v4.widget.SwipeRefreshLayout)
  d                                private createProgressView()
  e                                static access$600(android.support.v4.widget.SwipeRefreshLayout)
  e                                private moveSpinner(float)
  eval_r                           public isRefreshing()
  f                                private startScaleUpAnimation(android.view.animation.Animation$AnimationListener)
  g                                static access$800(android.support.v4.widget.SwipeRefreshLayout)
  g                                static access$500(android.support.v4.widget.SwipeRefreshLayout,int)
  g                                private startScaleDownReturnToStartAnimation(int,android.view.animation.Animation$AnimationListener)
  h                                static access$1400(android.support.v4.widget.SwipeRefreshLayout)
  h                                private startAlphaAnimation(int,int)
  j                                public setProgressViewEndTarget(boolean,int)
  j                                public setProgressBackgroundColor(int)
  k                                public setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener)
  k                                static access$1000(android.support.v4.widget.SwipeRefreshLayout,android.view.animation.Animation$AnimationListener)
  k                                private setRefreshing(boolean,boolean)
  m                                private startProgressAlphaStartAnimation()
  m                                static access$1300(android.support.v4.widget.SwipeRefreshLayout,float)
  m                                private startScaleDownAnimation(android.view.animation.Animation$AnimationListener)
  m                                private moveToStart(float)
  m                                public setSize(int)
  o                                public getProgressCircleDiameter()
  o                                private isAnimationRunning(android.view.animation.Animation)
  o                                public setProgressBackgroundColorSchemeResource(int)
  o                                private setTargetOffsetTopAndBottom(int,boolean)
  p                                private startProgressAlphaMaxAnimation()
  p                                public setProgressBackgroundColorSchemeColor(int)
  q                                private getMotionEventY(android.view.MotionEvent,int)
  q                                private finishSpinner(float)
  r                                static access$1200(android.support.v4.widget.SwipeRefreshLayout)
  s                                static access$1100(android.support.v4.widget.SwipeRefreshLayout)
  s                                private onSecondaryPointerUp(android.view.MotionEvent)
  t                                public setDistanceToTriggerSync(int)
  u                                public setProgressViewOffset(boolean,int,int)
  u                                private setAnimationProgress(float)
  u                                private setColorViewAlpha(int)
  v                                static access$700(android.support.v4.widget.SwipeRefreshLayout,float)
  v                                public transient setColorSchemeColors(int[])
  w                                static access$000(android.support.v4.widget.SwipeRefreshLayout)
  x                                private ensureTarget()
  x                                private animateOffsetToCorrectPosition(int,android.view.animation.Animation$AnimationListener)
  x                                public transient setColorScheme(int[])
  y                                public canChildScrollUp()
  y                                static access$300(android.support.v4.widget.SwipeRefreshLayout)
  y                                static access$900(android.support.v4.widget.SwipeRefreshLayout,int,boolean)
  z                                static access$100(android.support.v4.widget.SwipeRefreshLayout)
  dispatchNestedFling              public dispatchNestedFling(float,float,boolean)
  dispatchNestedPreFling           public dispatchNestedPreFling(float,float)
  dispatchNestedPreScroll          public dispatchNestedPreScroll(int,int,int[],int[])
  dispatchNestedScroll             public dispatchNestedScroll(int,int,int,int,int[])
  getChildDrawingOrder             protected getChildDrawingOrder(int,int)
  getNestedScrollAxes              public getNestedScrollAxes()
  hasNestedScrollingParent         public hasNestedScrollingParent()
  isNestedScrollingEnabled         public isNestedScrollingEnabled()
  onInterceptTouchEvent            public onInterceptTouchEvent(android.view.MotionEvent)
  onLayout                         protected onLayout(boolean,int,int,int,int)
  onMeasure                        public onMeasure(int,int)
  onNestedFling                    public onNestedFling(android.view.View,float,float,boolean)
  onNestedPreFling                 public onNestedPreFling(android.view.View,float,float)
  onNestedPreScroll                public onNestedPreScroll(android.view.View,int,int,int[])
  onNestedScroll                   public onNestedScroll(android.view.View,int,int,int,int)
  onNestedScrollAccepted           public onNestedScrollAccepted(android.view.View,android.view.View,int)
  onStartNestedScroll              public onStartNestedScroll(android.view.View,android.view.View,int)
  onStopNestedScroll               public onStopNestedScroll(android.view.View)
  onTouchEvent                     public onTouchEvent(android.view.MotionEvent)
  requestDisallowInterceptTouchEvent   public requestDisallowInterceptTouchEvent(boolean)
  setNestedScrollingEnabled        public setNestedScrollingEnabled(boolean)
  startNestedScroll                public startNestedScroll(int)
  stopNestedScroll                 public stopNestedScroll()

android.support.v4.widget.SwipeRefreshLayout$1   (com.rubenroy.minimaltodo.eval_ty$1)
===============================================================================
  onAnimationEnd       public onAnimationEnd(android.view.animation.Animation)
  onAnimationRepeat    public onAnimationRepeat(android.view.animation.Animation)
  onAnimationStart     public onAnimationStart(android.view.animation.Animation)

android.support.v4.widget.SwipeRefreshLayout$2   (com.rubenroy.minimaltodo.eval_ty$2)
===============================================================================
  applyTransformation  public applyTransformation(float,android.view.animation.Transformation)

android.support.v4.widget.SwipeRefreshLayout$3   (com.rubenroy.minimaltodo.eval_ty$3)
===============================================================================
  applyTransformation  public applyTransformation(float,android.view.animation.Transformation)

android.support.v4.widget.SwipeRefreshLayout$4   (com.rubenroy.minimaltodo.eval_ty$4)
===============================================================================
  applyTransformation  public applyTransformation(float,android.view.animation.Transformation)

android.support.v4.widget.SwipeRefreshLayout$5   (com.rubenroy.minimaltodo.eval_ty$5)
===============================================================================
  onAnimationEnd       public onAnimationEnd(android.view.animation.Animation)
  onAnimationRepeat    public onAnimationRepeat(android.view.animation.Animation)
  onAnimationStart     public onAnimationStart(android.view.animation.Animation)

android.support.v4.widget.SwipeRefreshLayout$6   (com.rubenroy.minimaltodo.eval_ty$6)
===============================================================================
  applyTransformation  public applyTransformation(float,android.view.animation.Transformation)

android.support.v4.widget.SwipeRefreshLayout$7   (com.rubenroy.minimaltodo.eval_ty$7)
===============================================================================
  applyTransformation  public applyTransformation(float,android.view.animation.Transformation)

android.support.v4.widget.SwipeRefreshLayout$8   (com.rubenroy.minimaltodo.eval_ty$8)
===============================================================================
  applyTransformation  public applyTransformation(float,android.view.animation.Transformation)

android.support.v4.widget.SwipeRefreshLayout$Exception   (com.rubenroy.minimaltodo.eval_zo)
===============================================================================
  No methods

android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener   (com.rubenroy.minimaltodo.eval_ty$t)
===============================================================================
  j    public abstract onRefresh()

android.support.v4.widget.TextViewCompat (com.rubenroy.minimaltodo.eval_p5)
===============================================================================
  d    public static setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
  g    public static setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
  i    public static getMaxLines(android.widget.TextView)
  k    public static getMinLines(android.widget.TextView)
  w    public static setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)

android.support.v4.widget.TextViewCompat$BaseTextViewCompatImpl  (com.rubenroy.minimaltodo.eval_p5$g)
===============================================================================
  a    public setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
  d    public getMaxLines(android.widget.TextView)
  h    public getMinLines(android.widget.TextView)
  j    public setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
  n    public setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)

android.support.v4.widget.TextViewCompat$JbMr1TextViewCompatImpl (com.rubenroy.minimaltodo.eval_p5$w)
===============================================================================
  a    public setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
  j    public setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
  n    public setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)

android.support.v4.widget.TextViewCompat$JbMr2TextViewCompatImpl (com.rubenroy.minimaltodo.eval_p5$_)
===============================================================================
  a    public setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
  j    public setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
  n    public setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)

android.support.v4.widget.TextViewCompat$JbTextViewCompatImpl    (com.rubenroy.minimaltodo.eval_p5$j)
===============================================================================
  d    public getMaxLines(android.widget.TextView)
  h    public getMinLines(android.widget.TextView)

android.support.v4.widget.TextViewCompat$NullPointerException    (com.rubenroy.minimaltodo.eval_tt)
===============================================================================
  No methods

android.support.v4.widget.TextViewCompat$TextViewCompatImpl      (com.rubenroy.minimaltodo.eval_p5$d)
===============================================================================
  a    public abstract setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
  d    public abstract getMaxLines(android.widget.TextView)
  h    public abstract getMinLines(android.widget.TextView)
  j    public abstract setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
  n    public abstract setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)

android.support.v4.widget.TextViewCompatDonut    (com.rubenroy.minimaltodo.eval_jj)
===============================================================================
  a    static getMinLines(android.widget.TextView)
  j    private static retrieveField(java.lang.String)
  w    private static retrieveIntFromField(java.lang.reflect.Field,android.widget.TextView)
  x    static getMaxLines(android.widget.TextView)

android.support.v4.widget.TextViewCompatDonut$NullPointerException       (com.rubenroy.minimaltodo.eval_lk)
===============================================================================
  No methods

android.support.v4.widget.TextViewCompatJb       (com.rubenroy.minimaltodo.eval_zf)
===============================================================================
  o    static getMinLines(android.widget.TextView)
  s    static getMaxLines(android.widget.TextView)

android.support.v4.widget.TextViewCompatJb$ParseException        (com.rubenroy.minimaltodo.eval_o4)
===============================================================================
  No methods

android.support.v4.widget.TextViewCompatJbMr1    (com.rubenroy.minimaltodo.eval_kl)
===============================================================================
  c    public static setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
  e    public static setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
  h    public static setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)

android.support.v4.widget.TextViewCompatJbMr1$NullPointerException       (com.rubenroy.minimaltodo.eval_bt)
===============================================================================
  No methods

android.support.v4.widget.TextViewCompatJbMr2    (com.rubenroy.minimaltodo.eval_pe)
===============================================================================
  o    public static setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
  r    public static setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
  s    public static setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)

android.support.v4.widget.TextViewCompatJbMr2$NullPointerException       (com.rubenroy.minimaltodo.eval_re)
===============================================================================
  No methods

android.support.v4.widget.TintableCompoundButton (com.rubenroy.minimaltodo.eval_tj)
===============================================================================
  a    public abstract setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
  b    public abstract getSupportButtonTintMode()
  p    public abstract getSupportButtonTintList()
  s    public abstract setSupportButtonTintList(android.content.res.ColorStateList)

android.support.v4.widget.TintableCompoundButton$IOException     (com.rubenroy.minimaltodo.eval_t2)
===============================================================================
  No methods

android.support.v4.widget.ViewDragHelper (com.rubenroy.minimaltodo.eval_yb)
===============================================================================
  a        public isEdgeTouched(int,int)
  b        public cancel()
  b        private checkNewEdgeDrag(float,float,int,int)
  c        private clearMotionHistory()
  c        public captureChildView(android.view.View,int)
  d        public static create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback)
  d        private clampMag(float,float,float)
  e        private clampMag(int,int,int)
  eval_c   private clearMotionHistory(int)
  eval_g   private saveInitialMotion(float,float,int)
  eval_w   protected canScroll(android.view.View,boolean,int,int,int,int)
  eval_x   public findTopChildUnder(int,int)
  eval_y   public abort()
  eval_y   public isCapturedViewUnder(int,int)
  eval_z   private ensureMotionHistorySizeForId(int)
  f        public getTouchSlop()
  g        public smoothSlideViewTo(android.view.View,int,int)
  h        private releaseViewForPointerUp()
  h        private forceSettleCapturedViewAt(int,int,int,int)
  l        public getViewDragState()
  l        public shouldInterceptTouchEvent(android.view.MotionEvent)
  l        public checkTouchSlop(int)
  l        public settleCapturedViewAt(int,int)
  o        private reportNewEdgeDrags(float,float,int)
  p        private checkTouchSlop(android.view.View,float,float)
  p        public static create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback)
  r        private distanceInfluenceForSnapDuration(float)
  r        private dispatchViewReleased(float,float)
  r        public flingCapturedView(int,int,int,int)
  s        public getMinVelocity()
  t        public isPointerDown(int)
  t        public checkTouchSlop(int,int)
  u        public getActivePointerId()
  u        tryCaptureViewForDrag(android.view.View,int)
  u        public continueSettling(boolean)
  v        public getEdgeSize()
  v        private saveLastMotion(android.view.MotionEvent)
  v        private computeSettleDuration(android.view.View,int,int,int,int)
  v        public setMinVelocity(float)
  v        public isEdgeTouched(int)
  v        private computeAxisDuration(int,int,int)
  w        public setEdgeTrackingEnabled(int)
  w        private dragTo(int,int,int,int)
  x        public processTouchEvent(android.view.MotionEvent)
  y        public getCapturedView()
  y        public isViewUnder(android.view.View,int,int)
  y        setDragState(int)
  y        private getEdgesTouched(int,int)

android.support.v4.widget.ViewDragHelper$1       (com.rubenroy.minimaltodo.eval_yb$1)
===============================================================================
  getInterpolation public getInterpolation(float)

android.support.v4.widget.ViewDragHelper$2       (com.rubenroy.minimaltodo.eval_yb$2)
===============================================================================
  run  public run()

android.support.v4.widget.ViewDragHelper$Callback        (com.rubenroy.minimaltodo.eval_yb$y)
===============================================================================
  c    public onEdgeDragStarted(int,int)
  d    public clampViewPositionVertical(android.view.View,int,int)
  j    public getViewHorizontalDragRange(android.view.View)
  p    public getViewVerticalDragRange(android.view.View)
  q    public onViewCaptured(android.view.View,int)
  q    public onViewDragStateChanged(int)
  r    public getOrderedChildIndex(int)
  t    public onViewReleased(android.view.View,float,float)
  t    public onEdgeLock(int)
  v    public onViewPositionChanged(android.view.View,int,int,int,int)
  w    public abstract tryCaptureView(android.view.View,int)
  x    public clampViewPositionHorizontal(android.view.View,int,int)
  z    public onEdgeTouched(int,int)

android.support.v4.widget.ViewDragHelper$NullPointerException    (com.rubenroy.minimaltodo.eval_p1)
===============================================================================
  No methods

android.support.v7.app.ActionBar (com.rubenroy.minimaltodo.eval_ys)
===============================================================================
  a        public openOptionsMenu()
  a        public setHideOffset(int)
  a        public setWindowTitle(java.lang.CharSequence)
  b        public abstract getNavigationMode()
  b        public setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
  c        public abstract getCustomView()
  c        public abstract setCustomView(android.view.View,android.support.v7.app.ActionBar$LayoutParams)
  d        public abstract setLogo(android.graphics.drawable.Drawable)
  d        public startActionMode(android.support.v7.view.ActionMode$Callback)
  d        public abstract setCustomView(android.view.View)
  d        public abstract setDisplayShowTitleEnabled(boolean)
  e        public abstract setBackgroundDrawable(android.graphics.drawable.Drawable)
  e        public abstract setTitle(int)
  eval_b   public invalidateOptionsMenu()
  eval_c   public abstract getHeight()
  eval_g   public setHomeActionContentDescription(int)
  eval_j   public isTitleTruncated()
  eval_l   public abstract getTabAt(int)
  eval_m   public abstract getTabCount()
  eval_n   public getThemedContext()
  eval_p   public abstract removeTabAt(int)
  eval_q   public abstract setCustomView(int)
  eval_r   public abstract removeAllTabs()
  eval_w   public abstract hide()
  eval_w   public abstract selectTab(android.support.v7.app.ActionBar$Tab)
  eval_x   public setHomeAsUpIndicator(android.graphics.drawable.Drawable)
  eval_z   public setHomeButtonEnabled(boolean)
  f        public setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
  f        public abstract setDisplayOptions(int,int)
  f        public abstract setTitle(java.lang.CharSequence)
  g        public collapseActionView()
  g        public abstract setIcon(int)
  h        public abstract getSubtitle()
  h        public abstract setDisplayHomeAsUpEnabled(boolean)
  i        public abstract getSelectedTab()
  i        public abstract addTab(android.support.v7.app.ActionBar$Tab,boolean)
  i        public onKeyShortcut(int,android.view.KeyEvent)
  j        public onConfigurationChanged(android.content.res.Configuration)
  k        public abstract removeOnMenuVisibilityListener(android.support.v7.app.ActionBar$OnMenuVisibilityListener)
  k        public abstract removeTab(android.support.v7.app.ActionBar$Tab)
  k        public abstract setDisplayOptions(int)
  l        public abstract getTitle()
  l        public setDefaultDisplayHomeAsUpEnabled(boolean)
  m        public abstract getDisplayOptions()
  m        public abstract addOnMenuVisibilityListener(android.support.v7.app.ActionBar$OnMenuVisibilityListener)
  m        public abstract addTab(android.support.v7.app.ActionBar$Tab,int)
  m        public abstract setDisplayUseLogoEnabled(boolean)
  m        public abstract setSelectedNavigationItem(int)
  n        public abstract newTab()
  n        public abstract setSubtitle(int)
  o        public isHideOnContentScrollEnabled()
  o        public abstract addTab(android.support.v7.app.ActionBar$Tab,int,boolean)
  p        public abstract show()
  p        public abstract setListNavigationCallbacks(android.widget.SpinnerAdapter,android.support.v7.app.ActionBar$OnNavigationListener)
  q        public abstract getNavigationItemCount()
  q        public dispatchMenuVisibilityChanged(boolean)
  q        public abstract setNavigationMode(int)
  r        public setShowHideAnimationEnabled(boolean)
  r        public setElevation(float)
  s        public getElevation()
  t        public setHomeActionContentDescription(java.lang.CharSequence)
  v        public abstract setLogo(int)
  w        public abstract setIcon(android.graphics.drawable.Drawable)
  w        public onMenuKeyEvent(android.view.KeyEvent)
  w        public setHomeAsUpIndicator(int)
  x        public abstract isShowing()
  x        public abstract setDisplayShowHomeEnabled(boolean)
  y        public getHideOffset()
  y        public abstract addTab(android.support.v7.app.ActionBar$Tab)
  y        public setHideOnContentScrollEnabled(boolean)
  z        public abstract getSelectedNavigationIndex()
  z        public abstract setDisplayShowCustomEnabled(boolean)
  z        public abstract setSubtitle(java.lang.CharSequence)

android.support.v7.app.ActionBar$DisplayOptions  (com.rubenroy.minimaltodo.eval_ys$n)
===============================================================================
  No methods

android.support.v7.app.ActionBar$LayoutParams    (com.rubenroy.minimaltodo.eval_ys$y)
===============================================================================
  No methods

android.support.v7.app.ActionBar$NavigationMode  (com.rubenroy.minimaltodo.eval_ys$q)
===============================================================================
  No methods

android.support.v7.app.ActionBar$OnMenuVisibilityListener        (com.rubenroy.minimaltodo.eval_ys$j)
===============================================================================
  r    public abstract onMenuVisibilityChanged(boolean)

android.support.v7.app.ActionBar$OnNavigationListener    (com.rubenroy.minimaltodo.eval_ys$a)
===============================================================================
  eval_k   public abstract onNavigationItemSelected(int,long)

android.support.v7.app.ActionBar$ParseException  (com.rubenroy.minimaltodo.eval_ea)
===============================================================================
  No methods

android.support.v7.app.ActionBar$Tab     (com.rubenroy.minimaltodo.eval_ys$h)
===============================================================================
  c        public abstract getCustomView()
  eval_e   public abstract setContentDescription(int)
  eval_k   public abstract getTag()
  eval_o   public abstract getContentDescription()
  eval_q   public abstract setText(java.lang.CharSequence)
  g        public abstract setTag(java.lang.Object)
  j        public abstract getIcon()
  j        public abstract setCustomView(android.view.View)
  j        public abstract setIcon(int)
  l        public abstract setText(int)
  l        public abstract setContentDescription(java.lang.CharSequence)
  n        public abstract setCustomView(int)
  o        public abstract select()
  o        public abstract setTabListener(android.support.v7.app.ActionBar$TabListener)
  u        public abstract getText()
  w        public abstract getPosition()
  y        public abstract setIcon(android.graphics.drawable.Drawable)

android.support.v7.app.ActionBar$TabListener     (com.rubenroy.minimaltodo.eval_ys$eval_x)
===============================================================================
  a    public abstract onTabUnselected(android.support.v7.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction)
  f    public abstract onTabSelected(android.support.v7.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction)
  k    public abstract onTabReselected(android.support.v7.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction)

android.support.v7.app.ActionBarActivity (com.rubenroy.minimaltodo.eval_az)
===============================================================================
  No methods

android.support.v7.app.ActionBarActivity$NullPointerException    (com.rubenroy.minimaltodo.eval__w)
===============================================================================
  No methods

android.support.v7.app.ActionBarDrawerToggle     (com.rubenroy.minimaltodo.eval_bc)
===============================================================================
  a        public isDrawerIndicatorEnabled()
  a        static access$100(android.support.v7.app.ActionBarDrawerToggle)
  b        static access$200(android.support.v7.app.ActionBarDrawerToggle)
  c        public getToolbarNavigationClickListener()
  eval_v   private toggle()
  eval_x   getThemeUpIndicator()
  f        public setHomeAsUpIndicator(android.graphics.drawable.Drawable)
  j        public syncState()
  k        public onDrawerOpened(android.view.View)
  k        public setHomeAsUpIndicator(int)
  n        public onDrawerStateChanged(int)
  r        setActionBarDescription(int)
  s        public onOptionsItemSelected(android.view.MenuItem)
  s        public onDrawerClosed(android.view.View)
  u        public onConfigurationChanged(android.content.res.Configuration)
  v        static access$000(android.support.v7.app.ActionBarDrawerToggle)
  x        setActionBarUpIndicator(android.graphics.drawable.Drawable,int)
  y        public setToolbarNavigationClickListener(android.view.View$OnClickListener)
  y        public setDrawerIndicatorEnabled(boolean)
  z        public onDrawerSlide(android.view.View,float)

android.support.v7.app.ActionBarDrawerToggle$1   (com.rubenroy.minimaltodo.eval_bc$1)
===============================================================================
  onClick  public onClick(android.view.View)

android.support.v7.app.ActionBarDrawerToggle$Delegate    (com.rubenroy.minimaltodo.eval_bc$u)
===============================================================================
  c    public abstract setActionBarDescription(int)
  d    public abstract setActionBarUpIndicator(android.graphics.drawable.Drawable,int)
  o    public abstract getThemeUpIndicator()
  p    public abstract isNavigationVisible()
  r    public abstract getActionBarThemedContext()

android.support.v7.app.ActionBarDrawerToggle$DelegateProvider    (com.rubenroy.minimaltodo.eval_bc$d)
===============================================================================
  y    public abstract getDrawerToggleDelegate()

android.support.v7.app.ActionBarDrawerToggle$DrawerArrowDrawableToggle   (com.rubenroy.minimaltodo.eval_bc$l)
===============================================================================
  u    public getPosition()
  y    public setPosition(float)

android.support.v7.app.ActionBarDrawerToggle$DrawerToggle        (com.rubenroy.minimaltodo.eval_bc$y)
===============================================================================
  u    public abstract getPosition()
  y    public abstract setPosition(float)

android.support.v7.app.ActionBarDrawerToggle$DummyDelegate       (com.rubenroy.minimaltodo.eval_bc$m)
===============================================================================
  c    public setActionBarDescription(int)
  d    public setActionBarUpIndicator(android.graphics.drawable.Drawable,int)
  o    public getThemeUpIndicator()
  p    public isNavigationVisible()
  r    public getActionBarThemedContext()

android.support.v7.app.ActionBarDrawerToggle$Exception   (com.rubenroy.minimaltodo.eval_ky)
===============================================================================
  No methods

android.support.v7.app.ActionBarDrawerToggle$HoneycombDelegate   (com.rubenroy.minimaltodo.eval_bc$eval_p)
===============================================================================
  c    public setActionBarDescription(int)
  d    public setActionBarUpIndicator(android.graphics.drawable.Drawable,int)
  o    public getThemeUpIndicator()
  p    public isNavigationVisible()
  r    public getActionBarThemedContext()

android.support.v7.app.ActionBarDrawerToggle$JellybeanMr2Delegate        (com.rubenroy.minimaltodo.eval_bc$p)
===============================================================================
  c    public setActionBarDescription(int)
  d    public setActionBarUpIndicator(android.graphics.drawable.Drawable,int)
  o    public getThemeUpIndicator()
  p    public isNavigationVisible()
  r    public getActionBarThemedContext()

android.support.v7.app.ActionBarDrawerToggle$ToolbarCompatDelegate       (com.rubenroy.minimaltodo.eval_bc$t)
===============================================================================
  c    public setActionBarDescription(int)
  d    public setActionBarUpIndicator(android.graphics.drawable.Drawable,int)
  o    public getThemeUpIndicator()
  p    public isNavigationVisible()
  r    public getActionBarThemedContext()

android.support.v7.app.ActionBarDrawerToggleHoneycomb    (com.rubenroy.minimaltodo.eval_pt)
===============================================================================
  e        public static setActionBarUpIndicator(android.support.v7.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo,android.app.Activity,android.graphics.drawable.Drawable,int)
  eval_c   public static getThemeUpIndicator(android.app.Activity)
  z        public static setActionBarDescription(android.support.v7.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo,android.app.Activity,int)

android.support.v7.app.ActionBarDrawerToggleHoneycomb$IOException        (com.rubenroy.minimaltodo.eval_en)
===============================================================================
  No methods

android.support.v7.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo   (com.rubenroy.minimaltodo.eval_pt$g)
===============================================================================
  No methods

android.support.v7.app.AlertController   (com.rubenroy.minimaltodo.eval_d3)
===============================================================================
  a        static access$200(android.support.v7.app.AlertController)
  a        private setupTitle(android.view.ViewGroup)
  b        static access$900(android.support.v7.app.AlertController)
  b        public setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message)
  c        public setIcon(android.graphics.drawable.Drawable)
  c        static access$100(android.support.v7.app.AlertController)
  d        public setView(int)
  e        static access$1400(android.support.v7.app.AlertController)
  eval_d   private setupCustomContent(android.view.ViewGroup)
  eval_n   static access$600(android.support.v7.app.AlertController)
  eval_t   public getListView()
  eval_u   static access$1100(android.support.v7.app.AlertController)
  eval_v   static access$700(android.support.v7.app.AlertController)
  eval_y   static access$1000(android.support.v7.app.AlertController)
  f        public getButton(int)
  g        static access$400(android.support.v7.app.AlertController)
  h        public setIcon(int)
  i        static access$1602(android.support.v7.app.AlertController,int)
  j        public installContent()
  l        static access$800(android.view.View,android.view.View,android.view.View)
  m        private static manageScrollIndicators(android.view.View,android.view.View,android.view.View)
  m        public setView(android.view.View,int,int,int,int)
  n        static access$300(android.support.v7.app.AlertController)
  n        private setScrollIndicators(android.view.ViewGroup,android.view.View,int,int)
  p        public setMessage(java.lang.CharSequence)
  q        private setupView()
  q        private resolvePanel(android.view.View,android.view.View)
  q        private setupButtons(android.view.ViewGroup)
  q        public onKeyDown(int,android.view.KeyEvent)
  r        static access$1002(android.support.v7.app.AlertController,android.widget.ListView)
  r        public setCustomTitle(android.view.View)
  t        public getIconAttributeResId(int)
  u        static access$1502(android.support.v7.app.AlertController,android.widget.ListAdapter)
  u        private setupContent(android.view.ViewGroup)
  u        public setTitle(java.lang.CharSequence)
  v        public onKeyUp(int,android.view.KeyEvent)
  w        static access$000(android.support.v7.app.AlertController)
  w        static canTextInput(android.view.View)
  w        public setButtonPanelLayoutHint(int)
  x        static access$1200(android.support.v7.app.AlertController)
  y        private selectContentView()
  y        static access$1300(android.support.v7.app.AlertController)
  z        static access$500(android.support.v7.app.AlertController)
  z        public setView(android.view.View)

android.support.v7.app.AlertController$1 (com.rubenroy.minimaltodo.eval_d3$1)
===============================================================================
  onClick  public onClick(android.view.View)

android.support.v7.app.AlertController$2 (com.rubenroy.minimaltodo.eval_d3$2)
===============================================================================
  n    public onScrollChange(android.support.v4.widget.NestedScrollView,int,int,int,int)

android.support.v7.app.AlertController$3 (com.rubenroy.minimaltodo.eval_d3$3)
===============================================================================
  run  public run()

android.support.v7.app.AlertController$4 (com.rubenroy.minimaltodo.eval_d3$4)
===============================================================================
  onScroll             public onScroll(android.widget.AbsListView,int,int,int)
  onScrollStateChanged public onScrollStateChanged(android.widget.AbsListView,int)

android.support.v7.app.AlertController$5 (com.rubenroy.minimaltodo.eval_d3$5)
===============================================================================
  run  public run()

android.support.v7.app.AlertController$AlertParams       (com.rubenroy.minimaltodo.eval_d3$x)
===============================================================================
  h    public apply(android.support.v7.app.AlertController)
  s    private createListView(android.support.v7.app.AlertController)

android.support.v7.app.AlertController$AlertParams$1     (com.rubenroy.minimaltodo.eval_d3$x$1)
===============================================================================
  getView  public getView(int,android.view.View,android.view.ViewGroup)

android.support.v7.app.AlertController$AlertParams$2     (com.rubenroy.minimaltodo.eval_d3$x$2)
===============================================================================
  bindView public bindView(android.view.View,android.content.Context,android.database.Cursor)
  newView  public newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)

android.support.v7.app.AlertController$AlertParams$3     (com.rubenroy.minimaltodo.eval_d3$x$3)
===============================================================================
  onItemClick  public onItemClick(android.widget.AdapterView,android.view.View,int,long)

android.support.v7.app.AlertController$AlertParams$4     (com.rubenroy.minimaltodo.eval_d3$x$4)
===============================================================================
  onItemClick  public onItemClick(android.widget.AdapterView,android.view.View,int,long)

android.support.v7.app.AlertController$AlertParams$NullPointerException  (com.rubenroy.minimaltodo.eval_yx)
===============================================================================
  No methods

android.support.v7.app.AlertController$AlertParams$OnPrepareListViewListener     (com.rubenroy.minimaltodo.eval_d3$x$l)
===============================================================================
  q    public abstract onPrepareListView(android.widget.ListView)

android.support.v7.app.AlertController$ButtonHandler     (com.rubenroy.minimaltodo.eval_d3$eval__)
===============================================================================
  handleMessage    public handleMessage(android.os.Message)

android.support.v7.app.AlertController$CheckedItemAdapter        (com.rubenroy.minimaltodo.eval_d3$h)
===============================================================================
  getItemId    public getItemId(int)
  hasStableIds public hasStableIds()

android.support.v7.app.AlertController$IOException       (com.rubenroy.minimaltodo.eval_hc)
===============================================================================
  No methods

android.support.v7.app.AlertDialog       (com.rubenroy.minimaltodo.eval_xz)
===============================================================================
  e            public setMessage(java.lang.CharSequence)
  eval_h       public setCustomTitle(android.view.View)
  eval_y       public setIconAttribute(int)
  i            public setIcon(int)
  m            public getListView()
  n            static resolveDialogTheme(android.content.Context,int)
  p            setButtonPanelLayoutHint(int)
  q            static access$000(android.support.v7.app.AlertDialog)
  q            public setView(android.view.View,int,int,int,int)
  s            public setIcon(android.graphics.drawable.Drawable)
  u            public setButton(int,java.lang.CharSequence,android.os.Message)
  v            public getButton(int)
  v            public setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
  x            public setView(android.view.View)
  onCreate     protected onCreate(android.os.Bundle)
  onKeyDown    public onKeyDown(int,android.view.KeyEvent)
  onKeyUp      public onKeyUp(int,android.view.KeyEvent)
  setTitle     public setTitle(java.lang.CharSequence)

android.support.v7.app.AlertDialog$Builder       (com.rubenroy.minimaltodo.eval_xz$o)
===============================================================================
  a        public setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
  a        public setView(int)
  a        public setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
  b        public show()
  c        public setIcon(android.graphics.drawable.Drawable)
  c        public setCancelable(boolean)
  d        public setInverseBackgroundForced(boolean)
  eval_x   public setCursor(android.database.Cursor,android.content.DialogInterface$OnClickListener,java.lang.String)
  f        public setItems(int,android.content.DialogInterface$OnClickListener)
  g        public setSingleChoiceItems(int,int,android.content.DialogInterface$OnClickListener)
  h        public setTitle(int)
  i        public setOnCancelListener(android.content.DialogInterface$OnCancelListener)
  i        public setNeutralButton(int,android.content.DialogInterface$OnClickListener)
  i        public setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
  j        public setCustomTitle(android.view.View)
  j        public setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener)
  j        public setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)
  k        public setView(android.view.View,int,int,int,int)
  k        public setMultiChoiceItems(int,boolean[],android.content.DialogInterface$OnMultiChoiceClickListener)
  k        public setMessage(java.lang.CharSequence)
  m        public getContext()
  n        public setRecycleOnMeasureEnabled(boolean)
  n        public setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
  n        public setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener)
  o        public create()
  o        public setMultiChoiceItems(android.database.Cursor,java.lang.String,java.lang.String,android.content.DialogInterface$OnMultiChoiceClickListener)
  p        public setPositiveButton(int,android.content.DialogInterface$OnClickListener)
  q        public setTitle(java.lang.CharSequence)
  r        public setOnDismissListener(android.content.DialogInterface$OnDismissListener)
  r        public setSingleChoiceItems(android.database.Cursor,int,java.lang.String,android.content.DialogInterface$OnClickListener)
  r        public setIconAttribute(int)
  r        public setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener)
  u        public setOnKeyListener(android.content.DialogInterface$OnKeyListener)
  u        public setView(android.view.View)
  w        public setIcon(int)
  y        public setMessage(int)
  y        public setNegativeButton(int,android.content.DialogInterface$OnClickListener)
  z        public setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener)

android.support.v7.app.AlertDialog$Exception     (com.rubenroy.minimaltodo.eval_tf)
===============================================================================
  No methods

android.support.v7.app.AppCompatActivity (com.rubenroy.minimaltodo.eval_a2)
===============================================================================
  b                        public onSupportNavigateUp()
  b                        public onWindowStartingSupportActionMode(android.support.v7.view.ActionMode$Callback)
  b                        public setSupportProgressBarIndeterminateVisibility(boolean)
  c                        public getSupportActionBar()
  e                        public supportShouldUpRecreateTask(android.content.Intent)
  eval_l                   public onSupportActionModeFinished(android.support.v7.view.ActionMode)
  eval_q                   public getDelegate()
  eval_t                   public getSupportParentActivityIntent()
  i                        public onSupportActionModeStarted(android.support.v7.view.ActionMode)
  k                        public supportInvalidateOptionsMenu()
  m                        public supportRequestWindowFeature(int)
  o                        public supportNavigateUpTo(android.content.Intent)
  o                        public setSupportActionBar(android.support.v7.widget.Toolbar)
  r                        public onPrepareSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder)
  t                        public setSupportProgress(int)
  v                        public onSupportContentChanged()
  w                        public onCreateSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder)
  w                        public setSupportProgressBarIndeterminate(boolean)
  x                        public setSupportProgressBarVisibility(boolean)
  y                        public getDrawerToggleDelegate()
  z                        public startSupportActionMode(android.support.v7.view.ActionMode$Callback)
  addContentView           public addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
  getMenuInflater          public getMenuInflater()
  invalidateOptionsMenu    public invalidateOptionsMenu()
  onConfigurationChanged   public onConfigurationChanged(android.content.res.Configuration)
  onContentChanged         public onContentChanged()
  onCreate                 protected onCreate(android.os.Bundle)
  onDestroy                protected onDestroy()
  onMenuItemSelected       public final onMenuItemSelected(int,android.view.MenuItem)
  onMenuOpened             public onMenuOpened(int,android.view.Menu)
  onPanelClosed            public onPanelClosed(int,android.view.Menu)
  onPostCreate             protected onPostCreate(android.os.Bundle)
  onPostResume             protected onPostResume()
  onStop                   protected onStop()
  onTitleChanged           protected onTitleChanged(java.lang.CharSequence,int)
  setContentView           public setContentView(android.view.View)
  setContentView           public setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
  setContentView           public setContentView(int)

android.support.v7.app.AppCompatActivity$NullPointerException    (com.rubenroy.minimaltodo.eval_w1)
===============================================================================
  No methods

android.support.v7.app.AppCompatCallback (com.rubenroy.minimaltodo.eval_hw)
===============================================================================
  b        public abstract onWindowStartingSupportActionMode(android.support.v7.view.ActionMode$Callback)
  eval_l   public abstract onSupportActionModeFinished(android.support.v7.view.ActionMode)
  i        public abstract onSupportActionModeStarted(android.support.v7.view.ActionMode)

android.support.v7.app.AppCompatCallback$NullPointerException    (com.rubenroy.minimaltodo.eval_fj)
===============================================================================
  No methods

android.support.v7.app.AppCompatDelegate (com.rubenroy.minimaltodo.eval_im)
===============================================================================
  b        public abstract installViewFactory()
  c        public abstract isHandleNativeActionModesEnabled()
  c        public abstract createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
  e        public abstract onPostResume()
  e        public abstract requestWindowFeature(int)
  eval_p   public abstract startSupportActionMode(android.support.v7.view.ActionMode$Callback)
  eval_x   public abstract onDestroy()
  j        public abstract getMenuInflater()
  j        public abstract setSupportActionBar(android.support.v7.widget.Toolbar)
  l        public static create(android.app.Activity,android.support.v7.app.AppCompatCallback)
  l        public abstract onCreate(android.os.Bundle)
  l        public abstract setHandleNativeActionModesEnabled(boolean)
  n        public static create(android.app.Dialog,android.support.v7.app.AppCompatCallback)
  n        public abstract setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
  o        public abstract onConfigurationChanged(android.content.res.Configuration)
  o        public abstract hasWindowFeature(int)
  o        public abstract setTitle(java.lang.CharSequence)
  p        public abstract getDrawerToggleDelegate()
  q        public abstract getSupportActionBar()
  u        public abstract onPostCreate(android.os.Bundle)
  v        private static create(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)
  v        public abstract setContentView(android.view.View)
  x        public abstract invalidateOptionsMenu()
  y        public abstract setContentView(int)
  z        public abstract onStop()
  z        public abstract addContentView(android.view.View,android.view.ViewGroup$LayoutParams)

android.support.v7.app.AppCompatDelegate$NullPointerException    (com.rubenroy.minimaltodo.eval_mw)
===============================================================================
  No methods

android.support.v7.app.AppCompatDelegateImplBase (com.rubenroy.minimaltodo.eval_ep)
===============================================================================
  a        abstract initWindowDecorActionBar()
  c        public isHandleNativeActionModesEnabled()
  e        abstract onPanelClosed(int,android.view.Menu)
  eval_i   final getActionBarThemedContext()
  eval_s   abstract onMenuOpened(int,android.view.Menu)
  eval_t   final getWindowCallback()
  eval_u   final peekSupportActionBar()
  eval_x   public final onDestroy()
  f        abstract onTitleChanged(java.lang.CharSequence)
  g        final isDestroyed()
  h        final getTitle()
  j        public getMenuInflater()
  l        public setHandleNativeActionModesEnabled(boolean)
  o        public final setTitle(java.lang.CharSequence)
  p        public final getDrawerToggleDelegate()
  q        public getSupportActionBar()
  q        abstract startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)
  x        wrapWindowCallback(android.view.Window$Callback)
  y        abstract dispatchKeyEvent(android.view.KeyEvent)
  z        abstract onKeyShortcut(int,android.view.KeyEvent)

android.support.v7.app.AppCompatDelegateImplBase$1       (com.rubenroy.minimaltodo.eval_ep$1)
===============================================================================
  No methods

android.support.v7.app.AppCompatDelegateImplBase$ActionBarDrawableToggleImpl     (com.rubenroy.minimaltodo.eval_ep$q)
===============================================================================
  c    public setActionBarDescription(int)
  d    public setActionBarUpIndicator(android.graphics.drawable.Drawable,int)
  o    public getThemeUpIndicator()
  p    public isNavigationVisible()
  r    public getActionBarThemedContext()

android.support.v7.app.AppCompatDelegateImplBase$AppCompatWindowCallbackBase     (com.rubenroy.minimaltodo.eval_ep$w)
===============================================================================
  dispatchKeyEvent         public dispatchKeyEvent(android.view.KeyEvent)
  dispatchKeyShortcutEvent public dispatchKeyShortcutEvent(android.view.KeyEvent)
  onContentChanged         public onContentChanged()
  onCreatePanelMenu        public onCreatePanelMenu(int,android.view.Menu)
  onMenuOpened             public onMenuOpened(int,android.view.Menu)
  onPanelClosed            public onPanelClosed(int,android.view.Menu)
  onPreparePanel           public onPreparePanel(int,android.view.View,android.view.Menu)

android.support.v7.app.AppCompatDelegateImplBase$IOException     (com.rubenroy.minimaltodo.eval_um)
===============================================================================
  No methods

android.support.v7.app.AppCompatDelegateImplV11  (com.rubenroy.minimaltodo.eval_y7)
===============================================================================
  eval_f   callActivityOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)

android.support.v7.app.AppCompatDelegateImplV11$ParseException   (com.rubenroy.minimaltodo.eval_of)
===============================================================================
  No methods

android.support.v7.app.AppCompatDelegateImplV14  (com.rubenroy.minimaltodo.eval_j1)
===============================================================================
  c    public isHandleNativeActionModesEnabled()
  l    public setHandleNativeActionModesEnabled(boolean)
  x    wrapWindowCallback(android.view.Window$Callback)

android.support.v7.app.AppCompatDelegateImplV14$AppCompatWindowCallbackV14       (com.rubenroy.minimaltodo.eval_j1$k)
===============================================================================
  q                            final startAsSupportActionMode(android.view.ActionMode$Callback)
  onWindowStartingActionMode   public onWindowStartingActionMode(android.view.ActionMode$Callback)

android.support.v7.app.AppCompatDelegateImplV14$ParseException   (com.rubenroy.minimaltodo.eval_or)
===============================================================================
  No methods

android.support.v7.app.AppCompatDelegateImplV23  (com.rubenroy.minimaltodo.eval_fc)
===============================================================================
  x    wrapWindowCallback(android.view.Window$Callback)

android.support.v7.app.AppCompatDelegateImplV23$AppCompatWindowCallbackV23       (com.rubenroy.minimaltodo.eval_fc$x)
===============================================================================
  onWindowStartingActionMode   public onWindowStartingActionMode(android.view.ActionMode$Callback)
  onWindowStartingActionMode   public onWindowStartingActionMode(android.view.ActionMode$Callback,int)

android.support.v7.app.AppCompatDelegateImplV23$ParseException   (com.rubenroy.minimaltodo.eval_ka)
===============================================================================
  No methods

android.support.v7.app.AppCompatDelegateImplV7   (com.rubenroy.minimaltodo.eval_tz)
===============================================================================
  a        public initWindowDecorActionBar()
  b        public installViewFactory()
  c        static access$400(android.support.v7.app.AppCompatDelegateImplV7)
  c        public onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder)
  c        public createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
  e        public onPostResume()
  e        static access$002(android.support.v7.app.AppCompatDelegateImplV7,int)
  e        public requestWindowFeature(int)
  e        onPanelClosed(int,android.view.Menu)
  eval_d   onBackPressed()
  eval_f   callActivityOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
  eval_j   private throwFeatureRequestIfSubDecorInstalled()
  eval_j   private doInvalidatePanelMenu(int)
  eval_p   public startSupportActionMode(android.support.v7.view.ActionMode$Callback)
  eval_s   onMenuOpened(int,android.view.Menu)
  eval_t   private sanitizeWindowFeatureId(int)
  eval_v   private createSubDecor()
  eval_v   private checkCloseActionMenu(android.support.v7.internal.view.menu.MenuBuilder)
  eval_y   private preparePanel(android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState,android.view.KeyEvent)
  eval_z   getSubDecor()
  f        private applyFixedSizeWindow()
  f        private initializePanelContent(android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState)
  f        private updateStatusGuard(int)
  f        onTitleChanged(java.lang.CharSequence)
  g        static access$000(android.support.v7.app.AppCompatDelegateImplV7)
  h        private closePanel(android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState,boolean)
  i        private dismissPopups()
  j        private openPanel(android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState,android.view.KeyEvent)
  j        static access$1000(android.support.v7.app.AppCompatDelegateImplV7,android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState,boolean)
  j        static access$1400(android.support.v7.app.AppCompatDelegateImplV7,int)
  j        static access$900(android.support.v7.app.AppCompatDelegateImplV7,int,android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState,android.view.Menu)
  j        public setSupportActionBar(android.support.v7.widget.Toolbar)
  j        onKeyUp(int,android.view.KeyEvent)
  k        private ensureSubDecor()
  k        static access$100(android.support.v7.app.AppCompatDelegateImplV7,int)
  k        public onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem)
  l        public onCreate(android.os.Bundle)
  l        private onKeyDownPanel(int,android.view.KeyEvent)
  m        private endOnGoingFadeAnimation()
  m        static access$800(android.support.v7.app.AppCompatDelegateImplV7,android.view.Menu)
  m        private closePanel(int)
  n        static access$300(android.support.v7.app.AppCompatDelegateImplV7,int)
  n        public setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
  o        public onConfigurationChanged(android.content.res.Configuration)
  o        public hasWindowFeature(int)
  o        private onKeyUpPanel(int,android.view.KeyEvent)
  o        private getPanelState(int,boolean)
  q        static access$1100(android.support.v7.app.AppCompatDelegateImplV7,android.support.v7.internal.view.menu.MenuBuilder)
  q        startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)
  q        public final onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
  q        private invalidatePanelMenu(int)
  r        private reopenMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)
  r        onSubDecorInstalled(android.view.ViewGroup)
  s        private findMenuPanel(android.view.Menu)
  t        private performPanelShortcut(android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState,int,android.view.KeyEvent,int)
  t        onKeyDown(int,android.view.KeyEvent)
  u        public onPostCreate(android.os.Bundle)
  u        private initializePanelMenu(android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState)
  v        static access$202(android.support.v7.app.AppCompatDelegateImplV7,boolean)
  v        public setContentView(android.view.View)
  w        private initializePanelDecor(android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState)
  x        public invalidateOptionsMenu()
  x        static access$500(android.support.v7.app.AppCompatDelegateImplV7)
  y        dispatchKeyEvent(android.view.KeyEvent)
  y        public setContentView(int)
  z        public onStop()
  z        public addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
  z        private shouldInheritContext(android.view.ViewParent)
  z        private callOnPanelClosed(int,android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState,android.view.Menu)
  z        onKeyShortcut(int,android.view.KeyEvent)

android.support.v7.app.AppCompatDelegateImplV7$1 (com.rubenroy.minimaltodo.eval_tz$1)
===============================================================================
  run  public run()

android.support.v7.app.AppCompatDelegateImplV7$2 (com.rubenroy.minimaltodo.eval_tz$2)
===============================================================================
  h    public onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat)

android.support.v7.app.AppCompatDelegateImplV7$3 (com.rubenroy.minimaltodo.eval_tz$3)
===============================================================================
  q    public onFitSystemWindows(android.graphics.Rect)

android.support.v7.app.AppCompatDelegateImplV7$4 (com.rubenroy.minimaltodo.eval_tz$4)
===============================================================================
  t    public onDetachedFromWindow()
  x    public onAttachedFromWindow()

android.support.v7.app.AppCompatDelegateImplV7$5 (com.rubenroy.minimaltodo.eval_tz$5)
===============================================================================
  run  public run()

android.support.v7.app.AppCompatDelegateImplV7$5$1       (com.rubenroy.minimaltodo.eval_tz$5$1)
===============================================================================
  d    public onAnimationStart(android.view.View)
  v    public onAnimationEnd(android.view.View)

android.support.v7.app.AppCompatDelegateImplV7$5$IOException     (com.rubenroy.minimaltodo.eval_ag)
===============================================================================
  No methods

android.support.v7.app.AppCompatDelegateImplV7$6 (com.rubenroy.minimaltodo.eval_tz$6)
===============================================================================
  d    public onAnimationStart(android.view.View)
  v    public onAnimationEnd(android.view.View)

android.support.v7.app.AppCompatDelegateImplV7$ActionMenuPresenterCallback       (com.rubenroy.minimaltodo.eval_tz$p)
===============================================================================
  d    public onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)
  i    public onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder)

android.support.v7.app.AppCompatDelegateImplV7$ActionModeCallbackWrapperV7       (com.rubenroy.minimaltodo.eval_tz$q)
===============================================================================
  o    public onCreateActionMode(android.support.v7.view.ActionMode,android.view.Menu)
  p    public onDestroyActionMode(android.support.v7.view.ActionMode)
  p    public onPrepareActionMode(android.support.v7.view.ActionMode,android.view.Menu)
  y    public onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem)

android.support.v7.app.AppCompatDelegateImplV7$ActionModeCallbackWrapperV7$1     (com.rubenroy.minimaltodo.eval_tz$q$1)
===============================================================================
  v    public onAnimationEnd(android.view.View)

android.support.v7.app.AppCompatDelegateImplV7$ActionModeCallbackWrapperV7$Exception     (com.rubenroy.minimaltodo.eval_g8)
===============================================================================
  No methods

android.support.v7.app.AppCompatDelegateImplV7$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_nu)
===============================================================================
  No methods

android.support.v7.app.AppCompatDelegateImplV7$ListMenuDecorView (com.rubenroy.minimaltodo.eval_tz$g)
===============================================================================
  eval_d                   private isOutOfBounds(int,int)
  dispatchKeyEvent         public dispatchKeyEvent(android.view.KeyEvent)
  onInterceptTouchEvent    public onInterceptTouchEvent(android.view.MotionEvent)
  setBackgroundResource    public setBackgroundResource(int)

android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState (com.rubenroy.minimaltodo.eval_tz$x)
===============================================================================
  b    onSaveInstanceState()
  e    applyFrozenState()
  m    public hasPanelItems()
  m    setMenu(android.support.v7.internal.view.menu.MenuBuilder)
  p    onRestoreInstanceState(android.os.Parcelable)
  q    setStyle(android.content.Context)
  t    public clearMenuPresenters()
  y    getListMenuView(android.support.v7.internal.view.menu.MenuPresenter$Callback)

android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState$Exception       (com.rubenroy.minimaltodo.eval_vo)
===============================================================================
  No methods

android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState$SavedState      (com.rubenroy.minimaltodo.eval_tz$x$l)
===============================================================================
  b                static access$1300(android.os.Parcel,java.lang.ClassLoader)
  c                private static readFromParcel(android.os.Parcel,java.lang.ClassLoader)
  describeContents public describeContents()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState$SavedState$1    (com.rubenroy.minimaltodo.eval_tz$x$l$1)
===============================================================================
  j    public createFromParcel(android.os.Parcel,java.lang.ClassLoader)
  x    public newArray(int)

android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState$SavedState$NullPointerException (com.rubenroy.minimaltodo.eval_gl)
===============================================================================
  No methods

android.support.v7.app.AppCompatDelegateImplV7$PanelMenuPresenterCallback        (com.rubenroy.minimaltodo.eval_tz$b)
===============================================================================
  d    public onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)
  i    public onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder)

android.support.v7.app.AppCompatDialog   (com.rubenroy.minimaltodo.eval_i0)
===============================================================================
  b                        public onWindowStartingSupportActionMode(android.support.v7.view.ActionMode$Callback)
  c                        public supportRequestWindowFeature(int)
  eval_l                   public onSupportActionModeFinished(android.support.v7.view.ActionMode)
  h                        private static getThemeResId(android.content.Context,int)
  i                        public onSupportActionModeStarted(android.support.v7.view.ActionMode)
  t                        public getDelegate()
  v                        public getSupportActionBar()
  addContentView           public addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
  invalidateOptionsMenu    public invalidateOptionsMenu()
  onCreate                 protected onCreate(android.os.Bundle)
  onStop                   protected onStop()
  setContentView           public setContentView(android.view.View)
  setContentView           public setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
  setContentView           public setContentView(int)
  setTitle                 public setTitle(int)
  setTitle                 public setTitle(java.lang.CharSequence)

android.support.v7.app.AppCompatDialog$IOException       (com.rubenroy.minimaltodo.eval_dn)
===============================================================================
  No methods

android.support.v7.app.AppCompatDialogFragment
===============================================================================
  g    public onCreateDialog(android.os.Bundle)
  r    public setupDialog(android.app.Dialog,int)

android.support.v7.app.AppCompatDialogFragment$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_dt)
===============================================================================
  No methods

android.support.v7.app.NotificationCompat        (com.rubenroy.minimaltodo.eval_lm)
===============================================================================
  a    private static addMediaStyleToBuilderIcs(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Builder)
  n    private static addMediaStyleToBuilderLollipop(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style)
  r    private static addBigMediaStyleToBuilderJellybean(android.app.Notification,android.support.v4.app.NotificationCompat$Builder)
  r    static access$300(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Builder)
  u    static access$500(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style)
  v    static access$400(android.app.Notification,android.support.v4.app.NotificationCompat$Builder)

android.support.v7.app.NotificationCompat$1      (com.rubenroy.minimaltodo.eval_lm$1)
===============================================================================
  No methods

android.support.v7.app.NotificationCompat$ArrayOutOfBoundsException      (com.rubenroy.minimaltodo.eval_s6)
===============================================================================
  No methods

android.support.v7.app.NotificationCompat$Builder        (com.rubenroy.minimaltodo.eval_lm$f)
===============================================================================
  eval_u   protected getExtender()

android.support.v7.app.NotificationCompat$IceCreamSandwichExtender       (com.rubenroy.minimaltodo.eval_lm$z)
===============================================================================
  j    public build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationBuilderWithBuilderAccessor)

android.support.v7.app.NotificationCompat$JellybeanExtender      (com.rubenroy.minimaltodo.eval_lm$c)
===============================================================================
  j    public build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationBuilderWithBuilderAccessor)

android.support.v7.app.NotificationCompat$LollipopExtender       (com.rubenroy.minimaltodo.eval_lm$k)
===============================================================================
  j    public build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationBuilderWithBuilderAccessor)

android.support.v7.app.NotificationCompat$MediaStyle     (com.rubenroy.minimaltodo.eval_lm$r)
===============================================================================
  j    public setCancelButtonIntent(android.app.PendingIntent)
  o    public setMediaSession(android.support.v4.media.session.MediaSessionCompat$Token)
  v    public setShowCancelButton(boolean)
  x    public transient setShowActionsInCompactView(int[])

android.support.v7.app.TwilightCalculator        (com.rubenroy.minimaltodo.eval_o_)
===============================================================================
  e        static getInstance()
  eval_z   public calculateTwilight(long,double,double)

android.support.v7.app.TwilightCalculator$ArrayOutOfBoundsException      (com.rubenroy.minimaltodo.eval_k6)
===============================================================================
  No methods

android.support.v7.app.TwilightManager   (com.rubenroy.minimaltodo.eval_sq)
===============================================================================
  c    isNight()
  d    private isStateValid(android.support.v7.app.TwilightManager$TwilightState)
  d    private getLastKnownLocationForProvider(java.lang.String)
  k    private getLastKnownLocation()
  y    private updateState(android.location.Location)

android.support.v7.app.TwilightManager$1 (com.rubenroy.minimaltodo.eval_sq$1)
===============================================================================
  No methods

android.support.v7.app.TwilightManager$IOException       (com.rubenroy.minimaltodo.eval_vt)
===============================================================================
  No methods

android.support.v7.app.TwilightManager$TwilightState     (com.rubenroy.minimaltodo.eval_sq$x)
===============================================================================
  No methods

android.support.v7.appcompat.BuildConfig (com.rubenroy.minimaltodo.eval_li)
===============================================================================
  No methods

android.support.v7.appcompat.BuildConfig$NullPointerException    (com.rubenroy.minimaltodo.eval_hp)
===============================================================================
  No methods

android.support.v7.appcompat.R
===============================================================================
  No methods

android.support.v7.appcompat.R$NullPointerException
===============================================================================
  No methods

android.support.v7.appcompat.R$anim
===============================================================================
  No methods

android.support.v7.appcompat.R$attr
===============================================================================
  No methods

android.support.v7.appcompat.R$bool
===============================================================================
  No methods

android.support.v7.appcompat.R$color
===============================================================================
  No methods

android.support.v7.appcompat.R$dimen
===============================================================================
  No methods

android.support.v7.appcompat.R$drawable
===============================================================================
  No methods

android.support.v7.appcompat.R$id
===============================================================================
  No methods

android.support.v7.appcompat.R$integer
===============================================================================
  No methods

android.support.v7.appcompat.R$layout
===============================================================================
  No methods

android.support.v7.appcompat.R$string
===============================================================================
  No methods

android.support.v7.appcompat.R$style
===============================================================================
  No methods

android.support.v7.appcompat.R$styleable
===============================================================================
  No methods

android.support.v7.graphics.drawable.DrawableUtils       (com.rubenroy.minimaltodo.eval_u1)
===============================================================================
  y    public static parseTintMode(int,android.graphics.PorterDuff$Mode)

android.support.v7.graphics.drawable.DrawableUtils$NullPointerException  (com.rubenroy.minimaltodo.eval_ej)
===============================================================================
  No methods

android.support.v7.graphics.drawable.DrawableWrapper     (com.rubenroy.minimaltodo.eval_ek)
===============================================================================
  b                            public setWrappedDrawable(android.graphics.drawable.Drawable)
  z                            public getWrappedDrawable()
  draw                         public draw(android.graphics.Canvas)
  getChangingConfigurations    public getChangingConfigurations()
  getCurrent                   public getCurrent()
  getIntrinsicHeight           public getIntrinsicHeight()
  getIntrinsicWidth            public getIntrinsicWidth()
  getMinimumHeight             public getMinimumHeight()
  getMinimumWidth              public getMinimumWidth()
  getOpacity                   public getOpacity()
  getPadding                   public getPadding(android.graphics.Rect)
  getState                     public getState()
  getTransparentRegion         public getTransparentRegion()
  invalidateDrawable           public invalidateDrawable(android.graphics.drawable.Drawable)
  isAutoMirrored               public isAutoMirrored()
  isStateful                   public isStateful()
  jumpToCurrentState           public jumpToCurrentState()
  onBoundsChange               protected onBoundsChange(android.graphics.Rect)
  onLevelChange                protected onLevelChange(int)
  scheduleDrawable             public scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
  setAlpha                     public setAlpha(int)
  setAutoMirrored              public setAutoMirrored(boolean)
  setChangingConfigurations    public setChangingConfigurations(int)
  setColorFilter               public setColorFilter(android.graphics.ColorFilter)
  setDither                    public setDither(boolean)
  setFilterBitmap              public setFilterBitmap(boolean)
  setHotspot                   public setHotspot(float,float)
  setHotspotBounds             public setHotspotBounds(int,int,int,int)
  setState                     public setState(int[])
  setTint                      public setTint(int)
  setTintList                  public setTintList(android.content.res.ColorStateList)
  setTintMode                  public setTintMode(android.graphics.PorterDuff$Mode)
  setVisible                   public setVisible(boolean,boolean)
  unscheduleDrawable           public unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)

android.support.v7.graphics.drawable.DrawableWrapper$ParseException      (com.rubenroy.minimaltodo.eval_ai)
===============================================================================
  No methods

android.support.v7.graphics.drawable.DrawerArrowDrawable (com.rubenroy.minimaltodo.eval_qx)
===============================================================================
  a                    public getProgress()
  a                    public setVerticalMirror(boolean)
  b                    public getArrowHeadLength()
  b                    public setSpinEnabled(boolean)
  b                    public setGapSize(float)
  e                    public setColor(int)
  eval_e               public setBarThickness(float)
  eval_s               public getDirection()
  h                    public setDirection(int)
  i                    public getBarThickness()
  j                    public getArrowShaftLength()
  m                    public getBarLength()
  n                    public isSpinEnabled()
  q                    public setArrowHeadLength(float)
  r                    public setArrowShaftLength(float)
  s                    private static lerp(float,float,float)
  v                    public setProgress(float)
  x                    public final getPaint()
  y                    public getGapSize()
  z                    public getColor()
  z                    public setBarLength(float)
  draw                 public draw(android.graphics.Canvas)
  getIntrinsicHeight   public getIntrinsicHeight()
  getIntrinsicWidth    public getIntrinsicWidth()
  getOpacity           public getOpacity()
  setAlpha             public setAlpha(int)
  setColorFilter       public setColorFilter(android.graphics.ColorFilter)

android.support.v7.graphics.drawable.DrawerArrowDrawable$ArrayOutOfBoundsException       (com.rubenroy.minimaltodo.eval_gi)
===============================================================================
  No methods

android.support.v7.graphics.drawable.DrawerArrowDrawable$ArrowDirection  (com.rubenroy.minimaltodo.eval_qx$y)
===============================================================================
  No methods

android.support.v7.internal.VersionUtils (com.rubenroy.minimaltodo.eval_b2)
===============================================================================
  i    public static isAtLeastL()

android.support.v7.internal.VersionUtils$NullPointerException    (com.rubenroy.minimaltodo.eval_nt)
===============================================================================
  No methods

android.support.v7.internal.app.AppCompatViewInflater    (com.rubenroy.minimaltodo.eval_g7)
===============================================================================
  c    public final createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean)
  k    private static themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean)
  l    private checkOnClickListener(android.view.View,android.util.AttributeSet)
  u    private createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet)
  w    private createView(android.content.Context,java.lang.String,java.lang.String)

android.support.v7.internal.app.AppCompatViewInflater$DeclaredOnClickListener    (com.rubenroy.minimaltodo.eval_g7$i)
===============================================================================
  q        private resolveMethod(android.content.Context,java.lang.String)
  onClick  public onClick(android.view.View)

android.support.v7.internal.app.AppCompatViewInflater$IOException        (com.rubenroy.minimaltodo.eval_i9)
===============================================================================
  No methods

android.support.v7.internal.app.NavItemSelectedListener  (com.rubenroy.minimaltodo.eval_pg)
===============================================================================
  onItemSelected       public onItemSelected(android.widget.AdapterView,android.view.View,int,long)
  onNothingSelected    public onNothingSelected(android.widget.AdapterView)

android.support.v7.internal.app.NavItemSelectedListener$NullPointerException     (com.rubenroy.minimaltodo.eval_g0)
===============================================================================
  No methods

android.support.v7.internal.app.NotificationCompatImpl21 (com.rubenroy.minimaltodo.eval_xe)
===============================================================================
  w    public static addMediaStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,int[],java.lang.Object)

android.support.v7.internal.app.NotificationCompatImpl21$ArrayOutOfBoundsException       (com.rubenroy.minimaltodo.eval_vm)
===============================================================================
  No methods

android.support.v7.internal.app.NotificationCompatImplBase       (com.rubenroy.minimaltodo.eval_pk)
===============================================================================
  a    public static overrideContentView(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,android.graphics.Bitmap,java.lang.CharSequence,boolean,long,java.util.List,int[],boolean,android.app.PendingIntent)
  m    public static overrideBigContentView(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,android.graphics.Bitmap,java.lang.CharSequence,boolean,long,java.util.List,boolean,android.app.PendingIntent)
  o    private static getBigLayoutResource(int)
  r    private static generateMediaActionButton(android.content.Context,android.support.v4.app.NotificationCompatBase$Action)
  r    private static applyStandardTemplate(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,android.graphics.Bitmap,java.lang.CharSequence,boolean,long,int,boolean)
  y    private static generateBigContentView(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,android.graphics.Bitmap,java.lang.CharSequence,boolean,long,java.util.List,boolean,android.app.PendingIntent)
  z    private static generateContentView(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,android.graphics.Bitmap,java.lang.CharSequence,boolean,long,java.util.List,int[],boolean,android.app.PendingIntent)

android.support.v7.internal.app.NotificationCompatImplBase$IOException   (com.rubenroy.minimaltodo.eval_x_)
===============================================================================
  No methods

android.support.v7.internal.app.ToolbarActionBar (com.rubenroy.minimaltodo.eval_uz)
===============================================================================
  a        public openOptionsMenu()
  a        public setWindowTitle(java.lang.CharSequence)
  b        public getNavigationMode()
  b        public setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
  c        public getCustomView()
  c        public setCustomView(android.view.View,android.support.v7.app.ActionBar$LayoutParams)
  d        public setLogo(android.graphics.drawable.Drawable)
  d        static access$300(android.support.v7.internal.app.ToolbarActionBar)
  d        private ensureListMenuPresenter(android.view.Menu)
  d        public setCustomView(android.view.View)
  d        public setDisplayShowTitleEnabled(boolean)
  e        public setBackgroundDrawable(android.graphics.drawable.Drawable)
  e        public setTitle(int)
  eval_b   public invalidateOptionsMenu()
  eval_c   public getHeight()
  eval_g   public setHomeActionContentDescription(int)
  eval_i   private getMenu()
  eval_j   public isTitleTruncated()
  eval_l   public getTabAt(int)
  eval_m   public getTabCount()
  eval_n   public getThemedContext()
  eval_p   public removeTabAt(int)
  eval_q   public setCustomView(int)
  eval_r   public removeAllTabs()
  eval_w   public hide()
  eval_w   public selectTab(android.support.v7.app.ActionBar$Tab)
  eval_x   public setHomeAsUpIndicator(android.graphics.drawable.Drawable)
  eval_z   public setHomeButtonEnabled(boolean)
  f        public setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
  f        static access$202(android.support.v7.internal.app.ToolbarActionBar,boolean)
  f        public setDisplayOptions(int,int)
  f        public setTitle(java.lang.CharSequence)
  g        public collapseActionView()
  g        public setIcon(int)
  h        public getSubtitle()
  h        public setDisplayHomeAsUpEnabled(boolean)
  i        public getSelectedTab()
  i        public addTab(android.support.v7.app.ActionBar$Tab,boolean)
  i        public onKeyShortcut(int,android.view.KeyEvent)
  j        public getWrappedWindowCallback()
  j        public onConfigurationChanged(android.content.res.Configuration)
  j        static access$000(android.support.v7.internal.app.ToolbarActionBar)
  k        populateOptionsMenu()
  k        public removeOnMenuVisibilityListener(android.support.v7.app.ActionBar$OnMenuVisibilityListener)
  k        public removeTab(android.support.v7.app.ActionBar$Tab)
  k        public setDisplayOptions(int)
  l        public getTitle()
  l        private getListMenuView(android.view.Menu)
  l        public setDefaultDisplayHomeAsUpEnabled(boolean)
  m        public getDisplayOptions()
  m        public addOnMenuVisibilityListener(android.support.v7.app.ActionBar$OnMenuVisibilityListener)
  m        public addTab(android.support.v7.app.ActionBar$Tab,int)
  m        static access$200(android.support.v7.internal.app.ToolbarActionBar)
  m        public setDisplayUseLogoEnabled(boolean)
  m        public setSelectedNavigationItem(int)
  n        public newTab()
  n        public setSubtitle(int)
  o        public addTab(android.support.v7.app.ActionBar$Tab,int,boolean)
  p        public show()
  p        public setListNavigationCallbacks(android.widget.SpinnerAdapter,android.support.v7.app.ActionBar$OnNavigationListener)
  q        public getNavigationItemCount()
  q        public dispatchMenuVisibilityChanged(boolean)
  q        public setNavigationMode(int)
  r        public setShowHideAnimationEnabled(boolean)
  r        public setElevation(float)
  s        public getElevation()
  t        public setHomeActionContentDescription(java.lang.CharSequence)
  v        public setLogo(int)
  w        public setIcon(android.graphics.drawable.Drawable)
  w        public onMenuKeyEvent(android.view.KeyEvent)
  w        public setHomeAsUpIndicator(int)
  x        public isShowing()
  x        public setDisplayShowHomeEnabled(boolean)
  y        public addTab(android.support.v7.app.ActionBar$Tab)
  z        public getSelectedNavigationIndex()
  z        static access$400(android.support.v7.internal.app.ToolbarActionBar,android.view.Menu)
  z        public setDisplayShowCustomEnabled(boolean)
  z        public setSubtitle(java.lang.CharSequence)

android.support.v7.internal.app.ToolbarActionBar$1       (com.rubenroy.minimaltodo.eval_uz$1)
===============================================================================
  run  public run()

android.support.v7.internal.app.ToolbarActionBar$2       (com.rubenroy.minimaltodo.eval_uz$2)
===============================================================================
  b    public onMenuItemClick(android.view.MenuItem)

android.support.v7.internal.app.ToolbarActionBar$ActionMenuPresenterCallback     (com.rubenroy.minimaltodo.eval_uz$_)
===============================================================================
  d    public onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)
  i    public onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder)

android.support.v7.internal.app.ToolbarActionBar$IOException     (com.rubenroy.minimaltodo.eval_d5)
===============================================================================
  No methods

android.support.v7.internal.app.ToolbarActionBar$MenuBuilderCallback     (com.rubenroy.minimaltodo.eval_uz$y)
===============================================================================
  c    public onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder)
  k    public onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem)

android.support.v7.internal.app.ToolbarActionBar$PanelMenuPresenterCallback      (com.rubenroy.minimaltodo.eval_uz$q)
===============================================================================
  d    public onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)
  i    public onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder)

android.support.v7.internal.app.ToolbarActionBar$ToolbarCallbackWrapper  (com.rubenroy.minimaltodo.eval_uz$l)
===============================================================================
  onCreatePanelView    public onCreatePanelView(int)
  onPreparePanel       public onPreparePanel(int,android.view.View,android.view.Menu)

android.support.v7.internal.app.WindowDecorActionBar     (com.rubenroy.minimaltodo.eval_nf)
===============================================================================
  a        static access$500(android.support.v7.internal.app.WindowDecorActionBar)
  a        public setHideOffset(int)
  a        public setWindowTitle(java.lang.CharSequence)
  b        public getNavigationMode()
  b        public setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
  b        static access$000(android.support.v7.internal.app.WindowDecorActionBar)
  c        public getCustomView()
  c        public setCustomView(android.view.View,android.support.v7.app.ActionBar$LayoutParams)
  c        public onWindowVisibilityChanged(int)
  d        completeDeferredDestroyActionMode()
  d        public setLogo(android.graphics.drawable.Drawable)
  d        public startActionMode(android.support.v7.view.ActionMode$Callback)
  d        public setCustomView(android.view.View)
  d        public setDisplayShowTitleEnabled(boolean)
  e        getTintManager()
  e        public setBackgroundDrawable(android.graphics.drawable.Drawable)
  e        static access$100(android.support.v7.internal.app.WindowDecorActionBar)
  e        private getDecorToolbar(android.view.View)
  e        public setTitle(int)
  eval_a   public hasLogo()
  eval_a   static access$400(android.support.v7.internal.app.WindowDecorActionBar)
  eval_c   public getHeight()
  eval_d   static access$600(android.support.v7.internal.app.WindowDecorActionBar)
  eval_g   public setHomeActionContentDescription(int)
  eval_h   public hideForSystem()
  eval_i   public onContentScrollStopped()
  eval_j   public isTitleTruncated()
  eval_l   public getTabAt(int)
  eval_m   public getTabCount()
  eval_n   public getThemedContext()
  eval_o   public onContentScrollStarted()
  eval_p   public removeTabAt(int)
  eval_q   private updateVisibility(boolean)
  eval_q   public setCustomView(int)
  eval_r   public removeAllTabs()
  eval_r   static access$800(android.support.v7.internal.app.WindowDecorActionBar)
  eval_s   public doHide(boolean)
  eval_s   static access$700(boolean,boolean,boolean)
  eval_t   public hasIcon()
  eval_t   public enableContentAnimations(boolean)
  eval_u   public doShow(boolean)
  eval_w   public hide()
  eval_w   public selectTab(android.support.v7.app.ActionBar$Tab)
  eval_x   private hideForActionMode()
  eval_x   public setHomeAsUpIndicator(android.graphics.drawable.Drawable)
  eval_z   public showForSystem()
  eval_z   public setHomeButtonEnabled(boolean)
  f        private cleanupTabs()
  f        public setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
  f        public setDisplayOptions(int,int)
  f        public setTitle(java.lang.CharSequence)
  g        public collapseActionView()
  g        public setIcon(int)
  h        public getSubtitle()
  h        public setDisplayHomeAsUpEnabled(boolean)
  i        public getSelectedTab()
  i        public addTab(android.support.v7.app.ActionBar$Tab,boolean)
  i        private static checkShowingFlags(boolean,boolean,boolean)
  j        private showForActionMode()
  j        public onConfigurationChanged(android.content.res.Configuration)
  j        private configureTab(android.support.v7.app.ActionBar$Tab,int)
  j        public animateToMode(boolean)
  k        public removeOnMenuVisibilityListener(android.support.v7.app.ActionBar$OnMenuVisibilityListener)
  k        public removeTab(android.support.v7.app.ActionBar$Tab)
  k        public setDisplayOptions(int)
  l        public getTitle()
  l        public setDefaultDisplayHomeAsUpEnabled(boolean)
  m        public getDisplayOptions()
  m        public addOnMenuVisibilityListener(android.support.v7.app.ActionBar$OnMenuVisibilityListener)
  m        public addTab(android.support.v7.app.ActionBar$Tab,int)
  m        public setDisplayUseLogoEnabled(boolean)
  m        public setSelectedNavigationItem(int)
  n        public newTab()
  n        static access$200(android.support.v7.internal.app.WindowDecorActionBar)
  n        public setSubtitle(int)
  o        public isHideOnContentScrollEnabled()
  o        public addTab(android.support.v7.app.ActionBar$Tab,int,boolean)
  o        static access$1000(android.support.v7.internal.app.WindowDecorActionBar)
  p        public show()
  p        static access$1100(android.support.v7.internal.app.WindowDecorActionBar)
  p        public setListNavigationCallbacks(android.widget.SpinnerAdapter,android.support.v7.app.ActionBar$OnNavigationListener)
  q        public getNavigationItemCount()
  q        public dispatchMenuVisibilityChanged(boolean)
  q        public setNavigationMode(int)
  r        public setShowHideAnimationEnabled(boolean)
  r        public setElevation(float)
  s        public getElevation()
  s        static access$302(android.support.v7.internal.app.WindowDecorActionBar,android.support.v7.internal.view.ViewPropertyAnimatorCompatSet)
  t        private setHasEmbeddedTabs(boolean)
  t        public setHomeActionContentDescription(java.lang.CharSequence)
  v        private ensureTabsExist()
  v        public setLogo(int)
  w        public setIcon(android.graphics.drawable.Drawable)
  w        private init(android.view.View)
  w        public setHomeAsUpIndicator(int)
  x        public isShowing()
  x        public setDisplayShowHomeEnabled(boolean)
  y        public getHideOffset()
  y        public addTab(android.support.v7.app.ActionBar$Tab)
  y        static access$900(android.support.v7.internal.app.WindowDecorActionBar)
  y        public setHideOnContentScrollEnabled(boolean)
  z        public getSelectedNavigationIndex()
  z        public setDisplayShowCustomEnabled(boolean)
  z        public setSubtitle(java.lang.CharSequence)

android.support.v7.internal.app.WindowDecorActionBar$1   (com.rubenroy.minimaltodo.eval_nf$1)
===============================================================================
  v    public onAnimationEnd(android.view.View)

android.support.v7.internal.app.WindowDecorActionBar$2   (com.rubenroy.minimaltodo.eval_nf$2)
===============================================================================
  v    public onAnimationEnd(android.view.View)

android.support.v7.internal.app.WindowDecorActionBar$3   (com.rubenroy.minimaltodo.eval_nf$3)
===============================================================================
  p    public onAnimationUpdate(android.view.View)

android.support.v7.internal.app.WindowDecorActionBar$ActionModeImpl      (com.rubenroy.minimaltodo.eval_nf$f)
===============================================================================
  c        public onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder)
  c        public setTitleOptionalHint(boolean)
  d        public setSubtitle(java.lang.CharSequence)
  eval_b   public getCustomView()
  eval_e   public isTitleOptional()
  eval_e   public setCustomView(android.view.View)
  eval_w   public setTitle(java.lang.CharSequence)
  h        public onCloseSubMenu(android.support.v7.internal.view.menu.SubMenuBuilder)
  i        public finish()
  j        public onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder)
  k        public onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem)
  m        public getMenuInflater()
  m        public onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)
  m        public setTitle(int)
  o        public getTitle()
  q        public getSubtitle()
  r        public dispatchOnCreate()
  s        public getMenu()
  z        public invalidate()
  z        public setSubtitle(int)

android.support.v7.internal.app.WindowDecorActionBar$ParseException      (com.rubenroy.minimaltodo.eval_w7)
===============================================================================
  No methods

android.support.v7.internal.app.WindowDecorActionBar$TabImpl     (com.rubenroy.minimaltodo.eval_nf$_)
===============================================================================
  c        public getCustomView()
  eval_e   public setContentDescription(int)
  eval_k   public getTag()
  eval_o   public getContentDescription()
  eval_q   public setText(java.lang.CharSequence)
  g        public setTag(java.lang.Object)
  i        public getCallback()
  j        public getIcon()
  j        public setCustomView(android.view.View)
  j        public setIcon(int)
  l        public setText(int)
  l        public setContentDescription(java.lang.CharSequence)
  n        public setCustomView(int)
  o        public select()
  o        public setTabListener(android.support.v7.app.ActionBar$TabListener)
  r        public setPosition(int)
  u        public getText()
  w        public getPosition()
  y        public setIcon(android.graphics.drawable.Drawable)

android.support.v7.internal.text.AllCapsTransformationMethod     (com.rubenroy.minimaltodo.eval_u9)
===============================================================================
  getTransformation    public getTransformation(java.lang.CharSequence,android.view.View)
  onFocusChanged       public onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect)

android.support.v7.internal.text.AllCapsTransformationMethod$NullPointerException        (com.rubenroy.minimaltodo.eval_z2)
===============================================================================
  No methods

android.support.v7.internal.transition.ActionBarTransition       (com.rubenroy.minimaltodo.eval_pj)
===============================================================================
  f    public static beginDelayedTransition(android.view.ViewGroup)

android.support.v7.internal.transition.ActionBarTransition$IOException   (com.rubenroy.minimaltodo.eval_ij)
===============================================================================
  No methods

android.support.v7.internal.view.ActionBarPolicy (com.rubenroy.minimaltodo.eval_ps)
===============================================================================
  a    public hasEmbeddedTabs()
  b    public showsOverflowMenuButton()
  c    public enableHomeButtonByDefault()
  i    public getEmbeddedMenuWidthLimit()
  o    public getStackedTabMaxWidth()
  t    public getTabContainerHeight()
  y    public static get(android.content.Context)
  z    public getMaxActionButtons()

android.support.v7.internal.view.ActionBarPolicy$IOException     (com.rubenroy.minimaltodo.eval_fl)
===============================================================================
  No methods

android.support.v7.internal.view.ContextThemeWrapper     (com.rubenroy.minimaltodo.eval_zl)
===============================================================================
  b                public getThemeResId()
  h                protected onApplyThemeResource(android.content.res.Resources$Theme,int,boolean)
  y                private initializeTheme()
  getSystemService public getSystemService(java.lang.String)
  getTheme         public getTheme()
  setTheme         public setTheme(int)

android.support.v7.internal.view.ContextThemeWrapper$ParseException      (com.rubenroy.minimaltodo.eval_u8)
===============================================================================
  No methods

android.support.v7.internal.view.StandaloneActionMode    (com.rubenroy.minimaltodo.eval_cy)
===============================================================================
  c        public onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder)
  c        public onCloseSubMenu(android.support.v7.internal.view.menu.SubMenuBuilder)
  c        public setTitleOptionalHint(boolean)
  d        public setSubtitle(java.lang.CharSequence)
  eval_b   public getCustomView()
  eval_e   public isTitleOptional()
  eval_e   public setCustomView(android.view.View)
  eval_w   public setTitle(java.lang.CharSequence)
  i        public finish()
  k        public onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem)
  m        public getMenuInflater()
  m        public setTitle(int)
  o        public getTitle()
  p        public isUiFocusable()
  q        public getSubtitle()
  q        public onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder)
  s        public getMenu()
  x        public onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)
  z        public invalidate()
  z        public setSubtitle(int)

android.support.v7.internal.view.StandaloneActionMode$IOException        (com.rubenroy.minimaltodo.eval_we)
===============================================================================
  No methods

android.support.v7.internal.view.SupportActionModeWrapper        (com.rubenroy.minimaltodo.eval_t_)
===============================================================================
  finish               public finish()
  getCustomView        public getCustomView()
  getMenu              public getMenu()
  getMenuInflater      public getMenuInflater()
  getSubtitle          public getSubtitle()
  getTag               public getTag()
  getTitle             public getTitle()
  getTitleOptionalHint public getTitleOptionalHint()
  invalidate           public invalidate()
  isTitleOptional      public isTitleOptional()
  setCustomView        public setCustomView(android.view.View)
  setSubtitle          public setSubtitle(int)
  setSubtitle          public setSubtitle(java.lang.CharSequence)
  setTag               public setTag(java.lang.Object)
  setTitle             public setTitle(int)
  setTitle             public setTitle(java.lang.CharSequence)
  setTitleOptionalHint public setTitleOptionalHint(boolean)

android.support.v7.internal.view.SupportActionModeWrapper$CallbackWrapper        (com.rubenroy.minimaltodo.eval_t_$q)
===============================================================================
  d    public getActionModeWrapper(android.support.v7.view.ActionMode)
  o    public onCreateActionMode(android.support.v7.view.ActionMode,android.view.Menu)
  p    public onDestroyActionMode(android.support.v7.view.ActionMode)
  p    public onPrepareActionMode(android.support.v7.view.ActionMode,android.view.Menu)
  q    private getMenuWrapper(android.view.Menu)
  y    public onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem)

android.support.v7.internal.view.SupportActionModeWrapper$ParseException (com.rubenroy.minimaltodo.eval_l0)
===============================================================================
  No methods

android.support.v7.internal.view.SupportMenuInflater     (com.rubenroy.minimaltodo.eval_jx)
===============================================================================
  a        static access$500()
  c        static access$100(android.support.v7.internal.view.SupportMenuInflater)
  e        private getRealOwner()
  h        static access$200()
  n        static access$400(android.support.v7.internal.view.SupportMenuInflater)
  o        private parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu)
  q        private findRealOwner(java.lang.Object)
  r        static access$600(android.support.v7.internal.view.SupportMenuInflater)
  v        static access$300(android.support.v7.internal.view.SupportMenuInflater)
  inflate  public inflate(int,android.view.Menu)

android.support.v7.internal.view.SupportMenuInflater$InflatedOnMenuItemClickListener     (com.rubenroy.minimaltodo.eval_jx$w)
===============================================================================
  onMenuItemClick  public onMenuItemClick(android.view.MenuItem)

android.support.v7.internal.view.SupportMenuInflater$MenuState   (com.rubenroy.minimaltodo.eval_jx$b)
===============================================================================
  d    public addItem()
  h    public hasAddedItem()
  h    public readItem(android.util.AttributeSet)
  h    private setItem(android.view.MenuItem)
  i    private newInstance(java.lang.String,java.lang.Class[],java.lang.Object[])
  k    private getShortcut(java.lang.String)
  q    public resetGroup()
  u    public readGroup(android.util.AttributeSet)
  x    static access$000(android.support.v7.internal.view.SupportMenuInflater$MenuState)
  y    public addSubMenuItem()

android.support.v7.internal.view.SupportMenuInflater$ParseException      (com.rubenroy.minimaltodo.eval_uy)
===============================================================================
  No methods

android.support.v7.internal.view.ViewPropertyAnimatorCompatSet   (com.rubenroy.minimaltodo.eval_ag6)
===============================================================================
  b        static access$000(android.support.v7.internal.view.ViewPropertyAnimatorCompatSet)
  c        private onAnimationsEnded()
  d        public play(android.support.v4.view.ViewPropertyAnimatorCompat)
  eval_n   static access$100(android.support.v7.internal.view.ViewPropertyAnimatorCompatSet)
  f        public setDuration(long)
  h        public setInterpolator(android.view.animation.Interpolator)
  j        static access$200(android.support.v7.internal.view.ViewPropertyAnimatorCompatSet)
  n        public cancel()
  q        public playSequentially(android.support.v4.view.ViewPropertyAnimatorCompat,android.support.v4.view.ViewPropertyAnimatorCompat)
  w        public start()
  z        public setListener(android.support.v4.view.ViewPropertyAnimatorListener)

android.support.v7.internal.view.ViewPropertyAnimatorCompatSet$1 (com.rubenroy.minimaltodo.eval_ag6$1)
===============================================================================
  d    public onAnimationStart(android.view.View)
  q    onEnd()
  v    public onAnimationEnd(android.view.View)

android.support.v7.internal.view.ViewPropertyAnimatorCompatSet$ParseException    (com.rubenroy.minimaltodo.eval_od5)
===============================================================================
  No methods

android.support.v7.internal.view.WindowCallbackWrapper   (com.rubenroy.minimaltodo.eval_jek)
===============================================================================
  dispatchGenericMotionEvent       public dispatchGenericMotionEvent(android.view.MotionEvent)
  dispatchKeyEvent                 public dispatchKeyEvent(android.view.KeyEvent)
  dispatchKeyShortcutEvent         public dispatchKeyShortcutEvent(android.view.KeyEvent)
  dispatchPopulateAccessibilityEvent   public dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
  dispatchTouchEvent               public dispatchTouchEvent(android.view.MotionEvent)
  dispatchTrackballEvent           public dispatchTrackballEvent(android.view.MotionEvent)
  onActionModeFinished             public onActionModeFinished(android.view.ActionMode)
  onActionModeStarted              public onActionModeStarted(android.view.ActionMode)
  onAttachedToWindow               public onAttachedToWindow()
  onContentChanged                 public onContentChanged()
  onCreatePanelMenu                public onCreatePanelMenu(int,android.view.Menu)
  onCreatePanelView                public onCreatePanelView(int)
  onDetachedFromWindow             public onDetachedFromWindow()
  onMenuItemSelected               public onMenuItemSelected(int,android.view.MenuItem)
  onMenuOpened                     public onMenuOpened(int,android.view.Menu)
  onPanelClosed                    public onPanelClosed(int,android.view.Menu)
  onPreparePanel                   public onPreparePanel(int,android.view.View,android.view.Menu)
  onSearchRequested                public onSearchRequested()
  onSearchRequested                public onSearchRequested(android.view.SearchEvent)
  onWindowAttributesChanged        public onWindowAttributesChanged(android.view.WindowManager$LayoutParams)
  onWindowFocusChanged             public onWindowFocusChanged(boolean)
  onWindowStartingActionMode       public onWindowStartingActionMode(android.view.ActionMode$Callback)
  onWindowStartingActionMode       public onWindowStartingActionMode(android.view.ActionMode$Callback,int)

android.support.v7.internal.view.WindowCallbackWrapper$Exception (com.rubenroy.minimaltodo.eval_m84)
===============================================================================
  No methods

android.support.v7.internal.view.menu.ActionMenuItem     (com.rubenroy.minimaltodo.eval_bh4)
===============================================================================
  c                            public setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener)
  setActionView                public setActionView(android.view.View)
  setActionView                public setActionView(int)
  setShowAsActionFlags         public setShowAsActionFlags(int)
  t                            public setSupportActionProvider(android.support.v4.view.ActionProvider)
  u                            public setExclusiveCheckable(boolean)
  v                            public invoke()
  y                            public getSupportActionProvider()
  collapseActionView           public collapseActionView()
  expandActionView             public expandActionView()
  getActionProvider            public getActionProvider()
  getActionView                public getActionView()
  getAlphabeticShortcut        public getAlphabeticShortcut()
  getGroupId                   public getGroupId()
  getIcon                      public getIcon()
  getIntent                    public getIntent()
  getItemId                    public getItemId()
  getMenuInfo                  public getMenuInfo()
  getNumericShortcut           public getNumericShortcut()
  getOrder                     public getOrder()
  getSubMenu                   public getSubMenu()
  getTitle                     public getTitle()
  getTitleCondensed            public getTitleCondensed()
  hasSubMenu                   public hasSubMenu()
  isActionViewExpanded         public isActionViewExpanded()
  isCheckable                  public isCheckable()
  isChecked                    public isChecked()
  isEnabled                    public isEnabled()
  isVisible                    public isVisible()
  setActionProvider            public setActionProvider(android.view.ActionProvider)
  setActionView                public volatile setActionView(android.view.View)
  setActionView                public volatile setActionView(int)
  setAlphabeticShortcut        public setAlphabeticShortcut(char)
  setCheckable                 public setCheckable(boolean)
  setChecked                   public setChecked(boolean)
  setEnabled                   public setEnabled(boolean)
  setIcon                      public setIcon(android.graphics.drawable.Drawable)
  setIcon                      public setIcon(int)
  setIntent                    public setIntent(android.content.Intent)
  setNumericShortcut           public setNumericShortcut(char)
  setOnActionExpandListener    public setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)
  setOnMenuItemClickListener   public setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)
  setShortcut                  public setShortcut(char,char)
  setShowAsAction              public setShowAsAction(int)
  setShowAsActionFlags         public volatile setShowAsActionFlags(int)
  setTitle                     public setTitle(int)
  setTitle                     public setTitle(java.lang.CharSequence)
  setTitleCondensed            public setTitleCondensed(java.lang.CharSequence)
  setVisible                   public setVisible(boolean)

android.support.v7.internal.view.menu.ActionMenuItem$ParseException      (com.rubenroy.minimaltodo.eval_qxc)
===============================================================================
  No methods

android.support.v7.internal.view.menu.ActionMenuItemView (com.rubenroy.minimaltodo.eval_hr5)
===============================================================================
  a                        public setIcon(android.graphics.drawable.Drawable)
  a                        static access$000(android.support.v7.internal.view.menu.ActionMenuItemView)
  c                        public getItemData()
  c                        public setChecked(boolean)
  c                        public setTitle(java.lang.CharSequence)
  d                        public setPopupCallback(android.support.v7.internal.view.menu.ActionMenuItemView$PopupCallback)
  eval_y                   public needsDividerAfter()
  h                        public showsIcon()
  i                        static access$100(android.support.v7.internal.view.menu.ActionMenuItemView)
  m                        static access$200(android.support.v7.internal.view.menu.ActionMenuItemView)
  n                        public needsDividerBefore()
  q                        public hasText()
  q                        public setItemInvoker(android.support.v7.internal.view.menu.MenuBuilder$ItemInvoker)
  q                        public setShortcut(boolean,char)
  u                        public setCheckable(boolean)
  v                        public prefersCondensedTitle()
  w                        public initialize(android.support.v7.internal.view.menu.MenuItemImpl,int)
  w                        public setExpandedFormat(boolean)
  x                        private updateTextButtonVisibility()
  onClick                  public onClick(android.view.View)
  onConfigurationChanged   public onConfigurationChanged(android.content.res.Configuration)
  onLongClick              public onLongClick(android.view.View)
  onMeasure                protected onMeasure(int,int)
  onTouchEvent             public onTouchEvent(android.view.MotionEvent)
  setPadding               public setPadding(int,int,int,int)

android.support.v7.internal.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener        (com.rubenroy.minimaltodo.eval_hr5$c)
===============================================================================
  j    protected onForwardingStarted()
  u    public getPopup()

android.support.v7.internal.view.menu.ActionMenuItemView$ArrayOutOfBoundsException       (com.rubenroy.minimaltodo.eval_wtj)
===============================================================================
  No methods

android.support.v7.internal.view.menu.ActionMenuItemView$PopupCallback   (com.rubenroy.minimaltodo.eval_hr5$y)
===============================================================================
  eval_y   public abstract getPopup()

android.support.v7.internal.view.menu.BaseMenuPresenter  (com.rubenroy.minimaltodo.eval_ykq)
===============================================================================
  a    public collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl)
  a    public setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback)
  d    public flagActionItems()
  g    public expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl)
  g    public updateMenuView(boolean)
  l    public createItemView(android.view.ViewGroup)
  n    protected filterLeftoverView(android.view.ViewGroup,int)
  n    public setId(int)
  o    public initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder)
  o    public onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)
  p    protected addItemView(android.view.View,int)
  r    public getCallback()
  r    public onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder)
  t    public shouldIncludeItem(int,android.support.v7.internal.view.menu.MenuItemImpl)
  v    public getId()
  w    public getItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)
  z    public abstract bindItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.support.v7.internal.view.menu.MenuView$ItemView)
  z    public getMenuView(android.view.ViewGroup)

android.support.v7.internal.view.menu.BaseMenuPresenter$NullPointerException     (com.rubenroy.minimaltodo.eval_rmk)
===============================================================================
  No methods

android.support.v7.internal.view.menu.BaseMenuWrapper    (com.rubenroy.minimaltodo.eval_efn)
===============================================================================
  h    final getMenuItemWrapper(android.view.MenuItem)
  i    final internalRemoveItem(int)
  n    final getSubMenuWrapper(android.view.SubMenu)
  u    final internalClear()
  z    final internalRemoveGroup(int)

android.support.v7.internal.view.menu.BaseMenuWrapper$IOException        (com.rubenroy.minimaltodo.eval_opb)
===============================================================================
  No methods

android.support.v7.internal.view.menu.BaseWrapper        (com.rubenroy.minimaltodo.eval_g3e)
===============================================================================
  j    public getWrappedObject()

android.support.v7.internal.view.menu.BaseWrapper$Exception      (com.rubenroy.minimaltodo.eval_nkd)
===============================================================================
  No methods

android.support.v7.internal.view.menu.ExpandedMenuView   (com.rubenroy.minimaltodo.eval_v_6)
===============================================================================
  c                    public getWindowAnimations()
  d                    public initialize(android.support.v7.internal.view.menu.MenuBuilder)
  g                    public invokeItem(android.support.v7.internal.view.menu.MenuItemImpl)
  onDetachedFromWindow protected onDetachedFromWindow()
  onItemClick          public onItemClick(android.widget.AdapterView,android.view.View,int,long)

android.support.v7.internal.view.menu.ExpandedMenuView$Exception (com.rubenroy.minimaltodo.eval_okv)
===============================================================================
  No methods

android.support.v7.internal.view.menu.ListMenuItemView   (com.rubenroy.minimaltodo.eval_jlj)
===============================================================================
  a                public setIcon(android.graphics.drawable.Drawable)
  c                public getItemData()
  c                public setChecked(boolean)
  c                public setTitle(java.lang.CharSequence)
  eval_z           private insertIconView()
  f                private insertCheckBox()
  h                public showsIcon()
  l                private insertRadioButton()
  l                public setForceShowIcon(boolean)
  q                public setShortcut(boolean,char)
  u                public setCheckable(boolean)
  v                public prefersCondensedTitle()
  w                public initialize(android.support.v7.internal.view.menu.MenuItemImpl,int)
  x                private getInflater()
  onFinishInflate  protected onFinishInflate()
  onMeasure        protected onMeasure(int,int)

android.support.v7.internal.view.menu.ListMenuItemView$Exception (com.rubenroy.minimaltodo.eval_pev)
===============================================================================
  No methods

android.support.v7.internal.view.menu.ListMenuPresenter  (com.rubenroy.minimaltodo.eval_ez4)
===============================================================================
  a            public onSaveInstanceState()
  a            public saveHierarchyState(android.os.Bundle)
  a            public collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl)
  a            public setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback)
  d            public flagActionItems()
  eval_l       getItemIndexOffset()
  g            public restoreHierarchyState(android.os.Bundle)
  g            public expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl)
  g            public updateMenuView(boolean)
  o            public initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder)
  o            public onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)
  r            public onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder)
  r            public setId(int)
  t            static access$000(android.support.v7.internal.view.menu.ListMenuPresenter)
  v            public getId()
  w            public getAdapter()
  x            public setItemIndexOffset(int)
  y            public onRestoreInstanceState(android.os.Parcelable)
  z            public getMenuView(android.view.ViewGroup)
  onItemClick  public onItemClick(android.widget.AdapterView,android.view.View,int,long)

android.support.v7.internal.view.menu.ListMenuPresenter$MenuAdapter      (com.rubenroy.minimaltodo.eval_ez4$c)
===============================================================================
  getItem              public getItem(int)
  t                    findExpandedIndex()
  getCount             public getCount()
  getItem              public volatile getItem(int)
  getItemId            public getItemId(int)
  getView              public getView(int,android.view.View,android.view.ViewGroup)
  notifyDataSetChanged public notifyDataSetChanged()

android.support.v7.internal.view.menu.ListMenuPresenter$NullPointerException     (com.rubenroy.minimaltodo.eval_hyd)
===============================================================================
  No methods

android.support.v7.internal.view.menu.MenuBuilder        (com.rubenroy.minimaltodo.eval_s4w)
===============================================================================
  a                        public changeMenuMode()
  a                        onItemVisibleChanged(android.support.v7.internal.view.menu.MenuItemImpl)
  a                        public performItemAction(android.view.MenuItem,int)
  a                        protected setHeaderTitleInt(int)
  b                        private static getOrdering(int)
  b                        private removeItemAtInt(int,boolean)
  c                        public addMenuPresenter(android.support.v7.internal.view.menu.MenuPresenter)
  c                        private dispatchSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder,android.support.v7.internal.view.menu.MenuPresenter)
  c                        private dispatchPresenterUpdate(boolean)
  c                        public findGroupIndex(int)
  d                        public getRootMenu()
  d                        setOptionalIconsVisible(boolean)
  e                        public setCallback(android.support.v7.internal.view.menu.MenuBuilder$Callback)
  eval_b                   public getHeaderIcon()
  eval_d                   public startDispatchingItemsChanged()
  eval_f                   public clearAll()
  eval_g                   public getContext()
  eval_i                   public getHeaderView()
  eval_p                   private dispatchRestoreInstanceState(android.os.Bundle)
  eval_q                   public getHeaderTitle()
  eval_r                   public getExpandedItem()
  eval_v                   getOptionalIconsVisible()
  f                        public getVisibleItems()
  f                        protected setHeaderIconInt(android.graphics.drawable.Drawable)
  f                        public restorePresenterStates(android.os.Bundle)
  f                        private setShortcutsVisibleInner(boolean)
  f                        protected setHeaderIconInt(int)
  h                        public savePresenterStates(android.os.Bundle)
  h                        public setDefaultShowAsAction(int)
  i                        public stopDispatchingItemsChanged()
  j                        dispatchMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem)
  j                        public onItemsChanged(boolean)
  k                        getResources()
  k                        protected setHeaderTitleInt(java.lang.CharSequence)
  l                        public performItemAction(android.view.MenuItem,android.support.v7.internal.view.menu.MenuPresenter,int)
  l                        private createNewMenuItem(int,int,int,int,java.lang.CharSequence,int)
  m                        public isShortcutsVisible()
  m                        private dispatchSaveInstanceState(android.os.Bundle)
  m                        public findGroupIndex(int,int)
  n                        onItemActionRequestChanged(android.support.v7.internal.view.menu.MenuItemImpl)
  n                        public setCurrentMenuInfo(android.view.ContextMenu$ContextMenuInfo)
  n                        public findItemIndex(int)
  o                        public setShortcutsVisible(boolean)
  p                        public flagActionItems()
  p                        public removeMenuPresenter(android.support.v7.internal.view.menu.MenuPresenter)
  q                        public getNonActionItems()
  q                        public removeItemAt(int)
  q                        findItemWithShortcutForKey(int,android.view.KeyEvent)
  r                        public collapseItemActionView(android.support.v7.internal.view.menu.MenuItemImpl)
  s                        public saveActionViewStates(android.os.Bundle)
  s                        public setOverrideVisibleItems(boolean)
  t                        public restoreActionViewStates(android.os.Bundle)
  u                        public getActionItems()
  u                        public addMenuPresenter(android.support.v7.internal.view.menu.MenuPresenter,android.content.Context)
  u                        private setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View)
  v                        isQwertyMode()
  v                        setExclusiveItemChecked(android.view.MenuItem)
  w                        private static findInsertIndex(java.util.ArrayList,int)
  x                        protected getActionViewStatesKey()
  x                        public expandItemActionView(android.support.v7.internal.view.menu.MenuItemImpl)
  x                        public final close(boolean)
  y                        findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent)
  z                        protected setHeaderViewInt(android.view.View)
  z                        protected addInternal(int,int,int,java.lang.CharSequence)
  add                      public add(int)
  add                      public add(int,int,int,int)
  add                      public add(int,int,int,java.lang.CharSequence)
  add                      public add(java.lang.CharSequence)
  addIntentOptions         public addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])
  addSubMenu               public addSubMenu(int)
  addSubMenu               public addSubMenu(int,int,int,int)
  addSubMenu               public addSubMenu(int,int,int,java.lang.CharSequence)
  addSubMenu               public addSubMenu(java.lang.CharSequence)
  clear                    public clear()
  clearHeader              public clearHeader()
  close                    public close()
  findItem                 public findItem(int)
  getItem                  public getItem(int)
  hasVisibleItems          public hasVisibleItems()
  isShortcutKey            public isShortcutKey(int,android.view.KeyEvent)
  performIdentifierAction  public performIdentifierAction(int,int)
  performShortcut          public performShortcut(int,android.view.KeyEvent,int)
  removeGroup              public removeGroup(int)
  removeItem               public removeItem(int)
  setGroupCheckable        public setGroupCheckable(int,boolean,boolean)
  setGroupEnabled          public setGroupEnabled(int,boolean)
  setGroupVisible          public setGroupVisible(int,boolean)
  setQwertyMode            public setQwertyMode(boolean)
  size                     public size()

android.support.v7.internal.view.menu.MenuBuilder$Callback       (com.rubenroy.minimaltodo.eval_s4w$c)
===============================================================================
  c    public abstract onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder)
  k    public abstract onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem)

android.support.v7.internal.view.menu.MenuBuilder$Exception      (com.rubenroy.minimaltodo.eval_tif)
===============================================================================
  No methods

android.support.v7.internal.view.menu.MenuBuilder$ItemInvoker    (com.rubenroy.minimaltodo.eval_s4w$s)
===============================================================================
  g    public abstract invokeItem(android.support.v7.internal.view.menu.MenuItemImpl)

android.support.v7.internal.view.menu.MenuDialogHelper   (com.rubenroy.minimaltodo.eval_xyo)
===============================================================================
  c            public show(android.os.IBinder)
  d            public onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)
  d            public setPresenterCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback)
  i            public onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder)
  z            public dismiss()
  onClick      public onClick(android.content.DialogInterface,int)
  onDismiss    public onDismiss(android.content.DialogInterface)
  onKey        public onKey(android.content.DialogInterface,int,android.view.KeyEvent)

android.support.v7.internal.view.menu.MenuDialogHelper$Exception (com.rubenroy.minimaltodo.eval_tbo)
===============================================================================
  No methods

android.support.v7.internal.view.menu.MenuItemImpl       (com.rubenroy.minimaltodo.eval_fpr)
===============================================================================
  a                            getShortcut()
  b                            public requiresActionButton()
  c                            public showsTextAsAction()
  c                            public setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener)
  c                            public setCallback(java.lang.Runnable)
  eval_g                       public isExclusiveCheckable()
  eval_h                       public isActionButton()
  eval_u                       public invoke()
  eval_w                       public hasCollapsibleActionView()
  g                            public requestsActionButton()
  g                            getTitleForItemView(android.support.v7.internal.view.menu.MenuView$ItemView)
  i                            public shouldShowIcon()
  k                            getShortcutLabel()
  k                            static access$000(android.support.v7.internal.view.menu.MenuItemImpl)
  m                            public getOrdering()
  o                            setVisibleInt(boolean)
  q                            public setExclusiveCheckable(boolean)
  r                            public setIsActionButton(boolean)
  s                            public actionFormatChanged()
  setActionView                public setActionView(android.view.View)
  setActionView                public setActionView(int)
  setShowAsActionFlags         public setShowAsActionFlags(int)
  t                            shouldShowShortcut()
  t                            public setSupportActionProvider(android.support.v4.view.ActionProvider)
  u                            public setActionViewExpanded(boolean)
  v                            public setSubMenu(android.support.v7.internal.view.menu.SubMenuBuilder)
  x                            setCheckedInt(boolean)
  y                            public getSupportActionProvider()
  z                            getCallback()
  z                            setMenuInfo(android.view.ContextMenu$ContextMenuInfo)
  collapseActionView           public collapseActionView()
  expandActionView             public expandActionView()
  getActionProvider            public getActionProvider()
  getActionView                public getActionView()
  getAlphabeticShortcut        public getAlphabeticShortcut()
  getGroupId                   public getGroupId()
  getIcon                      public getIcon()
  getIntent                    public getIntent()
  getItemId                    public getItemId()
  getMenuInfo                  public getMenuInfo()
  getNumericShortcut           public getNumericShortcut()
  getOrder                     public getOrder()
  getSubMenu                   public getSubMenu()
  getTitle                     public getTitle()
  getTitleCondensed            public getTitleCondensed()
  hasSubMenu                   public hasSubMenu()
  isActionViewExpanded         public isActionViewExpanded()
  isCheckable                  public isCheckable()
  isChecked                    public isChecked()
  isEnabled                    public isEnabled()
  isVisible                    public isVisible()
  setActionProvider            public setActionProvider(android.view.ActionProvider)
  setActionView                public volatile setActionView(android.view.View)
  setActionView                public volatile setActionView(int)
  setAlphabeticShortcut        public setAlphabeticShortcut(char)
  setCheckable                 public setCheckable(boolean)
  setChecked                   public setChecked(boolean)
  setEnabled                   public setEnabled(boolean)
  setIcon                      public setIcon(android.graphics.drawable.Drawable)
  setIcon                      public setIcon(int)
  setIntent                    public setIntent(android.content.Intent)
  setNumericShortcut           public setNumericShortcut(char)
  setOnActionExpandListener    public setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)
  setOnMenuItemClickListener   public setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)
  setShortcut                  public setShortcut(char,char)
  setShowAsAction              public setShowAsAction(int)
  setShowAsActionFlags         public volatile setShowAsActionFlags(int)
  setTitle                     public setTitle(int)
  setTitle                     public setTitle(java.lang.CharSequence)
  setTitleCondensed            public setTitleCondensed(java.lang.CharSequence)
  setVisible                   public setVisible(boolean)
  toString                     public toString()

android.support.v7.internal.view.menu.MenuItemImpl$1     (com.rubenroy.minimaltodo.eval_fpr$1)
===============================================================================
  i    public onActionProviderVisibilityChanged(boolean)

android.support.v7.internal.view.menu.MenuItemImpl$NullPointerException  (com.rubenroy.minimaltodo.eval_iev)
===============================================================================
  No methods

android.support.v7.internal.view.menu.MenuItemWrapperICS (com.rubenroy.minimaltodo.eval_wvi)
===============================================================================
  g                            public setExclusiveCheckable(boolean)
  t                            createActionProviderWrapper(android.view.ActionProvider)
  collapseActionView           public collapseActionView()
  expandActionView             public expandActionView()
  getActionProvider            public getActionProvider()
  getActionView                public getActionView()
  getAlphabeticShortcut        public getAlphabeticShortcut()
  getGroupId                   public getGroupId()
  getIcon                      public getIcon()
  getIntent                    public getIntent()
  getItemId                    public getItemId()
  getMenuInfo                  public getMenuInfo()
  getNumericShortcut           public getNumericShortcut()
  getOrder                     public getOrder()
  getSubMenu                   public getSubMenu()
  getTitle                     public getTitle()
  getTitleCondensed            public getTitleCondensed()
  hasSubMenu                   public hasSubMenu()
  isActionViewExpanded         public isActionViewExpanded()
  isCheckable                  public isCheckable()
  isChecked                    public isChecked()
  isEnabled                    public isEnabled()
  isVisible                    public isVisible()
  setActionProvider            public setActionProvider(android.view.ActionProvider)
  setActionView                public setActionView(android.view.View)
  setActionView                public setActionView(int)
  setAlphabeticShortcut        public setAlphabeticShortcut(char)
  setCheckable                 public setCheckable(boolean)
  setChecked                   public setChecked(boolean)
  setEnabled                   public setEnabled(boolean)
  setIcon                      public setIcon(android.graphics.drawable.Drawable)
  setIcon                      public setIcon(int)
  setIntent                    public setIntent(android.content.Intent)
  setNumericShortcut           public setNumericShortcut(char)
  setOnActionExpandListener    public setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)
  setOnMenuItemClickListener   public setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)
  setShortcut                  public setShortcut(char,char)
  setShowAsAction              public setShowAsAction(int)
  setShowAsActionFlags         public setShowAsActionFlags(int)
  setTitle                     public setTitle(int)
  setTitle                     public setTitle(java.lang.CharSequence)
  setTitleCondensed            public setTitleCondensed(java.lang.CharSequence)
  setVisible                   public setVisible(boolean)

android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper   (com.rubenroy.minimaltodo.eval_wvi$i)
===============================================================================
  c        public onPrepareSubMenu(android.view.SubMenu)
  eval_t   public onPerformDefaultAction()
  h        public hasSubMenu()
  p        public onCreateActionView()

android.support.v7.internal.view.menu.MenuItemWrapperICS$ArrayOutOfBoundsException       (com.rubenroy.minimaltodo.eval_wtw)
===============================================================================
  No methods

android.support.v7.internal.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper    (com.rubenroy.minimaltodo.eval_wvi$p)
===============================================================================
  l    public onActionViewExpanded()
  w    getWrappedView()
  x    public onActionViewCollapsed()

android.support.v7.internal.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper   (com.rubenroy.minimaltodo.eval_wvi$u)
===============================================================================
  f    public onMenuItemActionCollapse(android.view.MenuItem)
  g    public onMenuItemActionExpand(android.view.MenuItem)

android.support.v7.internal.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper  (com.rubenroy.minimaltodo.eval_wvi$t)
===============================================================================
  onMenuItemClick  public onMenuItemClick(android.view.MenuItem)

android.support.v7.internal.view.menu.MenuItemWrapperJB  (com.rubenroy.minimaltodo.eval_c6b)
===============================================================================
  t    createActionProviderWrapper(android.view.ActionProvider)

android.support.v7.internal.view.menu.MenuItemWrapperJB$ActionProviderWrapperJB  (com.rubenroy.minimaltodo.eval_c6b$j)
===============================================================================
  e                                public overridesItemVisibility()
  eval_a                           public refreshVisibility()
  eval_m                           public isVisible()
  k                                public onCreateActionView(android.view.MenuItem)
  z                                public setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener)
  onActionProviderVisibilityChanged    public onActionProviderVisibilityChanged(boolean)

android.support.v7.internal.view.menu.MenuItemWrapperJB$NullPointerException     (com.rubenroy.minimaltodo.eval_xyc)
===============================================================================
  No methods

android.support.v7.internal.view.menu.MenuPopupHelper    (com.rubenroy.minimaltodo.eval_dzn)
===============================================================================
  a                public onSaveInstanceState()
  a                public collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl)
  a                public setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback)
  c                static access$300(android.support.v7.internal.view.menu.MenuPopupHelper)
  d                public flagActionItems()
  f                private measureContentWidth()
  f                static access$100(android.support.v7.internal.view.menu.MenuPopupHelper)
  g                public expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl)
  g                public updateMenuView(boolean)
  l                static access$200(android.support.v7.internal.view.menu.MenuPopupHelper)
  n                public setForceShowIcon(boolean)
  o                public dismiss()
  o                public initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder)
  o                public onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)
  p                public getPopup()
  q                public show()
  r                public onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder)
  s                public setAnchorView(android.view.View)
  t                public setGravity(int)
  v                public getId()
  w                public getGravity()
  y                public isShowing()
  y                public onRestoreInstanceState(android.os.Parcelable)
  z                public tryShow()
  z                public getMenuView(android.view.ViewGroup)
  onDismiss        public onDismiss()
  onGlobalLayout   public onGlobalLayout()
  onItemClick      public onItemClick(android.widget.AdapterView,android.view.View,int,long)
  onKey            public onKey(android.view.View,int,android.view.KeyEvent)

android.support.v7.internal.view.menu.MenuPopupHelper$IOException        (com.rubenroy.minimaltodo.eval_rz2)
===============================================================================
  No methods

android.support.v7.internal.view.menu.MenuPopupHelper$MenuAdapter        (com.rubenroy.minimaltodo.eval_dzn$t)
===============================================================================
  getItem              public getItem(int)
  k                    static access$000(android.support.v7.internal.view.menu.MenuPopupHelper$MenuAdapter)
  n                    findExpandedIndex()
  getCount             public getCount()
  getItem              public volatile getItem(int)
  getItemId            public getItemId(int)
  getView              public getView(int,android.view.View,android.view.ViewGroup)
  notifyDataSetChanged public notifyDataSetChanged()

android.support.v7.internal.view.menu.MenuPresenter      (com.rubenroy.minimaltodo.eval__x2)
===============================================================================
  a    public abstract onSaveInstanceState()
  a    public abstract collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl)
  a    public abstract setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback)
  d    public abstract flagActionItems()
  g    public abstract expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl)
  g    public abstract updateMenuView(boolean)
  o    public abstract initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder)
  o    public abstract onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)
  r    public abstract onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder)
  v    public abstract getId()
  y    public abstract onRestoreInstanceState(android.os.Parcelable)
  z    public abstract getMenuView(android.view.ViewGroup)

android.support.v7.internal.view.menu.MenuPresenter$ArrayOutOfBoundsException    (com.rubenroy.minimaltodo.eval_l57)
===============================================================================
  No methods

android.support.v7.internal.view.menu.MenuPresenter$Callback     (com.rubenroy.minimaltodo.eval__x2$l)
===============================================================================
  d    public abstract onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)
  i    public abstract onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder)

android.support.v7.internal.view.menu.MenuView   (com.rubenroy.minimaltodo.eval_ht_)
===============================================================================
  c    public abstract getWindowAnimations()
  d    public abstract initialize(android.support.v7.internal.view.menu.MenuBuilder)

android.support.v7.internal.view.menu.MenuView$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_h2y)
===============================================================================
  No methods

android.support.v7.internal.view.menu.MenuView$ItemView  (com.rubenroy.minimaltodo.eval_ht_$e)
===============================================================================
  a    public abstract setIcon(android.graphics.drawable.Drawable)
  c    public abstract getItemData()
  c    public abstract setChecked(boolean)
  c    public abstract setTitle(java.lang.CharSequence)
  h    public abstract showsIcon()
  q    public abstract setShortcut(boolean,char)
  u    public abstract setCheckable(boolean)
  v    public abstract prefersCondensedTitle()
  v    public abstract setEnabled(boolean)
  w    public abstract initialize(android.support.v7.internal.view.menu.MenuItemImpl,int)

android.support.v7.internal.view.menu.MenuWrapperFactory (com.rubenroy.minimaltodo.eval_ipv)
===============================================================================
  l    public static wrapSupportSubMenu(android.content.Context,android.support.v4.internal.view.SupportSubMenu)
  r    public static wrapSupportMenuItem(android.content.Context,android.support.v4.internal.view.SupportMenuItem)
  t    public static wrapSupportMenu(android.content.Context,android.support.v4.internal.view.SupportMenu)

android.support.v7.internal.view.menu.MenuWrapperFactory$ArrayOutOfBoundsException       (com.rubenroy.minimaltodo.eval_wus)
===============================================================================
  No methods

android.support.v7.internal.view.menu.MenuWrapperICS     (com.rubenroy.minimaltodo.eval_dow)
===============================================================================
  add                      public add(int)
  add                      public add(int,int,int,int)
  add                      public add(int,int,int,java.lang.CharSequence)
  add                      public add(java.lang.CharSequence)
  addIntentOptions         public addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])
  addSubMenu               public addSubMenu(int)
  addSubMenu               public addSubMenu(int,int,int,int)
  addSubMenu               public addSubMenu(int,int,int,java.lang.CharSequence)
  addSubMenu               public addSubMenu(java.lang.CharSequence)
  clear                    public clear()
  close                    public close()
  findItem                 public findItem(int)
  getItem                  public getItem(int)
  hasVisibleItems          public hasVisibleItems()
  isShortcutKey            public isShortcutKey(int,android.view.KeyEvent)
  performIdentifierAction  public performIdentifierAction(int,int)
  performShortcut          public performShortcut(int,android.view.KeyEvent,int)
  removeGroup              public removeGroup(int)
  removeItem               public removeItem(int)
  setGroupCheckable        public setGroupCheckable(int,boolean,boolean)
  setGroupEnabled          public setGroupEnabled(int,boolean)
  setGroupVisible          public setGroupVisible(int,boolean)
  setQwertyMode            public setQwertyMode(boolean)
  size                     public size()

android.support.v7.internal.view.menu.MenuWrapperICS$ParseException      (com.rubenroy.minimaltodo.eval_lzi)
===============================================================================
  No methods

android.support.v7.internal.view.menu.SubMenuBuilder     (com.rubenroy.minimaltodo.eval_e0g)
===============================================================================
  d                public getRootMenu()
  e                public setCallback(android.support.v7.internal.view.menu.MenuBuilder$Callback)
  eval_j           public getParentMenu()
  j                dispatchMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem)
  m                public isShortcutsVisible()
  o                public setShortcutsVisible(boolean)
  r                public collapseItemActionView(android.support.v7.internal.view.menu.MenuItemImpl)
  v                public isQwertyMode()
  x                public getActionViewStatesKey()
  x                public expandItemActionView(android.support.v7.internal.view.menu.MenuItemImpl)
  getItem          public getItem()
  setHeaderIcon    public setHeaderIcon(android.graphics.drawable.Drawable)
  setHeaderIcon    public setHeaderIcon(int)
  setHeaderTitle   public setHeaderTitle(int)
  setHeaderTitle   public setHeaderTitle(java.lang.CharSequence)
  setHeaderView    public setHeaderView(android.view.View)
  setIcon          public setIcon(android.graphics.drawable.Drawable)
  setIcon          public setIcon(int)
  setQwertyMode    public setQwertyMode(boolean)

android.support.v7.internal.view.menu.SubMenuBuilder$ParseException      (com.rubenroy.minimaltodo.eval_nj8)
===============================================================================
  No methods

android.support.v7.internal.view.menu.SubMenuWrapperICS  (com.rubenroy.minimaltodo.eval_fgz)
===============================================================================
  j                public getWrappedObject()
  clearHeader      public clearHeader()
  getItem          public getItem()
  setHeaderIcon    public setHeaderIcon(android.graphics.drawable.Drawable)
  setHeaderIcon    public setHeaderIcon(int)
  setHeaderTitle   public setHeaderTitle(int)
  setHeaderTitle   public setHeaderTitle(java.lang.CharSequence)
  setHeaderView    public setHeaderView(android.view.View)
  setIcon          public setIcon(android.graphics.drawable.Drawable)
  setIcon          public setIcon(int)

android.support.v7.internal.view.menu.SubMenuWrapperICS$NullPointerException     (com.rubenroy.minimaltodo.eval_ejr)
===============================================================================
  No methods

android.support.v7.internal.widget.AbsActionBarView      (com.rubenroy.minimaltodo.eval_js6)
===============================================================================
  eval_k                   public getContentHeight()
  eval_u                   public setContentHeight(int)
  f                        public animateToVisibility(int)
  i                        public isOverflowMenuShowing()
  l                        public dismissPopupMenus()
  p                        public canShowOverflowMenu()
  p                        protected static next(int,int,boolean)
  q                        static access$001(android.support.v7.internal.widget.AbsActionBarView,int)
  r                        public showOverflowMenu()
  r                        protected positionChild(android.view.View,int,int,int,boolean)
  r                        public setupAnimatorToVisibility(int,long)
  s                        public postShowOverflowMenu()
  u                        public hideOverflowMenu()
  v                        protected measureChildView(android.view.View,int,int,int)
  w                        public isOverflowMenuShowPending()
  x                        public isOverflowReserved()
  x                        static access$101(android.support.v7.internal.widget.AbsActionBarView,int)
  y                        public getAnimatedVisibility()
  onConfigurationChanged   protected onConfigurationChanged(android.content.res.Configuration)
  onHoverEvent             public onHoverEvent(android.view.MotionEvent)
  onTouchEvent             public onTouchEvent(android.view.MotionEvent)
  setVisibility            public setVisibility(int)

android.support.v7.internal.widget.AbsActionBarView$1    (com.rubenroy.minimaltodo.eval_js6$1)
===============================================================================
  run  public run()

android.support.v7.internal.widget.AbsActionBarView$ArrayOutOfBoundsException    (com.rubenroy.minimaltodo.eval_vnl)
===============================================================================
  No methods

android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener       (com.rubenroy.minimaltodo.eval_js6$a)
===============================================================================
  b    public onAnimationCancel(android.view.View)
  d    public onAnimationStart(android.view.View)
  n    public withFinalVisibility(android.support.v4.view.ViewPropertyAnimatorCompat,int)
  v    public onAnimationEnd(android.view.View)

android.support.v7.internal.widget.ActionBarBackgroundDrawable   (com.rubenroy.minimaltodo.eval_n4p)
===============================================================================
  draw             public draw(android.graphics.Canvas)
  getOpacity       public getOpacity()
  setAlpha         public setAlpha(int)
  setColorFilter   public setColorFilter(android.graphics.ColorFilter)

android.support.v7.internal.widget.ActionBarBackgroundDrawable$ParseException    (com.rubenroy.minimaltodo.eval_r0w)
===============================================================================
  No methods

android.support.v7.internal.widget.ActionBarBackgroundDrawableV21        (com.rubenroy.minimaltodo.eval__75)
===============================================================================
  getOutline   public getOutline(android.graphics.Outline)

android.support.v7.internal.widget.ActionBarBackgroundDrawableV21$NullPointerException   (com.rubenroy.minimaltodo.eval_z65)
===============================================================================
  No methods

android.support.v7.internal.widget.ActionBarContainer    (com.rubenroy.minimaltodo.eval_jrt)
===============================================================================
  eval_m                       private getMeasuredHeightWithMargins(android.view.View)
  h                            private isCollapsed(android.view.View)
  h                            public startActionModeForChild(android.view.View,android.support.v7.view.ActionMode$Callback)
  h                            public setTransitioning(boolean)
  i                            public setPrimaryBackground(android.graphics.drawable.Drawable)
  k                            public setTabContainer(android.support.v7.internal.widget.ScrollingTabContainerView)
  l                            public setStackedBackground(android.graphics.drawable.Drawable)
  y                            public getTabContainer()
  y                            public setSplitBackground(android.graphics.drawable.Drawable)
  drawableStateChanged         protected drawableStateChanged()
  jumpDrawablesToCurrentState  public jumpDrawablesToCurrentState()
  onFinishInflate              public onFinishInflate()
  onInterceptTouchEvent        public onInterceptTouchEvent(android.view.MotionEvent)
  onLayout                     public onLayout(boolean,int,int,int,int)
  onMeasure                    public onMeasure(int,int)
  onTouchEvent                 public onTouchEvent(android.view.MotionEvent)
  setVisibility                public setVisibility(int)
  startActionModeForChild      public startActionModeForChild(android.view.View,android.view.ActionMode$Callback)
  verifyDrawable               protected verifyDrawable(android.graphics.drawable.Drawable)

android.support.v7.internal.widget.ActionBarContainer$IOException        (com.rubenroy.minimaltodo.eval_e95)
===============================================================================
  No methods

android.support.v7.internal.widget.ActionBarContextView  (com.rubenroy.minimaltodo.eval_dll)
===============================================================================
  a                                private initTitle()
  eval__                           public killMode()
  eval_k                           public volatile getContentHeight()
  eval_l                           public getTitle()
  eval_r                           public closeMode()
  eval_u                           public setContentHeight(int)
  f                                public volatile animateToVisibility(int)
  g                                public setCustomView(android.view.View)
  h                                public isTitleOptional()
  i                                public isOverflowMenuShowing()
  l                                public volatile dismissPopupMenus()
  l                                public setTitle(java.lang.CharSequence)
  p                                public volatile canShowOverflowMenu()
  q                                public setTitleOptional(boolean)
  r                                public showOverflowMenu()
  r                                public volatile setupAnimatorToVisibility(int,long)
  s                                public volatile postShowOverflowMenu()
  t                                public setSubtitle(java.lang.CharSequence)
  u                                public hideOverflowMenu()
  u                                public initForMode(android.support.v7.view.ActionMode)
  v                                public getSubtitle()
  w                                public volatile isOverflowMenuShowPending()
  x                                public volatile isOverflowReserved()
  y                                public volatile getAnimatedVisibility()
  generateDefaultLayoutParams      protected generateDefaultLayoutParams()
  generateLayoutParams             public generateLayoutParams(android.util.AttributeSet)
  onDetachedFromWindow             public onDetachedFromWindow()
  onHoverEvent                     public volatile onHoverEvent(android.view.MotionEvent)
  onInitializeAccessibilityEvent   public onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
  onLayout                         protected onLayout(boolean,int,int,int,int)
  onMeasure                        protected onMeasure(int,int)
  onTouchEvent                     public volatile onTouchEvent(android.view.MotionEvent)
  setVisibility                    public volatile setVisibility(int)
  shouldDelayChildPressedState     public shouldDelayChildPressedState()

android.support.v7.internal.widget.ActionBarContextView$1        (com.rubenroy.minimaltodo.eval_dll$1)
===============================================================================
  onClick  public onClick(android.view.View)

android.support.v7.internal.widget.ActionBarContextView$NullPointerException     (com.rubenroy.minimaltodo.eval_ft5)
===============================================================================
  No methods

android.support.v7.internal.widget.ActionBarOverlayLayout        (com.rubenroy.minimaltodo.eval_u1_)
===============================================================================
  a                                pullChildren()
  a                                public setIcon(int)
  b                                private postAddActionBarHideOffset()
  b                                public setIcon(android.graphics.drawable.Drawable)
  b                                static access$102(android.support.v7.internal.widget.ActionBarOverlayLayout,boolean)
  c                                static access$300(android.support.v7.internal.widget.ActionBarOverlayLayout)
  d                                public setMenuPrepared()
  d                                static access$400(android.support.v7.internal.widget.ActionBarOverlayLayout)
  d                                public setLogo(int)
  e                                public isInOverlayMode()
  e                                public setActionBarVisibilityCallback(android.support.v7.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
  e                                public setMenu(android.view.Menu,android.support.v7.internal.view.menu.MenuPresenter$Callback)
  eval_e                           private removeActionBarHideOffset()
  eval_o                           public setHideOnContentScrollEnabled(boolean)
  eval_t                           public hideOverflowMenu()
  eval_w                           private postRemoveActionBarHideOffset()
  eval_x                           private addActionBarHideOffset()
  eval_y                           public isOverflowMenuShowing()
  f                                static access$200(android.support.v7.internal.widget.ActionBarOverlayLayout)
  f                                public setShowingForActionMode(boolean)
  generateDefaultLayoutParams      protected generateDefaultLayoutParams()
  generateLayoutParams             public generateLayoutParams(android.util.AttributeSet)
  h                                public isOverflowMenuShowPending()
  i                                private haltActionBarHideOffsetAnimations()
  j                                public getActionBarHideOffset()
  k                                public canShowOverflowMenu()
  l                                private shouldHideActionBarOnFling(float,float)
  l                                public initFeature(int)
  m                                public hasIcon()
  m                                public setWindowCallback(android.view.Window$Callback)
  m                                public setActionBarHideOffset(int)
  o                                public dismissPopups()
  o                                public setWindowTitle(java.lang.CharSequence)
  p                                public setOverlayMode(boolean)
  q                                public getTitle()
  q                                public saveToolbarHierarchyState(android.util.SparseArray)
  q                                private applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean)
  r                                public showOverflowMenu()
  r                                private init(android.content.Context)
  r                                public setHasNonEmbeddedTabs(boolean)
  r                                public setUiOptions(int)
  s                                private getDecorToolbar(android.view.View)
  u                                public isHideOnContentScrollEnabled()
  u                                public restoreToolbarHierarchyState(android.util.SparseArray)
  v                                public hasLogo()
  w                                static access$002(android.support.v7.internal.widget.ActionBarOverlayLayout,android.support.v4.view.ViewPropertyAnimatorCompat)
  checkLayoutParams                protected checkLayoutParams(android.view.ViewGroup$LayoutParams)
  draw                             public draw(android.graphics.Canvas)
  fitSystemWindows                 protected fitSystemWindows(android.graphics.Rect)
  generateDefaultLayoutParams      protected volatile generateDefaultLayoutParams()
  generateLayoutParams             public volatile generateLayoutParams(android.util.AttributeSet)
  generateLayoutParams             protected generateLayoutParams(android.view.ViewGroup$LayoutParams)
  getNestedScrollAxes              public getNestedScrollAxes()
  onConfigurationChanged           protected onConfigurationChanged(android.content.res.Configuration)
  onDetachedFromWindow             protected onDetachedFromWindow()
  onLayout                         protected onLayout(boolean,int,int,int,int)
  onMeasure                        protected onMeasure(int,int)
  onNestedFling                    public onNestedFling(android.view.View,float,float,boolean)
  onNestedPreFling                 public onNestedPreFling(android.view.View,float,float)
  onNestedPreScroll                public onNestedPreScroll(android.view.View,int,int,int[])
  onNestedScroll                   public onNestedScroll(android.view.View,int,int,int,int)
  onNestedScrollAccepted           public onNestedScrollAccepted(android.view.View,android.view.View,int)
  onStartNestedScroll              public onStartNestedScroll(android.view.View,android.view.View,int)
  onStopNestedScroll               public onStopNestedScroll(android.view.View)
  onWindowSystemUiVisibilityChanged    public onWindowSystemUiVisibilityChanged(int)
  onWindowVisibilityChanged        protected onWindowVisibilityChanged(int)
  shouldDelayChildPressedState     public shouldDelayChildPressedState()

android.support.v7.internal.widget.ActionBarOverlayLayout$1      (com.rubenroy.minimaltodo.eval_u1_$1)
===============================================================================
  b    public onAnimationCancel(android.view.View)
  v    public onAnimationEnd(android.view.View)

android.support.v7.internal.widget.ActionBarOverlayLayout$2      (com.rubenroy.minimaltodo.eval_u1_$2)
===============================================================================
  run  public run()

android.support.v7.internal.widget.ActionBarOverlayLayout$3      (com.rubenroy.minimaltodo.eval_u1_$3)
===============================================================================
  run  public run()

android.support.v7.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback    (com.rubenroy.minimaltodo.eval_u1_$o)
===============================================================================
  c        public abstract onWindowVisibilityChanged(int)
  eval_h   public abstract hideForSystem()
  eval_i   public abstract onContentScrollStopped()
  eval_o   public abstract onContentScrollStarted()
  eval_t   public abstract enableContentAnimations(boolean)
  eval_z   public abstract showForSystem()

android.support.v7.internal.widget.ActionBarOverlayLayout$LayoutParams   (com.rubenroy.minimaltodo.eval_u1_$q)
===============================================================================
  No methods

android.support.v7.internal.widget.ActionBarOverlayLayout$ParseException (com.rubenroy.minimaltodo.eval_h_o)
===============================================================================
  No methods

android.support.v7.internal.widget.ActivityChooserModel  (com.rubenroy.minimaltodo.eval_t1f)
===============================================================================
  b        static access$300()
  d        public getDefaultActivity()
  e        public setOnChooseActivityListener(android.support.v7.internal.widget.ActivityChooserModel$OnChooseActivityListener)
  eval_f   public getActivityCount()
  eval_p   private sortActivitiesIfNeeded()
  eval_r   public setHistoryMaxSize(int)
  eval_y   private persistHistoricalDataIfNeeded()
  f        static access$502(android.support.v7.internal.widget.ActivityChooserModel,boolean)
  g        private loadActivitiesIfNeeded()
  j        public getHistoryMaxSize()
  j        public getActivityIndex(android.content.pm.ResolveInfo)
  l        private addHisoricalRecord(android.support.v7.internal.widget.ActivityChooserModel$HistoricalRecord)
  n        private readHistoricalDataImpl()
  o        public chooseActivity(int)
  p        static access$400(android.support.v7.internal.widget.ActivityChooserModel)
  p        public getActivity(int)
  r        public setIntent(android.content.Intent)
  u        public getIntent()
  v        private ensureConsistentState()
  w        private pruneExcessiveHistoricalRecordsIfNeeded()
  w        public static get(android.content.Context,java.lang.String)
  w        public setDefaultActivity(int)
  x        public getHistorySize()
  x        static access$200(android.support.v7.internal.widget.ActivityChooserModel)
  x        public setActivitySorter(android.support.v7.internal.widget.ActivityChooserModel$ActivitySorter)
  y        private readHistoricalDataIfNeeded()

android.support.v7.internal.widget.ActivityChooserModel$1        (com.rubenroy.minimaltodo.eval_t1f$1)
===============================================================================
  No methods

android.support.v7.internal.widget.ActivityChooserModel$ActivityChooserModelClient       (com.rubenroy.minimaltodo.eval_t1f$c)
===============================================================================
  a    public abstract setActivityChooserModel(android.support.v7.internal.widget.ActivityChooserModel)

android.support.v7.internal.widget.ActivityChooserModel$ActivityResolveInfo      (com.rubenroy.minimaltodo.eval_t1f$r)
===============================================================================
  eval_a       public compareTo(android.support.v7.internal.widget.ActivityChooserModel$ActivityResolveInfo)
  compareTo    public volatile compareTo(java.lang.Object)
  equals       public equals(java.lang.Object)
  hashCode     public hashCode()
  toString     public toString()

android.support.v7.internal.widget.ActivityChooserModel$ActivitySorter   (com.rubenroy.minimaltodo.eval_t1f$n)
===============================================================================
  c    public abstract sort(android.content.Intent,java.util.List,java.util.List)

android.support.v7.internal.widget.ActivityChooserModel$DefaultSorter    (com.rubenroy.minimaltodo.eval_t1f$_)
===============================================================================
  c    public sort(android.content.Intent,java.util.List,java.util.List)

android.support.v7.internal.widget.ActivityChooserModel$HistoricalRecord (com.rubenroy.minimaltodo.eval_t1f$w)
===============================================================================
  equals   public equals(java.lang.Object)
  hashCode public hashCode()
  toString public toString()

android.support.v7.internal.widget.ActivityChooserModel$NullPointerException     (com.rubenroy.minimaltodo.eval_c5m)
===============================================================================
  No methods

android.support.v7.internal.widget.ActivityChooserModel$OnChooseActivityListener (com.rubenroy.minimaltodo.eval_t1f$q)
===============================================================================
  p    public abstract onChooseActivity(android.support.v7.internal.widget.ActivityChooserModel,android.content.Intent)

android.support.v7.internal.widget.ActivityChooserModel$PersistHistoryAsyncTask  (com.rubenroy.minimaltodo.eval_t1f$b)
===============================================================================
  doInBackground   public transient doInBackground(java.lang.Object[])
  doInBackground   public volatile doInBackground(java.lang.Object[])

android.support.v7.internal.widget.ActivityChooserView   (com.rubenroy.minimaltodo.eval_awr)
===============================================================================
  a                    public setActivityChooserModel(android.support.v7.internal.widget.ActivityChooserModel)
  a                    static access$602(android.support.v7.internal.widget.ActivityChooserView,boolean)
  a                    public setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
  b                    public getDataModel()
  b                    public setInitialActivityCount(int)
  c                    public setDefaultActionButtonContentDescription(int)
  e                    public isShowingPopup()
  eval__               static access$100(android.support.v7.internal.widget.ActivityChooserView)
  eval_f               private showPopupUnchecked(int)
  eval_g               static access$400(android.support.v7.internal.widget.ActivityChooserView)
  eval_o               private updateAppearance()
  eval_w               static access$900(android.support.v7.internal.widget.ActivityChooserView)
  eval_x               static access$600(android.support.v7.internal.widget.ActivityChooserView)
  f                    private getListPopupWindow()
  h                    public showPopup()
  n                    static access$800(android.support.v7.internal.widget.ActivityChooserView)
  o                    static access$500(android.support.v7.internal.widget.ActivityChooserView,int)
  p                    public setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable)
  p                    static access$1000(android.support.v7.internal.widget.ActivityChooserView)
  t                    public setExpandActivityOverflowButtonContentDescription(int)
  v                    public dismissPopup()
  w                    static access$000(android.support.v7.internal.widget.ActivityChooserView)
  y                    static access$1100(android.support.v7.internal.widget.ActivityChooserView)
  z                    public setProvider(android.support.v4.view.ActionProvider)
  z                    static access$700(android.support.v7.internal.widget.ActivityChooserView)
  onAttachedToWindow   protected onAttachedToWindow()
  onDetachedFromWindow protected onDetachedFromWindow()
  onLayout             protected onLayout(boolean,int,int,int,int)
  onMeasure            protected onMeasure(int,int)

android.support.v7.internal.widget.ActivityChooserView$1 (com.rubenroy.minimaltodo.eval_awr$1)
===============================================================================
  onChanged        public onChanged()
  onInvalidated    public onInvalidated()

android.support.v7.internal.widget.ActivityChooserView$2 (com.rubenroy.minimaltodo.eval_awr$2)
===============================================================================
  onGlobalLayout   public onGlobalLayout()

android.support.v7.internal.widget.ActivityChooserView$3 (com.rubenroy.minimaltodo.eval_awr$3)
===============================================================================
  eval_s   protected onForwardingStopped()
  j        protected onForwardingStarted()
  u        public getPopup()

android.support.v7.internal.widget.ActivityChooserView$4 (com.rubenroy.minimaltodo.eval_awr$4)
===============================================================================
  onChanged    public onChanged()

android.support.v7.internal.widget.ActivityChooserView$ActivityChooserViewAdapter        (com.rubenroy.minimaltodo.eval_awr$u)
===============================================================================
  a                public setDataModel(android.support.v7.internal.widget.ActivityChooserModel)
  eval_h           public setShowDefaultActivity(boolean,boolean)
  h                public getDefaultActivity()
  k                public getDataModel()
  k                public setMaxActivityCount(int)
  o                public measureContentWidth()
  s                public getHistorySize()
  u                public getActivityCount()
  u                public setShowFooterView(boolean)
  y                public getShowDefaultActivity()
  getCount         public getCount()
  getItem          public getItem(int)
  getItemId        public getItemId(int)
  getItemViewType  public getItemViewType(int)
  getView          public getView(int,android.view.View,android.view.ViewGroup)
  getViewTypeCount public getViewTypeCount()

android.support.v7.internal.widget.ActivityChooserView$Callbacks (com.rubenroy.minimaltodo.eval_awr$eval_f)
===============================================================================
  v            private notifyOnDismissListener()
  onClick      public onClick(android.view.View)
  onDismiss    public onDismiss()
  onItemClick  public onItemClick(android.widget.AdapterView,android.view.View,int,long)
  onLongClick  public onLongClick(android.view.View)

android.support.v7.internal.widget.ActivityChooserView$Exception (com.rubenroy.minimaltodo.eval_ppj)
===============================================================================
  No methods

android.support.v7.internal.widget.ActivityChooserView$InnerLayout       (com.rubenroy.minimaltodo.eval_awr$g)
===============================================================================
  No methods

android.support.v7.internal.widget.AppCompatPopupWindow  (com.rubenroy.minimaltodo.eval_t2q)
===============================================================================
  b                private static wrapOnScrollChangedListener(android.widget.PopupWindow)
  v                public getSupportOverlapAnchor()
  y                public setSupportOverlapAnchor(boolean)
  showAsDropDown   public showAsDropDown(android.view.View,int,int)
  showAsDropDown   public showAsDropDown(android.view.View,int,int,int)
  update           public update(android.view.View,int,int,int,int)

android.support.v7.internal.widget.AppCompatPopupWindow$1        (com.rubenroy.minimaltodo.eval_t2q$1)
===============================================================================
  onScrollChanged  public onScrollChanged()

android.support.v7.internal.widget.AppCompatPopupWindow$NullPointerException     (com.rubenroy.minimaltodo.eval_xue)
===============================================================================
  No methods

android.support.v7.internal.widget.ButtonBarLayout       (com.rubenroy.minimaltodo.eval_jbl)
===============================================================================
  a            public setAllowStacking(boolean)
  eval_g       private isStacked()
  v            private setStacked(boolean)
  onMeasure    protected onMeasure(int,int)

android.support.v7.internal.widget.ButtonBarLayout$NullPointerException  (com.rubenroy.minimaltodo.eval_ma2)
===============================================================================
  No methods

android.support.v7.internal.widget.ContentFrameLayout    (com.rubenroy.minimaltodo.eval_gjz)
===============================================================================
  c                    public getFixedWidthMajor()
  d                    public getMinWidthMinor()
  f                    public getFixedHeightMinor()
  i                    public dispatchFitSystemWindows(android.graphics.Rect)
  j                    public getMinWidthMajor()
  o                    public setAttachListener(android.support.v7.internal.widget.ContentFrameLayout$OnAttachListener)
  t                    public setDecorPadding(int,int,int,int)
  w                    public getFixedWidthMinor()
  z                    public getFixedHeightMajor()
  onAttachedToWindow   protected onAttachedToWindow()
  onDetachedFromWindow protected onDetachedFromWindow()
  onMeasure            protected onMeasure(int,int)

android.support.v7.internal.widget.ContentFrameLayout$IOException        (com.rubenroy.minimaltodo.eval_dff)
===============================================================================
  No methods

android.support.v7.internal.widget.ContentFrameLayout$OnAttachListener   (com.rubenroy.minimaltodo.eval_gjz$b)
===============================================================================
  t    public abstract onDetachedFromWindow()
  x    public abstract onAttachedFromWindow()

android.support.v7.internal.widget.DecorContentParent    (com.rubenroy.minimaltodo.eval_miw)
===============================================================================
  a        public abstract setIcon(int)
  b        public abstract setIcon(android.graphics.drawable.Drawable)
  d        public abstract setMenuPrepared()
  d        public abstract setLogo(int)
  e        public abstract setMenu(android.view.Menu,android.support.v7.internal.view.menu.MenuPresenter$Callback)
  eval_t   public abstract hideOverflowMenu()
  eval_y   public abstract isOverflowMenuShowing()
  h        public abstract isOverflowMenuShowPending()
  k        public abstract canShowOverflowMenu()
  l        public abstract initFeature(int)
  m        public abstract hasIcon()
  m        public abstract setWindowCallback(android.view.Window$Callback)
  o        public abstract dismissPopups()
  o        public abstract setWindowTitle(java.lang.CharSequence)
  q        public abstract getTitle()
  q        public abstract saveToolbarHierarchyState(android.util.SparseArray)
  r        public abstract showOverflowMenu()
  r        public abstract setUiOptions(int)
  u        public abstract restoreToolbarHierarchyState(android.util.SparseArray)
  v        public abstract hasLogo()

android.support.v7.internal.widget.DecorContentParent$IOException        (com.rubenroy.minimaltodo.eval_zoy)
===============================================================================
  No methods

android.support.v7.internal.widget.DecorToolbar  (com.rubenroy.minimaltodo.eval_awc)
===============================================================================
  a        public abstract canShowOverflowMenu()
  a        public abstract setIcon(android.graphics.drawable.Drawable)
  a        public abstract setNavigationContentDescription(java.lang.CharSequence)
  b        public abstract hasExpandedActionView()
  b        public abstract setNavigationMode(int)
  c        public abstract setMenuCallbacks(android.support.v7.internal.view.menu.MenuPresenter$Callback,android.support.v7.internal.view.menu.MenuBuilder$Callback)
  d        public abstract getSubtitle()
  e        public abstract getContext()
  eval__   public abstract dismissPopupMenus()
  eval_a   public abstract getHeight()
  eval_d   public abstract setBackgroundDrawable(android.graphics.drawable.Drawable)
  eval_d   public abstract setVisibility(int)
  eval_f   public abstract setDefaultNavigationContentDescription(int)
  eval_g   public abstract getDropdownItemCount()
  eval_i   public abstract getVisibility()
  eval_k   public abstract isOverflowMenuShowing()
  eval_n   public abstract hideOverflowMenu()
  eval_p   public abstract hasLogo()
  eval_r   public abstract hasEmbeddedTabs()
  eval_t   public abstract getDropdownSelectedPosition()
  eval_y   public abstract isOverflowMenuShowPending()
  f        public abstract getNavigationMode()
  f        public abstract setIcon(int)
  g        public abstract showOverflowMenu()
  g        public abstract restoreHierarchyState(android.util.SparseArray)
  h        public abstract initIndeterminateProgress()
  i        public abstract setDisplayOptions(int)
  j        public abstract getTitle()
  j        public abstract setEmbeddedTabView(android.support.v7.internal.widget.ScrollingTabContainerView)
  k        public abstract getMenu()
  k        public abstract setHomeButtonEnabled(boolean)
  k        public abstract setTitle(java.lang.CharSequence)
  n        public abstract collapseActionView()
  n        public abstract setSubtitle(java.lang.CharSequence)
  o        public abstract getViewGroup()
  o        public abstract setNavigationContentDescription(int)
  o        public abstract setWindowTitle(java.lang.CharSequence)
  p        public abstract hasIcon()
  p        public abstract setDefaultNavigationIcon(android.graphics.drawable.Drawable)
  p        public abstract setCustomView(android.view.View)
  q        public abstract setLogo(android.graphics.drawable.Drawable)
  q        public abstract setNavigationIcon(int)
  r        public abstract setWindowCallback(android.view.Window$Callback)
  r        public abstract setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView$OnItemSelectedListener)
  r        public abstract setDropdownSelectedPosition(int)
  s        public abstract saveHierarchyState(android.util.SparseArray)
  s        public abstract setupAnimatorToVisibility(int,long)
  t        public abstract setMenu(android.view.Menu,android.support.v7.internal.view.menu.MenuPresenter$Callback)
  t        public abstract setLogo(int)
  u        public abstract setMenuPrepared()
  v        public abstract initProgress()
  w        public abstract isTitleTruncated()
  x        public abstract getDisplayOptions()
  x        public abstract setNavigationIcon(android.graphics.drawable.Drawable)
  x        public abstract setCollapsible(boolean)
  x        public abstract animateToVisibility(int)
  z        public abstract getCustomView()

android.support.v7.internal.widget.DecorToolbar$ParseException   (com.rubenroy.minimaltodo.eval__q9)
===============================================================================
  No methods

android.support.v7.internal.widget.DialogTitle   (com.rubenroy.minimaltodo.eval_erd)
===============================================================================
  onMeasure    protected onMeasure(int,int)

android.support.v7.internal.widget.DialogTitle$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_px9)
===============================================================================
  No methods

android.support.v7.internal.widget.DrawableUtils (com.rubenroy.minimaltodo.eval_azr)
===============================================================================
  w    public static getOpticalBounds(android.graphics.drawable.Drawable)

android.support.v7.internal.widget.DrawableUtils$IOException     (com.rubenroy.minimaltodo.eval_oz1)
===============================================================================
  No methods

android.support.v7.internal.widget.FitWindowsFrameLayout (com.rubenroy.minimaltodo.eval__vb)
===============================================================================
  e                public setOnFitSystemWindowsListener(android.support.v7.internal.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
  fitSystemWindows protected fitSystemWindows(android.graphics.Rect)

android.support.v7.internal.widget.FitWindowsFrameLayout$ArrayOutOfBoundsException       (com.rubenroy.minimaltodo.eval_b_o)
===============================================================================
  No methods

android.support.v7.internal.widget.FitWindowsLinearLayout        (com.rubenroy.minimaltodo.eval_c22)
===============================================================================
  e                public setOnFitSystemWindowsListener(android.support.v7.internal.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
  fitSystemWindows protected fitSystemWindows(android.graphics.Rect)

android.support.v7.internal.widget.FitWindowsLinearLayout$ParseException (com.rubenroy.minimaltodo.eval_pt4)
===============================================================================
  No methods

android.support.v7.internal.widget.FitWindowsViewGroup   (com.rubenroy.minimaltodo.eval_ft2)
===============================================================================
  e    public abstract setOnFitSystemWindowsListener(android.support.v7.internal.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)

android.support.v7.internal.widget.FitWindowsViewGroup$Exception (com.rubenroy.minimaltodo.eval_xub)
===============================================================================
  No methods

android.support.v7.internal.widget.FitWindowsViewGroup$OnFitSystemWindowsListener        (com.rubenroy.minimaltodo.eval_ft2$t)
===============================================================================
  q    public abstract onFitSystemWindows(android.graphics.Rect)

android.support.v7.internal.widget.ListViewCompat        (com.rubenroy.minimaltodo.eval_lhy)
===============================================================================
  a                    protected drawSelectorCompat(android.graphics.Canvas)
  b                    public measureHeightOfChildrenCompat(int,int,int,int,int)
  e                    protected touchModeDrawsInPressedStateCompat()
  eval_i               protected setSelectorEnabled(boolean)
  h                    protected updateSelectorStateCompat()
  h                    public lookForSelectablePosition(int,boolean)
  i                    protected positionSelectorLikeTouchCompat(int,android.view.View,float,float)
  j                    protected positionSelectorLikeFocusCompat(int,android.view.View)
  s                    protected shouldShowSelectorCompat()
  v                    protected positionSelectorCompat(int,android.view.View)
  dispatchDraw         protected dispatchDraw(android.graphics.Canvas)
  drawableStateChanged protected drawableStateChanged()
  onTouchEvent         public onTouchEvent(android.view.MotionEvent)
  setSelector          public setSelector(android.graphics.drawable.Drawable)

android.support.v7.internal.widget.ListViewCompat$Exception      (com.rubenroy.minimaltodo.eval_s3o)
===============================================================================
  No methods

android.support.v7.internal.widget.ListViewCompat$GateKeeperDrawable     (com.rubenroy.minimaltodo.eval_lhy$b)
===============================================================================
  a                setEnabled(boolean)
  draw             public draw(android.graphics.Canvas)
  setHotspot       public setHotspot(float,float)
  setHotspotBounds public setHotspotBounds(int,int,int,int)
  setState         public setState(int[])
  setVisible       public setVisible(boolean,boolean)

android.support.v7.internal.widget.ResourcesWrapper      (com.rubenroy.minimaltodo.eval_bzb)
===============================================================================
  getAnimation             public getAnimation(int)
  getBoolean               public getBoolean(int)
  getColor                 public getColor(int)
  getColorStateList        public getColorStateList(int)
  getConfiguration         public getConfiguration()
  getDimension             public getDimension(int)
  getDimensionPixelOffset  public getDimensionPixelOffset(int)
  getDimensionPixelSize    public getDimensionPixelSize(int)
  getDisplayMetrics        public getDisplayMetrics()
  getDrawable              public getDrawable(int)
  getDrawable              public getDrawable(int,android.content.res.Resources$Theme)
  getDrawableForDensity    public getDrawableForDensity(int,int)
  getDrawableForDensity    public getDrawableForDensity(int,int,android.content.res.Resources$Theme)
  getFraction              public getFraction(int,int,int)
  getIdentifier            public getIdentifier(java.lang.String,java.lang.String,java.lang.String)
  getIntArray              public getIntArray(int)
  getInteger               public getInteger(int)
  getLayout                public getLayout(int)
  getMovie                 public getMovie(int)
  getQuantityString        public getQuantityString(int,int)
  getQuantityString        public transient getQuantityString(int,int,java.lang.Object[])
  getQuantityText          public getQuantityText(int,int)
  getResourceEntryName     public getResourceEntryName(int)
  getResourceName          public getResourceName(int)
  getResourcePackageName   public getResourcePackageName(int)
  getResourceTypeName      public getResourceTypeName(int)
  getString                public getString(int)
  getString                public transient getString(int,java.lang.Object[])
  getStringArray           public getStringArray(int)
  getText                  public getText(int)
  getText                  public getText(int,java.lang.CharSequence)
  getTextArray             public getTextArray(int)
  getValue                 public getValue(int,android.util.TypedValue,boolean)
  getValue                 public getValue(java.lang.String,android.util.TypedValue,boolean)
  getValueForDensity       public getValueForDensity(int,int,android.util.TypedValue,boolean)
  getXml                   public getXml(int)
  obtainAttributes         public obtainAttributes(android.util.AttributeSet,int[])
  obtainTypedArray         public obtainTypedArray(int)
  openRawResource          public openRawResource(int)
  openRawResource          public openRawResource(int,android.util.TypedValue)
  openRawResourceFd        public openRawResourceFd(int)
  parseBundleExtra         public parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle)
  parseBundleExtras        public parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle)
  updateConfiguration      public updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)

android.support.v7.internal.widget.ResourcesWrapper$ArrayOutOfBoundsException    (com.rubenroy.minimaltodo.eval_ow9)
===============================================================================
  No methods

android.support.v7.internal.widget.RtlSpacingHelper      (com.rubenroy.minimaltodo.eval_yev)
===============================================================================
  b        public getRight()
  d        public getLeft()
  eval_z   public getStart()
  j        public setDirection(boolean)
  l        public setRelative(int,int)
  x        public setAbsolute(int,int)
  z        public getEnd()

android.support.v7.internal.widget.RtlSpacingHelper$ArrayOutOfBoundsException    (com.rubenroy.minimaltodo.eval_p0a)
===============================================================================
  No methods

android.support.v7.internal.widget.ScrollingTabContainerView     (com.rubenroy.minimaltodo.eval_u1r)
===============================================================================
  b                        public animateToVisibility(int)
  c                        public setContentHeight(int)
  e                        private createTabLayout()
  eval_d                   private performCollapse()
  eval_i                   public removeTabAt(int)
  f                        public updateTab(int)
  h                        static access$300(android.support.v7.internal.widget.ScrollingTabContainerView,android.support.v7.app.ActionBar$Tab,boolean)
  h                        public setTabSelected(int)
  k                        public animateToTab(int)
  n                        private createTabView(android.support.v7.app.ActionBar$Tab,boolean)
  o                        private createSpinner()
  p                        public setAllowCollapse(boolean)
  t                        public addTab(android.support.v7.app.ActionBar$Tab,int,boolean)
  u                        static access$200(android.support.v7.internal.widget.ScrollingTabContainerView)
  v                        private isCollapsed()
  w                        public addTab(android.support.v7.app.ActionBar$Tab,boolean)
  x                        public removeAllTabs()
  y                        private performExpand()
  onAttachedToWindow       public onAttachedToWindow()
  onConfigurationChanged   protected onConfigurationChanged(android.content.res.Configuration)
  onDetachedFromWindow     public onDetachedFromWindow()
  onItemSelected           public onItemSelected(android.widget.AdapterView,android.view.View,int,long)
  onMeasure                public onMeasure(int,int)
  onNothingSelected        public onNothingSelected(android.widget.AdapterView)

android.support.v7.internal.widget.ScrollingTabContainerView$1   (com.rubenroy.minimaltodo.eval_u1r$1)
===============================================================================
  run  public run()

android.support.v7.internal.widget.ScrollingTabContainerView$NullPointerException        (com.rubenroy.minimaltodo.eval_mf3)
===============================================================================
  No methods

android.support.v7.internal.widget.ScrollingTabContainerView$TabAdapter  (com.rubenroy.minimaltodo.eval_u1r$_)
===============================================================================
  getCount     public getCount()
  getItem      public getItem(int)
  getItemId    public getItemId(int)
  getView      public getView(int,android.view.View,android.view.ViewGroup)

android.support.v7.internal.widget.ScrollingTabContainerView$TabClickListener    (com.rubenroy.minimaltodo.eval_u1r$o)
===============================================================================
  onClick  public onClick(android.view.View)

android.support.v7.internal.widget.ScrollingTabContainerView$TabView     (com.rubenroy.minimaltodo.eval_u1r$u)
===============================================================================
  a                                public update()
  c                                public getTab()
  o                                public bindTab(android.support.v7.app.ActionBar$Tab)
  onInitializeAccessibilityEvent   public onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
  onInitializeAccessibilityNodeInfo    public onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
  onLongClick                      public onLongClick(android.view.View)
  onMeasure                        public onMeasure(int,int)
  setSelected                      public setSelected(boolean)

android.support.v7.internal.widget.ScrollingTabContainerView$VisibilityAnimListener      (com.rubenroy.minimaltodo.eval_u1r$i)
===============================================================================
  b    public onAnimationCancel(android.view.View)
  d    public onAnimationStart(android.view.View)
  f    public withFinalVisibility(android.support.v4.view.ViewPropertyAnimatorCompat,int)
  v    public onAnimationEnd(android.view.View)

android.support.v7.internal.widget.ThemeUtils    (com.rubenroy.minimaltodo.eval_yfb)
===============================================================================
  g    public static createDisabledStateList(int,int)
  h    private static getTypedValue()
  h    public static getThemeAttrColor(android.content.Context,int)
  i    public static getThemeAttrColorStateList(android.content.Context,int)
  j    static getThemeAttrColor(android.content.Context,int,float)
  u    public static getDisabledThemeAttrColor(android.content.Context,int)

android.support.v7.internal.widget.ThemeUtils$NullPointerException       (com.rubenroy.minimaltodo.eval_bj5)
===============================================================================
  No methods

android.support.v7.internal.widget.TintContextWrapper    (com.rubenroy.minimaltodo.eval_zag)
===============================================================================
  r            public static wrap(android.content.Context)
  getResources public getResources()

android.support.v7.internal.widget.TintContextWrapper$IOException        (com.rubenroy.minimaltodo.eval_mo7)
===============================================================================
  No methods

android.support.v7.internal.widget.TintContextWrapper$TintResources      (com.rubenroy.minimaltodo.eval_zag$u)
===============================================================================
  getDrawable  public getDrawable(int)

android.support.v7.internal.widget.TintInfo      (com.rubenroy.minimaltodo.eval_v1m)
===============================================================================
  No methods

android.support.v7.internal.widget.TintInfo$IOException  (com.rubenroy.minimaltodo.eval_mvv)
===============================================================================
  No methods

android.support.v7.internal.widget.TintManager   (com.rubenroy.minimaltodo.eval_qhv)
===============================================================================
  a        private createSpinnerColorStateList(android.content.Context)
  c        public static get(android.content.Context)
  d        public static getDrawable(android.content.Context,int)
  eval_j   private createSeekbarThumbColorStateList(android.content.Context)
  eval_y   private createSwitchThumbColorStateList(android.content.Context)
  g        private static createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[])
  g        public final getTintList(int)
  h        public final tintDrawableUsingColorFilter(int,android.graphics.drawable.Drawable)
  i        final getTintMode(int)
  j        private createColoredButtonColorStateList(android.content.Context)
  k        private createDefaultButtonColorStateList(android.content.Context)
  k        private static setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)
  m        public getDrawable(int,boolean)
  p        public getDrawable(int)
  q        private createSwitchTrackColorStateList(android.content.Context)
  r        private static getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)
  s        public static tintDrawable(android.graphics.drawable.Drawable,android.support.v7.internal.widget.TintInfo,int[])
  t        private getDefaultColorStateList(android.content.Context)
  u        private createCheckableButtonColorStateList(android.content.Context)
  u        private static isInTintList(int)
  v        private createEditTextColorStateList(android.content.Context)
  x        private static shouldMutateBackground(android.graphics.drawable.Drawable)
  z        private createButtonColorStateList(android.content.Context,int)
  z        private static arrayContains(int[],int)

android.support.v7.internal.widget.TintManager$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_mp8)
===============================================================================
  No methods

android.support.v7.internal.widget.TintManager$ColorFilterLruCache       (com.rubenroy.minimaltodo.eval_qhv$j)
===============================================================================
  i    put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter)
  u    get(int,android.graphics.PorterDuff$Mode)
  w    private static generateCacheKey(int,android.graphics.PorterDuff$Mode)

android.support.v7.internal.widget.TintTypedArray        (com.rubenroy.minimaltodo.eval_tjy)
===============================================================================
  b        public getResources()
  c        public getDimensionPixelSize(int,int)
  eval_a   public getIndexCount()
  eval_a   public getNonResourceString(int)
  eval_u   public getColorStateList(int)
  f        public static obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int)
  g        public getDrawableIfKnown(int)
  g        public getLayoutDimension(int,int)
  h        public static obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[])
  h        public getDrawable(int)
  h        public getLayoutDimension(int,java.lang.String)
  j        public getTextArray(int)
  j        public getInt(int,int)
  k        public getPositionDescription()
  k        public getFloat(int,float)
  l        public getDimension(int,float)
  l        public getFraction(int,int,int,float)
  m        public getResourceId(int,int)
  n        public length()
  o        public getTintManager()
  o        public hasValue(int)
  p        public peekValue(int)
  r        public getType(int)
  s        public getChangingConfigurations()
  s        public getInteger(int,int)
  t        public recycle()
  t        public getColor(int,int)
  u        public getDimensionPixelOffset(int,int)
  v        public getText(int)
  w        public getString(int)
  x        public getIndex(int)
  x        public getValue(int,android.util.TypedValue)
  y        public getBoolean(int,boolean)

android.support.v7.internal.widget.TintTypedArray$Exception      (com.rubenroy.minimaltodo.eval_ot5)
===============================================================================
  No methods

android.support.v7.internal.widget.ToolbarWidgetWrapper  (com.rubenroy.minimaltodo.eval_b6t)
===============================================================================
  a        public canShowOverflowMenu()
  a        public setIcon(android.graphics.drawable.Drawable)
  a        public setNavigationContentDescription(java.lang.CharSequence)
  b        public hasExpandedActionView()
  b        public setNavigationMode(int)
  c        private updateToolbarLogo()
  c        public setMenuCallbacks(android.support.v7.internal.view.menu.MenuPresenter$Callback,android.support.v7.internal.view.menu.MenuBuilder$Callback)
  d        public getSubtitle()
  e        public getContext()
  eval__   public dismissPopupMenus()
  eval_a   public getHeight()
  eval_a   static access$300(android.support.v7.internal.widget.ToolbarWidgetWrapper)
  eval_d   private updateNavigationIcon()
  eval_d   public setBackgroundDrawable(android.graphics.drawable.Drawable)
  eval_d   public setVisibility(int)
  eval_e   private ensureSpinner()
  eval_f   public setDefaultNavigationContentDescription(int)
  eval_g   public getDropdownItemCount()
  eval_i   public getVisibility()
  eval_k   public isOverflowMenuShowing()
  eval_n   public hideOverflowMenu()
  eval_o   private detectDisplayOptions()
  eval_p   public hasLogo()
  eval_r   public hasEmbeddedTabs()
  eval_t   public getDropdownSelectedPosition()
  eval_y   public isOverflowMenuShowPending()
  f        public getNavigationMode()
  f        public setIcon(int)
  g        public showOverflowMenu()
  g        public restoreHierarchyState(android.util.SparseArray)
  h        public initIndeterminateProgress()
  i        public setDisplayOptions(int)
  j        public getTitle()
  j        public setEmbeddedTabView(android.support.v7.internal.widget.ScrollingTabContainerView)
  k        public getMenu()
  k        public setHomeButtonEnabled(boolean)
  k        public setTitle(java.lang.CharSequence)
  n        public collapseActionView()
  n        public setSubtitle(java.lang.CharSequence)
  o        public getViewGroup()
  o        public setNavigationContentDescription(int)
  o        public setWindowTitle(java.lang.CharSequence)
  p        public hasIcon()
  p        public setDefaultNavigationIcon(android.graphics.drawable.Drawable)
  p        public setCustomView(android.view.View)
  q        public setLogo(android.graphics.drawable.Drawable)
  q        static access$100(android.support.v7.internal.widget.ToolbarWidgetWrapper)
  q        public setNavigationIcon(int)
  q        private setTitleInt(java.lang.CharSequence)
  r        public setWindowCallback(android.view.Window$Callback)
  r        public setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView$OnItemSelectedListener)
  r        public setDropdownSelectedPosition(int)
  s        public saveHierarchyState(android.util.SparseArray)
  s        public setupAnimatorToVisibility(int,long)
  t        public setMenu(android.view.Menu,android.support.v7.internal.view.menu.MenuPresenter$Callback)
  t        public setLogo(int)
  u        public setMenuPrepared()
  v        public initProgress()
  v        static access$000(android.support.v7.internal.widget.ToolbarWidgetWrapper)
  w        public isTitleTruncated()
  x        public getDisplayOptions()
  x        public setNavigationIcon(android.graphics.drawable.Drawable)
  x        public setCollapsible(boolean)
  x        public animateToVisibility(int)
  y        private updateHomeAccessibility()
  z        public getCustomView()
  z        static access$200(android.support.v7.internal.widget.ToolbarWidgetWrapper)

android.support.v7.internal.widget.ToolbarWidgetWrapper$1        (com.rubenroy.minimaltodo.eval_b6t$1)
===============================================================================
  onClick  public onClick(android.view.View)

android.support.v7.internal.widget.ToolbarWidgetWrapper$2        (com.rubenroy.minimaltodo.eval_b6t$2)
===============================================================================
  b    public onAnimationCancel(android.view.View)
  d    public onAnimationStart(android.view.View)
  v    public onAnimationEnd(android.view.View)

android.support.v7.internal.widget.ToolbarWidgetWrapper$NullPointerException     (com.rubenroy.minimaltodo.eval_wj4)
===============================================================================
  No methods

android.support.v7.internal.widget.ViewStubCompat        (com.rubenroy.minimaltodo.eval_cug)
===============================================================================
  eval_a           public inflate()
  f                public getLayoutInflater()
  g                public setOnInflateListener(android.support.v7.internal.widget.ViewStubCompat$OnInflateListener)
  g                public setLayoutInflater(android.view.LayoutInflater)
  m                public getLayoutResource()
  q                public setLayoutResource(int)
  z                public getInflatedId()
  z                public setInflatedId(int)
  dispatchDraw     protected dispatchDraw(android.graphics.Canvas)
  draw             public draw(android.graphics.Canvas)
  onMeasure        protected onMeasure(int,int)
  setVisibility    public setVisibility(int)

android.support.v7.internal.widget.ViewStubCompat$Exception      (com.rubenroy.minimaltodo.eval_z1k)
===============================================================================
  No methods

android.support.v7.internal.widget.ViewStubCompat$OnInflateListener      (com.rubenroy.minimaltodo.eval_cug$o)
===============================================================================
  y    public abstract onInflate(android.support.v7.internal.widget.ViewStubCompat,android.view.View)

android.support.v7.internal.widget.ViewUtils     (com.rubenroy.minimaltodo.eval_hdk)
===============================================================================
  b    public static combineMeasuredStates(int,int)
  i    public static computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect)
  q    public static isLayoutRtl(android.view.View)
  y    public static makeOptionalFitsSystemWindows(android.view.View)

android.support.v7.internal.widget.ViewUtils$Exception   (com.rubenroy.minimaltodo.eval_l3_)
===============================================================================
  No methods

android.support.v7.recyclerview.BuildConfig      (com.rubenroy.minimaltodo.eval_co6)
===============================================================================
  No methods

android.support.v7.recyclerview.BuildConfig$IOException  (com.rubenroy.minimaltodo.eval_mwf)
===============================================================================
  No methods

android.support.v7.recyclerview.R
===============================================================================
  No methods

android.support.v7.recyclerview.R$IOException
===============================================================================
  No methods

android.support.v7.recyclerview.R$attr
===============================================================================
  No methods

android.support.v7.recyclerview.R$dimen
===============================================================================
  No methods

android.support.v7.recyclerview.R$id
===============================================================================
  No methods

android.support.v7.recyclerview.R$styleable
===============================================================================
  No methods

android.support.v7.util.AsyncListUtil    (com.rubenroy.minimaltodo.eval_p8y)
===============================================================================
  e        static access$300(android.support.v7.util.AsyncListUtil)
  eval_m   private updateRange()
  g        public getItemCount()
  g        static access$102(android.support.v7.util.AsyncListUtil,boolean)
  l        static access$200(android.support.v7.util.AsyncListUtil)
  q        public onRangeChanged()
  q        static access$002(android.support.v7.util.AsyncListUtil,int)
  r        public getItem(int)
  t        private isRefreshPending()
  v        public refresh()
  y        private transient log(java.lang.String,java.lang.Object[])

android.support.v7.util.AsyncListUtil$1  (com.rubenroy.minimaltodo.eval_p8y$1)
===============================================================================
  e    public removeTile(int,int)
  l    private recycleAllTiles()
  n    private isRequestedGeneration(int)
  r    public addTile(int,android.support.v7.util.TileList$Tile)
  z    public updateItemCount(int,int)

android.support.v7.util.AsyncListUtil$2  (com.rubenroy.minimaltodo.eval_p8y$2)
===============================================================================
  b        private acquireTile()
  b        private transient log(java.lang.String,java.lang.Object[])
  c        public updateRange(int,int,int,int,int)
  e        public recycleTile(android.support.v7.util.TileList$Tile)
  eval_d   private flushTileCache(int)
  eval_r   private addTile(android.support.v7.util.TileList$Tile)
  f        private requestTiles(int,int,int,boolean)
  g        public loadTile(int,int)
  h        private getTileStart(int)
  q        private removeTile(int)
  w        public refresh(int)
  y        private isTileLoaded(int)

android.support.v7.util.AsyncListUtil$DataCallback       (com.rubenroy.minimaltodo.eval_p8y$j)
===============================================================================
  d    public recycleData(java.lang.Object[],int)
  j    public getMaxCachedTiles()
  r    public abstract refreshData()
  t    public abstract fillData(java.lang.Object[],int,int)

android.support.v7.util.AsyncListUtil$ParseException     (com.rubenroy.minimaltodo.eval_ytw)
===============================================================================
  No methods

android.support.v7.util.AsyncListUtil$ViewCallback       (com.rubenroy.minimaltodo.eval_p8y$eval_g)
===============================================================================
  e    public abstract onItemLoaded(int)
  g    public abstract onDataRefresh()
  l    public abstract getItemRangeInto(int[])
  q    public extendRangeInto(int[],int[],int)

android.support.v7.util.MessageThreadUtil        (com.rubenroy.minimaltodo.eval_mfs)
===============================================================================
  m    public getMainThreadProxy(android.support.v7.util.ThreadUtil$MainThreadCallback)
  u    public getBackgroundProxy(android.support.v7.util.ThreadUtil$BackgroundCallback)

android.support.v7.util.MessageThreadUtil$1      (com.rubenroy.minimaltodo.eval_mfs$1)
===============================================================================
  d    static access$000(android.support.v7.util.MessageThreadUtil$1)
  e    public removeTile(int,int)
  r    public addTile(int,android.support.v7.util.TileList$Tile)
  x    private sendMessage(android.support.v7.util.MessageThreadUtil$SyncQueueItem)
  z    public updateItemCount(int,int)

android.support.v7.util.MessageThreadUtil$1$1    (com.rubenroy.minimaltodo.eval_mfs$1$1)
===============================================================================
  run  public run()

android.support.v7.util.MessageThreadUtil$1$IOException  (com.rubenroy.minimaltodo.eval_rbl)
===============================================================================
  No methods

android.support.v7.util.MessageThreadUtil$2      (com.rubenroy.minimaltodo.eval_mfs$2)
===============================================================================
  c    public updateRange(int,int,int,int,int)
  e    public recycleTile(android.support.v7.util.TileList$Tile)
  g    public loadTile(int,int)
  j    static access$100(android.support.v7.util.MessageThreadUtil$2)
  j    private sendMessage(android.support.v7.util.MessageThreadUtil$SyncQueueItem)
  w    private maybeExecuteBackgroundRunnable()
  w    public refresh(int)
  z    private sendMessageAtFrontOfQueue(android.support.v7.util.MessageThreadUtil$SyncQueueItem)

android.support.v7.util.MessageThreadUtil$2$1    (com.rubenroy.minimaltodo.eval_mfs$2$1)
===============================================================================
  run  public run()

android.support.v7.util.MessageThreadUtil$2$IOException  (com.rubenroy.minimaltodo.eval_nfe)
===============================================================================
  No methods

android.support.v7.util.MessageThreadUtil$ArrayOutOfBoundsException      (com.rubenroy.minimaltodo.eval_sxb)
===============================================================================
  No methods

android.support.v7.util.MessageThreadUtil$MessageQueue   (com.rubenroy.minimaltodo.eval_mfs$u)
===============================================================================
  d    synchronized sendMessageAtFrontOfQueue(android.support.v7.util.MessageThreadUtil$SyncQueueItem)
  n    synchronized next()
  s    synchronized removeMessages(int)
  x    synchronized sendMessage(android.support.v7.util.MessageThreadUtil$SyncQueueItem)

android.support.v7.util.MessageThreadUtil$SyncQueueItem  (com.rubenroy.minimaltodo.eval_mfs$v)
===============================================================================
  j    recycle()
  j    static obtainMessage(int,int,int,int,int,int,java.lang.Object)
  n    static access$200(android.support.v7.util.MessageThreadUtil$SyncQueueItem)
  n    static obtainMessage(int,int,java.lang.Object)
  p    static obtainMessage(int,int,int)
  u    static access$202(android.support.v7.util.MessageThreadUtil$SyncQueueItem,android.support.v7.util.MessageThreadUtil$SyncQueueItem)

android.support.v7.util.SortedList       (com.rubenroy.minimaltodo.eval_t2h)
===============================================================================
  b        public clear()
  d        public recalculatePositionOfItemAt(int)
  d        public remove(java.lang.Object)
  eval_b   private remove(java.lang.Object,boolean)
  eval_f   public addAll(java.lang.Object[],boolean)
  f        private linearEqualitySearch(java.lang.Object,int,int,int)
  h        public indexOf(java.lang.Object)
  i        public get(int)
  j        public removeItemAt(int)
  j        private addAllInternal(java.lang.Object[])
  j        private merge(java.lang.Object[],int)
  l        private throwIfMerging()
  l        private add(java.lang.Object,boolean)
  m        private deduplicate(java.lang.Object[])
  n        public add(java.lang.Object)
  n        public transient addAll(java.lang.Object[])
  p        public beginBatchedUpdates()
  t        public size()
  t        private removeItemAtIndex(int,boolean)
  u        public updateItemAt(int,java.lang.Object)
  v        private addToData(int,java.lang.Object)
  w        public addAll(java.util.Collection)
  y        public endBatchedUpdates()
  z        private findSameItem(java.lang.Object,java.lang.Object[],int,int)
  z        private findIndexOf(java.lang.Object,java.lang.Object[],int,int,int)

android.support.v7.util.SortedList$BatchedCallback       (com.rubenroy.minimaltodo.eval_t2h$k)
===============================================================================
  a        public onMoved(int,int)
  b        public onRemoved(int,int)
  eval_c   public onChanged(int,int)
  l        static access$000(android.support.v7.util.SortedList$BatchedCallback)
  m        public onInserted(int,int)
  n        public dispatchLastEvent()
  t        public areContentsTheSame(java.lang.Object,java.lang.Object)
  x        public areItemsTheSame(java.lang.Object,java.lang.Object)
  compare  public compare(java.lang.Object,java.lang.Object)

android.support.v7.util.SortedList$Callback      (com.rubenroy.minimaltodo.eval_t2h$e)
===============================================================================
  a        public abstract onMoved(int,int)
  b        public abstract onRemoved(int,int)
  eval_c   public abstract onChanged(int,int)
  m        public abstract onInserted(int,int)
  t        public abstract areContentsTheSame(java.lang.Object,java.lang.Object)
  x        public abstract areItemsTheSame(java.lang.Object,java.lang.Object)
  compare  public abstract compare(java.lang.Object,java.lang.Object)

android.support.v7.util.SortedList$Exception     (com.rubenroy.minimaltodo.eval_m10)
===============================================================================
  No methods

android.support.v7.util.ThreadUtil       (com.rubenroy.minimaltodo.eval_zs0)
===============================================================================
  m    public abstract getMainThreadProxy(android.support.v7.util.ThreadUtil$MainThreadCallback)
  u    public abstract getBackgroundProxy(android.support.v7.util.ThreadUtil$BackgroundCallback)

android.support.v7.util.ThreadUtil$BackgroundCallback    (com.rubenroy.minimaltodo.eval_zs0$p)
===============================================================================
  c    public abstract updateRange(int,int,int,int,int)
  e    public abstract recycleTile(android.support.v7.util.TileList$Tile)
  g    public abstract loadTile(int,int)
  w    public abstract refresh(int)

android.support.v7.util.ThreadUtil$Exception     (com.rubenroy.minimaltodo.eval_gwc)
===============================================================================
  No methods

android.support.v7.util.ThreadUtil$MainThreadCallback    (com.rubenroy.minimaltodo.eval_zs0$w)
===============================================================================
  e    public abstract removeTile(int,int)
  r    public abstract addTile(int,android.support.v7.util.TileList$Tile)
  z    public abstract updateItemCount(int,int)

android.support.v7.util.TileList (com.rubenroy.minimaltodo.eval_rlo)
===============================================================================
  h    public getItemAt(int)
  m    public clear()
  m    public addOrReplace(android.support.v7.util.TileList$Tile)
  p    public getAtIndex(int)
  q    public removeAtPos(int)
  v    public size()

android.support.v7.util.TileList$ParseException  (com.rubenroy.minimaltodo.eval_z8p)
===============================================================================
  No methods

android.support.v7.util.TileList$Tile    (com.rubenroy.minimaltodo.eval_rlo$j)
===============================================================================
  l    getByPosition(int)
  n    containsPosition(int)

android.support.v7.view.ActionMode       (com.rubenroy.minimaltodo.eval_ukd)
===============================================================================
  c        public setTitleOptionalHint(boolean)
  d        public abstract setSubtitle(java.lang.CharSequence)
  eval_b   public abstract getCustomView()
  eval_e   public isTitleOptional()
  eval_e   public abstract setCustomView(android.view.View)
  eval_m   public getTitleOptionalHint()
  eval_p   public getTag()
  eval_w   public abstract setTitle(java.lang.CharSequence)
  g        public setTag(java.lang.Object)
  i        public abstract finish()
  m        public abstract getMenuInflater()
  m        public abstract setTitle(int)
  o        public abstract getTitle()
  p        public isUiFocusable()
  q        public abstract getSubtitle()
  s        public abstract getMenu()
  z        public abstract invalidate()
  z        public abstract setSubtitle(int)

android.support.v7.view.ActionMode$Callback      (com.rubenroy.minimaltodo.eval_ukd$w)
===============================================================================
  o    public abstract onCreateActionMode(android.support.v7.view.ActionMode,android.view.Menu)
  p    public abstract onDestroyActionMode(android.support.v7.view.ActionMode)
  p    public abstract onPrepareActionMode(android.support.v7.view.ActionMode,android.view.Menu)
  y    public abstract onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem)

android.support.v7.view.ActionMode$Exception     (com.rubenroy.minimaltodo.eval_nnv)
===============================================================================
  No methods

android.support.v7.view.CollapsibleActionView    (com.rubenroy.minimaltodo.eval_rke)
===============================================================================
  l    public abstract onActionViewExpanded()
  x    public abstract onActionViewCollapsed()

android.support.v7.view.CollapsibleActionView$NullPointerException       (com.rubenroy.minimaltodo.eval_tey)
===============================================================================
  No methods

android.support.v7.widget.ActionMenuPresenter    (com.rubenroy.minimaltodo.eval_whu)
===============================================================================
  a        public onSaveInstanceState()
  b        static access$700(android.support.v7.widget.ActionMenuPresenter)
  c        static access$200(android.support.v7.widget.ActionMenuPresenter)
  d        public flagActionItems()
  d        static access$900(android.support.v7.widget.ActionMenuPresenter)
  d        public onSubUiVisibilityChanged(boolean)
  e        public setReserveOverflow(boolean)
  eval_i   public isOverflowReserved()
  eval_k   static access$800(android.support.v7.widget.ActionMenuPresenter)
  eval_z   static access$1000(android.support.v7.widget.ActionMenuPresenter)
  f        public getOverflowIcon()
  g        static access$400(android.support.v7.widget.ActionMenuPresenter)
  g        static access$202(android.support.v7.widget.ActionMenuPresenter,android.support.v7.widget.ActionMenuPresenter$OverflowPopup)
  g        public updateMenuView(boolean)
  h        static access$300(android.support.v7.widget.ActionMenuPresenter)
  i        public setMenuView(android.support.v7.widget.ActionMenuView)
  j        public setExpandedActionViewsExclusive(boolean)
  k        static access$802(android.support.v7.widget.ActionMenuPresenter,android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu)
  m        public isOverflowMenuShowing()
  m        public onConfigurationChanged(android.content.res.Configuration)
  m        static access$600(android.support.v7.widget.ActionMenuPresenter)
  n        public filterLeftoverView(android.view.ViewGroup,int)
  o        public isOverflowMenuShowPending()
  o        public initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder)
  o        public onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)
  p        public hideOverflowMenu()
  p        static access$500(android.support.v7.widget.ActionMenuPresenter)
  q        private findViewForItem(android.view.MenuItem)
  r        public onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder)
  r        static access$302(android.support.v7.widget.ActionMenuPresenter,android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable)
  r        public setWidthLimit(int,boolean)
  s        public showOverflowMenu()
  t        public shouldIncludeItem(int,android.support.v7.internal.view.menu.MenuItemImpl)
  w        public getItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)
  w        public setItemLimit(int)
  x        public hideSubMenus()
  x        public setOverflowIcon(android.graphics.drawable.Drawable)
  y        public onRestoreInstanceState(android.os.Parcelable)
  z        public dismissPopupMenus()
  z        public bindItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.support.v7.internal.view.menu.MenuView$ItemView)
  z        public getMenuView(android.view.ViewGroup)

android.support.v7.widget.ActionMenuPresenter$1  (com.rubenroy.minimaltodo.eval_whu$1)
===============================================================================
  No methods

android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu        (com.rubenroy.minimaltodo.eval_whu$b)
===============================================================================
  onDismiss    public onDismiss()

android.support.v7.widget.ActionMenuPresenter$ActionMenuPopupCallback    (com.rubenroy.minimaltodo.eval_whu$v)
===============================================================================
  eval_y   public getPopup()

android.support.v7.widget.ActionMenuPresenter$NullPointerException       (com.rubenroy.minimaltodo.eval_czu)
===============================================================================
  No methods

android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable       (com.rubenroy.minimaltodo.eval_whu$m)
===============================================================================
  run  public run()

android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton (com.rubenroy.minimaltodo.eval_whu$q)
===============================================================================
  eval_y       public needsDividerAfter()
  n            public needsDividerBefore()
  performClick public performClick()
  setFrame     protected setFrame(int,int,int,int)

android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton$1       (com.rubenroy.minimaltodo.eval_whu$q$1)
===============================================================================
  eval_s   public onForwardingStopped()
  j        public onForwardingStarted()
  u        public getPopup()

android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton$Exception       (com.rubenroy.minimaltodo.eval_rlm)
===============================================================================
  No methods

android.support.v7.widget.ActionMenuPresenter$OverflowPopup      (com.rubenroy.minimaltodo.eval_whu$j)
===============================================================================
  onDismiss    public onDismiss()

android.support.v7.widget.ActionMenuPresenter$PopupPresenterCallback     (com.rubenroy.minimaltodo.eval_whu$d)
===============================================================================
  d    public onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)
  i    public onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder)

android.support.v7.widget.ActionMenuPresenter$SavedState (com.rubenroy.minimaltodo.eval_whu$x)
===============================================================================
  describeContents public describeContents()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v7.widget.ActionMenuPresenter$SavedState$1       (com.rubenroy.minimaltodo.eval_whu$x$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v7.widget.ActionMenuPresenter$SavedState$ArrayOutOfBoundsException       (com.rubenroy.minimaltodo.eval_osf)
===============================================================================
  No methods

android.support.v7.widget.ActionMenuView (com.rubenroy.minimaltodo.eval_ypi)
===============================================================================
  a                                public setOverflowIcon(android.graphics.drawable.Drawable)
  b                                protected hasSupportDividerBeforeChildAt(int)
  c                                public getWindowAnimations()
  c                                public setExpandedActionViewsExclusive(boolean)
  d                                public initialize(android.support.v7.internal.view.menu.MenuBuilder)
  d                                static access$200(android.support.v7.widget.ActionMenuView)
  eval_a                           public isOverflowMenuShowPending()
  eval_q                           public isOverflowMenuShowing()
  eval_t                           public dismissPopupMenus()
  f                                public showOverflowMenu()
  f                                static access$300(android.support.v7.widget.ActionMenuView)
  g                                public invokeItem(android.support.v7.internal.view.menu.MenuItemImpl)
  generateDefaultLayoutParams      protected generateDefaultLayoutParams()
  generateLayoutParams             public generateLayoutParams(android.util.AttributeSet)
  generateLayoutParams             protected generateLayoutParams(android.view.ViewGroup$LayoutParams)
  h                                public isOverflowReserved()
  m                                public getOverflowIcon()
  m                                public setOnMenuItemClickListener(android.support.v7.widget.ActionMenuView$OnMenuItemClickListener)
  n                                public hideOverflowMenu()
  n                                private onMeasureExactFormat(int,int)
  o                                public peekMenu()
  o                                public setPresenter(android.support.v7.widget.ActionMenuPresenter)
  r                                public setMenuCallbacks(android.support.v7.internal.view.menu.MenuPresenter$Callback,android.support.v7.internal.view.menu.MenuBuilder$Callback)
  u                                public generateOverflowButtonLayoutParams()
  v                                public getMenu()
  w                                public getPopupTheme()
  w                                public setOverflowReserved(boolean)
  w                                public setPopupTheme(int)
  x                                static measureChildForCells(android.view.View,int,int,int,int)
  checkLayoutParams                protected checkLayoutParams(android.view.ViewGroup$LayoutParams)
  dispatchPopulateAccessibilityEvent   public dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
  generateDefaultLayoutParams      protected volatile generateDefaultLayoutParams()
  generateLayoutParams             public volatile generateLayoutParams(android.util.AttributeSet)
  generateLayoutParams             protected volatile generateLayoutParams(android.view.ViewGroup$LayoutParams)
  onConfigurationChanged           public onConfigurationChanged(android.content.res.Configuration)
  onDetachedFromWindow             public onDetachedFromWindow()
  onLayout                         protected onLayout(boolean,int,int,int,int)
  onMeasure                        protected onMeasure(int,int)

android.support.v7.widget.ActionMenuView$1       (com.rubenroy.minimaltodo.eval_ypi$1)
===============================================================================
  No methods

android.support.v7.widget.ActionMenuView$ActionMenuChildView     (com.rubenroy.minimaltodo.eval_ypi$m)
===============================================================================
  eval_y   public abstract needsDividerAfter()
  n        public abstract needsDividerBefore()

android.support.v7.widget.ActionMenuView$ActionMenuPresenterCallback     (com.rubenroy.minimaltodo.eval_ypi$eval_t)
===============================================================================
  d    public onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)
  i    public onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder)

android.support.v7.widget.ActionMenuView$LayoutParams    (com.rubenroy.minimaltodo.eval_ypi$f)
===============================================================================
  No methods

android.support.v7.widget.ActionMenuView$MenuBuilderCallback     (com.rubenroy.minimaltodo.eval_ypi$x)
===============================================================================
  c    public onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder)
  k    public onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem)

android.support.v7.widget.ActionMenuView$NullPointerException    (com.rubenroy.minimaltodo.eval_y37)
===============================================================================
  No methods

android.support.v7.widget.ActionMenuView$OnMenuItemClickListener (com.rubenroy.minimaltodo.eval_ypi$q)
===============================================================================
  x    public abstract onMenuItemClick(android.view.MenuItem)

android.support.v7.widget.AdapterHelper  (com.rubenroy.minimaltodo.eval_g_x)
===============================================================================
  c        onItemRangeRemoved(int,int)
  d        public applyPendingUpdatesToPosition(int)
  e        hasPendingUpdates()
  eval_e   private applyUpdate(android.support.v7.widget.AdapterHelper$UpdateOp)
  eval_l   private applyMove(android.support.v7.widget.AdapterHelper$UpdateOp)
  f        preProcess()
  f        onItemRangeChanged(int,int,java.lang.Object)
  g        private applyRemove(android.support.v7.widget.AdapterHelper$UpdateOp)
  g        hasAnyUpdateTypes(int)
  g        private updatePositionWithPostponed(int,int)
  g        public obtainUpdateOp(int,int,int,java.lang.Object)
  h        dispatchFirstPassAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp,int)
  i        private postponeAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp)
  k        findPositionOffset(int)
  l        public recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp)
  m        consumePostponedUpdates()
  o        private dispatchAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp)
  p        private canFindInPreLayout(int)
  p        findPositionOffset(int,int)
  q        onItemRangeMoved(int,int,int)
  r        consumeUpdatesInOnePass()
  s        onItemRangeInserted(int,int)
  t        private applyAdd(android.support.v7.widget.AdapterHelper$UpdateOp)
  v        reset()
  v        transient addUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp[])
  v        recycleUpdateOpsAndClearList(java.util.List)

android.support.v7.widget.AdapterHelper$Callback (com.rubenroy.minimaltodo.eval_g_x$z)
===============================================================================
  c    public abstract offsetPositionsForRemovingLaidOutOrNewView(int,int)
  e    public abstract offsetPositionsForRemovingInvisible(int,int)
  f    public abstract onDispatchFirstPass(android.support.v7.widget.AdapterHelper$UpdateOp)
  o    public abstract offsetPositionsForMove(int,int)
  p    public abstract onDispatchSecondPass(android.support.v7.widget.AdapterHelper$UpdateOp)
  r    public abstract markViewHoldersUpdated(int,int,java.lang.Object)
  y    public abstract findViewHolder(int)
  z    public abstract offsetPositionsForAdd(int,int)

android.support.v7.widget.AdapterHelper$Exception        (com.rubenroy.minimaltodo.eval_iia)
===============================================================================
  No methods

android.support.v7.widget.AdapterHelper$UpdateOp (com.rubenroy.minimaltodo.eval_g_x$g)
===============================================================================
  d        cmdToString()
  equals   public equals(java.lang.Object)
  hashCode public hashCode()
  toString public toString()

android.support.v7.widget.AppCompatAutoCompleteTextView  (com.rubenroy.minimaltodo.eval_pw7)
===============================================================================
  a                                public getSupportBackgroundTintList()
  e                                public setSupportBackgroundTintList(android.content.res.ColorStateList)
  n                                public setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
  o                                public getSupportBackgroundTintMode()
  drawableStateChanged             protected drawableStateChanged()
  setBackgroundDrawable            public setBackgroundDrawable(android.graphics.drawable.Drawable)
  setBackgroundResource            public setBackgroundResource(int)
  setDropDownBackgroundResource    public setDropDownBackgroundResource(int)
  setTextAppearance                public setTextAppearance(android.content.Context,int)

android.support.v7.widget.AppCompatAutoCompleteTextView$NullPointerException     (com.rubenroy.minimaltodo.eval_aya)
===============================================================================
  No methods

android.support.v7.widget.AppCompatBackgroundHelper      (com.rubenroy.minimaltodo.eval_dp2)
===============================================================================
  g    getSupportBackgroundTintList()
  o    onSetBackgroundDrawable(android.graphics.drawable.Drawable)
  u    getSupportBackgroundTintMode()
  u    loadFromAttributes(android.util.AttributeSet,int)
  v    setSupportBackgroundTintList(android.content.res.ColorStateList)
  w    applySupportBackgroundTint()
  w    setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
  x    onSetBackgroundResource(int)
  z    setInternalBackgroundTint(android.content.res.ColorStateList)

android.support.v7.widget.AppCompatBackgroundHelper$ArrayOutOfBoundsException    (com.rubenroy.minimaltodo.eval_ebl)
===============================================================================
  No methods

android.support.v7.widget.AppCompatButton        (com.rubenroy.minimaltodo.eval_zx4)
===============================================================================
  a                                public getSupportBackgroundTintList()
  e                                public setSupportBackgroundTintList(android.content.res.ColorStateList)
  g                                public setSupportAllCaps(boolean)
  n                                public setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
  o                                public getSupportBackgroundTintMode()
  drawableStateChanged             protected drawableStateChanged()
  onInitializeAccessibilityEvent   public onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
  onInitializeAccessibilityNodeInfo    public onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
  setBackgroundDrawable            public setBackgroundDrawable(android.graphics.drawable.Drawable)
  setBackgroundResource            public setBackgroundResource(int)
  setTextAppearance                public setTextAppearance(android.content.Context,int)

android.support.v7.widget.AppCompatButton$ArrayOutOfBoundsException      (com.rubenroy.minimaltodo.eval__hw)
===============================================================================
  No methods

android.support.v7.widget.AppCompatCheckBox      (com.rubenroy.minimaltodo.eval_aq2)
===============================================================================
  a                        public setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
  b                        public getSupportButtonTintMode()
  p                        public getSupportButtonTintList()
  s                        public setSupportButtonTintList(android.content.res.ColorStateList)
  getCompoundPaddingLeft   public getCompoundPaddingLeft()
  setButtonDrawable        public setButtonDrawable(android.graphics.drawable.Drawable)
  setButtonDrawable        public setButtonDrawable(int)

android.support.v7.widget.AppCompatCheckBox$IOException  (com.rubenroy.minimaltodo.eval_x3_)
===============================================================================
  No methods

android.support.v7.widget.AppCompatCheckedTextView       (com.rubenroy.minimaltodo.eval_sp8)
===============================================================================
  drawableStateChanged protected drawableStateChanged()
  setCheckMarkDrawable public setCheckMarkDrawable(int)
  setTextAppearance    public setTextAppearance(android.content.Context,int)

android.support.v7.widget.AppCompatCheckedTextView$NullPointerException  (com.rubenroy.minimaltodo.eval_z00)
===============================================================================
  No methods

android.support.v7.widget.AppCompatCompoundButtonHelper  (com.rubenroy.minimaltodo.eval_nwg)
===============================================================================
  e        applyButtonTint()
  eval_m   setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
  g        getCompoundPaddingLeft(int)
  p        onSetButtonDrawable()
  p        setSupportButtonTintList(android.content.res.ColorStateList)
  q        getSupportButtonTintList()
  q        loadFromAttributes(android.util.AttributeSet,int)
  w        getSupportButtonTintMode()

android.support.v7.widget.AppCompatCompoundButtonHelper$DirectSetButtonDrawableInterface (com.rubenroy.minimaltodo.eval_nwg$z)
===============================================================================
  h    public abstract setButtonDrawable(android.graphics.drawable.Drawable)

android.support.v7.widget.AppCompatCompoundButtonHelper$NullPointerException     (com.rubenroy.minimaltodo.eval_oud)
===============================================================================
  No methods

android.support.v7.widget.AppCompatEditText      (com.rubenroy.minimaltodo.eval_ppo)
===============================================================================
  a                        public getSupportBackgroundTintList()
  e                        public setSupportBackgroundTintList(android.content.res.ColorStateList)
  n                        public setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
  o                        public getSupportBackgroundTintMode()
  drawableStateChanged     protected drawableStateChanged()
  setBackgroundDrawable    public setBackgroundDrawable(android.graphics.drawable.Drawable)
  setBackgroundResource    public setBackgroundResource(int)
  setTextAppearance        public setTextAppearance(android.content.Context,int)

android.support.v7.widget.AppCompatEditText$IOException  (com.rubenroy.minimaltodo.eval__gk)
===============================================================================
  No methods

android.support.v7.widget.AppCompatImageButton   (com.rubenroy.minimaltodo.eval_s_c)
===============================================================================
  a                        public getSupportBackgroundTintList()
  e                        public setSupportBackgroundTintList(android.content.res.ColorStateList)
  n                        public setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
  o                        public getSupportBackgroundTintMode()
  drawableStateChanged     protected drawableStateChanged()
  setBackgroundDrawable    public setBackgroundDrawable(android.graphics.drawable.Drawable)
  setBackgroundResource    public setBackgroundResource(int)
  setImageResource         public setImageResource(int)

android.support.v7.widget.AppCompatImageButton$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_ia5)
===============================================================================
  No methods

android.support.v7.widget.AppCompatImageHelper   (com.rubenroy.minimaltodo.eval_pop)
===============================================================================
  eval_l   loadFromAttributes(android.util.AttributeSet,int)
  eval_r   setImageResource(int)

android.support.v7.widget.AppCompatImageHelper$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_lh5)
===============================================================================
  No methods

android.support.v7.widget.AppCompatImageView     (com.rubenroy.minimaltodo.eval_clu)
===============================================================================
  a                        public getSupportBackgroundTintList()
  e                        public setSupportBackgroundTintList(android.content.res.ColorStateList)
  n                        public setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
  o                        public getSupportBackgroundTintMode()
  drawableStateChanged     protected drawableStateChanged()
  setBackgroundDrawable    public setBackgroundDrawable(android.graphics.drawable.Drawable)
  setBackgroundResource    public setBackgroundResource(int)
  setImageResource         public setImageResource(int)

android.support.v7.widget.AppCompatImageView$Exception   (com.rubenroy.minimaltodo.eval_ddw)
===============================================================================
  No methods

android.support.v7.widget.AppCompatMultiAutoCompleteTextView     (com.rubenroy.minimaltodo.eval_czb)
===============================================================================
  a                                public getSupportBackgroundTintList()
  e                                public setSupportBackgroundTintList(android.content.res.ColorStateList)
  n                                public setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
  o                                public getSupportBackgroundTintMode()
  drawableStateChanged             protected drawableStateChanged()
  setBackgroundDrawable            public setBackgroundDrawable(android.graphics.drawable.Drawable)
  setBackgroundResource            public setBackgroundResource(int)
  setDropDownBackgroundResource    public setDropDownBackgroundResource(int)
  setTextAppearance                public setTextAppearance(android.content.Context,int)

android.support.v7.widget.AppCompatMultiAutoCompleteTextView$NullPointerException        (com.rubenroy.minimaltodo.eval_iit)
===============================================================================
  No methods

android.support.v7.widget.AppCompatProgressBarHelper     (com.rubenroy.minimaltodo.eval_d0w)
===============================================================================
  a    private getDrawableShape()
  e    private tileifyIndeterminate(android.graphics.drawable.Drawable)
  f    getSampleTime()
  n    loadFromAttributes(android.util.AttributeSet,int)
  v    private tileify(android.graphics.drawable.Drawable,boolean)

android.support.v7.widget.AppCompatProgressBarHelper$ParseException      (com.rubenroy.minimaltodo.eval_ya6)
===============================================================================
  No methods

android.support.v7.widget.AppCompatRadioButton   (com.rubenroy.minimaltodo.eval_nio)
===============================================================================
  a                        public setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
  b                        public getSupportButtonTintMode()
  p                        public getSupportButtonTintList()
  s                        public setSupportButtonTintList(android.content.res.ColorStateList)
  getCompoundPaddingLeft   public getCompoundPaddingLeft()
  setButtonDrawable        public setButtonDrawable(android.graphics.drawable.Drawable)
  setButtonDrawable        public setButtonDrawable(int)

android.support.v7.widget.AppCompatRadioButton$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_z4o)
===============================================================================
  No methods

android.support.v7.widget.AppCompatRatingBar     (com.rubenroy.minimaltodo.eval_egc)
===============================================================================
  onMeasure    protected synchronized onMeasure(int,int)

android.support.v7.widget.AppCompatRatingBar$Exception   (com.rubenroy.minimaltodo.eval_g88)
===============================================================================
  No methods

android.support.v7.widget.AppCompatSeekBar       (com.rubenroy.minimaltodo.eval_b4j)
===============================================================================
  No methods

android.support.v7.widget.AppCompatSeekBar$ParseException        (com.rubenroy.minimaltodo.eval_vj0)
===============================================================================
  No methods

android.support.v7.widget.AppCompatSeekBarHelper (com.rubenroy.minimaltodo.eval_fq8)
===============================================================================
  n    loadFromAttributes(android.util.AttributeSet,int)

android.support.v7.widget.AppCompatSeekBarHelper$IOException     (com.rubenroy.minimaltodo.eval_ur5)
===============================================================================
  No methods

android.support.v7.widget.AppCompatSpinner       (com.rubenroy.minimaltodo.eval_lbt)
===============================================================================
  a                            public getSupportBackgroundTintList()
  a                            private compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)
  e                            public setSupportBackgroundTintList(android.content.res.ColorStateList)
  f                            static access$300(android.support.v7.widget.AppCompatSpinner)
  g                            static access$000(android.support.v7.widget.AppCompatSpinner)
  h                            static access$100()
  j                            static access$400(android.support.v7.widget.AppCompatSpinner)
  n                            public setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
  o                            public getSupportBackgroundTintMode()
  o                            static access$500(android.support.v7.widget.AppCompatSpinner,android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)
  drawableStateChanged         protected drawableStateChanged()
  getDropDownHorizontalOffset  public getDropDownHorizontalOffset()
  getDropDownVerticalOffset    public getDropDownVerticalOffset()
  getDropDownWidth             public getDropDownWidth()
  getPopupBackground           public getPopupBackground()
  getPopupContext              public getPopupContext()
  getPrompt                    public getPrompt()
  onDetachedFromWindow         protected onDetachedFromWindow()
  onMeasure                    protected onMeasure(int,int)
  onTouchEvent                 public onTouchEvent(android.view.MotionEvent)
  performClick                 public performClick()
  setAdapter                   public volatile setAdapter(android.widget.Adapter)
  setAdapter                   public setAdapter(android.widget.SpinnerAdapter)
  setBackgroundDrawable        public setBackgroundDrawable(android.graphics.drawable.Drawable)
  setBackgroundResource        public setBackgroundResource(int)
  setDropDownHorizontalOffset  public setDropDownHorizontalOffset(int)
  setDropDownVerticalOffset    public setDropDownVerticalOffset(int)
  setDropDownWidth             public setDropDownWidth(int)
  setPopupBackgroundDrawable   public setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
  setPopupBackgroundResource   public setPopupBackgroundResource(int)
  setPrompt                    public setPrompt(java.lang.CharSequence)

android.support.v7.widget.AppCompatSpinner$1     (com.rubenroy.minimaltodo.eval_lbt$1)
===============================================================================
  j    public onForwardingStarted()
  u    public getPopup()

android.support.v7.widget.AppCompatSpinner$DropDownAdapter       (com.rubenroy.minimaltodo.eval_lbt$x)
===============================================================================
  areAllItemsEnabled           public areAllItemsEnabled()
  getCount                     public getCount()
  getDropDownView              public getDropDownView(int,android.view.View,android.view.ViewGroup)
  getItem                      public getItem(int)
  getItemId                    public getItemId(int)
  getItemViewType              public getItemViewType(int)
  getView                      public getView(int,android.view.View,android.view.ViewGroup)
  getViewTypeCount             public getViewTypeCount()
  hasStableIds                 public hasStableIds()
  isEmpty                      public isEmpty()
  isEnabled                    public isEnabled(int)
  registerDataSetObserver      public registerDataSetObserver(android.database.DataSetObserver)
  unregisterDataSetObserver    public unregisterDataSetObserver(android.database.DataSetObserver)

android.support.v7.widget.AppCompatSpinner$DropdownPopup (com.rubenroy.minimaltodo.eval_lbt$q)
===============================================================================
  c    static access$701(android.support.v7.widget.AppCompatSpinner$DropdownPopup)
  c    public setAdapter(android.widget.ListAdapter)
  f    static access$200(android.support.v7.widget.AppCompatSpinner$DropdownPopup)
  l    static access$600(android.support.v7.widget.AppCompatSpinner$DropdownPopup,android.view.View)
  n    computeContentWidth()
  n    public setPromptText(java.lang.CharSequence)
  y    public getHintText()
  y    private isVisibleToUser(android.view.View)
  z    public show()

android.support.v7.widget.AppCompatSpinner$DropdownPopup$1       (com.rubenroy.minimaltodo.eval_lbt$q$1)
===============================================================================
  onItemClick  public onItemClick(android.widget.AdapterView,android.view.View,int,long)

android.support.v7.widget.AppCompatSpinner$DropdownPopup$2       (com.rubenroy.minimaltodo.eval_lbt$q$2)
===============================================================================
  onGlobalLayout   public onGlobalLayout()

android.support.v7.widget.AppCompatSpinner$DropdownPopup$3       (com.rubenroy.minimaltodo.eval_lbt$q$3)
===============================================================================
  onDismiss    public onDismiss()

android.support.v7.widget.AppCompatSpinner$DropdownPopup$ArrayOutOfBoundsException       (com.rubenroy.minimaltodo.eval_m88)
===============================================================================
  No methods

android.support.v7.widget.AppCompatSpinner$ParseException        (com.rubenroy.minimaltodo.eval_xst)
===============================================================================
  No methods

android.support.v7.widget.AppCompatTextHelper    (com.rubenroy.minimaltodo.eval_wfx)
===============================================================================
  a        onSetTextAppearance(android.content.Context,int)
  eval_i   setAllCaps(boolean)
  o        loadFromAttributes(android.util.AttributeSet,int)
  q        final applyCompoundDrawableTint(android.graphics.drawable.Drawable,android.support.v7.internal.widget.TintInfo)
  s        applyCompoundDrawablesTints()
  u        static create(android.widget.TextView)

android.support.v7.widget.AppCompatTextHelper$NullPointerException       (com.rubenroy.minimaltodo.eval_k5_)
===============================================================================
  No methods

android.support.v7.widget.AppCompatTextHelperV17 (com.rubenroy.minimaltodo.eval_x60)
===============================================================================
  o    loadFromAttributes(android.util.AttributeSet,int)
  s    applyCompoundDrawablesTints()

android.support.v7.widget.AppCompatTextHelperV17$IOException     (com.rubenroy.minimaltodo.eval_ivc)
===============================================================================
  No methods

android.support.v7.widget.AppCompatTextView      (com.rubenroy.minimaltodo.eval_pp6)
===============================================================================
  a                        public getSupportBackgroundTintList()
  e                        public setSupportBackgroundTintList(android.content.res.ColorStateList)
  n                        public setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
  o                        public getSupportBackgroundTintMode()
  drawableStateChanged     protected drawableStateChanged()
  setBackgroundDrawable    public setBackgroundDrawable(android.graphics.drawable.Drawable)
  setBackgroundResource    public setBackgroundResource(int)
  setTextAppearance        public setTextAppearance(android.content.Context,int)

android.support.v7.widget.AppCompatTextView$IOException  (com.rubenroy.minimaltodo.eval_no1)
===============================================================================
  No methods

android.support.v7.widget.ChildHelper    (com.rubenroy.minimaltodo.eval_l2u)
===============================================================================
  a        hide(android.view.View)
  a        findHiddenNonRemovedView(int,int)
  b        getChildCount()
  b        unhide(android.view.View)
  b        addView(android.view.View,int,boolean)
  d        detachViewFromParent(int)
  e        addView(android.view.View,boolean)
  eval_f   private unhideViewInternal(android.view.View)
  eval_o   removeViewIfHidden(android.view.View)
  eval_u   private hideViewInternal(android.view.View)
  h        getChildAt(int)
  i        isHidden(android.view.View)
  i        getUnfilteredChildAt(int)
  k        removeAllViewsUnfiltered()
  n        getUnfilteredChildCount()
  n        removeViewAt(int)
  p        indexOfChild(android.view.View)
  u        attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)
  v        private getOffset(int)
  x        removeView(android.view.View)
  toString public toString()

android.support.v7.widget.ChildHelper$Bucket     (com.rubenroy.minimaltodo.eval_l2u$v)
===============================================================================
  f        insert(int,boolean)
  j        remove(int)
  k        private ensureNext()
  l        set(int)
  m        reset()
  o        clear(int)
  x        get(int)
  z        countOnesBefore(int)
  toString public toString()

android.support.v7.widget.ChildHelper$Callback   (com.rubenroy.minimaltodo.eval_l2u$g)
===============================================================================
  d        public abstract removeAllViews()
  d        public abstract addView(android.view.View,int)
  d        public abstract attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams)
  e        public abstract removeViewAt(int)
  eval_a   public abstract detachViewFromParent(int)
  eval_w   public abstract indexOfChild(android.view.View)
  eval_y   public abstract getChildViewHolder(android.view.View)
  i        public abstract getChildAt(int)
  o        public abstract onEnteredHiddenState(android.view.View)
  p        public abstract getChildCount()
  s        public abstract onLeftHiddenState(android.view.View)

android.support.v7.widget.ChildHelper$ParseException     (com.rubenroy.minimaltodo.eval_kjr)
===============================================================================
  No methods

android.support.v7.widget.DefaultItemAnimator    (com.rubenroy.minimaltodo.eval_j4v)
===============================================================================
  a        public animateRemove(android.support.v7.widget.RecyclerView$ViewHolder)
  a        public animateMove(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int)
  b        static access$100(android.support.v7.widget.DefaultItemAnimator)
  b        static access$200(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.DefaultItemAnimator$ChangeInfo)
  b        private resetAnimation(android.support.v7.widget.RecyclerView$ViewHolder)
  d        cancelAll(java.util.List)
  e        static access$700(android.support.v7.widget.DefaultItemAnimator)
  eval_i   private animateAddImpl(android.support.v7.widget.RecyclerView$ViewHolder)
  eval_w   static access$300(android.support.v7.widget.DefaultItemAnimator)
  eval_y   private animateRemoveImpl(android.support.v7.widget.RecyclerView$ViewHolder)
  f        public endAnimations()
  f        private animateChangeImpl(android.support.v7.widget.DefaultItemAnimator$ChangeInfo)
  i        public animateAdd(android.support.v7.widget.RecyclerView$ViewHolder)
  k        private endChangeAnimation(java.util.List,android.support.v7.widget.RecyclerView$ViewHolder)
  l        public animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int)
  m        static access$800(android.support.v7.widget.DefaultItemAnimator)
  p        public runPendingAnimations()
  p        private endChangeAnimationIfNecessary(android.support.v7.widget.DefaultItemAnimator$ChangeInfo)
  p        public endAnimation(android.support.v7.widget.RecyclerView$ViewHolder)
  r        static access$400(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.RecyclerView$ViewHolder)
  s        static access$900(android.support.v7.widget.DefaultItemAnimator)
  t        public isRunning()
  u        static access$500(android.support.v7.widget.DefaultItemAnimator)
  u        private endChangeAnimationIfNecessary(android.support.v7.widget.DefaultItemAnimator$ChangeInfo,android.support.v7.widget.RecyclerView$ViewHolder)
  u        static access$000(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int)
  w        static access$1300(android.support.v7.widget.DefaultItemAnimator)
  z        private dispatchFinishedWhenDone()
  z        static access$1100(android.support.v7.widget.DefaultItemAnimator)
  z        private animateMoveImpl(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int)

android.support.v7.widget.DefaultItemAnimator$1  (com.rubenroy.minimaltodo.eval_j4v$1)
===============================================================================
  run  public run()

android.support.v7.widget.DefaultItemAnimator$2  (com.rubenroy.minimaltodo.eval_j4v$2)
===============================================================================
  run  public run()

android.support.v7.widget.DefaultItemAnimator$3  (com.rubenroy.minimaltodo.eval_j4v$3)
===============================================================================
  run  public run()

android.support.v7.widget.DefaultItemAnimator$4  (com.rubenroy.minimaltodo.eval_j4v$4)
===============================================================================
  d    public onAnimationStart(android.view.View)
  v    public onAnimationEnd(android.view.View)

android.support.v7.widget.DefaultItemAnimator$5  (com.rubenroy.minimaltodo.eval_j4v$5)
===============================================================================
  b    public onAnimationCancel(android.view.View)
  d    public onAnimationStart(android.view.View)
  v    public onAnimationEnd(android.view.View)

android.support.v7.widget.DefaultItemAnimator$6  (com.rubenroy.minimaltodo.eval_j4v$6)
===============================================================================
  b    public onAnimationCancel(android.view.View)
  d    public onAnimationStart(android.view.View)
  v    public onAnimationEnd(android.view.View)

android.support.v7.widget.DefaultItemAnimator$7  (com.rubenroy.minimaltodo.eval_j4v$7)
===============================================================================
  d    public onAnimationStart(android.view.View)
  v    public onAnimationEnd(android.view.View)

android.support.v7.widget.DefaultItemAnimator$8  (com.rubenroy.minimaltodo.eval_j4v$8)
===============================================================================
  d    public onAnimationStart(android.view.View)
  v    public onAnimationEnd(android.view.View)

android.support.v7.widget.DefaultItemAnimator$ChangeInfo (com.rubenroy.minimaltodo.eval_j4v$j)
===============================================================================
  toString public toString()

android.support.v7.widget.DefaultItemAnimator$MoveInfo   (com.rubenroy.minimaltodo.eval_j4v$l)
===============================================================================
  No methods

android.support.v7.widget.DefaultItemAnimator$NullPointerException       (com.rubenroy.minimaltodo.eval_ucz)
===============================================================================
  No methods

android.support.v7.widget.DefaultItemAnimator$VpaListenerAdapter (com.rubenroy.minimaltodo.eval_j4v$u)
===============================================================================
  b    public onAnimationCancel(android.view.View)
  d    public onAnimationStart(android.view.View)
  v    public onAnimationEnd(android.view.View)

android.support.v7.widget.GridLayoutManager      (com.rubenroy.minimaltodo.eval_c33)
===============================================================================
  a        private getSpanGroupIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int)
  c        private getSpanSize(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int)
  d        public checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams)
  e        public generateLayoutParams(android.content.Context,android.util.AttributeSet)
  eval_a   private cachePreLayoutSpanMapping()
  eval_d   public getSpanSizeLookup()
  eval_e   private updateMeasurements()
  eval_q   private calculateItemBorders(int)
  f        public onItemsAdded(android.support.v7.widget.RecyclerView,int,int)
  g        layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)
  g        public onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  g        private updateSpecWithExtra(int,int,int)
  h        public supportsPredictiveItemAnimations()
  i        private clearPreLayoutSpanMappingCache()
  j        public getSpanCount()
  j        public onItemsChanged(android.support.v7.widget.RecyclerView)
  j        public onItemsUpdated(android.support.v7.widget.RecyclerView,int,int,java.lang.Object)
  j        private measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean)
  j        public generateLayoutParams(android.view.ViewGroup$LayoutParams)
  k        private assignSpans(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int,boolean)
  m        public setSpanSizeLookup(android.support.v7.widget.GridLayoutManager$SpanSizeLookup)
  m        public onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  m        private ensureAnchorIsInFirstSpan(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo)
  m        private getSpanIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int)
  q        private getMainDirSpec(int)
  r        public onItemsMoved(android.support.v7.widget.RecyclerView,int,int,int)
  r        public setSpanCount(int)
  s        findReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int,int)
  t        public getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  u        public generateDefaultLayoutParams()
  v        public getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  x        public onItemsRemoved(android.support.v7.widget.RecyclerView,int,int)
  y        public setStackFromEnd(boolean)
  z        onAnchorReady(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo)

android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup        (com.rubenroy.minimaltodo.eval_c33$d)
===============================================================================
  l    public getSpanSize(int)
  l    public getSpanIndex(int,int)

android.support.v7.widget.GridLayoutManager$IOException  (com.rubenroy.minimaltodo.eval_kw6)
===============================================================================
  No methods

android.support.v7.widget.GridLayoutManager$LayoutParams (com.rubenroy.minimaltodo.eval_c33$u)
===============================================================================
  eval_l   static access$002(android.support.v7.widget.GridLayoutManager$LayoutParams,int)
  h        static access$100(android.support.v7.widget.GridLayoutManager$LayoutParams)
  l        public getSpanIndex()
  o        public getSpanSize()
  q        static access$000(android.support.v7.widget.GridLayoutManager$LayoutParams)
  z        static access$102(android.support.v7.widget.GridLayoutManager$LayoutParams,int)

android.support.v7.widget.GridLayoutManager$SpanSizeLookup       (com.rubenroy.minimaltodo.eval_c33$s)
===============================================================================
  f    findReferenceIndexFromCache(int)
  h    public setSpanIndexCacheEnabled(boolean)
  k    getCachedSpanIndex(int,int)
  l    public abstract getSpanSize(int)
  l    public getSpanIndex(int,int)
  t    public getSpanGroupIndex(int,int)
  u    public isSpanIndexCacheEnabled()
  w    public invalidateSpanIndexCache()

android.support.v7.widget.LayoutState    (com.rubenroy.minimaltodo.eval_ql1)
===============================================================================
  k        hasMore(android.support.v7.widget.RecyclerView$State)
  r        next(android.support.v7.widget.RecyclerView$Recycler)
  toString public toString()

android.support.v7.widget.LayoutState$ParseException     (com.rubenroy.minimaltodo.eval_ywz)
===============================================================================
  No methods

android.support.v7.widget.LinearLayoutCompat     (com.rubenroy.minimaltodo.eval_p_d)
===============================================================================
  a                                drawDividersHorizontal(android.graphics.Canvas)
  a                                public setBaselineAligned(boolean)
  b                                public getOrientation()
  b                                measureVertical(int,int)
  c                                drawDividersVertical(android.graphics.Canvas)
  d                                public getShowDividers()
  d                                drawVerticalDivider(android.graphics.Canvas,int)
  d                                public setDividerDrawable(android.graphics.drawable.Drawable)
  d                                public setOrientation(int)
  e                                getLocationOffset(android.view.View)
  e                                public setHorizontalGravity(int)
  e                                layoutVertical(int,int,int,int)
  eval__                           public isMeasureWithLargestChildEnabled()
  eval_b                           getVirtualChildAt(int)
  eval_g                           public getBaselineAlignedChildIndex()
  eval_h                           public setGravity(int)
  eval_j                           protected hasDividerBeforeChildAt(int)
  eval_o                           public getDividerDrawable()
  eval_r                           public setMeasureWithLargestChildEnabled(boolean)
  eval_s                           public isBaselineAligned()
  g                                measureHorizontal(int,int)
  generateDefaultLayoutParams      protected generateDefaultLayoutParams()
  generateLayoutParams             public generateLayoutParams(android.util.AttributeSet)
  generateLayoutParams             protected generateLayoutParams(android.view.ViewGroup$LayoutParams)
  h                                measureChildBeforeLayout(android.view.View,int,int,int,int,int)
  h                                public setWeightSum(float)
  i                                public getDividerWidth()
  j                                public setBaselineAlignedChildIndex(int)
  k                                public getDividerPadding()
  k                                public setDividerPadding(int)
  o                                getChildrenSkipCount(android.view.View,int)
  o                                private forceUniformWidth(int,int)
  p                                measureNullChild(int)
  p                                private forceUniformHeight(int,int)
  r                                getVirtualChildCount()
  r                                private setChildFrame(android.view.View,int,int,int,int)
  r                                public setVerticalGravity(int)
  s                                public setShowDividers(int)
  t                                drawHorizontalDivider(android.graphics.Canvas,int)
  w                                getNextLocationOffset(android.view.View)
  x                                layoutHorizontal(int,int,int,int)
  y                                public getWeightSum()
  checkLayoutParams                protected checkLayoutParams(android.view.ViewGroup$LayoutParams)
  generateDefaultLayoutParams      protected volatile generateDefaultLayoutParams()
  generateLayoutParams             public volatile generateLayoutParams(android.util.AttributeSet)
  generateLayoutParams             protected volatile generateLayoutParams(android.view.ViewGroup$LayoutParams)
  getBaseline                      public getBaseline()
  onDraw                           protected onDraw(android.graphics.Canvas)
  onInitializeAccessibilityEvent   public onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
  onInitializeAccessibilityNodeInfo    public onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
  onLayout                         protected onLayout(boolean,int,int,int,int)
  onMeasure                        protected onMeasure(int,int)
  shouldDelayChildPressedState     public shouldDelayChildPressedState()

android.support.v7.widget.LinearLayoutCompat$DividerMode (com.rubenroy.minimaltodo.eval_p_d$g)
===============================================================================
  No methods

android.support.v7.widget.LinearLayoutCompat$Exception   (com.rubenroy.minimaltodo.eval_cnm)
===============================================================================
  No methods

android.support.v7.widget.LinearLayoutCompat$LayoutParams        (com.rubenroy.minimaltodo.eval_p_d$j)
===============================================================================
  No methods

android.support.v7.widget.LinearLayoutCompat$OrientationMode     (com.rubenroy.minimaltodo.eval_p_d$r)
===============================================================================
  No methods

android.support.v7.widget.LinearLayoutManager    (com.rubenroy.minimaltodo.eval_l45)
===============================================================================
  a        private updateLayoutStateToFillStart(android.support.v7.widget.LinearLayoutManager$AnchorInfo)
  a        public computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State)
  b        protected getExtraLayoutSpace(android.support.v7.widget.RecyclerView$State)
  b        public smoothScrollToPosition(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State,int)
  b        private findFirstVisibleChildClosestToEnd(boolean,boolean)
  b        private convertFocusDirectionToLayoutDirection(int)
  c        public findLastVisibleItemPosition()
  c        private findLastReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  d        public findFirstVisibleItemPosition()
  d        public computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State)
  d        public prepareForDrop(android.view.View,android.view.View,int,int)
  e        private logChildren()
  e        private recycleByLayoutState(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState)
  e        private findReferenceChildClosestToStart(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  e        scrollBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  eval_b   private getChildClosestToEnd()
  eval_d   private computeScrollExtent(android.support.v7.widget.RecyclerView$State)
  eval_e   private getChildClosestToStart()
  eval_f   public scrollToPosition(int)
  eval_j   createLayoutState()
  eval_k   private computeScrollOffset(android.support.v7.widget.RecyclerView$State)
  eval_m   public getReverseLayout()
  eval_m   public onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
  eval_n   private resolveShouldLayoutReverse()
  eval_n   public scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  eval_t   public canScrollHorizontally()
  eval_t   public computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State)
  eval_x   public canScrollVertically()
  eval_y   public getStackFromEnd()
  f        public getOrientation()
  f        public findViewByPosition(int)
  g        layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)
  h        public supportsPredictiveItemAnimations()
  h        public onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler)
  i        private findReferenceChildClosestToEnd(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  i        private fixLayoutStartGap(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean)
  i        private updateLayoutStateToFillEnd(int,int)
  j        public computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State)
  k        ensureLayoutState()
  k        public setOrientation(int)
  k        public assertNotInLayoutOrScroll(java.lang.String)
  l        public isSmoothScrollbarEnabled()
  l        private computeScrollRange(android.support.v7.widget.RecyclerView$State)
  m        public findFirstCompletelyVisibleItemPosition()
  m        public onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  m        private recycleViewsFromEnd(android.support.v7.widget.RecyclerView$Recycler,int)
  o        private updateLayoutStateToFillStart(int,int)
  o        findOneVisibleChild(int,int,boolean,boolean)
  p        protected isLayoutRTL()
  p        private updateLayoutStateToFillEnd(android.support.v7.widget.LinearLayoutManager$AnchorInfo)
  p        private updateAnchorFromChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo)
  p        public setReverseLayout(boolean)
  q        public onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  q        public setRecycleChildrenOnDetach(boolean)
  q        public scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  r        validateChildOrder()
  r        public setSmoothScrollbarEnabled(boolean)
  s        private layoutForPredictiveAnimations(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int)
  s        findReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int,int)
  s        public computeScrollVectorForPosition(int)
  s        public scrollToPositionWithOffset(int,int)
  u        public generateDefaultLayoutParams()
  v        public onSaveInstanceState()
  v        private recycleChildren(android.support.v7.widget.RecyclerView$Recycler,int,int)
  v        public computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State)
  v        private findFirstVisibleChildClosestToStart(boolean,boolean)
  v        private fixLayoutEndGap(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean)
  w        private findFirstReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  x        public findLastCompletelyVisibleItemPosition()
  x        private updateAnchorFromPendingData(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo)
  x        private updateLayoutState(int,int,boolean,android.support.v7.widget.RecyclerView$State)
  y        public onRestoreInstanceState(android.os.Parcelable)
  y        fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.RecyclerView$State,boolean)
  y        private updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo)
  y        public setStackFromEnd(boolean)
  z        public getRecycleChildrenOnDetach()
  z        onAnchorReady(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo)
  z        private recycleViewsFromStart(android.support.v7.widget.RecyclerView$Recycler,int)
  z        public computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State)

android.support.v7.widget.LinearLayoutManager$1  (com.rubenroy.minimaltodo.eval_l45$1)
===============================================================================
  z    public computeScrollVectorForPosition(int)

android.support.v7.widget.LinearLayoutManager$AnchorInfo (com.rubenroy.minimaltodo.eval_l45$v)
===============================================================================
  f        assignCoordinateFromPadding()
  k        static access$000(android.support.v7.widget.LinearLayoutManager$AnchorInfo,android.view.View,android.support.v7.widget.RecyclerView$State)
  l        public assignFromViewAndKeepVisibleRect(android.view.View)
  s        reset()
  u        public assignFromView(android.view.View)
  v        private isViewValidAsAnchor(android.view.View,android.support.v7.widget.RecyclerView$State)
  toString public toString()

android.support.v7.widget.LinearLayoutManager$LayoutChunkResult  (com.rubenroy.minimaltodo.eval_l45$q)
===============================================================================
  p    resetInternal()

android.support.v7.widget.LinearLayoutManager$LayoutState        (com.rubenroy.minimaltodo.eval_l45$p)
===============================================================================
  g    public assignPositionFromScrapList(android.view.View)
  k    hasMore(android.support.v7.widget.RecyclerView$State)
  n    log()
  p    public assignPositionFromScrapList()
  q    private nextViewFromScrapList()
  r    public nextViewInLimitedList(android.view.View)
  x    next(android.support.v7.widget.RecyclerView$Recycler)

android.support.v7.widget.LinearLayoutManager$NullPointerException       (com.rubenroy.minimaltodo.eval_r16)
===============================================================================
  No methods

android.support.v7.widget.LinearLayoutManager$SavedState (com.rubenroy.minimaltodo.eval_l45$eval_a)
===============================================================================
  d                hasValidAnchor()
  l                invalidateAnchor()
  describeContents public describeContents()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v7.widget.LinearLayoutManager$SavedState$1       (com.rubenroy.minimaltodo.eval_l45$eval_a$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v7.widget.LinearLayoutManager$SavedState$ArrayOutOfBoundsException       (com.rubenroy.minimaltodo.eval_s46)
===============================================================================
  No methods

android.support.v7.widget.LinearSmoothScroller   (com.rubenroy.minimaltodo.eval_ptu)
===============================================================================
  e        protected getHorizontalSnapPreference()
  e        public calculateDxToMakeVisible(android.view.View,int)
  eval_j   private clampApplyScroll(int,int)
  f        public calculateDtToFit(int,int,int,int,int)
  h        protected calculateTimeForScrolling(int)
  i        protected onStart()
  j        protected onStop()
  j        protected calculateTimeForDeceleration(int)
  o        protected calculateSpeedPerPixel(android.util.DisplayMetrics)
  o        protected onTargetFound(android.view.View,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$SmoothScroller$Action)
  t        protected getVerticalSnapPreference()
  t        protected updateActionForInterimTarget(android.support.v7.widget.RecyclerView$SmoothScroller$Action)
  x        protected onSeekTargetStep(int,int,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$SmoothScroller$Action)
  z        public calculateDyToMakeVisible(android.view.View,int)
  z        public abstract computeScrollVectorForPosition(int)

android.support.v7.widget.LinearSmoothScroller$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_nkq)
===============================================================================
  No methods

android.support.v7.widget.ListPopupWindow        (com.rubenroy.minimaltodo.eval_ibt)
===============================================================================
  a        public getWidth()
  c        public setAnchorView(android.view.View)
  c        public setAdapter(android.widget.ListAdapter)
  c        public setAnimationStyle(int)
  e        public postShow()
  e        private static isConfirmKey(int)
  eval_a   public getBackground()
  eval_d   public getSelectedView()
  eval_d   public setPromptView(android.view.View)
  eval_e   public setWidth(int)
  eval_f   public getListView()
  eval_g   public isShowing()
  eval_i   public getSelectedItem()
  eval_i   public setHeight(int)
  eval_j   public getInputMethodMode()
  eval_j   public setContentWidth(int)
  eval_l   public getSelectedItemId()
  eval_o   public getVerticalOffset()
  eval_r   private buildDropDown()
  eval_r   public setListSelector(android.graphics.drawable.Drawable)
  eval_s   private setPopupClipToScreenEnabled(boolean)
  eval_t   public getSelectedItemPosition()
  eval_u   public isDropDownAlwaysVisible()
  eval_x   public clearListSelection()
  eval_y   static access$600(android.support.v7.widget.ListPopupWindow)
  f        public setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
  f        public setForceIgnoreOutsideTouch(boolean)
  f        public onKeyPreIme(int,android.view.KeyEvent)
  g        public isModal()
  h        public getHorizontalOffset()
  h        static access$1200(android.support.v7.widget.ListPopupWindow)
  i        public setInputMethodMode(int)
  j        public onKeyDown(int,android.view.KeyEvent)
  k        public isInputMethodNotNeeded()
  k        public setModal(boolean)
  k        setListItemExpandMax(int)
  m        public getSoftInputMode()
  m        private getMaxAvailableHeight(android.view.View,int,boolean)
  m        public setDropDownAlwaysVisible(boolean)
  n        public setWindowLayoutType(int)
  o        public setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
  p        public dismiss()
  p        public setPromptPosition(int)
  r        public setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)
  r        public setVerticalOffset(int)
  s        public getAnimationStyle()
  s        public setBackgroundDrawable(android.graphics.drawable.Drawable)
  t        public getHeight()
  t        public setDropDownGravity(int)
  u        private removePromptView()
  u        static access$1100(android.support.v7.widget.ListPopupWindow)
  u        public setSelection(int)
  v        public getPromptPosition()
  v        public setHorizontalOffset(int)
  w        public performItemClick(int)
  x        public getAnchorView()
  x        public createDragToOpenListener(android.view.View)
  y        static access$1300(android.support.v7.widget.ListPopupWindow)
  z        public show()
  z        public setSoftInputMode(int)
  z        public onKeyUp(int,android.view.KeyEvent)

android.support.v7.widget.ListPopupWindow$1      (com.rubenroy.minimaltodo.eval_ibt$1)
===============================================================================
  u    public getPopup()

android.support.v7.widget.ListPopupWindow$2      (com.rubenroy.minimaltodo.eval_ibt$2)
===============================================================================
  run  public run()

android.support.v7.widget.ListPopupWindow$3      (com.rubenroy.minimaltodo.eval_ibt$3)
===============================================================================
  onItemSelected       public onItemSelected(android.widget.AdapterView,android.view.View,int,long)
  onNothingSelected    public onNothingSelected(android.widget.AdapterView)

android.support.v7.widget.ListPopupWindow$ArrayOutOfBoundsException      (com.rubenroy.minimaltodo.eval_lrn)
===============================================================================
  No methods

android.support.v7.widget.ListPopupWindow$DropDownListView       (com.rubenroy.minimaltodo.eval_ibt$r)
===============================================================================
  e                protected touchModeDrawsInPressedStateCompat()
  e                public onForwardedEvent(android.view.MotionEvent,int)
  g                static access$502(android.support.v7.widget.ListPopupWindow$DropDownListView,boolean)
  h                private clickPressedItem(android.view.View,int)
  h                private setPressedItem(android.view.View,int,float,float)
  i                private clearPressedItem()
  hasFocus         public hasFocus()
  hasWindowFocus   public hasWindowFocus()
  isFocused        public isFocused()
  isInTouchMode    public isInTouchMode()

android.support.v7.widget.ListPopupWindow$ForwardingListener     (com.rubenroy.minimaltodo.eval_ibt$y)
===============================================================================
  d        static access$900(android.support.v7.widget.ListPopupWindow$ForwardingListener)
  d        private toLocalMotionEvent(android.view.View,android.view.MotionEvent)
  eval_g   private onLongPress()
  eval_s   protected onForwardingStopped()
  g        private onTouchObserved(android.view.MotionEvent)
  j        protected onForwardingStarted()
  k        static access$1000(android.support.v7.widget.ListPopupWindow$ForwardingListener)
  m        private static pointInView(android.view.View,float,float,float)
  r        private clearCallbacks()
  u        public abstract getPopup()
  v        private toGlobalMotionEvent(android.view.View,android.view.MotionEvent)
  y        private onTouchForwarded(android.view.MotionEvent)
  onTouch  public onTouch(android.view.View,android.view.MotionEvent)

android.support.v7.widget.ListPopupWindow$ForwardingListener$DisallowIntercept   (com.rubenroy.minimaltodo.eval_ibt$y$l)
===============================================================================
  run  public run()

android.support.v7.widget.ListPopupWindow$ForwardingListener$NullPointerException        (com.rubenroy.minimaltodo.eval_n7r)
===============================================================================
  No methods

android.support.v7.widget.ListPopupWindow$ForwardingListener$TriggerLongPress    (com.rubenroy.minimaltodo.eval_ibt$y$s)
===============================================================================
  run  public run()

android.support.v7.widget.ListPopupWindow$ListSelectorHider      (com.rubenroy.minimaltodo.eval_ibt$t)
===============================================================================
  run  public run()

android.support.v7.widget.ListPopupWindow$PopupDataSetObserver   (com.rubenroy.minimaltodo.eval_ibt$i)
===============================================================================
  onChanged        public onChanged()
  onInvalidated    public onInvalidated()

android.support.v7.widget.ListPopupWindow$PopupScrollListener    (com.rubenroy.minimaltodo.eval_ibt$h)
===============================================================================
  onScroll             public onScroll(android.widget.AbsListView,int,int,int)
  onScrollStateChanged public onScrollStateChanged(android.widget.AbsListView,int)

android.support.v7.widget.ListPopupWindow$PopupTouchInterceptor  (com.rubenroy.minimaltodo.eval_ibt$c)
===============================================================================
  onTouch  public onTouch(android.view.View,android.view.MotionEvent)

android.support.v7.widget.ListPopupWindow$ResizePopupRunnable    (com.rubenroy.minimaltodo.eval_ibt$a)
===============================================================================
  run  public run()

android.support.v7.widget.OpReorderer    (com.rubenroy.minimaltodo.eval_nfu)
===============================================================================
  a    private swapMoveOp(java.util.List,int,int)
  c    swapMoveUpdate(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp)
  d    reorderOps(java.util.List)
  h    swapMoveRemove(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp)
  m    private swapMoveAdd(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp)
  p    private getLastMoveOutOfOrder(java.util.List)

android.support.v7.widget.OpReorderer$Callback   (com.rubenroy.minimaltodo.eval_nfu$n)
===============================================================================
  g    public abstract obtainUpdateOp(int,int,int,java.lang.Object)
  l    public abstract recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp)

android.support.v7.widget.OpReorderer$ParseException     (com.rubenroy.minimaltodo.eval__x7)
===============================================================================
  No methods

android.support.v7.widget.OrientationHelper      (com.rubenroy.minimaltodo.eval_k54)
===============================================================================
  c        public static createHorizontalHelper(android.support.v7.widget.RecyclerView$LayoutManager)
  d        public abstract getEnd()
  d        public abstract getDecoratedMeasurement(android.view.View)
  eval_o   public abstract getDecoratedMeasurementInOther(android.view.View)
  eval_s   public abstract getEndPadding()
  eval_x   public abstract getDecoratedEnd(android.view.View)
  g        public abstract getStartAfterPadding()
  h        public getTotalSpaceChange()
  k        public abstract getDecoratedStart(android.view.View)
  o        public abstract getTotalSpace()
  q        public abstract offsetChildren(int)
  x        public onLayoutComplete()
  x        public abstract offsetChild(android.view.View,int)
  z        public abstract getEndAfterPadding()
  z        public static createVerticalHelper(android.support.v7.widget.RecyclerView$LayoutManager)
  z        public static createOrientationHelper(android.support.v7.widget.RecyclerView$LayoutManager,int)

android.support.v7.widget.OrientationHelper$1    (com.rubenroy.minimaltodo.eval_k54$1)
===============================================================================
  d        public getEnd()
  d        public getDecoratedMeasurement(android.view.View)
  eval_o   public getDecoratedMeasurementInOther(android.view.View)
  eval_s   public getEndPadding()
  eval_x   public getDecoratedEnd(android.view.View)
  g        public getStartAfterPadding()
  k        public getDecoratedStart(android.view.View)
  o        public getTotalSpace()
  q        public offsetChildren(int)
  x        public offsetChild(android.view.View,int)
  z        public getEndAfterPadding()

android.support.v7.widget.OrientationHelper$2    (com.rubenroy.minimaltodo.eval_k54$2)
===============================================================================
  d        public getEnd()
  d        public getDecoratedMeasurement(android.view.View)
  eval_o   public getDecoratedMeasurementInOther(android.view.View)
  eval_s   public getEndPadding()
  eval_x   public getDecoratedEnd(android.view.View)
  g        public getStartAfterPadding()
  k        public getDecoratedStart(android.view.View)
  o        public getTotalSpace()
  q        public offsetChildren(int)
  x        public offsetChild(android.view.View,int)
  z        public getEndAfterPadding()

android.support.v7.widget.OrientationHelper$IOException  (com.rubenroy.minimaltodo.eval_m98)
===============================================================================
  No methods

android.support.v7.widget.PopupMenu      (com.rubenroy.minimaltodo.eval_ty1)
===============================================================================
  b    public getDragToOpenListener()
  c    public onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder)
  d    public onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)
  f    public getMenu()
  f    public setOnDismissListener(android.support.v7.widget.PopupMenu$OnDismissListener)
  h    public getMenuInflater()
  i    public onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder)
  k    public onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem)
  l    public setGravity(int)
  p    public show()
  q    static access$000(android.support.v7.widget.PopupMenu)
  t    public dismiss()
  w    public getGravity()
  x    public onCloseSubMenu(android.support.v7.internal.view.menu.SubMenuBuilder)
  y    public inflate(int)
  z    public setOnMenuItemClickListener(android.support.v7.widget.PopupMenu$OnMenuItemClickListener)

android.support.v7.widget.PopupMenu$1    (com.rubenroy.minimaltodo.eval_ty1$1)
===============================================================================
  eval_s   protected onForwardingStopped()
  j        protected onForwardingStarted()
  u        public getPopup()

android.support.v7.widget.PopupMenu$NullPointerException (com.rubenroy.minimaltodo.eval_u_0)
===============================================================================
  No methods

android.support.v7.widget.PopupMenu$OnDismissListener    (com.rubenroy.minimaltodo.eval_ty1$w)
===============================================================================
  i    public abstract onDismiss(android.support.v7.widget.PopupMenu)

android.support.v7.widget.PopupMenu$OnMenuItemClickListener      (com.rubenroy.minimaltodo.eval_ty1$f)
===============================================================================
  e    public abstract onMenuItemClick(android.view.MenuItem)

android.support.v7.widget.PositionMap    (com.rubenroy.minimaltodo.eval_sqa)
===============================================================================
  a        static idealIntArraySize(int)
  b        public remove(int)
  clone    public clone()
  e        public clear()
  e        public insertKeyRange(int,int)
  eval_c   static idealBooleanArraySize(int)
  eval_d   public removeAt(int)
  eval_n   public put(int,java.lang.Object)
  f        public setValueAt(int,java.lang.Object)
  g        public get(int)
  h        public delete(int)
  i        static idealByteArraySize(int)
  l        static idealFloatArraySize(int)
  n        static idealObjectArraySize(int)
  o        public keyAt(int)
  p        static idealShortArraySize(int)
  r        public size()
  r        static idealLongArraySize(int)
  s        public get(int,java.lang.Object)
  u        public indexOfKey(int)
  v        public removeAtRange(int,int)
  w        private gc()
  x        public valueAt(int)
  x        public indexOfValue(java.lang.Object)
  y        static idealCharArraySize(int)
  y        public append(int,java.lang.Object)
  y        public removeKeyRange(java.util.ArrayList,int,int)
  clone    public volatile clone()
  toString public toString()

android.support.v7.widget.PositionMap$ContainerHelpers   (com.rubenroy.minimaltodo.eval_sqa$h)
===============================================================================
  g    static binarySearch(int[],int,int)

android.support.v7.widget.PositionMap$ParseException     (com.rubenroy.minimaltodo.eval__rg)
===============================================================================
  No methods

android.support.v7.widget.RecyclerView   (com.rubenroy.minimaltodo.eval_ym3)
===============================================================================
  a                                static access$5700(android.support.v7.widget.RecyclerView)
  a                                public offsetChildrenVertical(int)
  a                                public onScrolled(int,int)
  a                                assertNotInLayoutOrScroll(java.lang.String)
  b                                public setOnScrollListener(android.support.v7.widget.RecyclerView$OnScrollListener)
  b                                static access$5000(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder)
  c                                static access$900(android.support.v7.widget.RecyclerView)
  c                                static access$5300(android.support.v7.widget.RecyclerView,int,int)
  c                                public smoothScrollToPosition(int)
  d                                static access$3900(android.support.v7.widget.RecyclerView)
  d                                public addOnScrollListener(android.support.v7.widget.RecyclerView$OnScrollListener)
  d                                static access$3500(android.support.v7.widget.RecyclerView,int,int)
  d                                public onScrollStateChanged(int)
  d                                scrollByInternal(int,int,android.view.MotionEvent)
  e                                private repositionShadowingViews()
  e                                public setChildDrawingOrderCallback(android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback)
  e                                static getChildViewHolderInt(android.view.View)
  e                                public setLayoutFrozen(boolean)
  e                                public setItemViewCacheSize(int)
  e                                public findViewHolderForItemId(long)
  eval__                           public isAnimating()
  eval_a                           private postAnimationRunner()
  eval_a                           static access$3600(android.support.v7.widget.RecyclerView)
  eval_b                           dispatchLayout()
  eval_b                           private removeAnimatingView(android.view.View)
  eval_c                           private processAdapterUpdatesAndSetAnimationFlags()
  eval_d                           private hasUpdatedView()
  eval_d                           public scrollToPosition(int)
  eval_e                           eatRequestLayout()
  eval_e                           static access$1000(android.support.v7.widget.RecyclerView)
  eval_f                           public isComputingLayout()
  eval_f                           public findViewHolderForLayoutPosition(int)
  eval_g                           static access$2800()
  eval_h                           public clearOnScrollListeners()
  eval_h                           static access$4100(android.support.v7.widget.RecyclerView)
  eval_i                           static access$4400()
  eval_i                           static access$602(android.support.v7.widget.RecyclerView,boolean)
  eval_j                           private stopScrollersInternal()
  eval_k                           ensureRightGlow()
  eval_k                           offsetPositionRecordsForInsert(int,int)
  eval_l                           ensureLeftGlow()
  eval_m                           private onEnterLayoutOrScroll()
  eval_m                           static access$2900(android.support.v7.widget.RecyclerView)
  eval_m                           public getChildItemId(android.view.View)
  eval_m                           public findViewHolderForPosition(int)
  eval_n                           private resetTouch()
  eval_n                           private dispatchChildDetached(android.view.View)
  eval_o                           ensureTopGlow()
  eval_o                           static access$3100(android.support.v7.widget.RecyclerView)
  eval_o                           public setRecyclerListener(android.support.v7.widget.RecyclerView$RecyclerListener)
  eval_p                           invalidateGlows()
  eval_q                           saveOldPositions()
  eval_r                           public isLayoutFrozen()
  eval_r                           private dispatchOnItemTouch(android.view.MotionEvent)
  eval_ru                          private setDataSetChangedAfterLayout()
  eval_s                           private initChildrenHelper()
  eval_t                           clearOldPositions()
  eval_u                           public getCompatAccessibilityDelegate()
  eval_v                           private consumePendingUpdateOperations()
  eval_w                           public hasPendingAdapterUpdates()
  eval_x                           public invalidateItemDecorations()
  eval_x                           private considerReleasingGlowsOnScroll(int,int)
  eval_y                           private getScrollFactor()
  eval_y                           static access$5200(android.support.v7.widget.RecyclerView)
  eval_z                           private predictiveItemAnimationsEnabled()
  eval_z                           static access$3800(android.support.v7.widget.RecyclerView)
  f                                public getMaxFlingVelocity()
  f                                public addItemDecoration(android.support.v7.widget.RecyclerView$ItemDecoration)
  f                                private animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
  g                                public getMinFlingVelocity()
  g                                static access$3400(android.support.v7.widget.RecyclerView)
  g                                static access$1400(android.support.v7.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams)
  g                                public setScrollingTouchSlop(int)
  g                                viewRangeUpdate(int,int,java.lang.Object)
  h                                markItemDecorInsetsDirty()
  h                                static access$4200(android.support.v7.widget.RecyclerView)
  h                                public getChildLayoutPosition(android.view.View)
  h                                private jumpToPositionForSmoothScroller(int)
  h                                offsetPositionRecordsForRemove(int,int,boolean)
  h                                private findMinMaxChildLayoutPositions(int[])
  i                                public getItemAnimator()
  i                                static access$200(android.support.v7.widget.RecyclerView)
  i                                public removeOnItemTouchListener(android.support.v7.widget.RecyclerView$OnItemTouchListener)
  i                                static access$302(android.support.v7.widget.RecyclerView,boolean)
  i                                static access$6000(android.support.v7.widget.RecyclerView,int)
  i                                private setScrollState(int)
  i                                public fling(int,int)
  j                                initAdapterManager()
  j                                public addOnItemTouchListener(android.support.v7.widget.RecyclerView$OnItemTouchListener)
  j                                public setRecycledViewPool(android.support.v7.widget.RecyclerView$RecycledViewPool)
  j                                private onPointerUp(android.view.MotionEvent)
  j                                public onChildAttachedToWindow(android.view.View)
  j                                shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
  k                                markKnownViewsInvalid()
  k                                private getAdapterPositionFor(android.support.v7.widget.RecyclerView$ViewHolder)
  k                                public getChildViewHolder(android.view.View)
  k                                public setHasFixedSize(boolean)
  l                                public hasFixedSize()
  l                                public swapAdapter(android.support.v7.widget.RecyclerView$Adapter,boolean)
  m                                ensureBottomGlow()
  m                                static access$100(android.support.v7.widget.RecyclerView)
  m                                public removeItemDecoration(android.support.v7.widget.RecyclerView$ItemDecoration)
  m                                public addItemDecoration(android.support.v7.widget.RecyclerView$ItemDecoration,int)
  m                                private canReuseUpdatedViewHolder(android.support.v7.widget.RecyclerView$ViewHolder)
  m                                static access$6200(android.support.v7.widget.RecyclerView,android.view.View)
  m                                public offsetChildrenHorizontal(int)
  n                                public getAdapter()
  n                                static access$5100(android.support.v7.widget.RecyclerView)
  n                                private defaultOnMeasure(int,int)
  n                                assertInLayoutOrScroll(java.lang.String)
  o                                private releaseGlows()
  o                                static access$4000(android.support.v7.widget.RecyclerView)
  o                                public setItemAnimator(android.support.v7.widget.RecyclerView$ItemAnimator)
  o                                static access$5500(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder)
  o                                static access$4500(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
  o                                static access$700(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
  o                                static access$5400(android.support.v7.widget.RecyclerView,int,int)
  o                                public smoothScrollBy(int,int)
  p                                public getScrollState()
  p                                private getFullClassName(android.content.Context,java.lang.String)
  p                                static access$4600(android.support.v7.widget.RecyclerView)
  p                                private setAdapterInternal(android.support.v7.widget.RecyclerView$Adapter,boolean,boolean)
  p                                public removeOnChildAttachStateChangeListener(android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener)
  p                                static access$3700(android.support.v7.widget.RecyclerView,int)
  p                                private dispatchChildAttached(android.view.View)
  p                                offsetPositionRecordsForMove(int,int)
  q                                public addOnChildAttachStateChangeListener(android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener)
  r                                private onExitLayoutOrScroll()
  r                                static access$400(android.support.v7.widget.RecyclerView)
  r                                private addAnimatingView(android.support.v7.widget.RecyclerView$ViewHolder)
  s                                public setViewCacheExtension(android.support.v7.widget.RecyclerView$ViewCacheExtension)
  s                                public onChildDetachedFromWindow(android.view.View)
  s                                private pullGlows(float,float,float,float)
  t                                public clearOnChildAttachStateChangeListeners()
  t                                static access$800(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
  t                                public findChildViewUnder(float,float)
  t                                dispatchOnScrollStateChanged(int)
  t                                private didChildRangeChange(int,int)
  u                                public stopScroll()
  u                                getChangedHolderKey(android.support.v7.widget.RecyclerView$ViewHolder)
  u                                findViewHolderForPosition(int,boolean)
  v                                private dispatchContentChangedIfNecessary()
  v                                public getChildPosition(android.view.View)
  v                                absorbGlows(int,int)
  w                                public getLayoutManager()
  w                                static access$3000(android.support.v7.widget.RecyclerView)
  w                                public setAdapter(android.support.v7.widget.RecyclerView$Adapter)
  w                                public setLayoutManager(android.support.v7.widget.RecyclerView$LayoutManager)
  w                                private animateAppearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
  w                                getItemDecorInsetsForChild(android.view.View)
  w                                dispatchOnScrolled(int,int)
  x                                private cancelTouch()
  x                                private createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)
  x                                static access$1200(android.support.v7.widget.RecyclerView,android.view.View)
  x                                static access$4302(android.support.v7.widget.RecyclerView,boolean)
  x                                resumeRequestLayout(boolean)
  x                                public findViewHolderForAdapterPosition(int)
  y                                public getRecycledViewPool()
  y                                static access$3200(android.support.v7.widget.RecyclerView)
  y                                private recordAnimationInfoIfBouncedHiddenView(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
  y                                private animateDisappearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
  y                                static access$1500(android.support.v7.widget.RecyclerView,int)
  y                                private dispatchOnItemTouchIntercept(android.view.MotionEvent)
  y                                public getChildAdapterPosition(android.view.View)
  z                                isAccessibilityEnabled()
  z                                static access$1100(android.support.v7.widget.RecyclerView)
  z                                public removeOnScrollListener(android.support.v7.widget.RecyclerView$OnScrollListener)
  z                                static access$1300(android.support.v7.widget.RecyclerView,android.view.View)
  z                                public setAccessibilityDelegateCompat(android.support.v7.widget.RecyclerViewAccessibilityDelegate)
  addFocusables                    public addFocusables(java.util.ArrayList,int,int)
  checkLayoutParams                protected checkLayoutParams(android.view.ViewGroup$LayoutParams)
  computeHorizontalScrollExtent    public computeHorizontalScrollExtent()
  computeHorizontalScrollOffset    public computeHorizontalScrollOffset()
  computeHorizontalScrollRange     public computeHorizontalScrollRange()
  computeVerticalScrollExtent      public computeVerticalScrollExtent()
  computeVerticalScrollOffset      public computeVerticalScrollOffset()
  computeVerticalScrollRange       public computeVerticalScrollRange()
  dispatchNestedFling              public dispatchNestedFling(float,float,boolean)
  dispatchNestedPreFling           public dispatchNestedPreFling(float,float)
  dispatchNestedPreScroll          public dispatchNestedPreScroll(int,int,int[],int[])
  dispatchNestedScroll             public dispatchNestedScroll(int,int,int,int,int[])
  dispatchRestoreInstanceState     protected dispatchRestoreInstanceState(android.util.SparseArray)
  dispatchSaveInstanceState        protected dispatchSaveInstanceState(android.util.SparseArray)
  draw                             public draw(android.graphics.Canvas)
  drawChild                        public drawChild(android.graphics.Canvas,android.view.View,long)
  focusSearch                      public focusSearch(android.view.View,int)
  generateDefaultLayoutParams      protected generateDefaultLayoutParams()
  generateLayoutParams             public generateLayoutParams(android.util.AttributeSet)
  generateLayoutParams             protected generateLayoutParams(android.view.ViewGroup$LayoutParams)
  getBaseline                      public getBaseline()
  getChildDrawingOrder             protected getChildDrawingOrder(int,int)
  hasNestedScrollingParent         public hasNestedScrollingParent()
  isAttachedToWindow               public isAttachedToWindow()
  isNestedScrollingEnabled         public isNestedScrollingEnabled()
  onAttachedToWindow               protected onAttachedToWindow()
  onDetachedFromWindow             protected onDetachedFromWindow()
  onDraw                           public onDraw(android.graphics.Canvas)
  onGenericMotionEvent             public onGenericMotionEvent(android.view.MotionEvent)
  onInterceptTouchEvent            public onInterceptTouchEvent(android.view.MotionEvent)
  onLayout                         protected onLayout(boolean,int,int,int,int)
  onMeasure                        protected onMeasure(int,int)
  onRestoreInstanceState           protected onRestoreInstanceState(android.os.Parcelable)
  onSaveInstanceState              protected onSaveInstanceState()
  onSizeChanged                    protected onSizeChanged(int,int,int,int)
  onTouchEvent                     public onTouchEvent(android.view.MotionEvent)
  removeDetachedView               protected removeDetachedView(android.view.View,boolean)
  requestChildFocus                public requestChildFocus(android.view.View,android.view.View)
  requestChildRectangleOnScreen    public requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)
  requestDisallowInterceptTouchEvent   public requestDisallowInterceptTouchEvent(boolean)
  requestLayout                    public requestLayout()
  scrollBy                         public scrollBy(int,int)
  scrollTo                         public scrollTo(int,int)
  sendAccessibilityEventUnchecked  public sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)
  setClipToPadding                 public setClipToPadding(boolean)
  setNestedScrollingEnabled        public setNestedScrollingEnabled(boolean)
  startNestedScroll                public startNestedScroll(int)
  stopNestedScroll                 public stopNestedScroll()

android.support.v7.widget.RecyclerView$1 (com.rubenroy.minimaltodo.eval_ym3$1)
===============================================================================
  run  public run()

android.support.v7.widget.RecyclerView$2 (com.rubenroy.minimaltodo.eval_ym3$2)
===============================================================================
  run  public run()

android.support.v7.widget.RecyclerView$3 (com.rubenroy.minimaltodo.eval_ym3$3)
===============================================================================
  getInterpolation public getInterpolation(float)

android.support.v7.widget.RecyclerView$4 (com.rubenroy.minimaltodo.eval_ym3$4)
===============================================================================
  g    public processPersistent(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
  m    public processAppeared(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
  q    public processDisappeared(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
  w    public unused(android.support.v7.widget.RecyclerView$ViewHolder)

android.support.v7.widget.RecyclerView$5 (com.rubenroy.minimaltodo.eval_ym3$5)
===============================================================================
  d        public removeAllViews()
  d        public addView(android.view.View,int)
  d        public attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams)
  e        public removeViewAt(int)
  eval_a   public detachViewFromParent(int)
  eval_w   public indexOfChild(android.view.View)
  eval_y   public getChildViewHolder(android.view.View)
  i        public getChildAt(int)
  o        public onEnteredHiddenState(android.view.View)
  p        public getChildCount()
  s        public onLeftHiddenState(android.view.View)

android.support.v7.widget.RecyclerView$6 (com.rubenroy.minimaltodo.eval_ym3$6)
===============================================================================
  c    public offsetPositionsForRemovingLaidOutOrNewView(int,int)
  e    public offsetPositionsForRemovingInvisible(int,int)
  f    public onDispatchFirstPass(android.support.v7.widget.AdapterHelper$UpdateOp)
  k    dispatchUpdate(android.support.v7.widget.AdapterHelper$UpdateOp)
  o    public offsetPositionsForMove(int,int)
  p    public onDispatchSecondPass(android.support.v7.widget.AdapterHelper$UpdateOp)
  r    public markViewHoldersUpdated(int,int,java.lang.Object)
  y    public findViewHolder(int)
  z    public offsetPositionsForAdd(int,int)

android.support.v7.widget.RecyclerView$Adapter   (com.rubenroy.minimaltodo.eval_ym3$b)
===============================================================================
  a        public abstract onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)
  a        public final notifyItemMoved(int,int)
  b        public setHasStableIds(boolean)
  c        public final notifyItemRangeRemoved(int,int)
  e        public onViewAttachedToWindow(android.support.v7.widget.RecyclerView$ViewHolder)
  e        public abstract onCreateViewHolder(android.view.ViewGroup,int)
  e        public getItemViewType(int)
  eval_o   public onDetachedFromRecyclerView(android.support.v7.widget.RecyclerView)
  f        public getItemId(int)
  f        public final notifyItemRangeInserted(int,int)
  g        public onAttachedToRecyclerView(android.support.v7.widget.RecyclerView)
  g        public unregisterAdapterDataObserver(android.support.v7.widget.RecyclerView$AdapterDataObserver)
  g        public final notifyItemChanged(int)
  j        public onViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder)
  j        public final notifyItemRangeChanged(int,int)
  j        public final notifyItemRangeChanged(int,int,java.lang.Object)
  k        public final bindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)
  k        public onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int,java.util.List)
  l        public registerAdapterDataObserver(android.support.v7.widget.RecyclerView$AdapterDataObserver)
  m        public final createViewHolder(android.view.ViewGroup,int)
  p        public final notifyDataSetChanged()
  q        public final hasStableIds()
  q        public onFailedToRecycleView(android.support.v7.widget.RecyclerView$ViewHolder)
  r        public final hasObservers()
  t        public final notifyItemInserted(int)
  u        public onViewDetachedFromWindow(android.support.v7.widget.RecyclerView$ViewHolder)
  x        public abstract getItemCount()
  x        public final notifyItemRemoved(int)
  x        public final notifyItemChanged(int,java.lang.Object)

android.support.v7.widget.RecyclerView$AdapterDataObservable     (com.rubenroy.minimaltodo.eval_ym3$l)
===============================================================================
  b    public notifyItemRangeRemoved(int,int)
  c    public notifyChanged()
  g    public hasObservers()
  i    public notifyItemRangeInserted(int,int)
  k    public notifyItemRangeChanged(int,int,java.lang.Object)
  q    public notifyItemRangeChanged(int,int)
  w    public notifyItemMoved(int,int)

android.support.v7.widget.RecyclerView$AdapterDataObserver       (com.rubenroy.minimaltodo.eval_ym3$o)
===============================================================================
  f    public onItemRangeChanged(int,int)
  f    public onItemRangeMoved(int,int,int)
  l    public onItemRangeChanged(int,int,java.lang.Object)
  n    public onChanged()
  o    public onItemRangeRemoved(int,int)
  v    public onItemRangeInserted(int,int)

android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback (com.rubenroy.minimaltodo.eval_ym3$k)
===============================================================================
  u    public abstract onGetChildDrawingOrder(int,int)

android.support.v7.widget.RecyclerView$IOException       (com.rubenroy.minimaltodo.eval_jkg)
===============================================================================
  No methods

android.support.v7.widget.RecyclerView$ItemAnimator      (com.rubenroy.minimaltodo.eval_ym3$n)
===============================================================================
  b        public getChangeDuration()
  c        public onAnimationStarted(android.support.v7.widget.RecyclerView$ViewHolder)
  d        public final dispatchAnimationStarted(android.support.v7.widget.RecyclerView$ViewHolder)
  eval_c   public canReuseUpdatedViewHolder(android.support.v7.widget.RecyclerView$ViewHolder)
  eval_d   public getAddDuration()
  eval_e   public getMoveDuration()
  eval_o   public obtainHolderInfo()
  f        public abstract endAnimations()
  f        setListener(android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener)
  f        public recordPreLayoutInformation(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$ViewHolder,int,java.util.List)
  f        public final dispatchAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder)
  i        public abstract animateDisappearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
  l        public final isRunning(android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener)
  l        public setAddDuration(long)
  m        public setChangeDuration(long)
  n        public final dispatchAnimationsFinished()
  p        public abstract runPendingAnimations()
  p        public abstract endAnimation(android.support.v7.widget.RecyclerView$ViewHolder)
  p        public setRemoveDuration(long)
  r        public getRemoveDuration()
  s        static buildAdapterChangeFlagsForAnimations(android.support.v7.widget.RecyclerView$ViewHolder)
  t        public abstract isRunning()
  t        public setMoveDuration(long)
  u        public abstract animatePersistence(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
  x        public recordPostLayoutInformation(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$ViewHolder)
  x        public onAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder)
  y        public abstract animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
  z        public abstract animateAppearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)

android.support.v7.widget.RecyclerView$ItemAnimator$AdapterChanges       (com.rubenroy.minimaltodo.eval_ym3$n$x)
===============================================================================
  No methods

android.support.v7.widget.RecyclerView$ItemAnimator$ArrayOutOfBoundsException    (com.rubenroy.minimaltodo.eval_ta5)
===============================================================================
  No methods

android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener (com.rubenroy.minimaltodo.eval_ym3$n$s)
===============================================================================
  e    public abstract onAnimationsFinished()

android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener (com.rubenroy.minimaltodo.eval_ym3$n$w)
===============================================================================
  e    public abstract onAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder)

android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo       (com.rubenroy.minimaltodo.eval_ym3$n$h)
===============================================================================
  p    public setFrom(android.support.v7.widget.RecyclerView$ViewHolder)
  v    public setFrom(android.support.v7.widget.RecyclerView$ViewHolder,int)

android.support.v7.widget.RecyclerView$ItemAnimatorRestoreListener       (com.rubenroy.minimaltodo.eval_ym3$y)
===============================================================================
  e    public onAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder)

android.support.v7.widget.RecyclerView$ItemDecoration    (com.rubenroy.minimaltodo.eval_ym3$t)
===============================================================================
  eval_w   public onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView)
  h        public onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State)
  i        public getItemOffsets(android.graphics.Rect,android.view.View,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State)
  k        public getItemOffsets(android.graphics.Rect,int,android.support.v7.widget.RecyclerView)
  x        public onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State)
  z        public onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView)

android.support.v7.widget.RecyclerView$LayoutManager     (com.rubenroy.minimaltodo.eval_ym3$p)
===============================================================================
  a        public getWidth()
  a        public computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State)
  a        public stopIgnoringView(android.view.View)
  a        public setMeasuredDimension(int,int)
  a        public postOnAnimation(java.lang.Runnable)
  b        public getBaseline()
  b        public onAttachedToWindow(android.support.v7.widget.RecyclerView)
  b        public smoothScrollToPosition(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State,int)
  b        public getDecoratedRight(android.view.View)
  c        public getDecoratedMeasuredHeight(android.view.View)
  d        public checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams)
  d        public onInitializeAccessibilityNodeInfo(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  d        public computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State)
  d        public layoutDecorated(android.view.View,int,int,int,int)
  e        public generateLayoutParams(android.content.Context,android.util.AttributeSet)
  e        public onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter)
  e        public calculateItemDecorationsForChild(android.view.View,android.graphics.Rect)
  e        public attachView(android.view.View,int,android.support.v7.widget.RecyclerView$LayoutParams)
  eval__   public isSmoothScrolling()
  eval_a   public getRightDecorationWidth(android.view.View)
  eval_c   public getMinimumHeight()
  eval_e   public getLeftDecorationWidth(android.view.View)
  eval_f   public scrollToPosition(int)
  eval_g   public isAttachedToWindow()
  eval_i   public requestLayout()
  eval_j   public getDecoratedTop(android.view.View)
  eval_k   public hasFocus()
  eval_l   stopSmoothScroller()
  eval_m   public onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
  eval_n   public scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  eval_o   public getChildCount()
  eval_o   removeAndRecycleScrapInt(android.support.v7.widget.RecyclerView$Recycler)
  eval_p   public getItemCount()
  eval_q   public getPaddingStart()
  eval_r   public getPaddingLeft()
  eval_r   public getPosition(android.view.View)
  eval_r   public removeAndRecycleView(android.view.View,android.support.v7.widget.RecyclerView$Recycler)
  eval_s   public getMinimumWidth()
  eval_t   public canScrollHorizontally()
  eval_t   public computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State)
  eval_u   public getPaddingBottom()
  eval_v   public getPaddingEnd()
  eval_v   public ignoreView(android.view.View)
  eval_w   public isFocused()
  eval_x   public canScrollVertically()
  eval_z   public requestSimpleAnimationsInNextLayout()
  eval_z   public getDecoratedLeft(android.view.View)
  f        public getSelectionModeForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  f        public onItemsAdded(android.support.v7.widget.RecyclerView,int,int)
  f        onInitializeAccessibilityNodeInfoForItem(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  f        public findViewByPosition(int)
  g        public getPaddingTop()
  g        public onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  g        public performAccessibilityAction(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,android.os.Bundle)
  g        public measureChild(android.view.View,int,int)
  g        public static getChildMeasureSpec(int,int,int,boolean)
  h        public supportsPredictiveItemAnimations()
  h        public isLayoutHierarchical(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  h        public onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler)
  h        public onScrollStateChanged(int)
  h        performAccessibilityAction(int,android.os.Bundle)
  i        public onDetachedFromWindow(android.support.v7.widget.RecyclerView)
  i        public onRequestChildFocus(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State,android.view.View,android.view.View)
  i        public addView(android.view.View,int)
  i        public offsetChildrenVertical(int)
  j        public onItemsChanged(android.support.v7.widget.RecyclerView)
  j        public computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State)
  j        public onItemsUpdated(android.support.v7.widget.RecyclerView,int,int,java.lang.Object)
  j        public generateLayoutParams(android.view.ViewGroup$LayoutParams)
  j        private detachViewInternal(int,android.view.View)
  k        public attachView(android.view.View)
  k        public assertNotInLayoutOrScroll(java.lang.String)
  l        public startSmoothScroll(android.support.v7.widget.RecyclerView$SmoothScroller)
  l        public onRequestChildFocus(android.support.v7.widget.RecyclerView,android.view.View,android.view.View)
  m        static access$5800(android.support.v7.widget.RecyclerView$LayoutManager,android.support.v7.widget.RecyclerView$SmoothScroller)
  m        public onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  m        public performAccessibilityActionForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,int,android.os.Bundle)
  m        public getDecoratedBottom(android.view.View)
  m        private addViewInt(android.view.View,int,boolean)
  m        public detachAndScrapViewAt(int,android.support.v7.widget.RecyclerView$Recycler)
  n        public getFocusedChild()
  n        public removeAndRecycleAllViews(android.support.v7.widget.RecyclerView$Recycler)
  n        public endAnimation(android.view.View)
  n        public onInterceptFocusSearch(android.view.View,int)
  n        public detachViewAt(int)
  o        public getClipToPadding()
  o        public onItemsUpdated(android.support.v7.widget.RecyclerView,int,int)
  o        public getBottomDecorationHeight(android.view.View)
  p        setRecyclerView(android.support.v7.widget.RecyclerView)
  p        static access$2402(android.support.v7.widget.RecyclerView$LayoutManager,boolean)
  p        dispatchDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler)
  p        public addDisappearingView(android.view.View,int)
  p        performAccessibilityActionForItem(android.view.View,int,android.os.Bundle)
  q        public getLayoutDirection()
  q        private scrapOrRecycleView(android.support.v7.widget.RecyclerView$Recycler,int,android.view.View)
  q        public onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  q        public scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  r        public detachAndScrapAttachedViews(android.support.v7.widget.RecyclerView$Recycler)
  r        public onItemsMoved(android.support.v7.widget.RecyclerView,int,int,int)
  r        public addDisappearingView(android.view.View)
  r        public removeCallbacks(java.lang.Runnable)
  s        public getHeight()
  s        dispatchAttachedToWindow(android.support.v7.widget.RecyclerView)
  s        public onAddFocusables(android.support.v7.widget.RecyclerView,java.util.ArrayList,int,int)
  s        public getDecoratedMeasuredWidth(android.view.View)
  s        public attachView(android.view.View,int)
  t        public getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  t        public removeDetachedView(android.view.View)
  u        public abstract generateDefaultLayoutParams()
  v        public onSaveInstanceState()
  v        public getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  v        public onMeasure(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int)
  v        public computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State)
  v        public removeView(android.view.View)
  v        public measureChildWithMargins(android.view.View,int,int)
  v        public offsetChildrenHorizontal(int)
  w        public getPaddingRight()
  w        public onInitializeAccessibilityEvent(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent)
  w        private onSmoothScrollerStopped(android.support.v7.widget.RecyclerView$SmoothScroller)
  w        public getTopDecorationHeight(android.view.View)
  w        public detachAndScrapView(android.view.View,android.support.v7.widget.RecyclerView$Recycler)
  w        public removeAndRecycleViewAt(int,android.support.v7.widget.RecyclerView$Recycler)
  x        static access$2400(android.support.v7.widget.RecyclerView$LayoutManager)
  x        public requestChildRectangleOnScreen(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean)
  x        public onItemsRemoved(android.support.v7.widget.RecyclerView,int,int)
  x        public addView(android.view.View)
  x        public getChildAt(int)
  x        public moveView(int,int)
  y        public removeAllViews()
  y        public onRestoreInstanceState(android.os.Parcelable)
  y        onInitializeAccessibilityNodeInfo(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  y        public detachView(android.view.View)
  y        public removeViewAt(int)
  z        public static getProperties(android.content.Context,android.util.AttributeSet,int,int)
  z        public computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State)
  z        public getItemViewType(android.view.View)
  z        public assertInLayoutOrScroll(java.lang.String)

android.support.v7.widget.RecyclerView$LayoutManager$ParseException      (com.rubenroy.minimaltodo.eval_xwn)
===============================================================================
  No methods

android.support.v7.widget.RecyclerView$LayoutManager$Properties  (com.rubenroy.minimaltodo.eval_ym3$p$u)
===============================================================================
  No methods

android.support.v7.widget.RecyclerView$LayoutParams      (com.rubenroy.minimaltodo.eval_ym3$eval_q)
===============================================================================
  b        public getViewLayoutPosition()
  eval_f   public isItemChanged()
  eval_u   public getViewAdapterPosition()
  k        public getViewPosition()
  m        public isItemRemoved()
  q        public viewNeedsUpdate()
  x        public isViewInvalid()

android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener  (com.rubenroy.minimaltodo.eval_ym3$e)
===============================================================================
  b    public abstract onChildViewDetachedFromWindow(android.view.View)
  w    public abstract onChildViewAttachedToWindow(android.view.View)

android.support.v7.widget.RecyclerView$OnItemTouchListener       (com.rubenroy.minimaltodo.eval_ym3$eval_c)
===============================================================================
  d    public abstract onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent)
  g    public abstract onInterceptTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent)
  s    public abstract onRequestDisallowInterceptTouchEvent(boolean)

android.support.v7.widget.RecyclerView$OnScrollListener  (com.rubenroy.minimaltodo.eval_ym3$eval_x)
===============================================================================
  i    public onScrollStateChanged(android.support.v7.widget.RecyclerView,int)
  l    public onScrolled(android.support.v7.widget.RecyclerView,int,int)

android.support.v7.widget.RecyclerView$RecycledViewPool  (com.rubenroy.minimaltodo.eval_ym3$q)
===============================================================================
  a        size()
  d        public clear()
  eval_q   public getRecycledView(int)
  g        onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter,boolean)
  h        attach(android.support.v7.widget.RecyclerView$Adapter)
  o        public putRecycledView(android.support.v7.widget.RecyclerView$ViewHolder)
  p        private getScrapHeapForType(int)
  p        public setMaxRecycledViews(int,int)
  q        detach()

android.support.v7.widget.RecyclerView$Recycler  (com.rubenroy.minimaltodo.eval_ym3$a)
===============================================================================
  a        getViewForPosition(int,boolean)
  b        offsetPositionRecordsForMove(int,int)
  c        clearScrap()
  c        static access$2700(android.support.v7.widget.RecyclerView$Recycler)
  d        public getScrapList()
  d        unscrapView(android.support.v7.widget.RecyclerView$ViewHolder)
  eval_k   markKnownViewsInvalid()
  eval_o   scrapView(android.view.View)
  f        getScrapViewAt(int)
  g        setRecycledViewPool(android.support.v7.widget.RecyclerView$RecycledViewPool)
  g        recycleCachedViewAt(int)
  i        setAdapterPositionsAsUnknown()
  i        dispatchViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder)
  j        setViewCacheExtension(android.support.v7.widget.RecyclerView$ViewCacheExtension)
  j        public convertPreLayoutPositionToPostLayout(int)
  k        public clear()
  l        private invalidateDisplayListInt(android.support.v7.widget.RecyclerView$ViewHolder)
  l        viewRangeUpdate(int,int)
  l        getScrapViewForPosition(int,int,boolean)
  m        quickRecycleScrapView(android.view.View)
  n        private attachAccessibilityDelegate(android.view.View)
  n        offsetPositionRecordsForRemove(int,int,boolean)
  p        clearOldPositions()
  p        onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter,boolean)
  p        addViewHolderToRecycledViewPool(android.support.v7.widget.RecyclerView$ViewHolder)
  q        public recycleView(android.view.View)
  q        public bindViewToPosition(android.view.View,int)
  r        private invalidateDisplayListInt(android.view.ViewGroup,boolean)
  t        markItemDecorInsetsDirty()
  u        recycleViewInternal(android.view.View)
  u        public getViewForPosition(int)
  w        getScrapCount()
  w        validateViewHolderForOffsetPosition(android.support.v7.widget.RecyclerView$ViewHolder)
  w        getScrapViewForId(long,int,boolean)
  y        recycleAndClearCachedViews()
  y        recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder)
  y        public setViewCacheSize(int)
  y        offsetPositionRecordsForInsert(int,int)
  z        getRecycledViewPool()
  z        getChangedScrapViewForPosition(int)

android.support.v7.widget.RecyclerView$RecyclerListener  (com.rubenroy.minimaltodo.eval_ym3$w)
===============================================================================
  u    public abstract onViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder)

android.support.v7.widget.RecyclerView$RecyclerViewDataObserver  (com.rubenroy.minimaltodo.eval_ym3$eval_n)
===============================================================================
  f    public onItemRangeMoved(int,int,int)
  g    triggerUpdateProcessor()
  l    public onItemRangeChanged(int,int,java.lang.Object)
  n    public onChanged()
  o    public onItemRangeRemoved(int,int)
  v    public onItemRangeInserted(int,int)

android.support.v7.widget.RecyclerView$SavedState        (com.rubenroy.minimaltodo.eval_ym3$j)
===============================================================================
  r                static access$2000(android.support.v7.widget.RecyclerView$SavedState,android.support.v7.widget.RecyclerView$SavedState)
  v                private copyFrom(android.support.v7.widget.RecyclerView$SavedState)
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v7.widget.RecyclerView$SavedState$1      (com.rubenroy.minimaltodo.eval_ym3$j$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v7.widget.RecyclerView$SavedState$Exception      (com.rubenroy.minimaltodo.eval_i_j)
===============================================================================
  No methods

android.support.v7.widget.RecyclerView$SimpleOnItemTouchListener (com.rubenroy.minimaltodo.eval_ym3$eval_d)
===============================================================================
  d    public onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent)
  g    public onInterceptTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent)
  s    public onRequestDisallowInterceptTouchEvent(boolean)

android.support.v7.widget.RecyclerView$SmoothScroller    (com.rubenroy.minimaltodo.eval_ym3$d)
===============================================================================
  a        public getLayoutManager()
  c        public isRunning()
  eval_b   public findViewByPosition(int)
  eval_d   public getTargetPosition()
  eval_k   public instantScrollToPosition(int)
  eval_l   protected final stop()
  g        protected normalize(android.graphics.PointF)
  i        protected abstract onStart()
  i        private onAnimation(int,int)
  j        protected abstract onStop()
  j        protected onChildAttachedToWindow(android.view.View)
  l        static access$3300(android.support.v7.widget.RecyclerView$SmoothScroller,int,int)
  m        start(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$LayoutManager)
  o        protected abstract onTargetFound(android.view.View,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$SmoothScroller$Action)
  p        public getChildCount()
  s        public getChildPosition(android.view.View)
  v        public setTargetPosition(int)
  x        public isPendingInitialRun()
  x        protected abstract onSeekTargetStep(int,int,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$SmoothScroller$Action)

android.support.v7.widget.RecyclerView$SmoothScroller$Action     (com.rubenroy.minimaltodo.eval_ym3$d$u)
===============================================================================
  a    public setDy(int)
  b    public getInterpolator()
  d    public update(int,int,int,android.view.animation.Interpolator)
  g    public getDy()
  i    private runIfNecessary(android.support.v7.widget.RecyclerView)
  i    static access$5900(android.support.v7.widget.RecyclerView$SmoothScroller$Action,android.support.v7.widget.RecyclerView)
  i    public setDuration(int)
  l    public getDx()
  p    public setInterpolator(android.view.animation.Interpolator)
  r    public getDuration()
  s    private validate()
  u    public setDx(int)
  w    public jumpTo(int)
  z    hasJumpTarget()

android.support.v7.widget.RecyclerView$SmoothScroller$IOException        (com.rubenroy.minimaltodo.eval_f07)
===============================================================================
  No methods

android.support.v7.widget.RecyclerView$State     (com.rubenroy.minimaltodo.eval_ym3$c)
===============================================================================
  c        static access$2602(android.support.v7.widget.RecyclerView$State,int)
  e        static access$2500(android.support.v7.widget.RecyclerView$State)
  e        public get(int)
  eval_w   public getItemCount()
  f        public didStructureChange()
  g        static access$2102(android.support.v7.widget.RecyclerView$State,boolean)
  g        public remove(int)
  h        static access$1802(android.support.v7.widget.RecyclerView$State,int)
  h        public put(int,java.lang.Object)
  i        public willRunSimpleAnimations()
  j        static access$2200(android.support.v7.widget.RecyclerView$State)
  j        static access$1812(android.support.v7.widget.RecyclerView$State,int)
  k        static access$2100(android.support.v7.widget.RecyclerView$State)
  n        public willRunPredictiveAnimations()
  p        public isPreLayout()
  r        public getTargetScrollPosition()
  r        static access$2302(android.support.v7.widget.RecyclerView$State,boolean)
  s        static access$1902(android.support.v7.widget.RecyclerView$State,boolean)
  u        public hasTargetScrollPosition()
  u        static access$5602(android.support.v7.widget.RecyclerView$State,int)
  w        static access$2300(android.support.v7.widget.RecyclerView$State)
  y        static access$1900(android.support.v7.widget.RecyclerView$State)
  y        static access$2502(android.support.v7.widget.RecyclerView$State,boolean)
  z        reset()
  z        static access$2202(android.support.v7.widget.RecyclerView$State,boolean)
  toString public toString()

android.support.v7.widget.RecyclerView$ViewCacheExtension        (com.rubenroy.minimaltodo.eval_ym3$eval_m)
===============================================================================
  u    public abstract getViewForPositionAndType(android.support.v7.widget.RecyclerView$Recycler,int,int)

android.support.v7.widget.RecyclerView$ViewFlinger       (com.rubenroy.minimaltodo.eval_ym3$x)
===============================================================================
  a        public fling(int,int)
  b        public stop()
  c        postOnAnimation()
  d        public smoothScrollBy(int,int,int,int)
  eval_j   private enableRunOnAnimationRequests()
  v        private disableRunOnAnimationRequests()
  v        public smoothScrollBy(int,int,int)
  x        public smoothScrollBy(int,int,int,android.view.animation.Interpolator)
  y        private distanceInfluenceForSnapDuration(float)
  y        public smoothScrollBy(int,int)
  z        private computeScrollDuration(int,int,int,int)
  run      public run()

android.support.v7.widget.RecyclerView$ViewHolder        (com.rubenroy.minimaltodo.eval_ym3$eval_p)
===============================================================================
  a        public final getItemId()
  b        static access$4700(android.support.v7.widget.RecyclerView$ViewHolder)
  c        public final getOldPosition()
  c        static access$1600(android.support.v7.widget.RecyclerView$ViewHolder)
  d        public final getPosition()
  d        hasAnyOfTheFlags(int)
  e        public final getAdapterPosition()
  eval_d   isBound()
  eval_e   private shouldBeKeptAsChild()
  eval_g   wasReturnedFromScrap()
  eval_h   private doesTransientStatePreventRecycling()
  eval_i   isUpdated()
  eval_i   static access$6100(android.support.v7.widget.RecyclerView$ViewHolder)
  eval_j   private onLeftHiddenState()
  eval_l   isRemoved()
  eval_m   public final getItemViewType()
  eval_p   setFlags(int,int)
  eval_q   private createPayloadsIfNeeded()
  eval_s   getUnmodifiedPayloads()
  eval_u   public final isRecyclable()
  eval_x   isScrap()
  eval_y   isInvalid()
  eval_z   unScrap()
  f        static access$4902(android.support.v7.widget.RecyclerView$ViewHolder,boolean)
  h        isAdapterPositionUnknown()
  h        static access$4900(android.support.v7.widget.RecyclerView$ViewHolder)
  i        shouldIgnore()
  i        setScrapContainer(android.support.v7.widget.RecyclerView$Recycler,boolean)
  k        stopIgnoring()
  l        private onEnteredHiddenState()
  m        public final getLayoutPosition()
  m        flagRemovedAndOffsetPosition(int,int,boolean)
  n        clearReturnedFromScrapFlag()
  o        needsUpdate()
  o        offsetPosition(int,boolean)
  q        saveOldPosition()
  r        isTmpDetached()
  r        static access$1700(android.support.v7.widget.RecyclerView$ViewHolder)
  t        clearTmpDetachFlag()
  u        clearOldPosition()
  u        public final setIsRecyclable(boolean)
  v        resetInternal()
  v        static access$6300(android.support.v7.widget.RecyclerView$ViewHolder)
  w        clearPayload()
  y        addFlags(int)
  y        addChangePayload(java.lang.Object)
  z        static access$4802(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$Recycler)
  toString public toString()

android.support.v7.widget.RecyclerViewAccessibilityDelegate      (com.rubenroy.minimaltodo.eval_udf)
===============================================================================
  d    public onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  i    static access$000(android.support.v7.widget.RecyclerViewAccessibilityDelegate)
  p    private shouldIgnore()
  w    getItemDelegate()
  x    public performAccessibilityAction(android.view.View,int,android.os.Bundle)
  z    public onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)

android.support.v7.widget.RecyclerViewAccessibilityDelegate$1    (com.rubenroy.minimaltodo.eval_udf$1)
===============================================================================
  d    public onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  x    public performAccessibilityAction(android.view.View,int,android.os.Bundle)

android.support.v7.widget.RecyclerViewAccessibilityDelegate$Exception    (com.rubenroy.minimaltodo.eval_xyi)
===============================================================================
  No methods

android.support.v7.widget.ScrollbarHelper        (com.rubenroy.minimaltodo.eval_l9x)
===============================================================================
  c        static computeScrollRange(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean)
  eval_a   static computeScrollOffset(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean,boolean)
  u        static computeScrollExtent(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean)

android.support.v7.widget.ScrollbarHelper$ArrayOutOfBoundsException      (com.rubenroy.minimaltodo.eval_y9p)
===============================================================================
  No methods

android.support.v7.widget.SearchView     (com.rubenroy.minimaltodo.eval_fte)
===============================================================================
  a                    public getImeOptions()
  a                    static access$1000(android.support.v7.widget.SearchView)
  a                    static access$1500(android.support.v7.widget.SearchView,android.view.View,int,android.view.KeyEvent)
  b                    private launchIntent(android.content.Intent)
  b                    public setSuggestionsAdapter(android.support.v4.widget.CursorAdapter)
  b                    static access$100(android.support.v7.widget.SearchView)
  b                    public setQueryHint(java.lang.CharSequence)
  d                    static access$1100(android.support.v7.widget.SearchView)
  d                    private launchQuerySearch(int,java.lang.String,java.lang.String)
  e                    static access$200(android.support.v7.widget.SearchView)
  e                    private onSuggestionsKey(android.view.View,int,android.view.KeyEvent)
  e                    private updateSubmitButton(boolean)
  eval_a               public getQueryHint()
  eval_b               public getQuery()
  eval_c               private addOnLayoutChangeListenerToDropDownAnchorSDK11()
  eval_d               private addOnLayoutChangeListenerToDropDownAnchorBase()
  eval_e               public setInputType(int)
  eval_f               private onSubmitQuery()
  eval_g               private onTextChanged(java.lang.CharSequence)
  eval_h               public isQueryRefinementEnabled()
  eval_j               onTextFocusChanged()
  eval_j               private updateViewsVisibility(boolean)
  eval_k               private getPreferredWidth()
  eval_m               private postUpdateFocusedState()
  eval_n               private updateSubmitArea()
  eval_p               private updateSearchAutoComplete()
  eval_p               static access$1300(android.support.v7.widget.SearchView)
  eval_q               private onSearchClicked()
  eval_q               static access$1200(android.support.v7.widget.SearchView)
  eval_r               private onCloseClicked()
  eval_t               private dismissSuggestions()
  eval_t               private rewriteQueryFromSuggestion(int)
  eval_u               public getInputType()
  eval_v               private forceSuggestionQuery()
  eval_w               public isIconified()
  eval_x               private isSubmitAreaEnabled()
  eval_y               private hasVoiceSearch()
  f                    public getMaxWidth()
  f                    static isLandscapeMode(android.content.Context)
  g                    private onVoiceClicked()
  g                    public setOnCloseListener(android.support.v7.widget.SearchView$OnCloseListener)
  g                    public setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
  h                    private updateCloseButton()
  h                    static access$800(android.support.v7.widget.SearchView)
  h                    static access$2100(android.support.v7.widget.SearchView,boolean)
  h                    private setImeVisibility(boolean)
  h                    public setImeOptions(int)
  i                    private createIntentFromSuggestion(android.database.Cursor,int,java.lang.String)
  j                    public setOnSuggestionListener(android.support.v7.widget.SearchView$OnSuggestionListener)
  k                    static access$900(android.support.v7.widget.SearchView)
  k                    static access$1800(android.support.v7.widget.SearchView,int,int,java.lang.String)
  k                    private launchSuggestion(int,int,java.lang.String)
  l                    public onActionViewExpanded()
  l                    public setQuery(java.lang.CharSequence,boolean)
  m                    public getSuggestionsAdapter()
  m                    public setOnQueryTextListener(android.support.v7.widget.SearchView$OnQueryTextListener)
  m                    private onItemClicked(int,int,java.lang.String)
  n                    private createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo)
  n                    static access$000(android.support.v7.widget.SearchView)
  p                    getSuggestionRowLayout()
  p                    static access$1900(android.support.v7.widget.SearchView,int)
  q                    public setSearchableInfo(android.app.SearchableInfo)
  q                    static access$500(android.support.v7.widget.SearchView)
  q                    private createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)
  s                    public isSubmitButtonEnabled()
  s                    static access$300(android.support.v7.widget.SearchView)
  s                    public setIconifiedByDefault(boolean)
  t                    getSuggestionCommitIconResId()
  t                    private updateVoiceButton(boolean)
  t                    private onItemSelected(int)
  t                    private getDecoratedHint(java.lang.CharSequence)
  u                    private updateFocusedState()
  u                    public setAppSearchData(android.os.Bundle)
  u                    static access$1700(android.support.v7.widget.SearchView,int,java.lang.String,java.lang.String)
  u                    public setQueryRefinementEnabled(boolean)
  u                    onQueryRefine(java.lang.CharSequence)
  v                    public isIconfiedByDefault()
  v                    static access$600(android.support.v7.widget.SearchView)
  w                    private adjustDropDownSizeAndPosition()
  x                    public onActionViewCollapsed()
  x                    static access$1400(android.support.v7.widget.SearchView)
  x                    public setIconified(boolean)
  y                    private createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)
  y                    static access$700(android.support.v7.widget.SearchView)
  y                    public setOnSearchClickListener(android.view.View$OnClickListener)
  y                    public setMaxWidth(int)
  y                    private setQuery(java.lang.CharSequence)
  z                    private updateQueryHint()
  z                    static access$400(android.support.v7.widget.SearchView)
  z                    static access$2000(android.support.v7.widget.SearchView,java.lang.CharSequence)
  z                    public setSubmitButtonEnabled(boolean)
  clearFocus           public clearFocus()
  onDetachedFromWindow protected onDetachedFromWindow()
  onMeasure            protected onMeasure(int,int)
  onWindowFocusChanged public onWindowFocusChanged(boolean)
  requestFocus         public requestFocus(int,android.graphics.Rect)

android.support.v7.widget.SearchView$1   (com.rubenroy.minimaltodo.eval_fte$1)
===============================================================================
  run  public run()

android.support.v7.widget.SearchView$10  (com.rubenroy.minimaltodo.eval_fte$10)
===============================================================================
  onItemClick  public onItemClick(android.widget.AdapterView,android.view.View,int,long)

android.support.v7.widget.SearchView$11  (com.rubenroy.minimaltodo.eval_fte$11)
===============================================================================
  onItemSelected       public onItemSelected(android.widget.AdapterView,android.view.View,int,long)
  onNothingSelected    public onNothingSelected(android.widget.AdapterView)

android.support.v7.widget.SearchView$12  (com.rubenroy.minimaltodo.eval_fte$12)
===============================================================================
  afterTextChanged     public afterTextChanged(android.text.Editable)
  beforeTextChanged    public beforeTextChanged(java.lang.CharSequence,int,int,int)
  onTextChanged        public onTextChanged(java.lang.CharSequence,int,int,int)

android.support.v7.widget.SearchView$2   (com.rubenroy.minimaltodo.eval_fte$2)
===============================================================================
  run  public run()

android.support.v7.widget.SearchView$3   (com.rubenroy.minimaltodo.eval_fte$3)
===============================================================================
  run  public run()

android.support.v7.widget.SearchView$4   (com.rubenroy.minimaltodo.eval_fte$4)
===============================================================================
  onFocusChange    public onFocusChange(android.view.View,boolean)

android.support.v7.widget.SearchView$5   (com.rubenroy.minimaltodo.eval_fte$5)
===============================================================================
  onLayoutChange   public onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)

android.support.v7.widget.SearchView$6   (com.rubenroy.minimaltodo.eval_fte$6)
===============================================================================
  onGlobalLayout   public onGlobalLayout()

android.support.v7.widget.SearchView$7   (com.rubenroy.minimaltodo.eval_fte$7)
===============================================================================
  onClick  public onClick(android.view.View)

android.support.v7.widget.SearchView$8   (com.rubenroy.minimaltodo.eval_fte$8)
===============================================================================
  onKey    public onKey(android.view.View,int,android.view.KeyEvent)

android.support.v7.widget.SearchView$9   (com.rubenroy.minimaltodo.eval_fte$9)
===============================================================================
  onEditorAction   public onEditorAction(android.widget.TextView,int,android.view.KeyEvent)

android.support.v7.widget.SearchView$ArrayOutOfBoundsException   (com.rubenroy.minimaltodo.eval_ife)
===============================================================================
  No methods

android.support.v7.widget.SearchView$AutoCompleteTextViewReflector       (com.rubenroy.minimaltodo.eval_fte$s)
===============================================================================
  d    doBeforeTextChanged(android.widget.AutoCompleteTextView)
  l    ensureImeVisible(android.widget.AutoCompleteTextView,boolean)
  r    doAfterTextChanged(android.widget.AutoCompleteTextView)
  t    showSoftInputUnchecked(android.view.inputmethod.InputMethodManager,android.view.View,int)

android.support.v7.widget.SearchView$OnCloseListener     (com.rubenroy.minimaltodo.eval_fte$m)
===============================================================================
  j    public abstract onClose()

android.support.v7.widget.SearchView$OnQueryTextListener (com.rubenroy.minimaltodo.eval_fte$c)
===============================================================================
  k    public abstract onQueryTextChange(java.lang.String)
  t    public abstract onQueryTextSubmit(java.lang.String)

android.support.v7.widget.SearchView$OnSuggestionListener        (com.rubenroy.minimaltodo.eval_fte$eval_k)
===============================================================================
  d    public abstract onSuggestionClick(int)
  y    public abstract onSuggestionSelect(int)

android.support.v7.widget.SearchView$SearchAutoComplete  (com.rubenroy.minimaltodo.eval_fte$z)
===============================================================================
  j                    private isEmpty()
  l                    static access$1600(android.support.v7.widget.SearchView$SearchAutoComplete)
  s                    setSearchView(android.support.v7.widget.SearchView)
  enoughToFilter       public enoughToFilter()
  onFocusChanged       protected onFocusChanged(boolean,int,android.graphics.Rect)
  onKeyPreIme          public onKeyPreIme(int,android.view.KeyEvent)
  onWindowFocusChanged public onWindowFocusChanged(boolean)
  performCompletion    public performCompletion()
  replaceText          protected replaceText(java.lang.CharSequence)
  setThreshold         public setThreshold(int)

android.support.v7.widget.ShareActionProvider    (com.rubenroy.minimaltodo.eval_i1o)
===============================================================================
  b    public setOnShareTargetSelectedListener(android.support.v7.widget.ShareActionProvider$OnShareTargetSelectedListener)
  c    static access$100(android.support.v7.widget.ShareActionProvider)
  c    public onPrepareSubMenu(android.view.SubMenu)
  e    static access$500(android.support.v7.widget.ShareActionProvider)
  h    public hasSubMenu()
  j    public setShareIntent(android.content.Intent)
  j    static access$200(android.support.v7.widget.ShareActionProvider)
  p    public onCreateActionView()
  p    public setShareHistoryFileName(java.lang.String)
  t    private setActivityChooserPolicyIfNeeded()
  t    private updateIntent(android.content.Intent)
  x    static access$300(android.support.v7.widget.ShareActionProvider,android.content.Intent)

android.support.v7.widget.ShareActionProvider$1  (com.rubenroy.minimaltodo.eval_i1o$1)
===============================================================================
  No methods

android.support.v7.widget.ShareActionProvider$NullPointerException       (com.rubenroy.minimaltodo.eval_vru)
===============================================================================
  No methods

android.support.v7.widget.ShareActionProvider$OnShareTargetSelectedListener      (com.rubenroy.minimaltodo.eval_i1o$t)
===============================================================================
  o    public abstract onShareTargetSelected(android.support.v7.widget.ShareActionProvider,android.content.Intent)

android.support.v7.widget.ShareActionProvider$ShareActivityChooserModelPolicy    (com.rubenroy.minimaltodo.eval_i1o$s)
===============================================================================
  p    public onChooseActivity(android.support.v7.internal.widget.ActivityChooserModel,android.content.Intent)

android.support.v7.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener       (com.rubenroy.minimaltodo.eval_i1o$k)
===============================================================================
  onMenuItemClick  public onMenuItemClick(android.view.MenuItem)

android.support.v7.widget.SimpleItemAnimator     (com.rubenroy.minimaltodo.eval_pwb)
===============================================================================
  a        public abstract animateRemove(android.support.v7.widget.RecyclerView$ViewHolder)
  a        public abstract animateMove(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int)
  c        public final dispatchChangeStarting(android.support.v7.widget.RecyclerView$ViewHolder,boolean)
  eval_c   public canReuseUpdatedViewHolder(android.support.v7.widget.RecyclerView$ViewHolder)
  eval_k   public onRemoveStarting(android.support.v7.widget.RecyclerView$ViewHolder)
  eval_m   public final dispatchMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder)
  eval_o   public onRemoveFinished(android.support.v7.widget.RecyclerView$ViewHolder)
  eval_q   public onAddFinished(android.support.v7.widget.RecyclerView$ViewHolder)
  eval_t   public final dispatchAddStarting(android.support.v7.widget.RecyclerView$ViewHolder)
  eval_w   public onMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder)
  eval_z   public final dispatchRemoveStarting(android.support.v7.widget.RecyclerView$ViewHolder)
  g        public final dispatchRemoveFinished(android.support.v7.widget.RecyclerView$ViewHolder)
  h        public onMoveStarting(android.support.v7.widget.RecyclerView$ViewHolder)
  i        public abstract animateAdd(android.support.v7.widget.RecyclerView$ViewHolder)
  i        public animateDisappearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
  i        public final dispatchChangeFinished(android.support.v7.widget.RecyclerView$ViewHolder,boolean)
  l        public getSupportsChangeAnimations()
  l        public abstract animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int)
  o        public final dispatchAddFinished(android.support.v7.widget.RecyclerView$ViewHolder)
  o        public setSupportsChangeAnimations(boolean)
  q        public onAddStarting(android.support.v7.widget.RecyclerView$ViewHolder)
  q        public onChangeFinished(android.support.v7.widget.RecyclerView$ViewHolder,boolean)
  t        public final dispatchMoveStarting(android.support.v7.widget.RecyclerView$ViewHolder)
  u        public animatePersistence(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
  v        public onChangeStarting(android.support.v7.widget.RecyclerView$ViewHolder,boolean)
  y        public animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
  z        public animateAppearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)

android.support.v7.widget.SimpleItemAnimator$Exception   (com.rubenroy.minimaltodo.eval_sgz)
===============================================================================
  No methods

android.support.v7.widget.StaggeredGridLayoutManager     (com.rubenroy.minimaltodo.eval_yf8)
===============================================================================
  a        private fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State)
  a        public computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State)
  a        private setLayoutStateDirection(int)
  b        public smoothScrollToPosition(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State,int)
  b        static access$100(android.support.v7.widget.StaggeredGridLayoutManager)
  b        private handleUpdate(int,int,int)
  c        public setReverseLayout(boolean)
  c        private getMinStart(int)
  d        private getFirstChildPosition()
  d        public checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams)
  d        private fixEndGap(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean)
  d        public computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State)
  d        static access$500(android.support.v7.widget.StaggeredGridLayoutManager)
  d        private applyPendingSavedState(android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo)
  d        public setGapStrategy(int)
  d        private getSpecForDimension(int,int)
  e        public generateLayoutParams(android.content.Context,android.util.AttributeSet)
  e        public findLastVisibleItemPositions(int[])
  eval__   public setOrientation(int)
  eval_a   findFirstVisibleItemPositionInt()
  eval_b   updateMeasureSpecs()
  eval_c   private computeScrollRange(android.support.v7.widget.RecyclerView$State)
  eval_d   public getOrientation()
  eval_e   public getSpanCount()
  eval_f   public invalidateSpanAssignments()
  eval_f   public scrollToPosition(int)
  eval_g   private appendViewToAllSpans(android.view.View)
  eval_h   private updateAllRemainingSpans(int,int)
  eval_j   areAllEndsEqual()
  eval_j   private createFullSpanItemFromStart(int)
  eval_l   private computeScrollOffset(android.support.v7.widget.RecyclerView$State)
  eval_m   private ensureOrientationHelper()
  eval_m   public onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
  eval_m   private findLastReferenceChildPosition(int)
  eval_n   hasGapsToFix()
  eval_n   public scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  eval_p   private calculateScrollDirectionForPosition(int)
  eval_q   private preferLastSpan(int)
  eval_t   public canScrollHorizontally()
  eval_t   public computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State)
  eval_t   private getMinEnd(int)
  eval_u   private prependViewToAllSpans(android.view.View)
  eval_v   private createFullSpanItemFromEnd(int)
  eval_x   public canScrollVertically()
  eval_x   private measureChildWithDecorationsAndMargin(android.view.View,int,int)
  eval_x   private getMaxStart(int)
  eval_y   isLayoutRTL()
  f        public getReverseLayout()
  f        private getNextSpan(android.support.v7.widget.LayoutState)
  f        public onItemsAdded(android.support.v7.widget.RecyclerView,int,int)
  f        private layoutDecoratedWithMargins(android.view.View,int,int,int,int)
  f        public findFirstCompletelyVisibleItemPositions(int[])
  g        public onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  g        private updateAnchorFromChildren(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo)
  h        public supportsPredictiveItemAnimations()
  h        public onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler)
  h        findFirstVisibleItemClosestToStart(boolean,boolean)
  h        public onScrollStateChanged(int)
  i        private recycleFromStart(android.support.v7.widget.RecyclerView$Recycler,int)
  i        static access$600(android.support.v7.widget.StaggeredGridLayoutManager)
  i        public offsetChildrenVertical(int)
  i        public findLastCompletelyVisibleItemPositions(int[])
  j        public onItemsChanged(android.support.v7.widget.RecyclerView)
  j        public computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State)
  j        public onItemsUpdated(android.support.v7.widget.RecyclerView,int,int,java.lang.Object)
  j        private updateRemainingSpans(android.support.v7.widget.StaggeredGridLayoutManager$Span,int,int)
  j        public generateLayoutParams(android.view.ViewGroup$LayoutParams)
  j        findFirstVisibleItemClosestToEnd(boolean,boolean)
  j        private getMaxEnd(int)
  k        private fixStartGap(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean)
  k        public assertNotInLayoutOrScroll(java.lang.String)
  l        private checkForGaps()
  l        private updateLayoutState(int,android.support.v7.widget.RecyclerView$State)
  m        public onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  m        private recycleFromEnd(android.support.v7.widget.RecyclerView$Recycler,int)
  n        updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo)
  n        public scrollToPositionWithOffset(int,int)
  o        static access$400(android.support.v7.widget.StaggeredGridLayoutManager,int)
  o        private measureChildWithDecorationsAndMargin(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams)
  p        private resolveShouldLayoutReverse()
  q        public scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  r        public getGapStrategy()
  r        private computeScrollExtent(android.support.v7.widget.RecyclerView$State)
  r        public onItemsMoved(android.support.v7.widget.RecyclerView,int,int,int)
  r        private attachViewToSpans(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams,android.support.v7.widget.LayoutState)
  s        private checkSpanForGap(android.support.v7.widget.StaggeredGridLayoutManager$Span)
  t        public getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  u        public generateDefaultLayoutParams()
  u        public setSpanCount(int)
  v        public onSaveInstanceState()
  v        public getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  v        public computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State)
  v        public offsetChildrenHorizontal(int)
  v        private updateSpecWithExtra(int,int,int)
  v        public findFirstVisibleItemPositions(int[])
  w        updateAnchorFromPendingData(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo)
  w        scrollBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)
  x        areAllStartsEqual()
  x        public onItemsRemoved(android.support.v7.widget.RecyclerView,int,int)
  y        public onRestoreInstanceState(android.os.Parcelable)
  y        private recycle(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState)
  z        private getLastChildPosition()
  z        public computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State)
  z        private findFirstReferenceChildPosition(int)

android.support.v7.widget.StaggeredGridLayoutManager$1   (com.rubenroy.minimaltodo.eval_yf8$1)
===============================================================================
  run  public run()

android.support.v7.widget.StaggeredGridLayoutManager$2   (com.rubenroy.minimaltodo.eval_yf8$2)
===============================================================================
  z    public computeScrollVectorForPosition(int)

android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo  (com.rubenroy.minimaltodo.eval_yf8$g)
===============================================================================
  a    reset()
  i    assignCoordinateFromPadding(int)
  p    assignCoordinateFromPadding()

android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams        (com.rubenroy.minimaltodo.eval_yf8$t)
===============================================================================
  d        public setFullSpan(boolean)
  eval_a   public isFullSpan()
  v        public final getSpanIndex()

android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup      (com.rubenroy.minimaltodo.eval_yf8$eval_o)
===============================================================================
  a        offsetForAddition(int,int)
  c        getSpan(int)
  d        setSpan(int,android.support.v7.widget.StaggeredGridLayoutManager$Span)
  eval_j   ensureSize(int)
  eval_k   offsetForRemoval(int,int)
  eval_s   public getFullSpanItem(int)
  eval_w   public addFullSpanItem(android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem)
  h        forceInvalidateAfter(int)
  i        private offsetFullSpansForRemoval(int,int)
  p        private offsetFullSpansForAddition(int,int)
  t        private invalidateFullSpansAfter(int)
  t        public getFirstFullSpanItemInRange(int,int,int,boolean)
  y        sizeForPosition(int)
  z        clear()
  z        invalidateAfter(int)

android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem (com.rubenroy.minimaltodo.eval_yf8$eval_o$x)
===============================================================================
  t                getGapForSpan(int)
  z                public invalidateSpanGaps()
  describeContents public describeContents()
  toString         public toString()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1       (com.rubenroy.minimaltodo.eval_yf8$eval_o$x$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$NullPointerException    (com.rubenroy.minimaltodo.eval_jst)
===============================================================================
  No methods

android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$ParseException       (com.rubenroy.minimaltodo.eval_x45)
===============================================================================
  No methods

android.support.v7.widget.StaggeredGridLayoutManager$ParseException      (com.rubenroy.minimaltodo.eval_kka)
===============================================================================
  No methods

android.support.v7.widget.StaggeredGridLayoutManager$SavedState  (com.rubenroy.minimaltodo.eval_yf8$y)
===============================================================================
  a                invalidateAnchorPositionInfo()
  u                invalidateSpanInfo()
  describeContents public describeContents()
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v7.widget.StaggeredGridLayoutManager$SavedState$1        (com.rubenroy.minimaltodo.eval_yf8$y$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v7.widget.StaggeredGridLayoutManager$SavedState$IOException      (com.rubenroy.minimaltodo.eval_me2)
===============================================================================
  No methods

android.support.v7.widget.StaggeredGridLayoutManager$Span        (com.rubenroy.minimaltodo.eval_yf8$a)
===============================================================================
  a        getEndLine(int)
  d        public findFirstVisibleItemPosition()
  eval__   public findLastCompletelyVisibleItemPosition()
  eval_b   public getDeletedSize()
  eval_z   setLine(int)
  f        findOneVisibleChild(int,int,boolean)
  g        calculateCachedEnd()
  g        appendToSpan(android.view.View)
  h        public findFirstCompletelyVisibleItemPosition()
  h        getLayoutParams(android.view.View)
  k        cacheReferenceLineAndClear(boolean,int)
  l        clear()
  m        getStartLine()
  n        getEndLine()
  n        prependToSpan(android.view.View)
  o        public findLastVisibleItemPosition()
  r        popEnd()
  r        static access$300(android.support.v7.widget.StaggeredGridLayoutManager$Span)
  s        calculateCachedStart()
  t        invalidateCache()
  u        popStart()
  v        getStartLine(int)
  v        isEmpty(int,int)
  w        getNormalizedOffset(int,int,int)
  z        onOffset(int)

android.support.v7.widget.SuggestionsAdapter     (com.rubenroy.minimaltodo.eval_lmq)
===============================================================================
  a                        private getDrawable(android.net.Uri)
  a                        private storeInIconCache(java.lang.String,android.graphics.drawable.Drawable)
  d                        getDrawableFromResourceUri(android.net.Uri)
  e                        public static getColumnString(android.database.Cursor,java.lang.String)
  eval_t                   private checkIconCache(java.lang.String)
  f                        private getActivityIcon(android.content.ComponentName)
  h                        public convertToString(android.database.Cursor)
  i                        public changeCursor(android.database.Cursor)
  i                        private setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int)
  j                        private updateSpinnerState(android.database.Cursor)
  k                        public bindView(android.view.View,android.content.Context,android.database.Cursor)
  l                        public newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
  n                        private getActivityIconWithCache(android.content.ComponentName)
  q                        getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)
  q                        public setQueryRefinement(int)
  r                        private setViewText(android.widget.TextView,java.lang.CharSequence)
  s                        private getIcon1(android.database.Cursor)
  u                        public getQueryRefinement()
  v                        public runQueryOnBackgroundThread(java.lang.CharSequence)
  w                        private getDefaultIcon1(android.database.Cursor)
  w                        private formatUrl(java.lang.CharSequence)
  y                        public close()
  y                        private getIcon2(android.database.Cursor)
  z                        private static getStringOrNull(android.database.Cursor,int)
  z                        private getDrawableFromResourceValue(java.lang.String)
  getView                  public getView(int,android.view.View,android.view.ViewGroup)
  hasStableIds             public hasStableIds()
  notifyDataSetChanged     public notifyDataSetChanged()
  notifyDataSetInvalidated public notifyDataSetInvalidated()
  onClick                  public onClick(android.view.View)

android.support.v7.widget.SuggestionsAdapter$ChildViewCache      (com.rubenroy.minimaltodo.eval_lmq$k)
===============================================================================
  No methods

android.support.v7.widget.SuggestionsAdapter$Exception   (com.rubenroy.minimaltodo.eval_wdl)
===============================================================================
  No methods

android.support.v7.widget.SwitchCompat   (com.rubenroy.minimaltodo.eval_g0u)
===============================================================================
  a                                private cancelSuperTouch(android.view.MotionEvent)
  b                                public getSwitchPadding()
  b                                public setTrackDrawable(android.graphics.drawable.Drawable)
  c                                public setSplitTrack(boolean)
  e                                private animateThumbToCheckedState(boolean)
  eval_o                           public getThumbTextPadding()
  eval_s                           public getSplitTrack()
  eval_u                           private getTargetCheckedState()
  f                                public setTextOn(java.lang.CharSequence)
  g                                public getThumbDrawable()
  g                                public setSwitchTypeface(android.graphics.Typeface)
  g                                private static constrain(float,float,float)
  g                                public setThumbResource(int)
  h                                public getShowText()
  i                                public getSwitchMinWidth()
  j                                public getTextOn()
  j                                public setTrackResource(int)
  l                                private cancelPositionAnimator()
  m                                public setShowText(boolean)
  n                                private stopDrag(android.view.MotionEvent)
  n                                private makeLayout(java.lang.CharSequence)
  o                                private setThumbPosition(float)
  q                                private getThumbScrollRange()
  r                                private setSwitchTypefaceByIndex(int,int)
  s                                private getThumbOffset()
  s                                static access$100(android.support.v7.widget.SwitchCompat)
  s                                public setThumbTextPadding(int)
  s                                public setTextOff(java.lang.CharSequence)
  t                                public setThumbDrawable(android.graphics.drawable.Drawable)
  t                                private hitThumb(float,float)
  u                                static access$102(android.support.v7.widget.SwitchCompat,android.support.v7.widget.SwitchCompat$ThumbAnimation)
  v                                public setSwitchTypeface(android.graphics.Typeface,int)
  w                                static access$200(android.support.v7.widget.SwitchCompat,float)
  x                                public setSwitchTextAppearance(android.content.Context,int)
  y                                public getTextOff()
  y                                public setSwitchPadding(int)
  z                                public getTrackDrawable()
  z                                public setSwitchMinWidth(int)
  draw                             public draw(android.graphics.Canvas)
  drawableHotspotChanged           public drawableHotspotChanged(float,float)
  drawableStateChanged             protected drawableStateChanged()
  getCompoundPaddingLeft           public getCompoundPaddingLeft()
  getCompoundPaddingRight          public getCompoundPaddingRight()
  jumpDrawablesToCurrentState      public jumpDrawablesToCurrentState()
  onCreateDrawableState            protected onCreateDrawableState(int)
  onDraw                           protected onDraw(android.graphics.Canvas)
  onInitializeAccessibilityEvent   public onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
  onInitializeAccessibilityNodeInfo    public onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
  onLayout                         protected onLayout(boolean,int,int,int,int)
  onMeasure                        public onMeasure(int,int)
  onPopulateAccessibilityEvent     public onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
  onTouchEvent                     public onTouchEvent(android.view.MotionEvent)
  setChecked                       public setChecked(boolean)
  toggle                           public toggle()
  verifyDrawable                   protected verifyDrawable(android.graphics.drawable.Drawable)

android.support.v7.widget.SwitchCompat$1 (com.rubenroy.minimaltodo.eval_g0u$1)
===============================================================================
  onAnimationEnd       public onAnimationEnd(android.view.animation.Animation)
  onAnimationRepeat    public onAnimationRepeat(android.view.animation.Animation)
  onAnimationStart     public onAnimationStart(android.view.animation.Animation)

android.support.v7.widget.SwitchCompat$IOException       (com.rubenroy.minimaltodo.eval_xa9)
===============================================================================
  No methods

android.support.v7.widget.SwitchCompat$ThumbAnimation    (com.rubenroy.minimaltodo.eval_g0u$x)
===============================================================================
  applyTransformation  protected applyTransformation(float,android.view.animation.Transformation)

android.support.v7.widget.ThemedSpinnerAdapter   (com.rubenroy.minimaltodo.eval_nof)
===============================================================================
  j    public abstract setDropDownViewTheme(android.content.res.Resources$Theme)
  z    public abstract getDropDownViewTheme()

android.support.v7.widget.ThemedSpinnerAdapter$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_hyq)
===============================================================================
  No methods

android.support.v7.widget.ThemedSpinnerAdapter$Helper    (com.rubenroy.minimaltodo.eval_nof$g)
===============================================================================
  b        public getDropDownViewTheme()
  eval_g   public getDropDownViewInflater()
  v        public setDropDownViewTheme(android.content.res.Resources$Theme)

android.support.v7.widget.Toolbar
===============================================================================
  a                            public setPopupTheme(int)
  b                            private measureChildCollapseMargins(android.view.View,int,int,int,int,int[])
  c                            private ensureMenu()
  d                            public setSubtitleTextColor(int)
  d                            public setLogoDescription(java.lang.CharSequence)
  e                            public setOverflowIcon(android.graphics.drawable.Drawable)
  e                            private measureChildConstrained(android.view.View,int,int,int,int,int)
  eval_b                       public getSubtitle()
  eval_f                       public getContentInsetLeft()
  eval_g                       public setSubtitleTextAppearance(android.content.Context,int)
  eval_j                       public hideOverflowMenu()
  eval_k                       private ensureLogoView()
  eval_k                       public inflateMenu(int)
  eval_l                       public getTitle()
  eval_m                       private ensureMenuView()
  eval_n                       public setNavigationContentDescription(java.lang.CharSequence)
  eval_o                       public getNavigationIcon()
  eval_p                       addChildrenForExpandedActionView()
  eval_q                       private getChildVerticalGravity(int)
  eval_r                       private postShowOverflowMenu()
  eval_s                       public getContentInsetStart()
  eval_s                       public setLogo(android.graphics.drawable.Drawable)
  eval_u                       public canShowOverflowMenu()
  eval_u                       public setLogo(int)
  eval_v                       private ensureCollapseButtonView()
  eval_w                       public getNavigationContentDescription()
  eval_x                       private ensureNavButtonView()
  f                            public dismissPopupMenus()
  f                            public setNavigationOnClickListener(android.view.View$OnClickListener)
  g                            private shouldCollapse()
  generateDefaultLayoutParams  protected generateDefaultLayoutParams()
  generateLayoutParams         public generateLayoutParams(android.util.AttributeSet)
  generateLayoutParams         protected generateLayoutParams(android.view.ViewGroup$LayoutParams)
  h                            private getMenuInflater()
  i                            public getPopupTheme()
  i                            public setNavigationIcon(int)
  j                            public hasExpandedActionView()
  j                            static access$000(android.support.v7.widget.Toolbar)
  j                            private layoutChildLeft(android.view.View,int,int[],int)
  j                            public setTitleTextColor(int)
  k                            public showOverflowMenu()
  l                            public getContentInsetRight()
  m                            public collapseActionView()
  m                            public setNavigationIcon(android.graphics.drawable.Drawable)
  m                            private getHorizontalMargins(android.view.View)
  m                            public setNavigationContentDescription(int)
  m                            public setContentInsetsAbsolute(int,int)
  m                            public setSubtitle(java.lang.CharSequence)
  n                            removeChildrenForExpandedActionView()
  o                            public getOverflowIcon()
  o                            static access$400(android.support.v7.widget.Toolbar)
  o                            private isChildOrHidden(android.view.View)
  o                            public setTitle(java.lang.CharSequence)
  p                            public getLogoDescription()
  q                            public getLogo()
  q                            static access$200(android.support.v7.widget.Toolbar)
  q                            private getChildTop(android.view.View,int)
  q                            public setContentInsetsRelative(int,int)
  r                            public setMenuCallbacks(android.support.v7.internal.view.menu.MenuPresenter$Callback,android.support.v7.internal.view.menu.MenuBuilder$Callback)
  r                            private addSystemView(android.view.View,boolean)
  s                            public setCollapsible(boolean)
  t                            public getWrapper()
  t                            private addCustomViewsWithGravity(java.util.List,int)
  u                            public isOverflowMenuShowing()
  u                            private static isCustomView(android.view.View)
  u                            public setSubtitle(int)
  v                            public isOverflowMenuShowPending()
  v                            static access$300(android.support.v7.widget.Toolbar)
  v                            private shouldLayout(android.view.View)
  w                            public setMenu(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.widget.ActionMenuPresenter)
  w                            public setLogoDescription(int)
  x                            public getMenu()
  x                            public setOnMenuItemClickListener(android.support.v7.widget.Toolbar$OnMenuItemClickListener)
  x                            private getVerticalMargins(android.view.View)
  x                            public setTitle(int)
  y                            public getContentInsetEnd()
  y                            public setTitleTextAppearance(android.content.Context,int)
  y                            private getViewListMeasuredWidth(java.util.List,int[])
  z                            public isTitleTruncated()
  z                            private layoutChildRight(android.view.View,int,int[],int)
  z                            private getChildHorizontalGravity(int)
  checkLayoutParams            protected checkLayoutParams(android.view.ViewGroup$LayoutParams)
  generateDefaultLayoutParams  protected volatile generateDefaultLayoutParams()
  generateLayoutParams         public volatile generateLayoutParams(android.util.AttributeSet)
  generateLayoutParams         protected volatile generateLayoutParams(android.view.ViewGroup$LayoutParams)
  onDetachedFromWindow         protected onDetachedFromWindow()
  onHoverEvent                 public onHoverEvent(android.view.MotionEvent)
  onLayout                     protected onLayout(boolean,int,int,int,int)
  onMeasure                    protected onMeasure(int,int)
  onRestoreInstanceState       protected onRestoreInstanceState(android.os.Parcelable)
  onRtlPropertiesChanged       public onRtlPropertiesChanged(int)
  onSaveInstanceState          protected onSaveInstanceState()
  onTouchEvent                 public onTouchEvent(android.view.MotionEvent)

android.support.v7.widget.Toolbar$1
===============================================================================
  x    public onMenuItemClick(android.view.MenuItem)

android.support.v7.widget.Toolbar$2
===============================================================================
  run  public run()

android.support.v7.widget.Toolbar$3
===============================================================================
  onClick  public onClick(android.view.View)

android.support.v7.widget.Toolbar$ExpandedActionViewMenuPresenter        (android.support.v7.widget.Toolbar$a)
===============================================================================
  a    public onSaveInstanceState()
  a    public collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl)
  a    public setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback)
  d    public flagActionItems()
  g    public expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl)
  g    public updateMenuView(boolean)
  o    public initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder)
  o    public onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean)
  r    public onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder)
  v    public getId()
  y    public onRestoreInstanceState(android.os.Parcelable)
  z    public getMenuView(android.view.ViewGroup)

android.support.v7.widget.Toolbar$IOException    (com.rubenroy.minimaltodo.eval_n1h)
===============================================================================
  No methods

android.support.v7.widget.Toolbar$LayoutParams   (android.support.v7.widget.Toolbar$x)
===============================================================================
  v    copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams)

android.support.v7.widget.Toolbar$OnMenuItemClickListener        (android.support.v7.widget.Toolbar$l)
===============================================================================
  b    public abstract onMenuItemClick(android.view.MenuItem)

android.support.v7.widget.Toolbar$SavedState     (android.support.v7.widget.Toolbar$z)
===============================================================================
  writeToParcel    public writeToParcel(android.os.Parcel,int)

android.support.v7.widget.Toolbar$SavedState$1   (android.support.v7.widget.Toolbar$z$1)
===============================================================================
  createFromParcel public createFromParcel(android.os.Parcel)
  newArray         public newArray(int)
  createFromParcel public volatile createFromParcel(android.os.Parcel)
  newArray         public volatile newArray(int)

android.support.v7.widget.Toolbar$SavedState$Exception   (com.rubenroy.minimaltodo.eval_kz_)
===============================================================================
  No methods

android.support.v7.widget.ViewInfoStore  (com.rubenroy.minimaltodo.eval_c05)
===============================================================================
  c        popFromPreLayout(android.support.v7.widget.RecyclerView$ViewHolder)
  eval_a   addToAppearedInPreLayoutHolders(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
  f        removeFromDisappearedInLayout(android.support.v7.widget.RecyclerView$ViewHolder)
  g        isInPreLayout(android.support.v7.widget.RecyclerView$ViewHolder)
  g        addToPreLayout(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
  k        getFromOldChangeHolders(long)
  n        onDetach()
  p        addToDisappearedInLayout(android.support.v7.widget.RecyclerView$ViewHolder)
  p        addToOldChangeHolders(long,android.support.v7.widget.RecyclerView$ViewHolder)
  s        addToPostLayout(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
  u        process(android.support.v7.widget.ViewInfoStore$ProcessCallback)
  x        clear()
  z        removeViewHolder(android.support.v7.widget.RecyclerView$ViewHolder)

android.support.v7.widget.ViewInfoStore$Exception        (com.rubenroy.minimaltodo.eval_ra7)
===============================================================================
  No methods

android.support.v7.widget.ViewInfoStore$InfoRecord       (com.rubenroy.minimaltodo.eval_c05$y)
===============================================================================
  c    static drainCache()
  d    static recycle(android.support.v7.widget.ViewInfoStore$InfoRecord)
  t    static obtain()

android.support.v7.widget.ViewInfoStore$ProcessCallback  (com.rubenroy.minimaltodo.eval_c05$e)
===============================================================================
  g    public abstract processPersistent(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
  m    public abstract processAppeared(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
  q    public abstract processDisappeared(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
  w    public abstract unused(android.support.v7.widget.RecyclerView$ViewHolder)

android.support.v7.widget.helper.ItemTouchHelper (com.rubenroy.minimaltodo.eval_pc8)
===============================================================================
  a        private destroyCallbacks()
  b        private addChildDrawingOrderCallback()
  b        public onChildViewDetachedFromWindow(android.view.View)
  c        public startDrag(android.support.v7.widget.RecyclerView$ViewHolder)
  e        private postDispatchSwipe(android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation,int)
  e        static access$700(android.support.v7.widget.helper.ItemTouchHelper,android.support.v7.widget.RecyclerView$ViewHolder,boolean)
  eval_e   static access$500(android.support.v7.widget.helper.ItemTouchHelper)
  eval_j   private removeChildDrawingOrderCallbackIfNecessary(android.view.View)
  eval_p   static access$1800(android.support.v7.widget.helper.ItemTouchHelper)
  f        static access$2300(android.support.v7.widget.helper.ItemTouchHelper)
  f        static access$2302(android.support.v7.widget.helper.ItemTouchHelper,int)
  f        private findChildView(android.view.MotionEvent)
  g        static access$000(android.support.v7.widget.helper.ItemTouchHelper)
  h        public onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State)
  h        public attachToRecyclerView(android.support.v7.widget.RecyclerView)
  h        private moveIfNecessary(android.support.v7.widget.RecyclerView$ViewHolder)
  i        private releaseVelocityTracker()
  i        public getItemOffsets(android.graphics.Rect,android.view.View,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State)
  i        public startSwipe(android.support.v7.widget.RecyclerView$ViewHolder)
  j        private obtainVelocityTracker()
  j        private static hitTest(android.view.View,float,float,float,float)
  l        static access$400(android.support.v7.widget.helper.ItemTouchHelper)
  l        static access$900(android.support.v7.widget.helper.ItemTouchHelper,android.view.MotionEvent,int,int)
  l        static access$1000(android.support.v7.widget.helper.ItemTouchHelper,int,android.view.MotionEvent,int)
  m        static access$300(android.support.v7.widget.helper.ItemTouchHelper)
  n        private hasRunningRecoverAnim()
  n        static access$100(android.support.v7.widget.helper.ItemTouchHelper,android.support.v7.widget.RecyclerView$ViewHolder)
  o        private setupCallbacks()
  o        static access$1500(android.support.v7.widget.helper.ItemTouchHelper,android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation,int)
  p        static access$1600(android.support.v7.widget.helper.ItemTouchHelper)
  p        static access$800(android.support.v7.widget.helper.ItemTouchHelper,android.support.v7.widget.RecyclerView$ViewHolder,int)
  q        private select(android.support.v7.widget.RecyclerView$ViewHolder,int)
  r        private findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder)
  r        private checkVerticalSwipe(android.support.v7.widget.RecyclerView$ViewHolder,int)
  r        static access$600(android.support.v7.widget.helper.ItemTouchHelper,android.view.MotionEvent)
  r        private findAnimation(android.view.MotionEvent)
  s        private swipeIfNecessary(android.support.v7.widget.RecyclerView$ViewHolder)
  s        private getSelectedDxDy(float[])
  t        private initGestureDetector()
  t        private checkHorizontalSwipe(android.support.v7.widget.RecyclerView$ViewHolder,int)
  v        private endRecoverAnimation(android.support.v7.widget.RecyclerView$ViewHolder,boolean)
  w        static access$200(android.support.v7.widget.helper.ItemTouchHelper)
  w        public onChildViewAttachedToWindow(android.view.View)
  w        private checkSelectForSwipe(int,android.view.MotionEvent,int)
  x        private scrollIfNecessary()
  x        public onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State)
  x        static access$1700(android.support.v7.widget.helper.ItemTouchHelper,android.view.View)
  y        private updateDxDy(android.view.MotionEvent,int,int)
  z        static access$1100(android.support.v7.widget.helper.ItemTouchHelper)
  z        static access$2400(android.support.v7.widget.helper.ItemTouchHelper,android.view.MotionEvent)
  z        private findSwipedView(android.view.MotionEvent)

android.support.v7.widget.helper.ItemTouchHelper$1       (com.rubenroy.minimaltodo.eval_pc8$1)
===============================================================================
  run  public run()

android.support.v7.widget.helper.ItemTouchHelper$2       (com.rubenroy.minimaltodo.eval_pc8$2)
===============================================================================
  d    public onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent)
  g    public onInterceptTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent)
  s    public onRequestDisallowInterceptTouchEvent(boolean)

android.support.v7.widget.helper.ItemTouchHelper$3       (com.rubenroy.minimaltodo.eval_pc8$3)
===============================================================================
  eval_h   public onAnimationEnd(android.support.v4.animation.ValueAnimatorCompat)

android.support.v7.widget.helper.ItemTouchHelper$4       (com.rubenroy.minimaltodo.eval_pc8$4)
===============================================================================
  run  public run()

android.support.v7.widget.helper.ItemTouchHelper$5       (com.rubenroy.minimaltodo.eval_pc8$5)
===============================================================================
  u    public onGetChildDrawingOrder(int,int)

android.support.v7.widget.helper.ItemTouchHelper$Callback        (com.rubenroy.minimaltodo.eval_pc8$d)
===============================================================================
  b        final getAbsoluteMovementFlags(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder)
  c        private hasDragFlag(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder)
  d        public clearView(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder)
  eval_g   static access$2200(android.support.v7.widget.helper.ItemTouchHelper$Callback,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder)
  eval_o   public static makeFlag(int,int)
  f        public onChildDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,float,float,int,boolean)
  g        public interpolateOutOfBoundsScroll(android.support.v7.widget.RecyclerView,int,int,int,long)
  h        public abstract getMovementFlags(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder)
  h        public abstract onMove(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder)
  i        private onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,float,float)
  i        public onMoved(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,int,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int)
  j        public static makeMovementFlags(int,int)
  k        public static convertToRelativeDirection(int,int)
  l        public isLongPressDragEnabled()
  l        static access$1400(android.support.v7.widget.helper.ItemTouchHelper$Callback,android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,float,float)
  n        public abstract onSwiped(android.support.v7.widget.RecyclerView$ViewHolder,int)
  n        public chooseDropTarget(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,int)
  o        public static getDefaultUIUtil()
  p        public onChildDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,float,float,int,boolean)
  p        private hasSwipeFlag(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder)
  q        static access$1300(android.support.v7.widget.helper.ItemTouchHelper$Callback,android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,float,float)
  r        public getBoundingBoxMargin()
  r        private getMaxDragScroll(android.support.v7.widget.RecyclerView)
  r        public onSelectedChanged(android.support.v7.widget.RecyclerView$ViewHolder,int)
  s        public getMoveThreshold(android.support.v7.widget.RecyclerView$ViewHolder)
  t        private onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,float,float)
  u        static access$2100(android.support.v7.widget.helper.ItemTouchHelper$Callback,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder)
  v        public canDropOver(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder)
  w        public getSwipeThreshold(android.support.v7.widget.RecyclerView$ViewHolder)
  y        public convertToAbsoluteDirection(int,int)
  z        public isItemViewSwipeEnabled()
  z        public getAnimationDuration(android.support.v7.widget.RecyclerView,int,float,float)

android.support.v7.widget.helper.ItemTouchHelper$Callback$1      (com.rubenroy.minimaltodo.eval_pc8$d$1)
===============================================================================
  getInterpolation public getInterpolation(float)

android.support.v7.widget.helper.ItemTouchHelper$Callback$2      (com.rubenroy.minimaltodo.eval_pc8$d$2)
===============================================================================
  getInterpolation public getInterpolation(float)

android.support.v7.widget.helper.ItemTouchHelper$Callback$ParseException (com.rubenroy.minimaltodo.eval_un5)
===============================================================================
  No methods

android.support.v7.widget.helper.ItemTouchHelper$IOException     (com.rubenroy.minimaltodo.eval_oo_)
===============================================================================
  No methods

android.support.v7.widget.helper.ItemTouchHelper$ItemTouchHelperGestureListener  (com.rubenroy.minimaltodo.eval_pc8$u)
===============================================================================
  onDown       public onDown(android.view.MotionEvent)
  onLongPress  public onLongPress(android.view.MotionEvent)

android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation        (com.rubenroy.minimaltodo.eval_pc8$q)
===============================================================================
  b        static access$1900(android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation)
  c        public onAnimationRepeat(android.support.v4.animation.ValueAnimatorCompat)
  d        public setDuration(long)
  eval_c   static access$2000(android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation)
  eval_e   public onAnimationCancel(android.support.v4.animation.ValueAnimatorCompat)
  eval_h   public onAnimationEnd(android.support.v4.animation.ValueAnimatorCompat)
  g        public cancel()
  g        public setFraction(float)
  i        public update()
  m        public onAnimationStart(android.support.v4.animation.ValueAnimatorCompat)
  o        public start()

android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation$1      (com.rubenroy.minimaltodo.eval_pc8$q$1)
===============================================================================
  x    public onAnimationUpdate(android.support.v4.animation.ValueAnimatorCompat)

android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation$NullPointerException   (com.rubenroy.minimaltodo.eval_ald)
===============================================================================
  No methods

android.support.v7.widget.helper.ItemTouchHelper$SimpleCallback  (com.rubenroy.minimaltodo.eval_pc8$m)
===============================================================================
  e    public getSwipeDirs(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder)
  h    public getMovementFlags(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder)
  q    public getDragDirs(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder)
  u    public setDefaultSwipeDirs(int)
  v    public setDefaultDragDirs(int)

android.support.v7.widget.helper.ItemTouchHelper$ViewDropHandler (com.rubenroy.minimaltodo.eval_pc8$l)
===============================================================================
  d    public abstract prepareForDrop(android.view.View,android.view.View,int,int)

android.support.v7.widget.helper.ItemTouchUIUtil (com.rubenroy.minimaltodo.eval_xe1)
===============================================================================
  b    public abstract onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean)
  s    public abstract clearView(android.view.View)
  x    public abstract onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean)
  z    public abstract onSelected(android.view.View)

android.support.v7.widget.helper.ItemTouchUIUtil$IOException     (com.rubenroy.minimaltodo.eval_f6q)
===============================================================================
  No methods

android.support.v7.widget.helper.ItemTouchUIUtilImpl     (com.rubenroy.minimaltodo.eval_qei)
===============================================================================
  No methods

android.support.v7.widget.helper.ItemTouchUIUtilImpl$Gingerbread (com.rubenroy.minimaltodo.eval_qei$g)
===============================================================================
  b    public onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean)
  s    private draw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float)
  s    public clearView(android.view.View)
  x    public onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean)
  z    public onSelected(android.view.View)

android.support.v7.widget.helper.ItemTouchUIUtilImpl$Honeycomb   (com.rubenroy.minimaltodo.eval_qei$r)
===============================================================================
  b    public onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean)
  s    public clearView(android.view.View)
  x    public onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean)
  z    public onSelected(android.view.View)

android.support.v7.widget.helper.ItemTouchUIUtilImpl$Lollipop    (com.rubenroy.minimaltodo.eval_qei$q)
===============================================================================
  b    public onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean)
  f    private findMaxElevation(android.support.v7.widget.RecyclerView,android.view.View)
  s    public clearView(android.view.View)

android.support.v7.widget.helper.ItemTouchUIUtilImpl$ParseException      (com.rubenroy.minimaltodo.eval_d6o)
===============================================================================
  No methods

android.support.v7.widget.util.SortedListAdapterCallback (com.rubenroy.minimaltodo.eval_dig)
===============================================================================
  a        public onMoved(int,int)
  b        public onRemoved(int,int)
  eval_c   public onChanged(int,int)
  m        public onInserted(int,int)

android.support.v7.widget.util.SortedListAdapterCallback$ArrayOutOfBoundsException       (com.rubenroy.minimaltodo.eval_lg0)
===============================================================================
  No methods

com.amulyakhare.textdrawable.BuildConfig (com.rubenroy.minimaltodo.eval_v7n)
===============================================================================
  No methods

com.amulyakhare.textdrawable.BuildConfig$1       (com.rubenroy.minimaltodo.eval_ebc)
===============================================================================
  No methods

com.amulyakhare.textdrawable.BuildConfig$NullPointerException    (com.rubenroy.minimaltodo.eval_vv8)
===============================================================================
  No methods

com.amulyakhare.textdrawable.TextDrawable        (com.rubenroy.minimaltodo.eval__84)
===============================================================================
  eval_b               private drawBorder(android.graphics.Canvas)
  eval_v               public static builder()
  f                    private getDarkerShade(int)
  draw                 public draw(android.graphics.Canvas)
  getIntrinsicHeight   public getIntrinsicHeight()
  getIntrinsicWidth    public getIntrinsicWidth()
  getOpacity           public getOpacity()
  setAlpha             public setAlpha(int)
  setColorFilter       public setColorFilter(android.graphics.ColorFilter)

com.amulyakhare.textdrawable.TextDrawable$1      (com.rubenroy.minimaltodo.eval__84$1)
===============================================================================
  No methods

com.amulyakhare.textdrawable.TextDrawable$2      (com.rubenroy.minimaltodo.eval_ad8)
===============================================================================
  No methods

com.amulyakhare.textdrawable.TextDrawable$ArrayOutOfBoundsException      (com.rubenroy.minimaltodo.eval_rsn)
===============================================================================
  No methods

com.amulyakhare.textdrawable.TextDrawable$Builder        (com.rubenroy.minimaltodo.eval__84$n)
===============================================================================
  b        static access$300(com.amulyakhare.textdrawable.TextDrawable$Builder)
  d        public toUpperCase()
  e        public textColor(int)
  eval_a   public withBorder(int)
  eval_h   public fontSize(int)
  eval_o   static access$000(com.amulyakhare.textdrawable.TextDrawable$Builder)
  eval_s   static access$500(com.amulyakhare.textdrawable.TextDrawable$Builder)
  eval_w   static access$800(com.amulyakhare.textdrawable.TextDrawable$Builder)
  f        public roundRect(int)
  g        public beginConfig()
  h        public build(java.lang.String,int)
  j        public bold()
  k        public buildRound(java.lang.String,int)
  m        public endConfig()
  m        public buildRect(java.lang.String,int)
  n        static access$700(com.amulyakhare.textdrawable.TextDrawable$Builder)
  p        static access$100(com.amulyakhare.textdrawable.TextDrawable$Builder)
  r        public round()
  s        public rect()
  s        public buildRoundRect(java.lang.String,int,int)
  t        static access$400(com.amulyakhare.textdrawable.TextDrawable$Builder)
  t        public height(int)
  w        public useFont(android.graphics.Typeface)
  w        static access$600(com.amulyakhare.textdrawable.TextDrawable$Builder)
  w        public width(int)
  y        static access$900(com.amulyakhare.textdrawable.TextDrawable$Builder)
  z        static access$200(com.amulyakhare.textdrawable.TextDrawable$Builder)

com.amulyakhare.textdrawable.TextDrawable$IBuilder       (com.rubenroy.minimaltodo.eval__84$i)
===============================================================================
  h    public abstract build(java.lang.String,int)

com.amulyakhare.textdrawable.TextDrawable$IConfigBuilder (com.rubenroy.minimaltodo.eval__84$u)
===============================================================================
  d        public abstract toUpperCase()
  e        public abstract textColor(int)
  eval_a   public abstract withBorder(int)
  eval_h   public abstract fontSize(int)
  j        public abstract bold()
  m        public abstract endConfig()
  t        public abstract height(int)
  w        public abstract useFont(android.graphics.Typeface)
  w        public abstract width(int)

com.amulyakhare.textdrawable.TextDrawable$IShapeBuilder  (com.rubenroy.minimaltodo.eval__84$t)
===============================================================================
  f    public abstract roundRect(int)
  g    public abstract beginConfig()
  k    public abstract buildRound(java.lang.String,int)
  m    public abstract buildRect(java.lang.String,int)
  r    public abstract round()
  s    public abstract rect()
  s    public abstract buildRoundRect(java.lang.String,int,int)

com.amulyakhare.textdrawable.util.ColorGenerator (com.rubenroy.minimaltodo.eval_xis)
===============================================================================
  h    public getRandomColor()
  u    public getColor(java.lang.Object)
  v    public static create(java.util.List)

com.amulyakhare.textdrawable.util.ColorGenerator$IOException     (com.rubenroy.minimaltodo.eval_scg)
===============================================================================
  No methods

com.rubenroy.minimaltodo.AboutActivity   (com.rubenroy.minimaltodo.eval_opc)
===============================================================================
  p                        static access$000(com.rubenroy.minimaltodo.AboutActivity)
  onCreate                 protected onCreate(android.os.Bundle)
  onOptionsItemSelected    public onOptionsItemSelected(android.view.MenuItem)

com.rubenroy.minimaltodo.AboutActivity$1 (com.rubenroy.minimaltodo.eval_opc$1)
===============================================================================
  onClick  public onClick(android.view.View)

com.rubenroy.minimaltodo.AboutActivity$IOException       (com.rubenroy.minimaltodo.eval_u8m)
===============================================================================
  No methods

com.rubenroy.minimaltodo.AddToDoActivity (com.rubenroy.minimaltodo.eval_prc)
===============================================================================
  b                        public hideKeyboard(android.widget.EditText)
  b                        static access$400(com.rubenroy.minimaltodo.AddToDoActivity)
  c                        public static formatDate(java.lang.String,java.util.Date)
  d                        public setTimeEditText()
  e                        public setReminderTextView()
  eval_b                   public setDateEditText()
  eval_n                   private getThemeSet()
  g                        public onDateSet(com.wdullaer.materialdatetimepicker.date.DatePickerDialog,int,int,int)
  h                        public onTimeSet(com.wdullaer.materialdatetimepicker.time.RadialPickerLayout,int,int)
  j                        private setDateAndTimeEditText()
  m                        public setEnterDateLayoutVisible(boolean)
  p                        static access$102(com.rubenroy.minimaltodo.AddToDoActivity,java.lang.String)
  q                        public setEnterDateLayoutVisibleWithAnimations(boolean)
  q                        public setTime(int,int)
  r                        static access$600(com.rubenroy.minimaltodo.AddToDoActivity)
  s                        static access$202(com.rubenroy.minimaltodo.AddToDoActivity,java.util.Date)
  t                        static access$302(com.rubenroy.minimaltodo.AddToDoActivity,boolean)
  u                        static access$000(com.rubenroy.minimaltodo.AddToDoActivity)
  v                        static access$200(com.rubenroy.minimaltodo.AddToDoActivity)
  v                        public makeResult(int)
  w                        static access$700(com.rubenroy.minimaltodo.AddToDoActivity)
  x                        static access$500(com.rubenroy.minimaltodo.AddToDoActivity)
  z                        public setDate(int,int,int)
  onBackPressed            public onBackPressed()
  onCreate                 protected onCreate(android.os.Bundle)
  onOptionsItemSelected    public onOptionsItemSelected(android.view.MenuItem)
  onResume                 protected onResume()

com.rubenroy.minimaltodo.AddToDoActivity$1       (com.rubenroy.minimaltodo.eval_prc$1)
===============================================================================
  onClick  public onClick(android.view.View)

com.rubenroy.minimaltodo.AddToDoActivity$2       (com.rubenroy.minimaltodo.eval_prc$2)
===============================================================================
  afterTextChanged     public afterTextChanged(android.text.Editable)
  beforeTextChanged    public beforeTextChanged(java.lang.CharSequence,int,int,int)
  onTextChanged        public onTextChanged(java.lang.CharSequence,int,int,int)

com.rubenroy.minimaltodo.AddToDoActivity$3       (com.rubenroy.minimaltodo.eval_prc$3)
===============================================================================
  onCheckedChanged public onCheckedChanged(android.widget.CompoundButton,boolean)

com.rubenroy.minimaltodo.AddToDoActivity$4       (com.rubenroy.minimaltodo.eval_prc$4)
===============================================================================
  onClick  public onClick(android.view.View)

com.rubenroy.minimaltodo.AddToDoActivity$5       (com.rubenroy.minimaltodo.eval_prc$5)
===============================================================================
  onClick  public onClick(android.view.View)

com.rubenroy.minimaltodo.AddToDoActivity$6       (com.rubenroy.minimaltodo.eval_prc$6)
===============================================================================
  onClick  public onClick(android.view.View)

com.rubenroy.minimaltodo.AddToDoActivity$7       (com.rubenroy.minimaltodo.eval_prc$7)
===============================================================================
  onAnimationCancel    public onAnimationCancel(android.animation.Animator)
  onAnimationEnd       public onAnimationEnd(android.animation.Animator)
  onAnimationRepeat    public onAnimationRepeat(android.animation.Animator)
  onAnimationStart     public onAnimationStart(android.animation.Animator)

com.rubenroy.minimaltodo.AddToDoActivity$8       (com.rubenroy.minimaltodo.eval_prc$8)
===============================================================================
  onAnimationCancel    public onAnimationCancel(android.animation.Animator)
  onAnimationEnd       public onAnimationEnd(android.animation.Animator)
  onAnimationRepeat    public onAnimationRepeat(android.animation.Animator)
  onAnimationStart     public onAnimationStart(android.animation.Animator)

com.rubenroy.minimaltodo.AddToDoActivity$NullPointerException    (com.rubenroy.minimaltodo.eval_qoe)
===============================================================================
  No methods

com.rubenroy.minimaltodo.AnalyticsApplication    (com.rubenroy.minimaltodo.eval_c6v)
===============================================================================
  e    public send(java.lang.Object,java.lang.String,java.lang.String,java.lang.String)
  l    public send(java.lang.Object)
  m    public send(java.lang.Object,java.lang.String,java.lang.String)

com.rubenroy.minimaltodo.AnalyticsApplication$NullPointerException       (com.rubenroy.minimaltodo.eval_x44)
===============================================================================
  No methods

com.rubenroy.minimaltodo.BuildConfig     (com.rubenroy.minimaltodo.eval_k7r)
===============================================================================
  No methods

com.rubenroy.minimaltodo.BuildConfig$ArrayOutOfBoundsException   (com.rubenroy.minimaltodo.eval_vx_)
===============================================================================
  No methods

com.rubenroy.minimaltodo.CustomRecyclerScrollViewListener        (com.rubenroy.minimaltodo.eval_ub4)
===============================================================================
  eval_y   public abstract hide()
  j        public abstract show()
  l        public onScrolled(android.support.v7.widget.RecyclerView,int,int)

com.rubenroy.minimaltodo.CustomRecyclerScrollViewListener$ParseException (com.rubenroy.minimaltodo.eval_nil)
===============================================================================
  No methods

com.rubenroy.minimaltodo.CustomTextInputLayout
===============================================================================
  addView  public addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
  onDraw   protected onDraw(android.graphics.Canvas)

com.rubenroy.minimaltodo.CustomTextInputLayout$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_oxt)
===============================================================================
  No methods

com.rubenroy.minimaltodo.DeleteNotificationService       (com.rubenroy.minimaltodo.eval_e2v)
===============================================================================
  o                private saveData()
  r                private loadData()
  w                private dataChanged()
  onDestroy        public onDestroy()
  onHandleIntent   protected onHandleIntent(android.content.Intent)

com.rubenroy.minimaltodo.DeleteNotificationService$NullPointerException  (com.rubenroy.minimaltodo.eval_gki)
===============================================================================
  No methods

com.rubenroy.minimaltodo.ItemTouchHelperClass    (com.rubenroy.minimaltodo.eval_z6y)
===============================================================================
  h    public getMovementFlags(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder)
  h    public onMove(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder)
  l    public isLongPressDragEnabled()
  n    public onSwiped(android.support.v7.widget.RecyclerView$ViewHolder,int)
  z    public isItemViewSwipeEnabled()

com.rubenroy.minimaltodo.ItemTouchHelperClass$ItemTouchHelperAdapter     (com.rubenroy.minimaltodo.eval_z6y$_)
===============================================================================
  eval_y   public abstract onItemRemoved(int)
  y        public abstract onItemMoved(int,int)

com.rubenroy.minimaltodo.ItemTouchHelperClass$NullPointerException       (com.rubenroy.minimaltodo.eval__ol)
===============================================================================
  No methods

com.rubenroy.minimaltodo.MainActivity
===============================================================================
  e                        private doesPendingIntentExist(android.content.Intent,int)
  eval_k                   private deleteAlarm(android.content.Intent,int)
  f                        private getAlarmManager()
  f                        static access$100(com.rubenroy.minimaltodo.MainActivity)
  h                        static access$300(com.rubenroy.minimaltodo.MainActivity)
  h                        static access$600(com.rubenroy.minimaltodo.MainActivity,android.content.Intent,int,long)
  i                        public static getLocallyStoredData(com.rubenroy.minimaltodo.StoreRetrieveData)
  l                        private createAlarm(android.content.Intent,int,long)
  l                        static access$200(com.rubenroy.minimaltodo.MainActivity)
  m                        static access$400(com.rubenroy.minimaltodo.MainActivity,android.content.Intent,int)
  o                        static access$302(com.rubenroy.minimaltodo.MainActivity,int)
  p                        private addToDataStore(com.rubenroy.minimaltodo.ToDoItem)
  q                        static access$700(com.rubenroy.minimaltodo.MainActivity)
  r                        private saveDate()
  r                        static access$000(com.rubenroy.minimaltodo.MainActivity)
  s                        private setAlarms()
  t                        static access$202(com.rubenroy.minimaltodo.MainActivity,com.rubenroy.minimaltodo.ToDoItem)
  t                        public makeUpItems(java.util.ArrayList,int)
  w                        public addThemeToSharedPreferences(java.lang.String)
  onActivityResult         protected onActivityResult(int,int,android.content.Intent)
  onCreate                 protected onCreate(android.os.Bundle)
  onCreateOptionsMenu      public onCreateOptionsMenu(android.view.Menu)
  onDestroy                protected onDestroy()
  onOptionsItemSelected    public onOptionsItemSelected(android.view.MenuItem)
  onPause                  protected onPause()
  onResume                 protected onResume()
  onStart                  protected onStart()

com.rubenroy.minimaltodo.MainActivity$1
===============================================================================
  onClick  public onClick(android.view.View)

com.rubenroy.minimaltodo.MainActivity$2
===============================================================================
  eval_y   public hide()
  j        public show()

com.rubenroy.minimaltodo.MainActivity$BasicListAdapter   (com.rubenroy.minimaltodo.MainActivity$a)
===============================================================================
  a        public volatile onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)
  a        public onBindViewHolder(com.rubenroy.minimaltodo.MainActivity$BasicListAdapter$ViewHolder,int)
  e        public onCreateViewHolder(android.view.ViewGroup,int)
  eval_h   static access$500(com.rubenroy.minimaltodo.MainActivity$BasicListAdapter)
  eval_y   public onItemRemoved(int)
  x        public getItemCount()
  y        public onItemMoved(int,int)

com.rubenroy.minimaltodo.MainActivity$BasicListAdapter$1 (com.rubenroy.minimaltodo.MainActivity$a$1)
===============================================================================
  onClick  public onClick(android.view.View)

com.rubenroy.minimaltodo.MainActivity$BasicListAdapter$Exception (com.rubenroy.minimaltodo.eval_k4w)
===============================================================================
  No methods

com.rubenroy.minimaltodo.MainActivity$BasicListAdapter$ViewHolder        (com.rubenroy.minimaltodo.MainActivity$a$o)
===============================================================================
  No methods

com.rubenroy.minimaltodo.MainActivity$BasicListAdapter$ViewHolder$1      (com.rubenroy.minimaltodo.MainActivity$a$o$1)
===============================================================================
  onClick  public onClick(android.view.View)

com.rubenroy.minimaltodo.MainActivity$BasicListAdapter$ViewHolder$NullPointerException   (com.rubenroy.minimaltodo.eval__ti)
===============================================================================
  No methods

com.rubenroy.minimaltodo.MainActivity$ParseException     (com.rubenroy.minimaltodo.eval_kwv)
===============================================================================
  No methods

com.rubenroy.minimaltodo.PreferenceKeys  (com.rubenroy.minimaltodo.eval_nrt)
===============================================================================
  No methods

com.rubenroy.minimaltodo.PreferenceKeys$Exception        (com.rubenroy.minimaltodo.eval_u69)
===============================================================================
  No methods

com.rubenroy.minimaltodo.R       (com.rubenroy.minimaltodo.eval_rwc)
===============================================================================
  No methods

com.rubenroy.minimaltodo.R$ArrayOutOfBoundsException     (com.rubenroy.minimaltodo.eval_zio)
===============================================================================
  No methods

com.rubenroy.minimaltodo.R$anim  (com.rubenroy.minimaltodo.eval_rwc$c)
===============================================================================
  No methods

com.rubenroy.minimaltodo.R$array (com.rubenroy.minimaltodo.eval_rwc$x)
===============================================================================
  No methods

com.rubenroy.minimaltodo.R$attr  (com.rubenroy.minimaltodo.eval_rwc$s)
===============================================================================
  No methods

com.rubenroy.minimaltodo.R$bool  (com.rubenroy.minimaltodo.eval_rwc$l)
===============================================================================
  No methods

com.rubenroy.minimaltodo.R$color (com.rubenroy.minimaltodo.eval_rwc$g)
===============================================================================
  No methods

com.rubenroy.minimaltodo.R$dimen (com.rubenroy.minimaltodo.eval_rwc$eval_y)
===============================================================================
  No methods

com.rubenroy.minimaltodo.R$drawable      (com.rubenroy.minimaltodo.eval_rwc$d)
===============================================================================
  No methods

com.rubenroy.minimaltodo.R$id    (com.rubenroy.minimaltodo.eval_rwc$a)
===============================================================================
  No methods

com.rubenroy.minimaltodo.R$integer       (com.rubenroy.minimaltodo.eval_rwc$eval_p)
===============================================================================
  No methods

com.rubenroy.minimaltodo.R$layout        (com.rubenroy.minimaltodo.eval_rwc$_)
===============================================================================
  No methods

com.rubenroy.minimaltodo.R$menu  (com.rubenroy.minimaltodo.eval_rwc$k)
===============================================================================
  No methods

com.rubenroy.minimaltodo.R$mipmap        (com.rubenroy.minimaltodo.eval_rwc$y)
===============================================================================
  No methods

com.rubenroy.minimaltodo.R$string        (com.rubenroy.minimaltodo.eval_rwc$eval_z)
===============================================================================
  No methods

com.rubenroy.minimaltodo.R$style (com.rubenroy.minimaltodo.eval_rwc$eval_k)
===============================================================================
  No methods

com.rubenroy.minimaltodo.R$styleable     (com.rubenroy.minimaltodo.eval_rwc$eval_t)
===============================================================================
  No methods

com.rubenroy.minimaltodo.R$xml   (com.rubenroy.minimaltodo.eval_rwc$j)
===============================================================================
  No methods

com.rubenroy.minimaltodo.RecyclerViewEmptySupport
===============================================================================
  eval_n   public showEmptyView()
  q        public setEmptyView(android.view.View)
  w        public setAdapter(android.support.v7.widget.RecyclerView$Adapter)

com.rubenroy.minimaltodo.RecyclerViewEmptySupport$1
===============================================================================
  n    public onChanged()
  o    public onItemRangeRemoved(int,int)
  v    public onItemRangeInserted(int,int)

com.rubenroy.minimaltodo.RecyclerViewEmptySupport$Exception      (com.rubenroy.minimaltodo.eval_m0t)
===============================================================================
  No methods

com.rubenroy.minimaltodo.ReminderActivity        (com.rubenroy.minimaltodo.eval_psa)
===============================================================================
  eval_l                   private changeOccurred()
  eval_s                   static access$100(com.rubenroy.minimaltodo.ReminderActivity)
  eval_x                   private saveData()
  g                        private closeApp()
  h                        static access$200(com.rubenroy.minimaltodo.ReminderActivity)
  k                        private addTimeToDate(int)
  n                        static access$000(com.rubenroy.minimaltodo.ReminderActivity)
  p                        static access$400(com.rubenroy.minimaltodo.ReminderActivity)
  s                        private valueFromSpinner()
  y                        static access$300(com.rubenroy.minimaltodo.ReminderActivity)
  onCreate                 protected onCreate(android.os.Bundle)
  onCreateOptionsMenu      public onCreateOptionsMenu(android.view.Menu)
  onDestroy                protected onDestroy()
  onOptionsItemSelected    public onOptionsItemSelected(android.view.MenuItem)

com.rubenroy.minimaltodo.ReminderActivity$1      (com.rubenroy.minimaltodo.eval_psa$1)
===============================================================================
  onClick  public onClick(android.view.View)

com.rubenroy.minimaltodo.ReminderActivity$ArrayOutOfBoundsException      (com.rubenroy.minimaltodo.eval_m1c)
===============================================================================
  No methods

com.rubenroy.minimaltodo.ScrollingFABBehaviour
===============================================================================
  c    public layoutDependsOn(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton,android.view.View)
  k    public onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton,android.view.View)
  v    public volatile onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View)
  w    public volatile layoutDependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View)

com.rubenroy.minimaltodo.ScrollingFABBehaviour$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_kys)
===============================================================================
  No methods

com.rubenroy.minimaltodo.SettingsActivity        (com.rubenroy.minimaltodo.eval__2n)
===============================================================================
  onCreate                 protected onCreate(android.os.Bundle)
  onOptionsItemSelected    public onOptionsItemSelected(android.view.MenuItem)
  onResume                 protected onResume()

com.rubenroy.minimaltodo.SettingsActivity$ArrayOutOfBoundsException      (com.rubenroy.minimaltodo.eval_coo)
===============================================================================
  No methods

com.rubenroy.minimaltodo.SettingsFragment        (com.rubenroy.minimaltodo.eval_u6c)
===============================================================================
  onCreate                     public onCreate(android.os.Bundle)
  onPause                      public onPause()
  onResume                     public onResume()
  onSharedPreferenceChanged    public onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)

com.rubenroy.minimaltodo.SettingsFragment$ArrayOutOfBoundsException      (com.rubenroy.minimaltodo.eval_bm9)
===============================================================================
  No methods

com.rubenroy.minimaltodo.StoreRetrieveData       (com.rubenroy.minimaltodo.eval_hqy)
===============================================================================
  k    public loadFromFile()
  k    public static toJSONArray(java.util.ArrayList)
  q    public saveToFile(java.util.ArrayList)

com.rubenroy.minimaltodo.StoreRetrieveData$ParseException        (com.rubenroy.minimaltodo.eval_lm6)
===============================================================================
  No methods

com.rubenroy.minimaltodo.ToDoItem        (com.rubenroy.minimaltodo.eval_q_g)
===============================================================================
  b    public getToDoText()
  b    public setToDoDate(java.util.Date)
  c    public getIdentifier()
  e    public getToDoDate()
  j    public setTodoColor(int)
  p    public setHasReminder(boolean)
  r    public getTodoColor()
  w    public toJSON()
  w    public setToDoText(java.lang.String)
  z    public hasReminder()

com.rubenroy.minimaltodo.ToDoItem$IOException    (com.rubenroy.minimaltodo.eval_rl5)
===============================================================================
  No methods

com.rubenroy.minimaltodo.TodoNotificationService (com.rubenroy.minimaltodo.eval_ucb)
===============================================================================
  onHandleIntent   protected onHandleIntent(android.content.Intent)

com.rubenroy.minimaltodo.TodoNotificationService$IOException     (com.rubenroy.minimaltodo.eval_ar3)
===============================================================================
  No methods

com.rubenroy.minimaltodo.Utils   (com.rubenroy.minimaltodo.eval_x_q)
===============================================================================
  c    public static getToolbarHeight(android.content.Context)

com.rubenroy.minimaltodo.Utils$NullPointerException      (com.rubenroy.minimaltodo.eval_h3i)
===============================================================================
  No methods

com.wdullaer.materialdatetimepicker.AccessibleLinearLayout       (com.rubenroy.minimaltodo.eval_ema)
===============================================================================
  onInitializeAccessibilityEvent   public onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
  onInitializeAccessibilityNodeInfo    public onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)

com.wdullaer.materialdatetimepicker.AccessibleLinearLayout$IOException   (com.rubenroy.minimaltodo.eval_ds4)
===============================================================================
  No methods

com.wdullaer.materialdatetimepicker.AccessibleTextView   (com.rubenroy.minimaltodo.eval_wo4)
===============================================================================
  onInitializeAccessibilityEvent   public onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
  onInitializeAccessibilityNodeInfo    public onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)

com.wdullaer.materialdatetimepicker.AccessibleTextView$Exception (com.rubenroy.minimaltodo.eval__en)
===============================================================================
  No methods

com.wdullaer.materialdatetimepicker.BuildConfig  (com.rubenroy.minimaltodo.eval_dyx)
===============================================================================
  No methods

com.wdullaer.materialdatetimepicker.BuildConfig$ParseException   (com.rubenroy.minimaltodo.eval_c0y)
===============================================================================
  No methods

com.wdullaer.materialdatetimepicker.HapticFeedbackController     (com.rubenroy.minimaltodo.eval_u0h)
===============================================================================
  eval_e   private static checkGlobalSetting(android.content.Context)
  f        public stop()
  f        static access$100(com.wdullaer.materialdatetimepicker.HapticFeedbackController)
  m        static access$002(com.wdullaer.materialdatetimepicker.HapticFeedbackController,boolean)
  o        static access$200(android.content.Context)
  p        public start()
  s        private hasVibratePermission(android.content.Context)
  x        public tryVibrate()

com.wdullaer.materialdatetimepicker.HapticFeedbackController$1   (com.rubenroy.minimaltodo.eval_u0h$1)
===============================================================================
  onChange public onChange(boolean)

com.wdullaer.materialdatetimepicker.HapticFeedbackController$NullPointerException        (com.rubenroy.minimaltodo.eval_s91)
===============================================================================
  No methods

com.wdullaer.materialdatetimepicker.R
===============================================================================
  No methods

com.wdullaer.materialdatetimepicker.R$ParseException
===============================================================================
  No methods

com.wdullaer.materialdatetimepicker.R$color
===============================================================================
  No methods

com.wdullaer.materialdatetimepicker.R$dimen
===============================================================================
  No methods

com.wdullaer.materialdatetimepicker.R$drawable
===============================================================================
  No methods

com.wdullaer.materialdatetimepicker.R$id
===============================================================================
  No methods

com.wdullaer.materialdatetimepicker.R$layout
===============================================================================
  No methods

com.wdullaer.materialdatetimepicker.R$string
===============================================================================
  No methods

com.wdullaer.materialdatetimepicker.R$style
===============================================================================
  No methods

com.wdullaer.materialdatetimepicker.TypefaceHelper       (com.rubenroy.minimaltodo.eval_yj_)
===============================================================================
  e    public static get(android.content.Context,java.lang.String)

com.wdullaer.materialdatetimepicker.TypefaceHelper$NullPointerException  (com.rubenroy.minimaltodo.eval_npx)
===============================================================================
  No methods

com.wdullaer.materialdatetimepicker.Utils        (com.rubenroy.minimaltodo.eval_uix)
===============================================================================
  c    public static tryAccessibilityAnnounce(android.view.View,java.lang.CharSequence)
  c    public static darkenColor(int)
  i    public static isJellybeanOrLater()
  j    public static getPulseAnimator(android.view.View,float,float)
  v    public static getAccentColorFromThemeIfAvailable(android.content.Context)
  w    public static dpToPx(float,android.content.res.Resources)

com.wdullaer.materialdatetimepicker.Utils$ArrayOutOfBoundsException      (com.rubenroy.minimaltodo.eval__32)
===============================================================================
  No methods

com.wdullaer.materialdatetimepicker.date.AccessibleDateAnimator  (com.rubenroy.minimaltodo.eval_rfn)
===============================================================================
  v                                public setDateMillis(long)
  dispatchPopulateAccessibilityEvent   public dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)

com.wdullaer.materialdatetimepicker.date.AccessibleDateAnimator$IOException      (com.rubenroy.minimaltodo.eval_ce9)
===============================================================================
  No methods

com.wdullaer.materialdatetimepicker.date.DatePickerController    (com.rubenroy.minimaltodo.eval_ph3)
===============================================================================
  b        public abstract getMinYear()
  b        public abstract registerOnDateChangedListener(com.wdullaer.materialdatetimepicker.date.DatePickerDialog$OnDateChangedListener)
  c        public abstract getFirstDayOfWeek()
  eval_j   public abstract getMinDate()
  eval_l   public abstract getSelectedDay()
  eval_r   public abstract unregisterOnDateChangedListener(com.wdullaer.materialdatetimepicker.date.DatePickerDialog$OnDateChangedListener)
  eval_v   public abstract tryVibrate()
  g        public abstract getSelectableDays()
  l        public abstract getMaxDate()
  n        public abstract isThemeDark()
  n        public abstract onDayOfMonthSelected(int,int,int)
  r        public abstract getHighlightedDays()
  u        public abstract onYearSelected(int)
  v        public abstract getMaxYear()

com.wdullaer.materialdatetimepicker.date.DatePickerController$ArrayOutOfBoundsException  (com.rubenroy.minimaltodo.eval_jei)
===============================================================================
  No methods

com.wdullaer.materialdatetimepicker.date.DatePickerDialog        (com.rubenroy.minimaltodo.eval_k6u)
===============================================================================
  a                    public vibrate(boolean)
  b                    public getMinYear()
  b                    public registerOnDateChangedListener(com.wdullaer.materialdatetimepicker.date.DatePickerDialog$OnDateChangedListener)
  b                    public setSelectableDays(java.util.Calendar[])
  c                    public getFirstDayOfWeek()
  d                    public setThemeDark(boolean)
  d                    private setCurrentView(int)
  e                    static access$100(com.wdullaer.materialdatetimepicker.date.DatePickerDialog)
  e                    public setMinDate(java.util.Calendar)
  eval__               public getAccentColor()
  eval_e               public setOnDismissListener(android.content.DialogInterface$OnDismissListener)
  eval_j               public getMinDate()
  eval_l               public getSelectedDay()
  eval_r               public unregisterOnDateChangedListener(com.wdullaer.materialdatetimepicker.date.DatePickerDialog$OnDateChangedListener)
  eval_v               public tryVibrate()
  f                    public setYearRange(int,int)
  g                    public getSelectableDays()
  h                    public setAccentColor(int)
  j                    public static newInstance(com.wdullaer.materialdatetimepicker.date.DatePickerDialog$OnDateSetListener,int,int,int)
  l                    public getMaxDate()
  n                    public isThemeDark()
  n                    private updateDisplay(boolean)
  n                    public onDayOfMonthSelected(int,int,int)
  o                    private adjustDayInMonthIfNeeded(java.util.Calendar)
  p                    public setMaxDate(java.util.Calendar)
  q                    public setOnCancelListener(android.content.DialogInterface$OnCancelListener)
  r                    public getHighlightedDays()
  u                    public onYearSelected(int)
  v                    public getMaxYear()
  v                    public setHighlightedDays(java.util.Calendar[])
  w                    public initialize(com.wdullaer.materialdatetimepicker.date.DatePickerDialog$OnDateSetListener,int,int,int)
  x                    public dismissOnPause(boolean)
  y                    private updatePickers()
  y                    public setOnDateSetListener(com.wdullaer.materialdatetimepicker.date.DatePickerDialog$OnDateSetListener)
  y                    public setFirstDayOfWeek(int)
  z                    static access$000(com.wdullaer.materialdatetimepicker.date.DatePickerDialog)
  onCancel             public onCancel(android.content.DialogInterface)
  onClick              public onClick(android.view.View)
  onCreate             public onCreate(android.os.Bundle)
  onCreateView         public onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
  onDismiss            public onDismiss(android.content.DialogInterface)
  onPause              public onPause()
  onResume             public onResume()
  onSaveInstanceState  public onSaveInstanceState(android.os.Bundle)

com.wdullaer.materialdatetimepicker.date.DatePickerDialog$1      (com.rubenroy.minimaltodo.eval_k6u$1)
===============================================================================
  onClick  public onClick(android.view.View)

com.wdullaer.materialdatetimepicker.date.DatePickerDialog$2      (com.rubenroy.minimaltodo.eval_k6u$2)
===============================================================================
  onClick  public onClick(android.view.View)

com.wdullaer.materialdatetimepicker.date.DatePickerDialog$OnDateChangedListener  (com.rubenroy.minimaltodo.eval_k6u$_)
===============================================================================
  z    public abstract onDateChanged()

com.wdullaer.materialdatetimepicker.date.DatePickerDialog$OnDateSetListener      (com.rubenroy.minimaltodo.eval_k6u$e)
===============================================================================
  g    public abstract onDateSet(com.wdullaer.materialdatetimepicker.date.DatePickerDialog,int,int,int)

com.wdullaer.materialdatetimepicker.date.DatePickerDialog$ParseException (com.rubenroy.minimaltodo.eval_bmy)
===============================================================================
  No methods

com.wdullaer.materialdatetimepicker.date.DayPickerView   (com.rubenroy.minimaltodo.eval_jxr)
===============================================================================
  a                                public onChange()
  d                                public abstract createMonthAdapter(android.content.Context,com.wdullaer.materialdatetimepicker.date.DatePickerController)
  d                                private restoreAccessibilityFocus(com.wdullaer.materialdatetimepicker.date.MonthAdapter$CalendarDay)
  e                                protected refreshAdapter()
  eval_b                           public postSetSelection(int)
  eval_d                           private static getMonthAndYearString(com.wdullaer.materialdatetimepicker.date.MonthAdapter$CalendarDay)
  f                                protected setMonthDisplayed(com.wdullaer.materialdatetimepicker.date.MonthAdapter$CalendarDay)
  l                                public goTo(com.wdullaer.materialdatetimepicker.date.MonthAdapter$CalendarDay,boolean,boolean,boolean)
  r                                public getMostVisiblePosition()
  u                                protected setUpListView()
  u                                public setController(com.wdullaer.materialdatetimepicker.date.DatePickerController)
  w                                private findAccessibilityFocus()
  z                                public onDateChanged()
  z                                public init(android.content.Context)
  z                                public setAccentColor(int)
  layoutChildren                   protected layoutChildren()
  onInitializeAccessibilityEvent   public onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
  onInitializeAccessibilityNodeInfo    public onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
  onScroll                         public onScroll(android.widget.AbsListView,int,int,int)
  onScrollStateChanged             public onScrollStateChanged(android.widget.AbsListView,int)
  performAccessibilityAction       public performAccessibilityAction(int,android.os.Bundle)

com.wdullaer.materialdatetimepicker.date.DayPickerView$1 (com.rubenroy.minimaltodo.eval_jxr$1)
===============================================================================
  run  public run()

com.wdullaer.materialdatetimepicker.date.DayPickerView$Exception (com.rubenroy.minimaltodo.eval_sc0)
===============================================================================
  No methods

com.wdullaer.materialdatetimepicker.date.DayPickerView$ScrollStateRunnable       (com.rubenroy.minimaltodo.eval_jxr$l)
===============================================================================
  z    public doScrollStateChange(android.widget.AbsListView,int)
  run  public run()

com.wdullaer.materialdatetimepicker.date.MonthAdapter    (com.rubenroy.minimaltodo.eval_w8y)
===============================================================================
  a            public getSelectedDay()
  g            private isSelectedDayInMonth(int,int)
  i            protected init()
  j            public setAccentColor(int)
  m            public setSelectedDay(com.wdullaer.materialdatetimepicker.date.MonthAdapter$CalendarDay)
  v            public onDayClick(com.wdullaer.materialdatetimepicker.date.MonthView,com.wdullaer.materialdatetimepicker.date.MonthAdapter$CalendarDay)
  w            public abstract createMonthView(android.content.Context)
  z            protected onDayTapped(com.wdullaer.materialdatetimepicker.date.MonthAdapter$CalendarDay)
  getCount     public getCount()
  getItem      public getItem(int)
  getItemId    public getItemId(int)
  getView      public getView(int,android.view.View,android.view.ViewGroup)
  hasStableIds public hasStableIds()

com.wdullaer.materialdatetimepicker.date.MonthAdapter$CalendarDay        (com.rubenroy.minimaltodo.eval_w8y$c)
===============================================================================
  eval_v   public setDay(int,int,int)
  h        public getYear()
  i        public set(com.wdullaer.materialdatetimepicker.date.MonthAdapter$CalendarDay)
  n        public getDay()
  t        private setTime(long)
  w        public getMonth()

com.wdullaer.materialdatetimepicker.date.MonthAdapter$IOException        (com.rubenroy.minimaltodo.eval_tyv)
===============================================================================
  No methods

com.wdullaer.materialdatetimepicker.date.MonthView       (com.rubenroy.minimaltodo.eval_dqf)
===============================================================================
  a                        static access$000(com.wdullaer.materialdatetimepicker.date.MonthView,int)
  c                        protected initView()
  d                        public abstract drawMonthDay(android.graphics.Canvas,int,int,int,int,int,int,int,int,int)
  d                        private isSelectable(int,int,int)
  e                        public setOnDayClickListener(com.wdullaer.materialdatetimepicker.date.MonthView$OnDayClickListener)
  eval_c                   public getAccessibilityFocus()
  eval_d                   protected findDayOffset()
  eval_g                   private getMonthAndYearString()
  eval_y                   public getYear()
  f                        public getMonth()
  k                        protected drawMonthNums(android.graphics.Canvas)
  k                        public restoreAccessibilityFocus(com.wdullaer.materialdatetimepicker.date.MonthAdapter$CalendarDay)
  m                        public setSelectedDay(int)
  m                        private isBeforeMin(int,int,int)
  n                        protected drawMonthDayLabels(android.graphics.Canvas)
  n                        public setMonthParams(java.util.HashMap)
  o                        protected getInternalDayFromLocation(float,float)
  p                        protected isHighlighted(int,int,int)
  q                        private sameDay(int,java.util.Calendar)
  r                        public reuse()
  s                        protected getMonthHeaderSize()
  s                        private onDayClick(int)
  t                        public clearAccessibilityFocus()
  u                        protected drawMonthTitle(android.graphics.Canvas)
  w                        private isAfterMax(int,int,int)
  x                        protected getMonthViewTouchHelper()
  x                        public getDayFromLocation(float,float)
  x                        protected isOutOfRange(int,int,int)
  y                        public setDatePickerController(com.wdullaer.materialdatetimepicker.date.DatePickerController)
  z                        private calculateNumRows()
  z                        public setAccentColor(int)
  dispatchHoverEvent       public dispatchHoverEvent(android.view.MotionEvent)
  onDraw                   protected onDraw(android.graphics.Canvas)
  onMeasure                protected onMeasure(int,int)
  onSizeChanged            protected onSizeChanged(int,int,int,int)
  onTouchEvent             public onTouchEvent(android.view.MotionEvent)
  setAccessibilityDelegate public setAccessibilityDelegate(android.view.View$AccessibilityDelegate)

com.wdullaer.materialdatetimepicker.date.MonthView$MonthViewTouchHelper  (com.rubenroy.minimaltodo.eval_dqf$t)
===============================================================================
  b        protected getVisibleVirtualViews(java.util.List)
  eval_d   protected onPopulateNodeForVirtualView(int,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
  i        protected getItemBounds(int,android.graphics.Rect)
  k        protected onPerformActionForVirtualView(int,int,android.os.Bundle)
  p        protected getItemDescription(int)
  q        public setFocusedVirtualView(int)
  s        protected onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent)
  w        protected getVirtualViewAt(float,float)
  x        public clearFocusedVirtualView()

com.wdullaer.materialdatetimepicker.date.MonthView$NullPointerException  (com.rubenroy.minimaltodo.eval_cly)
===============================================================================
  No methods

com.wdullaer.materialdatetimepicker.date.MonthView$OnDayClickListener    (com.rubenroy.minimaltodo.eval_dqf$r)
===============================================================================
  v    public abstract onDayClick(com.wdullaer.materialdatetimepicker.date.MonthView,com.wdullaer.materialdatetimepicker.date.MonthAdapter$CalendarDay)

com.wdullaer.materialdatetimepicker.date.SimpleDayPickerView     (com.rubenroy.minimaltodo.eval_tt2)
===============================================================================
  d    public createMonthAdapter(android.content.Context,com.wdullaer.materialdatetimepicker.date.DatePickerController)

com.wdullaer.materialdatetimepicker.date.SimpleDayPickerView$NullPointerException        (com.rubenroy.minimaltodo.eval_xdj)
===============================================================================
  No methods

com.wdullaer.materialdatetimepicker.date.SimpleMonthAdapter      (com.rubenroy.minimaltodo.eval_bp6)
===============================================================================
  w    public createMonthView(android.content.Context)

com.wdullaer.materialdatetimepicker.date.SimpleMonthAdapter$Exception    (com.rubenroy.minimaltodo.eval_wrg)
===============================================================================
  No methods

com.wdullaer.materialdatetimepicker.date.SimpleMonthView (com.rubenroy.minimaltodo.eval_owu)
===============================================================================
  d    public drawMonthDay(android.graphics.Canvas,int,int,int,int,int,int,int,int,int)

com.wdullaer.materialdatetimepicker.date.SimpleMonthView$ArrayOutOfBoundsException       (com.rubenroy.minimaltodo.eval_fsd)
===============================================================================
  No methods

com.wdullaer.materialdatetimepicker.date.TextViewWithCircularIndicator   (com.rubenroy.minimaltodo.eval__0f)
===============================================================================
  f                        public setAccentColor(int)
  g                        public drawIndicator(boolean)
  g                        private createTextColor(int)
  v                        private init()
  getContentDescription    public getContentDescription()
  onDraw                   public onDraw(android.graphics.Canvas)

com.wdullaer.materialdatetimepicker.date.TextViewWithCircularIndicator$NullPointerException      (com.rubenroy.minimaltodo.eval__xw)
===============================================================================
  No methods

com.wdullaer.materialdatetimepicker.date.YearPickerView  (com.rubenroy.minimaltodo.eval_o3x)
===============================================================================
  c                                public getFirstPositionOffset()
  e                                static access$302(com.wdullaer.materialdatetimepicker.date.YearPickerView,com.wdullaer.materialdatetimepicker.date.TextViewWithCircularIndicator)
  e                                public setAccentColor(int)
  g                                private static getYearFromTextView(android.widget.TextView)
  h                                static access$100(android.widget.TextView)
  h                                public postSetSelectionCentered(int)
  i                                private init(android.content.Context)
  n                                static access$000(com.wdullaer.materialdatetimepicker.date.YearPickerView)
  n                                public postSetSelectionFromTop(int,int)
  x                                static access$200(com.wdullaer.materialdatetimepicker.date.YearPickerView)
  z                                public onDateChanged()
  onInitializeAccessibilityEvent   public onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
  onItemClick                      public onItemClick(android.widget.AdapterView,android.view.View,int,long)

com.wdullaer.materialdatetimepicker.date.YearPickerView$1        (com.rubenroy.minimaltodo.eval_o3x$1)
===============================================================================
  run  public run()

com.wdullaer.materialdatetimepicker.date.YearPickerView$NullPointerException     (com.rubenroy.minimaltodo.eval_h50)
===============================================================================
  No methods

com.wdullaer.materialdatetimepicker.date.YearPickerView$YearAdapter      (com.rubenroy.minimaltodo.eval_o3x$l)
===============================================================================
  getView  public getView(int,android.view.View,android.view.ViewGroup)

com.wdullaer.materialdatetimepicker.time.AmPmCirclesView (com.rubenroy.minimaltodo.eval_oll)
===============================================================================
  f        public setAmOrPmPressed(int)
  i        public getIsTouchingAmOrPm(float,float)
  j        public initialize(android.content.Context,int)
  s        public setAccentColor(int)
  x        setTheme(android.content.Context,boolean)
  x        public setAmOrPm(int)
  onDraw   public onDraw(android.graphics.Canvas)

com.wdullaer.materialdatetimepicker.time.AmPmCirclesView$ArrayOutOfBoundsException       (com.rubenroy.minimaltodo.eval_mzy)
===============================================================================
  No methods

com.wdullaer.materialdatetimepicker.time.CircleView      (com.rubenroy.minimaltodo.eval_oxc)
===============================================================================
  c        setAccentColor(int)
  g        public initialize(android.content.Context,boolean)
  i        setTheme(android.content.Context,boolean)
  onDraw   public onDraw(android.graphics.Canvas)

com.wdullaer.materialdatetimepicker.time.CircleView$ArrayOutOfBoundsException    (com.rubenroy.minimaltodo.eval_wq0)
===============================================================================
  No methods

com.wdullaer.materialdatetimepicker.time.RadialPickerLayout      (com.rubenroy.minimaltodo.eval_ee4)
===============================================================================
  a                                public trySettingInputEnabled(boolean)
  b                                public getMinutes()
  eval_e                           static access$600(com.wdullaer.materialdatetimepicker.time.RadialPickerLayout)
  eval_l                           private preparePrefer30sMap()
  eval_p                           private snapPrefer30s(int)
  h                                public getCurrentItemShowing()
  i                                private static snapOnly30s(int,int)
  l                                static access$300(com.wdullaer.materialdatetimepicker.time.RadialPickerLayout)
  l                                private reselectSelector(int,boolean,boolean,boolean)
  m                                public setOnValueSelectedListener(com.wdullaer.materialdatetimepicker.time.RadialPickerLayout$OnValueSelectedListener)
  m                                public setAccentColor(int)
  n                                static access$202(com.wdullaer.materialdatetimepicker.time.RadialPickerLayout,boolean)
  n                                static access$400(com.wdullaer.materialdatetimepicker.time.RadialPickerLayout,int,boolean,boolean,boolean)
  o                                public setAmOrPm(int)
  p                                static access$000(com.wdullaer.materialdatetimepicker.time.RadialPickerLayout)
  p                                private setItem(int,int)
  q                                public getIsCurrentlyAmOrPm()
  q                                private getDegreesFromCoords(float,float,boolean,java.lang.Boolean[])
  r                                public getHours()
  r                                private setValueForItem(int,int)
  s                                public setCurrentItemShowing(int,boolean)
  u                                private getCurrentlyShowingValue()
  u                                public initialize(android.content.Context,com.wdullaer.materialdatetimepicker.time.TimePickerDialog,int,int,boolean)
  v                                setTheme(android.content.Context,boolean)
  v                                static access$502(com.wdullaer.materialdatetimepicker.time.RadialPickerLayout,int)
  v                                private isHourInnerCircle(int)
  y                                public setTime(int,int)
  z                                static access$100(com.wdullaer.materialdatetimepicker.time.RadialPickerLayout)
  dispatchPopulateAccessibilityEvent   public dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
  onInitializeAccessibilityNodeInfo    public onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
  onTouch                          public onTouch(android.view.View,android.view.MotionEvent)
  performAccessibilityAction       public performAccessibilityAction(int,android.os.Bundle)

com.wdullaer.materialdatetimepicker.time.RadialPickerLayout$1    (com.rubenroy.minimaltodo.eval_ee4$1)
===============================================================================
  run  public run()

com.wdullaer.materialdatetimepicker.time.RadialPickerLayout$2    (com.rubenroy.minimaltodo.eval_ee4$2)
===============================================================================
  run  public run()

com.wdullaer.materialdatetimepicker.time.RadialPickerLayout$Exception    (com.rubenroy.minimaltodo.eval_xd_)
===============================================================================
  No methods

com.wdullaer.materialdatetimepicker.time.RadialPickerLayout$OnValueSelectedListener      (com.rubenroy.minimaltodo.eval_ee4$r)
===============================================================================
  x    public abstract onValueSelected(int,int,boolean)

com.wdullaer.materialdatetimepicker.time.RadialSelectorView      (com.rubenroy.minimaltodo.eval_j3x)
===============================================================================
  a                        public setSelection(int,boolean,boolean)
  d                        setTheme(android.content.Context,boolean)
  eval_g                   public setAnimationRadiusMultiplier(float)
  f                        public getReappearAnimator()
  i                        public getDisappearAnimator()
  m                        public initialize(android.content.Context,boolean,boolean,boolean,int,boolean)
  o                        public setAccentColor(int)
  u                        public getDegreesFromCoords(float,float,boolean,java.lang.Boolean[])
  hasOverlappingRendering  public hasOverlappingRendering()
  onDraw                   public onDraw(android.graphics.Canvas)

com.wdullaer.materialdatetimepicker.time.RadialSelectorView$1    (com.rubenroy.minimaltodo.eval_j3x$1)
===============================================================================
  No methods

com.wdullaer.materialdatetimepicker.time.RadialSelectorView$Exception    (com.rubenroy.minimaltodo.eval_hom)
===============================================================================
  No methods

com.wdullaer.materialdatetimepicker.time.RadialSelectorView$InvalidateUpdateListener     (com.rubenroy.minimaltodo.eval_j3x$c)
===============================================================================
  onAnimationUpdate    public onAnimationUpdate(android.animation.ValueAnimator)

com.wdullaer.materialdatetimepicker.time.RadialTextsView (com.rubenroy.minimaltodo.eval_jnx)
===============================================================================
  a                        private drawTexts(android.graphics.Canvas,float,android.graphics.Typeface,java.lang.String[],float[],float[])
  g                        private calculateGridSizes(float,float,float,float,float[],float[])
  k                        public setAnimationRadiusMultiplier(float)
  l                        private renderAnimations()
  o                        public initialize(android.content.res.Resources,java.lang.String[],java.lang.String[],boolean,boolean)
  p                        setTheme(android.content.Context,boolean)
  t                        public getReappearAnimator()
  t                        protected setSelection(int)
  w                        public getDisappearAnimator()
  hasOverlappingRendering  public hasOverlappingRendering()
  onDraw                   public onDraw(android.graphics.Canvas)

com.wdullaer.materialdatetimepicker.time.RadialTextsView$1       (com.rubenroy.minimaltodo.eval_jnx$1)
===============================================================================
  No methods

com.wdullaer.materialdatetimepicker.time.RadialTextsView$ArrayOutOfBoundsException       (com.rubenroy.minimaltodo.eval_og8)
===============================================================================
  No methods

com.wdullaer.materialdatetimepicker.time.RadialTextsView$InvalidateUpdateListener        (com.rubenroy.minimaltodo.eval_jnx$p)
===============================================================================
  onAnimationUpdate    public onAnimationUpdate(android.animation.ValueAnimator)

com.wdullaer.materialdatetimepicker.time.TimePickerDialog        (com.rubenroy.minimaltodo.eval_a7y)
===============================================================================
  a                    private static getValFromKeyCode(int)
  b                    private setHour(int,boolean)
  d                    public isThemeDark()
  e                    public initialize(com.wdullaer.materialdatetimepicker.time.TimePickerDialog$OnTimeSetListener,int,int,boolean)
  eval_h               public tryVibrate()
  eval_l               private addKeyIfLegal(int)
  eval_q               private deleteLastTypedKey()
  g                    public getTitle()
  g                    public dismissOnPause(boolean)
  i                    private generateLegalTimesTree()
  i                    public setOnTimeSetListener(com.wdullaer.materialdatetimepicker.time.TimePickerDialog$OnTimeSetListener)
  i                    private setMinute(int)
  k                    public setOnDismissListener(android.content.DialogInterface$OnDismissListener)
  l                    private updateDisplay(boolean)
  l                    static access$100(com.wdullaer.materialdatetimepicker.time.TimePickerDialog,int,boolean,boolean,boolean)
  l                    private getEnteredTime(java.lang.Boolean[])
  m                    static access$400(com.wdullaer.materialdatetimepicker.time.TimePickerDialog,boolean)
  m                    private setCurrentItemShowing(int,boolean,boolean,boolean)
  n                    static access$700(com.wdullaer.materialdatetimepicker.time.TimePickerDialog,int)
  o                    public setThemeDark(boolean)
  o                    static access$600(com.wdullaer.materialdatetimepicker.time.TimePickerDialog)
  o                    public setAccentColor(int)
  p                    public vibrate(boolean)
  q                    public setTitle(java.lang.String)
  r                    public static newInstance(com.wdullaer.materialdatetimepicker.time.TimePickerDialog$OnTimeSetListener,int,int,boolean)
  s                    private tryStartingKbMode(int)
  u                    private finishKbMode(boolean)
  u                    static access$800(com.wdullaer.materialdatetimepicker.time.TimePickerDialog,int)
  u                    private processKeyUp(int)
  v                    private isTypedTimeFullyLegal()
  w                    public setOnCancelListener(android.content.DialogInterface$OnCancelListener)
  w                    static access$500(com.wdullaer.materialdatetimepicker.time.TimePickerDialog)
  x                    static access$200(com.wdullaer.materialdatetimepicker.time.TimePickerDialog)
  x                    private updateAmPmDisplay(int)
  x                    public setStartTime(int,int)
  x                    public onValueSelected(int,int,boolean)
  y                    private isTypedTimeLegalSoFar()
  y                    static access$300(com.wdullaer.materialdatetimepicker.time.TimePickerDialog)
  y                    private getAmOrPmKeyCode(int)
  onCancel             public onCancel(android.content.DialogInterface)
  onCreate             public onCreate(android.os.Bundle)
  onCreateView         public onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
  onDismiss            public onDismiss(android.content.DialogInterface)
  onPause              public onPause()
  onResume             public onResume()
  onSaveInstanceState  public onSaveInstanceState(android.os.Bundle)

com.wdullaer.materialdatetimepicker.time.TimePickerDialog$1      (com.rubenroy.minimaltodo.eval_a7y$1)
===============================================================================
  onClick  public onClick(android.view.View)

com.wdullaer.materialdatetimepicker.time.TimePickerDialog$2      (com.rubenroy.minimaltodo.eval_a7y$2)
===============================================================================
  onClick  public onClick(android.view.View)

com.wdullaer.materialdatetimepicker.time.TimePickerDialog$3      (com.rubenroy.minimaltodo.eval_a7y$3)
===============================================================================
  onClick  public onClick(android.view.View)

com.wdullaer.materialdatetimepicker.time.TimePickerDialog$4      (com.rubenroy.minimaltodo.eval_a7y$4)
===============================================================================
  onClick  public onClick(android.view.View)

com.wdullaer.materialdatetimepicker.time.TimePickerDialog$5      (com.rubenroy.minimaltodo.eval_a7y$5)
===============================================================================
  onClick  public onClick(android.view.View)

com.wdullaer.materialdatetimepicker.time.TimePickerDialog$KeyboardListener       (com.rubenroy.minimaltodo.eval_a7y$q)
===============================================================================
  onKey    public onKey(android.view.View,int,android.view.KeyEvent)

com.wdullaer.materialdatetimepicker.time.TimePickerDialog$Node   (com.rubenroy.minimaltodo.eval_a7y$m)
===============================================================================
  h    public containsKey(int)
  s    public addChild(com.wdullaer.materialdatetimepicker.time.TimePickerDialog$Node)
  z    public canReach(int)

com.wdullaer.materialdatetimepicker.time.TimePickerDialog$OnTimeSetListener      (com.rubenroy.minimaltodo.eval_a7y$a)
===============================================================================
  h    public abstract onTimeSet(com.wdullaer.materialdatetimepicker.time.RadialPickerLayout,int,int)

com.wdullaer.materialdatetimepicker.time.TimePickerDialog$ParseException (com.rubenroy.minimaltodo.eval_q54)
===============================================================================
  No methods

fr.ganfra.materialspinner.BuildConfig    (com.rubenroy.minimaltodo.eval_qzv)
===============================================================================
  No methods

fr.ganfra.materialspinner.BuildConfig$ParseException     (com.rubenroy.minimaltodo.eval_ltv)
===============================================================================
  No methods

fr.ganfra.materialspinner.MaterialSpinner        (com.rubenroy.minimaltodo.eval_dlz)
===============================================================================
  a                            private initAttributes(android.content.Context,android.util.AttributeSet)
  b                            public getHint()
  b                            public setErrorColor(int)
  d                            static access$800(fr.ganfra.materialspinner.MaterialSpinner)
  e                            public getErrorColor()
  e                            private setErrorLabelPosX(int)
  eval_a                       public setError(java.lang.CharSequence)
  eval_c                       static access$700(fr.ganfra.materialspinner.MaterialSpinner)
  eval_g                       private updateBottomPadding()
  eval_i                       private initDimensions()
  eval_k                       private getErrorLabelPosX()
  eval_q                       private prepareBottomPadding()
  eval_t                       private setPadding()
  eval_u                       static access$600(fr.ganfra.materialspinner.MaterialSpinner)
  eval_x                       private initPaintObjects()
  eval_y                       private getCurrentNbErrorLines()
  eval_z                       private startErrorScrollingAnimator()
  eval_z                       static access$500(fr.ganfra.materialspinner.MaterialSpinner)
  f                            private initFloatingLabelAnimator()
  f                            public setFloatingLabelText(java.lang.CharSequence)
  h                            private init(android.content.Context,android.util.AttributeSet)
  i                            public getBaseColor()
  j                            private needScrollingAnimation()
  k                            private initPadding()
  k                            private initAdapter(android.content.Context)
  k                            private drawSelector(android.graphics.Canvas,int,int)
  k                            public setBaseColor(int)
  l                            public getError()
  m                            private hideFloatingLabel()
  n                            private pxToDp(float)
  n                            public setPaddingSafe(int,int,int,int)
  o                            private getFloatingLabelPercent()
  o                            static access$300(fr.ganfra.materialspinner.MaterialSpinner)
  o                            public setHighlightColor(int)
  p                            private showFloatingLabel()
  q                            public getFloatingLabelText()
  r                            private setCurrentNbErrorLines(float)
  r                            static access$400(fr.ganfra.materialspinner.MaterialSpinner)
  r                            public setHint(int)
  s                            private setFloatingLabelPercent(float)
  t                            private initOnItemSelectedListener()
  t                            static access$000(fr.ganfra.materialspinner.MaterialSpinner)
  t                            public setError(int)
  t                            public setHint(java.lang.CharSequence)
  u                            static access$200(fr.ganfra.materialspinner.MaterialSpinner)
  v                            static access$100(fr.ganfra.materialspinner.MaterialSpinner)
  v                            public setFloatingLabelText(int)
  w                            private dpToPx(float)
  w                            static access$502(fr.ganfra.materialspinner.MaterialSpinner,int)
  x                            public getHighlightColor()
  y                            private startErrorMultilineAnimator(float)
  onAnimationUpdate            public onAnimationUpdate(com.nineoldandroids.animation.ValueAnimator)
  onDraw                       protected onDraw(android.graphics.Canvas)
  onTouchEvent                 public onTouchEvent(android.view.MotionEvent)
  setAdapter                   public volatile setAdapter(android.widget.Adapter)
  setAdapter                   public setAdapter(android.widget.SpinnerAdapter)
  setEnabled                   public setEnabled(boolean)
  setOnItemSelectedListener    public setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
  setPadding                   public setPadding(int,int,int,int)

fr.ganfra.materialspinner.MaterialSpinner$1      (com.rubenroy.minimaltodo.eval_dlz$1)
===============================================================================
  onItemSelected       public onItemSelected(android.widget.AdapterView,android.view.View,int,long)
  onNothingSelected    public onNothingSelected(android.widget.AdapterView)

fr.ganfra.materialspinner.MaterialSpinner$ArrayOutOfBoundsException      (com.rubenroy.minimaltodo.eval_kcv)
===============================================================================
  No methods

fr.ganfra.materialspinner.MaterialSpinner$HintAdapter    (com.rubenroy.minimaltodo.eval_dlz$p)
===============================================================================
  eval_u           private getHintView(android.view.ViewGroup,boolean)
  z                private buildView(int,android.view.View,android.view.ViewGroup,boolean)
  getCount         public getCount()
  getDropDownView  public getDropDownView(int,android.view.View,android.view.ViewGroup)
  getItem          public getItem(int)
  getItemId        public getItemId(int)
  getItemViewType  public getItemViewType(int)
  getView          public getView(int,android.view.View,android.view.ViewGroup)
  getViewTypeCount public getViewTypeCount()

fr.ganfra.materialspinner.R
===============================================================================
  No methods

fr.ganfra.materialspinner.R$ParseException
===============================================================================
  No methods

fr.ganfra.materialspinner.R$anim
===============================================================================
  No methods

fr.ganfra.materialspinner.R$attr
===============================================================================
  No methods

fr.ganfra.materialspinner.R$bool
===============================================================================
  No methods

fr.ganfra.materialspinner.R$color
===============================================================================
  No methods

fr.ganfra.materialspinner.R$dimen
===============================================================================
  No methods

fr.ganfra.materialspinner.R$drawable
===============================================================================
  No methods

fr.ganfra.materialspinner.R$id
===============================================================================
  No methods

fr.ganfra.materialspinner.R$integer
===============================================================================
  No methods

fr.ganfra.materialspinner.R$layout
===============================================================================
  No methods

fr.ganfra.materialspinner.R$string
===============================================================================
  No methods

fr.ganfra.materialspinner.R$style
===============================================================================
  No methods

fr.ganfra.materialspinner.R$styleable
===============================================================================
  No methods

uk.co.chrisjenx.calligraphy.BuildConfig  (com.rubenroy.minimaltodo.eval_l8z)
===============================================================================
  No methods

uk.co.chrisjenx.calligraphy.BuildConfig$Exception        (com.rubenroy.minimaltodo.eval_gav)
===============================================================================
  No methods

uk.co.chrisjenx.calligraphy.CalligraphyActivityFactory   (com.rubenroy.minimaltodo.eval_xrr)
===============================================================================
  c    public abstract onActivityCreateView(android.view.View,android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)

uk.co.chrisjenx.calligraphy.CalligraphyActivityFactory$Exception (com.rubenroy.minimaltodo.eval___4)
===============================================================================
  No methods

uk.co.chrisjenx.calligraphy.CalligraphyConfig    (com.rubenroy.minimaltodo.eval_gar)
===============================================================================
  d        public isReflection()
  e        public static initDefault(uk.co.chrisjenx.calligraphy.CalligraphyConfig)
  eval_q   public isCustomViewCreation()
  k        public static get()
  l        getClassStyles()
  q        public getFontPath()
  t        public getAttrId()
  z        isFontSet()

uk.co.chrisjenx.calligraphy.CalligraphyConfig$Builder    (com.rubenroy.minimaltodo.eval_gar$i)
===============================================================================
  a        static access$200(uk.co.chrisjenx.calligraphy.CalligraphyConfig$Builder)
  b        static access$400(uk.co.chrisjenx.calligraphy.CalligraphyConfig$Builder)
  eval_i   static access$500(uk.co.chrisjenx.calligraphy.CalligraphyConfig$Builder)
  h        public setFontAttrId(int)
  o        static access$100(uk.co.chrisjenx.calligraphy.CalligraphyConfig$Builder)
  p        public addCustomStyle(java.lang.Class,int)
  p        static access$300(uk.co.chrisjenx.calligraphy.CalligraphyConfig$Builder)
  s        static access$000(uk.co.chrisjenx.calligraphy.CalligraphyConfig$Builder)
  u        public disablePrivateFactoryInjection()
  x        public setDefaultFontPath(java.lang.String)
  y        public build()
  z        public disableCustomViewInflation()

uk.co.chrisjenx.calligraphy.CalligraphyConfig$NullPointerException       (com.rubenroy.minimaltodo.eval_v1_)
===============================================================================
  No methods

uk.co.chrisjenx.calligraphy.CalligraphyContextWrapper    (com.rubenroy.minimaltodo.eval_x1b)
===============================================================================
  d                static get(android.app.Activity)
  g                public static onActivityCreateView(android.app.Activity,android.view.View,android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
  x                public static wrap(android.content.Context)
  getSystemService public getSystemService(java.lang.String)

uk.co.chrisjenx.calligraphy.CalligraphyContextWrapper$IOException        (com.rubenroy.minimaltodo.eval_ow_)
===============================================================================
  No methods

uk.co.chrisjenx.calligraphy.CalligraphyFactory   (com.rubenroy.minimaltodo.eval__2l)
===============================================================================
  a        onViewCreatedInternal(android.view.View,android.content.Context,android.util.AttributeSet)
  eval_e   protected static matchesResourceIdName(android.view.View,java.lang.String)
  h        protected static parentIsToolbarV7(android.view.View)
  h        public onViewCreated(android.view.View,android.content.Context,android.util.AttributeSet)
  q        protected static getStyleForTextView(android.widget.TextView)
  t        protected static isActionBarSubTitle(android.widget.TextView)
  z        protected static isActionBarTitle(android.widget.TextView)

uk.co.chrisjenx.calligraphy.CalligraphyFactory$1 (com.rubenroy.minimaltodo.eval__2l$1)
===============================================================================
  onGlobalLayout   public onGlobalLayout()

uk.co.chrisjenx.calligraphy.CalligraphyFactory$2 (com.rubenroy.minimaltodo.eval__2l$2)
===============================================================================
  onGlobalLayout   public onGlobalLayout()

uk.co.chrisjenx.calligraphy.CalligraphyFactory$ArrayOutOfBoundsException (com.rubenroy.minimaltodo.eval_ahs)
===============================================================================
  No methods

uk.co.chrisjenx.calligraphy.CalligraphyLayoutInflater    (com.rubenroy.minimaltodo.eval_l2w)
===============================================================================
  a                private setPrivateFactoryInternal()
  c                public onActivityCreateView(android.view.View,android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
  e                private setUpLayoutFactories(boolean)
  w                static access$000(uk.co.chrisjenx.calligraphy.CalligraphyLayoutInflater,android.view.View,android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
  z                private createCustomViewInternal(android.view.View,android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
  cloneInContext   public cloneInContext(android.content.Context)
  inflate          public inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup,boolean)
  onCreateView     protected onCreateView(android.view.View,java.lang.String,android.util.AttributeSet)
  onCreateView     protected onCreateView(java.lang.String,android.util.AttributeSet)
  setFactory       public setFactory(android.view.LayoutInflater$Factory)
  setFactory2      public setFactory2(android.view.LayoutInflater$Factory2)

uk.co.chrisjenx.calligraphy.CalligraphyLayoutInflater$IOException        (com.rubenroy.minimaltodo.eval_wbi)
===============================================================================
  No methods

uk.co.chrisjenx.calligraphy.CalligraphyLayoutInflater$PrivateWrapperFactory2     (com.rubenroy.minimaltodo.eval_l2w$k)
===============================================================================
  onCreateView public onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)

uk.co.chrisjenx.calligraphy.CalligraphyLayoutInflater$WrapperFactory     (com.rubenroy.minimaltodo.eval_l2w$f)
===============================================================================
  onCreateView public onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)

uk.co.chrisjenx.calligraphy.CalligraphyLayoutInflater$WrapperFactory2    (com.rubenroy.minimaltodo.eval_l2w$g)
===============================================================================
  onCreateView public onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
  onCreateView public onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)

uk.co.chrisjenx.calligraphy.CalligraphyTypefaceSpan      (com.rubenroy.minimaltodo.eval_ka7)
===============================================================================
  s                    private apply(android.graphics.Paint)
  updateDrawState      public updateDrawState(android.text.TextPaint)
  updateMeasureState   public updateMeasureState(android.text.TextPaint)

uk.co.chrisjenx.calligraphy.CalligraphyTypefaceSpan$ArrayOutOfBoundsException    (com.rubenroy.minimaltodo.eval_kgn)
===============================================================================
  No methods

uk.co.chrisjenx.calligraphy.CalligraphyUtils     (com.rubenroy.minimaltodo.eval_nge)
===============================================================================
  c        static pullFontPathFromTheme(android.content.Context,int,int,int)
  eval_c   static applyFontToTextView(android.content.Context,android.widget.TextView,java.lang.String,boolean)
  eval_p   static pullFontPathFromTheme(android.content.Context,int,int)
  f        public static applyFontToTextView(android.content.Context,android.widget.TextView,java.lang.String)
  f        public static applyFontToTextView(android.content.Context,android.widget.TextView,uk.co.chrisjenx.calligraphy.CalligraphyConfig,java.lang.String)
  h        static canCheckForV7Toolbar()
  j        static pullFontPathFromStyle(android.content.Context,android.util.AttributeSet,int)
  k        static pullFontPathFromTextAppearance(android.content.Context,android.util.AttributeSet,int)
  k        public static applyFontToTextView(android.widget.TextView,android.graphics.Typeface)
  o        public static applyFontToTextView(android.widget.TextView,android.graphics.Typeface,boolean)
  r        static applyFontToTextView(android.content.Context,android.widget.TextView,uk.co.chrisjenx.calligraphy.CalligraphyConfig)
  s        static pullFontPathFromView(android.content.Context,android.util.AttributeSet,int)
  s        static applyFontToTextView(android.content.Context,android.widget.TextView,uk.co.chrisjenx.calligraphy.CalligraphyConfig,java.lang.String,boolean)
  v        static applyFontToTextView(android.content.Context,android.widget.TextView,uk.co.chrisjenx.calligraphy.CalligraphyConfig,boolean)
  y        public static applyTypefaceSpan(java.lang.CharSequence,android.graphics.Typeface)

uk.co.chrisjenx.calligraphy.CalligraphyUtils$1   (com.rubenroy.minimaltodo.eval_nge$1)
===============================================================================
  afterTextChanged     public afterTextChanged(android.text.Editable)
  beforeTextChanged    public beforeTextChanged(java.lang.CharSequence,int,int,int)
  onTextChanged        public onTextChanged(java.lang.CharSequence,int,int,int)

uk.co.chrisjenx.calligraphy.CalligraphyUtils$Exception   (com.rubenroy.minimaltodo.eval_gfy)
===============================================================================
  No methods

uk.co.chrisjenx.calligraphy.R
===============================================================================
  No methods

uk.co.chrisjenx.calligraphy.R$Exception
===============================================================================
  No methods

uk.co.chrisjenx.calligraphy.R$anim
===============================================================================
  No methods

uk.co.chrisjenx.calligraphy.R$attr
===============================================================================
  No methods

uk.co.chrisjenx.calligraphy.R$bool
===============================================================================
  No methods

uk.co.chrisjenx.calligraphy.R$color
===============================================================================
  No methods

uk.co.chrisjenx.calligraphy.R$dimen
===============================================================================
  No methods

uk.co.chrisjenx.calligraphy.R$drawable
===============================================================================
  No methods

uk.co.chrisjenx.calligraphy.R$id
===============================================================================
  No methods

uk.co.chrisjenx.calligraphy.R$integer
===============================================================================
  No methods

uk.co.chrisjenx.calligraphy.R$layout
===============================================================================
  No methods

uk.co.chrisjenx.calligraphy.R$string
===============================================================================
  No methods

uk.co.chrisjenx.calligraphy.R$style
===============================================================================
  No methods

uk.co.chrisjenx.calligraphy.R$styleable
===============================================================================
  No methods

uk.co.chrisjenx.calligraphy.ReflectionUtils      (com.rubenroy.minimaltodo.eval_tcc)
===============================================================================
  c    static getMethod(java.lang.Class,java.lang.String)
  j    static getField(java.lang.Class,java.lang.String)
  p    static transient invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
  s    static setValue(java.lang.reflect.Field,java.lang.Object,java.lang.Object)
  x    static getValue(java.lang.reflect.Field,java.lang.Object)

uk.co.chrisjenx.calligraphy.ReflectionUtils$IOException  (com.rubenroy.minimaltodo.eval__lx)
===============================================================================
  No methods

uk.co.chrisjenx.calligraphy.TypefaceUtils        (com.rubenroy.minimaltodo.eval_lsx)
===============================================================================
  eval_s   public static getSpan(android.graphics.Typeface)
  u        public static isLoaded(android.graphics.Typeface)
  y        public static load(android.content.res.AssetManager,java.lang.String)

uk.co.chrisjenx.calligraphy.TypefaceUtils$ArrayOutOfBoundsException      (com.rubenroy.minimaltodo.eval_orm)
===============================================================================
  No methods

-------------------------------------------------------------------------------
Number of Fields : 12714
  Renamed to eval_m : 182 (1.4%)
  Renamed to eval_r : 181 (1.4%)
  Renamed to eval_g : 178 (1.4%)
  Renamed to eval_u : 178 (1.4%)
  Renamed to eval_l : 177 (1.4%)
  Renamed to eval_b : 175 (1.4%)
  Renamed to eval__ : 174 (1.4%)
  Renamed to eval_o : 174 (1.4%)
  Renamed to eval_a : 173 (1.4%)
  Renamed to eval_n : 172 (1.4%)

Number of Methods : 13475
  Renamed to d : 441 (3.3%)
  Renamed to m : 432 (3.2%)
  Renamed to p : 424 (3.1%)
  Renamed to j : 413 (3.1%)
  Renamed to a : 412 (3.1%)
  Renamed to c : 406 (3.0%)
  Renamed to x : 391 (2.9%)
  Renamed to z : 391 (2.9%)
  Renamed to h : 389 (2.9%)
  Renamed to v : 388 (2.9%)

