<?xml version="1.0" encoding="UTF-8"?>

<!--
   Allatori Obfuscator v5.9 Educational
   Web: http://www.allatori.com

   Log created: Mon Aug 13 21:46:22 EDT 2018
-->

<allatori>
 <mapping>
  <class old="com.xabber.xmpp.vcard.Photo" new="com.xabber.xmpp.vcard.c_H">
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.PacketWriter" new="org.jivesoftware.smack.c_h">
   <method old="access$000(Lorg/jivesoftware/smack/PacketWriter;Ljava/lang/Thread;)V" new="m_jW"/>
   <method old="access$1000()Ljava/lang/String;" new="m_vW"/>
   <method old="access$1100(Lorg/jivesoftware/smack/PacketWriter;)Z" new="m_ox"/>
   <method old="access$1200(Lorg/jivesoftware/smack/PacketWriter;)Ljava/lang/Thread;" new="m_Hw"/>
   <method old="access$200(Lorg/jivesoftware/smack/PacketWriter;)Ljava/io/Writer;" new="m_Sv"/>
   <method old="access$300(Lorg/jivesoftware/smack/PacketWriter;)Ljava/lang/Object;" new="m_bV"/>
   <method old="access$400(Lorg/jivesoftware/smack/PacketWriter;)Ljava/lang/Object;" new="m_fx"/>
   <method old="access$500(Lorg/jivesoftware/smack/PacketWriter;)Z" new="m_WV"/>
   <method old="access$600(Lorg/jivesoftware/smack/PacketWriter;)Ljava/lang/Long;" new="m_Tw"/>
   <method old="access$602(Lorg/jivesoftware/smack/PacketWriter;Ljava/lang/Long;)Ljava/lang/Long;" new="m_tV"/>
   <method old="access$700(Lorg/jivesoftware/smack/PacketWriter;)J" new="m_Xw"/>
   <method old="access$802(Lorg/jivesoftware/smack/PacketWriter;Ljava/lang/Long;)Ljava/lang/Long;" new="m_bv"/>
   <method old="access$900(Lorg/jivesoftware/smack/PacketWriter;)I" new="m_cx"/>
   <method old="cleanup()V" new="m_wD"/>
   <method old="init()V" new="m_ZG"/>
   <method old="isAlive()Z" new="m_UT"/>
   <method old="nextPacket()Lorg/jivesoftware/smack/packet/Packet;" new="m_oW"/>
   <method old="openStream()V" new="m_px"/>
   <method old="responseReceived()V" new="m_hx"/>
   <method old="resumeKeepAliveProcess()V" new="m_tx"/>
   <method old="sendPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_ES"/>
   <method old="setWriter(Ljava/io/Writer;)V" new="m_nx"/>
   <method old="shutdown()V" new="m_Fo"/>
   <method old="startKeepAliveProcess()V" new="m_cW"/>
   <method old="startup()V" new="m_Lx"/>
   <method old="stopKeepAliveProcess()V" new="m_pV"/>
   <method old="writePackets(Ljava/lang/Thread;)V" new="m_Vv"/>
   <field old="PING Ljava/lang/String;" new="f_b"/>
   <field old="connection Lorg/jivesoftware/smack/XMPPConnection;" new="f_d"/>
   <field old="done Z" new="f_l"/>
   <field old="keepAliveAccessLock Ljava/lang/Object;" new="f_G"/>
   <field old="keepAliveIsEnabled Z" new="f_K"/>
   <field old="keepAliveNextRequest J" new="f_I"/>
   <field old="keepAliveNextResponse Ljava/lang/Long;" new="f_B"/>
   <field old="keepAliveRequestInterval I" new="f_e"/>
   <field old="keepAliveResponseInterval I" new="f_k"/>
   <field old="keepAliveThread Ljava/lang/Thread;" new="f_J"/>
   <field old="keepAliveWriteLock Ljava/lang/Object;" new="f_M"/>
   <field old="queue Ljava/util/concurrent/BlockingQueue;" new="f_m"/>
   <field old="sendNextComplete Ljava/lang/Long;" new="f_f"/>
   <field old="writer Ljava/io/Writer;" new="f_j"/>
   <field old="writerThread Ljava/lang/Thread;" new="f_D"/>
  </class>
  <class old="com.xabber.xmpp.uri.XMPPUri" new="wy.c_pB">
   <method old="addLinks(Landroid/text/Spannable;)Z" new="m_RZ"/>
   <method old="getAuthority()Ljava/lang/String;" new="m_qz"/>
   <method old="getPath()Ljava/lang/String;" new="m_XW"/>
   <method old="getQueryType()Ljava/lang/String;" new="m_jY"/>
   <method old="getValues(Ljava/lang/String;)Ljava/util/ArrayList;" new="m_qQ"/>
   <method old="parse(Landroid/net/Uri;)Lcom/xabber/xmpp/uri/XMPPUri;" new="m_zX"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="XMPP_PATTERN Ljava/util/regex/Pattern;" new="f_d"/>
   <field old="XMPP_SCHEME Ljava/lang/String;" new="f_m"/>
   <field old="authority Ljava/lang/String;" new="f_B"/>
   <field old="path Ljava/lang/String;" new="f_b"/>
   <field old="queryType Ljava/lang/String;" new="f_e"/>
   <field old="values Ljava/util/HashMap;" new="f_j"/>
  </class>
  <class old="com.xabber.android.data.message.chat.ShowTextTable" new="wy.c_cB">
   <method old="bindValue(Landroid/database/sqlite/SQLiteStatement;Ljava/lang/Boolean;)V" new="m_Ifa"/>
   <method old="bindValue(Landroid/database/sqlite/SQLiteStatement;Ljava/lang/Object;)V" new="m_ega"/>
   <method old="clear()V" new="m_EA"/>
   <method old="create(Landroid/database/sqlite/SQLiteDatabase;)V" new="m_AB"/>
   <method old="getAccount(Landroid/database/Cursor;)Ljava/lang/String;" new="m_Jea"/>
   <method old="getInstance()Lcom/xabber/android/data/message/chat/ShowTextTable;" new="m_Xr"/>
   <method old="getListOrder()Ljava/lang/String;" new="m_YDa"/>
   <method old="getProjection()[Ljava/lang/String;" new="m_AFa"/>
   <method old="getTableName()Ljava/lang/String;" new="m_dga"/>
   <method old="getUser(Landroid/database/Cursor;)Ljava/lang/String;" new="m_oDa"/>
   <method old="getValue(Landroid/database/Cursor;)Z" new="m_Efa"/>
   <method old="getValueType()Ljava/lang/String;" new="m_pda"/>
   <method old="initialMigrate(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)V" new="m_SDa"/>
   <method old="list()Landroid/database/Cursor;" new="m_wEa"/>
   <method old="migrate(Landroid/database/sqlite/SQLiteDatabase;I)V" new="m_Cd"/>
   <method old="removeAccount(Ljava/lang/String;)V" new="m_YEa"/>
   <method old="write(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V" new="m_xDa"/>
   <field old="NAME Ljava/lang/String;" new="f_m"/>
   <field old="instance Lcom/xabber/android/data/message/chat/ShowTextTable;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.search.UserSearch" new="wy.c_W">
   <method old="access$000(Lorg/jivesoftware/smackx/search/SimpleUserSearch;Ljava/lang/String;Lorg/xmlpull/v1/XmlPullParser;)V" new="m_fl"/>
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="buildDataForm(Lorg/jivesoftware/smackx/search/SimpleUserSearch;Ljava/lang/String;Lorg/xmlpull/v1/XmlPullParser;)V" new="m_sJ"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getSearchForm(Lorg/jivesoftware/smack/Connection;Ljava/lang/String;)Lorg/jivesoftware/smackx/Form;" new="m_aJ"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="sendSearchForm(Lorg/jivesoftware/smack/Connection;Lorg/jivesoftware/smackx/Form;Ljava/lang/String;)Lorg/jivesoftware/smackx/ReportedData;" new="m_xL"/>
   <method old="sendSimpleSearchForm(Lorg/jivesoftware/smack/Connection;Lorg/jivesoftware/smackx/Form;Ljava/lang/String;)Lorg/jivesoftware/smackx/ReportedData;" new="m_sL"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
  </class>
  <class old="com.xabber.android.data.entity.AccountRelated" new="wy.c_OB">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getAccount()Ljava/lang/String;" new="m_FC"/>
   <method old="getIntent()Landroid/content/Intent;" new="m_db"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getText()Ljava/lang/String;" new="m_ZA"/>
   <method old="getTitle()Ljava/lang/String;" new="m_zb"/>
   <method old="getUser()Ljava/lang/String;" new="m_TA"/>
   <method old="hashCode()I" new="hashCode"/>
   <field old="account Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.vcard.OrganizationProvider" new="com.xabber.xmpp.vcard.c_g">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/vcard/Organization;" new="m_ZZ"/>
   <method old="getInstance()Lcom/xabber/xmpp/vcard/OrganizationProvider;" new="m_Xr"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/Organization;)Z" new="m_tY"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
   <field old="instance Lcom/xabber/xmpp/vcard/OrganizationProvider;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.util.PacketParserUtils" new="org.jivesoftware.smack.util.c_m">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="decode(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;" new="m_Wr"/>
   <method old="getLanguageAttribute(Lorg/xmlpull/v1/XmlPullParser;)Ljava/lang/String;" new="m_Ss"/>
   <method old="parseAuthentication(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/Authentication;" new="m_pr"/>
   <method old="parseCompressionMethods(Lorg/xmlpull/v1/XmlPullParser;)Ljava/util/Collection;" new="m_Js"/>
   <method old="parseContent(Lorg/xmlpull/v1/XmlPullParser;)Ljava/lang/String;" new="m_rq"/>
   <method old="parseError(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/XMPPError;" new="m_BR"/>
   <method old="parseIQ(Lorg/xmlpull/v1/XmlPullParser;Lorg/jivesoftware/smack/Connection;)Lorg/jivesoftware/smack/packet/IQ;" new="m_bS"/>
   <method old="parseMechanisms(Lorg/xmlpull/v1/XmlPullParser;)Ljava/util/Collection;" new="m_WO"/>
   <method old="parseMessage(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/Packet;" new="m_IQ"/>
   <method old="parsePacketExtension(Ljava/lang/String;Ljava/lang/String;Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hu"/>
   <method old="parsePresence(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/Presence;" new="m_Dr"/>
   <method old="parseProperties(Lorg/xmlpull/v1/XmlPullParser;)Ljava/util/Map;" new="m_Vr"/>
   <method old="parseRegistration(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/Registration;" new="m_QQ"/>
   <method old="parseResourceBinding(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/Bind;" new="m_WS"/>
   <method old="parseRoster(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/RosterPacket;" new="m_jq"/>
   <method old="parseSASLFailure(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/sasl/SASLMechanism$Failure;" new="m_Yp"/>
   <method old="parseStreamError(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/StreamError;" new="m_VO"/>
   <method old="parseStreamErrorBody(Lorg/xmlpull/v1/XmlPullParser;)Ljava/lang/String;" new="m_Ns"/>
   <method old="parseWithIntrospection(Ljava/lang/String;Ljava/lang/Class;Lorg/xmlpull/v1/XmlPullParser;)Ljava/lang/Object;" new="m_lP"/>
   <field old="PROPERTIES_NAMESPACE Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.MUCUser$Status" new="org.jivesoftware.smackx.packet.c_n">
   <method old="getCode()Ljava/lang/String;" new="m_ej"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="code Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.helper.ManagedListActivity" new="com.xabber.android.ui.helper.ManagedListActivity">
   <method old="onAccept(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_Lc"/>
   <method old="onAccountsChanged(Ljava/util/Collection;)V" new="m_vB"/>
   <method old="onActivityResult(IILandroid/content/Intent;)V" new="onActivityResult"/>
   <method old="onCancel(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_Vb"/>
   <method old="onChatChanged(Ljava/lang/String;Ljava/lang/String;Z)V" new="m_Id"/>
   <method old="onContactsChanged(Ljava/util/Collection;)V" new="m_bd"/>
   <method old="onCreate(Landroid/os/Bundle;)V" new="onCreate"/>
   <method old="onDecline(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_ad"/>
   <method old="onDestroy()V" new="onDestroy"/>
   <method old="onNewIntent(Landroid/content/Intent;)V" new="onNewIntent"/>
   <method old="onPause()V" new="onPause"/>
   <method old="onResume()V" new="onResume"/>
   <method old="startActivity(Landroid/content/Intent;)V" new="startActivity"/>
   <method old="startActivityForResult(Landroid/content/Intent;I)V" new="startActivityForResult"/>
  </class>
  <class old="com.xabber.xmpp.vcard.VCard" new="com.xabber.xmpp.vcard.c_m">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="append(Ljava/lang/StringBuilder;Ljava/lang/String;)V" new="m_wZ"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getAddresses()Ljava/util/List;" new="m_pz"/>
   <method old="getAvatar()[B" new="m_UL"/>
   <method old="getAvatarHash()Ljava/lang/String;" new="m_Ml"/>
   <method old="getCategories()Ljava/util/List;" new="m_eZ"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getClassification()Lcom/xabber/xmpp/vcard/Classification;" new="m_TX"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getEmails()Ljava/util/List;" new="m_TY"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getField(Lcom/xabber/xmpp/vcard/NameProperty;)Ljava/lang/String;" new="m_LZ"/>
   <method old="getField(Lcom/xabber/xmpp/vcard/VCardProperty;)Ljava/lang/String;" new="m_my"/>
   <method old="getFirstName()Ljava/lang/String;" new="m_Hk"/>
   <method old="getFormattedName()Ljava/lang/String;" new="m_KX"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getGeos()Ljava/util/List;" new="m_Bz"/>
   <method old="getKeys()Ljava/util/List;" new="m_YY"/>
   <method old="getLabels()Ljava/util/List;" new="m_UE"/>
   <method old="getLastName()Ljava/lang/String;" new="m_NJ"/>
   <method old="getLogos()Ljava/util/List;" new="m_dX"/>
   <method old="getMiddleName()Ljava/lang/String;" new="m_qK"/>
   <method old="getName()Ljava/util/Map;" new="m_ac"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="getNickName()Ljava/lang/String;" new="m_hJ"/>
   <method old="getOrganizations()Ljava/util/List;" new="m_Lz"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getPhotos()Ljava/util/List;" new="m_vz"/>
   <method old="getProperties()Ljava/util/Map;" new="m_KZ"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getSounds()Ljava/util/List;" new="m_ez"/>
   <method old="getTelephones()Ljava/util/List;" new="m_laa"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getVersion()Ljava/lang/String;" new="m_Sd"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="isEmpty()Z" new="m_Oaa"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="serializeContent(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_Fb"/>
   <method old="setClassification(Lcom/xabber/xmpp/vcard/Classification;)V" new="m_FX"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFormattedName(Ljava/lang/String;)V" new="m_SZ"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="setVersion(Ljava/lang/String;)V" new="m_TL"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="CATEGORIES_NAME Ljava/lang/String;" new="f_k"/>
   <field old="CLASS_NAME Ljava/lang/String;" new="f_E"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_B"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="KEYWORD_NAME Ljava/lang/String;" new="f_f"/>
   <field old="NAMESPACE Ljava/lang/String;" new="f_a"/>
   <field old="N_NAME Ljava/lang/String;" new="f_b"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="addresses Ljava/util/List;" new="f_h"/>
   <field old="categories Ljava/util/List;" new="f_M"/>
   <field old="classification Lcom/xabber/xmpp/vcard/Classification;" new="f_I"/>
   <field old="emails Ljava/util/List;" new="f_g"/>
   <field old="geos Ljava/util/List;" new="f_m"/>
   <field old="keys Ljava/util/List;" new="f_H"/>
   <field old="labels Ljava/util/List;" new="f_C"/>
   <field old="logos Ljava/util/List;" new="f_l"/>
   <field old="name Ljava/util/Map;" new="f_D"/>
   <field old="organizations Ljava/util/List;" new="f_e"/>
   <field old="photos Ljava/util/List;" new="f_J"/>
   <field old="properties Ljava/util/Map;" new="f_F"/>
   <field old="sounds Ljava/util/List;" new="f_K"/>
   <field old="telephones Ljava/util/List;" new="f_G"/>
   <field old="version Ljava/lang/String;" new="f_j"/>
  </class>
  <class old="com.xabber.android.ui.adapter.OnTextChangedListener" new="com.xabber.android.ui.adapter.c_A">
   <method old="onTextChanged(Landroid/widget/EditText;Ljava/lang/CharSequence;)V" new="m_Lb"/>
  </class>
  <class old="org.jivesoftware.smackx.EntityCapsManager$CapsPacketListener" new="org.jivesoftware.smackx.c_U">
   <method old="processPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_C"/>
   <field old="this$0 Lorg/jivesoftware/smackx/EntityCapsManager;" new="f_m"/>
  </class>
  <class old="net.java.otr4j.OtrKeyManager" new="net.java.otr4j.c_B">
   <method old="addListener(Lnet/java/otr4j/OtrKeyManagerListener;)V" new="m_CA"/>
   <method old="generateLocalKeyPair(Lnet/java/otr4j/session/SessionID;)V" new="m_mb"/>
   <method old="getLocalFingerprint(Lnet/java/otr4j/session/SessionID;)Ljava/lang/String;" new="m_Fd"/>
   <method old="getLocalFingerprintRaw(Lnet/java/otr4j/session/SessionID;)[B" new="m_gB"/>
   <method old="getRemoteFingerprint(Lnet/java/otr4j/session/SessionID;)Ljava/lang/String;" new="m_aB"/>
   <method old="isVerified(Lnet/java/otr4j/session/SessionID;)Z" new="m_dA"/>
   <method old="loadLocalKeyPair(Lnet/java/otr4j/session/SessionID;)Ljava/security/KeyPair;" new="m_JA"/>
   <method old="loadRemotePublicKey(Lnet/java/otr4j/session/SessionID;)Ljava/security/PublicKey;" new="m_ed"/>
   <method old="removeListener(Lnet/java/otr4j/OtrKeyManagerListener;)V" new="m_md"/>
   <method old="savePublicKey(Lnet/java/otr4j/session/SessionID;Ljava/security/PublicKey;)V" new="m_PB"/>
   <method old="unverify(Lnet/java/otr4j/session/SessionID;)V" new="m_EC"/>
   <method old="verify(Lnet/java/otr4j/session/SessionID;)V" new="m_rC"/>
  </class>
  <class old="org.xbill.DNS.Cache$CacheMap" new="org.xbill.DNS.c_xc">
   <method old="getMaxSize()I" new="m_Fj"/>
   <method old="removeEldestEntry(Ljava/util/Map$Entry;)Z" new="removeEldestEntry"/>
   <method old="setMaxSize(I)V" new="m_CH"/>
   <field old="maxsize I" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.provider.VCardProvider" new="org.jivesoftware.smackx.provider.c_B">
   <method old="createVCardFromXML(Ljava/lang/String;)Lorg/jivesoftware/smackx/packet/VCard;" new="m_LL"/>
   <method old="parseIQ(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/IQ;" new="m_g"/>
   <field old="PREFERRED_ENCODING Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.roster.RosterGroupReference" new="com.xabber.android.data.roster.RosterGroupReference">
   <method old="getId()Ljava/lang/Long;" new="m_Hca"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getRosterGroup()Lcom/xabber/android/data/roster/RosterGroup;" new="m_BFa"/>
   <method old="setId(Ljava/lang/Long;)V" new="m_Cga"/>
   <field old="id Ljava/lang/Long;" new="f_e"/>
   <field old="rosterGroup Lcom/xabber/android/data/roster/RosterGroup;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.extension.archive.MessageArchiveManager$1" new="com.xabber.android.data.extension.archive.c_J">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/extension/archive/MessageArchiveManager;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.extension.archive.MessageArchiveManager$2" new="com.xabber.android.data.extension.archive.c_M">
   <method old="onDisconnect(Ljava/lang/String;Ljava/lang/String;)V" new="m_Uc"/>
   <method old="onError(Ljava/lang/String;Ljava/lang/String;Lorg/jivesoftware/smack/packet/IQ;)V" new="m_Ld"/>
   <method old="onReceived(Ljava/lang/String;Ljava/lang/String;Lorg/jivesoftware/smack/packet/IQ;)V" new="m_VA"/>
   <method old="onTimeout(Ljava/lang/String;Ljava/lang/String;)V" new="m_aC"/>
   <field old="this$0 Lcom/xabber/android/data/extension/archive/MessageArchiveManager;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.OfflineMessageRequest" new="org.jivesoftware.smackx.packet.c_C">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="addItem(Lorg/jivesoftware/smackx/packet/OfflineMessageRequest$Item;)V" new="m_Oj"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getItems()Ljava/util/Iterator;" new="m_Vj"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="isFetch()Z" new="m_kl"/>
   <method old="isPurge()Z" new="m_yJ"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFetch(Z)V" new="m_ML"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setPurge(Z)V" new="m_qL"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="fetch Z" new="f_m"/>
   <field old="items Ljava/util/List;" new="f_e"/>
   <field old="purge Z" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.extension.archive.MessageArchiveManager$3" new="com.xabber.android.data.extension.archive.c_m">
   <method old="onDisconnect(Ljava/lang/String;Ljava/lang/String;)V" new="m_Uc"/>
   <method old="onError(Ljava/lang/String;Ljava/lang/String;Lorg/jivesoftware/smack/packet/IQ;)V" new="m_Ld"/>
   <method old="onReceived(Ljava/lang/String;Ljava/lang/String;Lorg/jivesoftware/smack/packet/IQ;)V" new="m_VA"/>
   <method old="onTimeout(Ljava/lang/String;Ljava/lang/String;)V" new="m_aC"/>
   <field old="this$0 Lcom/xabber/android/data/extension/archive/MessageArchiveManager;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.extension.archive.MessageArchiveManager$4" new="com.xabber.android.data.extension.archive.c_B">
   <method old="onDisconnect(Ljava/lang/String;Ljava/lang/String;)V" new="m_Uc"/>
   <method old="onError(Ljava/lang/String;Ljava/lang/String;Lorg/jivesoftware/smack/packet/IQ;)V" new="m_Ld"/>
   <method old="onReceived(Ljava/lang/String;Ljava/lang/String;Lorg/jivesoftware/smack/packet/IQ;)V" new="m_VA"/>
   <method old="onTimeout(Ljava/lang/String;Ljava/lang/String;)V" new="m_aC"/>
   <field old="this$0 Lcom/xabber/android/data/extension/archive/MessageArchiveManager;" new="f_m"/>
  </class>
  <class old="net.java.otr4j.crypto.OtrCryptoEngineImpl" new="wy.c_Yc">
   <method old="aesDecrypt([B[B[B)[B" new="m_JB"/>
   <method old="aesEncrypt([B[B[B)[B" new="m_XB"/>
   <method old="generateDHKeyPair()Ljava/security/KeyPair;" new="m_Bd"/>
   <method old="generateSecret(Ljava/security/PrivateKey;Ljava/security/PublicKey;)Ljava/math/BigInteger;" new="m_KB"/>
   <method old="getDHPublicKey(Ljava/math/BigInteger;)Ljavax/crypto/interfaces/DHPublicKey;" new="m_td"/>
   <method old="getDHPublicKey([B)Ljavax/crypto/interfaces/DHPublicKey;" new="m_pc"/>
   <method old="getFingerprint(Ljava/security/PublicKey;)Ljava/lang/String;" new="m_jb"/>
   <method old="getFingerprintRaw(Ljava/security/PublicKey;)[B" new="m_bB"/>
   <method old="sha1Hash([B)[B" new="m_sb"/>
   <method old="sha1Hmac([B[BI)[B" new="m_ic"/>
   <method old="sha256Hash([B)[B" new="m_HB"/>
   <method old="sha256Hmac([B[B)[B" new="m_vb"/>
   <method old="sha256Hmac([B[BI)[B" new="m_DC"/>
   <method old="sha256Hmac160([B[B)[B" new="m_Gc"/>
   <method old="sign([BLjava/security/PrivateKey;)[B" new="m_eA"/>
   <method old="verify([BLjava/security/PublicKey;Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/lang/Boolean;" new="m_Aaa"/>
   <method old="verify([BLjava/security/PublicKey;[B)Z" new="m_bc"/>
   <method old="verify([BLjava/security/PublicKey;[B[B)Ljava/lang/Boolean;" new="m_Naa"/>
   <field old="AES_KEY_BYTE_LENGTH I" new="f_b"/>
   <field old="BIGINTEGER_TWO Ljava/math/BigInteger;" new="f_k"/>
   <field old="DH_PRIVATE_KEY_MINIMUM_BIT_LENGTH I" new="f_f"/>
   <field old="DSA_PUB_TYPE I" new="f_m"/>
   <field old="GENERATOR Ljava/math/BigInteger;" new="f_e"/>
   <field old="GENERATOR_TEXT Ljava/lang/String;" new="f_d"/>
   <field old="MODULUS Ljava/math/BigInteger;" new="f_I"/>
   <field old="MODULUS_MINUS_TWO Ljava/math/BigInteger;" new="f_j"/>
   <field old="MODULUS_TEXT Ljava/lang/String;" new="f_l"/>
   <field old="SHA256_HMAC_KEY_BYTE_LENGTH I" new="f_B"/>
   <field old="ZERO_CTR [B" new="f_K"/>
  </class>
  <class old="com.xabber.android.data.entity.NestedMap" new="wy.c_kC">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="access$200(Lcom/xabber/android/data/entity/NestedMap;)Ljava/util/Map;" new="m_ria"/>
   <method old="addAll(Lcom/xabber/android/data/entity/NestedMap;)V" new="m_nga"/>
   <method old="clear()V" new="m_EA"/>
   <method old="clear(Ljava/lang/String;)V" new="m_dGa"/>
   <method old="get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;" new="m_uIa"/>
   <method old="getNested(Ljava/lang/String;)Ljava/util/Map;" new="m_gia"/>
   <method old="isEmpty()Z" new="m_Oaa"/>
   <method old="iterator()Ljava/util/Iterator;" new="iterator"/>
   <method old="put(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V" new="m_XIa"/>
   <method old="remove(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;" new="m_cFa"/>
   <method old="values()Ljava/util/Collection;" new="m_BGa"/>
   <field old="map Ljava/util/Map;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.message.MessageManager$1" new="com.xabber.android.data.message.c_j">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/message/MessageManager;" new="f_m"/>
   <field old="val$loadChats Ljava/util/Set;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.message.MessageManager$2" new="com.xabber.android.data.message.c_J">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/message/MessageManager;" new="f_m"/>
   <field old="val$messageItems Ljava/util/ArrayList;" new="f_e"/>
   <field old="val$remove Z" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.message.MessageManager$3" new="com.xabber.android.data.message.c_M">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/message/MessageManager;" new="f_d"/>
   <field old="val$account Ljava/lang/String;" new="f_m"/>
   <field old="val$archiveMode Lcom/xabber/android/data/account/ArchiveMode;" new="f_e"/>
   <field old="val$removeMessageItems Ljava/util/ArrayList;" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.message.MessageManager$4" new="com.xabber.android.data.message.c_m">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/message/MessageManager;" new="f_e"/>
   <field old="val$account Ljava/lang/String;" new="f_d"/>
   <field old="val$incoming Z" new="f_b"/>
   <field old="val$user Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.CNAMERecord" new="org.xbill.DNS.c_GB">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getAlias()Lorg/xbill/DNS/Name;" new="m_JI"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getSingleName()Lorg/xbill/DNS/Name;" new="m_NH"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getTarget()Lorg/xbill/DNS/Name;" new="m_ff"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="serialVersionUID J" new="f_m"/>
   <field old="singleName Lorg/xbill/DNS/Name;" new="f_m"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smack.util.collections.EmptyIterator" new="org.jivesoftware.smack.util.collections.c_j">
   <method old="add(Ljava/lang/Object;)V" new="m_AQ"/>
   <method old="getInstance()Ljava/util/Iterator;" new="m_Xr"/>
   <method old="getKey()Ljava/lang/Object;" new="m_xa"/>
   <method old="getValue()Ljava/lang/Object;" new="m_Ra"/>
   <method old="hasNext()Z" new="hasNext"/>
   <method old="hasPrevious()Z" new="m_sr"/>
   <method old="next()Ljava/lang/Object;" new="next"/>
   <method old="nextIndex()I" new="m_Oq"/>
   <method old="previous()Ljava/lang/Object;" new="m_ar"/>
   <method old="previousIndex()I" new="m_aP"/>
   <method old="remove()V" new="remove"/>
   <method old="reset()V" new="m_ld"/>
   <method old="set(Ljava/lang/Object;)V" new="m_dr"/>
   <method old="setValue(Ljava/lang/Object;)Ljava/lang/Object;" new="m_Xa"/>
   <field old="INSTANCE Ljava/util/Iterator;" new="f_e"/>
   <field old="RESETTABLE_INSTANCE Lorg/jivesoftware/smack/util/collections/ResettableIterator;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$MessageIBBInputStream$1" new="org.jivesoftware.smackx.bytestreams.ibb.c_M">
   <method old="processPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_C"/>
   <field old="this$1 Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamSession$MessageIBBInputStream;" new="f_m"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.AsymmetricCipherKeyPair" new="net.java.otr4j.bouncycastle.crypto.c_c">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getPrivate()Lnet/java/otr4j/bouncycastle/crypto/CipherParameters;" new="m_Maa"/>
   <method old="getPublic()Lnet/java/otr4j/bouncycastle/crypto/CipherParameters;" new="m_gZ"/>
   <field old="privateParam Lnet/java/otr4j/bouncycastle/crypto/CipherParameters;" new="f_m"/>
   <field old="publicParam Lnet/java/otr4j/bouncycastle/crypto/CipherParameters;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamManager" new="org.jivesoftware.smackx.bytestreams.socks5.c_K">
   <method old="access$000()Ljava/util/Map;" new="m_Jf"/>
   <method old="activate()V" new="m_tN"/>
   <method old="addIncomingBytestreamListener(Lorg/jivesoftware/smackx/bytestreams/BytestreamListener;)V" new="m_wa"/>
   <method old="addIncomingBytestreamListener(Lorg/jivesoftware/smackx/bytestreams/BytestreamListener;Ljava/lang/String;)V" new="m_Qa"/>
   <method old="createBytestreamInitiation(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Lorg/jivesoftware/smackx/bytestreams/socks5/packet/Bytestream;" new="m_yn"/>
   <method old="createStreamHostRequest(Ljava/lang/String;)Lorg/jivesoftware/smackx/bytestreams/socks5/packet/Bytestream;" new="m_mN"/>
   <method old="determineProxies()Ljava/util/List;" new="m_rN"/>
   <method old="determineStreamHostInfos(Ljava/util/List;)Ljava/util/List;" new="m_bm"/>
   <method old="disableService()V" new="m_Fn"/>
   <method old="enableService()V" new="m_to"/>
   <method old="establishSession(Ljava/lang/String;)Lorg/jivesoftware/smackx/bytestreams/BytestreamSession;" new="m_na"/>
   <method old="establishSession(Ljava/lang/String;)Lorg/jivesoftware/smackx/bytestreams/socks5/Socks5BytestreamSession;" new="m_na"/>
   <method old="establishSession(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smackx/bytestreams/BytestreamSession;" new="m_qa"/>
   <method old="establishSession(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smackx/bytestreams/socks5/Socks5BytestreamSession;" new="m_qa"/>
   <method old="getAllRequestListeners()Ljava/util/List;" new="m_Om"/>
   <method old="getBytestreamManager(Lorg/jivesoftware/smack/Connection;)Lorg/jivesoftware/smackx/bytestreams/socks5/Socks5BytestreamManager;" new="m_BO"/>
   <method old="getConnection()Lorg/jivesoftware/smack/Connection;" new="m_eo"/>
   <method old="getIgnoredBytestreamRequests()Ljava/util/List;" new="m_FN"/>
   <method old="getLocalStreamHost()Ljava/util/List;" new="m_Mm"/>
   <method old="getNextSessionID()Ljava/lang/String;" new="m_Pm"/>
   <method old="getProxyConnectionTimeout()I" new="m_hN"/>
   <method old="getTargetResponseTimeout()I" new="m_EO"/>
   <method old="getUserListener(Ljava/lang/String;)Lorg/jivesoftware/smackx/bytestreams/BytestreamListener;" new="m_qN"/>
   <method old="ignoreBytestreamRequestOnce(Ljava/lang/String;)V" new="m_Ao"/>
   <method old="isProxyPrioritizationEnabled()Z" new="m_Qn"/>
   <method old="removeIncomingBytestreamListener(Ljava/lang/String;)V" new="m_ua"/>
   <method old="removeIncomingBytestreamListener(Lorg/jivesoftware/smackx/bytestreams/BytestreamListener;)V" new="m_Sa"/>
   <method old="replyRejectPacket(Lorg/jivesoftware/smack/packet/IQ;)V" new="m_cN"/>
   <method old="setProxyConnectionTimeout(I)V" new="m_LN"/>
   <method old="setProxyPrioritizationEnabled(Z)V" new="m_zM"/>
   <method old="setTargetResponseTimeout(I)V" new="m_QO"/>
   <method old="supportsSocks5(Ljava/lang/String;)Z" new="m_Ym"/>
   <field old="NAMESPACE Ljava/lang/String;" new="f_e"/>
   <field old="SESSION_ID_PREFIX Ljava/lang/String;" new="f_D"/>
   <field old="allRequestListeners Ljava/util/List;" new="f_l"/>
   <field old="connection Lorg/jivesoftware/smack/Connection;" new="f_B"/>
   <field old="ignoredBytestreamRequests Ljava/util/List;" new="f_I"/>
   <field old="initiationListener Lorg/jivesoftware/smackx/bytestreams/socks5/InitiationListener;" new="f_d"/>
   <field old="lastWorkingProxy Ljava/lang/String;" new="f_b"/>
   <field old="managers Ljava/util/Map;" new="f_m"/>
   <field old="proxyBlacklist Ljava/util/List;" new="f_k"/>
   <field old="proxyConnectionTimeout I" new="f_M"/>
   <field old="proxyPrioritizationEnabled Z" new="f_j"/>
   <field old="randomGenerator Ljava/util/Random;" new="f_J"/>
   <field old="targetResponseTimeout I" new="f_f"/>
   <field old="userListeners Ljava/util/Map;" new="f_K"/>
  </class>
  <class old="net.java.otr4j.OtrEngineListener" new="net.java.otr4j.c_m">
   <method old="sessionStatusChanged(Lnet/java/otr4j/session/SessionID;)V" new="m_xb"/>
  </class>
  <class old="com.xabber.android.data.message.ReceiptManager" new="com.xabber.android.data.message.ReceiptManager">
   <method old="getInstance()Lcom/xabber/android/data/message/ReceiptManager;" new="m_Xr"/>
   <method old="onDisconnect(Lcom/xabber/android/data/connection/ConnectionItem;)V" new="m_xB"/>
   <method old="onPacket(Lcom/xabber/android/data/connection/ConnectionItem;Ljava/lang/String;Lorg/jivesoftware/smack/packet/Packet;)V" new="m_tC"/>
   <method old="updateOutgoingMessage(Lcom/xabber/android/data/message/AbstractChat;Lorg/jivesoftware/smack/packet/Message;Lcom/xabber/android/data/message/MessageItem;)V" new="m_kDa"/>
   <field old="instance Lcom/xabber/android/data/message/ReceiptManager;" new="f_e"/>
   <field old="sent Lcom/xabber/android/data/entity/NestedMap;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.adapter.ComparatorByChat" new="com.xabber.android.ui.adapter.c_e">
   <method old="compare(Lcom/xabber/android/data/roster/AbstractContact;Lcom/xabber/android/data/roster/AbstractContact;)I" new="m_zCa"/>
   <method old="compare(Ljava/lang/Object;Ljava/lang/Object;)I" new="compare"/>
   <field old="COMPARATOR_BY_CHAT Lcom/xabber/android/ui/adapter/ComparatorByChat;" new="f_m"/>
   <field old="COMPARATOR_BY_NAME Lcom/xabber/android/ui/adapter/ComparatorByName;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.message.AbstractChat$1" new="com.xabber.android.data.message.c_b">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/message/AbstractChat;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.message.AbstractChat$2" new="com.xabber.android.data.message.c_I">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/message/AbstractChat;" new="f_e"/>
   <field old="val$messageItems Ljava/util/ArrayList;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.message.AbstractChat$3" new="com.xabber.android.data.message.c_e">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/message/AbstractChat;" new="f_e"/>
   <field old="val$messageItems Ljava/util/ArrayList;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.KEYRecord" new="org.xbill.DNS.c_Qa">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getAlgorithm()I" new="m_Ne"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getFlags()I" new="m_JG"/>
   <method old="getFootprint()I" new="m_VF"/>
   <method old="getKey()[B" new="m_xa"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getProtocol()I" new="m_jF"/>
   <method old="getPublicKey()Ljava/security/PublicKey;" new="m_TG"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="FLAG_NOAUTH I" new="f_I"/>
   <field old="FLAG_NOCONF I" new="f_J"/>
   <field old="FLAG_NOKEY I" new="f_H"/>
   <field old="OWNER_HOST I" new="f_F"/>
   <field old="OWNER_USER I" new="f_e"/>
   <field old="OWNER_ZONE I" new="f_f"/>
   <field old="PROTOCOL_ANY I" new="f_l"/>
   <field old="PROTOCOL_DNSSEC I" new="f_G"/>
   <field old="PROTOCOL_EMAIL I" new="f_M"/>
   <field old="PROTOCOL_IPSEC I" new="f_K"/>
   <field old="PROTOCOL_TLS I" new="f_D"/>
   <field old="alg I" new="f_k"/>
   <field old="dclass I" new="f_m"/>
   <field old="flags I" new="f_j"/>
   <field old="footprint I" new="f_d"/>
   <field old="key [B" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="proto I" new="f_B"/>
   <field old="publicKey Ljava/security/PublicKey;" new="f_e"/>
   <field old="serialVersionUID J" new="f_g"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.message.AbstractChat$4" new="com.xabber.android.data.message.c_g">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/message/AbstractChat;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.message.AbstractChat$5" new="com.xabber.android.data.message.c_d">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/message/AbstractChat;" new="f_b"/>
   <field old="val$action Lcom/xabber/android/data/message/ChatAction;" new="f_I"/>
   <field old="val$delayTimestamp Ljava/util/Date;" new="f_j"/>
   <field old="val$incoming Z" new="f_e"/>
   <field old="val$messageItem Lcom/xabber/android/data/message/MessageItem;" new="f_l"/>
   <field old="val$read Z" new="f_m"/>
   <field old="val$resource Ljava/lang/String;" new="f_f"/>
   <field old="val$sent Z" new="f_B"/>
   <field old="val$text Ljava/lang/String;" new="f_d"/>
   <field old="val$timestamp Ljava/util/Date;" new="f_k"/>
  </class>
  <class old="com.xabber.android.data.message.AbstractChat$6" new="com.xabber.android.data.message.c_a">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/message/AbstractChat;" new="f_e"/>
   <field old="val$messageItems Ljava/util/ArrayList;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.message.AbstractChat$7" new="com.xabber.android.data.message.c_D">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/message/AbstractChat;" new="f_m"/>
   <field old="val$messageItems Ljava/util/ArrayList;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.message.AbstractChat$8" new="com.xabber.android.data.message.c_c">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/message/AbstractChat;" new="f_m"/>
   <field old="val$messageItem Lcom/xabber/android/data/message/MessageItem;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.extension.muc.Occupant" new="com.xabber.android.data.extension.muc.c_E">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="compareTo(Lcom/xabber/android/data/extension/muc/Occupant;)I" new="m_JIa"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="getAffiliation()Lcom/xabber/xmpp/muc/Affiliation;" new="m_Ck"/>
   <method old="getJid()Ljava/lang/String;" new="m_tL"/>
   <method old="getNickname()Ljava/lang/String;" new="m_HM"/>
   <method old="getRole()Lcom/xabber/xmpp/muc/Role;" new="m_ul"/>
   <method old="getStatusMode()Lcom/xabber/android/data/account/StatusMode;" new="m_tfa"/>
   <method old="getStatusText()Ljava/lang/String;" new="m_tFa"/>
   <method old="setAffiliation(Lcom/xabber/xmpp/muc/Affiliation;)V" new="m_Hga"/>
   <method old="setJid(Ljava/lang/String;)V" new="m_AJ"/>
   <method old="setRole(Lcom/xabber/xmpp/muc/Role;)V" new="m_IIa"/>
   <method old="setStatusMode(Lcom/xabber/android/data/account/StatusMode;)V" new="m_lca"/>
   <method old="setStatusText(Ljava/lang/String;)V" new="m_Dfa"/>
   <field old="affiliation Lcom/xabber/xmpp/muc/Affiliation;" new="f_b"/>
   <field old="jid Ljava/lang/String;" new="f_j"/>
   <field old="nickname Ljava/lang/String;" new="f_B"/>
   <field old="role Lcom/xabber/xmpp/muc/Role;" new="f_d"/>
   <field old="statusMode Lcom/xabber/android/data/account/StatusMode;" new="f_e"/>
   <field old="statusText Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.message.AbstractChat$9" new="com.xabber.android.data.message.c_K">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/message/AbstractChat;" new="f_m"/>
   <field old="val$removeMessages Ljava/util/ArrayList;" new="f_b"/>
   <field old="val$sentMessages Ljava/util/ArrayList;" new="f_e"/>
  </class>
  <class old="org.xbill.DNS.ZoneTransferException" new="org.xbill.DNS.c_m">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
  </class>
  <class old="org.jivesoftware.smackx.muc.DefaultParticipantStatusListener" new="org.jivesoftware.smackx.muc.c_l">
   <method old="adminGranted(Ljava/lang/String;)V" new="m_ka"/>
   <method old="adminRevoked(Ljava/lang/String;)V" new="m_Ma"/>
   <method old="banned(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_p"/>
   <method old="joined(Ljava/lang/String;)V" new="m_Y"/>
   <method old="kicked(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_ea"/>
   <method old="left(Ljava/lang/String;)V" new="m_ha"/>
   <method old="membershipGranted(Ljava/lang/String;)V" new="m_Ca"/>
   <method old="membershipRevoked(Ljava/lang/String;)V" new="m_da"/>
   <method old="moderatorGranted(Ljava/lang/String;)V" new="m_Ia"/>
   <method old="moderatorRevoked(Ljava/lang/String;)V" new="m_Ka"/>
   <method old="nicknameChanged(Ljava/lang/String;Ljava/lang/String;)V" new="m_La"/>
   <method old="ownershipGranted(Ljava/lang/String;)V" new="m_Aa"/>
   <method old="ownershipRevoked(Ljava/lang/String;)V" new="m_ia"/>
   <method old="voiceGranted(Ljava/lang/String;)V" new="m_aa"/>
   <method old="voiceRevoked(Ljava/lang/String;)V" new="m_fa"/>
  </class>
  <class old="com.xabber.android.data.connection.CertificateInvalidReason" new="com.xabber.android.data.connection.CertificateInvalidReason">
   <method old="getResourceId()I" new="m_zJa"/>
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/android/data/connection/CertificateInvalidReason;" new="valueOf"/>
   <method old="values()[Lcom/xabber/android/data/connection/CertificateInvalidReason;" new="values"/>
   <field old="$VALUES [Lcom/xabber/android/data/connection/CertificateInvalidReason;" new="f_b"/>
   <field old="invalidChane Lcom/xabber/android/data/connection/CertificateInvalidReason;" new="f_d"/>
   <field old="invalidTarget Lcom/xabber/android/data/connection/CertificateInvalidReason;" new="f_e"/>
   <field old="selfSigned Lcom/xabber/android/data/connection/CertificateInvalidReason;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.Address" new="org.xbill.DNS.c_IA">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="addrFromRecord(Ljava/lang/String;Lorg/xbill/DNS/Record;)Ljava/net/InetAddress;" new="m_tH"/>
   <method old="addressLength(I)I" new="m_CG"/>
   <method old="familyOf(Ljava/net/InetAddress;)I" new="m_Xi"/>
   <method old="getAllByName(Ljava/lang/String;)[Ljava/net/InetAddress;" new="m_PI"/>
   <method old="getByAddress(Ljava/lang/String;)Ljava/net/InetAddress;" new="m_pH"/>
   <method old="getByAddress(Ljava/lang/String;I)Ljava/net/InetAddress;" new="m_QI"/>
   <method old="getByName(Ljava/lang/String;)Ljava/net/InetAddress;" new="m_bI"/>
   <method old="getHostName(Ljava/net/InetAddress;)Ljava/lang/String;" new="m_AG"/>
   <method old="isDottedQuad(Ljava/lang/String;)Z" new="m_Ji"/>
   <method old="lookupHostName(Ljava/lang/String;)[Lorg/xbill/DNS/Record;" new="m_Qi"/>
   <method old="parseV4(Ljava/lang/String;)[B" new="m_mh"/>
   <method old="parseV6(Ljava/lang/String;)[B" new="m_mH"/>
   <method old="toArray(Ljava/lang/String;)[I" new="m_uH"/>
   <method old="toArray(Ljava/lang/String;I)[I" new="m_vG"/>
   <method old="toByteArray(Ljava/lang/String;I)[B" new="m_aG"/>
   <method old="toDottedQuad([B)Ljava/lang/String;" new="m_ni"/>
   <method old="toDottedQuad([I)Ljava/lang/String;" new="m_nH"/>
   <method old="truncate(Ljava/net/InetAddress;I)Ljava/net/InetAddress;" new="m_Nh"/>
   <field old="IPv4 I" new="f_m"/>
   <field old="IPv6 I" new="f_e"/>
  </class>
  <class old="org.xbill.DNS.DNSSEC$UnsupportedAlgorithmException" new="org.xbill.DNS.c_ub">
  </class>
  <class old="org.jivesoftware.smackx.packet.MUCUser$Decline" new="org.jivesoftware.smackx.packet.c_N">
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getReason()Ljava/lang/String;" new="m_zj"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setReason(Ljava/lang/String;)V" new="m_QJ"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="from Ljava/lang/String;" new="f_m"/>
   <field old="reason Ljava/lang/String;" new="f_b"/>
   <field old="to Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="net.java.otr4j.crypto.SM$SMState" new="wy.c_JB">
   <field old="approved Z" new="f_b"/>
   <field old="asked Z" new="f_K"/>
   <field old="g1 Ljava/math/BigInteger;" new="f_M"/>
   <field old="g2 Ljava/math/BigInteger;" new="f_k"/>
   <field old="g3 Ljava/math/BigInteger;" new="f_m"/>
   <field old="g3o Ljava/math/BigInteger;" new="f_B"/>
   <field old="nextExpected I" new="f_G"/>
   <field old="p Ljava/math/BigInteger;" new="f_J"/>
   <field old="pab Ljava/math/BigInteger;" new="f_e"/>
   <field old="q Ljava/math/BigInteger;" new="f_D"/>
   <field old="qab Ljava/math/BigInteger;" new="f_I"/>
   <field old="receivedQuestion I" new="f_j"/>
   <field old="secret Ljava/math/BigInteger;" new="f_l"/>
   <field old="smProgState I" new="f_f"/>
   <field old="x2 Ljava/math/BigInteger;" new="f_g"/>
   <field old="x3 Ljava/math/BigInteger;" new="f_d"/>
  </class>
  <class old="com.xabber.android.data.entity.BaseEntity" new="wy.c_bb">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="compareTo(Lcom/xabber/android/data/entity/BaseEntity;)I" new="m_bCa"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="equals(Ljava/lang/String;Ljava/lang/String;)Z" new="m_Bba"/>
   <method old="getAccount()Ljava/lang/String;" new="m_FC"/>
   <method old="getIntent()Landroid/content/Intent;" new="m_db"/>
   <method old="getText()Ljava/lang/String;" new="m_ZA"/>
   <method old="getTitle()Ljava/lang/String;" new="m_zb"/>
   <method old="getUser()Ljava/lang/String;" new="m_TA"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="account Ljava/lang/String;" new="f_m"/>
   <field old="user Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.filetransfer.OutgoingFileTransfer" new="org.jivesoftware.smackx.filetransfer.c_K">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="access$000(Lorg/jivesoftware/smackx/filetransfer/OutgoingFileTransfer;)Ljava/io/OutputStream;" new="m_io"/>
   <method old="access$002(Lorg/jivesoftware/smackx/filetransfer/OutgoingFileTransfer;Ljava/io/OutputStream;)Ljava/io/OutputStream;" new="m_KO"/>
   <method old="access$100(Lorg/jivesoftware/smackx/filetransfer/OutgoingFileTransfer;Ljava/lang/String;JLjava/lang/String;)Ljava/io/OutputStream;" new="m_NO"/>
   <method old="access$200(Lorg/jivesoftware/smackx/filetransfer/OutgoingFileTransfer;Lorg/jivesoftware/smack/XMPPException;)V" new="m_ko"/>
   <method old="cancel()V" new="m_pk"/>
   <method old="checkTransferThread()V" new="m_Sn"/>
   <method old="getAmountWritten()J" new="m_MM"/>
   <method old="getBytesSent()J" new="m_dO"/>
   <method old="getError()Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Error;" new="m_Hg"/>
   <method old="getException()Ljava/lang/Exception;" new="m_Tm"/>
   <method old="getFileName()Ljava/lang/String;" new="m_Hm"/>
   <method old="getFilePath()Ljava/lang/String;" new="m_CN"/>
   <method old="getFileSize()J" new="m_HO"/>
   <method old="getOutputStream()Ljava/io/OutputStream;" new="m_Da"/>
   <method old="getPeer()Ljava/lang/String;" new="m_vo"/>
   <method old="getProgress()D" new="m_Eo"/>
   <method old="getResponseTimeout()I" new="m_iN"/>
   <method old="getStatus()Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Status;" new="m_yL"/>
   <method old="getStreamID()Ljava/lang/String;" new="m_KM"/>
   <method old="handleXMPPException(Lorg/jivesoftware/smack/XMPPException;)V" new="m_Nn"/>
   <method old="isDone()Z" new="m_CO"/>
   <method old="negotiateStream(Ljava/lang/String;JLjava/lang/String;)Ljava/io/OutputStream;" new="m_LO"/>
   <method old="sendFile(Ljava/io/File;Ljava/lang/String;)V" new="m_JN"/>
   <method old="sendFile(Ljava/lang/String;JLjava/lang/String;)Ljava/io/OutputStream;" new="m_lo"/>
   <method old="sendFile(Ljava/lang/String;JLjava/lang/String;Lorg/jivesoftware/smackx/filetransfer/OutgoingFileTransfer$NegotiationProgress;)V" new="m_UN"/>
   <method old="sendStream(Ljava/io/InputStream;Ljava/lang/String;JLjava/lang/String;)V" new="m_No"/>
   <method old="setError(Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Error;)V" new="m_fN"/>
   <method old="setException(Ljava/lang/Exception;)V" new="m_To"/>
   <method old="setFileInfo(Ljava/lang/String;J)V" new="m_eM"/>
   <method old="setFileInfo(Ljava/lang/String;Ljava/lang/String;J)V" new="m_qm"/>
   <method old="setOutputStream(Ljava/io/OutputStream;)V" new="m_Cn"/>
   <method old="setResponseTimeout(I)V" new="m_Km"/>
   <method old="setStatus(Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Status;)V" new="m_km"/>
   <method old="updateStatus(Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Status;Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Status;)Z" new="m_cm"/>
   <method old="writeToStream(Ljava/io/InputStream;Ljava/io/OutputStream;)V" new="m_ho"/>
   <field old="RESPONSE_TIMEOUT I" new="f_B"/>
   <field old="amountWritten J" new="f_j"/>
   <field old="callback Lorg/jivesoftware/smackx/filetransfer/OutgoingFileTransfer$NegotiationProgress;" new="f_e"/>
   <field old="initiator Ljava/lang/String;" new="f_d"/>
   <field old="negotiator Lorg/jivesoftware/smackx/filetransfer/FileTransferNegotiator;" new="f_m"/>
   <field old="outputStream Ljava/io/OutputStream;" new="f_b"/>
   <field old="streamID Ljava/lang/String;" new="f_k"/>
   <field old="transferThread Ljava/lang/Thread;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.BytestreamListener" new="org.jivesoftware.smackx.bytestreams.c_B">
   <method old="incomingBytestreamRequest(Lorg/jivesoftware/smackx/bytestreams/BytestreamRequest;)V" new="m_ya"/>
  </class>
  <class old="org.jivesoftware.smack.util.collections.ReferenceMap" new="org.jivesoftware.smack.util.collections.ReferenceMap">
   <method old="access$000(Lorg/jivesoftware/smack/util/collections/AbstractReferenceMap;)Ljava/lang/ref/ReferenceQueue;" new="m_Wq"/>
   <method old="addEntry(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;I)V" new="m_Dq"/>
   <method old="addMapping(IILjava/lang/Object;Ljava/lang/Object;)V" new="m_hq"/>
   <method old="calculateNewCapacity(I)I" new="m_up"/>
   <method old="calculateThreshold(IF)I" new="m_aR"/>
   <method old="checkCapacity()V" new="m_Jr"/>
   <method old="clear()V" new="clear"/>
   <method old="clone()Ljava/lang/Object;" new="clone"/>
   <method old="containsKey(Ljava/lang/Object;)Z" new="containsKey"/>
   <method old="containsValue(Ljava/lang/Object;)Z" new="containsValue"/>
   <method old="createEntry(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;ILjava/lang/Object;Ljava/lang/Object;)Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;" new="m_Kp"/>
   <method old="createEntrySetIterator()Ljava/util/Iterator;" new="m_XO"/>
   <method old="createKeySetIterator()Ljava/util/Iterator;" new="m_zq"/>
   <method old="createValuesIterator()Ljava/util/Iterator;" new="m_Lr"/>
   <method old="destroyEntry(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;)V" new="m_uQ"/>
   <method old="doReadObject(Ljava/io/ObjectInputStream;)V" new="m_Ir"/>
   <method old="doWriteObject(Ljava/io/ObjectOutputStream;)V" new="m_Fr"/>
   <method old="ensureCapacity(I)V" new="m_Er"/>
   <method old="entryHashCode(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;)I" new="m_WQ"/>
   <method old="entryKey(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;)Ljava/lang/Object;" new="m_hp"/>
   <method old="entryNext(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;)Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;" new="m_Vq"/>
   <method old="entrySet()Ljava/util/Set;" new="entrySet"/>
   <method old="entryValue(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;)Ljava/lang/Object;" new="m_QP"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="get(Ljava/lang/Object;)Ljava/lang/Object;" new="get"/>
   <method old="getEntry(Ljava/lang/Object;)Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;" new="m_Up"/>
   <method old="hash(Ljava/lang/Object;)I" new="m_UP"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="hashEntry(Ljava/lang/Object;Ljava/lang/Object;)I" new="m_fq"/>
   <method old="hashIndex(II)I" new="m_HR"/>
   <method old="init()V" new="m_ZG"/>
   <method old="isEmpty()Z" new="isEmpty"/>
   <method old="isEqualKey(Ljava/lang/Object;Ljava/lang/Object;)Z" new="m_oQ"/>
   <method old="isEqualValue(Ljava/lang/Object;Ljava/lang/Object;)Z" new="m_Xq"/>
   <method old="keySet()Ljava/util/Set;" new="keySet"/>
   <method old="mapIterator()Lorg/jivesoftware/smack/util/collections/MapIterator;" new="m_Wa"/>
   <method old="purge()V" new="m_xQ"/>
   <method old="purge(Ljava/lang/ref/Reference;)V" new="m_HP"/>
   <method old="purgeBeforeRead()V" new="m_dQ"/>
   <method old="purgeBeforeWrite()V" new="m_cR"/>
   <method old="put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" new="put"/>
   <method old="putAll(Ljava/util/Map;)V" new="putAll"/>
   <method old="readObject(Ljava/io/ObjectInputStream;)V" new="m_CQ"/>
   <method old="remove(Ljava/lang/Object;)Ljava/lang/Object;" new="remove"/>
   <method old="removeEntry(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;ILorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;)V" new="m_ZO"/>
   <method old="removeMapping(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;ILorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;)V" new="m_Jq"/>
   <method old="reuseEntry(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;IILjava/lang/Object;Ljava/lang/Object;)V" new="m_rp"/>
   <method old="size()I" new="size"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="updateEntry(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;Ljava/lang/Object;)V" new="m_KR"/>
   <method old="values()Ljava/util/Collection;" new="values"/>
   <method old="writeObject(Ljava/io/ObjectOutputStream;)V" new="m_CP"/>
   <field old="DEFAULT_CAPACITY I" new="f_J"/>
   <field old="DEFAULT_LOAD_FACTOR F" new="f_H"/>
   <field old="DEFAULT_THRESHOLD I" new="f_M"/>
   <field old="GETKEY_INVALID Ljava/lang/String;" new="f_d"/>
   <field old="GETVALUE_INVALID Ljava/lang/String;" new="f_h"/>
   <field old="HARD I" new="HARD"/>
   <field old="MAXIMUM_CAPACITY I" new="f_g"/>
   <field old="NO_NEXT_ENTRY Ljava/lang/String;" new="f_f"/>
   <field old="NO_PREVIOUS_ENTRY Ljava/lang/String;" new="f_m"/>
   <field old="NULL Ljava/lang/Object;" new="f_b"/>
   <field old="REMOVE_INVALID Ljava/lang/String;" new="f_e"/>
   <field old="SETVALUE_INVALID Ljava/lang/String;" new="f_B"/>
   <field old="SOFT I" new="SOFT"/>
   <field old="WEAK I" new="WEAK"/>
   <field old="data [Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;" new="f_k"/>
   <field old="entrySet Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$EntrySet;" new="f_K"/>
   <field old="keySet Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$KeySet;" new="f_G"/>
   <field old="keyType I" new="f_b"/>
   <field old="loadFactor F" new="f_j"/>
   <field old="modCount I" new="f_I"/>
   <field old="purgeValues Z" new="f_d"/>
   <field old="serialVersionUID J" new="f_m"/>
   <field old="size I" new="f_F"/>
   <field old="threshold I" new="f_l"/>
   <field old="valueType I" new="f_m"/>
   <field old="values Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$Values;" new="f_D"/>
  </class>
  <class old="org.xbill.DNS.U16NameBase" new="org.xbill.DNS.c_Q">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getNameField()Lorg/xbill/DNS/Name;" new="m_ng"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="getU16Field()I" new="m_DG"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="nameField Lorg/xbill/DNS/Name;" new="f_m"/>
   <field old="serialVersionUID J" new="f_e"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
   <field old="u16Field I" new="f_d"/>
  </class>
  <class old="com.xabber.xmpp.archive.AbstractLinkProvider" new="com.xabber.xmpp.archive.c_K">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/archive/AbstractLink;)Lcom/xabber/xmpp/archive/AbstractLink;" new="m_UCa"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
  </class>
  <class old="com.xabber.xmpp.vcard.PhoneticSound" new="com.xabber.xmpp.vcard.c_d">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getValue()Ljava/lang/String;" new="m_Ra"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="setValue(Ljava/lang/String;)V" new="m_TT"/>
   <method old="writeBody(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_zy"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_m"/>
   <field old="PHONETIC_NAME Ljava/lang/String;" new="f_e"/>
   <field old="value Ljava/lang/String;" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smackx.OfflineMessageHeader" new="org.jivesoftware.smackx.c_C">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getJid()Ljava/lang/String;" new="m_tL"/>
   <method old="getStamp()Ljava/lang/String;" new="m_SJ"/>
   <method old="getUser()Ljava/lang/String;" new="m_TA"/>
   <field old="jid Ljava/lang/String;" new="f_b"/>
   <field old="stamp Ljava/lang/String;" new="f_m"/>
   <field old="user Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.roster.GroupManager" new="com.xabber.android.data.roster.c_w">
   <method old="access$000(Lcom/xabber/android/data/roster/GroupManager;Lcom/xabber/android/data/entity/NestedMap;)V" new="m_afa"/>
   <method old="getGroupName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" new="m_gDa"/>
   <method old="getInstance()Lcom/xabber/android/data/roster/GroupManager;" new="m_Xr"/>
   <method old="getShowOfflineMode(Ljava/lang/String;Ljava/lang/String;)Lcom/xabber/android/data/roster/ShowOfflineMode;" new="m_yb"/>
   <method old="isExpanded(Ljava/lang/String;Ljava/lang/String;)Z" new="m_lb"/>
   <method old="onAccountRemoved(Lcom/xabber/android/data/account/AccountItem;)V" new="m_kb"/>
   <method old="onLoad()V" new="m_pA"/>
   <method old="onLoaded(Lcom/xabber/android/data/entity/NestedMap;)V" new="m_JFa"/>
   <method old="requestToWriteGroup(Ljava/lang/String;Ljava/lang/String;ZLcom/xabber/android/data/roster/ShowOfflineMode;)V" new="m_aDa"/>
   <method old="resetShowOfflineModes()V" new="m_tEa"/>
   <method old="setExpanded(Ljava/lang/String;Ljava/lang/String;Z)V" new="m_fC"/>
   <method old="setShowOfflineMode(Ljava/lang/String;Ljava/lang/String;Lcom/xabber/android/data/roster/ShowOfflineMode;)V" new="m_TB"/>
   <field old="ACTIVE_CHATS Ljava/lang/String;" new="f_e"/>
   <field old="IS_ACCOUNT Ljava/lang/String;" new="f_m"/>
   <field old="IS_ROOM Ljava/lang/String;" new="f_b"/>
   <field old="NO_ACCOUNT Ljava/lang/String;" new="f_B"/>
   <field old="NO_GROUP Ljava/lang/String;" new="f_k"/>
   <field old="groupConfigurations Lcom/xabber/android/data/entity/NestedMap;" new="f_d"/>
   <field old="instance Lcom/xabber/android/data/roster/GroupManager;" new="f_j"/>
  </class>
  <class old="org.jivesoftware.smack.proxy.ProxyInfo" new="org.jivesoftware.smack.proxy.c_A">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="forDefaultProxy()Lorg/jivesoftware/smack/proxy/ProxyInfo;" new="m_ju"/>
   <method old="forHttpProxy(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/proxy/ProxyInfo;" new="m_QS"/>
   <method old="forNoProxy()Lorg/jivesoftware/smack/proxy/ProxyInfo;" new="m_pu"/>
   <method old="forSocks4Proxy(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/proxy/ProxyInfo;" new="m_lT"/>
   <method old="forSocks5Proxy(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/proxy/ProxyInfo;" new="m_vS"/>
   <method old="getProxyAddress()Ljava/lang/String;" new="m_DU"/>
   <method old="getProxyPassword()Ljava/lang/String;" new="m_tt"/>
   <method old="getProxyPort()I" new="m_Dt"/>
   <method old="getProxyType()Lorg/jivesoftware/smack/proxy/ProxyInfo$ProxyType;" new="m_kt"/>
   <method old="getProxyUsername()Ljava/lang/String;" new="m_QT"/>
   <method old="getSocketFactory()Ljavax/net/SocketFactory;" new="m_LT"/>
   <field old="proxyAddress Ljava/lang/String;" new="f_d"/>
   <field old="proxyPassword Ljava/lang/String;" new="f_b"/>
   <field old="proxyPort I" new="f_e"/>
   <field old="proxyType Lorg/jivesoftware/smack/proxy/ProxyInfo$ProxyType;" new="f_B"/>
   <field old="proxyUsername Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.FormField$Option" new="org.jivesoftware.smackx.c_z">
   <method old="getLabel()Ljava/lang/String;" new="m_DP"/>
   <method old="getValue()Ljava/lang/String;" new="m_Ra"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="label Ljava/lang/String;" new="f_e"/>
   <field old="value Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.RefreshFailedException" new="org.apache.harmony.javax.security.auth.RefreshFailedException">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <field old="serialVersionUID J" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.packet.Presence" new="org.jivesoftware.smack.packet.c_K">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getLanguage()Ljava/lang/String;" new="m_lJ"/>
   <method old="getMode()Lorg/jivesoftware/smack/packet/Presence$Mode;" new="m_de"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getPriority()I" new="m_iD"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getStatus()Ljava/lang/String;" new="m_yL"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/Presence$Type;" new="m_b"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="isAvailable()Z" new="m_Tt"/>
   <method old="isAway()Z" new="m_xt"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setLanguage(Ljava/lang/String;)V" new="m_bL"/>
   <method old="setMode(Lorg/jivesoftware/smack/packet/Presence$Mode;)V" new="m_LS"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setPriority(I)V" new="m_iT"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setStatus(Ljava/lang/String;)V" new="m_fT"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/Presence$Type;)V" new="m_eu"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="language Ljava/lang/String;" new="f_B"/>
   <field old="mode Lorg/jivesoftware/smack/packet/Presence$Mode;" new="f_m"/>
   <field old="priority I" new="f_b"/>
   <field old="status Ljava/lang/String;" new="f_e"/>
   <field old="type Lorg/jivesoftware/smack/packet/Presence$Type;" new="f_d"/>
  </class>
  <class old="org.xbill.DNS.NXTRecord" new="org.xbill.DNS.c_fa">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getBitmap()Ljava/util/BitSet;" new="m_oi"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getNext()Lorg/xbill/DNS/Name;" new="m_Ui"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="bitmap Ljava/util/BitSet;" new="f_m"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="next Lorg/xbill/DNS/Name;" new="f_e"/>
   <field old="serialVersionUID J" new="f_b"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smackx.ReportedData$Column" new="org.jivesoftware.smackx.ReportedData$Column">
   <method old="getLabel()Ljava/lang/String;" new="m_DP"/>
   <method old="getType()Ljava/lang/String;" new="m_b"/>
   <method old="getVariable()Ljava/lang/String;" new="m_tr"/>
   <field old="label Ljava/lang/String;" new="f_e"/>
   <field old="type Ljava/lang/String;" new="f_b"/>
   <field old="variable Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.helper.ManagedDialog$1" new="com.xabber.android.ui.helper.c_m">
   <method old="onClick(Landroid/view/View;)V" new="onClick"/>
   <field old="this$0 Lcom/xabber/android/ui/helper/ManagedDialog;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.helper.ManagedDialog$2" new="com.xabber.android.ui.helper.c_B">
   <method old="onClick(Landroid/view/View;)V" new="onClick"/>
   <field old="this$0 Lcom/xabber/android/ui/helper/ManagedDialog;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.helper.ManagedDialog$3" new="com.xabber.android.ui.helper.c_A">
   <method old="onClick(Landroid/view/View;)V" new="onClick"/>
   <field old="this$0 Lcom/xabber/android/ui/helper/ManagedDialog;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.MUCUser$Destroy" new="org.jivesoftware.smackx.packet.c_W">
   <method old="getJid()Ljava/lang/String;" new="m_tL"/>
   <method old="getReason()Ljava/lang/String;" new="m_zj"/>
   <method old="setJid(Ljava/lang/String;)V" new="m_AJ"/>
   <method old="setReason(Ljava/lang/String;)V" new="m_QJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="jid Ljava/lang/String;" new="f_m"/>
   <field old="reason Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="com.jcraft.jzlib.ZStream" new="wy.c_Oc">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="deflate(I)I" new="m_Mma"/>
   <method old="deflateEnd()I" new="m_dMa"/>
   <method old="deflateInit(I)I" new="m_VNa"/>
   <method old="deflateInit(II)I" new="m_rna"/>
   <method old="deflateInit(IIZ)I" new="m_qMa"/>
   <method old="deflateInit(IZ)I" new="m_CMa"/>
   <method old="deflateParams(II)I" new="m_lma"/>
   <method old="deflateSetDictionary([BI)I" new="m_YMa"/>
   <method old="flush_pending()V" new="m_Ana"/>
   <method old="free()V" new="m_HOa"/>
   <method old="inflate(I)I" new="m_Jna"/>
   <method old="inflateEnd()I" new="m_foa"/>
   <method old="inflateInit()I" new="m_wMa"/>
   <method old="inflateInit(I)I" new="m_wNa"/>
   <method old="inflateInit(IZ)I" new="m_noa"/>
   <method old="inflateInit(Z)I" new="m_fMa"/>
   <method old="inflateSetDictionary([BI)I" new="m_wLa"/>
   <method old="inflateSync()I" new="m_AMa"/>
   <method old="read_buf([BII)I" new="m_mNa"/>
   <field old="DEF_WBITS I" new="f_a"/>
   <field old="MAX_MEM_LEVEL I" new="f_F"/>
   <field old="MAX_WBITS I" new="f_c"/>
   <field old="Z_BUF_ERROR I" new="f_m"/>
   <field old="Z_DATA_ERROR I" new="f_M"/>
   <field old="Z_ERRNO I" new="f_H"/>
   <field old="Z_FINISH I" new="f_S"/>
   <field old="Z_FULL_FLUSH I" new="f_b"/>
   <field old="Z_MEM_ERROR I" new="f_G"/>
   <field old="Z_NEED_DICT I" new="f_y"/>
   <field old="Z_NO_FLUSH I" new="f_I"/>
   <field old="Z_OK I" new="f_k"/>
   <field old="Z_PARTIAL_FLUSH I" new="f_e"/>
   <field old="Z_STREAM_END I" new="f_B"/>
   <field old="Z_STREAM_ERROR I" new="f_Z"/>
   <field old="Z_SYNC_FLUSH I" new="f_E"/>
   <field old="Z_VERSION_ERROR I" new="f_L"/>
   <field old="_adler Lcom/jcraft/jzlib/Adler32;" new="f_C"/>
   <field old="adler J" new="f_p"/>
   <field old="avail_in I" new="f_i"/>
   <field old="avail_out I" new="f_g"/>
   <field old="data_type I" new="f_l"/>
   <field old="dstate Lcom/jcraft/jzlib/Deflate;" new="f_u"/>
   <field old="istate Lcom/jcraft/jzlib/Inflate;" new="f_h"/>
   <field old="msg Ljava/lang/String;" new="f_J"/>
   <field old="next_in [B" new="f_f"/>
   <field old="next_in_index I" new="f_K"/>
   <field old="next_out [B" new="f_A"/>
   <field old="next_out_index I" new="f_d"/>
   <field old="total_in J" new="f_j"/>
   <field old="total_out J" new="f_D"/>
  </class>
  <class old="com.xabber.android.data.message.phrase.Phrase" new="wy.c_rA">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="compile(Ljava/lang/String;)Ljava/util/regex/Pattern;" new="m_fDa"/>
   <method old="getGroup()Ljava/lang/String;" new="m_Eea"/>
   <method old="getId()Ljava/lang/Long;" new="m_Hca"/>
   <method old="getSound()Landroid/net/Uri;" new="m_Qc"/>
   <method old="getText()Ljava/lang/String;" new="m_ZA"/>
   <method old="getUser()Ljava/lang/String;" new="m_TA"/>
   <method old="isRegexp()Z" new="m_XEa"/>
   <method old="matches(Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)Z" new="m_Kfa"/>
   <method old="setId(Ljava/lang/Long;)V" new="m_Cga"/>
   <method old="update(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLandroid/net/Uri;)V" new="m_LDa"/>
   <field old="group Ljava/lang/String;" new="f_m"/>
   <field old="groupPattern Ljava/util/regex/Pattern;" new="f_B"/>
   <field old="id Ljava/lang/Long;" new="f_d"/>
   <field old="regexp Z" new="f_l"/>
   <field old="sound Landroid/net/Uri;" new="f_f"/>
   <field old="text Ljava/lang/String;" new="f_b"/>
   <field old="textPattern Ljava/util/regex/Pattern;" new="f_j"/>
   <field old="user Ljava/lang/String;" new="f_e"/>
   <field old="userPattern Ljava/util/regex/Pattern;" new="f_k"/>
  </class>
  <class old="org.jivesoftware.smack.util.DNSUtil$HostAddress" new="org.jivesoftware.smack.util.c_j">
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getHost()Ljava/lang/String;" new="m_vD"/>
   <method old="getPort()I" new="m_Jg"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="host Ljava/lang/String;" new="f_e"/>
   <field old="port I" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.ssn.FeatureProvider" new="com.xabber.xmpp.ssn.c_E">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/ssn/Feature;" new="m_ZZ"/>
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/PacketExtension;" new="m_I"/>
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_I"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/ssn/Feature;)Z" new="m_az"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
  </class>
  <class old="com.xabber.android.data.roster.GroupConfiguration" new="com.xabber.android.data.roster.c_q">
   <method old="getShowOfflineMode()Lcom/xabber/android/data/roster/ShowOfflineMode;" new="m_FCa"/>
   <method old="isExpanded()Z" new="m_Nba"/>
   <method old="setExpanded(Z)V" new="m_MEa"/>
   <method old="setShowOfflineMode(Lcom/xabber/android/data/roster/ShowOfflineMode;)V" new="m_Zea"/>
   <field old="expanded Z" new="f_e"/>
   <field old="showOfflineMode Lcom/xabber/android/data/roster/ShowOfflineMode;" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.archive.SaveMode" new="com.xabber.xmpp.archive.SaveMode">
   <method old="fromString(Ljava/lang/String;)Lcom/xabber/xmpp/archive/SaveMode;" new="m_tc"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/xmpp/archive/SaveMode;" new="valueOf"/>
   <method old="values()[Lcom/xabber/xmpp/archive/SaveMode;" new="values"/>
   <field old="$VALUES [Lcom/xabber/xmpp/archive/SaveMode;" new="f_e"/>
   <field old="body Lcom/xabber/xmpp/archive/SaveMode;" new="f_d"/>
   <field old="fls Lcom/xabber/xmpp/archive/SaveMode;" new="f_j"/>
   <field old="message Lcom/xabber/xmpp/archive/SaveMode;" new="f_B"/>
   <field old="stream Lcom/xabber/xmpp/archive/SaveMode;" new="f_b"/>
   <field old="value Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.PrivacyListManager$1" new="org.jivesoftware.smack.c_i">
   <method old="connectionCreated(Lorg/jivesoftware/smack/Connection;)V" new="m_q"/>
  </class>
  <class old="org.jivesoftware.smack.PrivacyListManager$2" new="org.jivesoftware.smack.c_b">
   <method old="connectionClosed()V" new="m_r"/>
   <method old="connectionClosedOnError(Ljava/lang/Exception;)V" new="m_U"/>
   <method old="reconnectingIn(I)V" new="m_Z"/>
   <method old="reconnectionFailed(Ljava/lang/Exception;)V" new="m_S"/>
   <method old="reconnectionSuccessful()V" new="m_W"/>
   <field old="this$0 Lorg/jivesoftware/smack/PrivacyListManager;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.PrivacyListManager$3" new="org.jivesoftware.smack.c_I">
   <method old="processPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_C"/>
   <field old="this$0 Lorg/jivesoftware/smack/PrivacyListManager;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.SimpleResolver" new="org.xbill.DNS.c_Y">
   <method old="applyEDNS(Lorg/xbill/DNS/Message;)V" new="m_fD"/>
   <method old="getAddress()Ljava/net/InetSocketAddress;" new="m_kf"/>
   <method old="getTSIGKey()Lorg/xbill/DNS/TSIG;" new="m_eD"/>
   <method old="getTimeout()J" new="m_yF"/>
   <method old="maxUDPSize(Lorg/xbill/DNS/Message;)I" new="m_gF"/>
   <method old="parseMessage([B)Lorg/xbill/DNS/Message;" new="m_xf"/>
   <method old="send(Lorg/xbill/DNS/Message;)Lorg/xbill/DNS/Message;" new="m_d"/>
   <method old="sendAXFR(Lorg/xbill/DNS/Message;)Lorg/xbill/DNS/Message;" new="m_me"/>
   <method old="sendAsync(Lorg/xbill/DNS/Message;Lorg/xbill/DNS/ResolverListener;)Ljava/lang/Object;" new="m_L"/>
   <method old="setAddress(Ljava/net/InetAddress;)V" new="m_jD"/>
   <method old="setAddress(Ljava/net/InetSocketAddress;)V" new="m_FD"/>
   <method old="setDefaultResolver(Ljava/lang/String;)V" new="m_Me"/>
   <method old="setEDNS(I)V" new="m_j"/>
   <method old="setEDNS(IIILjava/util/List;)V" new="m_K"/>
   <method old="setIgnoreTruncation(Z)V" new="m_e"/>
   <method old="setLocalAddress(Ljava/net/InetAddress;)V" new="m_Af"/>
   <method old="setLocalAddress(Ljava/net/InetSocketAddress;)V" new="m_ID"/>
   <method old="setPort(I)V" new="m_m"/>
   <method old="setTCP(Z)V" new="m_E"/>
   <method old="setTSIGKey(Lorg/xbill/DNS/TSIG;)V" new="m_c"/>
   <method old="setTimeout(I)V" new="m_M"/>
   <method old="setTimeout(II)V" new="m_B"/>
   <method old="verifyTSIG(Lorg/xbill/DNS/Message;Lorg/xbill/DNS/Message;[BLorg/xbill/DNS/TSIG;)V" new="m_gE"/>
   <field old="DEFAULT_EDNS_PAYLOADSIZE I" new="f_j"/>
   <field old="DEFAULT_PORT I" new="f_k"/>
   <field old="DEFAULT_UDPSIZE S" new="f_f"/>
   <field old="address Ljava/net/InetSocketAddress;" new="f_e"/>
   <field old="defaultResolver Ljava/lang/String;" new="f_l"/>
   <field old="ignoreTruncation Z" new="f_K"/>
   <field old="localAddress Ljava/net/InetSocketAddress;" new="f_m"/>
   <field old="queryOPT Lorg/xbill/DNS/OPTRecord;" new="f_d"/>
   <field old="timeoutValue J" new="f_J"/>
   <field old="tsig Lorg/xbill/DNS/TSIG;" new="f_b"/>
   <field old="uniqueID I" new="f_B"/>
   <field old="useTCP Z" new="f_I"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.params.DHPrivateKeyParameters" new="wy.c_NC">
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getParameters()Lnet/java/otr4j/bouncycastle/crypto/params/DHParameters;" new="m_Paa"/>
   <method old="getX()Ljava/math/BigInteger;" new="m_Gz"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="isPrivate()Z" new="m_Gaa"/>
   <field old="privateKey Z" new="f_m"/>
   <field old="x Ljava/math/BigInteger;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.adapter.BaseContactAdapter$1" new="com.xabber.android.ui.adapter.c_t">
  </class>
  <class old="net.java.otr4j.OtrKeyManagerImpl$DefaultPropertiesStore" new="net.java.otr4j.c_k">
   <method old="getConfigurationFile()Ljava/io/File;" new="m_BX"/>
   <method old="getPropertyBoolean(Ljava/lang/String;Z)Z" new="m_DB"/>
   <method old="getPropertyBytes(Ljava/lang/String;)[B" new="m_Rb"/>
   <method old="removeProperty(Ljava/lang/String;)V" new="m_Jd"/>
   <method old="setProperty(Ljava/lang/String;Z)V" new="m_Ab"/>
   <method old="setProperty(Ljava/lang/String;[B)V" new="m_gd"/>
   <method old="store()V" new="m_uY"/>
   <field old="filepath Ljava/lang/String;" new="f_b"/>
   <field old="properties Ljava/util/Properties;" new="f_e"/>
   <field old="this$0 Lnet/java/otr4j/OtrKeyManagerImpl;" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.archive.AbstractMessageProvider" new="com.xabber.xmpp.archive.c_H">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/archive/AbstractMessage;)Z" new="m_OCa"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/archive/AbstractMessage;)Lcom/xabber/xmpp/archive/AbstractMessage;" new="m_sba"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
  </class>
  <class old="org.jivesoftware.smack.NonSASLAuthentication" new="org.jivesoftware.smack.c_n">
   <method old="authenticate(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" new="m_Pd"/>
   <method old="authenticate(Ljava/lang/String;Ljava/lang/String;Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;)Ljava/lang/String;" new="m_eC"/>
   <method old="authenticateAnonymously()Ljava/lang/String;" new="m_LB"/>
   <field old="connection Lorg/jivesoftware/smack/Connection;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.DNSSEC$IncompatibleKeyException" new="org.xbill.DNS.c_bd">
  </class>
  <class old="com.xabber.android.ui.MUCEditor" new="com.xabber.android.ui.MUCEditor">
   <method old="createIntent(Landroid/content/Context;)Landroid/content/Intent;" new="m_yBa"/>
   <method old="createIntent(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;" new="m_CAa"/>
   <method old="createInviteIntent(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;" new="m_qBa"/>
   <method old="getAccount(Landroid/content/Intent;)Ljava/lang/String;" new="m_lCa"/>
   <method old="getNickname(Ljava/lang/String;)Ljava/lang/String;" new="m_OBa"/>
   <method old="getUser(Landroid/content/Intent;)Ljava/lang/String;" new="m_NCa"/>
   <method old="onAccept(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_Lc"/>
   <method old="onActivityResult(IILandroid/content/Intent;)V" new="onActivityResult"/>
   <method old="onCancel(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_Vb"/>
   <method old="onClick(Landroid/view/View;)V" new="onClick"/>
   <method old="onCreate(Landroid/os/Bundle;)V" new="onCreate"/>
   <method old="onCreateDialog(I)Landroid/app/Dialog;" new="onCreateDialog"/>
   <method old="onDecline(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_ad"/>
   <method old="onDestroy()V" new="onDestroy"/>
   <method old="onItemSelected(Landroid/widget/AdapterView;Landroid/view/View;IJ)V" new="onItemSelected"/>
   <method old="onNewIntent(Landroid/content/Intent;)V" new="onNewIntent"/>
   <method old="onNothingSelected(Landroid/widget/AdapterView;)V" new="onNothingSelected"/>
   <method old="onPause()V" new="onPause"/>
   <method old="onResume()V" new="onResume"/>
   <method old="onSaveInstanceState(Landroid/os/Bundle;)V" new="onSaveInstanceState"/>
   <method old="startActivity(Landroid/content/Intent;)V" new="startActivity"/>
   <method old="startActivityForResult(Landroid/content/Intent;I)V" new="startActivityForResult"/>
   <field old="ACTION_MUC_INVITE Ljava/lang/String;" new="f_B"/>
   <field old="DIALOG_MUC_INVITE_ID I" new="f_f"/>
   <field old="SAVED_ACCOUNT Ljava/lang/String;" new="f_m"/>
   <field old="SAVED_ROOM Ljava/lang/String;" new="f_l"/>
   <field old="account Ljava/lang/String;" new="f_k"/>
   <field old="accountView Landroid/widget/Spinner;" new="f_I"/>
   <field old="nickView Landroid/widget/EditText;" new="f_K"/>
   <field old="passwordView Landroid/widget/EditText;" new="f_b"/>
   <field old="room Ljava/lang/String;" new="f_j"/>
   <field old="roomInvite Lcom/xabber/android/data/extension/muc/RoomInvite;" new="f_J"/>
   <field old="roomView Landroid/widget/EditText;" new="f_D"/>
   <field old="selectedAccount I" new="f_d"/>
   <field old="serverView Landroid/widget/EditText;" new="f_e"/>
  </class>
  <class old="org.apache.qpid.management.common.sasl.UserPasswordCallbackHandler" new="wy.c_Sa">
   <method old="clearPassword()V" new="m_zw"/>
   <method old="finalize()V" new="finalize"/>
   <method old="handle([Lorg/apache/harmony/javax/security/auth/callback/Callback;)V" new="m_Jb"/>
   <field old="pwchars [C" new="f_m"/>
   <field old="user Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.extension.avatar.AvatarManager" new="wy.c_fb">
   <method old="access$000(Lcom/xabber/android/data/extension/avatar/AvatarManager;Ljava/util/Map;Ljava/util/Map;)V" new="m_Pha"/>
   <method old="access$100(Lcom/xabber/android/data/extension/avatar/AvatarManager;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_SIa"/>
   <method old="access$200(Lcom/xabber/android/data/extension/avatar/AvatarManager;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[BLandroid/graphics/Bitmap;)V" new="m_Kha"/>
   <method old="createShortcutBitmap(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap;" new="m_iia"/>
   <method old="getAccountAvatar(Ljava/lang/String;)Landroid/graphics/drawable/Drawable;" new="m_dia"/>
   <method old="getBitmap(Ljava/lang/String;)Landroid/graphics/Bitmap;" new="m_ZIa"/>
   <method old="getInstance()Lcom/xabber/android/data/extension/avatar/AvatarManager;" new="m_Xr"/>
   <method old="getLauncherLargeIconSize()I" new="m_Xga"/>
   <method old="getOccupantAvatar(Ljava/lang/String;)Landroid/graphics/drawable/Drawable;" new="m_YGa"/>
   <method old="getRoomAvatar(Ljava/lang/String;)Landroid/graphics/drawable/Drawable;" new="m_Mga"/>
   <method old="getRoomAvatarForContactList(Ljava/lang/String;)Landroid/graphics/drawable/Drawable;" new="m_gHa"/>
   <method old="getRoomBitmap(Ljava/lang/String;)Landroid/graphics/Bitmap;" new="m_CHa"/>
   <method old="getUserAvatar(Ljava/lang/String;)Landroid/graphics/drawable/Drawable;" new="m_Via"/>
   <method old="getUserAvatarForContactList(Ljava/lang/String;)Landroid/graphics/drawable/Drawable;" new="m_qGa"/>
   <method old="getUserBitmap(Ljava/lang/String;)Landroid/graphics/Bitmap;" new="m_Nha"/>
   <method old="loadBitmap(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_QHa"/>
   <method old="makeBitemap([B)Landroid/graphics/Bitmap;" new="m_tIa"/>
   <method old="onAvatarReceived(Ljava/lang/String;Ljava/lang/String;[B)V" new="m_rHa"/>
   <method old="onBitmapLoaded(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[BLandroid/graphics/Bitmap;)V" new="m_Yha"/>
   <method old="onLoad()V" new="m_pA"/>
   <method old="onLoaded(Ljava/util/Map;Ljava/util/Map;)V" new="m_BIa"/>
   <method old="onLowMemory()V" new="m_Wb"/>
   <method old="onPacket(Lcom/xabber/android/data/connection/ConnectionItem;Ljava/lang/String;Lorg/jivesoftware/smack/packet/Packet;)V" new="m_tC"/>
   <method old="onPhotoReady(Ljava/lang/String;Ljava/lang/String;Lcom/xabber/xmpp/avatar/VCardUpdate;)V" new="m_MGa"/>
   <method old="setHash(Ljava/lang/String;Ljava/lang/String;)V" new="m_jia"/>
   <method old="setValue(Ljava/lang/String;[B)V" new="m_Cia"/>
   <field old="EMPTY_BITMAP Landroid/graphics/Bitmap;" new="f_f"/>
   <field old="EMPTY_HASH Ljava/lang/String;" new="f_j"/>
   <field old="MAX_SIZE I" new="f_B"/>
   <field old="accountAvatarSet Lcom/xabber/android/data/extension/avatar/AccountAvatarSet;" new="f_e"/>
   <field old="application Lcom/xabber/android/data/Application;" new="f_m"/>
   <field old="bitmaps Ljava/util/Map;" new="f_I"/>
   <field old="contactListDrawables Ljava/util/Map;" new="f_b"/>
   <field old="hashes Ljava/util/Map;" new="f_K"/>
   <field old="instance Lcom/xabber/android/data/extension/avatar/AvatarManager;" new="f_l"/>
   <field old="roomAvatarSet Lcom/xabber/android/data/extension/avatar/BaseAvatarSet;" new="f_d"/>
   <field old="userAvatarSet Lcom/xabber/android/data/extension/avatar/BaseAvatarSet;" new="f_k"/>
  </class>
  <class old="com.xabber.android.data.account.OnAccountChangedListener" new="com.xabber.android.data.account.c_E">
   <method old="onAccountsChanged(Ljava/util/Collection;)V" new="m_vB"/>
  </class>
  <class old="com.xabber.android.data.extension.time.TimeManager" new="wy.c_UB">
   <method old="getInstance()Lcom/xabber/android/data/extension/time/TimeManager;" new="m_Xr"/>
   <method old="getServerTime(Ljava/lang/String;)Ljava/util/Date;" new="m_gha"/>
   <method old="getServerTimeOffset(Ljava/lang/String;)J" new="m_iGa"/>
   <method old="onAvailable(Lcom/xabber/android/data/connection/ConnectionItem;)V" new="m_UHa"/>
   <method old="onDisconnect(Ljava/lang/String;Ljava/lang/String;)V" new="m_Uc"/>
   <method old="onError(Ljava/lang/String;Ljava/lang/String;Lorg/jivesoftware/smack/packet/IQ;)V" new="m_Ld"/>
   <method old="onPacket(Lcom/xabber/android/data/connection/ConnectionItem;Ljava/lang/String;Lorg/jivesoftware/smack/packet/Packet;)V" new="m_tC"/>
   <method old="onReceived(Ljava/lang/String;Ljava/lang/String;Lorg/jivesoftware/smack/packet/IQ;)V" new="m_VA"/>
   <method old="onServerInfoReceived(Lcom/xabber/android/data/connection/ConnectionItem;)V" new="m_zB"/>
   <method old="onTimeout(Ljava/lang/String;Ljava/lang/String;)V" new="m_aC"/>
   <field old="FEATURE Ljava/lang/String;" new="f_m"/>
   <field old="instance Lcom/xabber/android/data/extension/time/TimeManager;" new="f_e"/>
   <field old="offsets Ljava/util/Map;" new="f_b"/>
   <field old="sents Ljava/util/Map;" new="f_d"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.KeyGenerationParameters" new="net.java.otr4j.bouncycastle.crypto.c_j">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getRandom()Ljava/security/SecureRandom;" new="m_Qy"/>
   <method old="getStrength()I" new="m_iZ"/>
   <field old="random Ljava/security/SecureRandom;" new="f_m"/>
   <field old="strength I" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.extension.archive.OnArchiveModificationsReceivedListener" new="com.xabber.android.data.extension.archive.c_E">
   <method old="onArchiveModificationsReceived(Lcom/xabber/android/data/connection/ConnectionItem;)V" new="m_Ad"/>
  </class>
  <class old="org.xbill.DNS.Compression" new="org.xbill.DNS.c_Tb">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="add(ILorg/xbill/DNS/Name;)V" new="m_kI"/>
   <method old="get(Lorg/xbill/DNS/Name;)I" new="m_Bh"/>
   <field old="MAX_POINTER I" new="f_b"/>
   <field old="TABLE_SIZE I" new="f_e"/>
   <field old="table [Lorg/xbill/DNS/Compression$Entry;" new="f_m"/>
   <field old="verbose Z" new="f_d"/>
  </class>
  <class old="com.xabber.xmpp.form.DataFormType" new="com.xabber.xmpp.form.DataFormType">
   <method old="fromString(Ljava/lang/String;)Lcom/xabber/xmpp/form/DataFormType;" new="m_tc"/>
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/xmpp/form/DataFormType;" new="valueOf"/>
   <method old="values()[Lcom/xabber/xmpp/form/DataFormType;" new="values"/>
   <field old="$VALUES [Lcom/xabber/xmpp/form/DataFormType;" new="f_b"/>
   <field old="cancel Lcom/xabber/xmpp/form/DataFormType;" new="f_e"/>
   <field old="form Lcom/xabber/xmpp/form/DataFormType;" new="f_B"/>
   <field old="result Lcom/xabber/xmpp/form/DataFormType;" new="f_m"/>
   <field old="submit Lcom/xabber/xmpp/form/DataFormType;" new="f_d"/>
  </class>
  <class old="com.xabber.android.ui.helper.DummyAvatarInflaterHelper" new="com.xabber.android.ui.helper.c_J">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createAbstractContactInflaterHelper()Lcom/xabber/android/ui/helper/AbstractAvatarInflaterHelper;" new="m_kCa"/>
   <method old="updateAvatar(Landroid/widget/ImageView;Lcom/xabber/android/data/roster/AbstractContact;)V" new="m_jba"/>
  </class>
  <class old="com.xabber.xmpp.archive.ChangedProvider" new="com.xabber.xmpp.archive.c_Y">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/archive/Changed;" new="m_ZZ"/>
   <method old="getInstance()Lcom/xabber/xmpp/archive/ChangedProvider;" new="m_Xr"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/archive/AbstractModified;)Lcom/xabber/xmpp/archive/AbstractModified;" new="m_Mba"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
   <field old="instance Lcom/xabber/xmpp/archive/ChangedProvider;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.message.chat.PrivateChatTable$Fields" new="wy.c_QC">
   <field old="ACCOUNT Ljava/lang/String;" new="f_m"/>
   <field old="USER Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.message.AbstractChat" new="com.xabber.android.data.message.c_H">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="accept(Ljava/lang/String;Ljava/lang/String;)Z" new="m_Uda"/>
   <method old="access$000(Lcom/xabber/android/data/message/AbstractChat;)V" new="m_rfa"/>
   <method old="access$100(Lcom/xabber/android/data/message/AbstractChat;Lcom/xabber/android/data/message/MessageItem;)V" new="m_WDa"/>
   <method old="access$200(Lcom/xabber/android/data/message/AbstractChat;Ljava/util/Collection;)V" new="m_vfa"/>
   <method old="access$300(Lcom/xabber/android/data/message/AbstractChat;)V" new="m_xda"/>
   <method old="access$400(Lcom/xabber/android/data/message/AbstractChat;)Ljava/lang/String;" new="m_RFa"/>
   <method old="access$500(Lcom/xabber/android/data/message/AbstractChat;)Ljava/lang/String;" new="m_LFa"/>
   <method old="addMessages(Ljava/util/Collection;)V" new="m_Pfa"/>
   <method old="canSendMessage()Z" new="m_nea"/>
   <method old="closeChat()V" new="m_fea"/>
   <method old="compareTo(Lcom/xabber/android/data/entity/BaseEntity;)I" new="m_bCa"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="createMessageItem(Landroid/database/Cursor;)Lcom/xabber/android/data/message/MessageItem;" new="m_eEa"/>
   <method old="createMessagePacket(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/Message;" new="m_kfa"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="equals(Ljava/lang/String;Ljava/lang/String;)Z" new="m_Bba"/>
   <method old="getAccount()Ljava/lang/String;" new="m_FC"/>
   <method old="getFirstNotification()Z" new="m_dDa"/>
   <method old="getLastText()Ljava/lang/String;" new="m_mfa"/>
   <method old="getLastTime()Ljava/util/Date;" new="m_Ega"/>
   <method old="getMessages()Ljava/util/Collection;" new="m_oP"/>
   <method old="getRequiredMessageCount()I" new="m_XFa"/>
   <method old="getThreadId()Ljava/lang/String;" new="m_Aea"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/Message$Type;" new="m_b"/>
   <method old="getUser()Ljava/lang/String;" new="m_TA"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="isActive()Z" new="m_iFa"/>
   <method old="isStatusTrackingEnabled()Z" new="m_Ufa"/>
   <method old="loadHistory()V" new="m_JDa"/>
   <method old="loadMessages()V" new="m_ufa"/>
   <method old="newAction(Ljava/lang/String;Ljava/lang/String;Lcom/xabber/android/data/message/ChatAction;)V" new="m_BEa"/>
   <method old="newMessage(Ljava/lang/String;)Lcom/xabber/android/data/message/MessageItem;" new="m_Xda"/>
   <method old="newMessage(Ljava/lang/String;Ljava/lang/String;Lcom/xabber/android/data/message/ChatAction;Ljava/util/Date;ZZZZZ)Lcom/xabber/android/data/message/MessageItem;" new="m_Afa"/>
   <method old="notifyAboutMessage()Z" new="m_Nda"/>
   <method old="onComplete()V" new="m_GDa"/>
   <method old="onDisconnect()V" new="m_zDa"/>
   <method old="onMessageDownloaded(Ljava/lang/String;Ljava/util/Collection;Z)I" new="m_wfa"/>
   <method old="onPacket(Ljava/lang/String;Lorg/jivesoftware/smack/packet/Packet;)Z" new="m_cDa"/>
   <method old="openChat()V" new="m_kFa"/>
   <method old="prepareText(Ljava/lang/String;)Ljava/lang/String;" new="m_mEa"/>
   <method old="removeAllMessages()V" new="m_zEa"/>
   <method old="removeMessage(Lcom/xabber/android/data/message/MessageItem;)V" new="m_gFa"/>
   <method old="requestToLoadLocalHistory()V" new="m_UFa"/>
   <method old="requestToWriteMessage(Lcom/xabber/android/data/message/MessageItem;Ljava/lang/String;Ljava/lang/String;Lcom/xabber/android/data/message/ChatAction;Ljava/util/Date;Ljava/util/Date;ZZZ)V" new="m_Qda"/>
   <method old="sendMessages()V" new="m_aEa"/>
   <method old="sendQueue(Lcom/xabber/android/data/message/MessageItem;)V" new="m_lea"/>
   <method old="sort()V" new="m_OEa"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="updateSendQuery(Lcom/xabber/android/data/message/MessageItem;)V" new="m_Jfa"/>
   <method old="updateThreadId(Ljava/lang/String;)V" new="m_vEa"/>
   <field old="NO_RECORD_TAG Ljava/lang/String;" new="f_d"/>
   <field old="PRELOADED_MESSAGES I" new="f_j"/>
   <field old="account Ljava/lang/String;" new="f_m"/>
   <field old="active Z" new="f_K"/>
   <field old="firstNotification Z" new="f_m"/>
   <field old="historyIds Ljava/util/Collection;" new="f_k"/>
   <field old="lastText Ljava/lang/String;" new="f_B"/>
   <field old="lastTime Ljava/util/Date;" new="f_f"/>
   <field old="messages Ljava/util/List;" new="f_I"/>
   <field old="sendQuery Ljava/util/Collection;" new="f_e"/>
   <field old="threadId Ljava/lang/String;" new="f_l"/>
   <field old="trackStatus Z" new="f_b"/>
   <field old="user Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.filetransfer.OutgoingFileTransfer$NegotiationProgress" new="org.jivesoftware.smackx.filetransfer.c_E">
   <method old="errorEstablishingStream(Ljava/lang/Exception;)V" new="m_Ga"/>
   <method old="outputStreamEstablished(Ljava/io/OutputStream;)V" new="m_Fa"/>
   <method old="statusUpdated(Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Status;Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Status;)V" new="m_Ha"/>
  </class>
  <class old="com.xabber.android.ui.widget.PageSwitcher$1" new="com.xabber.android.ui.widget.c_A">
   <method old="onChanged()V" new="onChanged"/>
   <method old="onInvalidated()V" new="onInvalidated"/>
   <field old="this$0 Lcom/xabber/android/ui/widget/PageSwitcher;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.widget.PageSwitcher$2" new="com.xabber.android.ui.widget.c_H">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/ui/widget/PageSwitcher;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceValues" new="org.jivesoftware.smack.util.collections.c_g">
   <method old="clear()V" new="clear"/>
   <method old="contains(Ljava/lang/Object;)Z" new="contains"/>
   <method old="iterator()Ljava/util/Iterator;" new="iterator"/>
   <method old="size()I" new="size"/>
   <method old="toArray()[Ljava/lang/Object;" new="toArray"/>
   <method old="toArray([Ljava/lang/Object;)[Ljava/lang/Object;" new="toArray"/>
   <field old="parent Lorg/jivesoftware/smack/util/collections/AbstractHashedMap;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.AccountAdd" new="com.xabber.android.ui.AccountAdd">
   <method old="createAuthenticatorResult(Landroid/content/Context;Ljava/lang/String;)Landroid/content/Intent;" new="m_cga"/>
   <method old="createIntent(Landroid/content/Context;)Landroid/content/Intent;" new="m_yBa"/>
   <method old="getAuthenticatorResultAccount(Landroid/content/Intent;)Ljava/lang/String;" new="m_Gfa"/>
   <method old="onActivityResult(IILandroid/content/Intent;)V" new="onActivityResult"/>
   <method old="onClick(Landroid/view/View;)V" new="onClick"/>
   <method old="onCreate(Landroid/os/Bundle;)V" new="onCreate"/>
   <method old="onCreateDialog(I)Landroid/app/Dialog;" new="onCreateDialog"/>
   <method old="onDestroy()V" new="onDestroy"/>
   <method old="onItemSelected(Landroid/widget/AdapterView;Landroid/view/View;IJ)V" new="onItemSelected"/>
   <method old="onNewIntent(Landroid/content/Intent;)V" new="onNewIntent"/>
   <method old="onNothingSelected(Landroid/widget/AdapterView;)V" new="onNothingSelected"/>
   <method old="onPause()V" new="onPause"/>
   <method old="onResume()V" new="onResume"/>
   <method old="onSaveInstanceState(Landroid/os/Bundle;)V" new="onSaveInstanceState"/>
   <method old="startActivity(Landroid/content/Intent;)V" new="startActivity"/>
   <method old="startActivityForResult(Landroid/content/Intent;I)V" new="startActivityForResult"/>
   <field old="OAUTH_WML_REQUEST_CODE I" new="f_e"/>
   <field old="ORBOT_DIALOG_ID I" new="f_k"/>
   <field old="SAVED_ACCOUNT_TYPE Ljava/lang/String;" new="f_b"/>
   <field old="accountTypeView Landroid/widget/Spinner;" new="f_d"/>
   <field old="storePasswordView Landroid/widget/CheckBox;" new="f_m"/>
   <field old="syncableView Landroid/widget/CheckBox;" new="f_B"/>
   <field old="useOrbotView Landroid/widget/CheckBox;" new="f_j"/>
  </class>
  <class old="com.xabber.xmpp.vcard.Email" new="com.xabber.xmpp.vcard.c_v">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getTypes()Ljava/util/Set;" new="m_xg"/>
   <method old="getValue()Ljava/lang/String;" new="m_Ra"/>
   <method old="getValueName()Ljava/lang/String;" new="m_IZ"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="setValue(Ljava/lang/String;)V" new="m_TT"/>
   <method old="writeBody(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_zy"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_e"/>
   <field old="USERID_NAME Ljava/lang/String;" new="f_m"/>
   <field old="types Ljava/util/Set;" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.rsm.SetProvider" new="wy.c_bc">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/rsm/Set;" new="m_ZZ"/>
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/PacketExtension;" new="m_I"/>
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_I"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/rsm/Set;)Z" new="m_vaa"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
  </class>
  <class old="com.xabber.android.data.SettingsManager" new="com.xabber.android.data.c_a">
   <method old="bootCount()I" new="m_oKa"/>
   <method old="chatsAppearanceStyle()I" new="m_Hla"/>
   <method old="chatsAttention()Z" new="m_Wla"/>
   <method old="chatsAttentionSound()Landroid/net/Uri;" new="m_Ela"/>
   <method old="chatsDivide()Lcom/xabber/android/data/SettingsManager$ChatsDivide;" new="m_RNa"/>
   <method old="chatsHideKeyboard()Lcom/xabber/android/data/SettingsManager$ChatsHideKeyboard;" new="m_wma"/>
   <method old="chatsSendByEnter()Z" new="m_uka"/>
   <method old="chatsShowAvatars()Z" new="m_gma"/>
   <method old="chatsShowStatusChange()Lcom/xabber/android/data/SettingsManager$ChatsShowStatusChange;" new="m_EJa"/>
   <method old="chatsStateNotification()Z" new="m_vka"/>
   <method old="connectionAdjustPriority()Z" new="m_Oka"/>
   <method old="connectionGoAway()I" new="m_lla"/>
   <method old="connectionGoXa()I" new="m_Hka"/>
   <method old="connectionLoadVCard()Z" new="m_ija"/>
   <method old="connectionPriorityAvailable()I" new="m_TKa"/>
   <method old="connectionPriorityAway()I" new="m_NJa"/>
   <method old="connectionPriorityChat()I" new="m_ELa"/>
   <method old="connectionPriorityDnd()I" new="m_zka"/>
   <method old="connectionPriorityXa()I" new="m_XMa"/>
   <method old="connectionStartAtBoot()Z" new="m_JLa"/>
   <method old="connectionWakeLock()Z" new="m_MLa"/>
   <method old="connectionWifiLock()Z" new="m_Rla"/>
   <method old="contactIntegrationSuggested()Z" new="m_Dma"/>
   <method old="contactsEnableShowAccounts()Z" new="m_aLa"/>
   <method old="contactsOrder()Ljava/util/Comparator;" new="m_ila"/>
   <method old="contactsSelectedAccount()Ljava/lang/String;" new="m_dja"/>
   <method old="contactsShowAccounts()Z" new="m_jKa"/>
   <method old="contactsShowActiveChats()Z" new="m_sKa"/>
   <method old="contactsShowAvatars()Z" new="m_soa"/>
   <method old="contactsShowEmptyGroups()Z" new="m_qka"/>
   <method old="contactsShowGroups()Z" new="m_pLa"/>
   <method old="contactsShowOffline()Z" new="m_hka"/>
   <method old="contactsShowPanel()Z" new="m_rLa"/>
   <method old="contactsStayActiveChats()Z" new="m_Pka"/>
   <method old="debugLog()Z" new="m_mOa"/>
   <method old="enableContactsShowAccount()V" new="m_lKa"/>
   <method old="eventsFirstOnly()Z" new="m_IKa"/>
   <method old="eventsIgnoreSystemVibro()Z" new="m_GLa"/>
   <method old="eventsLightning()Z" new="m_IJa"/>
   <method old="eventsMessage()Lcom/xabber/android/data/SettingsManager$EventsMessage;" new="m_Wka"/>
   <method old="eventsPersistent()Z" new="m_rka"/>
   <method old="eventsShowText()Z" new="m_Kla"/>
   <method old="eventsSound()Landroid/net/Uri;" new="m_VJa"/>
   <method old="eventsVibro()Z" new="m_PLa"/>
   <method old="eventsVisibleChat()Z" new="m_Cka"/>
   <method old="getBoolean(II)Z" new="m_Ala"/>
   <method old="getBoolean(IZ)Z" new="m_Vla"/>
   <method old="getInstance()Lcom/xabber/android/data/SettingsManager;" new="m_Xr"/>
   <method old="getInt(II)I" new="m_Ija"/>
   <method old="getSharedPreferences()Landroid/content/SharedPreferences;" new="m_Bla"/>
   <method old="getSound(ILandroid/net/Uri;I)Landroid/net/Uri;" new="m_Lka"/>
   <method old="getString(II)Ljava/lang/String;" new="m_Xka"/>
   <method old="getString(ILjava/lang/String;)Ljava/lang/String;" new="m_WKa"/>
   <method old="incrementBootCount()V" new="m_KLa"/>
   <method old="interfaceSmiles()Ljava/util/Map;" new="m_pla"/>
   <method old="interfaceTheme()Lcom/xabber/android/data/SettingsManager$InterfaceTheme;" new="m_yKa"/>
   <method old="onInitialized()V" new="m_ub"/>
   <method old="onMigrate(I)V" new="m_dC"/>
   <method old="onSharedPreferenceChanged(Landroid/content/SharedPreferences;Ljava/lang/String;)V" new="onSharedPreferenceChanged"/>
   <method old="securityCheckCertificate()Z" new="m_cLa"/>
   <method old="securityOtrHistory()Z" new="m_Eka"/>
   <method old="securityOtrMode()Lcom/xabber/android/data/SettingsManager$SecurityOtrMode;" new="m_dLa"/>
   <method old="setBoolean(IZ)V" new="m_nla"/>
   <method old="setConnectionStartAtBoot(Z)V" new="m_Tja"/>
   <method old="setContactIntegrationSuggested()V" new="m_JJa"/>
   <method old="setContactsSelectedAccount(Ljava/lang/String;)V" new="m_ala"/>
   <method old="setContactsShowOffline(Z)V" new="m_rMa"/>
   <method old="setStartAtBootSuggested()V" new="m_iJa"/>
   <method old="setStatusMode(Lcom/xabber/android/data/account/StatusMode;)V" new="m_lca"/>
   <method old="setStatusText(Ljava/lang/String;)V" new="m_Dfa"/>
   <method old="setString(ILjava/lang/String;)V" new="m_DKa"/>
   <method old="startAtBootSuggested()Z" new="m_tJa"/>
   <method old="statusMode()Lcom/xabber/android/data/account/StatusMode;" new="m_xKa"/>
   <method old="statusText()Ljava/lang/String;" new="m_Vka"/>
   <field old="instance Lcom/xabber/android/data/SettingsManager;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.MBRecord" new="org.xbill.DNS.c_Sa">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getMailbox()Lorg/xbill/DNS/Name;" new="m_iI"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getSingleName()Lorg/xbill/DNS/Name;" new="m_NH"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="serialVersionUID J" new="f_m"/>
   <field old="singleName Lorg/xbill/DNS/Name;" new="f_m"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smackx.MessageEventRequestListener" new="org.jivesoftware.smackx.c_B">
   <method old="composingNotificationRequested(Ljava/lang/String;Ljava/lang/String;Lorg/jivesoftware/smackx/MessageEventManager;)V" new="m_Ta"/>
   <method old="deliveredNotificationRequested(Ljava/lang/String;Ljava/lang/String;Lorg/jivesoftware/smackx/MessageEventManager;)V" new="m_va"/>
   <method old="displayedNotificationRequested(Ljava/lang/String;Ljava/lang/String;Lorg/jivesoftware/smackx/MessageEventManager;)V" new="m_Na"/>
   <method old="offlineNotificationRequested(Ljava/lang/String;Ljava/lang/String;Lorg/jivesoftware/smackx/MessageEventManager;)V" new="m_Za"/>
  </class>
  <class old="org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceValuesIterator" new="org.jivesoftware.smack.util.collections.c_a">
   <method old="currentEntry()Lorg/jivesoftware/smack/util/collections/AbstractReferenceMap$ReferenceEntry;" new="m_yQ"/>
   <method old="hasNext()Z" new="hasNext"/>
   <method old="next()Ljava/lang/Object;" new="next"/>
   <method old="nextEntry()Lorg/jivesoftware/smack/util/collections/AbstractReferenceMap$ReferenceEntry;" new="m_Kq"/>
   <method old="remove()V" new="remove"/>
   <method old="superNext()Lorg/jivesoftware/smack/util/collections/AbstractReferenceMap$ReferenceEntry;" new="m_cr"/>
   <field old="currentKey Ljava/lang/Object;" new="f_b"/>
   <field old="currentValue Ljava/lang/Object;" new="f_m"/>
   <field old="entry Lorg/jivesoftware/smack/util/collections/AbstractReferenceMap$ReferenceEntry;" new="f_f"/>
   <field old="expectedModCount I" new="f_l"/>
   <field old="index I" new="f_k"/>
   <field old="nextKey Ljava/lang/Object;" new="f_e"/>
   <field old="nextValue Ljava/lang/Object;" new="f_j"/>
   <field old="parent Lorg/jivesoftware/smack/util/collections/AbstractReferenceMap;" new="f_d"/>
   <field old="previous Lorg/jivesoftware/smack/util/collections/AbstractReferenceMap$ReferenceEntry;" new="f_B"/>
  </class>
  <class old="com.xabber.android.data.connection.Target" new="com.xabber.android.data.connection.c_J">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="compareTo(Lcom/xabber/android/data/connection/Target;)I" new="m_FHa"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getHost()Ljava/lang/String;" new="m_vD"/>
   <method old="getPort()I" new="m_Jg"/>
   <method old="getPriority()I" new="m_iD"/>
   <method old="getWeight()I" new="m_pF"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="host Ljava/lang/String;" new="f_d"/>
   <field old="port I" new="f_m"/>
   <field old="priority I" new="f_e"/>
   <field old="weight I" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.account.AccountManager$1" new="com.xabber.android.data.account.c_q">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/account/AccountManager;" new="f_b"/>
   <field old="val$accountItems Ljava/util/Collection;" new="f_e"/>
   <field old="val$savedStatuses Ljava/util/Collection;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.GroupListActivity" new="com.xabber.android.ui.GroupListActivity">
   <method old="getGroups()Ljava/util/ArrayList;" new="m_pK"/>
   <method old="getInitialGroups()Ljava/util/Collection;" new="m_Uca"/>
   <method old="getInitialSelected()Ljava/util/Collection;" new="m_Uba"/>
   <method old="getSelected()Ljava/util/ArrayList;" new="m_nba"/>
   <method old="onAccept(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_Lc"/>
   <method old="onAccountsChanged(Ljava/util/Collection;)V" new="m_vB"/>
   <method old="onActivityResult(IILandroid/content/Intent;)V" new="onActivityResult"/>
   <method old="onCancel(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_Vb"/>
   <method old="onContactsChanged(Ljava/util/Collection;)V" new="m_bd"/>
   <method old="onCreate(Landroid/os/Bundle;)V" new="onCreate"/>
   <method old="onCreateDialog(I)Landroid/app/Dialog;" new="onCreateDialog"/>
   <method old="onCreateOptionsMenu(Landroid/view/Menu;)Z" new="onCreateOptionsMenu"/>
   <method old="onDecline(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_ad"/>
   <method old="onDestroy()V" new="onDestroy"/>
   <method old="onInflate(Landroid/os/Bundle;)V" new="m_TBa"/>
   <method old="onItemClick(Landroid/widget/AdapterView;Landroid/view/View;IJ)V" new="onItemClick"/>
   <method old="onNewIntent(Landroid/content/Intent;)V" new="onNewIntent"/>
   <method old="onOptionsItemSelected(Landroid/view/MenuItem;)Z" new="onOptionsItemSelected"/>
   <method old="onPause()V" new="onPause"/>
   <method old="onResume()V" new="onResume"/>
   <method old="onSaveInstanceState(Landroid/os/Bundle;)V" new="onSaveInstanceState"/>
   <method old="setGroups(Ljava/util/Collection;Ljava/util/Collection;)V" new="m_ZBa"/>
   <method old="startActivity(Landroid/content/Intent;)V" new="startActivity"/>
   <method old="startActivityForResult(Landroid/content/Intent;I)V" new="startActivityForResult"/>
   <field old="DIALOG_ADD_GROUP_ID I" new="f_j"/>
   <field old="OPTION_MENU_ADD_GROUP_ID I" new="f_m"/>
   <field old="SAVED_GROUPS Ljava/lang/String;" new="f_d"/>
   <field old="SAVED_SELECTED Ljava/lang/String;" new="f_B"/>
   <field old="arrayAdapter Landroid/widget/ArrayAdapter;" new="f_e"/>
   <field old="listView Landroid/widget/ListView;" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.extension.attention.AttentionRequest" new="wy.c_Jd">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="compareTo(Lcom/xabber/android/data/entity/BaseEntity;)I" new="m_bCa"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="equals(Ljava/lang/String;Ljava/lang/String;)Z" new="m_Bba"/>
   <method old="getAccount()Ljava/lang/String;" new="m_FC"/>
   <method old="getIntent()Landroid/content/Intent;" new="m_db"/>
   <method old="getText()Ljava/lang/String;" new="m_ZA"/>
   <method old="getTitle()Ljava/lang/String;" new="m_zb"/>
   <method old="getUser()Ljava/lang/String;" new="m_TA"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="account Ljava/lang/String;" new="f_m"/>
   <field old="user Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.account.AccountManager$2" new="com.xabber.android.data.account.c_w">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/account/AccountManager;" new="f_j"/>
   <field old="val$accountItem Lcom/xabber/android/data/account/AccountItem;" new="f_m"/>
   <field old="val$archiveMode Lcom/xabber/android/data/account/ArchiveMode;" new="f_l"/>
   <field old="val$colorIndex I" new="f_Z"/>
   <field old="val$compression Z" new="f_F"/>
   <field old="val$custom Z" new="f_A"/>
   <field old="val$enabled Z" new="f_G"/>
   <field old="val$host Ljava/lang/String;" new="f_D"/>
   <field old="val$keyPair Ljava/security/KeyPair;" new="f_p"/>
   <field old="val$lastSync Ljava/util/Date;" new="f_H"/>
   <field old="val$password Ljava/lang/String;" new="f_L"/>
   <field old="val$port I" new="f_h"/>
   <field old="val$priority I" new="f_d"/>
   <field old="val$protocol Lcom/xabber/android/data/account/AccountProtocol;" new="f_C"/>
   <field old="val$proxyHost Ljava/lang/String;" new="f_B"/>
   <field old="val$proxyPassword Ljava/lang/String;" new="f_K"/>
   <field old="val$proxyPort I" new="f_f"/>
   <field old="val$proxyType Lcom/xabber/android/data/connection/ProxyType;" new="f_i"/>
   <field old="val$proxyUser Ljava/lang/String;" new="f_b"/>
   <field old="val$resource Ljava/lang/String;" new="f_J"/>
   <field old="val$saslEnabled Z" new="f_M"/>
   <field old="val$serverName Ljava/lang/String;" new="f_e"/>
   <field old="val$statusMode Lcom/xabber/android/data/account/StatusMode;" new="f_a"/>
   <field old="val$statusText Ljava/lang/String;" new="f_g"/>
   <field old="val$storePassword Z" new="f_k"/>
   <field old="val$syncable Z" new="f_E"/>
   <field old="val$tlsMode Lcom/xabber/android/data/connection/TLSMode;" new="f_I"/>
   <field old="val$userName Ljava/lang/String;" new="f_c"/>
  </class>
  <class old="com.xabber.android.data.account.AccountManager$3" new="com.xabber.android.data.account.c_h">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/account/AccountManager;" new="f_b"/>
   <field old="val$account Ljava/lang/String;" new="f_e"/>
   <field old="val$accountItem Lcom/xabber/android/data/account/AccountItem;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.account.AccountManager$4" new="com.xabber.android.data.account.c_F">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/account/AccountManager;" new="f_m"/>
   <field old="val$statusMode Lcom/xabber/android/data/account/StatusMode;" new="f_e"/>
   <field old="val$statusText Ljava/lang/String;" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.account.AccountManager$5" new="com.xabber.android.data.account.c_C">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/account/AccountManager;" new="f_m"/>
   <field old="val$savedStatus Lcom/xabber/android/data/account/SavedStatus;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.RosterExchangeManager" new="org.jivesoftware.smackx.RosterExchangeManager">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="access$000(Lorg/jivesoftware/smackx/RosterExchangeManager;Ljava/lang/String;Ljava/util/Iterator;)V" new="m_qq"/>
   <method old="addRosterListener(Lorg/jivesoftware/smackx/RosterExchangeListener;)V" new="m_vr"/>
   <method old="destroy()V" new="m_cd"/>
   <method old="finalize()V" new="finalize"/>
   <method old="fireRosterExchangeListeners(Ljava/lang/String;Ljava/util/Iterator;)V" new="m_Vp"/>
   <method old="init()V" new="m_ZG"/>
   <method old="removeRosterListener(Lorg/jivesoftware/smackx/RosterExchangeListener;)V" new="m_ZP"/>
   <method old="send(Lorg/jivesoftware/smack/Roster;Ljava/lang/String;)V" new="m_Sr"/>
   <method old="send(Lorg/jivesoftware/smack/RosterEntry;Ljava/lang/String;)V" new="m_pq"/>
   <method old="send(Lorg/jivesoftware/smack/RosterGroup;Ljava/lang/String;)V" new="m_TP"/>
   <field old="con Lorg/jivesoftware/smack/Connection;" new="f_m"/>
   <field old="packetFilter Lorg/jivesoftware/smack/filter/PacketFilter;" new="f_d"/>
   <field old="packetListener Lorg/jivesoftware/smack/PacketListener;" new="f_e"/>
   <field old="rosterExchangeListeners Ljava/util/List;" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.account.AccountManager$6" new="com.xabber.android.data.account.c_L">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/account/AccountManager;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.account.AccountManager$7" new="com.xabber.android.data.account.c_l">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/account/AccountManager;" new="f_m"/>
   <field old="val$accounts Ljava/util/Collection;" new="f_e"/>
  </class>
  <class old="org.xbill.DNS.UDPClient" new="org.xbill.DNS.c_g">
   <method old="access$000()Ljava/security/SecureRandom;" new="m_Jf"/>
   <method old="access$102(Z)Z" new="m_Of"/>
   <method old="bind(Ljava/net/SocketAddress;)V" new="m_HD"/>
   <method old="bind_random(Ljava/net/InetSocketAddress;)V" new="m_af"/>
   <method old="blockUntil(Ljava/nio/channels/SelectionKey;J)V" new="m_LF"/>
   <method old="cleanup()V" new="m_wD"/>
   <method old="connect(Ljava/net/SocketAddress;)V" new="m_yd"/>
   <method old="recv(I)[B" new="m_fg"/>
   <method old="send([B)V" new="m_EF"/>
   <method old="sendrecv(Ljava/net/SocketAddress;Ljava/net/SocketAddress;[BIJ)[B" new="m_FE"/>
   <method old="sendrecv(Ljava/net/SocketAddress;[BIJ)[B" new="m_DD"/>
   <method old="verboseLog(Ljava/lang/String;[B)V" new="m_WD"/>
   <field old="EPHEMERAL_RANGE I" new="f_e"/>
   <field old="EPHEMERAL_START I" new="f_b"/>
   <field old="EPHEMERAL_STOP I" new="f_m"/>
   <field old="bound Z" new="f_B"/>
   <field old="endTime J" new="f_m"/>
   <field old="key Ljava/nio/channels/SelectionKey;" new="f_e"/>
   <field old="prng Ljava/security/SecureRandom;" new="f_j"/>
   <field old="prng_initializing Z" new="f_d"/>
  </class>
  <class old="org.jivesoftware.smack.util.collections.AbstractHashedMap$HashIterator" new="org.jivesoftware.smack.util.collections.c_w">
   <method old="currentEntry()Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;" new="m_yQ"/>
   <method old="getKey()Ljava/lang/Object;" new="m_xa"/>
   <method old="getValue()Ljava/lang/Object;" new="m_Ra"/>
   <method old="hasNext()Z" new="hasNext"/>
   <method old="next()Ljava/lang/Object;" new="next"/>
   <method old="nextEntry()Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;" new="m_Kq"/>
   <method old="remove()V" new="remove"/>
   <method old="setValue(Ljava/lang/Object;)Ljava/lang/Object;" new="m_Xa"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="expectedModCount I" new="f_d"/>
   <field old="hashIndex I" new="f_e"/>
   <field old="last Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;" new="f_b"/>
   <field old="next Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;" new="f_B"/>
   <field old="parent Lorg/jivesoftware/smack/util/collections/AbstractHashedMap;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.Tokenizer$Token" new="org.xbill.DNS.c_C">
   <method old="access$100(Lorg/xbill/DNS/Tokenizer$Token;ILjava/lang/StringBuffer;)Lorg/xbill/DNS/Tokenizer$Token;" new="m_ee"/>
   <method old="isEOL()Z" new="m_Kf"/>
   <method old="isString()Z" new="m_Kg"/>
   <method old="set(ILjava/lang/StringBuffer;)Lorg/xbill/DNS/Tokenizer$Token;" new="m_pe"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="type I" new="f_e"/>
   <field old="value Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.XHTMLManager$1" new="org.jivesoftware.smackx.c_J">
   <method old="connectionCreated(Lorg/jivesoftware/smack/Connection;)V" new="m_q"/>
  </class>
  <class old="com.xabber.xmpp.attention.Attention" new="wy.c_jC">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="serializeContent(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_Fb"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_m"/>
   <field old="NAMESPACE Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.muc.DeafOccupantInterceptor$DeafExtension" new="org.jivesoftware.smackx.muc.c_L">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
  </class>
  <class old="org.xbill.DNS.DLVRecord" new="org.xbill.DNS.c_yc">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getAlgorithm()I" new="m_Ne"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getDigest()[B" new="m_te"/>
   <method old="getDigestID()I" new="m_Ei"/>
   <method old="getFootprint()I" new="m_VF"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="SHA1_DIGEST_ID I" new="f_l"/>
   <field old="SHA256_DIGEST_ID I" new="f_k"/>
   <field old="alg I" new="f_j"/>
   <field old="dclass I" new="f_m"/>
   <field old="digest [B" new="f_B"/>
   <field old="digestid I" new="f_e"/>
   <field old="footprint I" new="f_d"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="serialVersionUID J" new="f_f"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.login.Configuration$1" new="wy.c_Ra">
   <method old="getAccessibleConfiguration()Lorg/apache/harmony/javax/security/auth/login/Configuration;" new="m_jv"/>
   <method old="getAppConfigurationEntry(Ljava/lang/String;)[Lorg/apache/harmony/javax/security/auth/login/AppConfigurationEntry;" new="m_sw"/>
   <method old="getConfiguration()Lorg/apache/harmony/javax/security/auth/login/Configuration;" new="m_ps"/>
   <method old="refresh()V" new="m_oC"/>
   <method old="setConfiguration(Lorg/apache/harmony/javax/security/auth/login/Configuration;)V" new="m_Nx"/>
  </class>
  <class old="com.xabber.android.data.OnCloseListener" new="com.xabber.android.data.c_J">
   <method old="onClose()V" new="m_cc"/>
  </class>
  <class old="com.xabber.android.ui.CertificateConfirmation" new="com.xabber.android.ui.CertificateConfirmation">
   <method old="createIntent(Landroid/content/Context;Ljava/lang/String;Lcom/xabber/android/data/connection/CertificateInvalidReason;)Landroid/content/Intent;" new="m_lEa"/>
   <method old="getFingerprint(Landroid/content/Intent;)Ljava/lang/String;" new="m_xEa"/>
   <method old="getReason(Landroid/content/Intent;)Lcom/xabber/android/data/connection/CertificateInvalidReason;" new="m_qFa"/>
   <method old="onAccept()V" new="m_WBa"/>
   <method old="onActivityResult(IILandroid/content/Intent;)V" new="onActivityResult"/>
   <method old="onCenter()V" new="m_Jca"/>
   <method old="onCreate(Landroid/os/Bundle;)V" new="onCreate"/>
   <method old="onDecline()V" new="m_Qca"/>
   <method old="onDestroy()V" new="onDestroy"/>
   <method old="onNewIntent(Landroid/content/Intent;)V" new="onNewIntent"/>
   <method old="onPause()V" new="onPause"/>
   <method old="onResume()V" new="onResume"/>
   <method old="onSaveInstanceState(Landroid/os/Bundle;)V" new="onSaveInstanceState"/>
   <method old="setCustomView(Landroid/view/View;Z)V" new="m_LBa"/>
   <method old="setDialogMessage(I)V" new="m_Gca"/>
   <method old="setDialogMessage(Ljava/lang/CharSequence;)V" new="m_SCa"/>
   <method old="setDialogTitle(I)V" new="m_Kca"/>
   <method old="setDialogTitle(Ljava/lang/CharSequence;)V" new="m_VCa"/>
   <method old="startActivity(Landroid/content/Intent;)V" new="startActivity"/>
   <method old="startActivityForResult(Landroid/content/Intent;I)V" new="startActivityForResult"/>
   <method old="update()V" new="m_fca"/>
   <field old="SAVED_SHOW_DETAILS Ljava/lang/String;" new="f_m"/>
   <field old="pendingCertificate Lcom/xabber/android/data/connection/PendingCertificate;" new="f_b"/>
   <field old="showDetails Z" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smack.packet.Packet" new="org.jivesoftware.smack.packet.c_H">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getStart()Ljava/util/Date;" new="m_vC"/>
   <method old="getStartString()Ljava/lang/String;" new="m_lC"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getVersion()Ljava/lang/Integer;" new="m_Sd"/>
   <method old="getWith()Ljava/lang/String;" new="m_ib"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="serializeContent(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_Fb"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="DEFAULT_XML_NS Ljava/lang/String;" new="f_e"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="error Lorg/jivesoftware/smack/packet/XMPPError;" new="f_k"/>
   <field old="from Ljava/lang/String;" new="f_K"/>
   <field old="id J" new="f_f"/>
   <field old="packetExtensions Ljava/util/List;" new="f_I"/>
   <field old="packetID Ljava/lang/String;" new="f_m"/>
   <field old="prefix Ljava/lang/String;" new="f_B"/>
   <field old="properties Ljava/util/Map;" new="f_j"/>
   <field old="to Ljava/lang/String;" new="f_b"/>
   <field old="xmlns Ljava/lang/String;" new="f_l"/>
  </class>
  <class old="com.xabber.android.data.OnWipeListener" new="com.xabber.android.data.c_G">
   <method old="onWipe()V" new="m_KC"/>
  </class>
  <class old="com.xabber.android.data.SettingsManager$EventsMessage" new="com.xabber.android.data.SettingsManager$EventsMessage">
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/android/data/SettingsManager$EventsMessage;" new="valueOf"/>
   <method old="values()[Lcom/xabber/android/data/SettingsManager$EventsMessage;" new="values"/>
   <field old="$VALUES [Lcom/xabber/android/data/SettingsManager$EventsMessage;" new="f_b"/>
   <field old="chat Lcom/xabber/android/data/SettingsManager$EventsMessage;" new="f_e"/>
   <field old="chatAndMuc Lcom/xabber/android/data/SettingsManager$EventsMessage;" new="f_m"/>
   <field old="none Lcom/xabber/android/data/SettingsManager$EventsMessage;" new="f_d"/>
  </class>
  <class old="com.xabber.android.data.OnMigrationListener" new="com.xabber.android.data.c_K">
   <method old="onMigrate(I)V" new="m_dC"/>
  </class>
  <class old="org.jivesoftware.smackx.muc.MultiUserChat$1$1" new="org.jivesoftware.smackx.muc.c_d">
   <method old="getNodeFeatures()Ljava/util/List;" new="m_t"/>
   <method old="getNodeIdentities()Ljava/util/List;" new="m_s"/>
   <method old="getNodeItems()Ljava/util/List;" new="m_V"/>
   <field old="this$0 Lorg/jivesoftware/smackx/muc/MultiUserChat$1;" new="f_m"/>
   <field old="val$connection Lorg/jivesoftware/smack/Connection;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smack.packet.Privacy" new="org.jivesoftware.smack.packet.c_G">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="changeDefaultList(Ljava/lang/String;)Z" new="m_rt"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteList(Ljava/lang/String;)V" new="m_Fu"/>
   <method old="deletePrivacyList(Ljava/lang/String;)V" new="m_cU"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getActiveName()Ljava/lang/String;" new="m_Zs"/>
   <method old="getActivePrivacyList()Ljava/util/List;" new="m_IT"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getDefaultName()Ljava/lang/String;" new="m_vu"/>
   <method old="getDefaultPrivacyList()Ljava/util/List;" new="m_mS"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getItem(Ljava/lang/String;I)Lorg/jivesoftware/smack/packet/PrivacyItem;" new="m_Ls"/>
   <method old="getItemLists()Ljava/util/Map;" new="m_Ws"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getPrivacyList(Ljava/lang/String;)Ljava/util/List;" new="m_Bt"/>
   <method old="getPrivacyListNames()Ljava/util/Set;" new="m_as"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="isDeclineActiveList()Z" new="m_gT"/>
   <method old="isDeclineDefaultList()Z" new="m_bt"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setActiveName(Ljava/lang/String;)V" new="m_Gs"/>
   <method old="setActivePrivacyList()Ljava/util/List;" new="m_XR"/>
   <method old="setDeclineActiveList(Z)V" new="m_wt"/>
   <method old="setDeclineDefaultList(Z)V" new="m_ZT"/>
   <method old="setDefaultName(Ljava/lang/String;)V" new="m_rs"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setPrivacyList(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;" new="m_ZB"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="activeName Ljava/lang/String;" new="f_m"/>
   <field old="declineActiveList Z" new="f_d"/>
   <field old="declineDefaultList Z" new="f_B"/>
   <field old="defaultName Ljava/lang/String;" new="f_e"/>
   <field old="itemLists Ljava/util/Map;" new="f_b"/>
  </class>
  <class old="com.xabber.xmpp.vcard.BinarySound" new="com.xabber.xmpp.vcard.c_N">
   <method old="getData()[B" new="m_tD"/>
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getType()Ljava/lang/String;" new="m_b"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="setData([B)V" new="m_jz"/>
   <method old="setType(Ljava/lang/String;)V" new="m_Al"/>
   <method old="writeBody(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_zy"/>
   <field old="BINVAL_NAME Ljava/lang/String;" new="f_d"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_m"/>
   <field old="MAX_ENCODED_DATA_SIZE I" new="f_m"/>
   <field old="TYPE_NAME Ljava/lang/String;" new="f_b"/>
  </class>
  <class old="org.xbill.DNS.GPOSRecord" new="org.xbill.DNS.c_pa">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getAltitude()D" new="m_zG"/>
   <method old="getAltitudeString()Ljava/lang/String;" new="m_DI"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getLatitude()D" new="m_VG"/>
   <method old="getLatitudeString()Ljava/lang/String;" new="m_MI"/>
   <method old="getLongitude()D" new="m_Yg"/>
   <method old="getLongitudeString()Ljava/lang/String;" new="m_FG"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="validate(DD)V" new="m_hG"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="altitude [B" new="f_m"/>
   <field old="dclass I" new="f_m"/>
   <field old="latitude [B" new="f_d"/>
   <field old="longitude [B" new="f_b"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="serialVersionUID J" new="f_e"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.entity.NestedMap$Values$ValuesIterator" new="wy.c_ZA">
   <method old="hasNext()Z" new="hasNext"/>
   <method old="next()Ljava/lang/Object;" new="next"/>
   <method old="remove()V" new="remove"/>
   <field old="iterator Ljava/util/Iterator;" new="f_e"/>
   <field old="this$1 Lcom/xabber/android/data/entity/NestedMap$Values;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.sasl.SASLPlainMechanism" new="wy.c_Q">
   <method old="authenticate()V" new="m_ls"/>
   <method old="authenticate(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_Pd"/>
   <method old="authenticate(Ljava/lang/String;Ljava/lang/String;Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;)V" new="m_eC"/>
   <method old="challengeReceived(Ljava/lang/String;)V" new="m_vt"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getSASLAuthentication()Lorg/jivesoftware/smack/SASLAuthentication;" new="m_Gt"/>
   <method old="handle([Lorg/apache/harmony/javax/security/auth/callback/Callback;)V" new="m_Jb"/>
   <field old="authenticationId Ljava/lang/String;" new="f_e"/>
   <field old="hostname Ljava/lang/String;" new="f_B"/>
   <field old="password Ljava/lang/String;" new="f_m"/>
   <field old="sc Lorg/apache/harmony/javax/security/sasl/SaslClient;" new="f_b"/>
  </class>
  <class old="net.java.otr4j.OtrKeyManagerListener" new="net.java.otr4j.c_H">
   <method old="verificationStatusChanged(Lnet/java/otr4j/session/SessionID;)V" new="m_Hc"/>
  </class>
  <class old="com.xabber.xmpp.receipt.Received" new="com.xabber.xmpp.receipt.Received">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getId()Ljava/lang/String;" new="m_Hca"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="serializeContent(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_Fb"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="ELEMENT_NAME"/>
   <field old="ID_ATTRIBUTE Ljava/lang/String;" new="ID_ATTRIBUTE"/>
   <field old="NAMESPACE Ljava/lang/String;" new="NAMESPACE"/>
   <field old="id Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.AbstractIQProvider" new="com.xabber.xmpp.c_m">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_I"/>
   <method old="parseIQ(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/IQ;" new="m_g"/>
   <method old="parseIQ(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/IQ;" new="m_g"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
  </class>
  <class old="com.xabber.android.receiver.ScreenReceiver" new="com.xabber.android.receiver.ScreenReceiver">
   <method old="onReceive(Landroid/content/Context;Landroid/content/Intent;)V" new="onReceive"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.AuthPermission" new="org.apache.harmony.javax.security.auth.c_D">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="init(Ljava/lang/String;)Ljava/lang/String;" new="m_HU"/>
   <field old="CREATE_LOGIN_CONTEXT Ljava/lang/String;" new="f_m"/>
   <field old="CREATE_LOGIN_CONTEXT_ANY Ljava/lang/String;" new="f_e"/>
   <field old="serialVersionUID J" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.notification.AccountNotificationItem" new="wy.c_g">
   <method old="getAccount()Ljava/lang/String;" new="m_FC"/>
   <method old="getIntent()Landroid/content/Intent;" new="m_db"/>
   <method old="getText()Ljava/lang/String;" new="m_ZA"/>
   <method old="getTitle()Ljava/lang/String;" new="m_zb"/>
  </class>
  <class old="org.xbill.DNS.ZoneTransferIn$1" new="org.xbill.DNS.c_A">
  </class>
  <class old="com.xabber.android.ui.adapter.AccountConfiguration" new="com.xabber.android.ui.adapter.c_z">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="addAbstractContact(Lcom/xabber/android/data/roster/AbstractContact;)V" new="m_lda"/>
   <method old="addGroupConfiguration(Lcom/xabber/android/ui/adapter/GroupConfiguration;)V" new="m_Eba"/>
   <method old="compareTo(Lcom/xabber/android/data/entity/BaseEntity;)I" new="m_bCa"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="equals(Ljava/lang/String;Ljava/lang/String;)Z" new="m_Bba"/>
   <method old="getAbstractContacts()Ljava/util/Collection;" new="m_mAa"/>
   <method old="getAccount()Ljava/lang/String;" new="m_FC"/>
   <method old="getGroupConfiguration(Ljava/lang/String;)Lcom/xabber/android/ui/adapter/GroupConfiguration;" new="m_hda"/>
   <method old="getOnline()I" new="m_Eca"/>
   <method old="getShowOfflineMode()Lcom/xabber/android/data/roster/ShowOfflineMode;" new="m_FCa"/>
   <method old="getSortedGroupConfigurations()Ljava/util/Collection;" new="m_Pca"/>
   <method old="getTotal()I" new="m_Dba"/>
   <method old="getUser()Ljava/lang/String;" new="m_TA"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="increment(Z)V" new="m_dca"/>
   <method old="isEmpty()Z" new="m_Oaa"/>
   <method old="isExpanded()Z" new="m_Nba"/>
   <method old="setNotEmpty()V" new="m_aCa"/>
   <method old="sortAbstractContacts(Ljava/util/Comparator;)V" new="m_bAa"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="account Ljava/lang/String;" new="f_m"/>
   <field old="groups Ljava/util/TreeMap;" new="f_m"/>
   <field old="user Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.MUCAdmin" new="org.jivesoftware.smackx.packet.c_x">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="addItem(Lorg/jivesoftware/smackx/packet/MUCAdmin$Item;)V" new="m_ik"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getItems()Ljava/util/Iterator;" new="m_Vj"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="items Ljava/util/List;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.EntityCapsManager" new="org.jivesoftware.smackx.c_x">
   <method old="addCapsVerListener(Lorg/jivesoftware/smackx/CapsVerListener;)V" new="m_dR"/>
   <method old="addDiscoverInfoByNode(Ljava/lang/String;Lorg/jivesoftware/smackx/packet/DiscoverInfo;)V" new="m_ER"/>
   <method old="addPacketListener(Lorg/jivesoftware/smack/Connection;)V" new="m_dP"/>
   <method old="addUserCapsNode(Ljava/lang/String;Ljava/lang/String;)V" new="m_gQ"/>
   <method old="calculateEntityCapsVersion(Lorg/jivesoftware/smackx/packet/DiscoverInfo;Ljava/lang/String;Ljava/lang/String;Lorg/jivesoftware/smackx/packet/DataForm;)V" new="m_RP"/>
   <method old="capsToHash(Ljava/lang/String;)Ljava/lang/String;" new="m_JQ"/>
   <method old="cleanupDicsoverInfo(Lorg/jivesoftware/smackx/packet/DiscoverInfo;)V" new="m_AP"/>
   <method old="formFieldValuesToCaps(Ljava/util/Iterator;)Ljava/lang/String;" new="m_fp"/>
   <method old="getCapsVersion()Ljava/lang/String;" new="m_tP"/>
   <method old="getDiscoverInfoByNode(Ljava/lang/String;)Lorg/jivesoftware/smackx/packet/DiscoverInfo;" new="m_TQ"/>
   <method old="getDiscoverInfoByUser(Ljava/lang/String;)Lorg/jivesoftware/smackx/packet/DiscoverInfo;" new="m_pP"/>
   <method old="getNode()Ljava/lang/String;" new="m_Ol"/>
   <method old="getNodeVersionByUser(Ljava/lang/String;)Ljava/lang/String;" new="m_Nq"/>
   <method old="notifyCapsVerListeners()V" new="m_Tp"/>
   <method old="removeCapsVerListener(Lorg/jivesoftware/smackx/CapsVerListener;)V" new="m_zr"/>
   <method old="removeUserCapsNode(Ljava/lang/String;)V" new="m_PQ"/>
   <method old="setCurrentCapsVersion(Lorg/jivesoftware/smackx/packet/DiscoverInfo;Ljava/lang/String;)V" new="m_tQ"/>
   <method old="setNode(Ljava/lang/String;)V" new="m_kJ"/>
   <field old="HASH_METHOD Ljava/lang/String;" new="f_d"/>
   <field old="HASH_METHOD_CAPS Ljava/lang/String;" new="f_k"/>
   <field old="caps Ljava/util/Map;" new="f_m"/>
   <field old="capsVerListeners Ljava/util/Set;" new="f_j"/>
   <field old="currentCapsVersion Ljava/lang/String;" new="f_e"/>
   <field old="entityNode Ljava/lang/String;" new="f_b"/>
   <field old="userCaps Ljava/util/Map;" new="f_B"/>
  </class>
  <class old="org.jivesoftware.smack.SASLAuthentication" new="org.jivesoftware.smack.c_g">
   <method old="authenticate(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" new="m_Pd"/>
   <method old="authenticate(Ljava/lang/String;Ljava/lang/String;Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;)Ljava/lang/String;" new="m_eC"/>
   <method old="authenticateAnonymously()Ljava/lang/String;" new="m_LB"/>
   <method old="authenticated()V" new="m_pS"/>
   <method old="authenticationFailed()V" new="m_KS"/>
   <method old="authenticationFailed(Ljava/lang/String;)V" new="m_PR"/>
   <method old="bindResourceAndEstablishSession(Ljava/lang/String;)Ljava/lang/String;" new="m_UR"/>
   <method old="bindingRequired()V" new="m_MS"/>
   <method old="challengeReceived(Ljava/lang/String;)V" new="m_vt"/>
   <method old="getRegisterSASLMechanisms()Ljava/util/List;" new="m_BS"/>
   <method old="hasAnonymousAuthentication()Z" new="m_Us"/>
   <method old="hasNonAnonymousAuthentication()Z" new="m_ut"/>
   <method old="init()V" new="m_ZG"/>
   <method old="isAuthenticated()Z" new="m_zS"/>
   <method old="registerSASLMechanism(Ljava/lang/String;Ljava/lang/Class;)V" new="m_us"/>
   <method old="send(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_ot"/>
   <method old="sessionsSupported()V" new="m_zt"/>
   <method old="setAvailableSASLMethods(Ljava/util/Collection;)V" new="m_nt"/>
   <method old="supportSASLMechanism(Ljava/lang/String;)V" new="m_wT"/>
   <method old="supportSASLMechanism(Ljava/lang/String;I)V" new="m_nT"/>
   <method old="unregisterSASLMechanism(Ljava/lang/String;)V" new="m_Hu"/>
   <method old="unsupportSASLMechanism(Ljava/lang/String;)V" new="m_CT"/>
   <field old="connection Lorg/jivesoftware/smack/Connection;" new="f_B"/>
   <field old="currentMechanism Lorg/jivesoftware/smack/sasl/SASLMechanism;" new="f_d"/>
   <field old="errorCondition Ljava/lang/String;" new="f_j"/>
   <field old="implementedMechanisms Ljava/util/Map;" new="f_m"/>
   <field old="mechanismsPreferences Ljava/util/List;" new="f_e"/>
   <field old="resourceBinded Z" new="f_b"/>
   <field old="saslFailed Z" new="f_I"/>
   <field old="saslNegotiated Z" new="f_k"/>
   <field old="serverMechanisms Ljava/util/Collection;" new="f_l"/>
   <field old="sessionSupported Z" new="f_f"/>
  </class>
  <class old="org.jivesoftware.smack.ReconnectionManager$1" new="org.jivesoftware.smack.ReconnectionManager$1">
   <method old="connectionCreated(Lorg/jivesoftware/smack/Connection;)V" new="m_q"/>
  </class>
  <class old="com.xabber.android.data.account.OnAccountOfflineListener" new="com.xabber.android.data.account.c_k">
   <method old="onAccountOffline(Lcom/xabber/android/data/account/AccountItem;)V" new="m_qA"/>
  </class>
  <class old="org.jivesoftware.smack.ReconnectionManager$2" new="org.jivesoftware.smack.ReconnectionManager$2">
   <method old="run()V" new="run"/>
   <method old="timeDelay()I" new="m_fw"/>
   <field old="attempts I" new="f_m"/>
   <field old="this$0 Lorg/jivesoftware/smack/ReconnectionManager;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.ibb.provider.CloseIQProvider" new="wy.c_aa">
   <method old="parseIQ(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/IQ;" new="m_g"/>
  </class>
  <class old="com.xabber.xmpp.ssn.Feature" new="com.xabber.xmpp.ssn.c_H">
   <method old="addAcceptField(Lorg/jivesoftware/smackx/packet/DataForm;Z)V" new="m_Iz"/>
   <method old="addDisclosureField(Lorg/jivesoftware/smackx/packet/DataForm;[Lcom/xabber/xmpp/ssn/DisclosureValue;Lcom/xabber/xmpp/ssn/DisclosureValue;)V" new="m_rX"/>
   <method old="addLoggingField(Lorg/jivesoftware/smackx/packet/DataForm;[Lcom/xabber/xmpp/ssn/LoggingValue;Lcom/xabber/xmpp/ssn/LoggingValue;)V" new="m_oX"/>
   <method old="addRenegotiateField(Lorg/jivesoftware/smackx/packet/DataForm;Z)V" new="m_JZ"/>
   <method old="addRequiredBooleanField(Lorg/jivesoftware/smackx/packet/DataForm;Ljava/lang/String;Ljava/lang/String;Z)V" new="m_tZ"/>
   <method old="addSecurityField(Lorg/jivesoftware/smackx/packet/DataForm;[Lcom/xabber/xmpp/ssn/SecurityValue;Lcom/xabber/xmpp/ssn/SecurityValue;)V" new="m_uX"/>
   <method old="addTerminateField(Lorg/jivesoftware/smackx/packet/DataForm;)V" new="m_gAa"/>
   <method old="createDataForm(Lcom/xabber/xmpp/form/DataFormType;)Lorg/jivesoftware/smackx/packet/DataForm;" new="m_py"/>
   <method old="getAcceptValue()Ljava/lang/Boolean;" new="m_YX"/>
   <method old="getDataForm()Lorg/jivesoftware/smackx/packet/DataForm;" new="m_XZ"/>
   <method old="getDataFormType()Lcom/xabber/xmpp/form/DataFormType;" new="m_dz"/>
   <method old="getDisclosureOptions()Ljava/util/Collection;" new="m_qZ"/>
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getField(Ljava/lang/String;)Lorg/jivesoftware/smackx/FormField;" new="m_Hj"/>
   <method old="getLoggingOptions()Ljava/util/Collection;" new="m_SY"/>
   <method old="getLoggingValue()Lcom/xabber/xmpp/ssn/LoggingValue;" new="m_jy"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="getRenegotiateValue()Ljava/lang/Boolean;" new="m_OY"/>
   <method old="getSecurityOptions()Ljava/util/Collection;" new="m_uz"/>
   <method old="getTerminateValue()Ljava/lang/Boolean;" new="m_UAa"/>
   <method old="getValue(Ljava/lang/String;)Ljava/lang/String;" new="m_oF"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="serializeContent(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_Fb"/>
   <method old="setDataForm(Lorg/jivesoftware/smackx/packet/DataForm;)V" new="m_BZ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="ACCEPT_FIELD Ljava/lang/String;" new="f_K"/>
   <field old="DISCLOSURE_FIELD Ljava/lang/String;" new="f_j"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_I"/>
   <field old="FORM_TYPE_FIELD Ljava/lang/String;" new="f_e"/>
   <field old="FORM_TYPE_VALUE Ljava/lang/String;" new="f_m"/>
   <field old="LOGGING_FIELD Ljava/lang/String;" new="f_l"/>
   <field old="NAMESPACE Ljava/lang/String;" new="f_f"/>
   <field old="RENEGOTIATE_FIELD Ljava/lang/String;" new="f_d"/>
   <field old="SECURITY_FIELD Ljava/lang/String;" new="f_k"/>
   <field old="TERMINATE_FIELD Ljava/lang/String;" new="f_B"/>
   <field old="dataForm Lorg/jivesoftware/smackx/packet/DataForm;" new="f_b"/>
  </class>
  <class old="com.xabber.android.ui.dialog.OnCancelListener" new="wy.c_k">
   <method old="onCancel(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_Vb"/>
  </class>
  <class old="com.xabber.android.ui.OAuthActivity$OAuthTokenRequester" new="com.xabber.android.ui.c_H">
   <method old="doInBackground([Ljava/lang/Object;)Ljava/lang/Object;" new="doInBackground"/>
   <method old="doInBackground([Ljava/lang/String;)Ljava/lang/String;" new="m_Yca"/>
   <method old="onPostExecute(Ljava/lang/Object;)V" new="onPostExecute"/>
   <method old="onPostExecute(Ljava/lang/String;)V" new="m_Jda"/>
   <field old="this$0 Lcom/xabber/android/ui/OAuthActivity;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.KEYBase" new="org.xbill.DNS.c_Za">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getAlgorithm()I" new="m_Ne"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getFlags()I" new="m_JG"/>
   <method old="getFootprint()I" new="m_VF"/>
   <method old="getKey()[B" new="m_xa"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getProtocol()I" new="m_jF"/>
   <method old="getPublicKey()Ljava/security/PublicKey;" new="m_TG"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="alg I" new="f_k"/>
   <field old="dclass I" new="f_m"/>
   <field old="flags I" new="f_j"/>
   <field old="footprint I" new="f_d"/>
   <field old="key [B" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="proto I" new="f_B"/>
   <field old="publicKey Ljava/security/PublicKey;" new="f_e"/>
   <field old="serialVersionUID J" new="f_l"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="com.xabber.android.ui.OAuthActivity$1" new="com.xabber.android.ui.c_A">
  </class>
  <class old="com.xabber.android.data.account.AccountTable$Fields" new="com.xabber.android.data.account.c_b">
   <field old="ARCHIVE_MODE Ljava/lang/String;" new="f_l"/>
   <field old="COLOR_INDEX Ljava/lang/String;" new="f_j"/>
   <field old="COMPRESSION Ljava/lang/String;" new="f_G"/>
   <field old="CUSTOM Ljava/lang/String;" new="f_f"/>
   <field old="ENABLED Ljava/lang/String;" new="f_a"/>
   <field old="HOST Ljava/lang/String;" new="f_H"/>
   <field old="LAST_SYNC Ljava/lang/String;" new="f_M"/>
   <field old="PASSWORD Ljava/lang/String;" new="f_g"/>
   <field old="PORT Ljava/lang/String;" new="f_b"/>
   <field old="PRIORITY Ljava/lang/String;" new="f_D"/>
   <field old="PRIVATE_KEY Ljava/lang/String;" new="f_d"/>
   <field old="PROTOCOL Ljava/lang/String;" new="f_c"/>
   <field old="PROXY_HOST Ljava/lang/String;" new="f_A"/>
   <field old="PROXY_PASSWORD Ljava/lang/String;" new="f_p"/>
   <field old="PROXY_PORT Ljava/lang/String;" new="f_i"/>
   <field old="PROXY_TYPE Ljava/lang/String;" new="f_C"/>
   <field old="PROXY_USER Ljava/lang/String;" new="f_e"/>
   <field old="PUBLIC_KEY Ljava/lang/String;" new="f_F"/>
   <field old="RESOURCE Ljava/lang/String;" new="f_L"/>
   <field old="SASL_ENABLED Ljava/lang/String;" new="f_h"/>
   <field old="SERVER_NAME Ljava/lang/String;" new="f_B"/>
   <field old="STATUS_MODE Ljava/lang/String;" new="f_m"/>
   <field old="STATUS_TEXT Ljava/lang/String;" new="f_K"/>
   <field old="STORE_PASSWORD Ljava/lang/String;" new="f_E"/>
   <field old="SYNCABLE Ljava/lang/String;" new="f_J"/>
   <field old="TLS_MODE Ljava/lang/String;" new="f_I"/>
   <field old="USER_NAME Ljava/lang/String;" new="f_k"/>
  </class>
  <class old="org.jivesoftware.smack.ConnectionConfiguration" new="org.jivesoftware.smack.c_N">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getCallbackHandler()Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;" new="m_Qv"/>
   <method old="getCapsNode()Ljava/lang/String;" new="m_ht"/>
   <method old="getCertificateListener()Lorg/jivesoftware/smack/CertificateListener;" new="m_ew"/>
   <method old="getCustomSSLContext()Ljavax/net/ssl/SSLContext;" new="m_vU"/>
   <method old="getHost()Ljava/lang/String;" new="m_vD"/>
   <method old="getKeystorePath()Ljava/lang/String;" new="m_uw"/>
   <method old="getKeystoreType()Ljava/lang/String;" new="m_vw"/>
   <method old="getPKCS11Library()Ljava/lang/String;" new="m_Qw"/>
   <method old="getPassword()Ljava/lang/String;" new="m_rj"/>
   <method old="getPort()I" new="m_Jg"/>
   <method old="getResource()Ljava/lang/String;" new="m_Au"/>
   <method old="getSecurityMode()Lorg/jivesoftware/smack/ConnectionConfiguration$SecurityMode;" new="m_Ix"/>
   <method old="getServiceName()Ljava/lang/String;" new="m_ys"/>
   <method old="getSocketFactory()Ljavax/net/SocketFactory;" new="m_LT"/>
   <method old="getTruststorePassword()Ljava/lang/String;" new="m_vx"/>
   <method old="getTruststorePath()Ljava/lang/String;" new="m_nU"/>
   <method old="getTruststoreType()Ljava/lang/String;" new="m_xx"/>
   <method old="getUsername()Ljava/lang/String;" new="m_tq"/>
   <method old="init(Ljava/lang/String;ILjava/lang/String;Lorg/jivesoftware/smack/proxy/ProxyInfo;)V" new="m_dv"/>
   <method old="isCompressionEnabled()Z" new="m_ZU"/>
   <method old="isDebuggerEnabled()Z" new="m_uV"/>
   <method old="isExpiredCertificatesCheckEnabled()Z" new="m_kw"/>
   <method old="isNotMatchingDomainCheckEnabled()Z" new="m_Ox"/>
   <method old="isReconnectionAllowed()Z" new="m_yt"/>
   <method old="isRosterLoadedAtLogin()Z" new="m_MW"/>
   <method old="isRosterVersioningAvailable()Z" new="m_gV"/>
   <method old="isSASLAuthenticationEnabled()Z" new="m_CW"/>
   <method old="isSelfSignedCertificateEnabled()Z" new="m_OU"/>
   <method old="isSendPresence()Z" new="m_Mq"/>
   <method old="isVerifyChainEnabled()Z" new="m_SU"/>
   <method old="isVerifyRootCAEnabled()Z" new="m_Gw"/>
   <method old="setCallbackHandler(Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;)V" new="m_nv"/>
   <method old="setCapsNode(Ljava/lang/String;)V" new="m_xW"/>
   <method old="setCertificateListener(Lorg/jivesoftware/smack/CertificateListener;)V" new="m_lV"/>
   <method old="setCompressionEnabled(Z)V" new="m_RV"/>
   <method old="setCustomSSLContext(Ljavax/net/ssl/SSLContext;)V" new="m_JW"/>
   <method old="setDebuggerEnabled(Z)V" new="m_KV"/>
   <method old="setExpiredCertificatesCheckEnabled(Z)V" new="m_fv"/>
   <method old="setKeystorePath(Ljava/lang/String;)V" new="m_jw"/>
   <method old="setKeystoreType(Ljava/lang/String;)V" new="m_Zx"/>
   <method old="setLoginInfo(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_xv"/>
   <method old="setNotMatchingDomainCheckEnabled(Z)V" new="m_dx"/>
   <method old="setPKCS11Library(Ljava/lang/String;)V" new="m_LU"/>
   <method old="setReconnectionAllowed(Z)V" new="m_qU"/>
   <method old="setRosterLoadedAtLogin(Z)V" new="m_wx"/>
   <method old="setRosterVersioningAvailable(Z)V" new="m_aw"/>
   <method old="setSASLAuthenticationEnabled(Z)V" new="m_Px"/>
   <method old="setSecurityMode(Lorg/jivesoftware/smack/ConnectionConfiguration$SecurityMode;)V" new="m_Fx"/>
   <method old="setSelfSignedCertificateEnabled(Z)V" new="m_tU"/>
   <method old="setSendPresence(Z)V" new="m_iv"/>
   <method old="setServiceName(Ljava/lang/String;)V" new="m_KW"/>
   <method old="setSocketFactory(Ljavax/net/SocketFactory;)V" new="m_Bx"/>
   <method old="setTruststorePassword(Ljava/lang/String;)V" new="m_SV"/>
   <method old="setTruststorePath(Ljava/lang/String;)V" new="m_Xx"/>
   <method old="setTruststoreType(Ljava/lang/String;)V" new="m_Jw"/>
   <method old="setVerifyChainEnabled(Z)V" new="m_YV"/>
   <method old="setVerifyRootCAEnabled(Z)V" new="m_Pv"/>
   <field old="callbackHandler Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;" new="f_C"/>
   <field old="capsNode Ljava/lang/String;" new="f_B"/>
   <field old="certificateListener Lorg/jivesoftware/smack/CertificateListener;" new="f_f"/>
   <field old="compressionEnabled Z" new="f_J"/>
   <field old="customSSLContext Ljavax/net/ssl/SSLContext;" new="f_S"/>
   <field old="debuggerEnabled Z" new="f_b"/>
   <field old="expiredCertificatesCheckEnabled Z" new="f_i"/>
   <field old="host Ljava/lang/String;" new="f_A"/>
   <field old="isRosterVersioningAvailable Z" new="f_L"/>
   <field old="keystorePath Ljava/lang/String;" new="f_I"/>
   <field old="keystoreType Ljava/lang/String;" new="f_M"/>
   <field old="notMatchingDomainCheckEnabled Z" new="f_j"/>
   <field old="password Ljava/lang/String;" new="f_u"/>
   <field old="pkcs11Library Ljava/lang/String;" new="f_k"/>
   <field old="port I" new="f_c"/>
   <field old="proxy Lorg/jivesoftware/smack/proxy/ProxyInfo;" new="f_h"/>
   <field old="reconnectionAllowed Z" new="f_G"/>
   <field old="resource Ljava/lang/String;" new="f_K"/>
   <field old="rosterLoadedAtLogin Z" new="f_y"/>
   <field old="saslAuthenticationEnabled Z" new="f_F"/>
   <field old="securityMode Lorg/jivesoftware/smack/ConnectionConfiguration$SecurityMode;" new="f_e"/>
   <field old="selfSignedCertificateEnabled Z" new="f_m"/>
   <field old="sendPresence Z" new="f_Z"/>
   <field old="serviceName Ljava/lang/String;" new="f_d"/>
   <field old="socketFactory Ljavax/net/SocketFactory;" new="f_p"/>
   <field old="truststorePassword Ljava/lang/String;" new="f_H"/>
   <field old="truststorePath Ljava/lang/String;" new="f_a"/>
   <field old="truststoreType Ljava/lang/String;" new="f_g"/>
   <field old="username Ljava/lang/String;" new="f_l"/>
   <field old="verifyChainEnabled Z" new="f_E"/>
   <field old="verifyRootCAEnabled Z" new="f_D"/>
  </class>
  <class old="com.xabber.android.data.extension.avatar.BaseAvatarSet" new="wy.c_eb">
   <method old="getElement(I[I)I" new="m_eHa"/>
   <method old="getIndex(Ljava/lang/String;)I" new="m_Yia"/>
   <method old="getResourceId(Ljava/lang/String;)I" new="m_sHa"/>
   <method old="onLowMemory()V" new="m_Wb"/>
   <field old="AVATARS [I" new="f_e"/>
   <field old="resources Ljava/util/Map;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.adapter.AccountTypeAdapter" new="com.xabber.android.ui.adapter.c_Y">
   <method old="getCount()I" new="getCount"/>
   <method old="getDropDownView(ILandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;" new="getDropDownView"/>
   <method old="getItem(I)Ljava/lang/Object;" new="getItem"/>
   <method old="getItemId(I)J" new="getItemId"/>
   <method old="getView(ILandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;" new="getView"/>
   <field old="accountTypes Ljava/util/List;" new="f_e"/>
   <field old="activity Landroid/app/Activity;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.UDPClient$1" new="org.xbill.DNS.c_a">
   <method old="run()V" new="run"/>
  </class>
  <class old="com.xabber.xmpp.vcard.DataHolder" new="com.xabber.xmpp.vcard.c_n">
   <method old="getPayload()Lcom/xabber/xmpp/Instance;" new="m_aZ"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="setPayload(Lcom/xabber/xmpp/Instance;)V" new="m_Raa"/>
   <field old="payload Lcom/xabber/xmpp/Instance;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.connection.ReconnectionManager" new="com.xabber.android.data.connection.ReconnectionManager">
   <method old="getInstance()Lcom/xabber/android/data/connection/ReconnectionManager;" new="m_Xr"/>
   <method old="onAccountRemoved(Lcom/xabber/android/data/account/AccountItem;)V" new="m_kb"/>
   <method old="onConnected(Lcom/xabber/android/data/connection/ConnectionItem;)V" new="m_sc"/>
   <method old="onConnection(Lcom/xabber/android/data/connection/ConnectionItem;)V" new="m_SA"/>
   <method old="onTimer()V" new="m_VB"/>
   <field old="DELAY I" new="f_m"/>
   <field old="RECONNECT_AFTER [I" new="f_m"/>
   <field old="connections Ljava/util/HashMap;" new="f_b"/>
   <field old="instance Lcom/xabber/android/data/connection/ReconnectionManager;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.message.chat.ChatInput" new="wy.c_RC">
   <method old="getSelectionEnd()I" new="m_Vea"/>
   <method old="getSelectionStart()I" new="m_SFa"/>
   <method old="getTypedMessage()Ljava/lang/String;" new="m_zea"/>
   <method old="setTyped(Ljava/lang/String;II)V" new="m_yEa"/>
   <field old="selectionEnd I" new="f_m"/>
   <field old="selectionStart I" new="f_b"/>
   <field old="typedMessage Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.Form" new="org.jivesoftware.smackx.c_aa">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="addField(Lorg/jivesoftware/smackx/FormField;)V" new="m_jj"/>
   <method old="createAnswerForm()Lorg/jivesoftware/smackx/Form;" new="m_oq"/>
   <method old="getDataFormToSend()Lorg/jivesoftware/smackx/packet/DataForm;" new="m_Br"/>
   <method old="getField(Ljava/lang/String;)Lorg/jivesoftware/smackx/FormField;" new="m_Hj"/>
   <method old="getFields()Ljava/util/Iterator;" new="m_qJ"/>
   <method old="getFormFrom(Lorg/jivesoftware/smack/packet/Packet;)Lorg/jivesoftware/smackx/Form;" new="m_Xp"/>
   <method old="getInstructions()Ljava/lang/String;" new="m_pj"/>
   <method old="getTitle()Ljava/lang/String;" new="m_zb"/>
   <method old="getType()Ljava/lang/String;" new="m_b"/>
   <method old="isFormType()Z" new="m_OQ"/>
   <method old="isSubmitType()Z" new="m_Aq"/>
   <method old="setAnswer(Ljava/lang/String;D)V" new="m_mq"/>
   <method old="setAnswer(Ljava/lang/String;F)V" new="m_FP"/>
   <method old="setAnswer(Ljava/lang/String;I)V" new="m_zp"/>
   <method old="setAnswer(Ljava/lang/String;J)V" new="m_kQ"/>
   <method old="setAnswer(Ljava/lang/String;Ljava/lang/String;)V" new="m_vP"/>
   <method old="setAnswer(Ljava/lang/String;Ljava/util/List;)V" new="m_SP"/>
   <method old="setAnswer(Ljava/lang/String;Z)V" new="m_mp"/>
   <method old="setAnswer(Lorg/jivesoftware/smackx/FormField;Ljava/lang/Object;)V" new="m_YO"/>
   <method old="setDefaultAnswer(Ljava/lang/String;)V" new="m_Gp"/>
   <method old="setInstructions(Ljava/lang/String;)V" new="m_Cq"/>
   <method old="setTitle(Ljava/lang/String;)V" new="m_Ok"/>
   <field old="TYPE_CANCEL Ljava/lang/String;" new="f_e"/>
   <field old="TYPE_FORM Ljava/lang/String;" new="f_d"/>
   <field old="TYPE_RESULT Ljava/lang/String;" new="f_m"/>
   <field old="TYPE_SUBMIT Ljava/lang/String;" new="f_b"/>
   <field old="dataForm Lorg/jivesoftware/smackx/packet/DataForm;" new="f_B"/>
  </class>
  <class old="com.xabber.xmpp.archive.OtrMode" new="com.xabber.xmpp.archive.OtrMode">
   <method old="acceptLoggingValue(Lcom/xabber/xmpp/ssn/LoggingValue;)Z" new="m_GAa"/>
   <method old="fromString(Ljava/lang/String;)Lcom/xabber/xmpp/archive/OtrMode;" new="m_tc"/>
   <method old="getDisclosureValue()Lcom/xabber/xmpp/ssn/DisclosureValue;" new="m_Rca"/>
   <method old="getLoggingValues()[Lcom/xabber/xmpp/ssn/LoggingValue;" new="m_aba"/>
   <method old="getSecurityValue()Lcom/xabber/xmpp/ssn/SecurityValue;" new="m_HBa"/>
   <method old="selectLoggingValue(Ljava/util/Collection;)Lcom/xabber/xmpp/ssn/LoggingValue;" new="m_Rba"/>
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/xmpp/archive/OtrMode;" new="valueOf"/>
   <method old="values()[Lcom/xabber/xmpp/archive/OtrMode;" new="values"/>
   <field old="$VALUES [Lcom/xabber/xmpp/archive/OtrMode;" new="f_B"/>
   <field old="approve Lcom/xabber/xmpp/archive/OtrMode;" new="f_l"/>
   <field old="concede Lcom/xabber/xmpp/archive/OtrMode;" new="f_m"/>
   <field old="forbid Lcom/xabber/xmpp/archive/OtrMode;" new="f_k"/>
   <field old="loggingValues [Lcom/xabber/xmpp/ssn/LoggingValue;" new="f_j"/>
   <field old="oppose Lcom/xabber/xmpp/archive/OtrMode;" new="f_d"/>
   <field old="prefer Lcom/xabber/xmpp/archive/OtrMode;" new="f_e"/>
   <field old="require Lcom/xabber/xmpp/archive/OtrMode;" new="f_b"/>
  </class>
  <class old="org.xbill.DNS.SSHFPRecord$Algorithm" new="org.xbill.DNS.c_z">
   <field old="DSS I" new="f_m"/>
   <field old="RSA I" new="f_e"/>
  </class>
  <class old="net.java.otr4j.session.SessionID" new="net.java.otr4j.session.c_j">
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getAccountID()Ljava/lang/String;" new="m_UW"/>
   <method old="getProtocolName()Ljava/lang/String;" new="m_bx"/>
   <method old="getUserID()Ljava/lang/String;" new="m_IV"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="Empty Lnet/java/otr4j/session/SessionID;" new="f_d"/>
   <field old="accountID Ljava/lang/String;" new="f_m"/>
   <field old="protocolName Ljava/lang/String;" new="f_e"/>
   <field old="userID Ljava/lang/String;" new="f_b"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.callback.TextOutputCallback" new="wy.c_gC">
   <method old="getMessage()Ljava/lang/String;" new="m_Wm"/>
   <method old="getMessageType()I" new="m_EV"/>
   <field old="ERROR I" new="f_m"/>
   <field old="INFORMATION I" new="f_j"/>
   <field old="WARNING I" new="f_d"/>
   <field old="message Ljava/lang/String;" new="f_b"/>
   <field old="messageType I" new="f_e"/>
   <field old="serialVersionUID J" new="f_B"/>
  </class>
  <class old="com.xabber.android.ui.OAuthActivity" new="com.xabber.android.ui.OAuthActivity">
   <method old="access$100(Lcom/xabber/android/ui/OAuthActivity;)Ljava/lang/String;" new="m_wba"/>
   <method old="access$102(Lcom/xabber/android/ui/OAuthActivity;Ljava/lang/String;)Ljava/lang/String;" new="m_vCa"/>
   <method old="access$202(Lcom/xabber/android/ui/OAuthActivity;Z)Z" new="m_Lca"/>
   <method old="access$300(Landroid/content/Intent;)Lcom/xabber/android/data/account/AccountProtocol;" new="m_Lba"/>
   <method old="access$400(Landroid/content/Context;)Landroid/content/Intent;" new="m_QCa"/>
   <method old="access$600(Lcom/xabber/android/ui/OAuthActivity;)V" new="m_YAa"/>
   <method old="access$700(Landroid/content/Context;Ljava/lang/String;)Landroid/content/Intent;" new="m_UBa"/>
   <method old="createIntent(Landroid/content/Context;Lcom/xabber/android/data/account/AccountProtocol;)Landroid/content/Intent;" new="m_Yaa"/>
   <method old="createInvalidateIntent(Landroid/content/Context;)Landroid/content/Intent;" new="m_Oca"/>
   <method old="createResultIntent(Landroid/content/Context;Ljava/lang/String;)Landroid/content/Intent;" new="m_eda"/>
   <method old="getAccountProtocol(Landroid/content/Intent;)Lcom/xabber/android/data/account/AccountProtocol;" new="m_eBa"/>
   <method old="getToken(Landroid/content/Intent;)Ljava/lang/String;" new="m_yca"/>
   <method old="isInvalidated(Landroid/content/Intent;)Z" new="m_Mda"/>
   <method old="onActivityResult(IILandroid/content/Intent;)V" new="onActivityResult"/>
   <method old="onCreate(Landroid/os/Bundle;)V" new="onCreate"/>
   <method old="onDestroy()V" new="onDestroy"/>
   <method old="onNewIntent(Landroid/content/Intent;)V" new="onNewIntent"/>
   <method old="onPause()V" new="onPause"/>
   <method old="onResume()V" new="onResume"/>
   <method old="onSaveInstanceState(Landroid/os/Bundle;)V" new="onSaveInstanceState"/>
   <method old="startActivity(Landroid/content/Intent;)V" new="startActivity"/>
   <method old="startActivityForResult(Landroid/content/Intent;I)V" new="startActivityForResult"/>
   <method old="update()V" new="m_fca"/>
   <field old="EXTRA_INVALIDATE Ljava/lang/String;" new="f_k"/>
   <field old="EXTRA_REFRESH_TOKEN Ljava/lang/String;" new="f_d"/>
   <field old="SAVED_CODE Ljava/lang/String;" new="f_b"/>
   <field old="SAVED_URL Ljava/lang/String;" new="f_m"/>
   <field old="code Ljava/lang/String;" new="f_j"/>
   <field old="loaded Z" new="f_B"/>
   <field old="webView Landroid/webkit/WebView;" new="f_e"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.util.Pack" new="wy.c_yC">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="bigEndianToInt([BI)I" new="m_WX"/>
   <method old="bigEndianToInt([BI[I)V" new="m_Hz"/>
   <method old="bigEndianToLong([BI)J" new="m_nX"/>
   <method old="intToBigEndian(I[BI)V" new="m_oy"/>
   <method old="intToBigEndian([I[BI)V" new="m_Faa"/>
   <method old="intToLittleEndian(I[BI)V" new="m_eaa"/>
   <method old="intToLittleEndian([I[BI)V" new="m_MZ"/>
   <method old="littleEndianToInt([BI)I" new="m_HY"/>
   <method old="littleEndianToInt([BI[I)V" new="m_Jy"/>
   <method old="littleEndianToLong([BI)J" new="m_XY"/>
   <method old="longToBigEndian(J[BI)V" new="m_ZY"/>
   <method old="longToLittleEndian(J[BI)V" new="m_NY"/>
  </class>
  <class old="org.jivesoftware.smack.packet.Session" new="org.jivesoftware.smack.packet.c_j">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
  </class>
  <class old="org.jivesoftware.smack.util.Base64$InputStream" new="org.jivesoftware.smack.util.c_i">
   <method old="read()I" new="read"/>
   <method old="read([BII)I" new="read"/>
   <field old="alphabet [B" new="f_e"/>
   <field old="breakLines Z" new="f_k"/>
   <field old="buffer [B" new="f_m"/>
   <field old="bufferLength I" new="f_b"/>
   <field old="decodabet [B" new="f_l"/>
   <field old="encode Z" new="f_B"/>
   <field old="lineLength I" new="f_f"/>
   <field old="numSigBytes I" new="f_j"/>
   <field old="options I" new="f_d"/>
   <field old="position I" new="f_I"/>
  </class>
  <class old="com.xabber.android.ui.adapter.AccountChooseAdapter" new="com.xabber.android.ui.adapter.c_B">
   <method old="getCount()I" new="getCount"/>
   <method old="getDropDownView(ILandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;" new="getDropDownView"/>
   <method old="getItem(I)Ljava/lang/Object;" new="getItem"/>
   <method old="getItemId(I)J" new="getItemId"/>
   <method old="getView(ILandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;" new="getView"/>
   <field old="accounts Ljava/util/ArrayList;" new="f_e"/>
   <field old="activity Landroid/app/Activity;" new="f_m"/>
  </class>
  <class old="net.java.otr4j.io.OtrOutputStream" new="net.java.otr4j.io.c_A">
   <method old="writeBigInt(Ljava/math/BigInteger;)V" new="m_iY"/>
   <method old="writeByte(I)V" new="m_Eaa"/>
   <method old="writeCtr([B)V" new="m_ry"/>
   <method old="writeDHPublicKey(Ljavax/crypto/interfaces/DHPublicKey;)V" new="m_By"/>
   <method old="writeData([B)V" new="m_Ez"/>
   <method old="writeInt(I)V" new="m_My"/>
   <method old="writeMac([B)V" new="m_VY"/>
   <method old="writeMysteriousT(Lnet/java/otr4j/io/messages/MysteriousT;)V" new="m_dZ"/>
   <method old="writeMysteriousX(Lnet/java/otr4j/io/messages/SignatureM;)V" new="m_MX"/>
   <method old="writeMysteriousX(Lnet/java/otr4j/io/messages/SignatureX;)V" new="m_iy"/>
   <method old="writeNumber(II)V" new="m_xZ"/>
   <method old="writePublicKey(Ljava/security/PublicKey;)V" new="m_zY"/>
   <method old="writeShort(I)V" new="m_Vy"/>
   <method old="writeSignature([BLjava/security/PublicKey;)V" new="m_Zz"/>
   <method old="writeTlvData([B)V" new="m_AZ"/>
   <field old="DATA_LEN I" new="f_D"/>
   <field old="ERROR_PREFIX Ljava/lang/String;" new="f_J"/>
   <field old="HEAD Ljava/lang/String;" new="f_k"/>
   <field old="HEAD_ENCODED C" new="f_b"/>
   <field old="HEAD_ERROR C" new="f_f"/>
   <field old="HEAD_QUERY_Q C" new="f_j"/>
   <field old="HEAD_QUERY_V C" new="f_B"/>
   <field old="TLV_LEN I" new="f_m"/>
   <field old="TYPE_LEN_BYTE I" new="f_e"/>
   <field old="TYPE_LEN_CTR I" new="f_d"/>
   <field old="TYPE_LEN_INT I" new="f_I"/>
   <field old="TYPE_LEN_MAC I" new="f_K"/>
   <field old="TYPE_LEN_SHORT I" new="f_l"/>
  </class>
  <class old="com.xabber.android.data.connection.OnConnectionListener" new="com.xabber.android.data.connection.c_m">
   <method old="onConnection(Lcom/xabber/android/data/connection/ConnectionItem;)V" new="m_SA"/>
  </class>
  <class old="org.jivesoftware.smackx.provider.DiscoverInfoProvider" new="org.jivesoftware.smackx.provider.c_a">
   <method old="parseIQ(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/IQ;" new="m_g"/>
  </class>
  <class old="org.jivesoftware.smack.PrivacyList" new="org.jivesoftware.smack.c_L">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getItems()Ljava/util/List;" new="m_Vj"/>
   <method old="isActiveList()Z" new="m_uU"/>
   <method old="isDefaultList()Z" new="m_nw"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="isActiveList Z" new="f_b"/>
   <field old="isDefaultList Z" new="f_e"/>
   <field old="items Ljava/util/List;" new="f_m"/>
   <field old="listName Ljava/lang/String;" new="f_d"/>
  </class>
  <class old="com.xabber.android.data.FileLogDebugger" new="com.xabber.android.data.c_b">
   <method old="access$000(Lcom/xabber/android/data/FileLogDebugger;)Z" new="m_UMa"/>
   <method old="access$002(Lcom/xabber/android/data/FileLogDebugger;Z)Z" new="m_tna"/>
   <method old="access$100(Lcom/xabber/android/data/FileLogDebugger;)Z" new="m_boa"/>
   <method old="access$1000(Lcom/xabber/android/data/FileLogDebugger;)Lorg/jivesoftware/smack/Connection;" new="m_kMa"/>
   <method old="access$102(Lcom/xabber/android/data/FileLogDebugger;Z)Z" new="m_GNa"/>
   <method old="access$1100(Lcom/xabber/android/data/FileLogDebugger;)Ljava/text/SimpleDateFormat;" new="m_rNa"/>
   <method old="access$200(Lcom/xabber/android/data/FileLogDebugger;)Ljava/io/FileWriter;" new="m_Koa"/>
   <method old="access$300(Lcom/xabber/android/data/FileLogDebugger;)Ljava/text/SimpleDateFormat;" new="m_Una"/>
   <method old="access$400(Lcom/xabber/android/data/FileLogDebugger;)Ljava/text/SimpleDateFormat;" new="m_hMa"/>
   <method old="access$500(Lcom/xabber/android/data/FileLogDebugger;)Lorg/jivesoftware/smack/Connection;" new="m_pNa"/>
   <method old="access$600(Lcom/xabber/android/data/FileLogDebugger;)Ljava/text/SimpleDateFormat;" new="m_lNa"/>
   <method old="access$700(Lcom/xabber/android/data/FileLogDebugger;)V" new="m_PMa"/>
   <method old="access$800(Lcom/xabber/android/data/FileLogDebugger;)Ljava/text/SimpleDateFormat;" new="m_Coa"/>
   <method old="access$900(Lcom/xabber/android/data/FileLogDebugger;)Ljava/text/SimpleDateFormat;" new="m_jNa"/>
   <method old="createReaderListener()Lorg/jivesoftware/smack/util/ReaderListener;" new="m_YLa"/>
   <method old="createWriterListener()Lorg/jivesoftware/smack/util/WriterListener;" new="m_Noa"/>
   <method old="getReader()Ljava/io/Reader;" new="m_Sc"/>
   <method old="getReaderListener()Lorg/jivesoftware/smack/PacketListener;" new="m_Cb"/>
   <method old="getWriter()Ljava/io/Writer;" new="m_wA"/>
   <method old="getWriterListener()Lorg/jivesoftware/smack/PacketListener;" new="m_RA"/>
   <method old="newConnectionReader(Ljava/io/Reader;)Ljava/io/Reader;" new="m_mA"/>
   <method old="newConnectionWriter(Ljava/io/Writer;)Ljava/io/Writer;" new="m_Tb"/>
   <method old="onClose()V" new="m_cc"/>
   <method old="userHasLogged(Ljava/lang/String;)V" new="m_Yc"/>
   <field old="FILE_NAME_FORMAT Ljava/text/SimpleDateFormat;" new="f_d"/>
   <field old="connection Lorg/jivesoftware/smack/Connection;" new="f_l"/>
   <field old="dateFormatter Ljava/text/SimpleDateFormat;" new="f_j"/>
   <field old="printInterpreted Z" new="f_e"/>
   <field old="readerClosed Z" new="f_m"/>
   <field old="writer Ljava/io/FileWriter;" new="f_e"/>
   <field old="writerClosed Z" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.roster.RosterManager" new="com.xabber.android.data.roster.RosterManager">
   <method old="addContact(Lcom/xabber/android/data/roster/RosterContact;Ljava/lang/String;Ljava/util/Map;)V" new="m_gea"/>
   <method old="addGroup(Lcom/xabber/android/data/roster/RosterContact;Ljava/lang/String;Ljava/util/Collection;Ljava/util/Map;)V" new="m_bea"/>
   <method old="addRosterContact(Lcom/xabber/android/data/roster/RosterContact;)V" new="m_ZFa"/>
   <method old="addRosterGroup(Lcom/xabber/android/data/roster/RosterGroup;)V" new="m_yDa"/>
   <method old="createContact(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V" new="m_XDa"/>
   <method old="getBestContact(Ljava/lang/String;Ljava/lang/String;)Lcom/xabber/android/data/roster/AbstractContact;" new="m_gga"/>
   <method old="getContacts()Ljava/util/Collection;" new="m_Bfa"/>
   <method old="getGroups(Ljava/lang/String;)Ljava/util/Collection;" new="m_VDa"/>
   <method old="getGroups(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Collection;" new="m_nfa"/>
   <method old="getInstance()Lcom/xabber/android/data/roster/RosterManager;" new="m_Xr"/>
   <method old="getName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" new="m_fga"/>
   <method old="getRosterContact(Ljava/lang/String;Ljava/lang/String;)Lcom/xabber/android/data/roster/RosterContact;" new="m_Lfa"/>
   <method old="getRosterGroups()Ljava/util/Collection;" new="m_HFa"/>
   <method old="isRosterReceived(Ljava/lang/String;)Z" new="m_Qfa"/>
   <method old="onAccountDisabled(Lcom/xabber/android/data/account/AccountItem;)V" new="m_Qd"/>
   <method old="onAccountEnabled(Lcom/xabber/android/data/account/AccountItem;)V" new="m_BC"/>
   <method old="onAccountRemoved(Lcom/xabber/android/data/account/AccountItem;)V" new="m_kb"/>
   <method old="onArchiveModificationsReceived(Lcom/xabber/android/data/connection/ConnectionItem;)V" new="m_Ad"/>
   <method old="onContactChanged(Ljava/lang/String;Ljava/lang/String;)V" new="m_sfa"/>
   <method old="onContactsChanged(Ljava/util/Collection;)V" new="m_bd"/>
   <method old="onDisconnect(Lcom/xabber/android/data/connection/ConnectionItem;)V" new="m_xB"/>
   <method old="onPacket(Lcom/xabber/android/data/connection/ConnectionItem;Ljava/lang/String;Lorg/jivesoftware/smack/packet/Packet;)V" new="m_tC"/>
   <method old="removeContact(Lcom/xabber/android/data/roster/RosterContact;Ljava/util/Collection;)V" new="m_AEa"/>
   <method old="removeContact(Ljava/lang/String;Ljava/lang/String;)V" new="m_Wea"/>
   <method old="removeGroup(Ljava/lang/String;)V" new="m_ADa"/>
   <method old="removeGroup(Ljava/lang/String;Ljava/lang/String;)V" new="m_UEa"/>
   <method old="removeGroupReference(Lcom/xabber/android/data/roster/RosterContact;Lcom/xabber/android/data/roster/RosterGroupReference;Ljava/util/Collection;Ljava/util/Map;)V" new="m_rEa"/>
   <method old="renameGroup(Ljava/lang/String;Ljava/lang/String;)V" new="m_Pda"/>
   <method old="renameGroup(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_xea"/>
   <method old="setEnabled(Ljava/lang/String;Z)V" new="m_Tda"/>
   <method old="setName(Lcom/xabber/android/data/roster/RosterContact;Ljava/lang/String;Ljava/util/Map;)V" new="m_EDa"/>
   <method old="setNameAndGroup(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V" new="m_BDa"/>
   <field old="instance Lcom/xabber/android/data/roster/RosterManager;" new="f_b"/>
   <field old="receivedRosters Ljava/util/Set;" new="f_e"/>
   <field old="requestedRosters Ljava/util/Set;" new="f_d"/>
   <field old="rosterContacts Lcom/xabber/android/data/entity/NestedMap;" new="f_B"/>
   <field old="rosterGroups Lcom/xabber/android/data/entity/NestedMap;" new="f_m"/>
  </class>
  <class old="net.java.otr4j.io.messages.AbstractEncodedMessage" new="net.java.otr4j.io.messages.c_B">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="hashCode()I" new="hashCode"/>
   <field old="MESSAGE_DATA I" new="MESSAGE_DATA"/>
   <field old="MESSAGE_DHKEY I" new="MESSAGE_DHKEY"/>
   <field old="MESSAGE_DH_COMMIT I" new="MESSAGE_DH_COMMIT"/>
   <field old="MESSAGE_ERROR I" new="MESSAGE_ERROR"/>
   <field old="MESSAGE_PLAINTEXT I" new="MESSAGE_PLAINTEXT"/>
   <field old="MESSAGE_QUERY I" new="MESSAGE_QUERY"/>
   <field old="MESSAGE_REVEALSIG I" new="MESSAGE_REVEALSIG"/>
   <field old="MESSAGE_SIGNATURE I" new="MESSAGE_SIGNATURE"/>
   <field old="messageType I" new="f_m"/>
   <field old="protocolVersion I" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.notification.BaseNotificationProvider" new="wy.c_ZB">
   <method old="add(Lcom/xabber/android/data/notification/NotificationItem;Ljava/lang/Boolean;)V" new="m_rga"/>
   <method old="canClearNotifications()Z" new="m_ab"/>
   <method old="clearAccountNotifications(Ljava/lang/String;)V" new="m_uC"/>
   <method old="clearNotifications()V" new="m_TC"/>
   <method old="getIcon()I" new="m_qb"/>
   <method old="getNotifications()Ljava/util/Collection;" new="m_Tc"/>
   <method old="getSound()Landroid/net/Uri;" new="m_Qc"/>
   <method old="getStreamType()I" new="m_Xc"/>
   <method old="remove(Lcom/xabber/android/data/notification/NotificationItem;)Z" new="m_lha"/>
   <method old="setCanClearNotifications(Z)V" new="m_xha"/>
   <field old="canClearNotifications Z" new="f_b"/>
   <field old="icon I" new="f_m"/>
   <field old="items Ljava/util/Collection;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.Gateway$1" new="org.jivesoftware.smackx.c_Z">
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.InvalidCipherTextException" new="net.java.otr4j.bouncycastle.crypto.c_k">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getCause()Ljava/lang/Throwable;" new="getCause"/>
  </class>
  <class old="com.xabber.xmpp.archive.ItemProvider" new="com.xabber.xmpp.archive.c_h">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/archive/Item;" new="m_ZZ"/>
   <method old="getInstance()Lcom/xabber/xmpp/archive/ItemProvider;" new="m_Xr"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/archive/AbstractSettings;)Lcom/xabber/xmpp/archive/AbstractSettings;" new="m_xaa"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/archive/Item;)Lcom/xabber/xmpp/archive/Item;" new="m_hBa"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
   <field old="instance Lcom/xabber/xmpp/archive/ItemProvider;" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.archive.AbstractModifiedProvider" new="com.xabber.xmpp.archive.c_k">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/archive/AbstractModified;)Lcom/xabber/xmpp/archive/AbstractModified;" new="m_Mba"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
  </class>
  <class old="com.xabber.android.classic.R$dimen" new="com.xabber.android.classic.R$dimen">
   <field old="active_chat_padding_bottom I" new="active_chat_padding_bottom"/>
   <field old="active_chat_padding_left I" new="active_chat_padding_left"/>
   <field old="active_chat_padding_right I" new="active_chat_padding_right"/>
   <field old="active_chat_padding_top I" new="active_chat_padding_top"/>
   <field old="avatar_size I" new="avatar_size"/>
   <field old="client_software_margin_left I" new="client_software_margin_left"/>
   <field old="contact_list_item_height I" new="contact_list_item_height"/>
   <field old="contact_list_item_padding_bottom I" new="contact_list_item_padding_bottom"/>
   <field old="contact_list_item_padding_top I" new="contact_list_item_padding_top"/>
   <field old="contact_list_status_mode_width I" new="contact_list_status_mode_width"/>
   <field old="contact_name_height_hide_status I" new="contact_name_height_hide_status"/>
   <field old="contact_name_height_show_status I" new="contact_name_height_show_status"/>
   <field old="expander_arrow_margin_left I" new="expander_arrow_margin_left"/>
   <field old="expander_arrow_margin_right I" new="expander_arrow_margin_right"/>
   <field old="expander_height I" new="expander_height"/>
   <field old="expander_text_margin_right I" new="expander_text_margin_right"/>
   <field old="notification_large_icon_height I" new="notification_large_icon_height"/>
   <field old="notification_large_icon_width I" new="notification_large_icon_width"/>
   <field old="status_icon_width I" new="status_icon_width"/>
   <field old="title_height I" new="title_height"/>
  </class>
  <class old="org.xbill.DNS.Cache$NegativeElement" new="org.xbill.DNS.c_gb">
   <method old="compareCredibility(I)I" new="m_H"/>
   <method old="expired()Z" new="m_h"/>
   <method old="getType()I" new="m_b"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="credibility I" new="f_m"/>
   <field old="expire I" new="f_b"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_d"/>
   <field old="type I" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.extension.vcard.VCardManager" new="wy.c_sB">
   <method old="access$000(Lcom/xabber/android/data/extension/vcard/VCardManager;Ljava/util/Map;)V" new="m_kIa"/>
   <method old="getInstance()Lcom/xabber/android/data/extension/vcard/VCardManager;" new="m_Xr"/>
   <method old="getName(Ljava/lang/String;)Ljava/lang/String;" new="m_lBa"/>
   <method old="getStructucedName(Ljava/lang/String;)Lcom/xabber/android/data/roster/StructuredName;" new="m_Xia"/>
   <method old="onAccountRemoved(Lcom/xabber/android/data/account/AccountItem;)V" new="m_kb"/>
   <method old="onDisconnect(Lcom/xabber/android/data/connection/ConnectionItem;)V" new="m_xB"/>
   <method old="onLoad()V" new="m_pA"/>
   <method old="onLoaded(Ljava/util/Map;)V" new="m_GGa"/>
   <method old="onPacket(Lcom/xabber/android/data/connection/ConnectionItem;Ljava/lang/String;Lorg/jivesoftware/smack/packet/Packet;)V" new="m_tC"/>
   <method old="onRosterReceived(Lcom/xabber/android/data/account/AccountItem;)V" new="m_gC"/>
   <method old="onVCardFailed(Ljava/lang/String;Ljava/lang/String;)V" new="m_Rd"/>
   <method old="onVCardReceived(Ljava/lang/String;Ljava/lang/String;Lcom/xabber/xmpp/vcard/VCard;)V" new="m_BB"/>
   <method old="request(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_RHa"/>
   <field old="EMPTY_STRUCTURED_NAME Lcom/xabber/android/data/roster/StructuredName;" new="f_B"/>
   <field old="accountRequested Ljava/util/ArrayList;" new="f_e"/>
   <field old="instance Lcom/xabber/android/data/extension/vcard/VCardManager;" new="f_j"/>
   <field old="invalidHashes Ljava/util/Set;" new="f_m"/>
   <field old="names Ljava/util/Map;" new="f_b"/>
   <field old="requests Ljava/util/Collection;" new="f_d"/>
  </class>
  <class old="org.jivesoftware.smack.sasl.SASLCramMD5Mechanism" new="wy.c_Na">
   <method old="authenticate()V" new="m_ls"/>
   <method old="authenticate(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_Pd"/>
   <method old="authenticate(Ljava/lang/String;Ljava/lang/String;Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;)V" new="m_eC"/>
   <method old="challengeReceived(Ljava/lang/String;)V" new="m_vt"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getSASLAuthentication()Lorg/jivesoftware/smack/SASLAuthentication;" new="m_Gt"/>
   <method old="handle([Lorg/apache/harmony/javax/security/auth/callback/Callback;)V" new="m_Jb"/>
   <field old="authenticationId Ljava/lang/String;" new="f_e"/>
   <field old="hostname Ljava/lang/String;" new="f_B"/>
   <field old="password Ljava/lang/String;" new="f_m"/>
   <field old="sc Lorg/apache/harmony/javax/security/sasl/SaslClient;" new="f_b"/>
  </class>
  <class old="com.xabber.xmpp.archive.SessionRemove" new="com.xabber.xmpp.archive.c_M">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="addSession(Lcom/xabber/xmpp/archive/Session;)V" new="m_rAa"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getSessions()Ljava/util/Collection;" new="m_fQ"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="serializeContent(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_Fb"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_e"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="NAMESPACE Ljava/lang/String;" new="f_m"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="sessions Ljava/util/Collection;" new="f_b"/>
  </class>
  <class old="com.google.zxing.integration.android.IntentIntegrator" new="wy.c_WC">
   <method old="access$000(Lcom/google/zxing/integration/android/IntentIntegrator;)Landroid/app/Activity;" new="m_fma"/>
   <method old="access$100()Ljava/lang/String;" new="m_SQ"/>
   <method old="addExtra(Ljava/lang/String;Ljava/lang/Object;)V" new="m_xNa"/>
   <method old="attachMoreExtras(Landroid/content/Intent;)V" new="m_roa"/>
   <method old="findTargetAppPackage(Landroid/content/Intent;)Ljava/lang/String;" new="m_Doa"/>
   <method old="getButtonNo()Ljava/lang/String;" new="m_XLa"/>
   <method old="getButtonYes()Ljava/lang/String;" new="m_Kma"/>
   <method old="getMessage()Ljava/lang/String;" new="m_Wm"/>
   <method old="getMoreExtras()Ljava/util/Map;" new="m_Qna"/>
   <method old="getTargetApplications()Ljava/util/Collection;" new="m_oMa"/>
   <method old="getTitle()Ljava/lang/String;" new="m_zb"/>
   <method old="initiateScan()Landroid/app/AlertDialog;" new="m_xna"/>
   <method old="initiateScan(Ljava/util/Collection;)Landroid/app/AlertDialog;" new="m_rma"/>
   <method old="list([Ljava/lang/String;)Ljava/util/Collection;" new="m_WMa"/>
   <method old="parseActivityResult(IILandroid/content/Intent;)Lcom/google/zxing/integration/android/IntentResult;" new="m_SMa"/>
   <method old="setButtonNo(Ljava/lang/String;)V" new="m_bma"/>
   <method old="setButtonNoByID(I)V" new="m_dna"/>
   <method old="setButtonYes(Ljava/lang/String;)V" new="m_Pna"/>
   <method old="setButtonYesByID(I)V" new="m_Soa"/>
   <method old="setMessage(Ljava/lang/String;)V" new="m_hl"/>
   <method old="setMessageByID(I)V" new="m_Eoa"/>
   <method old="setSingleTargetApplication(Ljava/lang/String;)V" new="m_ema"/>
   <method old="setTargetApplications(Ljava/util/Collection;)V" new="m_LNa"/>
   <method old="setTitle(Ljava/lang/String;)V" new="m_Ok"/>
   <method old="setTitleByID(I)V" new="m_qNa"/>
   <method old="shareText(Ljava/lang/CharSequence;)Landroid/app/AlertDialog;" new="m_Wna"/>
   <method old="shareText(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Landroid/app/AlertDialog;" new="m_QMa"/>
   <method old="showDownloadDialog()Landroid/app/AlertDialog;" new="m_Mna"/>
   <method old="startActivityForResult(Landroid/content/Intent;I)V" new="m_yMa"/>
   <field old="ALL_CODE_TYPES Ljava/util/Collection;" new="f_d"/>
   <field old="BSPLUS_PACKAGE Ljava/lang/String;" new="f_h"/>
   <field old="BS_PACKAGE Ljava/lang/String;" new="f_e"/>
   <field old="DATA_MATRIX_TYPES Ljava/util/Collection;" new="f_b"/>
   <field old="DEFAULT_MESSAGE Ljava/lang/String;" new="f_m"/>
   <field old="DEFAULT_NO Ljava/lang/String;" new="f_K"/>
   <field old="DEFAULT_TITLE Ljava/lang/String;" new="f_F"/>
   <field old="DEFAULT_YES Ljava/lang/String;" new="f_a"/>
   <field old="ONE_D_CODE_TYPES Ljava/util/Collection;" new="f_C"/>
   <field old="PRODUCT_CODE_TYPES Ljava/util/Collection;" new="f_j"/>
   <field old="QR_CODE_TYPES Ljava/util/Collection;" new="f_B"/>
   <field old="REQUEST_CODE I" new="f_D"/>
   <field old="TAG Ljava/lang/String;" new="f_I"/>
   <field old="TARGET_ALL_KNOWN Ljava/util/Collection;" new="f_G"/>
   <field old="TARGET_BARCODE_SCANNER_ONLY Ljava/util/Collection;" new="f_E"/>
   <field old="activity Landroid/app/Activity;" new="f_H"/>
   <field old="buttonNo Ljava/lang/String;" new="f_l"/>
   <field old="buttonYes Ljava/lang/String;" new="f_f"/>
   <field old="message Ljava/lang/String;" new="f_M"/>
   <field old="moreExtras Ljava/util/Map;" new="f_J"/>
   <field old="targetApplications Ljava/util/Collection;" new="f_g"/>
   <field old="title Ljava/lang/String;" new="f_k"/>
  </class>
  <class old="org.jivesoftware.smack.packet.RosterPacket$ItemStatus" new="org.jivesoftware.smack.packet.RosterPacket$ItemStatus">
   <method old="fromString(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/RosterPacket$ItemStatus;" new="m_tc"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="SUBSCRIPTION_PENDING Lorg/jivesoftware/smack/packet/RosterPacket$ItemStatus;" new="SUBSCRIPTION_PENDING"/>
   <field old="UNSUBSCRIPTION_PENDING Lorg/jivesoftware/smack/packet/RosterPacket$ItemStatus;" new="UNSUBSCRIPTION_PENDING"/>
   <field old="value Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.TTL" new="org.xbill.DNS.c_s">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="check(J)V" new="m_cf"/>
   <method old="format(J)Ljava/lang/String;" new="m_Zf"/>
   <method old="parse(Ljava/lang/String;Z)J" new="m_xe"/>
   <method old="parseTTL(Ljava/lang/String;)J" new="m_QF"/>
   <field old="MAX_VALUE J" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.widget.RingtonePreference" new="com.xabber.android.ui.widget.RingtonePreference">
   <method old="getUri()Landroid/net/Uri;" new="m_rk"/>
   <method old="onRestoreRingtone()Landroid/net/Uri;" new="onRestoreRingtone"/>
   <method old="onSaveRingtone(Landroid/net/Uri;)V" new="onSaveRingtone"/>
   <method old="setUri(Landroid/net/Uri;)V" new="m_Tca"/>
   <field old="uri Landroid/net/Uri;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.KEYRecord$Flags" new="org.xbill.DNS.c_sa">
   <method old="value(Ljava/lang/String;)I" new="m_le"/>
   <field old="EXTEND I" new="f_f"/>
   <field old="FLAG10 I" new="f_C"/>
   <field old="FLAG11 I" new="f_J"/>
   <field old="FLAG2 I" new="f_D"/>
   <field old="FLAG4 I" new="f_o"/>
   <field old="FLAG5 I" new="f_b"/>
   <field old="FLAG8 I" new="f_F"/>
   <field old="FLAG9 I" new="f_k"/>
   <field old="HOST I" new="f_I"/>
   <field old="NOAUTH I" new="f_E"/>
   <field old="NOCONF I" new="f_S"/>
   <field old="NOKEY I" new="f_A"/>
   <field old="NTYP3 I" new="f_g"/>
   <field old="OWNER_MASK I" new="f_K"/>
   <field old="SIG0 I" new="f_d"/>
   <field old="SIG1 I" new="f_Y"/>
   <field old="SIG10 I" new="f_j"/>
   <field old="SIG11 I" new="f_l"/>
   <field old="SIG12 I" new="f_H"/>
   <field old="SIG13 I" new="f_Z"/>
   <field old="SIG14 I" new="f_y"/>
   <field old="SIG15 I" new="f_P"/>
   <field old="SIG2 I" new="f_h"/>
   <field old="SIG3 I" new="f_L"/>
   <field old="SIG4 I" new="f_e"/>
   <field old="SIG5 I" new="f_B"/>
   <field old="SIG6 I" new="f_u"/>
   <field old="SIG7 I" new="f_M"/>
   <field old="SIG8 I" new="f_i"/>
   <field old="SIG9 I" new="f_p"/>
   <field old="USER I" new="f_m"/>
   <field old="USE_MASK I" new="f_c"/>
   <field old="ZONE I" new="f_a"/>
   <field old="flags Lorg/xbill/DNS/Mnemonic;" new="f_G"/>
  </class>
  <class old="com.xabber.android.ui.adapter.ClientContactInflater" new="com.xabber.android.ui.adapter.c_o">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createView(ILandroid/view/ViewGroup;)Landroid/view/View;" new="m_eCa"/>
   <method old="createViewHolder(ILandroid/view/View;)Lcom/xabber/android/ui/adapter/BaseContactInflater$ViewHolder;" new="m_BCa"/>
   <method old="createViewHolder(ILandroid/view/View;)Lcom/xabber/android/ui/adapter/ClientContactInflater$ViewHolder;" new="m_BCa"/>
   <method old="createViewHolder(ILandroid/view/View;)Lcom/xabber/android/ui/adapter/StatusContactInflater$ViewHolder;" new="m_BCa"/>
   <method old="getStatusText(Lcom/xabber/android/data/roster/AbstractContact;)Ljava/lang/String;" new="m_Wca"/>
   <method old="getView(Landroid/view/View;Lcom/xabber/android/data/roster/AbstractContact;)V" new="m_kda"/>
   <method old="setAdapter(Landroid/widget/BaseAdapter;)V" new="m_fCa"/>
   <field old="activity Landroid/app/Activity;" new="f_B"/>
   <field old="adapter Landroid/widget/BaseAdapter;" new="f_e"/>
   <field old="avatarInflaterHelper Lcom/xabber/android/ui/helper/AbstractAvatarInflaterHelper;" new="f_b"/>
   <field old="layoutInflater Landroid/view/LayoutInflater;" new="f_m"/>
   <field old="shadowDrawable Landroid/graphics/drawable/BitmapDrawable;" new="f_d"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.Version" new="org.jivesoftware.smackx.packet.c_B">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getOs()Ljava/lang/String;" new="m_sl"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getVersion()Ljava/lang/String;" new="m_Sd"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setName(Ljava/lang/String;)V" new="m_Xl"/>
   <method old="setOs(Ljava/lang/String;)V" new="m_jk"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="setVersion(Ljava/lang/String;)V" new="m_TL"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="name Ljava/lang/String;" new="f_m"/>
   <field old="os Ljava/lang/String;" new="f_b"/>
   <field old="version Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="com.xabber.android.ui.dialog.OnAcceptListener" new="wy.c_K">
   <method old="onAccept(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_Lc"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.params.DHParameters" new="wy.c_UA">
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getDefaultMParam(I)I" new="m_DY"/>
   <method old="getG()Ljava/math/BigInteger;" new="m_Yy"/>
   <method old="getJ()Ljava/math/BigInteger;" new="m_WY"/>
   <method old="getL()I" new="m_mX"/>
   <method old="getM()I" new="m_EY"/>
   <method old="getP()Ljava/math/BigInteger;" new="m_Xz"/>
   <method old="getQ()Ljava/math/BigInteger;" new="m_Jz"/>
   <method old="getValidationParameters()Lnet/java/otr4j/bouncycastle/crypto/params/DHValidationParameters;" new="m_QX"/>
   <method old="hashCode()I" new="hashCode"/>
   <field old="DEFAULT_MINIMUM_LENGTH I" new="f_B"/>
   <field old="g Ljava/math/BigInteger;" new="f_b"/>
   <field old="j Ljava/math/BigInteger;" new="f_k"/>
   <field old="l I" new="f_j"/>
   <field old="m I" new="f_m"/>
   <field old="p Ljava/math/BigInteger;" new="f_l"/>
   <field old="q Ljava/math/BigInteger;" new="f_d"/>
   <field old="validation Lnet/java/otr4j/bouncycastle/crypto/params/DHValidationParameters;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.Application$1" new="com.xabber.android.data.c_o">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/Application;" new="f_m"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.params.ParametersWithIV" new="wy.c_Tb">
   <method old="getIV()[B" new="m_DZ"/>
   <method old="getParameters()Lnet/java/otr4j/bouncycastle/crypto/CipherParameters;" new="m_Paa"/>
   <field old="iv [B" new="f_m"/>
   <field old="parameters Lnet/java/otr4j/bouncycastle/crypto/CipherParameters;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.Application$2" new="com.xabber.android.data.c_s">
   <method old="newThread(Ljava/lang/Runnable;)Ljava/lang/Thread;" new="newThread"/>
   <field old="this$0 Lcom/xabber/android/data/Application;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.Application$3" new="com.xabber.android.data.c_q">
   <method old="call()Ljava/lang/Object;" new="call"/>
   <method old="call()Ljava/lang/Void;" new="m_Xn"/>
   <field old="this$0 Lcom/xabber/android/data/Application;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.notification.NotificationTable$Fields" new="wy.c_iB">
   <field old="ACCOUNT Ljava/lang/String;" new="f_m"/>
   <field old="COUNT Ljava/lang/String;" new="f_d"/>
   <field old="TEXT Ljava/lang/String;" new="f_b"/>
   <field old="TIMESTAMP Ljava/lang/String;" new="f_B"/>
   <field old="USER Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.Application$4" new="com.xabber.android.data.c_h">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/Application;" new="f_m"/>
  </class>
  <class old="net.java.otr4j.OtrEngineImpl$1" new="net.java.otr4j.c_K">
   <method old="sessionStatusChanged(Lnet/java/otr4j/session/SessionID;)V" new="m_xb"/>
   <field old="this$0 Lnet/java/otr4j/OtrEngineImpl;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.Application$5" new="com.xabber.android.data.c_F">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/Application;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.message.RegularChat" new="com.xabber.android.data.message.RegularChat">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="accept(Ljava/lang/String;Ljava/lang/String;)Z" new="m_Uda"/>
   <method old="access$000(Lcom/xabber/android/data/message/AbstractChat;)V" new="m_rfa"/>
   <method old="access$100(Lcom/xabber/android/data/message/AbstractChat;Lcom/xabber/android/data/message/MessageItem;)V" new="m_WDa"/>
   <method old="access$200(Lcom/xabber/android/data/message/AbstractChat;Ljava/util/Collection;)V" new="m_vfa"/>
   <method old="access$300(Lcom/xabber/android/data/message/AbstractChat;)V" new="m_xda"/>
   <method old="access$400(Lcom/xabber/android/data/message/AbstractChat;)Ljava/lang/String;" new="m_RFa"/>
   <method old="access$500(Lcom/xabber/android/data/message/AbstractChat;)Ljava/lang/String;" new="m_LFa"/>
   <method old="canSendMessage()Z" new="m_nea"/>
   <method old="closeChat()V" new="m_fea"/>
   <method old="compareTo(Lcom/xabber/android/data/entity/BaseEntity;)I" new="m_bCa"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="createMessagePacket(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/Message;" new="m_kfa"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="equals(Ljava/lang/String;Ljava/lang/String;)Z" new="m_Bba"/>
   <method old="getAccount()Ljava/lang/String;" new="m_FC"/>
   <method old="getFirstNotification()Z" new="m_dDa"/>
   <method old="getLastText()Ljava/lang/String;" new="m_mfa"/>
   <method old="getLastTime()Ljava/util/Date;" new="m_Ega"/>
   <method old="getMessages()Ljava/util/Collection;" new="m_oP"/>
   <method old="getRequiredMessageCount()I" new="m_XFa"/>
   <method old="getResource()Ljava/lang/String;" new="m_Au"/>
   <method old="getThreadId()Ljava/lang/String;" new="m_Aea"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/Message$Type;" new="m_b"/>
   <method old="getUser()Ljava/lang/String;" new="m_TA"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="isActive()Z" new="m_iFa"/>
   <method old="isStatusTrackingEnabled()Z" new="m_Ufa"/>
   <method old="newAction(Ljava/lang/String;Ljava/lang/String;Lcom/xabber/android/data/message/ChatAction;)V" new="m_BEa"/>
   <method old="newMessage(Ljava/lang/String;)Lcom/xabber/android/data/message/MessageItem;" new="m_Xda"/>
   <method old="newMessage(Ljava/lang/String;Ljava/lang/String;Lcom/xabber/android/data/message/ChatAction;Ljava/util/Date;ZZZZZ)Lcom/xabber/android/data/message/MessageItem;" new="m_Afa"/>
   <method old="notifyAboutMessage()Z" new="m_Nda"/>
   <method old="onComplete()V" new="m_GDa"/>
   <method old="onDisconnect()V" new="m_zDa"/>
   <method old="onMessageDownloaded(Ljava/lang/String;Ljava/util/Collection;Z)I" new="m_wfa"/>
   <method old="onPacket(Ljava/lang/String;Lorg/jivesoftware/smack/packet/Packet;)Z" new="m_cDa"/>
   <method old="openChat()V" new="m_kFa"/>
   <method old="prepareText(Ljava/lang/String;)Ljava/lang/String;" new="m_mEa"/>
   <method old="removeAllMessages()V" new="m_zEa"/>
   <method old="removeMessage(Lcom/xabber/android/data/message/MessageItem;)V" new="m_gFa"/>
   <method old="requestToLoadLocalHistory()V" new="m_UFa"/>
   <method old="sendMessages()V" new="m_aEa"/>
   <method old="sendQueue(Lcom/xabber/android/data/message/MessageItem;)V" new="m_lea"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="updateThreadId(Ljava/lang/String;)V" new="m_vEa"/>
   <field old="account Ljava/lang/String;" new="f_m"/>
   <field old="active Z" new="f_K"/>
   <field old="firstNotification Z" new="f_m"/>
   <field old="historyIds Ljava/util/Collection;" new="f_k"/>
   <field old="lastText Ljava/lang/String;" new="f_B"/>
   <field old="lastTime Ljava/util/Date;" new="f_f"/>
   <field old="messages Ljava/util/List;" new="f_I"/>
   <field old="resource Ljava/lang/String;" new="f_b"/>
   <field old="sendQuery Ljava/util/Collection;" new="f_e"/>
   <field old="trackStatus Z" new="f_b"/>
   <field old="user Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.Application$6" new="com.xabber.android.data.c_C">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/Application;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.packet.Bind" new="org.jivesoftware.smack.packet.c_i">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getJid()Ljava/lang/String;" new="m_tL"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getResource()Ljava/lang/String;" new="m_Au"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setJid(Ljava/lang/String;)V" new="m_AJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setResource(Ljava/lang/String;)V" new="m_pT"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="jid Ljava/lang/String;" new="f_e"/>
   <field old="resource Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.Application$7" new="com.xabber.android.data.c_L">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/Application;" new="f_m"/>
   <field old="val$resourceId I" new="f_e"/>
  </class>
  <class old="org.xbill.DNS.Credibility" new="org.xbill.DNS.c_yC">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <field old="ADDITIONAL I" new="f_b"/>
   <field old="ANY I" new="f_B"/>
   <field old="AUTH_ANSWER I" new="f_f"/>
   <field old="AUTH_AUTHORITY I" new="f_j"/>
   <field old="GLUE I" new="f_e"/>
   <field old="HINT I" new="f_m"/>
   <field old="NONAUTH_ANSWER I" new="f_I"/>
   <field old="NONAUTH_AUTHORITY I" new="f_d"/>
   <field old="NORMAL I" new="f_k"/>
   <field old="ZONE I" new="f_l"/>
  </class>
  <class old="org.xbill.DNS.SSHFPRecord" new="org.xbill.DNS.c_y">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getAlgorithm()I" new="m_Ne"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getDigestType()I" new="m_TF"/>
   <method old="getFingerPrint()[B" new="m_SF"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="alg I" new="f_d"/>
   <field old="dclass I" new="f_m"/>
   <field old="digestType I" new="f_e"/>
   <field old="fingerprint [B" new="f_B"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="serialVersionUID J" new="f_b"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.Application$8" new="com.xabber.android.data.c_l">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/Application;" new="f_e"/>
   <field old="val$runnable Ljava/lang/Runnable;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.filetransfer.FileTransfer$Error" new="org.jivesoftware.smackx.filetransfer.FileTransfer$Error">
   <method old="getMessage()Ljava/lang/String;" new="m_Wm"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="valueOf(Ljava/lang/String;)Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Error;" new="valueOf"/>
   <method old="values()[Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Error;" new="values"/>
   <field old="$VALUES [Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Error;" new="f_B"/>
   <field old="bad_file Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Error;" new="f_k"/>
   <field old="connection Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Error;" new="f_d"/>
   <field old="msg Ljava/lang/String;" new="f_j"/>
   <field old="no_response Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Error;" new="f_m"/>
   <field old="none Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Error;" new="f_b"/>
   <field old="not_acceptable Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Error;" new="f_l"/>
   <field old="stream Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Error;" new="f_e"/>
  </class>
  <class old="com.xabber.android.ui.ContactList" new="com.xabber.android.ui.ContactList">
   <method old="createIntent(Landroid/content/Context;)Landroid/content/Intent;" new="m_yBa"/>
   <method old="createPersistentIntent(Landroid/content/Context;)Landroid/content/Intent;" new="m_mba"/>
   <method old="createRoomInviteIntent(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;" new="m_tCa"/>
   <method old="getRoomInviteAccount(Landroid/content/Intent;)Ljava/lang/String;" new="m_xBa"/>
   <method old="getRoomInviteUser(Landroid/content/Intent;)Ljava/lang/String;" new="m_Oba"/>
   <method old="onAccept(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_Lc"/>
   <method old="onAccountsChanged(Ljava/util/Collection;)V" new="m_vB"/>
   <method old="onActivityResult(IILandroid/content/Intent;)V" new="onActivityResult"/>
   <method old="onCancel(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_Vb"/>
   <method old="onChatChanged(Ljava/lang/String;Ljava/lang/String;Z)V" new="m_Id"/>
   <method old="onClick(Landroid/view/View;)V" new="onClick"/>
   <method old="onContactsChanged(Ljava/util/Collection;)V" new="m_bd"/>
   <method old="onContextItemSelected(Landroid/view/MenuItem;)Z" new="onContextItemSelected"/>
   <method old="onCreate(Landroid/os/Bundle;)V" new="onCreate"/>
   <method old="onCreateContextMenu(Landroid/view/ContextMenu;Landroid/view/View;Landroid/view/ContextMenu$ContextMenuInfo;)V" new="onCreateContextMenu"/>
   <method old="onCreateDialog(I)Landroid/app/Dialog;" new="onCreateDialog"/>
   <method old="onCreateOptionsMenu(Landroid/view/Menu;)Z" new="onCreateOptionsMenu"/>
   <method old="onDecline(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_ad"/>
   <method old="onDestroy()V" new="onDestroy"/>
   <method old="onItemClick(Landroid/widget/AdapterView;Landroid/view/View;IJ)V" new="onItemClick"/>
   <method old="onKeyDown(ILandroid/view/KeyEvent;)Z" new="onKeyDown"/>
   <method old="onLongClick(Landroid/view/View;)Z" new="onLongClick"/>
   <method old="onNewIntent(Landroid/content/Intent;)V" new="onNewIntent"/>
   <method old="onOptionsItemSelected(Landroid/view/MenuItem;)Z" new="onOptionsItemSelected"/>
   <method old="onPause()V" new="onPause"/>
   <method old="onResume()V" new="onResume"/>
   <method old="onSaveInstanceState(Landroid/os/Bundle;)V" new="onSaveInstanceState"/>
   <method old="openChat(Lcom/xabber/android/data/entity/BaseEntity;Ljava/lang/String;)V" new="m_iba"/>
   <method old="openChat(Ljava/lang/String;Ljava/lang/String;)V" new="m_Sca"/>
   <method old="rebuildAccountToggler()V" new="m_Kba"/>
   <method old="scrollUp()V" new="m_Fba"/>
   <method old="search()V" new="m_Dda"/>
   <method old="startActivity(Landroid/content/Intent;)V" new="startActivity"/>
   <method old="startActivityForResult(Landroid/content/Intent;I)V" new="startActivityForResult"/>
   <method old="stopMovement()V" new="m_KAa"/>
   <method old="unregisterListeners()V" new="m_Taa"/>
   <method old="updateStatusBar()V" new="m_PCa"/>
   <field old="ACTION_ROOM_INVITE Ljava/lang/String;" new="f_Aa"/>
   <field old="CLOSE_ACTIVITY_AFTER_DELAY J" new="f_H"/>
   <field old="CONTEXT_MENU_ACCEPT_SUBSCRIPTION_ID I" new="f_I"/>
   <field old="CONTEXT_MENU_ACCOUNT_ADD_CONTACT_ID I" new="f_A"/>
   <field old="CONTEXT_MENU_ACCOUNT_EDITOR_ID I" new="f_S"/>
   <field old="CONTEXT_MENU_ACCOUNT_RECONNECT_ID I" new="f_O"/>
   <field old="CONTEXT_MENU_ACCOUNT_STATUS_ID I" new="f_Ha"/>
   <field old="CONTEXT_MENU_ACCOUNT_VCARD_ID I" new="f_C"/>
   <field old="CONTEXT_MENU_CLOSE_CHAT_ID I" new="f_X"/>
   <field old="CONTEXT_MENU_DELETE_CONTACT_ID I" new="f_W"/>
   <field old="CONTEXT_MENU_DISCARD_SUBSCRIPTION_ID I" new="f_b"/>
   <field old="CONTEXT_MENU_EDIT_CONTACT_ID I" new="f_l"/>
   <field old="CONTEXT_MENU_EDIT_ROOM_ID I" new="f_P"/>
   <field old="CONTEXT_MENU_GROUP_DELETE_ID I" new="f_d"/>
   <field old="CONTEXT_MENU_GROUP_RENAME_ID I" new="f_Y"/>
   <field old="CONTEXT_MENU_JOIN_ROOM_ID I" new="f_t"/>
   <field old="CONTEXT_MENU_LEAVE_ROOM_ID I" new="f_w"/>
   <field old="CONTEXT_MENU_REQUEST_SUBSCRIPTION_ID I" new="f_M"/>
   <field old="CONTEXT_MENU_SHOW_OFFLINE_ALWAYS_ID I" new="f_B"/>
   <field old="CONTEXT_MENU_SHOW_OFFLINE_GROUP_ID I" new="f_e"/>
   <field old="CONTEXT_MENU_SHOW_OFFLINE_NEVER_ID I" new="f_f"/>
   <field old="CONTEXT_MENU_SHOW_OFFLINE_NORMAL_ID I" new="f_p"/>
   <field old="CONTEXT_MENU_VIEW_CHAT_ID I" new="f_N"/>
   <field old="CONTEXT_MENU_VIEW_CONTACT_ID I" new="f_z"/>
   <field old="DIALOG_CLOSE_APPLICATION_ID I" new="f_E"/>
   <field old="DIALOG_CONTACT_INTEGRATION_ID I" new="f_a"/>
   <field old="DIALOG_DELETE_CONTACT_ID I" new="f_Q"/>
   <field old="DIALOG_DELETE_GROUP_ID I" new="f_c"/>
   <field old="DIALOG_OPEN_WITH_ACCOUNT_ID I" new="f_m"/>
   <field old="DIALOG_RENAME_GROUP_ID I" new="f_V"/>
   <field old="DIALOG_START_AT_BOOT_ID I" new="f_F"/>
   <field old="OPTION_MENU_ADD_CONTACT_ID I" new="f_x"/>
   <field old="OPTION_MENU_CHAT_LIST_ID I" new="f_i"/>
   <field old="OPTION_MENU_CLOSE_CHATS_ID I" new="f_J"/>
   <field old="OPTION_MENU_EXIT_ID I" new="f_k"/>
   <field old="OPTION_MENU_JOIN_ROOM_ID I" new="f_T"/>
   <field old="OPTION_MENU_PREFERENCE_EDITOR_ID I" new="f_n"/>
   <field old="OPTION_MENU_SEARCH_ID I" new="f_Z"/>
   <field old="OPTION_MENU_STATUS_EDITOR_ID I" new="f_G"/>
   <field old="SAVED_ACTION Ljava/lang/String;" new="f_g"/>
   <field old="SAVED_ACTION_WITH_ACCOUNT Ljava/lang/String;" new="f_q"/>
   <field old="SAVED_ACTION_WITH_GROUP Ljava/lang/String;" new="f_Fa"/>
   <field old="SAVED_ACTION_WITH_USER Ljava/lang/String;" new="f_u"/>
   <field old="SAVED_OPEN_DIALOG_TEXT Ljava/lang/String;" new="f_ja"/>
   <field old="SAVED_OPEN_DIALOG_USER Ljava/lang/String;" new="f_L"/>
   <field old="SAVED_SEND_TEXT Ljava/lang/String;" new="f_v"/>
   <field old="accountToggleAdapter Lcom/xabber/android/ui/adapter/AccountToggleAdapter;" new="f_r"/>
   <field old="action Ljava/lang/String;" new="f_o"/>
   <field old="actionWithAccount Ljava/lang/String;" new="f_h"/>
   <field old="actionWithGroup Ljava/lang/String;" new="f_R"/>
   <field old="actionWithUser Ljava/lang/String;" new="f_D"/>
   <field old="contactListAdapter Lcom/xabber/android/ui/adapter/ContactListAdapter;" new="f_K"/>
   <field old="openDialogText Ljava/lang/String;" new="f_s"/>
   <field old="openDialogUser Ljava/lang/String;" new="f_j"/>
   <field old="sendText Ljava/lang/String;" new="f_U"/>
   <field old="titleView Landroid/view/View;" new="f_y"/>
  </class>
  <class old="com.xabber.android.data.account.StatusMode" new="com.xabber.android.data.account.StatusMode">
   <method old="createStatusMode(Lorg/jivesoftware/smack/packet/Presence;)Lcom/xabber/android/data/account/StatusMode;" new="m_GJa"/>
   <method old="getMode()Lorg/jivesoftware/smack/packet/Presence$Mode;" new="m_de"/>
   <method old="getStatusLevel()I" new="m_tja"/>
   <method old="getStringID()I" new="m_QKa"/>
   <method old="isOnline()Z" new="m_fKa"/>
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/android/data/account/StatusMode;" new="valueOf"/>
   <method old="values()[Lcom/xabber/android/data/account/StatusMode;" new="values"/>
   <field old="$VALUES [Lcom/xabber/android/data/account/StatusMode;" new="f_d"/>
   <field old="available Lcom/xabber/android/data/account/StatusMode;" new="f_e"/>
   <field old="away Lcom/xabber/android/data/account/StatusMode;" new="f_m"/>
   <field old="chat Lcom/xabber/android/data/account/StatusMode;" new="f_l"/>
   <field old="connection Lcom/xabber/android/data/account/StatusMode;" new="f_b"/>
   <field old="dnd Lcom/xabber/android/data/account/StatusMode;" new="f_I"/>
   <field old="invisible Lcom/xabber/android/data/account/StatusMode;" new="f_j"/>
   <field old="unavailable Lcom/xabber/android/data/account/StatusMode;" new="f_k"/>
   <field old="unsubscribed Lcom/xabber/android/data/account/StatusMode;" new="f_f"/>
   <field old="xa Lcom/xabber/android/data/account/StatusMode;" new="f_B"/>
  </class>
  <class old="com.xabber.android.ui.StatusEditor" new="com.xabber.android.ui.StatusEditor">
   <method old="createIntent(Landroid/content/Context;)Landroid/content/Intent;" new="m_yBa"/>
   <method old="createIntent(Landroid/content/Context;Ljava/lang/String;)Landroid/content/Intent;" new="m_bca"/>
   <method old="getAccount(Landroid/content/Intent;)Ljava/lang/String;" new="m_lCa"/>
   <method old="onActivityResult(IILandroid/content/Intent;)V" new="onActivityResult"/>
   <method old="onClick(Landroid/view/View;)V" new="onClick"/>
   <method old="onContextItemSelected(Landroid/view/MenuItem;)Z" new="onContextItemSelected"/>
   <method old="onCreate(Landroid/os/Bundle;)V" new="onCreate"/>
   <method old="onCreateContextMenu(Landroid/view/ContextMenu;Landroid/view/View;Landroid/view/ContextMenu$ContextMenuInfo;)V" new="onCreateContextMenu"/>
   <method old="onCreateOptionsMenu(Landroid/view/Menu;)Z" new="onCreateOptionsMenu"/>
   <method old="onDestroy()V" new="onDestroy"/>
   <method old="onItemClick(Landroid/widget/AdapterView;Landroid/view/View;IJ)V" new="onItemClick"/>
   <method old="onNewIntent(Landroid/content/Intent;)V" new="onNewIntent"/>
   <method old="onOptionsItemSelected(Landroid/view/MenuItem;)Z" new="onOptionsItemSelected"/>
   <method old="onPause()V" new="onPause"/>
   <method old="onResume()V" new="onResume"/>
   <method old="onSaveInstanceState(Landroid/os/Bundle;)V" new="onSaveInstanceState"/>
   <method old="setStatus(Lcom/xabber/android/data/account/StatusMode;Ljava/lang/String;)V" new="m_jca"/>
   <method old="showStatus(Lcom/xabber/android/data/account/StatusMode;Ljava/lang/String;)V" new="m_cBa"/>
   <method old="startActivity(Landroid/content/Intent;)V" new="startActivity"/>
   <method old="startActivityForResult(Landroid/content/Intent;I)V" new="startActivityForResult"/>
   <field old="CONTEXT_MENU_EDIT_STATUS_ID I" new="f_m"/>
   <field old="CONTEXT_MENU_REMOVE_STATUS_ID I" new="f_k"/>
   <field old="CONTEXT_MENU_SELECT_STATUS_ID I" new="f_B"/>
   <field old="OPTION_MENU_CLEAR_STATUSES_ID I" new="f_e"/>
   <field old="SAVED_MODE Ljava/lang/String;" new="f_b"/>
   <field old="SAVED_TEXT Ljava/lang/String;" new="f_f"/>
   <field old="account Ljava/lang/String;" new="f_d"/>
   <field old="actionWithItem Lcom/xabber/android/data/account/SavedStatus;" new="f_I"/>
   <field old="statusModeView Landroid/widget/Spinner;" new="f_j"/>
   <field old="statusTextView Landroid/widget/EditText;" new="f_l"/>
  </class>
  <class old="org.xbill.DNS.ISDNRecord" new="org.xbill.DNS.c_Oa">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getAddress()Ljava/lang/String;" new="m_kf"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getSubAddress()Ljava/lang/String;" new="m_Ah"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="address [B" new="f_m"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="serialVersionUID J" new="f_b"/>
   <field old="subAddress [B" new="f_e"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.extension.otr.SMRequest" new="com.xabber.android.data.extension.otr.c_E">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="compareTo(Lcom/xabber/android/data/entity/BaseEntity;)I" new="m_bCa"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="equals(Ljava/lang/String;Ljava/lang/String;)Z" new="m_Bba"/>
   <method old="getAccount()Ljava/lang/String;" new="m_FC"/>
   <method old="getIntent()Landroid/content/Intent;" new="m_db"/>
   <method old="getText()Ljava/lang/String;" new="m_ZA"/>
   <method old="getTitle()Ljava/lang/String;" new="m_zb"/>
   <method old="getUser()Ljava/lang/String;" new="m_TA"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="account Ljava/lang/String;" new="f_m"/>
   <field old="question Ljava/lang/String;" new="f_b"/>
   <field old="user Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.login.LoginContext$1" new="wy.c_ra">
   <method old="run()Ljava/lang/Object;" new="run"/>
   <method old="run()Ljava/lang/Void;" new="m_sA"/>
   <field old="this$0 Lorg/apache/harmony/javax/security/auth/login/LoginContext;" new="f_m"/>
   <field old="val$cbHandler Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;" new="f_e"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.login.LoginContext$2" new="wy.c_Ya">
   <method old="run()Ljava/lang/Object;" new="run"/>
   <method old="run()Ljava/lang/Void;" new="m_sA"/>
   <field old="this$0 Lorg/apache/harmony/javax/security/auth/login/LoginContext;" new="f_m"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.login.LoginContext$3" new="wy.c_ya">
   <method old="run()Ljava/lang/Object;" new="run"/>
   <method old="run()Ljava/lang/Void;" new="m_sA"/>
   <field old="this$0 Lorg/apache/harmony/javax/security/auth/login/LoginContext;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.proxy.ProxyException" new="org.jivesoftware.smack.proxy.c_B">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager" new="org.jivesoftware.smackx.bytestreams.ibb.c_g">
   <method old="access$000(Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamManager;)V" new="m_rP"/>
   <method old="access$100()Ljava/util/Map;" new="m_SQ"/>
   <method old="addIncomingBytestreamListener(Lorg/jivesoftware/smackx/bytestreams/BytestreamListener;)V" new="m_wa"/>
   <method old="addIncomingBytestreamListener(Lorg/jivesoftware/smackx/bytestreams/BytestreamListener;Ljava/lang/String;)V" new="m_Qa"/>
   <method old="disableService()V" new="m_Fn"/>
   <method old="establishSession(Ljava/lang/String;)Lorg/jivesoftware/smackx/bytestreams/BytestreamSession;" new="m_na"/>
   <method old="establishSession(Ljava/lang/String;)Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamSession;" new="m_na"/>
   <method old="establishSession(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smackx/bytestreams/BytestreamSession;" new="m_qa"/>
   <method old="establishSession(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamSession;" new="m_qa"/>
   <method old="getAllRequestListeners()Ljava/util/List;" new="m_Om"/>
   <method old="getByteStreamManager(Lorg/jivesoftware/smack/Connection;)Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamManager;" new="m_Lp"/>
   <method old="getConnection()Lorg/jivesoftware/smack/Connection;" new="m_eo"/>
   <method old="getDefaultBlockSize()I" new="m_YQ"/>
   <method old="getIgnoredBytestreamRequests()Ljava/util/List;" new="m_FN"/>
   <method old="getMaximumBlockSize()I" new="m_Ip"/>
   <method old="getNextSessionID()Ljava/lang/String;" new="m_Pm"/>
   <method old="getSessions()Ljava/util/Map;" new="m_fQ"/>
   <method old="getStanza()Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamManager$StanzaType;" new="m_Im"/>
   <method old="getUserListener(Ljava/lang/String;)Lorg/jivesoftware/smackx/bytestreams/BytestreamListener;" new="m_qN"/>
   <method old="ignoreBytestreamRequestOnce(Ljava/lang/String;)V" new="m_Ao"/>
   <method old="removeIncomingBytestreamListener(Ljava/lang/String;)V" new="m_ua"/>
   <method old="removeIncomingBytestreamListener(Lorg/jivesoftware/smackx/bytestreams/BytestreamListener;)V" new="m_Sa"/>
   <method old="replyItemNotFoundPacket(Lorg/jivesoftware/smack/packet/IQ;)V" new="m_Rp"/>
   <method old="replyRejectPacket(Lorg/jivesoftware/smack/packet/IQ;)V" new="m_cN"/>
   <method old="replyResourceConstraintPacket(Lorg/jivesoftware/smack/packet/IQ;)V" new="m_jP"/>
   <method old="setDefaultBlockSize(I)V" new="m_mP"/>
   <method old="setMaximumBlockSize(I)V" new="m_uq"/>
   <method old="setStanza(Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamManager$StanzaType;)V" new="m_aQ"/>
   <field old="MAXIMUM_BLOCK_SIZE I" new="f_j"/>
   <field old="NAMESPACE Ljava/lang/String;" new="f_m"/>
   <field old="SESSION_ID_PREFIX Ljava/lang/String;" new="f_g"/>
   <field old="allRequestListeners Ljava/util/List;" new="f_D"/>
   <field old="closeListener Lorg/jivesoftware/smackx/bytestreams/ibb/CloseListener;" new="f_J"/>
   <field old="connection Lorg/jivesoftware/smack/Connection;" new="f_d"/>
   <field old="dataListener Lorg/jivesoftware/smackx/bytestreams/ibb/DataListener;" new="f_f"/>
   <field old="defaultBlockSize I" new="f_I"/>
   <field old="ignoredBytestreamRequests Ljava/util/List;" new="f_B"/>
   <field old="initiationListener Lorg/jivesoftware/smackx/bytestreams/ibb/InitiationListener;" new="f_e"/>
   <field old="managers Ljava/util/Map;" new="f_M"/>
   <field old="maximumBlockSize I" new="f_k"/>
   <field old="randomGenerator Ljava/util/Random;" new="f_l"/>
   <field old="sessions Ljava/util/Map;" new="f_b"/>
   <field old="stanza Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamManager$StanzaType;" new="f_K"/>
   <field old="userListeners Ljava/util/Map;" new="f_G"/>
  </class>
  <class old="com.xabber.android.data.roster.GroupManager$1" new="com.xabber.android.data.roster.c_h">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/roster/GroupManager;" new="f_m"/>
   <field old="val$groupConfigurations Lcom/xabber/android/data/entity/NestedMap;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.roster.GroupManager$2" new="com.xabber.android.data.roster.c_F">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/roster/GroupManager;" new="f_b"/>
   <field old="val$account Ljava/lang/String;" new="f_m"/>
   <field old="val$expanded Z" new="f_B"/>
   <field old="val$group Ljava/lang/String;" new="f_d"/>
   <field old="val$showOfflineMode Lcom/xabber/android/data/roster/ShowOfflineMode;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smack.packet.IQ" new="org.jivesoftware.smack.packet.c_A">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getStart()Ljava/util/Date;" new="m_vC"/>
   <method old="getStartString()Ljava/lang/String;" new="m_lC"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getVersion()Ljava/lang/Integer;" new="m_Sd"/>
   <method old="getWith()Ljava/lang/String;" new="m_ib"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="serializeContent(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_Fb"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="type Lorg/jivesoftware/smack/packet/IQ$Type;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.connection.ConnectionSettings" new="com.xabber.android.data.connection.c_N">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getHost()Ljava/lang/String;" new="m_vD"/>
   <method old="getPassword()Ljava/lang/String;" new="m_rj"/>
   <method old="getPort()I" new="m_Jg"/>
   <method old="getProtocol()Lcom/xabber/android/data/account/AccountProtocol;" new="m_jF"/>
   <method old="getProxyHost()Ljava/lang/String;" new="m_HJa"/>
   <method old="getProxyPassword()Ljava/lang/String;" new="m_tt"/>
   <method old="getProxyPort()I" new="m_Dt"/>
   <method old="getProxyType()Lcom/xabber/android/data/connection/ProxyType;" new="m_kt"/>
   <method old="getProxyUser()Ljava/lang/String;" new="m_pja"/>
   <method old="getResource()Ljava/lang/String;" new="m_Au"/>
   <method old="getServerName()Ljava/lang/String;" new="m_yJa"/>
   <method old="getTlsMode()Lcom/xabber/android/data/connection/TLSMode;" new="m_qJa"/>
   <method old="getUserName()Ljava/lang/String;" new="m_yla"/>
   <method old="isCustom()Z" new="m_ela"/>
   <method old="isSaslEnabled()Z" new="m_SJa"/>
   <method old="setPassword(Ljava/lang/String;)V" new="m_RK"/>
   <method old="update(ZLjava/lang/String;ILjava/lang/String;ZLcom/xabber/android/data/connection/TLSMode;ZLcom/xabber/android/data/connection/ProxyType;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V" new="m_lka"/>
   <method old="useCompression()Z" new="m_AT"/>
   <field old="compression Z" new="f_B"/>
   <field old="custom Z" new="f_e"/>
   <field old="host Ljava/lang/String;" new="f_g"/>
   <field old="password Ljava/lang/String;" new="f_G"/>
   <field old="port I" new="f_K"/>
   <field old="protocol Lcom/xabber/android/data/account/AccountProtocol;" new="f_j"/>
   <field old="proxyHost Ljava/lang/String;" new="f_M"/>
   <field old="proxyPassword Ljava/lang/String;" new="f_b"/>
   <field old="proxyPort I" new="f_l"/>
   <field old="proxyType Lcom/xabber/android/data/connection/ProxyType;" new="f_m"/>
   <field old="proxyUser Ljava/lang/String;" new="f_f"/>
   <field old="resource Ljava/lang/String;" new="f_k"/>
   <field old="saslEnabled Z" new="f_J"/>
   <field old="serverName Ljava/lang/String;" new="f_I"/>
   <field old="tlsMode Lcom/xabber/android/data/connection/TLSMode;" new="f_d"/>
   <field old="userName Ljava/lang/String;" new="f_D"/>
  </class>
  <class old="org.jivesoftware.smackx.filetransfer.IncomingFileTransfer$1" new="org.jivesoftware.smackx.filetransfer.c_D">
   <method old="run()V" new="run"/>
   <field old="this$0 Lorg/jivesoftware/smackx/filetransfer/IncomingFileTransfer;" new="f_m"/>
   <field old="val$file Ljava/io/File;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.filetransfer.IncomingFileTransfer$2" new="org.jivesoftware.smackx.filetransfer.c_c">
   <method old="call()Ljava/io/InputStream;" new="m_Xn"/>
   <method old="call()Ljava/lang/Object;" new="call"/>
   <field old="this$0 Lorg/jivesoftware/smackx/filetransfer/IncomingFileTransfer;" new="f_m"/>
   <field old="val$streamNegotiator Lorg/jivesoftware/smackx/filetransfer/StreamNegotiator;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.filetransfer.Socks5TransferNegotiator$ByteStreamRequest" new="org.jivesoftware.smackx.filetransfer.c_B">
   <method old="accept()Lorg/jivesoftware/smackx/bytestreams/BytestreamSession;" new="m_Ja"/>
   <method old="accept()Lorg/jivesoftware/smackx/bytestreams/socks5/Socks5BytestreamSession;" new="m_Ja"/>
   <method old="getConnectFailureThreshold()I" new="m_aO"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getMinimumConnectTimeout()I" new="m_Vo"/>
   <method old="getSessionID()Ljava/lang/String;" new="m_Ba"/>
   <method old="getTotalConnectTimeout()I" new="m_QM"/>
   <method old="reject()V" new="m_ba"/>
   <method old="setConnectFailureThreshold(I)V" new="m_mM"/>
   <method old="setMinimumConnectTimeout(I)V" new="m_DN"/>
   <method old="setTotalConnectTimeout(I)V" new="m_sN"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.DataLengthException" new="net.java.otr4j.bouncycastle.crypto.c_G">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
  </class>
  <class old="com.xabber.android.data.notification.NotificationProvider" new="wy.c_i">
   <method old="canClearNotifications()Z" new="m_ab"/>
   <method old="clearNotifications()V" new="m_TC"/>
   <method old="getIcon()I" new="m_qb"/>
   <method old="getNotifications()Ljava/util/Collection;" new="m_Tc"/>
   <method old="getSound()Landroid/net/Uri;" new="m_Qc"/>
   <method old="getStreamType()I" new="m_Xc"/>
  </class>
  <class old="com.xabber.xmpp.archive.Session" new="com.xabber.xmpp.archive.c_j">
   <method old="getSave()Lcom/xabber/xmpp/archive/SaveMode;" new="m_Fca"/>
   <method old="getThread()Ljava/lang/String;" new="m_QR"/>
   <method old="getTimeout()Ljava/lang/Integer;" new="m_yF"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="setSave(Lcom/xabber/xmpp/archive/SaveMode;)V" new="m_hca"/>
   <method old="setThread(Ljava/lang/String;)V" new="m_Qs"/>
   <method old="setTimeout(Ljava/lang/Integer;)V" new="m_cAa"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_d"/>
   <field old="SAVE_ATTRIBUTE Ljava/lang/String;" new="f_e"/>
   <field old="THREAD_ATTRIBUTE Ljava/lang/String;" new="f_b"/>
   <field old="TIMEOUT_ATTRIBUTE Ljava/lang/String;" new="f_k"/>
   <field old="save Lcom/xabber/xmpp/archive/SaveMode;" new="f_m"/>
   <field old="thread Ljava/lang/String;" new="f_j"/>
   <field old="timeout Ljava/lang/Integer;" new="f_B"/>
  </class>
  <class old="com.xabber.android.ui.helper.ManagedPreferenceActivity" new="com.xabber.android.ui.helper.ManagedPreferenceActivity">
   <method old="onAccept(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_Lc"/>
   <method old="onAccountsChanged(Ljava/util/Collection;)V" new="m_vB"/>
   <method old="onActivityResult(IILandroid/content/Intent;)V" new="onActivityResult"/>
   <method old="onCancel(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_Vb"/>
   <method old="onContactsChanged(Ljava/util/Collection;)V" new="m_bd"/>
   <method old="onCreate(Landroid/os/Bundle;)V" new="onCreate"/>
   <method old="onDecline(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_ad"/>
   <method old="onDestroy()V" new="onDestroy"/>
   <method old="onNewIntent(Landroid/content/Intent;)V" new="onNewIntent"/>
   <method old="onPause()V" new="onPause"/>
   <method old="onResume()V" new="onResume"/>
   <method old="onVCardFailed(Ljava/lang/String;Ljava/lang/String;)V" new="m_Rd"/>
   <method old="onVCardReceived(Ljava/lang/String;Ljava/lang/String;Lcom/xabber/xmpp/vcard/VCard;)V" new="m_BB"/>
   <method old="startActivity(Landroid/content/Intent;)V" new="startActivity"/>
   <method old="startActivityForResult(Landroid/content/Intent;I)V" new="startActivityForResult"/>
  </class>
  <class old="org.jivesoftware.smack.XMPPConnection$AliveReader" new="org.jivesoftware.smack.c_c">
   <method old="close()V" new="close"/>
   <method old="mark(I)V" new="mark"/>
   <method old="markSupported()Z" new="markSupported"/>
   <method old="onRead()V" new="m_mt"/>
   <method old="read()I" new="read"/>
   <method old="read([C)I" new="read"/>
   <method old="read([CII)I" new="read"/>
   <method old="ready()Z" new="ready"/>
   <method old="reset()V" new="reset"/>
   <method old="skip(J)J" new="skip"/>
   <field old="this$0 Lorg/jivesoftware/smack/XMPPConnection;" new="f_m"/>
   <field old="wrappedReader Ljava/io/Reader;" new="f_e"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.callback.TextInputCallback" new="wy.c_oa">
   <method old="getDefaultText()Ljava/lang/String;" new="m_XU"/>
   <method old="getPrompt()Ljava/lang/String;" new="m_DW"/>
   <method old="getText()Ljava/lang/String;" new="m_ZA"/>
   <method old="setDefaultText(Ljava/lang/String;)V" new="m_WW"/>
   <method old="setPrompt(Ljava/lang/String;)V" new="m_mW"/>
   <method old="setText(Ljava/lang/String;)V" new="m_RW"/>
   <field old="defaultText Ljava/lang/String;" new="f_b"/>
   <field old="inputText Ljava/lang/String;" new="f_e"/>
   <field old="prompt Ljava/lang/String;" new="f_d"/>
   <field old="serialVersionUID J" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.extension.avatar.AccountAvatarSet" new="wy.c_Ad">
   <method old="getIndex(Ljava/lang/String;)I" new="m_Yia"/>
   <method old="getResourceId(Ljava/lang/String;)I" new="m_sHa"/>
   <method old="onLowMemory()V" new="m_Wb"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.BlockCipher" new="net.java.otr4j.bouncycastle.crypto.c_A">
   <method old="getAlgorithmName()Ljava/lang/String;" new="m_Bc"/>
   <method old="getBlockSize()I" new="m_bA"/>
   <method old="init(ZLnet/java/otr4j/bouncycastle/crypto/CipherParameters;)V" new="m_Hd"/>
   <method old="processBlock([BI[BI)I" new="m_UB"/>
   <method old="reset()V" new="m_ld"/>
  </class>
  <class old="com.xabber.android.data.connection.PendingCertificate" new="com.xabber.android.data.connection.c_k">
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="expiresOn()Ljava/lang/String;" new="m_Kka"/>
   <method old="getFingerprint()Ljava/lang/String;" new="m_mla"/>
   <method old="getIntent()Landroid/content/Intent;" new="m_db"/>
   <method old="getIssuerCommonName()Ljava/lang/String;" new="m_Jla"/>
   <method old="getIssuerOrganization()Ljava/lang/String;" new="m_oka"/>
   <method old="getIssuerOrganizationlUnit()Ljava/lang/String;" new="m_gJa"/>
   <method old="getReason()Lcom/xabber/android/data/connection/CertificateInvalidReason;" new="m_zj"/>
   <method old="getSerialNumber()Ljava/lang/String;" new="m_Dka"/>
   <method old="getServer()Ljava/lang/String;" new="m_kKa"/>
   <method old="getSubjectCommonName()Ljava/lang/String;" new="m_Bja"/>
   <method old="getSubjectOrganization()Ljava/lang/String;" new="m_iLa"/>
   <method old="getSubjectOrganizationlUnit()Ljava/lang/String;" new="m_kLa"/>
   <method old="getText()Ljava/lang/String;" new="m_ZA"/>
   <method old="getTitle()Ljava/lang/String;" new="m_zb"/>
   <method old="getValue(Ljava/util/regex/Pattern;Ljava/security/Principal;)Ljava/lang/String;" new="m_XJa"/>
   <method old="getX509Certificate()Ljava/security/cert/X509Certificate;" new="m_xla"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="issuedOn()Ljava/lang/String;" new="m_Qla"/>
   <field old="cnPattern Ljava/util/regex/Pattern;" new="f_m"/>
   <field old="fingerprint Ljava/lang/String;" new="f_k"/>
   <field old="oPattern Ljava/util/regex/Pattern;" new="f_e"/>
   <field old="ouPattern Ljava/util/regex/Pattern;" new="f_B"/>
   <field old="reason Lcom/xabber/android/data/connection/CertificateInvalidReason;" new="f_d"/>
   <field old="server Ljava/lang/String;" new="f_j"/>
   <field old="x509Certificate Ljava/security/cert/X509Certificate;" new="f_b"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.digests.SHA1Digest" new="wy.c_uA">
   <method old="doFinal([BI)I" new="m_sC"/>
   <method old="f(III)I" new="m_fz"/>
   <method old="finish()V" new="m_fy"/>
   <method old="g(III)I" new="m_ey"/>
   <method old="getAlgorithmName()Ljava/lang/String;" new="m_Bc"/>
   <method old="getByteLength()I" new="m_eb"/>
   <method old="getDigestSize()I" new="m_yC"/>
   <method old="h(III)I" new="m_jX"/>
   <method old="processBlock()V" new="m_fY"/>
   <method old="processLength(J)V" new="m_cz"/>
   <method old="processWord([BI)V" new="m_OZ"/>
   <method old="reset()V" new="m_ld"/>
   <method old="update(B)V" new="m_DA"/>
   <method old="update([BII)V" new="m_WC"/>
   <field old="DIGEST_LENGTH I" new="f_j"/>
   <field old="H1 I" new="f_f"/>
   <field old="H2 I" new="f_m"/>
   <field old="H3 I" new="f_b"/>
   <field old="H4 I" new="f_J"/>
   <field old="H5 I" new="f_e"/>
   <field old="X [I" new="f_K"/>
   <field old="Y1 I" new="f_B"/>
   <field old="Y2 I" new="f_k"/>
   <field old="Y3 I" new="f_d"/>
   <field old="Y4 I" new="f_l"/>
   <field old="xOff I" new="f_I"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.modes.CFBBlockCipher" new="wy.c_RB">
   <method old="decryptBlock([BI[BI)I" new="m_PY"/>
   <method old="encryptBlock([BI[BI)I" new="m_Haa"/>
   <method old="getAlgorithmName()Ljava/lang/String;" new="m_Bc"/>
   <method old="getBlockSize()I" new="m_bA"/>
   <method old="getUnderlyingCipher()Lnet/java/otr4j/bouncycastle/crypto/BlockCipher;" new="m_xz"/>
   <method old="init(ZLnet/java/otr4j/bouncycastle/crypto/CipherParameters;)V" new="m_Hd"/>
   <method old="processBlock([BI[BI)I" new="m_UB"/>
   <method old="reset()V" new="m_ld"/>
   <field old="IV [B" new="f_j"/>
   <field old="blockSize I" new="f_d"/>
   <field old="cfbOutV [B" new="f_B"/>
   <field old="cfbV [B" new="f_m"/>
   <field old="cipher Lnet/java/otr4j/bouncycastle/crypto/BlockCipher;" new="f_e"/>
   <field old="encrypting Z" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smackx.muc.PacketMultiplexListener$1" new="org.jivesoftware.smackx.muc.c_M">
   <method old="accept(Lorg/jivesoftware/smack/packet/Packet;)Z" new="m_x"/>
  </class>
  <class old="org.xbill.DNS.NSEC3Record$Flags" new="org.xbill.DNS.c_Ia">
   <field old="OPT_OUT I" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.adapter.GroupedContactAdapter" new="com.xabber.android.ui.adapter.c_D">
   <method old="addContact(Lcom/xabber/android/data/roster/AbstractContact;Ljava/lang/String;ZLjava/util/TreeMap;Ljava/util/TreeMap;Ljava/util/ArrayList;ZZ)V" new="m_Eda"/>
   <method old="addContact(Lcom/xabber/android/data/roster/AbstractContact;ZLjava/util/TreeMap;Ljava/util/TreeMap;Ljava/util/ArrayList;ZZZ)Z" new="m_dda"/>
   <method old="getCount()I" new="getCount"/>
   <method old="getFilter()Landroid/widget/Filter;" new="getFilter"/>
   <method old="getGroupConfiguration(Lcom/xabber/android/ui/adapter/AccountConfiguration;Ljava/lang/String;)Lcom/xabber/android/ui/adapter/GroupConfiguration;" new="m_uaa"/>
   <method old="getGroupConfiguration(Ljava/util/TreeMap;Ljava/lang/String;)Lcom/xabber/android/ui/adapter/GroupConfiguration;" new="m_rBa"/>
   <method old="getGroupStateProvider()Lcom/xabber/android/data/roster/GroupStateProvider;" new="m_pBa"/>
   <method old="getInflater()Lcom/xabber/android/ui/adapter/BaseContactInflater;" new="m_zaa"/>
   <method old="getItem(I)Ljava/lang/Object;" new="getItem"/>
   <method old="getItemId(I)J" new="getItemId"/>
   <method old="getItemViewType(I)I" new="getItemViewType"/>
   <method old="getView(ILandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;" new="getView"/>
   <method old="getViewTypeCount()I" new="getViewTypeCount"/>
   <method old="onChange()V" new="m_cb"/>
   <method old="setExpanded(Ljava/lang/String;Ljava/lang/String;Z)V" new="m_fC"/>
   <field old="NO_GROUP_LIST Ljava/util/Collection;" new="f_e"/>
   <field old="TYPE_CONTACT I" new="f_B"/>
   <field old="TYPE_GROUP I" new="f_k"/>
   <field old="activity Landroid/app/Activity;" new="f_B"/>
   <field old="baseEntities Ljava/util/ArrayList;" new="f_b"/>
   <field old="contactFilter Lcom/xabber/android/ui/adapter/BaseContactAdapter$ContactFilter;" new="f_j"/>
   <field old="expanderAccountTextColor Landroid/content/res/ColorStateList;" new="f_j"/>
   <field old="expanderGroupTextColor Landroid/content/res/ColorStateList;" new="f_d"/>
   <field old="filterString Ljava/lang/String;" new="f_e"/>
   <field old="groupStateProvider Lcom/xabber/android/data/roster/GroupStateProvider;" new="f_b"/>
   <field old="inflater Lcom/xabber/android/ui/adapter/BaseContactInflater;" new="f_d"/>
   <field old="layoutInflater Landroid/view/LayoutInflater;" new="f_m"/>
   <field old="listView Landroid/widget/ListView;" new="f_e"/>
   <field old="locale Ljava/util/Locale;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.BaseUIListener" new="com.xabber.android.data.c_E">
  </class>
  <class old="org.xbill.DNS.SetResponse" new="org.xbill.DNS.c_W">
   <method old="addRRset(Lorg/xbill/DNS/RRset;)V" new="m_Ke"/>
   <method old="answers()[Lorg/xbill/DNS/RRset;" new="m_ag"/>
   <method old="getCNAME()Lorg/xbill/DNS/CNAMERecord;" new="m_ig"/>
   <method old="getDNAME()Lorg/xbill/DNS/DNAMERecord;" new="m_OD"/>
   <method old="getNS()Lorg/xbill/DNS/RRset;" new="m_Ie"/>
   <method old="isCNAME()Z" new="m_zf"/>
   <method old="isDNAME()Z" new="m_RD"/>
   <method old="isDelegation()Z" new="m_BF"/>
   <method old="isNXDOMAIN()Z" new="m_CF"/>
   <method old="isNXRRSET()Z" new="m_zE"/>
   <method old="isSuccessful()Z" new="m_qD"/>
   <method old="isUnknown()Z" new="m_MF"/>
   <method old="ofType(I)Lorg/xbill/DNS/SetResponse;" new="m_Ce"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="CNAME I" new="f_e"/>
   <field old="DELEGATION I" new="f_j"/>
   <field old="DNAME I" new="f_f"/>
   <field old="NXDOMAIN I" new="f_b"/>
   <field old="NXRRSET I" new="f_J"/>
   <field old="SUCCESSFUL I" new="f_l"/>
   <field old="UNKNOWN I" new="f_m"/>
   <field old="data Ljava/lang/Object;" new="f_k"/>
   <field old="nxdomain Lorg/xbill/DNS/SetResponse;" new="f_d"/>
   <field old="nxrrset Lorg/xbill/DNS/SetResponse;" new="f_I"/>
   <field old="type I" new="f_B"/>
   <field old="unknown Lorg/xbill/DNS/SetResponse;" new="f_K"/>
  </class>
  <class old="org.jivesoftware.smack.packet.PrivacyItem$PrivacyRule" new="org.jivesoftware.smack.packet.c_f">
   <method old="fromString(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PrivacyItem$PrivacyRule;" new="m_tc"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/PrivacyItem$Type;" new="m_b"/>
   <method old="getValue()Ljava/lang/String;" new="m_Ra"/>
   <method old="isSuscription()Z" new="m_KT"/>
   <method old="setSuscriptionValue(Ljava/lang/String;)V" new="m_iS"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/PrivacyItem$Type;)V" new="m_It"/>
   <method old="setValue(Ljava/lang/String;)V" new="m_TT"/>
   <field old="SUBSCRIPTION_BOTH Ljava/lang/String;" new="f_d"/>
   <field old="SUBSCRIPTION_FROM Ljava/lang/String;" new="f_e"/>
   <field old="SUBSCRIPTION_NONE Ljava/lang/String;" new="f_j"/>
   <field old="SUBSCRIPTION_TO Ljava/lang/String;" new="f_m"/>
   <field old="type Lorg/jivesoftware/smack/packet/PrivacyItem$Type;" new="f_b"/>
   <field old="value Ljava/lang/String;" new="f_B"/>
  </class>
  <class old="com.xabber.android.ui.PasswordRequest" new="com.xabber.android.ui.PasswordRequest">
   <method old="createIntent(Landroid/content/Context;Ljava/lang/String;)Landroid/content/Intent;" new="m_bca"/>
   <method old="getAccount(Landroid/content/Intent;)Ljava/lang/String;" new="m_lCa"/>
   <method old="onAccept()V" new="m_WBa"/>
   <method old="onActivityResult(IILandroid/content/Intent;)V" new="onActivityResult"/>
   <method old="onCenter()V" new="m_Jca"/>
   <method old="onCreate(Landroid/os/Bundle;)V" new="onCreate"/>
   <method old="onDecline()V" new="m_Qca"/>
   <method old="onDestroy()V" new="onDestroy"/>
   <method old="onNewIntent(Landroid/content/Intent;)V" new="onNewIntent"/>
   <method old="onPause()V" new="onPause"/>
   <method old="onResume()V" new="onResume"/>
   <method old="setCustomView(Landroid/view/View;Z)V" new="m_LBa"/>
   <method old="setDialogMessage(I)V" new="m_Gca"/>
   <method old="setDialogMessage(Ljava/lang/CharSequence;)V" new="m_SCa"/>
   <method old="setDialogTitle(I)V" new="m_Kca"/>
   <method old="setDialogTitle(Ljava/lang/CharSequence;)V" new="m_VCa"/>
   <method old="startActivity(Landroid/content/Intent;)V" new="startActivity"/>
   <method old="startActivityForResult(Landroid/content/Intent;I)V" new="startActivityForResult"/>
   <field old="account Ljava/lang/String;" new="f_e"/>
   <field old="passwordView Landroid/widget/EditText;" new="f_m"/>
   <field old="storePasswordView Landroid/widget/CheckBox;" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.LogManager" new="com.xabber.android.data.c_g">
   <method old="d(Ljava/lang/Object;Ljava/lang/String;)I" new="m_bMa"/>
   <method old="dString(Ljava/lang/String;Ljava/lang/String;)I" new="m_lMa"/>
   <method old="e(Ljava/lang/Object;Ljava/lang/String;)I" new="m_dma"/>
   <method old="eString(Ljava/lang/String;Ljava/lang/String;)I" new="m_Nma"/>
   <method old="exception(Ljava/lang/Object;Ljava/lang/Exception;)V" new="m_ama"/>
   <method old="forceException(Ljava/lang/Object;Ljava/lang/Exception;)V" new="m_Ioa"/>
   <method old="getApplicationInfo(Landroid/content/Context;)Landroid/content/pm/ApplicationInfo;" new="m_KMa"/>
   <method old="getInstance()Lcom/xabber/android/data/LogManager;" new="m_Xr"/>
   <method old="getStackTrace(Ljava/lang/Exception;)Ljava/lang/String;" new="m_iMa"/>
   <method old="i(Ljava/lang/Object;Ljava/lang/String;)I" new="m_MOa"/>
   <method old="iString(Ljava/lang/String;Ljava/lang/String;)I" new="m_Moa"/>
   <method old="initCompatibility()V" new="m_eNa"/>
   <method old="isDebugable()Z" new="m_Woa"/>
   <method old="onLoad()V" new="m_pA"/>
   <method old="v(Ljava/lang/Object;Ljava/lang/String;)I" new="m_kna"/>
   <method old="vString(Ljava/lang/String;Ljava/lang/String;)I" new="m_xMa"/>
   <method old="w(Ljava/lang/Object;Ljava/lang/String;)I" new="m_Nna"/>
   <method old="wString(Ljava/lang/String;Ljava/lang/String;)I" new="m_INa"/>
   <field old="_getApplicationInfo Ljava/lang/reflect/Method;" new="f_e"/>
   <field old="debugable Z" new="f_d"/>
   <field old="instance Lcom/xabber/android/data/LogManager;" new="f_m"/>
   <field old="log Z" new="f_b"/>
  </class>
  <class old="org.xbill.DNS.MRRecord" new="org.xbill.DNS.c_ba">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getNewName()Lorg/xbill/DNS/Name;" new="m_Yi"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getSingleName()Lorg/xbill/DNS/Name;" new="m_NH"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="serialVersionUID J" new="f_m"/>
   <field old="singleName Lorg/xbill/DNS/Name;" new="f_m"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.connection.ReconnectionManager$ReconnectionInfo" new="com.xabber.android.data.connection.ReconnectionManager$ReconnectionInfo">
   <field old="reconnectAttempts I" new="f_m"/>
   <field old="reconnectCounter I" new="f_e"/>
  </class>
  <class old="org.xbill.DNS.DNSKEYRecord$Flags" new="org.xbill.DNS.c_Yc">
   <field old="REVOKE I" new="f_e"/>
   <field old="SEP_KEY I" new="f_b"/>
   <field old="ZONE_KEY I" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.socks5.Socks5ClientForInitiator" new="org.jivesoftware.smackx.bytestreams.socks5.c_J">
   <method old="activate()V" new="m_tN"/>
   <method old="createStreamHostActivation()Lorg/jivesoftware/smackx/bytestreams/socks5/packet/Bytestream;" new="m_yN"/>
   <method old="establish(Ljava/net/Socket;)Z" new="m_nM"/>
   <method old="getSocket(I)Ljava/net/Socket;" new="m_rn"/>
   <field old="connection Lorg/jivesoftware/smack/Connection;" new="f_m"/>
   <field old="digest Ljava/lang/String;" new="f_e"/>
   <field old="sessionID Ljava/lang/String;" new="f_b"/>
   <field old="streamHost Lorg/jivesoftware/smackx/bytestreams/socks5/packet/Bytestream$StreamHost;" new="f_m"/>
   <field old="target Ljava/lang/String;" new="f_d"/>
  </class>
  <class old="org.xbill.DNS.Section" new="org.xbill.DNS.c_Z">
   <method old="longString(I)Ljava/lang/String;" new="m_eg"/>
   <method old="string(I)Ljava/lang/String;" new="m_Wd"/>
   <method old="updString(I)Ljava/lang/String;" new="m_ie"/>
   <method old="value(Ljava/lang/String;)I" new="m_le"/>
   <field old="ADDITIONAL I" new="f_f"/>
   <field old="ANSWER I" new="f_B"/>
   <field old="AUTHORITY I" new="f_e"/>
   <field old="PREREQ I" new="f_m"/>
   <field old="QUESTION I" new="f_l"/>
   <field old="UPDATE I" new="f_d"/>
   <field old="ZONE I" new="f_I"/>
   <field old="longSections [Ljava/lang/String;" new="f_b"/>
   <field old="sections Lorg/xbill/DNS/Mnemonic;" new="f_j"/>
   <field old="updateSections [Ljava/lang/String;" new="f_k"/>
  </class>
  <class old="com.xabber.xmpp.archive.PrefProvider" new="com.xabber.xmpp.archive.c_d">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/archive/Pref;" new="m_ZZ"/>
   <method old="parseIQ(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/IQ;" new="m_g"/>
   <method old="parseIQ(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/IQ;" new="m_g"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/archive/Pref;)Z" new="m_ABa"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
  </class>
  <class old="com.xabber.android.data.message.OnChatChangedListener" new="com.xabber.android.data.message.c_E">
   <method old="onChatChanged(Ljava/lang/String;Ljava/lang/String;Z)V" new="m_Id"/>
  </class>
  <class old="com.xabber.android.ui.OccupantList" new="com.xabber.android.ui.OccupantList">
   <method old="createIntent(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;" new="m_CAa"/>
   <method old="getAccount(Landroid/content/Intent;)Ljava/lang/String;" new="m_lCa"/>
   <method old="getUser(Landroid/content/Intent;)Ljava/lang/String;" new="m_NCa"/>
   <method old="onAccountsChanged(Ljava/util/Collection;)V" new="m_vB"/>
   <method old="onActivityResult(IILandroid/content/Intent;)V" new="onActivityResult"/>
   <method old="onContactsChanged(Ljava/util/Collection;)V" new="m_bd"/>
   <method old="onCreate(Landroid/os/Bundle;)V" new="onCreate"/>
   <method old="onDestroy()V" new="onDestroy"/>
   <method old="onNewIntent(Landroid/content/Intent;)V" new="onNewIntent"/>
   <method old="onPause()V" new="onPause"/>
   <method old="onResume()V" new="onResume"/>
   <method old="startActivity(Landroid/content/Intent;)V" new="startActivity"/>
   <method old="startActivityForResult(Landroid/content/Intent;I)V" new="startActivityForResult"/>
   <field old="account Ljava/lang/String;" new="f_b"/>
   <field old="listAdapter Lcom/xabber/android/ui/adapter/OccupantListAdapter;" new="f_e"/>
   <field old="room Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.ChatStateManager$IncomingMessageInterceptor" new="org.jivesoftware.smackx.c_Q">
   <method old="chatCreated(Lorg/jivesoftware/smack/Chat;Z)V" new="m_oa"/>
   <method old="processMessage(Lorg/jivesoftware/smack/Chat;Lorg/jivesoftware/smack/packet/Message;)V" new="m_Pa"/>
   <field old="this$0 Lorg/jivesoftware/smackx/ChatStateManager;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceIteratorBase" new="org.jivesoftware.smack.util.collections.c_D">
   <method old="checkMod()V" new="m_Pq"/>
   <method old="currentEntry()Lorg/jivesoftware/smack/util/collections/AbstractReferenceMap$ReferenceEntry;" new="m_yQ"/>
   <method old="getKey()Ljava/lang/Object;" new="m_xa"/>
   <method old="getValue()Ljava/lang/Object;" new="m_Ra"/>
   <method old="hasNext()Z" new="hasNext"/>
   <method old="next()Ljava/lang/Object;" new="next"/>
   <method old="nextEntry()Lorg/jivesoftware/smack/util/collections/AbstractReferenceMap$ReferenceEntry;" new="m_Kq"/>
   <method old="nextNull()Z" new="m_mr"/>
   <method old="remove()V" new="remove"/>
   <method old="setValue(Ljava/lang/Object;)Ljava/lang/Object;" new="m_Xa"/>
   <method old="superNext()Lorg/jivesoftware/smack/util/collections/AbstractReferenceMap$ReferenceEntry;" new="m_cr"/>
   <field old="currentKey Ljava/lang/Object;" new="f_b"/>
   <field old="currentValue Ljava/lang/Object;" new="f_m"/>
   <field old="entry Lorg/jivesoftware/smack/util/collections/AbstractReferenceMap$ReferenceEntry;" new="f_f"/>
   <field old="expectedModCount I" new="f_l"/>
   <field old="index I" new="f_k"/>
   <field old="nextKey Ljava/lang/Object;" new="f_e"/>
   <field old="nextValue Ljava/lang/Object;" new="f_j"/>
   <field old="parent Lorg/jivesoftware/smack/util/collections/AbstractReferenceMap;" new="f_d"/>
   <field old="previous Lorg/jivesoftware/smack/util/collections/AbstractReferenceMap$ReferenceEntry;" new="f_B"/>
  </class>
  <class old="com.xabber.android.data.connection.SRVContainer" new="com.xabber.android.data.connection.c_f">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="convert(Ljava/lang/Object;)Ljava/lang/Object;" new="m_LKa"/>
   <method old="convert(Lorg/xbill/DNS/Record;)Lcom/xabber/android/data/connection/Target;" new="m_Aka"/>
   <method old="getCurrent()Lcom/xabber/android/data/connection/Target;" new="m_QLa"/>
   <method old="getNext()Ljava/lang/Object;" new="m_Ui"/>
   <method old="hasChanges(Ljava/util/Collection;)Z" new="m_Wja"/>
   <method old="update(Ljava/util/List;)V" new="m_aKa"/>
   <method old="update([Ljava/lang/Object;)V" new="m_bJa"/>
   <field old="pool Ljava/util/Queue;" new="f_e"/>
   <field old="random Ljava/util/Random;" new="f_m"/>
   <field old="used Ljava/util/Queue;" new="f_m"/>
  </class>
  <class old="com.xabber.android.receiver.GoXaReceiver" new="com.xabber.android.receiver.GoXaReceiver">
   <method old="createIntent(Landroid/content/Context;)Landroid/content/Intent;" new="m_yBa"/>
   <method old="onReceive(Landroid/content/Context;Landroid/content/Intent;)V" new="onReceive"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.Subject$SecureSet$SecureIterator" new="org.apache.harmony.javax.security.auth.c_B">
   <method old="hasNext()Z" new="hasNext"/>
   <method old="next()Ljava/lang/Object;" new="next"/>
   <method old="remove()V" new="remove"/>
   <field old="iterator Ljava/util/Iterator;" new="f_m"/>
   <field old="this$1 Lorg/apache/harmony/javax/security/auth/Subject$SecureSet;" new="f_e"/>
  </class>
  <class old="com.xabber.android.ui.adapter.GroupedContactAdapter$1" new="com.xabber.android.ui.adapter.c_G">
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
  </class>
  <class old="org.xbill.DNS.PXRecord" new="org.xbill.DNS.c_p">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getMap822()Lorg/xbill/DNS/Name;" new="m_jG"/>
   <method old="getMapX400()Lorg/xbill/DNS/Name;" new="m_Wg"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getPreference()I" new="m_nG"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="dclass I" new="f_m"/>
   <field old="map822 Lorg/xbill/DNS/Name;" new="f_m"/>
   <field old="mapX400 Lorg/xbill/DNS/Name;" new="f_e"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="preference I" new="f_d"/>
   <field old="serialVersionUID J" new="f_B"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smack.packet.XMPPError$ErrorSpecification" new="org.jivesoftware.smack.packet.c_B">
   <method old="errorSpecifications()Ljava/util/Map;" new="m_DS"/>
   <method old="getCode()I" new="m_ej"/>
   <method old="getCondition()Lorg/jivesoftware/smack/packet/XMPPError$Condition;" new="m_Iu"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/XMPPError$Type;" new="m_b"/>
   <method old="specFor(Lorg/jivesoftware/smack/packet/XMPPError$Condition;)Lorg/jivesoftware/smack/packet/XMPPError$ErrorSpecification;" new="m_eT"/>
   <field old="code I" new="f_b"/>
   <field old="condition Lorg/jivesoftware/smack/packet/XMPPError$Condition;" new="f_m"/>
   <field old="instances Ljava/util/Map;" new="f_e"/>
   <field old="type Lorg/jivesoftware/smack/packet/XMPPError$Type;" new="f_d"/>
  </class>
  <class old="com.xabber.android.data.message.chat.ChatManager$1" new="wy.c_Hb">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/message/chat/ChatManager;" new="f_b"/>
   <field old="val$makeVibro Lcom/xabber/android/data/entity/NestedMap;" new="f_d"/>
   <field old="val$notifyVisible Lcom/xabber/android/data/entity/NestedMap;" new="f_j"/>
   <field old="val$privateChats Ljava/util/Set;" new="f_m"/>
   <field old="val$showText Lcom/xabber/android/data/entity/NestedMap;" new="f_B"/>
   <field old="val$sounds Lcom/xabber/android/data/entity/NestedMap;" new="f_e"/>
  </class>
  <class old="com.xabber.xmpp.receipt.RequestProvider" new="com.xabber.xmpp.receipt.RequestProvider">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/receipt/Request;" new="m_ZZ"/>
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/PacketExtension;" new="m_I"/>
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_I"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
  </class>
  <class old="com.xabber.android.data.message.chat.ChatManager$2" new="wy.c_GC">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/message/chat/ChatManager;" new="f_b"/>
   <field old="val$account Ljava/lang/String;" new="f_d"/>
   <field old="val$save Z" new="f_m"/>
   <field old="val$user Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="com.xabber.android.receiver.BootReceiver" new="com.xabber.android.receiver.BootReceiver">
   <method old="onReceive(Landroid/content/Context;Landroid/content/Intent;)V" new="onReceive"/>
  </class>
  <class old="com.xabber.android.ui.helper.AbstractAvatarInflaterHelper" new="com.xabber.android.ui.helper.c_M">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createAbstractContactInflaterHelper()Lcom/xabber/android/ui/helper/AbstractAvatarInflaterHelper;" new="m_kCa"/>
   <method old="updateAvatar(Landroid/widget/ImageView;Lcom/xabber/android/data/roster/AbstractContact;)V" new="m_jba"/>
  </class>
  <class old="com.xabber.android.data.message.chat.ChatManager$3" new="wy.c_wC">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/message/chat/ChatManager;" new="f_e"/>
   <field old="val$account Ljava/lang/String;" new="f_m"/>
   <field old="val$user Ljava/lang/String;" new="f_b"/>
   <field old="val$value Z" new="f_d"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.callback.PasswordCallback" new="wy.c_FA">
   <method old="clearPassword()V" new="m_zw"/>
   <method old="getPassword()[C" new="m_rj"/>
   <method old="getPrompt()Ljava/lang/String;" new="m_DW"/>
   <method old="isEchoOn()Z" new="m_uW"/>
   <method old="setPassword([C)V" new="m_Cw"/>
   <method old="setPrompt(Ljava/lang/String;)V" new="m_mW"/>
   <field old="echoOn Z" new="f_e"/>
   <field old="inputPassword [C" new="f_m"/>
   <field old="prompt Ljava/lang/String;" new="f_b"/>
   <field old="serialVersionUID J" new="f_d"/>
  </class>
  <class old="com.xabber.android.data.message.chat.ChatManager$4" new="wy.c_iA">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/message/chat/ChatManager;" new="f_e"/>
   <field old="val$account Ljava/lang/String;" new="f_d"/>
   <field old="val$user Ljava/lang/String;" new="f_m"/>
   <field old="val$value Z" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.message.chat.ChatManager$5" new="wy.c_dC">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/message/chat/ChatManager;" new="f_e"/>
   <field old="val$account Ljava/lang/String;" new="f_m"/>
   <field old="val$user Ljava/lang/String;" new="f_d"/>
   <field old="val$value Z" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smack.util.collections.AbstractReferenceMap$WeakRef" new="org.jivesoftware.smack.util.collections.c_K">
   <method old="hashCode()I" new="hashCode"/>
   <field old="hash I" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.message.chat.ChatManager$6" new="wy.c_Zc">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/message/chat/ChatManager;" new="f_m"/>
   <field old="val$account Ljava/lang/String;" new="f_b"/>
   <field old="val$user Ljava/lang/String;" new="f_e"/>
   <field old="val$value Landroid/net/Uri;" new="f_d"/>
  </class>
  <class old="com.xabber.android.data.connection.ConnectionThread$AcceptAll" new="com.xabber.android.data.connection.c_D">
   <method old="accept(Lorg/jivesoftware/smack/packet/Packet;)Z" new="m_x"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.params.DHKeyGenerationParameters" new="wy.c_tB">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getParameters()Lnet/java/otr4j/bouncycastle/crypto/params/DHParameters;" new="m_Paa"/>
   <method old="getRandom()Ljava/security/SecureRandom;" new="m_Qy"/>
   <method old="getStrength()I" new="m_iZ"/>
   <method old="getStrength(Lnet/java/otr4j/bouncycastle/crypto/params/DHParameters;)I" new="m_rZ"/>
   <field old="params Lnet/java/otr4j/bouncycastle/crypto/params/DHParameters;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.Ping" new="org.jivesoftware.smackx.packet.c_i">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
  </class>
  <class old="org.apache.qpid.management.common.sasl.UsernameHashedPasswordCallbackHandler" new="wy.c_ta">
   <method old="clearPassword()V" new="m_zw"/>
   <method old="finalize()V" new="finalize"/>
   <method old="getHash(Ljava/lang/String;)[C" new="m_bw"/>
   <method old="handle([Lorg/apache/harmony/javax/security/auth/callback/Callback;)V" new="m_Jb"/>
   <field old="pwchars [C" new="f_e"/>
   <field old="user Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.ActivityManager$1" new="com.xabber.android.data.c_Aa">
   <method old="onError(I)V" new="m_MA"/>
   <field old="this$0 Lcom/xabber/android/data/ActivityManager;" new="f_e"/>
   <field old="val$activity Landroid/app/Activity;" new="f_m"/>
  </class>
  <class old="net.java.otr4j.session.TLV" new="net.java.otr4j.session.c_B">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getType()I" new="m_b"/>
   <method old="getValue()[B" new="m_Ra"/>
   <method old="setType(I)V" new="m_rv"/>
   <method old="setValue([B)V" new="m_Fw"/>
   <field old="DISCONNECTED I" new="f_B"/>
   <field old="PADDING I" new="f_f"/>
   <field old="SMP1 I" new="f_m"/>
   <field old="SMP1Q I" new="f_I"/>
   <field old="SMP2 I" new="f_e"/>
   <field old="SMP3 I" new="f_l"/>
   <field old="SMP4 I" new="f_d"/>
   <field old="SMP_ABORT I" new="f_k"/>
   <field old="type I" new="f_b"/>
   <field old="value [B" new="f_j"/>
  </class>
  <class old="com.xabber.xmpp.archive.SessionProvider" new="com.xabber.xmpp.archive.c_J">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/archive/Session;" new="m_ZZ"/>
   <method old="getInstance()Lcom/xabber/xmpp/archive/SessionProvider;" new="m_Xr"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/archive/Session;)Lcom/xabber/xmpp/archive/Session;" new="m_ACa"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
   <field old="instance Lcom/xabber/xmpp/archive/SessionProvider;" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.vcard.VCardProvider" new="com.xabber.xmpp.vcard.c_B">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/vcard/VCard;" new="m_ZZ"/>
   <method old="parseIQ(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/IQ;" new="m_g"/>
   <method old="parseIQ(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/IQ;" new="m_g"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/VCard;)Z" new="m_dy"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
  </class>
  <class old="com.xabber.android.ui.PreferenceEditor" new="com.xabber.android.ui.PreferenceEditor">
   <method old="changeGrouping()V" new="m_Sba"/>
   <method old="createIntent(Landroid/content/Context;)Landroid/content/Intent;" new="m_yBa"/>
   <method old="onAccept(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_Lc"/>
   <method old="onActivityResult(IILandroid/content/Intent;)V" new="onActivityResult"/>
   <method old="onCancel(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_Vb"/>
   <method old="onCreate(Landroid/os/Bundle;)V" new="onCreate"/>
   <method old="onCreateDialog(I)Landroid/app/Dialog;" new="onCreateDialog"/>
   <method old="onDecline(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_ad"/>
   <method old="onDestroy()V" new="onDestroy"/>
   <method old="onNewIntent(Landroid/content/Intent;)V" new="onNewIntent"/>
   <method old="onPause()V" new="onPause"/>
   <method old="onPreferenceClick(Landroid/preference/Preference;)Z" new="onPreferenceClick"/>
   <method old="onResume()V" new="onResume"/>
   <method old="onSharedPreferenceChanged(Landroid/content/SharedPreferences;Ljava/lang/String;)V" new="onSharedPreferenceChanged"/>
   <method old="startActivity(Landroid/content/Intent;)V" new="startActivity"/>
   <method old="startActivityForResult(Landroid/content/Intent;I)V" new="startActivityForResult"/>
  </class>
  <class old="com.xabber.android.ui.helper.ManagedActivity" new="com.xabber.android.ui.helper.ManagedActivity">
   <method old="onAccept(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_Lc"/>
   <method old="onAccountsChanged(Ljava/util/Collection;)V" new="m_vB"/>
   <method old="onActivityResult(IILandroid/content/Intent;)V" new="onActivityResult"/>
   <method old="onCancel(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_Vb"/>
   <method old="onChatChanged(Ljava/lang/String;Ljava/lang/String;Z)V" new="m_Id"/>
   <method old="onContactsChanged(Ljava/util/Collection;)V" new="m_bd"/>
   <method old="onCreate(Landroid/os/Bundle;)V" new="onCreate"/>
   <method old="onDecline(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_ad"/>
   <method old="onDestroy()V" new="onDestroy"/>
   <method old="onNewIntent(Landroid/content/Intent;)V" new="onNewIntent"/>
   <method old="onPause()V" new="onPause"/>
   <method old="onResume()V" new="onResume"/>
   <method old="onSelect()V" new="m_uc"/>
   <method old="onTextChanged(Landroid/widget/EditText;Ljava/lang/CharSequence;)V" new="m_Lb"/>
   <method old="onUnselect()V" new="m_rB"/>
   <method old="startActivity(Landroid/content/Intent;)V" new="startActivity"/>
   <method old="startActivityForResult(Landroid/content/Intent;I)V" new="startActivityForResult"/>
  </class>
  <class old="com.xabber.xmpp.vcard.BinaryPhoto" new="com.xabber.xmpp.vcard.c_Z">
   <method old="getData()[B" new="m_tD"/>
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getType()Ljava/lang/String;" new="m_b"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="setData([B)V" new="m_jz"/>
   <method old="setType(Ljava/lang/String;)V" new="m_Al"/>
   <method old="writeBody(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_zy"/>
   <field old="BINVAL_NAME Ljava/lang/String;" new="f_d"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_m"/>
   <field old="MAX_ENCODED_DATA_SIZE I" new="f_m"/>
   <field old="TYPE_NAME Ljava/lang/String;" new="f_b"/>
  </class>
  <class old="com.xabber.android.ui.widget.PageSwitcher" new="com.xabber.android.ui.widget.PageSwitcher">
   <method old="access$002(Lcom/xabber/android/ui/widget/PageSwitcher;Z)Z" new="m_EBa"/>
   <method old="access$100(Lcom/xabber/android/ui/widget/PageSwitcher;)Landroid/os/Handler;" new="m_nAa"/>
   <method old="access$200(Lcom/xabber/android/ui/widget/PageSwitcher;)Landroid/view/View;" new="m_gda"/>
   <method old="access$300(Lcom/xabber/android/ui/widget/PageSwitcher;)Landroid/view/animation/Animation;" new="m_Vba"/>
   <method old="access$400(Lcom/xabber/android/ui/widget/PageSwitcher;)Landroid/view/View;" new="m_fba"/>
   <method old="computeScroll()V" new="computeScroll"/>
   <method old="correntPosition(I)I" new="m_MCa"/>
   <method old="getAdapter()Landroid/widget/Adapter;" new="getAdapter"/>
   <method old="getCount()I" new="getCount"/>
   <method old="getOnSelectListener()Lcom/xabber/android/ui/widget/PageSwitcher$OnSelectListener;" new="getOnSelectListener"/>
   <method old="getSelectedItem()Ljava/lang/Object;" new="getSelectedItem"/>
   <method old="getSelectedItemPosition()I" new="getSelectedItemPosition"/>
   <method old="getSelectedView()Landroid/view/View;" new="getSelectedView"/>
   <method old="getView(IILandroid/view/View;ZZ)Landroid/view/View;" new="m_yaa"/>
   <method old="getVisibleItem()Ljava/lang/Object;" new="getVisibleItem"/>
   <method old="getVisibleView()Landroid/view/View;" new="getVisibleView"/>
   <method old="hidePages()V" new="m_Wba"/>
   <method old="onAnimationEnd(Landroid/view/animation/Animation;)V" new="onAnimationEnd"/>
   <method old="onAnimationRepeat(Landroid/view/animation/Animation;)V" new="onAnimationRepeat"/>
   <method old="onAnimationStart(Landroid/view/animation/Animation;)V" new="onAnimationStart"/>
   <method old="onInterceptTouchEvent(Landroid/view/MotionEvent;)Z" new="onInterceptTouchEvent"/>
   <method old="onLayout(ZIIII)V" new="onLayout"/>
   <method old="onMeasure(II)V" new="onMeasure"/>
   <method old="onTouchEvent(Landroid/view/MotionEvent;)Z" new="onTouchEvent"/>
   <method old="saveState()V" new="m_kBa"/>
   <method old="scrollTo(II)V" new="scrollTo"/>
   <method old="setAdapter(Lcom/xabber/android/ui/adapter/SaveStateAdapter;)V" new="setAdapter"/>
   <method old="setOnSelectListener(Lcom/xabber/android/ui/widget/PageSwitcher$OnSelectListener;)V" new="setOnSelectListener"/>
   <method old="setSelection(I)V" new="setSelection"/>
   <method old="showPages()V" new="m_Ada"/>
   <method old="stopMovement()V" new="m_KAa"/>
   <method old="update(Z)V" new="m_AAa"/>
   <field old="LOG Z" new="f_E"/>
   <field old="PAGES_HIDDER_DELAY J" new="f_M"/>
   <field old="adapter Lcom/xabber/android/ui/adapter/SaveStateAdapter;" new="f_i"/>
   <field old="dataChanged Z" new="f_A"/>
   <field old="dataSetObserver Landroid/database/DataSetObserver;" new="f_K"/>
   <field old="dragWasCanceled Z" new="f_I"/>
   <field old="handler Landroid/os/Handler;" new="f_C"/>
   <field old="heightMeasureSpec I" new="f_F"/>
   <field old="initialScrollX I" new="f_k"/>
   <field old="isBeingDragged Z" new="f_a"/>
   <field old="onSelectListener Lcom/xabber/android/ui/widget/PageSwitcher$OnSelectListener;" new="f_b"/>
   <field old="pagesHideAnimation Landroid/view/animation/Animation;" new="f_d"/>
   <field old="pagesHideRunnable Ljava/lang/Runnable;" new="f_B"/>
   <field old="pagesShown Z" new="f_h"/>
   <field old="previousSelectedObject Ljava/lang/Object;" new="f_l"/>
   <field old="previousVisibleObject Ljava/lang/Object;" new="f_D"/>
   <field old="scroller Landroid/widget/Scroller;" new="f_f"/>
   <field old="selectedPosition I" new="f_m"/>
   <field old="selectedView Landroid/view/View;" new="f_J"/>
   <field old="touchSlop I" new="f_j"/>
   <field old="touchX F" new="f_e"/>
   <field old="visiblePosition I" new="f_g"/>
   <field old="visibleView Landroid/view/View;" new="f_H"/>
   <field old="widthMeasureSpec I" new="f_G"/>
  </class>
  <class old="com.novell.sasl.client.ResponseAuth" new="com.novell.sasl.client.ResponseAuth">
   <method old="checkSemantics(Lcom/novell/sasl/client/DirectiveList;)V" new="m_pma"/>
   <method old="getResponseValue()Ljava/lang/String;" new="m_IOa"/>
   <field old="m_responseValue Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.util.Base64$OutputStream" new="org.jivesoftware.smack.util.c_b">
   <method old="close()V" new="close"/>
   <method old="flushBase64()V" new="m_yR"/>
   <method old="resumeEncoding()V" new="m_eU"/>
   <method old="suspendEncoding()V" new="m_os"/>
   <method old="write(I)V" new="write"/>
   <method old="write([BII)V" new="write"/>
   <field old="alphabet [B" new="f_b"/>
   <field old="b4 [B" new="f_l"/>
   <field old="breakLines Z" new="f_j"/>
   <field old="buffer [B" new="f_B"/>
   <field old="bufferLength I" new="f_e"/>
   <field old="decodabet [B" new="f_K"/>
   <field old="encode Z" new="f_d"/>
   <field old="lineLength I" new="f_k"/>
   <field old="options I" new="f_f"/>
   <field old="position I" new="f_I"/>
   <field old="suspendEncoding Z" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.vcard.SoundHolderProvider" new="com.xabber.xmpp.vcard.c_c">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createBinaryData()Lcom/xabber/xmpp/Instance;" new="m_iaa"/>
   <method old="createBinaryData()Lcom/xabber/xmpp/vcard/Sound;" new="m_iaa"/>
   <method old="createExternalData()Lcom/xabber/xmpp/Instance;" new="m_bY"/>
   <method old="createExternalData()Lcom/xabber/xmpp/vcard/Sound;" new="m_bY"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/vcard/DataHolder;" new="m_ZZ"/>
   <method old="createPayload(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/DataHolder;)Z" new="m_lz"/>
   <method old="createPhoneticSound()Lcom/xabber/xmpp/vcard/Sound;" new="m_kX"/>
   <method old="getInstance()Lcom/xabber/xmpp/vcard/SoundHolderProvider;" new="m_Xr"/>
   <method old="inflateBinaryData(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/AbstractBinaryData;)Z" new="m_GY"/>
   <method old="inflateExternalData(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/AbstractExternalData;)Z" new="m_mz"/>
   <method old="inflatePayload(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/DataHolder;)Z" new="m_qY"/>
   <method old="inflatePhoneticSound(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/PhoneticSound;)Z" new="m_qaa"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/DataHolder;)Z" new="m_iz"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
   <field old="instance Lcom/xabber/xmpp/vcard/SoundHolderProvider;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.util.collections.AbstractHashedMap$Values" new="org.jivesoftware.smack.util.collections.c_d">
   <method old="clear()V" new="clear"/>
   <method old="contains(Ljava/lang/Object;)Z" new="contains"/>
   <method old="iterator()Ljava/util/Iterator;" new="iterator"/>
   <method old="size()I" new="size"/>
   <field old="parent Lorg/jivesoftware/smack/util/collections/AbstractHashedMap;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.extension.archive.MatchMode" new="com.xabber.android.data.extension.archive.MatchMode">
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/android/data/extension/archive/MatchMode;" new="valueOf"/>
   <method old="values()[Lcom/xabber/android/data/extension/archive/MatchMode;" new="values"/>
   <field old="$VALUES [Lcom/xabber/android/data/extension/archive/MatchMode;" new="f_d"/>
   <field old="bare Lcom/xabber/android/data/extension/archive/MatchMode;" new="f_e"/>
   <field old="domain Lcom/xabber/android/data/extension/archive/MatchMode;" new="f_m"/>
   <field old="exect Lcom/xabber/android/data/extension/archive/MatchMode;" new="f_b"/>
  </class>
  <class old="com.xabber.android.receiver.ComposingPausedReceiver" new="com.xabber.android.receiver.ComposingPausedReceiver">
   <method old="createIntent(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;" new="m_CAa"/>
   <method old="getAccount(Landroid/content/Intent;)Ljava/lang/String;" new="m_lCa"/>
   <method old="getUser(Landroid/content/Intent;)Ljava/lang/String;" new="m_NCa"/>
   <method old="onReceive(Landroid/content/Context;Landroid/content/Intent;)V" new="onReceive"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.callback.ChoiceCallback" new="wy.c_Qa">
   <method old="allowMultipleSelections()Z" new="m_Tx"/>
   <method old="getChoices()[Ljava/lang/String;" new="m_UU"/>
   <method old="getDefaultChoice()I" new="m_wU"/>
   <method old="getPrompt()Ljava/lang/String;" new="m_DW"/>
   <method old="getSelectedIndexes()[I" new="m_Mx"/>
   <method old="setChoices([Ljava/lang/String;)V" new="m_mx"/>
   <method old="setDefaultChoice(I)V" new="m_Xv"/>
   <method old="setPrompt(Ljava/lang/String;)V" new="m_mW"/>
   <method old="setSelectedIndex(I)V" new="m_Qx"/>
   <method old="setSelectedIndexes([I)V" new="m_hw"/>
   <field old="choices [Ljava/lang/String;" new="f_d"/>
   <field old="defaultChoice I" new="f_e"/>
   <field old="multipleSelectionsAllowed Z" new="f_j"/>
   <field old="prompt Ljava/lang/String;" new="f_B"/>
   <field old="selections [I" new="f_m"/>
   <field old="serialVersionUID J" new="f_b"/>
  </class>
  <class old="net.java.otr4j.io.messages.QueryMessage" new="net.java.otr4j.io.messages.c_M">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="hashCode()I" new="hashCode"/>
   <field old="MESSAGE_ERROR I" new="MESSAGE_ERROR"/>
   <field old="MESSAGE_PLAINTEXT I" new="MESSAGE_PLAINTEXT"/>
   <field old="MESSAGE_QUERY I" new="MESSAGE_QUERY"/>
   <field old="messageType I" new="f_m"/>
   <field old="versions Ljava/util/List;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.util.collections.AbstractEmptyIterator" new="org.jivesoftware.smack.util.collections.c_M">
   <method old="add(Ljava/lang/Object;)V" new="m_AQ"/>
   <method old="getKey()Ljava/lang/Object;" new="m_xa"/>
   <method old="getValue()Ljava/lang/Object;" new="m_Ra"/>
   <method old="hasNext()Z" new="hasNext"/>
   <method old="hasPrevious()Z" new="m_sr"/>
   <method old="next()Ljava/lang/Object;" new="next"/>
   <method old="nextIndex()I" new="m_Oq"/>
   <method old="previous()Ljava/lang/Object;" new="m_ar"/>
   <method old="previousIndex()I" new="m_aP"/>
   <method old="remove()V" new="remove"/>
   <method old="reset()V" new="m_ld"/>
   <method old="set(Ljava/lang/Object;)V" new="m_dr"/>
   <method old="setValue(Ljava/lang/Object;)Ljava/lang/Object;" new="m_Xa"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.login.LoginContext$ContextedCallbackHandler$1" new="wy.c_Pa">
   <method old="run()Ljava/lang/Object;" new="run"/>
   <method old="run()Ljava/lang/Void;" new="m_sA"/>
   <field old="this$1 Lorg/apache/harmony/javax/security/auth/login/LoginContext$ContextedCallbackHandler;" new="f_e"/>
   <field old="val$callbacks [Lorg/apache/harmony/javax/security/auth/callback/Callback;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.packet.XMPPError$Type" new="org.jivesoftware.smack.packet.XMPPError$Type">
   <method old="valueOf(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/XMPPError$Type;" new="valueOf"/>
   <method old="values()[Lorg/jivesoftware/smack/packet/XMPPError$Type;" new="values"/>
   <field old="$VALUES [Lorg/jivesoftware/smack/packet/XMPPError$Type;" new="f_m"/>
   <field old="AUTH Lorg/jivesoftware/smack/packet/XMPPError$Type;" new="f_b"/>
   <field old="CANCEL Lorg/jivesoftware/smack/packet/XMPPError$Type;" new="f_B"/>
   <field old="CONTINUE Lorg/jivesoftware/smack/packet/XMPPError$Type;" new="f_j"/>
   <field old="MODIFY Lorg/jivesoftware/smack/packet/XMPPError$Type;" new="f_d"/>
   <field old="WAIT Lorg/jivesoftware/smack/packet/XMPPError$Type;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.PrivateData" new="org.jivesoftware.smackx.packet.c_H">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
  </class>
  <class old="com.xabber.android.data.account.OnAccountOnlineListener" new="com.xabber.android.data.account.c_f">
   <method old="onAccountOnline(Lcom/xabber/android/data/account/AccountItem;)V" new="m_kC"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IBBInputStream" new="org.jivesoftware.smackx.bytestreams.ibb.c_J">
   <method old="access$400(Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamSession$IBBInputStream;)I" new="m_oO"/>
   <method old="access$402(Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamSession$IBBInputStream;I)I" new="m_bO"/>
   <method old="access$500(Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamSession$IBBInputStream;)V" new="m_om"/>
   <method old="access$600(Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamSession$IBBInputStream;)V" new="m_mm"/>
   <method old="access$700(Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamSession$IBBInputStream;)Z" new="m_fm"/>
   <method old="checkClosed()V" new="m_mO"/>
   <method old="cleanup()V" new="m_wD"/>
   <method old="close()V" new="close"/>
   <method old="closeInternal()V" new="m_tO"/>
   <method old="getDataPacketFilter()Lorg/jivesoftware/smack/filter/PacketFilter;" new="m_bM"/>
   <method old="getDataPacketListener()Lorg/jivesoftware/smack/PacketListener;" new="m_jN"/>
   <method old="loadBuffer()Z" new="m_NM"/>
   <method old="markSupported()Z" new="markSupported"/>
   <method old="read()I" new="read"/>
   <method old="read([B)I" new="read"/>
   <method old="read([BII)I" new="read"/>
   <field old="buffer [B" new="f_k"/>
   <field old="bufferPointer I" new="f_B"/>
   <field old="closeInvoked Z" new="f_f"/>
   <field old="dataPacketListener Lorg/jivesoftware/smack/PacketListener;" new="f_d"/>
   <field old="dataQueue Ljava/util/concurrent/BlockingQueue;" new="f_e"/>
   <field old="isClosed Z" new="f_m"/>
   <field old="readTimeout I" new="f_j"/>
   <field old="seq J" new="f_l"/>
   <field old="this$0 Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamSession;" new="f_b"/>
  </class>
  <class old="org.xbill.DNS.ExtendedResolver$Resolution" new="org.xbill.DNS.c_wa">
   <method old="handleException(Ljava/lang/Object;Ljava/lang/Exception;)V" new="m_i"/>
   <method old="receiveMessage(Ljava/lang/Object;Lorg/xbill/DNS/Message;)V" new="m_l"/>
   <method old="send(I)V" new="m_gj"/>
   <method old="start()Lorg/xbill/DNS/Message;" new="m_kG"/>
   <method old="startAsync(Lorg/xbill/DNS/ResolverListener;)V" new="m_Hh"/>
   <field old="done Z" new="f_f"/>
   <field old="inprogress [Ljava/lang/Object;" new="f_e"/>
   <field old="listener Lorg/xbill/DNS/ResolverListener;" new="f_d"/>
   <field old="outstanding I" new="f_m"/>
   <field old="query Lorg/xbill/DNS/Message;" new="f_j"/>
   <field old="resolvers [Lorg/xbill/DNS/Resolver;" new="f_B"/>
   <field old="response Lorg/xbill/DNS/Message;" new="f_l"/>
   <field old="retries I" new="f_k"/>
   <field old="sent [I" new="f_b"/>
   <field old="thrown Ljava/lang/Throwable;" new="f_I"/>
  </class>
  <class old="com.xabber.android.data.extension.ssn.SSNManager" new="com.xabber.android.data.extension.ssn.c_E">
   <method old="getInstance()Lcom/xabber/android/data/extension/ssn/SSNManager;" new="m_Xr"/>
   <method old="getOtrMode(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/xabber/xmpp/archive/OtrMode;" new="m_zga"/>
   <method old="isAccepted(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/xabber/xmpp/ssn/Feature;)Z" new="m_jHa"/>
   <method old="onAccountRemoved(Lcom/xabber/android/data/account/AccountItem;)V" new="m_kb"/>
   <method old="onFormReceived(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/xabber/xmpp/ssn/Feature;)V" new="m_oga"/>
   <method old="onPacket(Lcom/xabber/android/data/connection/ConnectionItem;Ljava/lang/String;Lorg/jivesoftware/smack/packet/Packet;)V" new="m_tC"/>
   <method old="onResultReceived(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/xabber/xmpp/ssn/Feature;)V" new="m_lHa"/>
   <method old="onSubmitReceived(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/xabber/xmpp/ssn/Feature;)V" new="m_tGa"/>
   <method old="onTerminateReceived(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_HIa"/>
   <method old="sendFeature(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/xabber/xmpp/ssn/Feature;)V" new="m_Vha"/>
   <method old="setSessionOtrMode(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/xabber/xmpp/archive/OtrMode;)V" new="m_hIa"/>
   <field old="instance Lcom/xabber/android/data/extension/ssn/SSNManager;" new="f_b"/>
   <field old="sessionOtrs Lcom/xabber/android/data/entity/NestedMap;" new="f_m"/>
   <field old="sessionStates Lcom/xabber/android/data/entity/NestedMap;" new="f_e"/>
  </class>
  <class old="net.java.otr4j.io.messages.AbstractMessage" new="net.java.otr4j.io.messages.c_A">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="hashCode()I" new="hashCode"/>
   <field old="MESSAGE_ERROR I" new="MESSAGE_ERROR"/>
   <field old="MESSAGE_PLAINTEXT I" new="MESSAGE_PLAINTEXT"/>
   <field old="MESSAGE_QUERY I" new="MESSAGE_QUERY"/>
   <field old="messageType I" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.NSEC3PARAMRecord" new="org.xbill.DNS.c_Ea">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getFlags()I" new="m_JG"/>
   <method old="getHashAlgorithm()I" new="m_EI"/>
   <method old="getIterations()I" new="m_IH"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getSalt()[B" new="m_qg"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="hashName(Lorg/xbill/DNS/Name;)[B" new="m_Yh"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="dclass I" new="f_m"/>
   <field old="flags I" new="f_e"/>
   <field old="hashAlg I" new="f_d"/>
   <field old="iterations I" new="f_j"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="salt [B" new="f_b"/>
   <field old="serialVersionUID J" new="f_B"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smack.util.ObservableReader" new="org.jivesoftware.smack.util.c_J">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="addReaderListener(Lorg/jivesoftware/smack/util/ReaderListener;)V" new="m_Ku"/>
   <method old="close()V" new="close"/>
   <method old="mark(I)V" new="mark"/>
   <method old="markSupported()Z" new="markSupported"/>
   <method old="read()I" new="read"/>
   <method old="read([C)I" new="read"/>
   <method old="read([CII)I" new="read"/>
   <method old="ready()Z" new="ready"/>
   <method old="removeReaderListener(Lorg/jivesoftware/smack/util/ReaderListener;)V" new="m_bU"/>
   <method old="reset()V" new="reset"/>
   <method old="skip(J)J" new="skip"/>
   <field old="listeners Ljava/util/List;" new="f_m"/>
   <field old="wrappedReader Ljava/io/Reader;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smack.PacketListener" new="org.jivesoftware.smack.c_E">
   <method old="processPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_C"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.LastActivity$Provider" new="org.jivesoftware.smackx.packet.c_T">
   <method old="parseIQ(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/IQ;" new="m_g"/>
  </class>
  <class old="com.xabber.android.data.extension.avatar.BaseShortcutHelper" new="wy.c_qd">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getLauncherLargeIconSize()I" new="m_Xga"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.modes.SICBlockCipher" new="wy.c_cd">
   <method old="getAlgorithmName()Ljava/lang/String;" new="m_Bc"/>
   <method old="getBlockSize()I" new="m_bA"/>
   <method old="getUnderlyingCipher()Lnet/java/otr4j/bouncycastle/crypto/BlockCipher;" new="m_xz"/>
   <method old="init(ZLnet/java/otr4j/bouncycastle/crypto/CipherParameters;)V" new="m_Hd"/>
   <method old="processBlock([BI[BI)I" new="m_UB"/>
   <method old="reset()V" new="m_ld"/>
   <field old="IV [B" new="f_b"/>
   <field old="blockSize I" new="f_m"/>
   <field old="cipher Lnet/java/otr4j/bouncycastle/crypto/BlockCipher;" new="f_d"/>
   <field old="counter [B" new="f_B"/>
   <field old="counterOut [B" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.extension.attention.AttentionManager" new="wy.c_lA">
   <method old="access$000()Ljava/lang/Object;" new="m_Jf"/>
   <method old="access$100(Lcom/xabber/android/data/extension/attention/AttentionManager;)V" new="m_oha"/>
   <method old="getInstance()Lcom/xabber/android/data/extension/attention/AttentionManager;" new="m_Xr"/>
   <method old="onLoad()V" new="m_pA"/>
   <method old="onLoaded()V" new="m_Kea"/>
   <method old="onPacket(Lcom/xabber/android/data/connection/ConnectionItem;Ljava/lang/String;Lorg/jivesoftware/smack/packet/Packet;)V" new="m_tC"/>
   <method old="onSettingsChanged()V" new="m_Fia"/>
   <method old="removeAccountNotifications(Ljava/lang/String;Ljava/lang/String;)V" new="m_rIa"/>
   <method old="sendAttention(Ljava/lang/String;Ljava/lang/String;)V" new="m_cha"/>
   <field old="attentionRequestProvider Lcom/xabber/android/data/notification/EntityNotificationProvider;" new="f_m"/>
   <field old="enabledLock Ljava/lang/Object;" new="f_e"/>
   <field old="instance Lcom/xabber/android/data/extension/attention/AttentionManager;" new="f_b"/>
  </class>
  <class old="com.xabber.xmpp.archive.AbstractSettings" new="com.xabber.xmpp.archive.c_w">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getExpire()Ljava/lang/Integer;" new="m_Fg"/>
   <method old="getOtr()Lcom/xabber/xmpp/archive/OtrMode;" new="m_DAa"/>
   <method old="getSave()Lcom/xabber/xmpp/archive/SaveMode;" new="m_Fca"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="serializeAttributes(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_SAa"/>
   <method old="setExpire(Ljava/lang/Integer;)V" new="m_zAa"/>
   <method old="setOtr(Lcom/xabber/xmpp/archive/OtrMode;)V" new="m_Iba"/>
   <method old="setSave(Lcom/xabber/xmpp/archive/SaveMode;)V" new="m_hca"/>
   <field old="EXPIRE_ATTRIBUTE Ljava/lang/String;" new="f_e"/>
   <field old="OTR_ATTRIBUTE Ljava/lang/String;" new="f_m"/>
   <field old="SAVE_ATTRIBUTE Ljava/lang/String;" new="f_B"/>
   <field old="expire Ljava/lang/Integer;" new="f_d"/>
   <field old="otr Lcom/xabber/xmpp/archive/OtrMode;" new="f_j"/>
   <field old="save Lcom/xabber/xmpp/archive/SaveMode;" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.notification.BaseAccountNotificationProvider" new="wy.c_gc">
   <method old="add(Lcom/xabber/android/data/notification/NotificationItem;Ljava/lang/Boolean;)V" new="m_rga"/>
   <method old="canClearNotifications()Z" new="m_ab"/>
   <method old="clearAccountNotifications(Ljava/lang/String;)V" new="m_uC"/>
   <method old="clearNotifications()V" new="m_TC"/>
   <method old="get(Ljava/lang/String;)Lcom/xabber/android/data/notification/AccountNotificationItem;" new="m_yda"/>
   <method old="getIcon()I" new="m_qb"/>
   <method old="getNotifications()Ljava/util/Collection;" new="m_Tc"/>
   <method old="getSound()Landroid/net/Uri;" new="m_Qc"/>
   <method old="getStreamType()I" new="m_Xc"/>
   <method old="remove(Lcom/xabber/android/data/notification/NotificationItem;)Z" new="m_lha"/>
   <method old="remove(Ljava/lang/String;)Z" new="m_Tfa"/>
   <method old="setCanClearNotifications(Z)V" new="m_xha"/>
   <field old="items Ljava/util/Collection;" new="f_e"/>
  </class>
  <class old="org.xbill.DNS.PTRRecord" new="org.xbill.DNS.c_O">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getSingleName()Lorg/xbill/DNS/Name;" new="m_NH"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getTarget()Lorg/xbill/DNS/Name;" new="m_ff"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="serialVersionUID J" new="f_m"/>
   <field old="singleName Lorg/xbill/DNS/Name;" new="f_m"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="com.xabber.android.ui.helper.SingleActivity" new="com.xabber.android.ui.helper.SingleActivity">
   <method old="onAccountsChanged(Ljava/util/Collection;)V" new="m_vB"/>
   <method old="onActivityResult(IILandroid/content/Intent;)V" new="onActivityResult"/>
   <method old="onCreate(Landroid/os/Bundle;)V" new="onCreate"/>
   <method old="onDestroy()V" new="onDestroy"/>
   <method old="onNewIntent(Landroid/content/Intent;)V" new="onNewIntent"/>
   <method old="onPause()V" new="onPause"/>
   <method old="onResume()V" new="onResume"/>
   <method old="startActivity(Landroid/content/Intent;)V" new="startActivity"/>
   <method old="startActivityForResult(Landroid/content/Intent;I)V" new="startActivityForResult"/>
   <field old="launched Ljava/util/Map;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.DNSOutput" new="org.xbill.DNS.c_WB">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="check(JI)V" new="m_HH"/>
   <method old="current()I" new="m_eG"/>
   <method old="jump(I)V" new="m_SH"/>
   <method old="need(I)V" new="m_OG"/>
   <method old="restore()V" new="m_WH"/>
   <method old="save()V" new="m_mI"/>
   <method old="toByteArray()[B" new="m_gI"/>
   <method old="writeByteArray([B)V" new="m_qi"/>
   <method old="writeByteArray([BII)V" new="m_FI"/>
   <method old="writeCountedString([B)V" new="m_ph"/>
   <method old="writeU16(I)V" new="m_UH"/>
   <method old="writeU16At(II)V" new="m_qH"/>
   <method old="writeU32(J)V" new="m_Ti"/>
   <method old="writeU8(I)V" new="m_Bj"/>
   <field old="array [B" new="f_m"/>
   <field old="pos I" new="f_b"/>
   <field old="saved_pos I" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smack.ConnectionConfiguration$1" new="org.jivesoftware.smack.c_W">
   <method old="onInvalidChain([Ljava/security/cert/X509Certificate;Ljava/security/cert/CertificateException;)Z" new="m_wB"/>
   <method old="onInvalidTarget(Ljava/security/cert/X509Certificate;Ljava/security/cert/CertificateException;)Z" new="m_BA"/>
   <method old="onSelfSigned(Ljava/security/cert/X509Certificate;Ljava/security/cert/CertificateException;)Z" new="m_Zc"/>
   <method old="onValid([Ljava/security/cert/X509Certificate;)Z" new="m_LC"/>
   <field old="this$0 Lorg/jivesoftware/smack/ConnectionConfiguration;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.filter.ToContainsFilter" new="wy.c_ja">
   <method old="accept(Lorg/jivesoftware/smack/packet/Packet;)Z" new="m_x"/>
   <field old="to Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.MultipleAddresses$Address" new="org.jivesoftware.smackx.packet.c_s">
   <method old="access$100(Lorg/jivesoftware/smackx/packet/MultipleAddresses$Address;Ljava/lang/String;)V" new="m_vL"/>
   <method old="access$200(Lorg/jivesoftware/smackx/packet/MultipleAddresses$Address;Ljava/lang/String;)V" new="m_uk"/>
   <method old="access$300(Lorg/jivesoftware/smackx/packet/MultipleAddresses$Address;Ljava/lang/String;)V" new="m_pl"/>
   <method old="access$400(Lorg/jivesoftware/smackx/packet/MultipleAddresses$Address;Z)V" new="m_wJ"/>
   <method old="access$500(Lorg/jivesoftware/smackx/packet/MultipleAddresses$Address;Ljava/lang/String;)V" new="m_fk"/>
   <method old="access$600(Lorg/jivesoftware/smackx/packet/MultipleAddresses$Address;)Ljava/lang/String;" new="m_OJ"/>
   <method old="getDescription()Ljava/lang/String;" new="m_XK"/>
   <method old="getJid()Ljava/lang/String;" new="m_tL"/>
   <method old="getNode()Ljava/lang/String;" new="m_Ol"/>
   <method old="getType()Ljava/lang/String;" new="m_b"/>
   <method old="getUri()Ljava/lang/String;" new="m_rk"/>
   <method old="isDelivered()Z" new="m_MK"/>
   <method old="setDelivered(Z)V" new="m_aK"/>
   <method old="setDescription(Ljava/lang/String;)V" new="m_Sl"/>
   <method old="setJid(Ljava/lang/String;)V" new="m_AJ"/>
   <method old="setNode(Ljava/lang/String;)V" new="m_kJ"/>
   <method old="setUri(Ljava/lang/String;)V" new="m_Mk"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="delivered Z" new="f_b"/>
   <field old="description Ljava/lang/String;" new="f_m"/>
   <field old="jid Ljava/lang/String;" new="f_d"/>
   <field old="node Ljava/lang/String;" new="f_j"/>
   <field old="type Ljava/lang/String;" new="f_e"/>
   <field old="uri Ljava/lang/String;" new="f_B"/>
  </class>
  <class old="com.xabber.android.data.extension.capability.DiscoverInfoRequest" new="com.xabber.android.data.extension.capability.c_A">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="compareTo(Lcom/xabber/android/data/entity/BaseEntity;)I" new="m_bCa"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="equals(Ljava/lang/String;Ljava/lang/String;)Z" new="m_Bba"/>
   <method old="getAccount()Ljava/lang/String;" new="m_FC"/>
   <method old="getCapability()Lcom/xabber/android/data/extension/capability/Capability;" new="m_Sha"/>
   <method old="getPacketId()Ljava/lang/String;" new="m_KIa"/>
   <method old="getUser()Ljava/lang/String;" new="m_TA"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="account Ljava/lang/String;" new="f_m"/>
   <field old="capability Lcom/xabber/android/data/extension/capability/Capability;" new="f_m"/>
   <field old="packetId Ljava/lang/String;" new="f_b"/>
   <field old="user Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smack.util.collections.ResettableIterator" new="org.jivesoftware.smack.util.collections.ResettableIterator">
   <method old="reset()V" new="m_ld"/>
  </class>
  <class old="org.jivesoftware.smack.util.StringUtils" new="org.jivesoftware.smack.util.c_H">
   <method old="decodeBase64(Ljava/lang/String;)[B" new="m_Np"/>
   <method old="encodeBase64(Ljava/lang/String;)Ljava/lang/String;" new="m_br"/>
   <method old="encodeBase64([B)Ljava/lang/String;" new="m_Yq"/>
   <method old="encodeBase64([BIIZ)Ljava/lang/String;" new="m_Pr"/>
   <method old="encodeBase64([BZ)Ljava/lang/String;" new="m_Bp"/>
   <method old="encodeHex([B)Ljava/lang/String;" new="m_lp"/>
   <method old="escapeForXML(Ljava/lang/String;)Ljava/lang/String;" new="m_LR"/>
   <method old="escapeNode(Ljava/lang/String;)Ljava/lang/String;" new="m_yr"/>
   <method old="formatXEP0082Date(Ljava/util/Date;)Ljava/lang/String;" new="m_Hp"/>
   <method old="hash(Ljava/lang/String;)Ljava/lang/String;" new="m_gP"/>
   <method old="parseBareAddress(Ljava/lang/String;)Ljava/lang/String;" new="m_Gr"/>
   <method old="parseName(Ljava/lang/String;)Ljava/lang/String;" new="m_mR"/>
   <method old="parseResource(Ljava/lang/String;)Ljava/lang/String;" new="m_BP"/>
   <method old="parseServer(Ljava/lang/String;)Ljava/lang/String;" new="m_eq"/>
   <method old="parseXEP0082Date(Ljava/lang/String;)Ljava/util/Date;" new="m_LP"/>
   <method old="randomString(I)Ljava/lang/String;" new="m_EP"/>
   <method old="unescapeNode(Ljava/lang/String;)Ljava/lang/String;" new="m_Wp"/>
   <field old="AMP_ENCODE [C" new="f_d"/>
   <field old="APOS_ENCODE [C" new="f_l"/>
   <field old="GT_ENCODE [C" new="f_k"/>
   <field old="LT_ENCODE [C" new="f_f"/>
   <field old="QUOTE_ENCODE [C" new="f_m"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="f_B"/>
   <field old="digest Ljava/security/MessageDigest;" new="f_b"/>
   <field old="numbersAndLetters [C" new="f_j"/>
   <field old="randGen Ljava/util/Random;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.account.CommonState" new="com.xabber.android.data.account.CommonState">
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/android/data/account/CommonState;" new="valueOf"/>
   <method old="values()[Lcom/xabber/android/data/account/CommonState;" new="values"/>
   <field old="$VALUES [Lcom/xabber/android/data/account/CommonState;" new="f_e"/>
   <field old="connecting Lcom/xabber/android/data/account/CommonState;" new="f_j"/>
   <field old="disabled Lcom/xabber/android/data/account/CommonState;" new="f_l"/>
   <field old="empty Lcom/xabber/android/data/account/CommonState;" new="f_b"/>
   <field old="offline Lcom/xabber/android/data/account/CommonState;" new="f_m"/>
   <field old="online Lcom/xabber/android/data/account/CommonState;" new="f_d"/>
   <field old="roster Lcom/xabber/android/data/account/CommonState;" new="f_B"/>
   <field old="waiting Lcom/xabber/android/data/account/CommonState;" new="f_k"/>
  </class>
  <class old="org.xbill.DNS.SRVRecord" new="org.xbill.DNS.c_aa">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getPort()I" new="m_Jg"/>
   <method old="getPriority()I" new="m_iD"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getTarget()Lorg/xbill/DNS/Name;" new="m_ff"/>
   <method old="getType()I" new="m_b"/>
   <method old="getWeight()I" new="m_pF"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="port I" new="f_B"/>
   <field old="priority I" new="f_e"/>
   <field old="serialVersionUID J" new="f_b"/>
   <field old="target Lorg/xbill/DNS/Name;" new="f_k"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
   <field old="weight I" new="f_d"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.util.encoders.Translator" new="wy.c_j">
   <method old="decode([BII[BI)I" new="m_zc"/>
   <method old="encode([BII[BI)I" new="m_Ib"/>
   <method old="getDecodedBlockSize()I" new="m_ob"/>
   <method old="getEncodedBlockSize()I" new="m_Bb"/>
  </class>
  <class old="com.xabber.xmpp.vcard.AbstractTypedData" new="com.xabber.xmpp.vcard.c_f">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getTypes()Ljava/util/Set;" new="m_xg"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="writeBody(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_zy"/>
   <field old="types Ljava/util/Set;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.Gateway$GatewayPresenceListener" new="org.jivesoftware.smackx.c_N">
   <method old="processPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_C"/>
   <field old="this$0 Lorg/jivesoftware/smackx/Gateway;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.muc.HostedRoom" new="org.jivesoftware.smackx.muc.c_I">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getJid()Ljava/lang/String;" new="m_tL"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <field old="jid Ljava/lang/String;" new="f_m"/>
   <field old="name Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.extension.capability.CapabilitiesTable" new="com.xabber.android.data.extension.capability.c_J">
   <method old="clear()V" new="m_EA"/>
   <method old="create(Landroid/database/sqlite/SQLiteDatabase;)V" new="m_AB"/>
   <method old="getFeatures(Landroid/database/Cursor;)Ljava/util/Collection;" new="m_sga"/>
   <method old="getHash(Landroid/database/Cursor;)Ljava/lang/String;" new="m_sha"/>
   <method old="getInstance()Lcom/xabber/android/data/extension/capability/CapabilitiesTable;" new="m_Xr"/>
   <method old="getListOrder()Ljava/lang/String;" new="m_YDa"/>
   <method old="getName(Landroid/database/Cursor;)Ljava/lang/String;" new="m_qIa"/>
   <method old="getNode(Landroid/database/Cursor;)Ljava/lang/String;" new="m_lga"/>
   <method old="getProjection()[Ljava/lang/String;" new="m_AFa"/>
   <method old="getTableName()Ljava/lang/String;" new="m_dga"/>
   <method old="getType(Landroid/database/Cursor;)Ljava/lang/String;" new="m_yha"/>
   <method old="getVersion(Landroid/database/Cursor;)Ljava/lang/String;" new="m_OHa"/>
   <method old="list()Landroid/database/Cursor;" new="m_wEa"/>
   <method old="migrate(Landroid/database/sqlite/SQLiteDatabase;I)V" new="m_Cd"/>
   <method old="write(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V" new="m_oGa"/>
   <field old="NAME Ljava/lang/String;" new="f_e"/>
   <field old="PROJECTION [Ljava/lang/String;" new="f_B"/>
   <field old="databaseManager Lcom/xabber/android/data/DatabaseManager;" new="f_m"/>
   <field old="instance Lcom/xabber/android/data/extension/capability/CapabilitiesTable;" new="f_d"/>
   <field old="writeLock Ljava/lang/Object;" new="f_j"/>
   <field old="writeStatement Landroid/database/sqlite/SQLiteStatement;" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smackx.search.SimpleUserSearch" new="wy.c_N">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getItemsToSearch()Ljava/lang/String;" new="m_Kl"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getReportedData()Lorg/jivesoftware/smackx/ReportedData;" new="m_ZL"/>
   <method old="getSingleValue(Lorg/jivesoftware/smackx/FormField;)Ljava/lang/String;" new="m_Fl"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="parseItems(Lorg/xmlpull/v1/XmlPullParser;)V" new="m_jK"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setForm(Lorg/jivesoftware/smackx/Form;)V" new="m_cl"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="data Lorg/jivesoftware/smackx/ReportedData;" new="f_e"/>
   <field old="form Lorg/jivesoftware/smackx/Form;" new="f_m"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.RuntimeCryptoException" new="net.java.otr4j.bouncycastle.crypto.RuntimeCryptoException">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
  </class>
  <class old="com.xabber.android.data.connection.ConnectionManager$1" new="com.xabber.android.data.connection.c_Z">
   <method old="connectionCreated(Lorg/jivesoftware/smack/Connection;)V" new="m_q"/>
  </class>
  <class old="org.jivesoftware.smack.Roster$1" new="org.jivesoftware.smack.Roster$1">
   <method old="connectionClosed()V" new="m_r"/>
   <method old="connectionClosedOnError(Ljava/lang/Exception;)V" new="m_U"/>
   <method old="reconnectingIn(I)V" new="m_Z"/>
   <method old="reconnectionFailed(Ljava/lang/Exception;)V" new="m_S"/>
   <method old="reconnectionSuccessful()V" new="m_W"/>
   <field old="this$0 Lorg/jivesoftware/smack/Roster;" new="f_m"/>
  </class>
  <class old="com.xabber.android.service.XabberService" new="com.xabber.android.service.XabberService">
   <method old="changeForeground()V" new="m_Pea"/>
   <method old="createIntent(Landroid/content/Context;)Landroid/content/Intent;" new="m_yBa"/>
   <method old="getInstance()Lcom/xabber/android/service/XabberService;" new="m_Xr"/>
   <method old="onBind(Landroid/content/Intent;)Landroid/os/IBinder;" new="onBind"/>
   <method old="onCreate()V" new="onCreate"/>
   <method old="onDestroy()V" new="onDestroy"/>
   <method old="onStart(Landroid/content/Intent;I)V" new="onStart"/>
   <method old="startForegroundWrapper(Landroid/app/Notification;)V" new="m_wea"/>
   <method old="stopForegroundWrapper()V" new="m_IDa"/>
   <field old="instance Lcom/xabber/android/service/XabberService;" new="f_b"/>
   <field old="startForeground Ljava/lang/reflect/Method;" new="f_m"/>
   <field old="stopForeground Ljava/lang/reflect/Method;" new="f_e"/>
  </class>
  <class old="net.java.otr4j.session.SessionImpl$1" new="net.java.otr4j.session.c_M">
   <field old="$SwitchMap$net$java$otr4j$session$SessionStatus [I" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.vcard.ClassificationInflater" new="com.xabber.xmpp.vcard.c_t">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getInstance()Lcom/xabber/xmpp/vcard/ClassificationInflater;" new="m_Xr"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/VCard;)Z" new="m_dy"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <field old="instance Lcom/xabber/xmpp/vcard/ClassificationInflater;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.util.Base64" new="org.jivesoftware.smack.util.c_l">
   <method old="access$000(I)[B" new="m_Ju"/>
   <method old="access$100(I)[B" new="m_zR"/>
   <method old="access$200([BII[BII)[B" new="m_et"/>
   <method old="access$300([BI[BII)I" new="m_gU"/>
   <method old="access$400([B[BII)[B" new="m_Cs"/>
   <method old="decode(Ljava/lang/String;)[B" new="m_ru"/>
   <method old="decode(Ljava/lang/String;I)[B" new="m_Es"/>
   <method old="decode([BIII)[B" new="m_FU"/>
   <method old="decode4to3([BI[BII)I" new="m_Vt"/>
   <method old="decodeFileToFile(Ljava/lang/String;Ljava/lang/String;)V" new="m_ss"/>
   <method old="decodeFromFile(Ljava/lang/String;)[B" new="m_Ou"/>
   <method old="decodeToFile(Ljava/lang/String;Ljava/lang/String;)Z" new="m_Bs"/>
   <method old="decodeToObject(Ljava/lang/String;)Ljava/lang/Object;" new="m_Fs"/>
   <method old="encode3to4([BII[BII)[B" new="m_dU"/>
   <method old="encode3to4([B[BII)[B" new="m_oS"/>
   <method old="encodeBytes([B)Ljava/lang/String;" new="m_CS"/>
   <method old="encodeBytes([BI)Ljava/lang/String;" new="m_bs"/>
   <method old="encodeBytes([BII)Ljava/lang/String;" new="m_Ds"/>
   <method old="encodeBytes([BIII)Ljava/lang/String;" new="m_zu"/>
   <method old="encodeFileToFile(Ljava/lang/String;Ljava/lang/String;)V" new="m_nS"/>
   <method old="encodeFromFile(Ljava/lang/String;)Ljava/lang/String;" new="m_Is"/>
   <method old="encodeObject(Ljava/io/Serializable;)Ljava/lang/String;" new="m_ds"/>
   <method old="encodeObject(Ljava/io/Serializable;I)Ljava/lang/String;" new="m_Rs"/>
   <method old="encodeToFile([BLjava/lang/String;)Z" new="m_is"/>
   <method old="getAlphabet(I)[B" new="m_Ft"/>
   <method old="getDecodabet(I)[B" new="m_Zt"/>
   <method old="main([Ljava/lang/String;)V" new="main"/>
   <method old="usage(Ljava/lang/String;)V" new="m_zA"/>
   <field old="DECODE I" new="f_F"/>
   <field old="DONT_BREAK_LINES I" new="f_I"/>
   <field old="ENCODE I" new="f_j"/>
   <field old="EQUALS_SIGN B" new="f_H"/>
   <field old="EQUALS_SIGN_ENC B" new="f_f"/>
   <field old="GZIP I" new="f_l"/>
   <field old="MAX_LINE_LENGTH I" new="f_D"/>
   <field old="NEW_LINE B" new="f_M"/>
   <field old="NO_OPTIONS I" new="f_K"/>
   <field old="ORDERED I" new="f_k"/>
   <field old="PREFERRED_ENCODING Ljava/lang/String;" new="f_m"/>
   <field old="URL_SAFE I" new="f_g"/>
   <field old="WHITE_SPACE_ENC B" new="f_G"/>
   <field old="_ORDERED_ALPHABET [B" new="f_e"/>
   <field old="_ORDERED_DECODABET [B" new="f_B"/>
   <field old="_STANDARD_ALPHABET [B" new="f_J"/>
   <field old="_STANDARD_DECODABET [B" new="f_d"/>
   <field old="_URL_SAFE_ALPHABET [B" new="f_h"/>
   <field old="_URL_SAFE_DECODABET [B" new="f_b"/>
  </class>
  <class old="com.xabber.android.ui.LoadActivity" new="com.xabber.android.ui.LoadActivity">
   <method old="cancel()V" new="m_pk"/>
   <method old="createIntent(Landroid/content/Context;)Landroid/content/Intent;" new="m_yBa"/>
   <method old="onAccountsChanged(Ljava/util/Collection;)V" new="m_vB"/>
   <method old="onActivityResult(IILandroid/content/Intent;)V" new="onActivityResult"/>
   <method old="onCreate(Landroid/os/Bundle;)V" new="onCreate"/>
   <method old="onDestroy()V" new="onDestroy"/>
   <method old="onKeyDown(ILandroid/view/KeyEvent;)Z" new="onKeyDown"/>
   <method old="onNewIntent(Landroid/content/Intent;)V" new="onNewIntent"/>
   <method old="onPause()V" new="onPause"/>
   <method old="onResume()V" new="onResume"/>
   <method old="startActivity(Landroid/content/Intent;)V" new="startActivity"/>
   <method old="startActivityForResult(Landroid/content/Intent;I)V" new="startActivityForResult"/>
   <method old="update()V" new="m_fca"/>
   <field old="animation Landroid/view/animation/Animation;" new="f_e"/>
   <field old="disconnectedView Landroid/view/View;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.packet.IQ$Type" new="org.jivesoftware.smack.packet.c_g">
   <method old="fromString(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_tc"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="ERROR Lorg/jivesoftware/smack/packet/IQ$Type;" new="f_d"/>
   <field old="GET Lorg/jivesoftware/smack/packet/IQ$Type;" new="f_B"/>
   <field old="RESULT Lorg/jivesoftware/smack/packet/IQ$Type;" new="f_b"/>
   <field old="SET Lorg/jivesoftware/smack/packet/IQ$Type;" new="f_e"/>
   <field old="value Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.CapsVerListener" new="org.jivesoftware.smackx.c_H">
   <method old="capsVerUpdated(Ljava/lang/String;)V" new="m_Ya"/>
  </class>
  <class old="com.xabber.android.ui.helper.OrbotHelper" new="com.xabber.android.ui.helper.c_H">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="isOrbotInstalled()Z" new="m_CCa"/>
   <field old="URI_ORBOT Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.RelativeNameException" new="org.xbill.DNS.RelativeNameException">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
  </class>
  <class old="com.xabber.android.data.connection.OnConnectedListener" new="com.xabber.android.data.connection.c_M">
   <method old="onConnected(Lcom/xabber/android/data/connection/ConnectionItem;)V" new="m_sc"/>
  </class>
  <class old="org.jivesoftware.smack.filter.AndFilter" new="wy.c_ia">
   <method old="accept(Lorg/jivesoftware/smack/packet/Packet;)Z" new="m_x"/>
   <method old="addFilter(Lorg/jivesoftware/smack/filter/PacketFilter;)V" new="m_MT"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="filters Ljava/util/List;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.filetransfer.IncomingFileTransfer" new="org.jivesoftware.smackx.filetransfer.c_a">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="access$000(Lorg/jivesoftware/smackx/filetransfer/IncomingFileTransfer;)Ljava/io/InputStream;" new="m_hm"/>
   <method old="access$002(Lorg/jivesoftware/smackx/filetransfer/IncomingFileTransfer;Ljava/io/InputStream;)Ljava/io/InputStream;" new="m_pO"/>
   <method old="access$100(Lorg/jivesoftware/smackx/filetransfer/IncomingFileTransfer;)Ljava/io/InputStream;" new="m_ZN"/>
   <method old="access$200(Lorg/jivesoftware/smackx/filetransfer/IncomingFileTransfer;Lorg/jivesoftware/smack/XMPPException;)V" new="m_nn"/>
   <method old="access$300(Lorg/jivesoftware/smackx/filetransfer/IncomingFileTransfer;)Lorg/jivesoftware/smackx/filetransfer/FileTransferRequest;" new="m_Jn"/>
   <method old="cancel()V" new="m_pk"/>
   <method old="getAmountWritten()J" new="m_MM"/>
   <method old="getError()Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Error;" new="m_Hg"/>
   <method old="getException()Ljava/lang/Exception;" new="m_Tm"/>
   <method old="getFileName()Ljava/lang/String;" new="m_Hm"/>
   <method old="getFilePath()Ljava/lang/String;" new="m_CN"/>
   <method old="getFileSize()J" new="m_HO"/>
   <method old="getPeer()Ljava/lang/String;" new="m_vo"/>
   <method old="getProgress()D" new="m_Eo"/>
   <method old="getStatus()Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Status;" new="m_yL"/>
   <method old="getStreamID()Ljava/lang/String;" new="m_KM"/>
   <method old="handleXMPPException(Lorg/jivesoftware/smack/XMPPException;)V" new="m_Nn"/>
   <method old="isDone()Z" new="m_CO"/>
   <method old="negotiateStream()Ljava/io/InputStream;" new="m_Bo"/>
   <method old="recieveFile()Ljava/io/InputStream;" new="m_IN"/>
   <method old="recieveFile(Ljava/io/File;)V" new="m_sO"/>
   <method old="setError(Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Error;)V" new="m_fN"/>
   <method old="setException(Ljava/lang/Exception;)V" new="m_To"/>
   <method old="setFileInfo(Ljava/lang/String;J)V" new="m_eM"/>
   <method old="setFileInfo(Ljava/lang/String;Ljava/lang/String;J)V" new="m_qm"/>
   <method old="setStatus(Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Status;)V" new="m_km"/>
   <method old="updateStatus(Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Status;Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Status;)Z" new="m_cm"/>
   <method old="writeToStream(Ljava/io/InputStream;Ljava/io/OutputStream;)V" new="m_ho"/>
   <field old="amountWritten J" new="f_j"/>
   <field old="inputStream Ljava/io/InputStream;" new="f_e"/>
   <field old="negotiator Lorg/jivesoftware/smackx/filetransfer/FileTransferNegotiator;" new="f_m"/>
   <field old="recieveRequest Lorg/jivesoftware/smackx/filetransfer/FileTransferRequest;" new="f_m"/>
   <field old="streamID Ljava/lang/String;" new="f_k"/>
  </class>
  <class old="org.jivesoftware.smack.util.collections.DefaultMapEntry" new="org.jivesoftware.smack.util.collections.c_G">
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getKey()Ljava/lang/Object;" new="getKey"/>
   <method old="getValue()Ljava/lang/Object;" new="getValue"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="setValue(Ljava/lang/Object;)Ljava/lang/Object;" new="setValue"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="key Ljava/lang/Object;" new="f_e"/>
   <field old="value Ljava/lang/Object;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.helper.ManagedDialog" new="com.xabber.android.ui.helper.ManagedDialog">
   <method old="onAccept()V" new="m_WBa"/>
   <method old="onActivityResult(IILandroid/content/Intent;)V" new="onActivityResult"/>
   <method old="onCenter()V" new="m_Jca"/>
   <method old="onCreate(Landroid/os/Bundle;)V" new="onCreate"/>
   <method old="onDecline()V" new="m_Qca"/>
   <method old="onDestroy()V" new="onDestroy"/>
   <method old="onNewIntent(Landroid/content/Intent;)V" new="onNewIntent"/>
   <method old="onPause()V" new="onPause"/>
   <method old="onResume()V" new="onResume"/>
   <method old="setCustomView(Landroid/view/View;Z)V" new="m_LBa"/>
   <method old="setDialogMessage(I)V" new="m_Gca"/>
   <method old="setDialogMessage(Ljava/lang/CharSequence;)V" new="m_SCa"/>
   <method old="setDialogTitle(I)V" new="m_Kca"/>
   <method old="setDialogTitle(Ljava/lang/CharSequence;)V" new="m_VCa"/>
   <method old="startActivity(Landroid/content/Intent;)V" new="startActivity"/>
   <method old="startActivityForResult(Landroid/content/Intent;I)V" new="startActivityForResult"/>
  </class>
  <class old="org.jivesoftware.smack.debugger.ConsoleDebugger" new="wy.c_Ic">
   <method old="createDebug()V" new="m_Hma"/>
   <method old="createReaderListener()Lorg/jivesoftware/smack/util/ReaderListener;" new="m_YLa"/>
   <method old="createWriterListener()Lorg/jivesoftware/smack/util/WriterListener;" new="m_Noa"/>
   <method old="getReader()Ljava/io/Reader;" new="m_Sc"/>
   <method old="getReaderListener()Lorg/jivesoftware/smack/PacketListener;" new="m_Cb"/>
   <method old="getWriter()Ljava/io/Writer;" new="m_wA"/>
   <method old="getWriterListener()Lorg/jivesoftware/smack/PacketListener;" new="m_RA"/>
   <method old="newConnectionReader(Ljava/io/Reader;)Ljava/io/Reader;" new="m_mA"/>
   <method old="newConnectionWriter(Ljava/io/Writer;)Ljava/io/Writer;" new="m_Tb"/>
   <method old="userHasLogged(Ljava/lang/String;)V" new="m_Yc"/>
   <field old="connListener Lorg/jivesoftware/smack/ConnectionListener;" new="f_d"/>
   <field old="connection Lorg/jivesoftware/smack/Connection;" new="f_l"/>
   <field old="dateFormatter Ljava/text/SimpleDateFormat;" new="f_j"/>
   <field old="listener Lorg/jivesoftware/smack/PacketListener;" new="f_k"/>
   <field old="printInterpreted Z" new="f_e"/>
   <field old="reader Ljava/io/Reader;" new="f_b"/>
   <field old="readerListener Lorg/jivesoftware/smack/util/ReaderListener;" new="f_B"/>
   <field old="writer Ljava/io/Writer;" new="f_m"/>
   <field old="writerListener Lorg/jivesoftware/smack/util/WriterListener;" new="f_f"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.DiscoverInfo" new="org.jivesoftware.smackx.packet.c_ma">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="addFeature(Ljava/lang/String;)V" new="m_oK"/>
   <method old="addFeature(Lorg/jivesoftware/smackx/packet/DiscoverInfo$Feature;)V" new="m_Yl"/>
   <method old="addIdentity(Lorg/jivesoftware/smackx/packet/DiscoverInfo$Identity;)V" new="m_PJ"/>
   <method old="clone()Ljava/lang/Object;" new="clone"/>
   <method old="clone()Lorg/jivesoftware/smackx/packet/DiscoverInfo;" new="m_YJ"/>
   <method old="containsFeature(Ljava/lang/String;)Z" new="m_FJ"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFeatures()Ljava/util/Iterator;" new="m_hL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getIdentities()Ljava/util/Iterator;" new="m_BK"/>
   <method old="getNode()Ljava/lang/String;" new="m_Ol"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setNode(Ljava/lang/String;)V" new="m_kJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="features Ljava/util/List;" new="f_b"/>
   <field old="identities Ljava/util/List;" new="f_e"/>
   <field old="node Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.adapter.ChatComparator" new="com.xabber.android.ui.adapter.c_v">
   <method old="compare(Lcom/xabber/android/data/message/AbstractChat;Lcom/xabber/android/data/message/AbstractChat;)I" new="m_hAa"/>
   <method old="compare(Ljava/lang/Object;Ljava/lang/Object;)I" new="compare"/>
   <field old="CHAT_COMPARATOR Lcom/xabber/android/ui/adapter/ChatComparator;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.NodeInformationProvider" new="org.jivesoftware.smackx.c_E">
   <method old="getNodeFeatures()Ljava/util/List;" new="m_t"/>
   <method old="getNodeIdentities()Ljava/util/List;" new="m_s"/>
   <method old="getNodeItems()Ljava/util/List;" new="m_V"/>
  </class>
  <class old="net.java.otr4j.io.messages.DHKeyMessage" new="net.java.otr4j.io.messages.c_G">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="hashCode()I" new="hashCode"/>
   <field old="MESSAGE_DATA I" new="MESSAGE_DATA"/>
   <field old="MESSAGE_DHKEY I" new="MESSAGE_DHKEY"/>
   <field old="MESSAGE_DH_COMMIT I" new="MESSAGE_DH_COMMIT"/>
   <field old="MESSAGE_ERROR I" new="MESSAGE_ERROR"/>
   <field old="MESSAGE_PLAINTEXT I" new="MESSAGE_PLAINTEXT"/>
   <field old="MESSAGE_QUERY I" new="MESSAGE_QUERY"/>
   <field old="MESSAGE_REVEALSIG I" new="MESSAGE_REVEALSIG"/>
   <field old="MESSAGE_SIGNATURE I" new="MESSAGE_SIGNATURE"/>
   <field old="dhPublicKey Ljavax/crypto/interfaces/DHPublicKey;" new="f_m"/>
   <field old="messageType I" new="f_m"/>
   <field old="protocolVersion I" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smack.debugger.SmackDebugger" new="wy.c_C">
   <method old="getReader()Ljava/io/Reader;" new="m_Sc"/>
   <method old="getReaderListener()Lorg/jivesoftware/smack/PacketListener;" new="m_Cb"/>
   <method old="getWriter()Ljava/io/Writer;" new="m_wA"/>
   <method old="getWriterListener()Lorg/jivesoftware/smack/PacketListener;" new="m_RA"/>
   <method old="newConnectionReader(Ljava/io/Reader;)Ljava/io/Reader;" new="m_mA"/>
   <method old="newConnectionWriter(Ljava/io/Writer;)Ljava/io/Writer;" new="m_Tb"/>
   <method old="userHasLogged(Ljava/lang/String;)V" new="m_Yc"/>
  </class>
  <class old="org.jivesoftware.smack.util.collections.KeyValue" new="org.jivesoftware.smack.util.collections.c_A">
   <method old="getKey()Ljava/lang/Object;" new="getKey"/>
   <method old="getValue()Ljava/lang/Object;" new="getValue"/>
  </class>
  <class old="org.jivesoftware.smackx.MessageEventManager$1" new="org.jivesoftware.smackx.c_q">
   <method old="processPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_C"/>
   <field old="this$0 Lorg/jivesoftware/smackx/MessageEventManager;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.extension.archive.HeaderSequence" new="com.xabber.android.data.extension.archive.c_H">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="addHeaders(Ljava/util/Collection;)V" new="m_cia"/>
   <method old="getHeaderCount()I" new="m_pIa"/>
   <method old="getNext()Ljava/lang/String;" new="m_Ui"/>
   <method old="isHeadersReceived()Z" new="m_pga"/>
   <method old="isInProgress()Z" new="m_sGa"/>
   <method old="onHeadersReceived()V" new="m_kGa"/>
   <method old="peekHeader()Lcom/xabber/xmpp/archive/CollectionHeader;" new="m_xHa"/>
   <method old="pollHeader()Lcom/xabber/xmpp/archive/CollectionHeader;" new="m_bHa"/>
   <method old="reset()V" new="m_ld"/>
   <method old="setInProgress(Z)V" new="m_Pia"/>
   <method old="setNext(Ljava/lang/String;)V" new="m_rGa"/>
   <field old="headerCount I" new="f_e"/>
   <field old="headers Ljava/util/Queue;" new="f_b"/>
   <field old="inProgress Z" new="f_m"/>
   <field old="next Ljava/lang/String;" new="f_B"/>
   <field old="received Z" new="f_d"/>
  </class>
  <class old="de.measite.smack.Sasl" new="wy.c_nA">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createSaslClient([Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;)Lorg/apache/harmony/javax/security/sasl/SaslClient;" new="m_Ic"/>
   <method old="createSaslServer(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;)Lorg/apache/harmony/javax/security/sasl/SaslServer;" new="m_sB"/>
   <method old="getSaslClientFactories()Ljava/util/Enumeration;" new="m_MU"/>
   <method old="getSaslServerFactories()Ljava/util/Enumeration;" new="m_Iw"/>
   <field old="CLIENTFACTORYSRV Ljava/lang/String;" new="f_d"/>
   <field old="MAX_BUFFER Ljava/lang/String;" new="f_J"/>
   <field old="POLICY_FORWARD_SECRECY Ljava/lang/String;" new="f_b"/>
   <field old="POLICY_NOACTIVE Ljava/lang/String;" new="f_K"/>
   <field old="POLICY_NOANONYMOUS Ljava/lang/String;" new="f_j"/>
   <field old="POLICY_NODICTIONARY Ljava/lang/String;" new="f_k"/>
   <field old="POLICY_NOPLAINTEXT Ljava/lang/String;" new="f_f"/>
   <field old="POLICY_PASS_CREDENTIALS Ljava/lang/String;" new="f_B"/>
   <field old="QOP Ljava/lang/String;" new="f_m"/>
   <field old="RAW_SEND_SIZE Ljava/lang/String;" new="f_e"/>
   <field old="REUSE Ljava/lang/String;" new="f_D"/>
   <field old="SERVERFACTORYSRV Ljava/lang/String;" new="f_M"/>
   <field old="SERVER_AUTH Ljava/lang/String;" new="f_l"/>
   <field old="STRENGTH Ljava/lang/String;" new="f_I"/>
  </class>
  <class old="com.xabber.xmpp.address.Jid" new="wy.c_eC">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getBareAddress(Ljava/lang/String;)Ljava/lang/String;" new="m_ECa"/>
   <method old="getName(Ljava/lang/String;)Ljava/lang/String;" new="m_lBa"/>
   <method old="getResource(Ljava/lang/String;)Ljava/lang/String;" new="m_aBa"/>
   <method old="getServer(Ljava/lang/String;)Ljava/lang/String;" new="m_KCa"/>
   <method old="getStringPrep(Ljava/lang/String;)Ljava/lang/String;" new="m_XAa"/>
  </class>
  <class old="com.novell.sasl.client.DigestChallenge" new="com.novell.sasl.client.c_m">
   <method old="checkSemantics(Lcom/novell/sasl/client/DirectiveList;)V" new="m_pma"/>
   <method old="getAlgorithm()Ljava/lang/String;" new="m_Ne"/>
   <method old="getCharacterSet()Ljava/lang/String;" new="m_Xoa"/>
   <method old="getCipherOptions()I" new="m_Cna"/>
   <method old="getMaxBuf()I" new="m_Yoa"/>
   <method old="getNonce()Ljava/lang/String;" new="m_Ina"/>
   <method old="getQop()I" new="m_pna"/>
   <method old="getRealms()Ljava/util/ArrayList;" new="m_lOa"/>
   <method old="getStaleFlag()Z" new="m_Ima"/>
   <method old="handleAlgorithm(Lcom/novell/sasl/client/ParsedDirective;)V" new="m_FNa"/>
   <method old="handleCharset(Lcom/novell/sasl/client/ParsedDirective;)V" new="m_mma"/>
   <method old="handleCipher(Lcom/novell/sasl/client/ParsedDirective;)V" new="m_uLa"/>
   <method old="handleMaxbuf(Lcom/novell/sasl/client/ParsedDirective;)V" new="m_KOa"/>
   <method old="handleNonce(Lcom/novell/sasl/client/ParsedDirective;)V" new="m_NMa"/>
   <method old="handleQop(Lcom/novell/sasl/client/ParsedDirective;)V" new="m_YNa"/>
   <method old="handleRealm(Lcom/novell/sasl/client/ParsedDirective;)V" new="m_lna"/>
   <method old="handleStale(Lcom/novell/sasl/client/ParsedDirective;)V" new="m_MMa"/>
   <field old="CIPHER_3DES I" new="f_j"/>
   <field old="CIPHER_DES I" new="f_G"/>
   <field old="CIPHER_RC4 I" new="f_d"/>
   <field old="CIPHER_RC4_40 I" new="f_l"/>
   <field old="CIPHER_RC4_56 I" new="f_M"/>
   <field old="CIPHER_RECOGNIZED_MASK I" new="f_k"/>
   <field old="CIPHER_UNRECOGNIZED I" new="f_f"/>
   <field old="QOP_AUTH I" new="f_I"/>
   <field old="QOP_AUTH_CONF I" new="f_g"/>
   <field old="QOP_AUTH_INT I" new="f_b"/>
   <field old="QOP_UNRECOGNIZED I" new="f_B"/>
   <field old="m_algorithm Ljava/lang/String;" new="f_D"/>
   <field old="m_characterSet Ljava/lang/String;" new="f_K"/>
   <field old="m_cipherOptions I" new="f_m"/>
   <field old="m_maxBuf I" new="f_H"/>
   <field old="m_nonce Ljava/lang/String;" new="f_J"/>
   <field old="m_qop I" new="f_F"/>
   <field old="m_realms Ljava/util/ArrayList;" new="f_h"/>
   <field old="m_staleFlag Z" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.ChatStateExtension" new="org.jivesoftware.smackx.packet.c_Ka">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="getState()Lorg/jivesoftware/smackx/ChatState;" new="m_FK"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="state Lorg/jivesoftware/smackx/ChatState;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.proxy.Socks5ProxySocketFactory" new="org.jivesoftware.smack.proxy.c_E">
   <method old="createSocket(Ljava/lang/String;I)Ljava/net/Socket;" new="createSocket"/>
   <method old="createSocket(Ljava/lang/String;ILjava/net/InetAddress;I)Ljava/net/Socket;" new="createSocket"/>
   <method old="createSocket(Ljava/net/InetAddress;I)Ljava/net/Socket;" new="createSocket"/>
   <method old="createSocket(Ljava/net/InetAddress;ILjava/net/InetAddress;I)Ljava/net/Socket;" new="createSocket"/>
   <method old="fill(Ljava/io/InputStream;[BI)V" new="m_GS"/>
   <method old="socks5ProxifiedSocket(Ljava/lang/String;I)Ljava/net/Socket;" new="m_tR"/>
   <field old="proxy Lorg/jivesoftware/smack/proxy/ProxyInfo;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.ChatViewer" new="com.xabber.android.ui.ChatViewer">
   <method old="access$000(Lcom/xabber/android/ui/ChatViewer;)Ljava/lang/String;" new="m_CFa"/>
   <method old="access$100(Lcom/xabber/android/ui/ChatViewer;)Ljava/lang/String;" new="m_HEa"/>
   <method old="close()V" new="m_la"/>
   <method old="createAttentionRequestIntent(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;" new="m_MDa"/>
   <method old="createClearTopIntent(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;" new="m_Tea"/>
   <method old="createIntent(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;" new="m_CAa"/>
   <method old="createSendIntent(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;" new="m_mFa"/>
   <method old="exportChat(Lcom/xabber/android/ui/dialog/ExportChatDialogBuilder;)V" new="m_eDa"/>
   <method old="getAccount(Landroid/content/Intent;)Ljava/lang/String;" new="m_lCa"/>
   <method old="getUser(Landroid/content/Intent;)Ljava/lang/String;" new="m_NCa"/>
   <method old="hasAttention(Landroid/content/Intent;)Z" new="m_GEa"/>
   <method old="insertText(Ljava/lang/String;)V" new="m_Wfa"/>
   <method old="onAccept(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_Lc"/>
   <method old="onAccountsChanged(Ljava/util/Collection;)V" new="m_vB"/>
   <method old="onActivityResult(IILandroid/content/Intent;)V" new="onActivityResult"/>
   <method old="onCancel(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_Vb"/>
   <method old="onChatChanged(Ljava/lang/String;Ljava/lang/String;Z)V" new="m_Id"/>
   <method old="onClick(Landroid/view/View;)V" new="onClick"/>
   <method old="onContactsChanged(Ljava/util/Collection;)V" new="m_bd"/>
   <method old="onContextItemSelected(Landroid/view/MenuItem;)Z" new="onContextItemSelected"/>
   <method old="onCreate(Landroid/os/Bundle;)V" new="onCreate"/>
   <method old="onCreateContextMenu(Landroid/view/ContextMenu;Landroid/view/View;Landroid/view/ContextMenu$ContextMenuInfo;)V" new="onCreateContextMenu"/>
   <method old="onCreateDialog(I)Landroid/app/Dialog;" new="onCreateDialog"/>
   <method old="onDecline(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_ad"/>
   <method old="onDestroy()V" new="onDestroy"/>
   <method old="onEditorAction(Landroid/widget/TextView;ILandroid/view/KeyEvent;)Z" new="onEditorAction"/>
   <method old="onKey(Landroid/view/View;ILandroid/view/KeyEvent;)Z" new="onKey"/>
   <method old="onKeyDown(ILandroid/view/KeyEvent;)Z" new="onKeyDown"/>
   <method old="onNewIntent(Landroid/content/Intent;)V" new="onNewIntent"/>
   <method old="onOptionsItemSelected(Landroid/view/MenuItem;)Z" new="onOptionsItemSelected"/>
   <method old="onPause()V" new="onPause"/>
   <method old="onPrepareOptionsMenu(Landroid/view/Menu;)Z" new="onPrepareOptionsMenu"/>
   <method old="onResume()V" new="onResume"/>
   <method old="onSaveInstanceState(Landroid/os/Bundle;)V" new="onSaveInstanceState"/>
   <method old="onSelect()V" new="m_uc"/>
   <method old="onTextChanged(Landroid/widget/EditText;Ljava/lang/CharSequence;)V" new="m_Lb"/>
   <method old="onUnselect()V" new="m_rB"/>
   <method old="selectChat(Ljava/lang/String;Ljava/lang/String;)Z" new="m_bFa"/>
   <method old="sendMessage()V" new="m_MFa"/>
   <method old="sendMessage(Ljava/lang/String;)V" new="m_wm"/>
   <method old="startActivity(Landroid/content/Intent;)V" new="startActivity"/>
   <method old="startActivityForResult(Landroid/content/Intent;I)V" new="startActivityForResult"/>
   <field old="ACTION_ATTENTION Ljava/lang/String;" new="f_C"/>
   <field old="CONTEXT_MENU_COPY_ID I" new="f_h"/>
   <field old="CONTEXT_MENU_QUOTE_ID I" new="f_o"/>
   <field old="CONTEXT_MENU_REMOVE_ID I" new="f_H"/>
   <field old="CONTEXT_MENU_REPEAT_ID I" new="f_L"/>
   <field old="DIALOG_EXPORT_CHAT_ID I" new="f_G"/>
   <field old="MINIMUM_MESSAGES_TO_LOAD I" new="f_P"/>
   <field old="OPTION_MENU_CALL_ATTENTION_ID I" new="f_d"/>
   <field old="OPTION_MENU_CHAT_LIST_ID I" new="f_n"/>
   <field old="OPTION_MENU_CLEAR_HISTORY_ID I" new="f_D"/>
   <field old="OPTION_MENU_CLEAR_MESSAGE_ID I" new="f_J"/>
   <field old="OPTION_MENU_CLOSE_CHAT_ID I" new="f_Z"/>
   <field old="OPTION_MENU_EDIT_ROOM_ID I" new="f_l"/>
   <field old="OPTION_MENU_END_OTR_ID I" new="f_U"/>
   <field old="OPTION_MENU_EXPORT_CHAT_ID I" new="f_p"/>
   <field old="OPTION_MENU_JOIN_ROOM_ID I" new="f_M"/>
   <field old="OPTION_MENU_LEAVE_ROOM_ID I" new="f_m"/>
   <field old="OPTION_MENU_MUC_INVITE_ID I" new="f_I"/>
   <field old="OPTION_MENU_OCCUPANT_LIST_ID I" new="f_E"/>
   <field old="OPTION_MENU_REFRESH_OTR_ID I" new="f_a"/>
   <field old="OPTION_MENU_SETTINGS_ID I" new="f_b"/>
   <field old="OPTION_MENU_SHOW_HISTORY_ID I" new="f_B"/>
   <field old="OPTION_MENU_START_OTR_ID I" new="f_Y"/>
   <field old="OPTION_MENU_VERIFY_FINGERPRINT_ID I" new="f_u"/>
   <field old="OPTION_MENU_VERIFY_QUESTION_ID I" new="f_k"/>
   <field old="OPTION_MENU_VERIFY_SECRET_ID I" new="f_e"/>
   <field old="OPTION_MENU_VIEW_CONTACT_ID I" new="f_g"/>
   <field old="SAVED_ACCOUNT Ljava/lang/String;" new="f_A"/>
   <field old="SAVED_EXIT_ON_SEND Ljava/lang/String;" new="f_W"/>
   <field old="SAVED_USER Ljava/lang/String;" new="f_j"/>
   <field old="actionWithAccount Ljava/lang/String;" new="f_K"/>
   <field old="actionWithMessage Lcom/xabber/android/data/message/MessageItem;" new="f_c"/>
   <field old="actionWithUser Ljava/lang/String;" new="f_i"/>
   <field old="actionWithView Landroid/view/View;" new="f_R"/>
   <field old="chatViewerAdapter Lcom/xabber/android/ui/adapter/ChatViewerAdapter;" new="f_F"/>
   <field old="exitOnSend Z" new="f_f"/>
   <field old="isVisible Z" new="f_S"/>
   <field old="pageSwitcher Lcom/xabber/android/ui/widget/PageSwitcher;" new="f_y"/>
  </class>
  <class old="com.xabber.android.data.extension.time.TimeManager$1" new="wy.c_fC">
   <method old="connectionCreated(Lorg/jivesoftware/smack/Connection;)V" new="m_q"/>
  </class>
  <class old="com.xabber.android.data.connection.ConnectionState" new="com.xabber.android.data.connection.ConnectionState">
   <method old="getStringId()I" new="m_Fla"/>
   <method old="isConnectable()Z" new="m_pKa"/>
   <method old="isConnected()Z" new="m_ZS"/>
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/android/data/connection/ConnectionState;" new="valueOf"/>
   <method old="values()[Lcom/xabber/android/data/connection/ConnectionState;" new="values"/>
   <field old="$VALUES [Lcom/xabber/android/data/connection/ConnectionState;" new="f_b"/>
   <field old="authentication Lcom/xabber/android/data/connection/ConnectionState;" new="f_e"/>
   <field old="connected Lcom/xabber/android/data/connection/ConnectionState;" new="f_j"/>
   <field old="connecting Lcom/xabber/android/data/connection/ConnectionState;" new="f_d"/>
   <field old="offline Lcom/xabber/android/data/connection/ConnectionState;" new="f_m"/>
   <field old="waiting Lcom/xabber/android/data/connection/ConnectionState;" new="f_B"/>
  </class>
  <class old="org.jivesoftware.smack.util.Cache$LinkedListNode" new="org.jivesoftware.smack.util.c_G">
   <method old="remove()V" new="m_Tu"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="next Lorg/jivesoftware/smack/util/Cache$LinkedListNode;" new="f_m"/>
   <field old="object Ljava/lang/Object;" new="f_e"/>
   <field old="previous Lorg/jivesoftware/smack/util/Cache$LinkedListNode;" new="f_d"/>
   <field old="timestamp J" new="f_b"/>
  </class>
  <class old="com.xabber.xmpp.vcard.AbstractTypedDataWithValueProvider" new="com.xabber.xmpp.vcard.c_J">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="getTypes()[Ljava/lang/Enum;" new="m_xg"/>
   <method old="getValueName()Ljava/lang/String;" new="m_IZ"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/AbstractTypedData;)Z" new="m_caa"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/AbstractTypedDataWithValue;)Z" new="m_RX"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.DelayInfo" new="org.jivesoftware.smackx.packet.c_Ba">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="getReason()Ljava/lang/String;" new="m_zj"/>
   <method old="getStamp()Ljava/util/Date;" new="m_SJ"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setReason(Ljava/lang/String;)V" new="m_QJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="XEP_0091_UTC_FORMAT Ljava/text/DateFormat;" new="f_m"/>
   <field old="wrappedInfo Lorg/jivesoftware/smackx/packet/DelayInformation;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.ConnectionListener" new="org.jivesoftware.smack.c_H">
   <method old="connectionClosed()V" new="m_r"/>
   <method old="connectionClosedOnError(Ljava/lang/Exception;)V" new="m_U"/>
   <method old="reconnectingIn(I)V" new="m_Z"/>
   <method old="reconnectionFailed(Ljava/lang/Exception;)V" new="m_S"/>
   <method old="reconnectionSuccessful()V" new="m_W"/>
  </class>
  <class old="com.xabber.android.data.connection.ConnectionItem" new="com.xabber.android.data.connection.c_Q">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="disconnect(Lcom/xabber/android/data/connection/ConnectionThread;)V" new="m_Mka"/>
   <method old="forceReconnect()V" new="m_SKa"/>
   <method old="getConnectionSettings()Lcom/xabber/android/data/connection/ConnectionSettings;" new="m_oja"/>
   <method old="getConnectionThread()Lcom/xabber/android/data/connection/ConnectionThread;" new="m_Yla"/>
   <method old="getRealJid()Ljava/lang/String;" new="m_LLa"/>
   <method old="getState()Lcom/xabber/android/data/connection/ConnectionState;" new="m_FK"/>
   <method old="isConnectionAvailable(Z)Z" new="m_VKa"/>
   <method old="isManaged(Lcom/xabber/android/data/connection/ConnectionThread;)Z" new="m_zla"/>
   <method old="onAuthFailed()V" new="m_Fja"/>
   <method old="onAuthorized(Lcom/xabber/android/data/connection/ConnectionThread;)V" new="m_Jja"/>
   <method old="onClose(Lcom/xabber/android/data/connection/ConnectionThread;)V" new="m_ZKa"/>
   <method old="onConnected(Lcom/xabber/android/data/connection/ConnectionThread;)V" new="m_dka"/>
   <method old="onDisconnect(Lcom/xabber/android/data/connection/ConnectionThread;)Z" new="m_sja"/>
   <method old="onInvalidCertificate()V" new="m_bKa"/>
   <method old="onPasswordChanged(Ljava/lang/String;)V" new="m_JKa"/>
   <method old="onSRVResolved(Lcom/xabber/android/data/connection/ConnectionThread;)V" new="m_RLa"/>
   <method old="onSeeOtherHost(Lcom/xabber/android/data/connection/ConnectionThread;Ljava/lang/String;IZ)V" new="m_dla"/>
   <method old="updateConnection(Z)Z" new="m_Fka"/>
   <field old="connectionRequest Z" new="f_b"/>
   <field old="connectionSettings Lcom/xabber/android/data/connection/ConnectionSettings;" new="f_B"/>
   <field old="connectionThread Lcom/xabber/android/data/connection/ConnectionThread;" new="f_m"/>
   <field old="disconnectionRequested Z" new="f_e"/>
   <field old="state Lcom/xabber/android/data/connection/ConnectionState;" new="f_d"/>
  </class>
  <class old="com.xabber.android.ui.adapter.ChatViewerAdapter$ChatViewHolder" new="com.xabber.android.ui.adapter.c_I">
   <field old="avatar Landroid/widget/ImageView;" new="f_f"/>
   <field old="chatMessageAdapter Lcom/xabber/android/ui/adapter/ChatMessageAdapter;" new="f_m"/>
   <field old="input Landroid/widget/EditText;" new="f_d"/>
   <field old="list Landroid/widget/ListView;" new="f_B"/>
   <field old="nameHolder Landroid/view/View;" new="f_j"/>
   <field old="page Landroid/widget/TextView;" new="f_b"/>
   <field old="security Landroid/widget/ImageView;" new="f_k"/>
   <field old="send Landroid/view/View;" new="f_l"/>
   <field old="title Landroid/view/View;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.extension.otr.OTRManager" new="com.xabber.android.data.extension.otr.c_K">
   <method old="abortSmp(Ljava/lang/String;Ljava/lang/String;)V" new="m_aHa"/>
   <method old="access$000(Lcom/xabber/android/data/extension/otr/OTRManager;Lcom/xabber/android/data/entity/NestedNestedMaps;)V" new="m_NIa"/>
   <method old="addSMProgress(Ljava/lang/String;Ljava/lang/String;)V" new="m_qia"/>
   <method old="askForSecret(Lnet/java/otr4j/session/SessionID;Ljava/lang/String;)V" new="m_YC"/>
   <method old="endAllSessions()V" new="m_Gga"/>
   <method old="endSession(Ljava/lang/String;Ljava/lang/String;)V" new="m_Wga"/>
   <method old="finishedSessionMessage(Lnet/java/otr4j/session/SessionID;)V" new="m_rb"/>
   <method old="getFallbackMessage()Ljava/lang/String;" new="m_Nd"/>
   <method old="getInstance()Lcom/xabber/android/data/extension/otr/OTRManager;" new="m_Xr"/>
   <method old="getLocalFingerprint(Ljava/lang/String;)Ljava/lang/String;" new="m_vHa"/>
   <method old="getLocalFingerprintRaw(Lnet/java/otr4j/session/SessionID;)[B" new="m_gB"/>
   <method old="getLocalKeyPair(Ljava/lang/String;)Ljava/security/KeyPair;" new="m_Uha"/>
   <method old="getLocalKeyPair(Lnet/java/otr4j/session/SessionID;)Ljava/security/KeyPair;" new="m_tA"/>
   <method old="getOrCreateSession(Ljava/lang/String;Ljava/lang/String;)Lnet/java/otr4j/session/Session;" new="m_Hia"/>
   <method old="getRemoteFingerprint(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" new="m_zGa"/>
   <method old="getReplyForUnreadableMessage()Ljava/lang/String;" new="m_hB"/>
   <method old="getSecurityLevel(Ljava/lang/String;Ljava/lang/String;)Lcom/xabber/android/data/extension/otr/SecurityLevel;" new="m_Zia"/>
   <method old="getSessionPolicy(Lnet/java/otr4j/session/SessionID;)Lnet/java/otr4j/OtrPolicy;" new="m_GA"/>
   <method old="initSmp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_zIa"/>
   <method old="injectMessage(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_cGa"/>
   <method old="injectMessage(Lnet/java/otr4j/session/SessionID;Ljava/lang/String;)V" new="m_dd"/>
   <method old="isVerified(Ljava/lang/String;Ljava/lang/String;)Z" new="m_Tia"/>
   <method old="newAction(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/xabber/android/data/message/ChatAction;)V" new="m_DIa"/>
   <method old="onAccountAdded(Lcom/xabber/android/data/account/AccountItem;)V" new="m_NA"/>
   <method old="onAccountRemoved(Lcom/xabber/android/data/account/AccountItem;)V" new="m_kb"/>
   <method old="onClose()V" new="m_cc"/>
   <method old="onLoad()V" new="m_pA"/>
   <method old="onLoaded(Lcom/xabber/android/data/entity/NestedNestedMaps;)V" new="m_lGa"/>
   <method old="onSettingsChanged()V" new="m_Fia"/>
   <method old="refreshSession(Ljava/lang/String;Ljava/lang/String;)V" new="m_WHa"/>
   <method old="removeSMProgress(Ljava/lang/String;Ljava/lang/String;)V" new="m_MIa"/>
   <method old="removeSMRequest(Ljava/lang/String;Ljava/lang/String;)V" new="m_dHa"/>
   <method old="requestToWrite(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V" new="m_bIa"/>
   <method old="requireEncryptedMessage(Lnet/java/otr4j/session/SessionID;Ljava/lang/String;)V" new="m_LA"/>
   <method old="respondSmp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_oHa"/>
   <method old="sessionStatusChanged(Lnet/java/otr4j/session/SessionID;)V" new="m_xb"/>
   <method old="setVerify(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V" new="m_Aha"/>
   <method old="setVerify(Lnet/java/otr4j/session/SessionID;Z)V" new="m_sia"/>
   <method old="setVerifyWithoutNotification(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V" new="m_Uga"/>
   <method old="showError(Lnet/java/otr4j/session/SessionID;Ljava/lang/String;)V" new="m_CB"/>
   <method old="smpAborted(Lnet/java/otr4j/session/SessionID;)V" new="m_nb"/>
   <method old="smpError(Lnet/java/otr4j/session/SessionID;IZ)V" new="m_lA"/>
   <method old="startSession(Ljava/lang/String;Ljava/lang/String;)V" new="m_Gha"/>
   <method old="transformReceiving(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" new="m_wGa"/>
   <method old="transformSending(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" new="m_HGa"/>
   <method old="unencryptedMessageReceived(Lnet/java/otr4j/session/SessionID;Ljava/lang/String;)V" new="m_id"/>
   <method old="unreadableMessageReceived(Lnet/java/otr4j/session/SessionID;)V" new="m_Nb"/>
   <method old="unverify(Lnet/java/otr4j/session/SessionID;)V" new="m_EC"/>
   <method old="verify(Lnet/java/otr4j/session/SessionID;Z)V" new="m_VC"/>
   <field old="POLICIES Ljava/util/Map;" new="f_b"/>
   <field old="actives Lcom/xabber/android/data/entity/NestedMap;" new="f_e"/>
   <field old="fingerprints Lcom/xabber/android/data/entity/NestedNestedMaps;" new="f_j"/>
   <field old="finished Lcom/xabber/android/data/entity/NestedMap;" new="f_d"/>
   <field old="instance Lcom/xabber/android/data/extension/otr/OTRManager;" new="f_B"/>
   <field old="keyPairGenerator Ljava/util/concurrent/ExecutorService;" new="f_m"/>
   <field old="sessions Lcom/xabber/android/data/entity/NestedMap;" new="f_l"/>
   <field old="smProgressProvider Lcom/xabber/android/data/notification/EntityNotificationProvider;" new="f_f"/>
   <field old="smRequestProvider Lcom/xabber/android/data/notification/EntityNotificationProvider;" new="f_k"/>
  </class>
  <class old="org.jivesoftware.smackx.LastActivityManager$1" new="org.jivesoftware.smackx.c_v">
   <method old="connectionCreated(Lorg/jivesoftware/smack/Connection;)V" new="m_q"/>
  </class>
  <class old="org.jivesoftware.smackx.LastActivityManager$2" new="org.jivesoftware.smackx.c_Aa">
   <method old="processPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_C"/>
   <field old="this$0 Lorg/jivesoftware/smackx/LastActivityManager;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.LastActivityManager$3" new="org.jivesoftware.smackx.c_o">
   <method old="processPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_C"/>
   <field old="this$0 Lorg/jivesoftware/smackx/LastActivityManager;" new="f_m"/>
  </class>
  <class old="net.java.otr4j.session.AuthContextImpl" new="net.java.otr4j.session.c_G">
   <method old="access$000(Lnet/java/otr4j/session/AuthContextImpl;)I" new="m_Uz"/>
   <method old="access$100(Lnet/java/otr4j/session/AuthContextImpl;)[B" new="m_DX"/>
   <method old="access$1000(Lnet/java/otr4j/session/AuthContextImpl;)[B" new="m_GZ"/>
   <method old="access$200(Lnet/java/otr4j/session/AuthContextImpl;)[B" new="m_MY"/>
   <method old="access$300(Lnet/java/otr4j/session/AuthContextImpl;)I" new="m_Mz"/>
   <method old="access$400(Lnet/java/otr4j/session/AuthContextImpl;)[B" new="m_Vz"/>
   <method old="access$500(Lnet/java/otr4j/session/AuthContextImpl;)[B" new="m_gX"/>
   <method old="access$600(Lnet/java/otr4j/session/AuthContextImpl;)[B" new="m_oY"/>
   <method old="access$700(Lnet/java/otr4j/session/AuthContextImpl;)[B" new="m_Az"/>
   <method old="access$800(Lnet/java/otr4j/session/AuthContextImpl;)[B" new="m_mZ"/>
   <method old="access$900(Lnet/java/otr4j/session/AuthContextImpl;)[B" new="m_ky"/>
   <method old="getAuthenticationState()I" new="m_QY"/>
   <method old="getC()[B" new="m_vY"/>
   <method old="getCp()[B" new="m_ty"/>
   <method old="getIsSecure()Z" new="m_iB"/>
   <method old="getLocalDHKeyPair()Ljava/security/KeyPair;" new="m_cC"/>
   <method old="getLocalDHKeyPairID()I" new="m_VX"/>
   <method old="getLocalDHPublicKeyBytes()[B" new="m_uZ"/>
   <method old="getLocalDHPublicKeyEncrypted()[B" new="m_hZ"/>
   <method old="getLocalDHPublicKeyHash()[B" new="m_nY"/>
   <method old="getLocalLongTermKeyPair()Ljava/security/KeyPair;" new="m_OA"/>
   <method old="getM1()[B" new="m_sY"/>
   <method old="getM1p()[B" new="m_Oz"/>
   <method old="getM2()[B" new="m_fX"/>
   <method old="getM2p()[B" new="m_Ty"/>
   <method old="getProtocolVersion()I" new="m_taa"/>
   <method old="getR()[B" new="m_naa"/>
   <method old="getRemoteDHPublicKey()Ljavax/crypto/interfaces/DHPublicKey;" new="m_KA"/>
   <method old="getRemoteDHPublicKeyEncrypted()[B" new="m_IX"/>
   <method old="getRemoteDHPublicKeyHash()[B" new="m_Zy"/>
   <method old="getRemoteLongTermPublicKey()Ljava/security/PublicKey;" new="m_zC"/>
   <method old="getS()Ljava/math/BigInteger;" new="m_Qb"/>
   <method old="getSession()Lnet/java/otr4j/session/Session;" new="m_fZ"/>
   <method old="h2(B)[B" new="m_UY"/>
   <method old="handleDHCommitMessage(Lnet/java/otr4j/io/messages/DHCommitMessage;)V" new="m_Ay"/>
   <method old="handleDHKeyMessage(Lnet/java/otr4j/io/messages/DHKeyMessage;)V" new="m_paa"/>
   <method old="handleReceivingMessage(Lnet/java/otr4j/io/messages/AbstractMessage;)V" new="m_wb"/>
   <method old="handleRevealSignatureMessage(Lnet/java/otr4j/io/messages/RevealSignatureMessage;)V" new="m_pX"/>
   <method old="handleSignatureMessage(Lnet/java/otr4j/io/messages/SignatureMessage;)V" new="m_bz"/>
   <method old="reset()V" new="m_ld"/>
   <method old="respondV2Auth()V" new="m_XA"/>
   <method old="setAuthenticationState(I)V" new="m_UZ"/>
   <method old="setIsSecure(Ljava/lang/Boolean;)V" new="m_eX"/>
   <method old="setProtocolVersion(I)V" new="m_Oy"/>
   <method old="setRemoteDHPublicKey(Ljavax/crypto/interfaces/DHPublicKey;)V" new="m_lX"/>
   <method old="setRemoteDHPublicKeyEncrypted([B)V" new="m_IY"/>
   <method old="setRemoteDHPublicKeyHash([B)V" new="m_Fy"/>
   <method old="setRemoteLongTermPublicKey(Ljava/security/PublicKey;)V" new="m_KY"/>
   <method old="setSession(Lnet/java/otr4j/session/Session;)V" new="m_CY"/>
   <method old="startV2Auth()V" new="m_Mb"/>
   <field old="AWAITING_DHKEY I" new="f_j"/>
   <field old="AWAITING_REVEALSIG I" new="f_d"/>
   <field old="AWAITING_SIG I" new="f_m"/>
   <field old="C_START B" new="f_f"/>
   <field old="M1_START B" new="f_l"/>
   <field old="M1p_START B" new="f_I"/>
   <field old="M2_START B" new="f_b"/>
   <field old="M2p_START B" new="f_B"/>
   <field old="NONE I" new="f_e"/>
   <field old="V1_SETUP I" new="f_k"/>
   <field old="authenticationState I" new="f_l"/>
   <field old="c [B" new="f_B"/>
   <field old="cp [B" new="f_d"/>
   <field old="isSecure Ljava/lang/Boolean;" new="f_c"/>
   <field old="localDHKeyPair Ljava/security/KeyPair;" new="f_J"/>
   <field old="localDHPrivateKeyID I" new="f_b"/>
   <field old="localDHPublicKeyBytes [B" new="f_h"/>
   <field old="localDHPublicKeyEncrypted [B" new="f_C"/>
   <field old="localDHPublicKeyHash [B" new="f_A"/>
   <field old="localLongTermKeyPair Ljava/security/KeyPair;" new="f_I"/>
   <field old="logger Ljava/util/logging/Logger;" new="f_K"/>
   <field old="m1 [B" new="f_F"/>
   <field old="m1p [B" new="f_M"/>
   <field old="m2 [B" new="f_g"/>
   <field old="m2p [B" new="f_p"/>
   <field old="messageFactory Lnet/java/otr4j/session/AuthContextImpl$MessageFactory;" new="f_L"/>
   <field old="protocolVersion I" new="f_i"/>
   <field old="r [B" new="f_j"/>
   <field old="remoteDHPublicKey Ljavax/crypto/interfaces/DHPublicKey;" new="f_D"/>
   <field old="remoteDHPublicKeyEncrypted [B" new="f_G"/>
   <field old="remoteDHPublicKeyHash [B" new="f_f"/>
   <field old="remoteLongTermPublicKey Ljava/security/PublicKey;" new="f_E"/>
   <field old="s Ljava/math/BigInteger;" new="f_a"/>
   <field old="session Lnet/java/otr4j/session/Session;" new="f_H"/>
  </class>
  <class old="com.xabber.xmpp.archive.NextProvider" new="com.xabber.xmpp.archive.c_e">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/archive/Next;" new="m_ZZ"/>
   <method old="getInstance()Lcom/xabber/xmpp/archive/NextProvider;" new="m_Xr"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/archive/AbstractLink;)Lcom/xabber/xmpp/archive/AbstractLink;" new="m_UCa"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
   <field old="instance Lcom/xabber/xmpp/archive/NextProvider;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.MINFORecord" new="org.xbill.DNS.c_La">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getErrorAddress()Lorg/xbill/DNS/Name;" new="m_MG"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getResponsibleAddress()Lorg/xbill/DNS/Name;" new="m_XH"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="dclass I" new="f_m"/>
   <field old="errorAddress Lorg/xbill/DNS/Name;" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="responsibleAddress Lorg/xbill/DNS/Name;" new="f_e"/>
   <field old="serialVersionUID J" new="f_b"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smack.packet.RosterPacket$ItemType" new="org.jivesoftware.smack.packet.RosterPacket$ItemType">
   <method old="valueOf(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/RosterPacket$ItemType;" new="valueOf"/>
   <method old="values()[Lorg/jivesoftware/smack/packet/RosterPacket$ItemType;" new="values"/>
   <field old="$VALUES [Lorg/jivesoftware/smack/packet/RosterPacket$ItemType;" new="f_m"/>
   <field old="both Lorg/jivesoftware/smack/packet/RosterPacket$ItemType;" new="both"/>
   <field old="from Lorg/jivesoftware/smack/packet/RosterPacket$ItemType;" new="from"/>
   <field old="none Lorg/jivesoftware/smack/packet/RosterPacket$ItemType;" new="none"/>
   <field old="remove Lorg/jivesoftware/smack/packet/RosterPacket$ItemType;" new="remove"/>
   <field old="to Lorg/jivesoftware/smack/packet/RosterPacket$ItemType;" new="to"/>
  </class>
  <class old="com.xabber.android.ui.helper.BaseListEditor" new="com.xabber.android.ui.helper.BaseListEditor">
   <method old="createListAdapter()Lcom/xabber/android/ui/adapter/BaseListEditorAdapter;" new="m_mca"/>
   <method old="getActionWith()Ljava/lang/Object;" new="m_Aba"/>
   <method old="getAddIntent()Landroid/content/Intent;" new="m_DCa"/>
   <method old="getAddTextResourceId()I" new="m_Yba"/>
   <method old="getEditIntent(Ljava/lang/Object;)Landroid/content/Intent;" new="m_GBa"/>
   <method old="getRemoveConfirmation(Ljava/lang/Object;)Ljava/lang/String;" new="m_cda"/>
   <method old="getRemoveTextResourceId()I" new="m_HCa"/>
   <method old="getSavedValue(Landroid/os/Bundle;Ljava/lang/String;)Ljava/lang/Object;" new="m_dBa"/>
   <method old="onAccept(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_Lc"/>
   <method old="onAccountsChanged(Ljava/util/Collection;)V" new="m_vB"/>
   <method old="onActivityResult(IILandroid/content/Intent;)V" new="onActivityResult"/>
   <method old="onCancel(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_Vb"/>
   <method old="onContextItemSelected(Landroid/view/MenuItem;)Z" new="onContextItemSelected"/>
   <method old="onCreate(Landroid/os/Bundle;)V" new="onCreate"/>
   <method old="onCreateContextMenu(Landroid/view/ContextMenu;Landroid/view/View;Landroid/view/ContextMenu$ContextMenuInfo;)V" new="onCreateContextMenu"/>
   <method old="onCreateContextMenu(Landroid/view/ContextMenu;Ljava/lang/Object;)V" new="m_jAa"/>
   <method old="onCreateDialog(I)Landroid/app/Dialog;" new="onCreateDialog"/>
   <method old="onCreateOptionsMenu(Landroid/view/Menu;)Z" new="onCreateOptionsMenu"/>
   <method old="onDecline(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_ad"/>
   <method old="onDestroy()V" new="onDestroy"/>
   <method old="onInflate(Landroid/os/Bundle;)V" new="m_TBa"/>
   <method old="onItemClick(Landroid/widget/AdapterView;Landroid/view/View;IJ)V" new="onItemClick"/>
   <method old="onNewIntent(Landroid/content/Intent;)V" new="onNewIntent"/>
   <method old="onPause()V" new="onPause"/>
   <method old="onResume()V" new="onResume"/>
   <method old="onSaveInstanceState(Landroid/os/Bundle;)V" new="onSaveInstanceState"/>
   <method old="putSavedValue(Landroid/os/Bundle;Ljava/lang/String;Ljava/lang/Object;)V" new="m_ZCa"/>
   <method old="removeItem(Ljava/lang/Object;)V" new="m_Gda"/>
   <method old="startActivity(Landroid/content/Intent;)V" new="startActivity"/>
   <method old="startActivityForResult(Landroid/content/Intent;I)V" new="startActivityForResult"/>
   <field old="CONTEXT_MENU_DELETE_ID I" new="f_d"/>
   <field old="DIALOG_DELETE_ID I" new="f_B"/>
   <field old="OPTION_MENU_ADD_ID I" new="f_b"/>
   <field old="SAVED_ACTION_WITH Ljava/lang/String;" new="f_m"/>
   <field old="actionWith Ljava/lang/Object;" new="f_e"/>
   <field old="adapter Lcom/xabber/android/ui/adapter/BaseListEditorAdapter;" new="f_j"/>
  </class>
  <class old="org.jivesoftware.smack.PrivacyListManager$3$1" new="org.jivesoftware.smack.c_e">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="this$1 Lorg/jivesoftware/smack/PrivacyListManager$3;" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.vcard.Classification" new="com.xabber.xmpp.vcard.Classification">
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/xmpp/vcard/Classification;" new="valueOf"/>
   <method old="values()[Lcom/xabber/xmpp/vcard/Classification;" new="values"/>
   <field old="$VALUES [Lcom/xabber/xmpp/vcard/Classification;" new="f_e"/>
   <field old="CONFIDENTIAL Lcom/xabber/xmpp/vcard/Classification;" new="f_m"/>
   <field old="PRIVATE Lcom/xabber/xmpp/vcard/Classification;" new="f_d"/>
   <field old="PUBLIC Lcom/xabber/xmpp/vcard/Classification;" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smack.PacketReader$ListenerNotification" new="org.jivesoftware.smack.c_w">
   <method old="run()V" new="run"/>
   <field old="packet Lorg/jivesoftware/smack/packet/Packet;" new="f_m"/>
   <field old="this$0 Lorg/jivesoftware/smack/PacketReader;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.account.WLMManager" new="com.xabber.android.data.account.c_G">
   <method old="accessTokenOperation(Lcom/xabber/android/data/account/WLMManager$GrantType;Ljava/lang/String;)Lcom/xabber/android/data/account/OAuthResult;" new="m_bka"/>
   <method old="getAccountProtocol()Lcom/xabber/android/data/account/AccountProtocol;" new="m_uB"/>
   <method old="getInstance()Lcom/xabber/android/data/account/WLMManager;" new="m_Xr"/>
   <method old="getUrl()Ljava/lang/String;" new="m_nc"/>
   <method old="isValidUri(Landroid/net/Uri;)Z" new="m_Sb"/>
   <method old="requestAccessToken(Ljava/lang/String;)Lcom/xabber/android/data/account/OAuthResult;" new="m_rc"/>
   <method old="requestRefreshToken(Ljava/lang/String;)Ljava/lang/String;" new="m_SB"/>
   <field old="WLM_AUTHORITY Ljava/lang/String;" new="f_B"/>
   <field old="WLM_CLIENT_ID Ljava/lang/String;" new="f_e"/>
   <field old="WLM_CLIENT_SECRET Ljava/lang/String;" new="f_b"/>
   <field old="WLM_REDIRECT_PATH Ljava/lang/String;" new="f_d"/>
   <field old="WLM_REDIRECT_URL Ljava/lang/String;" new="f_j"/>
   <field old="WLM_SCHEME Ljava/lang/String;" new="f_k"/>
   <field old="WLM_SCOPE Ljava/lang/String;" new="f_m"/>
   <field old="instance Lcom/xabber/android/data/account/WLMManager;" new="f_l"/>
  </class>
  <class old="com.xabber.android.data.connection.ConnectionThread$1" new="com.xabber.android.data.connection.c_Y">
   <method old="newThread(Ljava/lang/Runnable;)Ljava/lang/Thread;" new="newThread"/>
   <field old="this$0 Lcom/xabber/android/data/connection/ConnectionThread;" new="f_m"/>
   <field old="val$connectionItem Lcom/xabber/android/data/connection/ConnectionItem;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.connection.ConnectionThread$2" new="com.xabber.android.data.connection.c_C">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/connection/ConnectionThread;" new="f_m"/>
   <field old="val$defaultHost Ljava/lang/String;" new="f_d"/>
   <field old="val$defaultPort I" new="f_b"/>
   <field old="val$fqdn Ljava/lang/String;" new="f_e"/>
   <field old="val$records [Lorg/xbill/DNS/Record;" new="f_B"/>
  </class>
  <class old="org.xbill.DNS.ResolveThread" new="org.xbill.DNS.ResolveThread">
   <method old="run()V" new="run"/>
   <field old="id Ljava/lang/Object;" new="f_m"/>
   <field old="listener Lorg/xbill/DNS/ResolverListener;" new="f_d"/>
   <field old="query Lorg/xbill/DNS/Message;" new="f_e"/>
   <field old="res Lorg/xbill/DNS/Resolver;" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.connection.ConnectionThread$3" new="com.xabber.android.data.connection.c_i">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/connection/ConnectionThread;" new="f_b"/>
   <field old="val$defaultHost Ljava/lang/String;" new="f_e"/>
   <field old="val$defaultPort I" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.connection.ConnectionThread$4" new="com.xabber.android.data.connection.c_b">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/connection/ConnectionThread;" new="f_b"/>
   <field old="val$fqdn Ljava/lang/String;" new="f_m"/>
   <field old="val$target Lcom/xabber/android/data/connection/Target;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.connection.ConnectionThread$5" new="com.xabber.android.data.connection.c_I">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/connection/ConnectionThread;" new="f_m"/>
   <field old="val$addresses [Ljava/net/InetAddress;" new="f_e"/>
   <field old="val$firstRequest Z" new="f_j"/>
   <field old="val$fqdn Ljava/lang/String;" new="f_B"/>
   <field old="val$host Ljava/lang/String;" new="f_b"/>
   <field old="val$port I" new="f_d"/>
  </class>
  <class old="com.xabber.android.data.connection.ConnectionThread$6" new="com.xabber.android.data.connection.c_e">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/connection/ConnectionThread;" new="f_e"/>
   <field old="val$fqdn Ljava/lang/String;" new="f_b"/>
   <field old="val$target Lcom/xabber/android/data/connection/Target;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.connection.ConnectionThread$7" new="com.xabber.android.data.connection.c_g">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/connection/ConnectionThread;" new="f_m"/>
   <field old="val$password Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.connection.ConnectionThread$8" new="com.xabber.android.data.connection.c_d">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/connection/ConnectionThread;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.Message" new="org.xbill.DNS.c_K">
   <method old="addRecord(Lorg/xbill/DNS/Record;I)V" new="m_df"/>
   <method old="clone()Ljava/lang/Object;" new="clone"/>
   <method old="findRRset(Lorg/xbill/DNS/Name;I)Z" new="m_bE"/>
   <method old="findRRset(Lorg/xbill/DNS/Name;II)Z" new="m_Lg"/>
   <method old="findRecord(Lorg/xbill/DNS/Record;)Z" new="m_mE"/>
   <method old="findRecord(Lorg/xbill/DNS/Record;I)Z" new="m_TD"/>
   <method old="getHeader()Lorg/xbill/DNS/Header;" new="m_Fe"/>
   <method old="getOPT()Lorg/xbill/DNS/OPTRecord;" new="m_We"/>
   <method old="getQuestion()Lorg/xbill/DNS/Record;" new="m_Le"/>
   <method old="getRcode()I" new="m_xD"/>
   <method old="getSectionArray(I)[Lorg/xbill/DNS/Record;" new="m_tE"/>
   <method old="getSectionRRsets(I)[Lorg/xbill/DNS/RRset;" new="m_Ge"/>
   <method old="getTSIG()Lorg/xbill/DNS/TSIGRecord;" new="m_ge"/>
   <method old="isSigned()Z" new="m_FF"/>
   <method old="isVerified()Z" new="m_Pe"/>
   <method old="newQuery(Lorg/xbill/DNS/Record;)Lorg/xbill/DNS/Message;" new="m_BD"/>
   <method old="newUpdate(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Message;" new="m_JF"/>
   <method old="numBytes()I" new="m_Ef"/>
   <method old="removeAllRecords(I)V" new="m_ke"/>
   <method old="removeRecord(Lorg/xbill/DNS/Record;I)Z" new="m_vf"/>
   <method old="sameSet(Lorg/xbill/DNS/Record;Lorg/xbill/DNS/Record;)Z" new="m_yf"/>
   <method old="sectionToString(I)Ljava/lang/String;" new="m_lF"/>
   <method old="sectionToWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;I)I" new="m_YF"/>
   <method old="setHeader(Lorg/xbill/DNS/Header;)V" new="m_LD"/>
   <method old="setTSIG(Lorg/xbill/DNS/TSIG;ILorg/xbill/DNS/TSIGRecord;)V" new="m_wf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire()[B" new="m_tF"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;)V" new="m_ne"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;I)Z" new="m_uf"/>
   <field old="MAXLENGTH I" new="f_f"/>
   <field old="TSIG_FAILED I" new="f_M"/>
   <field old="TSIG_INTERMEDIATE I" new="f_d"/>
   <field old="TSIG_SIGNED I" new="f_k"/>
   <field old="TSIG_UNSIGNED I" new="f_H"/>
   <field old="TSIG_VERIFIED I" new="f_b"/>
   <field old="emptyRRsetArray [Lorg/xbill/DNS/RRset;" new="f_m"/>
   <field old="emptyRecordArray [Lorg/xbill/DNS/Record;" new="f_G"/>
   <field old="header Lorg/xbill/DNS/Header;" new="f_D"/>
   <field old="querytsig Lorg/xbill/DNS/TSIGRecord;" new="f_j"/>
   <field old="sections [Ljava/util/List;" new="f_l"/>
   <field old="sig0start I" new="f_g"/>
   <field old="size I" new="f_B"/>
   <field old="tsigState I" new="f_I"/>
   <field old="tsigerror I" new="f_K"/>
   <field old="tsigkey Lorg/xbill/DNS/TSIG;" new="f_J"/>
   <field old="tsigstart I" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.connection.ConnectionThread$9" new="com.xabber.android.data.connection.c_a">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/connection/ConnectionThread;" new="f_m"/>
   <field old="val$oAuthResult Lcom/xabber/android/data/account/OAuthResult;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.message.MessageManager" new="com.xabber.android.data.message.c_f">
   <method old="access$000(Lcom/xabber/android/data/message/MessageManager;Ljava/util/Set;)V" new="m_fha"/>
   <method old="addChat(Lcom/xabber/android/data/message/AbstractChat;)V" new="m_nEa"/>
   <method old="clearHistory(Ljava/lang/String;Ljava/lang/String;)V" new="m_Sea"/>
   <method old="closeChat(Ljava/lang/String;Ljava/lang/String;)V" new="m_pia"/>
   <method old="createChat(Ljava/lang/String;Ljava/lang/String;)Lcom/xabber/android/data/message/RegularChat;" new="m_XHa"/>
   <method old="exportChat(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;" new="m_yIa"/>
   <method old="getActiveChats()Ljava/util/Collection;" new="m_via"/>
   <method old="getChat(Ljava/lang/String;Ljava/lang/String;)Lcom/xabber/android/data/message/AbstractChat;" new="m_FIa"/>
   <method old="getChats()Ljava/util/Collection;" new="m_pca"/>
   <method old="getInstance()Lcom/xabber/android/data/message/MessageManager;" new="m_Xr"/>
   <method old="getLastText(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" new="m_bGa"/>
   <method old="getLastTime(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Date;" new="m_jha"/>
   <method old="getMessageIds(Ljava/util/Collection;Z)Ljava/util/Collection;" new="m_dea"/>
   <method old="getMessages(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Collection;" new="m_wHa"/>
   <method old="getOrCreateChat(Ljava/lang/String;Ljava/lang/String;)Lcom/xabber/android/data/message/AbstractChat;" new="m_iha"/>
   <method old="hasActiveChat(Ljava/lang/String;Ljava/lang/String;)Z" new="m_Wia"/>
   <method old="isStatusTrackingEnabled(Ljava/lang/String;Ljava/lang/String;)Z" new="m_wha"/>
   <method old="isVisibleChat(Lcom/xabber/android/data/message/AbstractChat;)Z" new="m_UIa"/>
   <method old="onAccountArchiveModeChanged(Lcom/xabber/android/data/account/AccountItem;)V" new="m_aA"/>
   <method old="onAccountRemoved(Lcom/xabber/android/data/account/AccountItem;)V" new="m_kb"/>
   <method old="onChatChanged(Ljava/lang/String;Ljava/lang/String;Z)V" new="m_Id"/>
   <method old="onDisconnect(Lcom/xabber/android/data/connection/ConnectionItem;)V" new="m_xB"/>
   <method old="onLoad()V" new="m_pA"/>
   <method old="onLoaded(Ljava/util/Set;)V" new="m_vIa"/>
   <method old="onPacket(Lcom/xabber/android/data/connection/ConnectionItem;Ljava/lang/String;Lorg/jivesoftware/smack/packet/Packet;)V" new="m_tC"/>
   <method old="onRosterReceived(Lcom/xabber/android/data/account/AccountItem;)V" new="m_gC"/>
   <method old="onSettingsChanged()V" new="m_Fia"/>
   <method old="onStatusChanged(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/xabber/android/data/account/StatusMode;Ljava/lang/String;)V" new="m_UA"/>
   <method old="onStatusChanged(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_Ac"/>
   <method old="openChat(Ljava/lang/String;Ljava/lang/String;)V" new="m_Sca"/>
   <method old="removeChat(Lcom/xabber/android/data/message/AbstractChat;)V" new="m_jga"/>
   <method old="removeMessage(Lcom/xabber/android/data/message/MessageItem;)V" new="m_gFa"/>
   <method old="removeVisibleChat()V" new="m_QIa"/>
   <method old="requestToLoadLocalHistory(Ljava/lang/String;Ljava/lang/String;)V" new="m_eGa"/>
   <method old="sendMessage(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_pGa"/>
   <method old="setVisibleChat(Ljava/lang/String;Ljava/lang/String;)V" new="m_bDa"/>
   <field old="chats Lcom/xabber/android/data/entity/NestedMap;" new="f_m"/>
   <field old="instance Lcom/xabber/android/data/message/MessageManager;" new="f_b"/>
   <field old="visibleChat Lcom/xabber/android/data/message/AbstractChat;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.roster.AbstractContact" new="com.xabber.android.data.roster.c_b">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="compareTo(Lcom/xabber/android/data/entity/BaseEntity;)I" new="m_bCa"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="equals(Ljava/lang/String;Ljava/lang/String;)Z" new="m_Bba"/>
   <method old="getAccount()Ljava/lang/String;" new="m_FC"/>
   <method old="getAvatar()Landroid/graphics/drawable/Drawable;" new="m_UL"/>
   <method old="getAvatarForContactList()Landroid/graphics/drawable/Drawable;" new="m_ZEa"/>
   <method old="getClientSoftware()Lcom/xabber/android/data/extension/capability/ClientSoftware;" new="m_sda"/>
   <method old="getColorLevel()I" new="m_fFa"/>
   <method old="getGroups()Ljava/util/Collection;" new="m_pK"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getStatusMode()Lcom/xabber/android/data/account/StatusMode;" new="m_tfa"/>
   <method old="getStatusText()Ljava/lang/String;" new="m_tFa"/>
   <method old="getUser()Ljava/lang/String;" new="m_TA"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="isConnected()Z" new="m_ZS"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="account Ljava/lang/String;" new="f_m"/>
   <field old="user Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.connection.NetworkState" new="com.xabber.android.data.connection.NetworkState">
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/android/data/connection/NetworkState;" new="valueOf"/>
   <method old="values()[Lcom/xabber/android/data/connection/NetworkState;" new="values"/>
   <field old="$VALUES [Lcom/xabber/android/data/connection/NetworkState;" new="f_e"/>
   <field old="available Lcom/xabber/android/data/connection/NetworkState;" new="f_m"/>
   <field old="suspended Lcom/xabber/android/data/connection/NetworkState;" new="f_b"/>
   <field old="unavailable Lcom/xabber/android/data/connection/NetworkState;" new="f_d"/>
  </class>
  <class old="org.jivesoftware.smack.util.DNSUtil$1" new="org.jivesoftware.smack.util.c_f">
  </class>
  <class old="com.xabber.android.data.SettingsManager$InterfaceTheme" new="com.xabber.android.data.SettingsManager$InterfaceTheme">
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/android/data/SettingsManager$InterfaceTheme;" new="valueOf"/>
   <method old="values()[Lcom/xabber/android/data/SettingsManager$InterfaceTheme;" new="values"/>
   <field old="$VALUES [Lcom/xabber/android/data/SettingsManager$InterfaceTheme;" new="f_e"/>
   <field old="dark Lcom/xabber/android/data/SettingsManager$InterfaceTheme;" new="f_b"/>
   <field old="light Lcom/xabber/android/data/SettingsManager$InterfaceTheme;" new="f_d"/>
   <field old="normal Lcom/xabber/android/data/SettingsManager$InterfaceTheme;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.SingleCompressedNameBase" new="org.xbill.DNS.c_P">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getSingleName()Lorg/xbill/DNS/Name;" new="m_NH"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="serialVersionUID J" new="f_m"/>
   <field old="singleName Lorg/xbill/DNS/Name;" new="f_m"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.roster.GroupTable" new="com.xabber.android.data.roster.c_C">
   <method old="clear()V" new="m_EA"/>
   <method old="create(Landroid/database/sqlite/SQLiteDatabase;)V" new="m_AB"/>
   <method old="getAccount(Landroid/database/Cursor;)Ljava/lang/String;" new="m_Jea"/>
   <method old="getGroup(Landroid/database/Cursor;)Ljava/lang/String;" new="m_Vda"/>
   <method old="getInstance()Lcom/xabber/android/data/roster/GroupTable;" new="m_Xr"/>
   <method old="getListOrder()Ljava/lang/String;" new="m_YDa"/>
   <method old="getProjection()[Ljava/lang/String;" new="m_AFa"/>
   <method old="getShowOfflineMode(Landroid/database/Cursor;)Lcom/xabber/android/data/roster/ShowOfflineMode;" new="m_NDa"/>
   <method old="getTableName()Ljava/lang/String;" new="m_dga"/>
   <method old="isExpanded(Landroid/database/Cursor;)Z" new="m_VFa"/>
   <method old="list()Landroid/database/Cursor;" new="m_wEa"/>
   <method old="migrate(Landroid/database/sqlite/SQLiteDatabase;I)V" new="m_Cd"/>
   <method old="removeAccount(Ljava/lang/String;)V" new="m_YEa"/>
   <method old="write(Ljava/lang/String;Ljava/lang/String;ZLcom/xabber/android/data/roster/ShowOfflineMode;)V" new="m_VEa"/>
   <field old="DEFAULT_EXPANDED Z" new="f_d"/>
   <field old="NAME Ljava/lang/String;" new="f_m"/>
   <field old="PROJECTION [Ljava/lang/String;" new="f_j"/>
   <field old="databaseManager Lcom/xabber/android/data/DatabaseManager;" new="f_k"/>
   <field old="instance Lcom/xabber/android/data/roster/GroupTable;" new="f_B"/>
   <field old="writeLock Ljava/lang/Object;" new="f_b"/>
   <field old="writeStatement Landroid/database/sqlite/SQLiteStatement;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.extension.capability.CapabilitiesManager" new="com.xabber.android.data.extension.capability.c_K">
   <method old="access$000(Lcom/xabber/android/data/extension/capability/CapabilitiesManager;Ljava/util/Map;)V" new="m_dha"/>
   <method old="calculateString(Lorg/jivesoftware/smackx/packet/DiscoverInfo;)Ljava/lang/String;" new="m_TGa"/>
   <method old="getClientInfo(Ljava/lang/String;Ljava/lang/String;)Lcom/xabber/android/data/extension/capability/ClientInfo;" new="m_Zha"/>
   <method old="getClientInfo(Lorg/jivesoftware/smackx/packet/DiscoverInfo;)Lcom/xabber/android/data/extension/capability/ClientInfo;" new="m_bha"/>
   <method old="getFeatures(Lorg/jivesoftware/smackx/packet/DiscoverInfo;)Ljava/util/Collection;" new="m_AIa"/>
   <method old="getInstance()Lcom/xabber/android/data/extension/capability/CapabilitiesManager;" new="m_Xr"/>
   <method old="isValid(Lorg/jivesoftware/smackx/packet/DiscoverInfo;)Z" new="m_oia"/>
   <method old="onAccountRemoved(Lcom/xabber/android/data/account/AccountItem;)V" new="m_kb"/>
   <method old="onAuthorized(Lcom/xabber/android/data/connection/ConnectionItem;)V" new="m_WB"/>
   <method old="onDisconnect(Lcom/xabber/android/data/connection/ConnectionItem;)V" new="m_xB"/>
   <method old="onLoad()V" new="m_pA"/>
   <method old="onLoaded(Ljava/util/Map;)V" new="m_GGa"/>
   <method old="onPacket(Lcom/xabber/android/data/connection/ConnectionItem;Ljava/lang/String;Lorg/jivesoftware/smack/packet/Packet;)V" new="m_tC"/>
   <method old="removeAccountInfo(Ljava/lang/String;)V" new="m_zia"/>
   <method old="request(Ljava/lang/String;Ljava/lang/String;)V" new="m_vGa"/>
   <method old="request(Ljava/lang/String;Ljava/lang/String;Lcom/xabber/android/data/extension/capability/Capability;)V" new="m_zha"/>
   <field old="FORM_TYPE Ljava/lang/String;" new="f_m"/>
   <field old="INVALID_CLIENT_INFO Lcom/xabber/android/data/extension/capability/ClientInfo;" new="f_j"/>
   <field old="clientInformations Ljava/util/Map;" new="f_B"/>
   <field old="instance Lcom/xabber/android/data/extension/capability/CapabilitiesManager;" new="f_d"/>
   <field old="requests Ljava/util/Collection;" new="f_e"/>
   <field old="userCapabilities Lcom/xabber/android/data/entity/NestedMap;" new="f_b"/>
  </class>
  <class old="com.xabber.xmpp.archive.AbstractLink" new="com.xabber.xmpp.archive.c_D">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getStart()Ljava/util/Date;" new="m_vC"/>
   <method old="getWith()Ljava/lang/String;" new="m_ib"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="setStart(Ljava/util/Date;)V" new="m_SBa"/>
   <method old="setWith(Ljava/lang/String;)V" new="m_mda"/>
   <field old="START_ATTRIBUTE Ljava/lang/String;" new="f_d"/>
   <field old="WITH_ATTRIBUTE Ljava/lang/String;" new="f_m"/>
   <field old="start Ljava/util/Date;" new="f_b"/>
   <field old="with Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="com.xabber.xmpp.archive.CollectionHeader" new="com.xabber.xmpp.archive.c_E">
   <method old="getStart()Ljava/util/Date;" new="m_vC"/>
   <method old="getStartString()Ljava/lang/String;" new="m_lC"/>
   <method old="getVersion()Ljava/lang/Integer;" new="m_Sd"/>
   <method old="getWith()Ljava/lang/String;" new="m_ib"/>
  </class>
  <class old="org.jivesoftware.smack.util.collections.MapIterator" new="org.jivesoftware.smack.util.collections.c_H">
   <method old="getKey()Ljava/lang/Object;" new="m_xa"/>
   <method old="getValue()Ljava/lang/Object;" new="m_Ra"/>
   <method old="hasNext()Z" new="hasNext"/>
   <method old="next()Ljava/lang/Object;" new="next"/>
   <method old="remove()V" new="remove"/>
   <method old="setValue(Ljava/lang/Object;)Ljava/lang/Object;" new="m_Xa"/>
  </class>
  <class old="com.xabber.xmpp.vcard.TelephoneType" new="com.xabber.xmpp.vcard.TelephoneType">
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/xmpp/vcard/TelephoneType;" new="valueOf"/>
   <method old="values()[Lcom/xabber/xmpp/vcard/TelephoneType;" new="values"/>
   <field old="$VALUES [Lcom/xabber/xmpp/vcard/TelephoneType;" new="f_b"/>
   <field old="BBS Lcom/xabber/xmpp/vcard/TelephoneType;" new="f_B"/>
   <field old="CELL Lcom/xabber/xmpp/vcard/TelephoneType;" new="f_I"/>
   <field old="FAX Lcom/xabber/xmpp/vcard/TelephoneType;" new="f_J"/>
   <field old="HOME Lcom/xabber/xmpp/vcard/TelephoneType;" new="f_k"/>
   <field old="ISDN Lcom/xabber/xmpp/vcard/TelephoneType;" new="f_D"/>
   <field old="MODEM Lcom/xabber/xmpp/vcard/TelephoneType;" new="f_l"/>
   <field old="MSG Lcom/xabber/xmpp/vcard/TelephoneType;" new="f_e"/>
   <field old="PAGER Lcom/xabber/xmpp/vcard/TelephoneType;" new="f_K"/>
   <field old="PCS Lcom/xabber/xmpp/vcard/TelephoneType;" new="f_j"/>
   <field old="PREF Lcom/xabber/xmpp/vcard/TelephoneType;" new="f_m"/>
   <field old="VIDEO Lcom/xabber/xmpp/vcard/TelephoneType;" new="f_M"/>
   <field old="VOICE Lcom/xabber/xmpp/vcard/TelephoneType;" new="f_d"/>
   <field old="WORK Lcom/xabber/xmpp/vcard/TelephoneType;" new="f_f"/>
  </class>
  <class old="org.jivesoftware.smack.OpenTrustManager" new="org.jivesoftware.smack.c_v">
   <method old="checkClientTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V" new="checkClientTrusted"/>
   <method old="checkServerTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V" new="checkServerTrusted"/>
   <method old="getAcceptedIssuers()[Ljava/security/cert/X509Certificate;" new="getAcceptedIssuers"/>
  </class>
  <class old="org.jivesoftware.smackx.muc.MultiUserChat$InvitationsMonitor" new="org.jivesoftware.smackx.muc.c_k">
   <method old="access$1200(Lorg/jivesoftware/smackx/muc/MultiUserChat$InvitationsMonitor;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jivesoftware/smack/packet/Message;)V" new="m_on"/>
   <method old="addInvitationListener(Lorg/jivesoftware/smackx/muc/InvitationListener;)V" new="m_Do"/>
   <method old="cancel()V" new="m_pk"/>
   <method old="connectionClosed()V" new="m_r"/>
   <method old="connectionClosedOnError(Ljava/lang/Exception;)V" new="m_U"/>
   <method old="fireInvitationListeners(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jivesoftware/smack/packet/Message;)V" new="m_WN"/>
   <method old="getInvitationsMonitor(Lorg/jivesoftware/smack/Connection;)Lorg/jivesoftware/smackx/muc/MultiUserChat$InvitationsMonitor;" new="m_pM"/>
   <method old="init()V" new="m_ZG"/>
   <method old="reconnectingIn(I)V" new="m_Z"/>
   <method old="reconnectionFailed(Ljava/lang/Exception;)V" new="m_S"/>
   <method old="reconnectionSuccessful()V" new="m_W"/>
   <method old="removeInvitationListener(Lorg/jivesoftware/smackx/muc/InvitationListener;)V" new="m_Uo"/>
   <field old="connection Lorg/jivesoftware/smack/Connection;" new="f_m"/>
   <field old="invitationFilter Lorg/jivesoftware/smack/filter/PacketFilter;" new="f_d"/>
   <field old="invitationPacketListener Lorg/jivesoftware/smack/PacketListener;" new="f_B"/>
   <field old="invitationsListeners Ljava/util/List;" new="f_b"/>
   <field old="monitors Ljava/util/Map;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.roster.GroupStateProvider" new="com.xabber.android.data.roster.c_B">
   <method old="getShowOfflineMode(Ljava/lang/String;Ljava/lang/String;)Lcom/xabber/android/data/roster/ShowOfflineMode;" new="m_yb"/>
   <method old="isExpanded(Ljava/lang/String;Ljava/lang/String;)Z" new="m_lb"/>
   <method old="setExpanded(Ljava/lang/String;Ljava/lang/String;Z)V" new="m_fC"/>
   <method old="setShowOfflineMode(Ljava/lang/String;Ljava/lang/String;Lcom/xabber/android/data/roster/ShowOfflineMode;)V" new="m_TB"/>
  </class>
  <class old="com.xabber.xmpp.AbstractInflater" new="com.xabber.xmpp.c_A">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_I"/>
   <method old="parseIQ(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/IQ;" new="m_g"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
  </class>
  <class old="org.jivesoftware.smackx.muc.PacketMultiplexListener" new="org.jivesoftware.smackx.muc.c_J">
   <method old="processPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_C"/>
   <field old="DECLINES_FILTER Lorg/jivesoftware/smack/filter/PacketFilter;" new="f_d"/>
   <field old="MESSAGE_FILTER Lorg/jivesoftware/smack/filter/PacketFilter;" new="f_m"/>
   <field old="PRESENCE_FILTER Lorg/jivesoftware/smack/filter/PacketFilter;" new="f_k"/>
   <field old="SUBJECT_FILTER Lorg/jivesoftware/smack/filter/PacketFilter;" new="f_e"/>
   <field old="declinesListener Lorg/jivesoftware/smack/PacketListener;" new="f_l"/>
   <field old="messageCollector Lorg/jivesoftware/smackx/muc/ConnectionDetachedPacketCollector;" new="f_j"/>
   <field old="presenceListener Lorg/jivesoftware/smack/PacketListener;" new="f_b"/>
   <field old="subjectListener Lorg/jivesoftware/smack/PacketListener;" new="f_B"/>
  </class>
  <class old="org.jivesoftware.smackx.provider.DiscoverItemsProvider" new="org.jivesoftware.smackx.provider.c_D">
   <method old="parseIQ(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/IQ;" new="m_g"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.signers.DSASigner" new="wy.c_PA">
   <method old="calculateE(Ljava/math/BigInteger;[B)Ljava/math/BigInteger;" new="m_pZ"/>
   <method old="generateSignature([B)[Ljava/math/BigInteger;" new="m_xC"/>
   <method old="init(ZLnet/java/otr4j/bouncycastle/crypto/CipherParameters;)V" new="m_Hd"/>
   <method old="verifySignature([BLjava/math/BigInteger;Ljava/math/BigInteger;)Z" new="m_Ub"/>
   <field old="key Lnet/java/otr4j/bouncycastle/crypto/params/DSAKeyParameters;" new="f_e"/>
   <field old="random Ljava/security/SecureRandom;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.extension.capability.ClientSoftware" new="com.xabber.android.data.extension.capability.ClientSoftware">
   <method old="getByName(Ljava/lang/String;Ljava/lang/String;)Lcom/xabber/android/data/extension/capability/ClientSoftware;" new="m_yga"/>
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/android/data/extension/capability/ClientSoftware;" new="valueOf"/>
   <method old="values()[Lcom/xabber/android/data/extension/capability/ClientSoftware;" new="values"/>
   <field old="$VALUES [Lcom/xabber/android/data/extension/capability/ClientSoftware;" new="f_l"/>
   <field old="GTALK_NODE Ljava/util/regex/Pattern;" new="f_K"/>
   <field old="adium Lcom/xabber/android/data/extension/capability/ClientSoftware;" new="f_D"/>
   <field old="empathy Lcom/xabber/android/data/extension/capability/ClientSoftware;" new="f_I"/>
   <field old="gajim Lcom/xabber/android/data/extension/capability/ClientSoftware;" new="f_B"/>
   <field old="gtalk Lcom/xabber/android/data/extension/capability/ClientSoftware;" new="f_G"/>
   <field old="ichat Lcom/xabber/android/data/extension/capability/ClientSoftware;" new="f_M"/>
   <field old="miranda Lcom/xabber/android/data/extension/capability/ClientSoftware;" new="f_j"/>
   <field old="pidgin Lcom/xabber/android/data/extension/capability/ClientSoftware;" new="f_f"/>
   <field old="psi Lcom/xabber/android/data/extension/capability/ClientSoftware;" new="f_e"/>
   <field old="qip Lcom/xabber/android/data/extension/capability/ClientSoftware;" new="f_J"/>
   <field old="regularExpression Ljava/util/regex/Pattern;" new="f_k"/>
   <field old="unknown Lcom/xabber/android/data/extension/capability/ClientSoftware;" new="f_m"/>
   <field old="vip Lcom/xabber/android/data/extension/capability/ClientSoftware;" new="f_d"/>
   <field old="xabber Lcom/xabber/android/data/extension/capability/ClientSoftware;" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smack.util.Cache$2$1" new="org.jivesoftware.smack.util.c_a">
   <method old="hasNext()Z" new="hasNext"/>
   <method old="next()Ljava/lang/Object;" new="next"/>
   <method old="next()Ljava/util/Map$Entry;" new="m_Eq"/>
   <method old="remove()V" new="remove"/>
   <field old="it Ljava/util/Iterator;" new="f_m"/>
   <field old="this$1 Lorg/jivesoftware/smack/util/Cache$2;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.entity.NestedNestedMaps" new="wy.c_AB">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="access$200(Lcom/xabber/android/data/entity/NestedMap;)Ljava/util/Map;" new="m_ria"/>
   <method old="addAll(Lcom/xabber/android/data/entity/NestedMap;)V" new="m_nga"/>
   <method old="clear()V" new="m_EA"/>
   <method old="clear(Ljava/lang/String;)V" new="m_dGa"/>
   <method old="get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;" new="m_uIa"/>
   <method old="get(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" new="m_hga"/>
   <method old="getNested(Ljava/lang/String;)Ljava/util/Map;" new="m_gia"/>
   <method old="isEmpty()Z" new="m_Oaa"/>
   <method old="iterator()Ljava/util/Iterator;" new="iterator"/>
   <method old="put(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V" new="m_XIa"/>
   <method old="put(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V" new="m_RGa"/>
   <method old="remove(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;" new="m_cFa"/>
   <method old="remove(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" new="m_Cha"/>
   <method old="values()Ljava/util/Collection;" new="m_BGa"/>
  </class>
  <class old="com.xabber.xmpp.receipt.Request" new="com.xabber.xmpp.receipt.Request">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="serializeContent(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_Fb"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="ELEMENT_NAME"/>
   <field old="NAMESPACE Ljava/lang/String;" new="NAMESPACE"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.params.DSAPrivateKeyParameters" new="wy.c_GB">
   <method old="getParameters()Lnet/java/otr4j/bouncycastle/crypto/params/DSAParameters;" new="m_Paa"/>
   <method old="getX()Ljava/math/BigInteger;" new="m_Gz"/>
   <method old="isPrivate()Z" new="m_Gaa"/>
   <field old="privateKey Z" new="f_m"/>
   <field old="x Ljava/math/BigInteger;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.RemoteRosterEntry" new="org.jivesoftware.smackx.RemoteRosterEntry">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getGroupArrayNames()[Ljava/lang/String;" new="m_kr"/>
   <method old="getGroupNames()Ljava/util/Iterator;" new="m_Qp"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getUser()Ljava/lang/String;" new="m_TA"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="groupNames Ljava/util/List;" new="f_e"/>
   <field old="name Ljava/lang/String;" new="f_b"/>
   <field old="user Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.adapter.ContactListState" new="com.xabber.android.ui.adapter.ContactListState">
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/android/ui/adapter/ContactListState;" new="valueOf"/>
   <method old="values()[Lcom/xabber/android/ui/adapter/ContactListState;" new="values"/>
   <field old="$VALUES [Lcom/xabber/android/ui/adapter/ContactListState;" new="f_e"/>
   <field old="connecting Lcom/xabber/android/ui/adapter/ContactListState;" new="f_b"/>
   <field old="offline Lcom/xabber/android/ui/adapter/ContactListState;" new="f_m"/>
   <field old="online Lcom/xabber/android/ui/adapter/ContactListState;" new="f_d"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.OfflineMessageRequest$Provider" new="org.jivesoftware.smackx.packet.c_l">
   <method old="parseIQ(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/IQ;" new="m_g"/>
   <method old="parseItem(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smackx/packet/OfflineMessageRequest$Item;" new="m_cK"/>
  </class>
  <class old="org.jivesoftware.smackx.ChatStateListener" new="org.jivesoftware.smackx.c_m">
   <method old="processMessage(Lorg/jivesoftware/smack/Chat;Lorg/jivesoftware/smack/packet/Message;)V" new="m_Pa"/>
   <method old="stateChanged(Lorg/jivesoftware/smack/Chat;Lorg/jivesoftware/smackx/ChatState;)V" new="m_Ua"/>
  </class>
  <class old="com.xabber.android.ui.dialog.GroupAddDialogBuilder" new="wy.c_SA">
   <method old="create()Landroid/app/AlertDialog;" new="create"/>
   <method old="getDialogId()I" new="m_EAa"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getNegativeTitle()Ljava/lang/String;" new="m_rCa"/>
   <method old="getPositiveTitle()Ljava/lang/String;" new="m_sAa"/>
   <method old="onAccept(Landroid/content/DialogInterface;)V" new="m_pba"/>
   <method old="onCancel(Landroid/content/DialogInterface;)V" new="m_NAa"/>
   <method old="onDecline(Landroid/content/DialogInterface;)V" new="m_bda"/>
   <method old="onDismiss(Landroid/content/DialogInterface;)V" new="onDismiss"/>
   <method old="setOnAcceptListener(Lcom/xabber/android/ui/dialog/OnAcceptListener;)Lcom/xabber/android/ui/dialog/ListenableDialogBuilder;" new="m_fAa"/>
   <method old="setOnCancelListener(Lcom/xabber/android/ui/dialog/OnCancelListener;)Lcom/xabber/android/ui/dialog/ListenableDialogBuilder;" new="m_lba"/>
   <method old="setOnDeclineListener(Lcom/xabber/android/ui/dialog/OnDeclineListener;)Lcom/xabber/android/ui/dialog/ListenableDialogBuilder;" new="m_Tba"/>
   <field old="activity Landroid/app/Activity;" new="f_m"/>
   <field old="dialogId I" new="f_e"/>
   <field old="groups Ljava/util/Collection;" new="f_e"/>
   <field old="nameView Landroid/widget/EditText;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.socks5.Socks5Client" new="org.jivesoftware.smackx.bytestreams.socks5.c_M">
   <method old="createSocks5ConnectRequest()[B" new="m_SO"/>
   <method old="establish(Ljava/net/Socket;)Z" new="m_nM"/>
   <method old="getSocket(I)Ljava/net/Socket;" new="m_rn"/>
   <field old="digest Ljava/lang/String;" new="f_e"/>
   <field old="streamHost Lorg/jivesoftware/smackx/bytestreams/socks5/packet/Bytestream$StreamHost;" new="f_m"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.LICENSE" new="net.java.otr4j.bouncycastle.c_E">
   <method old="main([Ljava/lang/String;)V" new="main"/>
   <field old="licenseText Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.roster.Group" new="com.xabber.android.data.roster.c_E">
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
  </class>
  <class old="com.xabber.android.data.extension.capability.CapabilitiesManager$1" new="com.xabber.android.data.extension.capability.c_G">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/extension/capability/CapabilitiesManager;" new="f_m"/>
   <field old="val$clientInformations Ljava/util/Map;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.extension.capability.CapabilitiesManager$2" new="com.xabber.android.data.extension.capability.c_k">
   <method old="compare(Ljava/lang/Object;Ljava/lang/Object;)I" new="compare"/>
   <method old="compare(Ljava/lang/String;Ljava/lang/String;)I" new="m_GIa"/>
   <method old="compare(Lorg/jivesoftware/smackx/packet/DiscoverInfo$Identity;Lorg/jivesoftware/smackx/packet/DiscoverInfo$Identity;)I" new="m_NGa"/>
   <field old="this$0 Lcom/xabber/android/data/extension/capability/CapabilitiesManager;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.EDNSOption$Code" new="org.xbill.DNS.c_xB">
   <method old="string(I)Ljava/lang/String;" new="m_Wd"/>
   <method old="value(Ljava/lang/String;)I" new="m_le"/>
   <field old="CLIENT_SUBNET I" new="f_b"/>
   <field old="NSID I" new="f_m"/>
   <field old="codes Lorg/xbill/DNS/Mnemonic;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.entity.AbstractAccountTable" new="wy.c_sb">
   <method old="clear()V" new="m_EA"/>
   <method old="create(Landroid/database/sqlite/SQLiteDatabase;)V" new="m_AB"/>
   <method old="getAccount(Landroid/database/Cursor;)Ljava/lang/String;" new="m_Jea"/>
   <method old="getListOrder()Ljava/lang/String;" new="m_YDa"/>
   <method old="getProjection()[Ljava/lang/String;" new="m_AFa"/>
   <method old="getTableName()Ljava/lang/String;" new="m_dga"/>
   <method old="list()Landroid/database/Cursor;" new="m_wEa"/>
   <method old="migrate(Landroid/database/sqlite/SQLiteDatabase;I)V" new="m_Cd"/>
   <method old="removeAccount(Ljava/lang/String;)V" new="m_YEa"/>
  </class>
  <class old="com.xabber.android.data.extension.capability.CapabilitiesManager$3" new="com.xabber.android.data.extension.capability.c_f">
   <method old="compare(Ljava/lang/Object;Ljava/lang/Object;)I" new="compare"/>
   <method old="compare(Lorg/jivesoftware/smackx/FormField;Lorg/jivesoftware/smackx/FormField;)I" new="m_VQ"/>
   <field old="this$0 Lcom/xabber/android/data/extension/capability/CapabilitiesManager;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.extension.capability.CapabilitiesManager$4" new="com.xabber.android.data.extension.capability.c_j">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/extension/capability/CapabilitiesManager;" new="f_b"/>
   <field old="val$capability Lcom/xabber/android/data/extension/capability/Capability;" new="f_m"/>
   <field old="val$clientInfo Lcom/xabber/android/data/extension/capability/ClientInfo;" new="f_e"/>
  </class>
  <class old="org.xbill.DNS.RPRecord" new="org.xbill.DNS.RPRecord">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getMailbox()Lorg/xbill/DNS/Name;" new="m_iI"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getTextDomain()Lorg/xbill/DNS/Name;" new="m_hH"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="dclass I" new="f_m"/>
   <field old="mailbox Lorg/xbill/DNS/Name;" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="serialVersionUID J" new="f_b"/>
   <field old="textDomain Lorg/xbill/DNS/Name;" new="f_e"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.VCard" new="org.jivesoftware.smackx.packet.c_c">
   <method old="access$000(Lorg/jivesoftware/smackx/packet/VCard;)Z" new="m_wk"/>
   <method old="access$1100(Lorg/jivesoftware/smackx/packet/VCard;)Ljava/util/Map;" new="m_jL"/>
   <method old="access$1200(Lorg/jivesoftware/smackx/packet/VCard;)Ljava/util/Map;" new="m_nl"/>
   <method old="access$1300(Lorg/jivesoftware/smackx/packet/VCard;)Z" new="m_dL"/>
   <method old="access$1400(Lorg/jivesoftware/smackx/packet/VCard;)Ljava/lang/String;" new="m_Mj"/>
   <method old="access$1500(Lorg/jivesoftware/smackx/packet/VCard;)Ljava/lang/String;" new="m_Nl"/>
   <method old="access$1600(Lorg/jivesoftware/smackx/packet/VCard;)Ljava/lang/String;" new="m_Uk"/>
   <method old="access$1700(Lorg/jivesoftware/smackx/packet/VCard;)Ljava/lang/String;" new="m_Gl"/>
   <method old="access$1800(Lorg/jivesoftware/smackx/packet/VCard;)Ljava/lang/String;" new="m_ZJ"/>
   <method old="access$200(Lorg/jivesoftware/smackx/packet/VCard;)Z" new="m_Zj"/>
   <method old="access$300(Lorg/jivesoftware/smackx/packet/VCard;)Ljava/lang/String;" new="m_el"/>
   <method old="access$400(Lorg/jivesoftware/smackx/packet/VCard;)Ljava/lang/String;" new="m_rL"/>
   <method old="access$500(Lorg/jivesoftware/smackx/packet/VCard;)Ljava/util/Map;" new="m_yj"/>
   <method old="access$600(Lorg/jivesoftware/smackx/packet/VCard;)Ljava/util/Map;" new="m_Zk"/>
   <method old="access$700(Lorg/jivesoftware/smackx/packet/VCard;)Ljava/util/Map;" new="m_KK"/>
   <method old="access$800(Lorg/jivesoftware/smackx/packet/VCard;)Ljava/util/Map;" new="m_xl"/>
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="checkAuthenticated(Lorg/jivesoftware/smack/Connection;Z)V" new="m_wL"/>
   <method old="copyFieldsFrom(Lorg/jivesoftware/smackx/packet/VCard;)V" new="m_pJ"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="doLoad(Lorg/jivesoftware/smack/Connection;Ljava/lang/String;)V" new="m_Wj"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getAddressFieldHome(Ljava/lang/String;)Ljava/lang/String;" new="m_wl"/>
   <method old="getAddressFieldWork(Ljava/lang/String;)Ljava/lang/String;" new="m_kj"/>
   <method old="getAvatar()[B" new="m_UL"/>
   <method old="getAvatarHash()Ljava/lang/String;" new="m_Ml"/>
   <method old="getBytes(Ljava/net/URL;)[B" new="m_dl"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getEmailHome()Ljava/lang/String;" new="m_iL"/>
   <method old="getEmailWork()Ljava/lang/String;" new="m_eJ"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getField(Ljava/lang/String;)Ljava/lang/String;" new="m_Hj"/>
   <method old="getFileBytes(Ljava/io/File;)[B" new="m_iJ"/>
   <method old="getFirstName()Ljava/lang/String;" new="m_Hk"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getJabberId()Ljava/lang/String;" new="m_Rl"/>
   <method old="getLastName()Ljava/lang/String;" new="m_NJ"/>
   <method old="getMiddleName()Ljava/lang/String;" new="m_qK"/>
   <method old="getNickName()Ljava/lang/String;" new="m_hJ"/>
   <method old="getOrganization()Ljava/lang/String;" new="m_al"/>
   <method old="getOrganizationUnit()Ljava/lang/String;" new="m_OL"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getPhoneHome(Ljava/lang/String;)Ljava/lang/String;" new="m_Rk"/>
   <method old="getPhoneWork(Ljava/lang/String;)Ljava/lang/String;" new="m_nL"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hasContent()Z" new="m_gk"/>
   <method old="hasNameField()Z" new="m_ol"/>
   <method old="hasOrganizationFields()Z" new="m_DJ"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="load(Lorg/jivesoftware/smack/Connection;)V" new="m_fJ"/>
   <method old="load(Lorg/jivesoftware/smack/Connection;Ljava/lang/String;)V" new="m_WL"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="save(Lorg/jivesoftware/smack/Connection;)V" new="m_xj"/>
   <method old="setAddressFieldHome(Ljava/lang/String;Ljava/lang/String;)V" new="m_lK"/>
   <method old="setAddressFieldWork(Ljava/lang/String;Ljava/lang/String;)V" new="m_mL"/>
   <method old="setAvatar(Ljava/net/URL;)V" new="m_Ek"/>
   <method old="setAvatar([B)V" new="m_eL"/>
   <method old="setAvatar([BLjava/lang/String;)V" new="m_ek"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setEmailHome(Ljava/lang/String;)V" new="m_OK"/>
   <method old="setEmailWork(Ljava/lang/String;)V" new="m_nK"/>
   <method old="setEncodedImage(Ljava/lang/String;)V" new="m_DL"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setField(Ljava/lang/String;Ljava/lang/String;)V" new="m_Cl"/>
   <method old="setField(Ljava/lang/String;Ljava/lang/String;Z)V" new="m_Sj"/>
   <method old="setFirstName(Ljava/lang/String;)V" new="m_Nk"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setJabberId(Ljava/lang/String;)V" new="m_Ak"/>
   <method old="setLastName(Ljava/lang/String;)V" new="m_MJ"/>
   <method old="setMiddleName(Ljava/lang/String;)V" new="m_Yj"/>
   <method old="setNickName(Ljava/lang/String;)V" new="m_UK"/>
   <method old="setOrganization(Ljava/lang/String;)V" new="m_YK"/>
   <method old="setOrganizationUnit(Ljava/lang/String;)V" new="m_CK"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setPhoneHome(Ljava/lang/String;Ljava/lang/String;)V" new="m_Jl"/>
   <method old="setPhoneWork(Ljava/lang/String;Ljava/lang/String;)V" new="m_fL"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <method old="updateFN()V" new="m_Qk"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="avatar Ljava/lang/String;" new="f_B"/>
   <field old="emailHome Ljava/lang/String;" new="f_m"/>
   <field old="emailWork Ljava/lang/String;" new="f_l"/>
   <field old="firstName Ljava/lang/String;" new="f_M"/>
   <field old="homeAddr Ljava/util/Map;" new="f_K"/>
   <field old="homePhones Ljava/util/Map;" new="f_e"/>
   <field old="lastName Ljava/lang/String;" new="f_f"/>
   <field old="middleName Ljava/lang/String;" new="f_G"/>
   <field old="organization Ljava/lang/String;" new="f_D"/>
   <field old="organizationUnit Ljava/lang/String;" new="f_J"/>
   <field old="otherSimpleFields Ljava/util/Map;" new="f_k"/>
   <field old="otherUnescapableFields Ljava/util/Map;" new="f_b"/>
   <field old="workAddr Ljava/util/Map;" new="f_j"/>
   <field old="workPhones Ljava/util/Map;" new="f_I"/>
  </class>
  <class old="com.xabber.android.ui.dialog.AccountChooseDialogBuilder" new="wy.c_Mc">
   <method old="access$002(Lcom/xabber/android/ui/dialog/AccountChooseDialogBuilder;Ljava/lang/String;)Ljava/lang/String;" new="m_Kda"/>
   <method old="access$100(Lcom/xabber/android/ui/dialog/AccountChooseDialogBuilder;)Ljava/lang/String;" new="m_Cda"/>
   <method old="create()Landroid/app/AlertDialog;" new="create"/>
   <method old="getDialogId()I" new="m_EAa"/>
   <method old="getNegativeTitle()Ljava/lang/String;" new="m_rCa"/>
   <method old="getPositiveTitle()Ljava/lang/String;" new="m_sAa"/>
   <method old="getSelected()Ljava/lang/String;" new="m_nba"/>
   <method old="onAccept(Landroid/content/DialogInterface;)V" new="m_pba"/>
   <method old="onCancel(Landroid/content/DialogInterface;)V" new="m_NAa"/>
   <method old="onDecline(Landroid/content/DialogInterface;)V" new="m_bda"/>
   <method old="onDismiss(Landroid/content/DialogInterface;)V" new="onDismiss"/>
   <method old="setOnAcceptListener(Lcom/xabber/android/ui/dialog/OnAcceptListener;)Lcom/xabber/android/ui/dialog/ListenableDialogBuilder;" new="m_fAa"/>
   <method old="setOnCancelListener(Lcom/xabber/android/ui/dialog/OnCancelListener;)Lcom/xabber/android/ui/dialog/ListenableDialogBuilder;" new="m_lba"/>
   <method old="setOnDeclineListener(Lcom/xabber/android/ui/dialog/OnDeclineListener;)Lcom/xabber/android/ui/dialog/ListenableDialogBuilder;" new="m_Tba"/>
   <field old="activity Landroid/app/Activity;" new="f_m"/>
   <field old="dialogId I" new="f_e"/>
   <field old="selected Ljava/lang/String;" new="f_m"/>
   <field old="user Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smack.CertificateListener" new="org.jivesoftware.smack.c_f">
   <method old="onInvalidChain([Ljava/security/cert/X509Certificate;Ljava/security/cert/CertificateException;)Z" new="m_wB"/>
   <method old="onInvalidTarget(Ljava/security/cert/X509Certificate;Ljava/security/cert/CertificateException;)Z" new="m_BA"/>
   <method old="onSelfSigned(Ljava/security/cert/X509Certificate;Ljava/security/cert/CertificateException;)Z" new="m_Zc"/>
   <method old="onValid([Ljava/security/cert/X509Certificate;)Z" new="m_LC"/>
  </class>
  <class old="org.jivesoftware.smackx.muc.DiscussionHistory" new="org.jivesoftware.smackx.muc.c_b">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getMUCHistory()Lorg/jivesoftware/smackx/packet/MUCInitialPresence$History;" new="m_cM"/>
   <method old="getMaxChars()I" new="m_RJ"/>
   <method old="getMaxStanzas()I" new="m_Xk"/>
   <method old="getSeconds()I" new="m_QL"/>
   <method old="getSince()Ljava/util/Date;" new="m_Ll"/>
   <method old="isConfigured()Z" new="m_dM"/>
   <method old="setMaxChars(I)V" new="m_BL"/>
   <method old="setMaxStanzas(I)V" new="m_hj"/>
   <method old="setSeconds(I)V" new="m_IL"/>
   <method old="setSince(Ljava/util/Date;)V" new="m_uK"/>
   <field old="maxChars I" new="f_m"/>
   <field old="maxStanzas I" new="f_d"/>
   <field old="seconds I" new="f_e"/>
   <field old="since Ljava/util/Date;" new="f_b"/>
  </class>
  <class old="com.xabber.xmpp.IQ" new="com.xabber.xmpp.c_M">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getStart()Ljava/util/Date;" new="m_vC"/>
   <method old="getStartString()Ljava/lang/String;" new="m_lC"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getVersion()Ljava/lang/Integer;" new="m_Sd"/>
   <method old="getWith()Ljava/lang/String;" new="m_ib"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="serializeContent(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_Fb"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
  </class>
  <class old="org.jivesoftware.smack.PacketInterceptor" new="org.jivesoftware.smack.c_B">
   <method old="interceptPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_ca"/>
  </class>
  <class old="org.xbill.DNS.WireParseException" new="org.xbill.DNS.c_Ba">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
  </class>
  <class old="com.xabber.android.data.roster.ShowOfflineMode" new="com.xabber.android.data.roster.ShowOfflineMode">
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/android/data/roster/ShowOfflineMode;" new="valueOf"/>
   <method old="values()[Lcom/xabber/android/data/roster/ShowOfflineMode;" new="values"/>
   <field old="$VALUES [Lcom/xabber/android/data/roster/ShowOfflineMode;" new="f_m"/>
   <field old="always Lcom/xabber/android/data/roster/ShowOfflineMode;" new="f_d"/>
   <field old="never Lcom/xabber/android/data/roster/ShowOfflineMode;" new="f_e"/>
   <field old="normal Lcom/xabber/android/data/roster/ShowOfflineMode;" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smack.packet.PacketExtension" new="org.jivesoftware.smack.packet.c_E">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.Refreshable" new="org.apache.harmony.javax.security.auth.Refreshable">
   <method old="isCurrent()Z" new="m_Nc"/>
   <method old="refresh()V" new="m_oC"/>
  </class>
  <class old="org.jivesoftware.smack.filter.MessageTypeFilter" new="wy.c_Ca">
   <method old="accept(Lorg/jivesoftware/smack/packet/Packet;)Z" new="m_x"/>
   <field old="type Lorg/jivesoftware/smack/packet/Message$Type;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.provider.DelayInformationProvider" new="org.jivesoftware.smackx.provider.c_g">
   <method old="determineNearestDate(Ljava/util/Calendar;Ljava/util/List;)Ljava/util/Calendar;" new="m_pL"/>
   <method old="filterDatesBefore(Ljava/util/Calendar;[Ljava/util/Calendar;)Ljava/util/List;" new="m_HL"/>
   <method old="handleDateWithMissingLeadingZeros(Ljava/lang/String;)Ljava/util/Date;" new="m_xJ"/>
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_I"/>
   <method old="parseXEP91Date(Ljava/lang/String;Ljava/text/DateFormat;)Ljava/util/Calendar;" new="m_HK"/>
   <field old="XEP_0082_UTC_FORMAT_WITHOUT_MILLIS Ljava/text/SimpleDateFormat;" new="f_b"/>
   <field old="XEP_0091_UTC_FALLBACK_FORMAT Ljava/text/SimpleDateFormat;" new="f_e"/>
   <field old="formats Ljava/util/Map;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.filetransfer.StreamNegotiator" new="org.jivesoftware.smackx.filetransfer.c_M">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="cleanup()V" new="m_wD"/>
   <method old="createError(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WM"/>
   <method old="createIncomingStream(Lorg/jivesoftware/smackx/packet/StreamInitiation;)Ljava/io/InputStream;" new="m_cn"/>
   <method old="createInitiationAccept(Lorg/jivesoftware/smackx/packet/StreamInitiation;[Ljava/lang/String;)Lorg/jivesoftware/smackx/packet/StreamInitiation;" new="m_yo"/>
   <method old="createOutgoingStream(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/io/OutputStream;" new="m_bo"/>
   <method old="getInitiationPacketFilter(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/filter/PacketFilter;" new="m_fo"/>
   <method old="getNamespaces()[Ljava/lang/String;" new="m_HN"/>
   <method old="initiateIncomingStream(Lorg/jivesoftware/smack/Connection;Lorg/jivesoftware/smackx/packet/StreamInitiation;)Lorg/jivesoftware/smack/packet/Packet;" new="m_Zo"/>
   <method old="negotiateIncomingStream(Lorg/jivesoftware/smack/packet/Packet;)Ljava/io/InputStream;" new="m_no"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.VCard$ContentBuilder" new="org.jivesoftware.smackx.packet.c_E">
   <method old="addTagContent()V" new="m_D"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.login.LoginContext" new="wy.c_Ua">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="access$000(Lorg/apache/harmony/javax/security/auth/login/LoginContext;)Ljava/lang/ClassLoader;" new="m_VV"/>
   <method old="access$002(Lorg/apache/harmony/javax/security/auth/login/LoginContext;Ljava/lang/ClassLoader;)Ljava/lang/ClassLoader;" new="m_Cv"/>
   <method old="access$102(Lorg/apache/harmony/javax/security/auth/login/LoginContext;Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;)Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;" new="m_sU"/>
   <method old="access$200(Lorg/apache/harmony/javax/security/auth/login/LoginContext;)V" new="m_yU"/>
   <method old="access$300(Lorg/apache/harmony/javax/security/auth/login/LoginContext;)V" new="m_zW"/>
   <method old="access$500(Lorg/apache/harmony/javax/security/auth/login/LoginContext;)Ljava/security/AccessControlContext;" new="m_qv"/>
   <method old="getSubject()Lorg/apache/harmony/javax/security/auth/Subject;" new="m_wM"/>
   <method old="init(Ljava/lang/String;Lorg/apache/harmony/javax/security/auth/Subject;Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;Lorg/apache/harmony/javax/security/auth/login/Configuration;)V" new="m_Uw"/>
   <method old="login()V" new="m_lB"/>
   <method old="loginImpl()V" new="m_AV"/>
   <method old="logout()V" new="m_FA"/>
   <method old="logoutImpl()V" new="m_zv"/>
   <field old="DEFAULT_CALLBACK_HANDLER_PROPERTY Ljava/lang/String;" new="f_J"/>
   <field old="OPTIONAL I" new="f_l"/>
   <field old="REQUIRED I" new="f_f"/>
   <field old="REQUISITE I" new="f_d"/>
   <field old="SUFFICIENT I" new="f_D"/>
   <field old="callbackHandler Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;" new="f_e"/>
   <field old="contextClassLoader Ljava/lang/ClassLoader;" new="f_M"/>
   <field old="loggedIn Z" new="f_I"/>
   <field old="modules [Lorg/apache/harmony/javax/security/auth/login/LoginContext$Module;" new="f_j"/>
   <field old="sharedState Ljava/util/Map;" new="f_m"/>
   <field old="subject Lorg/apache/harmony/javax/security/auth/Subject;" new="f_b"/>
   <field old="userContext Ljava/security/AccessControlContext;" new="f_k"/>
   <field old="userProvidedConfig Z" new="f_B"/>
   <field old="userProvidedSubject Z" new="f_K"/>
  </class>
  <class old="org.jivesoftware.smack.util.Cache" new="org.jivesoftware.smack.util.c_I">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="clear()V" new="clear"/>
   <method old="containsKey(Ljava/lang/Object;)Z" new="containsKey"/>
   <method old="containsValue(Ljava/lang/Object;)Z" new="containsValue"/>
   <method old="cullCache()V" new="m_JS"/>
   <method old="deleteExpiredEntries()V" new="m_sS"/>
   <method old="entrySet()Ljava/util/Set;" new="entrySet"/>
   <method old="get(Ljava/lang/Object;)Ljava/lang/Object;" new="get"/>
   <method old="getCacheHits()J" new="m_Cu"/>
   <method old="getCacheMisses()J" new="m_Ks"/>
   <method old="getMaxCacheSize()I" new="m_hS"/>
   <method old="getMaxLifetime()J" new="m_zT"/>
   <method old="isEmpty()Z" new="isEmpty"/>
   <method old="keySet()Ljava/util/Set;" new="keySet"/>
   <method old="put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" new="put"/>
   <method old="putAll(Ljava/util/Map;)V" new="putAll"/>
   <method old="remove(Ljava/lang/Object;)Ljava/lang/Object;" new="remove"/>
   <method old="remove(Ljava/lang/Object;Z)Ljava/lang/Object;" new="m_Qt"/>
   <method old="setMaxCacheSize(I)V" new="m_xs"/>
   <method old="setMaxLifetime(J)V" new="m_Ts"/>
   <method old="size()I" new="size"/>
   <method old="values()Ljava/util/Collection;" new="values"/>
   <field old="ageList Lorg/jivesoftware/smack/util/Cache$LinkedList;" new="f_B"/>
   <field old="cacheHits J" new="f_m"/>
   <field old="cacheMisses J" new="f_e"/>
   <field old="lastAccessedList Lorg/jivesoftware/smack/util/Cache$LinkedList;" new="f_d"/>
   <field old="map Ljava/util/Map;" new="f_b"/>
   <field old="maxCacheSize I" new="f_j"/>
   <field old="maxLifetime J" new="f_k"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.OfflineMessageRequest$Item" new="org.jivesoftware.smackx.packet.c_L">
   <method old="getAction()Ljava/lang/String;" new="m_dJ"/>
   <method old="getJid()Ljava/lang/String;" new="m_tL"/>
   <method old="getNode()Ljava/lang/String;" new="m_Ol"/>
   <method old="setAction(Ljava/lang/String;)V" new="m_zJ"/>
   <method old="setJid(Ljava/lang/String;)V" new="m_AJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="action Ljava/lang/String;" new="f_e"/>
   <field old="jid Ljava/lang/String;" new="f_m"/>
   <field old="node Ljava/lang/String;" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.roster.SyncManager" new="com.xabber.android.data.roster.c_g">
   <method old="access$000(Lcom/xabber/android/data/roster/SyncManager;Ljava/util/Collection;Ljava/util/Collection;)V" new="m_oFa"/>
   <method old="access$100(Lcom/xabber/android/data/roster/SyncManager;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V" new="m_NFa"/>
   <method old="access$1000(Lcom/xabber/android/data/roster/SyncManager;Ljava/util/Collection;)V" new="m_eea"/>
   <method old="access$1100(Lcom/xabber/android/data/roster/SyncManager;Ljava/util/Collection;)V" new="m_OFa"/>
   <method old="access$1200()Z" new="m_uEa"/>
   <method old="access$1300(Lcom/xabber/android/data/roster/SyncManager;)Ljava/util/HashSet;" new="m_Wda"/>
   <method old="access$1400(Lcom/xabber/android/data/roster/SyncManager;Lcom/xabber/android/data/roster/RosterContact;Lcom/xabber/android/data/roster/StructuredName;)V" new="m_DEa"/>
   <method old="access$1500(Lcom/xabber/android/data/roster/SyncManager;)Z" new="m_ofa"/>
   <method old="access$1600(Lcom/xabber/android/data/roster/SyncManager;)Landroid/accounts/AccountManager;" new="m_lfa"/>
   <method old="access$1700(Lcom/xabber/android/data/roster/SyncManager;)Ljava/util/HashMap;" new="m_bga"/>
   <method old="access$1800(Lcom/xabber/android/data/roster/SyncManager;Ljava/util/Collection;)V" new="m_nDa"/>
   <method old="access$200(Lcom/xabber/android/data/roster/SyncManager;Ljava/util/Collection;)Ljava/util/Collection;" new="m_YFa"/>
   <method old="access$300(Lcom/xabber/android/data/roster/SyncManager;Ljava/util/Collection;)V" new="m_vda"/>
   <method old="access$400(Lcom/xabber/android/data/roster/SyncManager;Ljava/util/Map;)Ljava/util/Map;" new="m_wDa"/>
   <method old="access$500(Lcom/xabber/android/data/roster/SyncManager;Ljava/util/Map;)V" new="m_Mea"/>
   <method old="access$600(Lcom/xabber/android/data/roster/SyncManager;Ljava/util/Collection;)V" new="m_PFa"/>
   <method old="access$700(Lcom/xabber/android/data/roster/SyncManager;Ljava/util/Map;)V" new="m_qEa"/>
   <method old="access$800(Lcom/xabber/android/data/roster/SyncManager;Ljava/util/Map;)V" new="m_JEa"/>
   <method old="access$900(Lcom/xabber/android/data/roster/SyncManager;Ljava/util/Map;)V" new="m_oda"/>
   <method old="addAccount(Lcom/xabber/android/data/account/AccountItem;)V" new="m_RDa"/>
   <method old="checkCursor(Landroid/database/Cursor;)Landroid/database/Cursor;" new="m_Hfa"/>
   <method old="clearStatuses()V" new="m_vea"/>
   <method old="disableSyncable(Ljava/util/Collection;)V" new="m_Nea"/>
   <method old="getAccountType()Ljava/lang/String;" new="m_Yfa"/>
   <method old="getFirstEntry(Ljava/util/HashMap;Ljava/util/Collection;)Ljava/util/Map$Entry;" new="m_Dea"/>
   <method old="getInstance()Lcom/xabber/android/data/roster/SyncManager;" new="m_Xr"/>
   <method old="getPersonalData()V" new="m_Sda"/>
   <method old="getSnapShot(Ljava/lang/String;Ljava/util/ArrayList;Ljava/util/HashMap;Ljava/util/HashMap;Ljava/util/HashMap;)V" new="m_qDa"/>
   <method old="insertContacts(Ljava/util/Map;)V" new="m_tea"/>
   <method old="insertGroupMemberships(Ljava/util/Map;)V" new="m_GFa"/>
   <method old="insertGroups(Ljava/util/Collection;)V" new="m_Nfa"/>
   <method old="insertPresences(Ljava/util/Collection;)V" new="m_Bga"/>
   <method old="onAccountAdded(Lcom/xabber/android/data/account/AccountItem;)V" new="m_NA"/>
   <method old="onAccountRemoved(Lcom/xabber/android/data/account/AccountItem;)V" new="m_kb"/>
   <method old="onAccountSyncableChanged(Lcom/xabber/android/data/account/AccountItem;)V" new="m_YA"/>
   <method old="onAccountsUpdated([Landroid/accounts/Account;)V" new="onAccountsUpdated"/>
   <method old="onContactStructuredInfoChanged(Lcom/xabber/android/data/roster/RosterContact;Lcom/xabber/android/data/roster/StructuredName;)V" new="m_bC"/>
   <method old="onLoad()V" new="m_pA"/>
   <method old="onLoaded(Ljava/util/Collection;Ljava/util/Collection;)V" new="m_zda"/>
   <method old="onPresenceChanged(Ljava/util/Collection;)V" new="m_mB"/>
   <method old="onRosterUpdate(Ljava/util/Collection;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Collection;Ljava/util/Collection;)V" new="m_AA"/>
   <method old="onUnload()V" new="m_FB"/>
   <method old="removeAccount(Lcom/xabber/android/data/account/AccountItem;)V" new="m_SEa"/>
   <method old="removeByIds(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V" new="m_rea"/>
   <method old="removeContacts(Ljava/util/Collection;)V" new="m_pfa"/>
   <method old="removeGroupMemberships(Ljava/util/Map;)V" new="m_fEa"/>
   <method old="removeGroups(Ljava/util/Collection;)V" new="m_ffa"/>
   <method old="removeNotSyncable(Ljava/util/Collection;)Ljava/util/Collection;" new="m_ODa"/>
   <method old="removeNotSyncable(Ljava/util/Map;)Ljava/util/Map;" new="m_pFa"/>
   <method old="updateNickNames(Ljava/util/Map;)V" new="m_Yda"/>
   <method old="updateStatus(Ljava/util/ArrayList;Lcom/xabber/android/data/roster/RosterContact;Lcom/xabber/android/data/roster/SystemContactStatus;)V" new="m_hfa"/>
   <method old="updateStructuredName(Lcom/xabber/android/data/roster/RosterContact;Lcom/xabber/android/data/roster/StructuredName;)V" new="m_xfa"/>
   <field old="DATA_URI Landroid/net/Uri;" new="f_k"/>
   <field old="GROUPS_URI Landroid/net/Uri;" new="f_K"/>
   <field old="LOG Z" new="f_B"/>
   <field old="RAW_CONTACTS_URI Landroid/net/Uri;" new="f_I"/>
   <field old="accountManager Landroid/accounts/AccountManager;" new="f_e"/>
   <field old="application Lcom/xabber/android/data/Application;" new="f_f"/>
   <field old="createAccounts Z" new="f_d"/>
   <field old="instance Lcom/xabber/android/data/roster/SyncManager;" new="f_m"/>
   <field old="registeredOnAccountsUpdatedListener Z" new="f_b"/>
   <field old="statuses Ljava/util/HashMap;" new="f_l"/>
   <field old="syncableAccounts Ljava/util/HashSet;" new="f_j"/>
  </class>
  <class old="com.xabber.android.data.account.OnAccountDisabledListener" new="com.xabber.android.data.account.c_M">
   <method old="onAccountDisabled(Lcom/xabber/android/data/account/AccountItem;)V" new="m_Qd"/>
  </class>
  <class old="org.jivesoftware.smackx.filetransfer.FileTransferListener" new="org.jivesoftware.smackx.filetransfer.c_H">
   <method old="fileTransferRequest(Lorg/jivesoftware/smackx/filetransfer/FileTransferRequest;)V" new="m_Ea"/>
  </class>
  <class old="org.jivesoftware.smackx.GroupChatInvitation" new="org.jivesoftware.smackx.c_Y">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="getRoomAddress()Ljava/lang/String;" new="m_KP"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_b"/>
   <field old="NAMESPACE Ljava/lang/String;" new="f_m"/>
   <field old="roomAddress Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.connection.ConnectionThread$10" new="com.xabber.android.data.connection.c_t">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/connection/ConnectionThread;" new="f_m"/>
   <field old="val$password Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.connection.ConnectionThread$11" new="com.xabber.android.data.connection.c_n">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/connection/ConnectionThread;" new="f_e"/>
   <field old="val$fqdn Ljava/lang/String;" new="f_m"/>
   <field old="val$port I" new="f_b"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.util.encoders.Base64" new="wy.c_jA">
   <method old="decode(Ljava/lang/String;)[B" new="m_ru"/>
   <method old="decode(Ljava/lang/String;Ljava/io/OutputStream;)I" new="m_sd"/>
   <method old="decode([B)[B" new="m_Wy"/>
   <method old="encode([B)[B" new="m_tX"/>
   <method old="encode([BIILjava/io/OutputStream;)I" new="m_kB"/>
   <method old="encode([BLjava/io/OutputStream;)I" new="m_Tz"/>
   <field old="encoder Lnet/java/otr4j/bouncycastle/util/encoders/Encoder;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.connection.ConnectionThread$12" new="com.xabber.android.data.connection.c_v">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/connection/ConnectionThread;" new="f_e"/>
   <field old="val$password Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.connection.ConnectionThread$13" new="com.xabber.android.data.connection.c_Aa">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/connection/ConnectionThread;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.connection.ConnectionThread$14" new="com.xabber.android.data.connection.c_o">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/connection/ConnectionThread;" new="f_m"/>
   <field old="val$password Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="com.xabber.android.ui.helper.BaseSettingsActivity$Operation" new="com.xabber.android.ui.helper.BaseSettingsActivity$Operation">
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/android/ui/helper/BaseSettingsActivity$Operation;" new="valueOf"/>
   <method old="values()[Lcom/xabber/android/ui/helper/BaseSettingsActivity$Operation;" new="values"/>
   <field old="$VALUES [Lcom/xabber/android/ui/helper/BaseSettingsActivity$Operation;" new="f_b"/>
   <field old="discard Lcom/xabber/android/ui/helper/BaseSettingsActivity$Operation;" new="f_e"/>
   <field old="read Lcom/xabber/android/ui/helper/BaseSettingsActivity$Operation;" new="f_m"/>
   <field old="save Lcom/xabber/android/ui/helper/BaseSettingsActivity$Operation;" new="f_d"/>
  </class>
  <class old="com.xabber.android.data.connection.ConnectionThread$15" new="com.xabber.android.data.connection.c_s">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/connection/ConnectionThread;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.connection.ConnectionThread$16" new="com.xabber.android.data.connection.c_q">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/connection/ConnectionThread;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.connection.ConnectionThread$17" new="com.xabber.android.data.connection.c_w">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/connection/ConnectionThread;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.connection.ConnectionThread$18" new="com.xabber.android.data.connection.c_h">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/connection/ConnectionThread;" new="f_m"/>
   <field old="val$packet Lorg/jivesoftware/smack/packet/Packet;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.SettingsManager$ChatsHideKeyboard" new="com.xabber.android.data.SettingsManager$ChatsHideKeyboard">
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/android/data/SettingsManager$ChatsHideKeyboard;" new="valueOf"/>
   <method old="values()[Lcom/xabber/android/data/SettingsManager$ChatsHideKeyboard;" new="values"/>
   <field old="$VALUES [Lcom/xabber/android/data/SettingsManager$ChatsHideKeyboard;" new="f_b"/>
   <field old="always Lcom/xabber/android/data/SettingsManager$ChatsHideKeyboard;" new="f_m"/>
   <field old="landscape Lcom/xabber/android/data/SettingsManager$ChatsHideKeyboard;" new="f_e"/>
   <field old="never Lcom/xabber/android/data/SettingsManager$ChatsHideKeyboard;" new="f_d"/>
  </class>
  <class old="com.xabber.android.data.connection.ConnectionThread$19" new="com.xabber.android.data.connection.c_F">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/connection/ConnectionThread;" new="f_d"/>
   <field old="val$fqdn Ljava/lang/String;" new="f_m"/>
   <field old="val$port I" new="f_e"/>
   <field old="val$useSRVLookup Z" new="f_b"/>
  </class>
  <class old="net.java.otr4j.OtrPolicy" new="net.java.otr4j.c_E">
   <method old="getAllowV1()Z" new="m_Jc"/>
   <method old="getAllowV2()Z" new="m_PA"/>
   <method old="getEnableAlways()Z" new="m_oA"/>
   <method old="getEnableManual()Z" new="m_Cc"/>
   <method old="getErrorStartAKE()Z" new="m_jB"/>
   <method old="getPolicy()I" new="m_Pc"/>
   <method old="getRequireEncryption()Z" new="m_fc"/>
   <method old="getSendWhitespaceTag()Z" new="m_Kb"/>
   <method old="getWhitespaceStartAKE()Z" new="m_yA"/>
   <method old="setAllowV1(Z)V" new="m_pB"/>
   <method old="setAllowV2(Z)V" new="m_Vc"/>
   <method old="setEnableAlways(Z)V" new="m_Fc"/>
   <method old="setEnableManual(Z)V" new="m_Od"/>
   <method old="setErrorStartAKE(Z)V" new="m_ZC"/>
   <method old="setRequireEncryption(Z)V" new="m_mC"/>
   <method old="setSendWhitespaceTag(Z)V" new="m_Kc"/>
   <method old="setWhitespaceStartAKE(Z)V" new="m_lc"/>
   <field old="ALLOW_V1 I" new="f_j"/>
   <field old="ALLOW_V2 I" new="f_K"/>
   <field old="ERROR_START_AKE I" new="f_B"/>
   <field old="NEVER I" new="f_m"/>
   <field old="OPPORTUNISTIC I" new="f_J"/>
   <field old="OTRL_POLICY_ALWAYS I" new="f_f"/>
   <field old="OTRL_POLICY_DEFAULT I" new="f_d"/>
   <field old="OTRL_POLICY_MANUAL I" new="f_I"/>
   <field old="REQUIRE_ENCRYPTION I" new="f_k"/>
   <field old="SEND_WHITESPACE_TAG I" new="f_e"/>
   <field old="VERSION_MASK I" new="f_l"/>
   <field old="WHITESPACE_START_AKE I" new="f_b"/>
  </class>
  <class old="com.xabber.xmpp.archive.DefaultProvider" new="com.xabber.xmpp.archive.c_Aa">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/archive/Default;" new="m_ZZ"/>
   <method old="getInstance()Lcom/xabber/xmpp/archive/DefaultProvider;" new="m_Xr"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/archive/AbstractSettings;)Lcom/xabber/xmpp/archive/AbstractSettings;" new="m_xaa"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/archive/Default;)Lcom/xabber/xmpp/archive/Default;" new="m_nca"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
   <field old="instance Lcom/xabber/xmpp/archive/DefaultProvider;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.ActivityManager" new="com.xabber.android.data.c_v">
   <method old="applyTheme(Landroid/app/Activity;)V" new="m_bNa"/>
   <method old="cancelTask(Landroid/app/Activity;)V" new="m_ena"/>
   <method old="clearStack(Z)V" new="m_nma"/>
   <method old="fetchTaskIndex(Landroid/app/Activity;Landroid/content/Intent;)V" new="m_toa"/>
   <method old="getInstance()Lcom/xabber/android/data/ActivityManager;" new="m_Xr"/>
   <method old="hasContactList(Landroid/content/Context;)Z" new="m_eOa"/>
   <method old="onActivityResult(Landroid/app/Activity;IILandroid/content/Intent;)V" new="m_ZNa"/>
   <method old="onCreate(Landroid/app/Activity;)V" new="m_zNa"/>
   <method old="onDestroy(Landroid/app/Activity;)V" new="m_Xma"/>
   <method old="onNewIntent(Landroid/app/Activity;Landroid/content/Intent;)V" new="m_NNa"/>
   <method old="onPause(Landroid/app/Activity;)V" new="m_yma"/>
   <method old="onResume(Landroid/app/Activity;)V" new="m_gOa"/>
   <method old="onUnload()V" new="m_FB"/>
   <method old="rebuildStack()V" new="m_XNa"/>
   <method old="startNewTask(Landroid/app/Activity;)V" new="m_vNa"/>
   <method old="updateIntent(Landroid/app/Activity;Landroid/content/Intent;)V" new="m_cNa"/>
   <field old="EXTRA_TASK_INDEX Ljava/lang/String;" new="f_b"/>
   <field old="LOG Z" new="f_m"/>
   <field old="activities Ljava/util/ArrayList;" new="f_d"/>
   <field old="application Lcom/xabber/android/data/Application;" new="f_e"/>
   <field old="instance Lcom/xabber/android/data/ActivityManager;" new="f_j"/>
   <field old="nextTaskIndex I" new="f_k"/>
   <field old="onErrorListener Lcom/xabber/android/data/OnErrorListener;" new="f_B"/>
   <field old="taskIndexes Ljava/util/WeakHashMap;" new="f_l"/>
  </class>
  <class old="com.xabber.android.data.SettingsManager$ChatsDivide" new="com.xabber.android.data.SettingsManager$ChatsDivide">
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/android/data/SettingsManager$ChatsDivide;" new="valueOf"/>
   <method old="values()[Lcom/xabber/android/data/SettingsManager$ChatsDivide;" new="values"/>
   <field old="$VALUES [Lcom/xabber/android/data/SettingsManager$ChatsDivide;" new="f_e"/>
   <field old="always Lcom/xabber/android/data/SettingsManager$ChatsDivide;" new="f_b"/>
   <field old="never Lcom/xabber/android/data/SettingsManager$ChatsDivide;" new="f_m"/>
   <field old="portial Lcom/xabber/android/data/SettingsManager$ChatsDivide;" new="f_d"/>
  </class>
  <class old="com.novell.sasl.client.TokenParser" new="com.novell.sasl.client.c_E">
   <method old="isValidTokenChar(C)Z" new="m_eMa"/>
   <method old="isWhiteSpace(C)Z" new="m_nNa"/>
   <method old="parseToken()Ljava/lang/String;" new="m_qma"/>
   <field old="STATE_DONE I" new="f_l"/>
   <field old="STATE_LOOKING_FOR_COMMA I" new="f_f"/>
   <field old="STATE_LOOKING_FOR_FIRST_TOKEN I" new="f_I"/>
   <field old="STATE_LOOKING_FOR_TOKEN I" new="f_m"/>
   <field old="STATE_PARSING_ERROR I" new="f_b"/>
   <field old="STATE_SCANNING_TOKEN I" new="f_d"/>
   <field old="m_curPos I" new="f_k"/>
   <field old="m_scanStart I" new="f_j"/>
   <field old="m_state I" new="f_e"/>
   <field old="m_tokens Ljava/lang/String;" new="f_B"/>
  </class>
  <class old="com.xabber.android.data.connection.ConnectionThread$20" new="com.xabber.android.data.connection.c_L">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/connection/ConnectionThread;" new="f_m"/>
   <field old="val$runnable Ljava/lang/Runnable;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.connection.ConnectionThread$21" new="com.xabber.android.data.connection.c_l">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/connection/ConnectionThread;" new="f_e"/>
   <field old="val$runnable Ljava/lang/Runnable;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.util.ObservableWriter" new="org.jivesoftware.smack.util.c_M">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="addWriterListener(Lorg/jivesoftware/smack/util/WriterListener;)V" new="m_Qu"/>
   <method old="close()V" new="close"/>
   <method old="flush()V" new="flush"/>
   <method old="notifyListeners(Ljava/lang/String;)V" new="m_Pt"/>
   <method old="removeWriterListener(Lorg/jivesoftware/smack/util/WriterListener;)V" new="m_jt"/>
   <method old="write(I)V" new="write"/>
   <method old="write(Ljava/lang/String;)V" new="write"/>
   <method old="write(Ljava/lang/String;II)V" new="write"/>
   <method old="write([C)V" new="write"/>
   <method old="write([CII)V" new="write"/>
   <field old="listeners Ljava/util/List;" new="f_e"/>
   <field old="wrappedWriter Ljava/io/Writer;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.InvalidTTLException" new="org.xbill.DNS.c_AA">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
  </class>
  <class old="com.xabber.xmpp.vcard.AbstractData" new="com.xabber.xmpp.vcard.c_a">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="writeBody(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_zy"/>
  </class>
  <class old="com.jcraft.jzlib.JZlib" new="wy.c_Hc">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="version()Ljava/lang/String;" new="m_cMa"/>
   <field old="Z_BEST_COMPRESSION I" new="f_d"/>
   <field old="Z_BEST_SPEED I" new="f_H"/>
   <field old="Z_BUF_ERROR I" new="f_j"/>
   <field old="Z_DATA_ERROR I" new="f_b"/>
   <field old="Z_DEFAULT_COMPRESSION I" new="f_C"/>
   <field old="Z_DEFAULT_STRATEGY I" new="f_M"/>
   <field old="Z_ERRNO I" new="f_K"/>
   <field old="Z_FILTERED I" new="f_k"/>
   <field old="Z_FINISH I" new="f_g"/>
   <field old="Z_FULL_FLUSH I" new="f_l"/>
   <field old="Z_HUFFMAN_ONLY I" new="f_D"/>
   <field old="Z_MEM_ERROR I" new="f_F"/>
   <field old="Z_NEED_DICT I" new="f_I"/>
   <field old="Z_NO_COMPRESSION I" new="f_m"/>
   <field old="Z_NO_FLUSH I" new="f_B"/>
   <field old="Z_OK I" new="f_G"/>
   <field old="Z_PARTIAL_FLUSH I" new="f_a"/>
   <field old="Z_STREAM_END I" new="f_J"/>
   <field old="Z_STREAM_ERROR I" new="f_f"/>
   <field old="Z_SYNC_FLUSH I" new="f_h"/>
   <field old="Z_VERSION_ERROR I" new="f_E"/>
   <field old="version Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="org.xbill.DNS.TSIGRecord" new="org.xbill.DNS.c_o">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getAlgorithm()Lorg/xbill/DNS/Name;" new="m_Ne"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getError()I" new="m_Hg"/>
   <method old="getFudge()I" new="m_we"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getOriginalID()I" new="m_pf"/>
   <method old="getOther()[B" new="m_KD"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getSignature()[B" new="m_IE"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getTimeSigned()Ljava/util/Date;" new="m_Je"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="alg Lorg/xbill/DNS/Name;" new="f_b"/>
   <field old="dclass I" new="f_m"/>
   <field old="error I" new="f_d"/>
   <field old="fudge I" new="f_j"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="originalID I" new="f_l"/>
   <field old="other [B" new="f_B"/>
   <field old="serialVersionUID J" new="f_e"/>
   <field old="signature [B" new="f_k"/>
   <field old="timeSigned Ljava/util/Date;" new="f_m"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.connection.OnAuthorizedListener" new="com.xabber.android.data.connection.c_B">
   <method old="onAuthorized(Lcom/xabber/android/data/connection/ConnectionItem;)V" new="m_WB"/>
  </class>
  <class old="com.xabber.android.ui.dialog.GroupRenameDialogBuilder" new="wy.c_DA">
   <method old="create()Landroid/app/AlertDialog;" new="create"/>
   <method old="getDialogId()I" new="m_EAa"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getNegativeTitle()Ljava/lang/String;" new="m_rCa"/>
   <method old="getPositiveTitle()Ljava/lang/String;" new="m_sAa"/>
   <method old="onAccept(Landroid/content/DialogInterface;)V" new="m_pba"/>
   <method old="onCancel(Landroid/content/DialogInterface;)V" new="m_NAa"/>
   <method old="onDecline(Landroid/content/DialogInterface;)V" new="m_bda"/>
   <method old="onDismiss(Landroid/content/DialogInterface;)V" new="onDismiss"/>
   <method old="setOnAcceptListener(Lcom/xabber/android/ui/dialog/OnAcceptListener;)Lcom/xabber/android/ui/dialog/ListenableDialogBuilder;" new="m_fAa"/>
   <method old="setOnCancelListener(Lcom/xabber/android/ui/dialog/OnCancelListener;)Lcom/xabber/android/ui/dialog/ListenableDialogBuilder;" new="m_lba"/>
   <method old="setOnDeclineListener(Lcom/xabber/android/ui/dialog/OnDeclineListener;)Lcom/xabber/android/ui/dialog/ListenableDialogBuilder;" new="m_Tba"/>
   <field old="activity Landroid/app/Activity;" new="f_m"/>
   <field old="dialogId I" new="f_e"/>
   <field old="nameView Landroid/widget/EditText;" new="f_m"/>
  </class>
  <class old="net.java.otr4j.session.SessionStatus" new="net.java.otr4j.session.SessionStatus">
   <method old="valueOf(Ljava/lang/String;)Lnet/java/otr4j/session/SessionStatus;" new="valueOf"/>
   <method old="values()[Lnet/java/otr4j/session/SessionStatus;" new="values"/>
   <field old="$VALUES [Lnet/java/otr4j/session/SessionStatus;" new="f_b"/>
   <field old="ENCRYPTED Lnet/java/otr4j/session/SessionStatus;" new="f_e"/>
   <field old="FINISHED Lnet/java/otr4j/session/SessionStatus;" new="f_d"/>
   <field old="PLAINTEXT Lnet/java/otr4j/session/SessionStatus;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.search.UserSearch$Provider" new="wy.c_Y">
   <method old="parseIQ(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/IQ;" new="m_g"/>
  </class>
  <class old="org.xbill.DNS.Resolver" new="org.xbill.DNS.Resolver">
   <method old="send(Lorg/xbill/DNS/Message;)Lorg/xbill/DNS/Message;" new="m_d"/>
   <method old="sendAsync(Lorg/xbill/DNS/Message;Lorg/xbill/DNS/ResolverListener;)Ljava/lang/Object;" new="m_L"/>
   <method old="setEDNS(I)V" new="m_j"/>
   <method old="setEDNS(IIILjava/util/List;)V" new="m_K"/>
   <method old="setIgnoreTruncation(Z)V" new="m_e"/>
   <method old="setPort(I)V" new="m_m"/>
   <method old="setTCP(Z)V" new="m_E"/>
   <method old="setTSIGKey(Lorg/xbill/DNS/TSIG;)V" new="m_c"/>
   <method old="setTimeout(I)V" new="m_M"/>
   <method old="setTimeout(II)V" new="m_B"/>
  </class>
  <class old="org.xbill.DNS.KXRecord" new="org.xbill.DNS.c_Ta">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getNameField()Lorg/xbill/DNS/Name;" new="m_ng"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getPreference()I" new="m_nG"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getTarget()Lorg/xbill/DNS/Name;" new="m_ff"/>
   <method old="getType()I" new="m_b"/>
   <method old="getU16Field()I" new="m_DG"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="nameField Lorg/xbill/DNS/Name;" new="f_m"/>
   <field old="serialVersionUID J" new="f_m"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
   <field old="u16Field I" new="f_d"/>
  </class>
  <class old="net.java.otr4j.session.OtrSm" new="net.java.otr4j.session.c_f">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="abortSmp()Ljava/util/List;" new="m_RB"/>
   <method old="computeSessionId(Ljava/math/BigInteger;)[B" new="m_Av"/>
   <method old="doProcessTlv(Lnet/java/otr4j/session/TLV;)Z" new="m_Bw"/>
   <method old="initRespondSmp(Ljava/lang/String;Ljava/lang/String;Z)Ljava/util/List;" new="m_wV"/>
   <method old="makeTlvList(Lnet/java/otr4j/session/TLV;)Ljava/util/List;" new="m_GU"/>
   <method old="reset()V" new="m_ld"/>
   <field old="engineHost Lnet/java/otr4j/OtrEngineHost;" new="f_b"/>
   <field old="session Lnet/java/otr4j/session/Session;" new="f_m"/>
   <field old="smstate Lnet/java/otr4j/crypto/SM$SMState;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.extension.avatar.AvatarManager$1" new="wy.c_md">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/extension/avatar/AvatarManager;" new="f_m"/>
   <field old="val$bitmaps Ljava/util/Map;" new="f_e"/>
   <field old="val$hashes Ljava/util/Map;" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.extension.avatar.AvatarManager$2" new="wy.c_pc">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/extension/avatar/AvatarManager;" new="f_e"/>
   <field old="val$bareAddress Ljava/lang/String;" new="f_m"/>
   <field old="val$hash Ljava/lang/String;" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.extension.avatar.AvatarManager$3" new="wy.c_Od">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/extension/avatar/AvatarManager;" new="f_e"/>
   <field old="val$hash Ljava/lang/String;" new="f_b"/>
   <field old="val$value [B" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.extension.avatar.AvatarManager$4" new="wy.c_CB">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/extension/avatar/AvatarManager;" new="f_m"/>
   <field old="val$account Ljava/lang/String;" new="f_b"/>
   <field old="val$bareAddress Ljava/lang/String;" new="f_d"/>
   <field old="val$hash Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.extension.avatar.AvatarManager$5" new="wy.c_TC">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/extension/avatar/AvatarManager;" new="f_e"/>
   <field old="val$account Ljava/lang/String;" new="f_m"/>
   <field old="val$bareAddress Ljava/lang/String;" new="f_B"/>
   <field old="val$bitmap Landroid/graphics/Bitmap;" new="f_j"/>
   <field old="val$hash Ljava/lang/String;" new="f_b"/>
   <field old="val$value [B" new="f_d"/>
  </class>
  <class old="org.jivesoftware.smack.MessageListener" new="org.jivesoftware.smack.c_M">
   <method old="processMessage(Lorg/jivesoftware/smack/Chat;Lorg/jivesoftware/smack/packet/Message;)V" new="m_Pa"/>
  </class>
  <class old="com.xabber.android.ui.adapter.AccountToggleAdapter$AccountViewHolder" new="com.xabber.android.ui.adapter.c_W">
   <field old="avatar Landroid/widget/ImageView;" new="f_e"/>
   <field old="disabled Landroid/widget/ImageView;" new="f_m"/>
   <field old="statusMode Landroid/widget/ImageView;" new="f_b"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.Subject" new="org.apache.harmony.javax.security.auth.c_k">
   <method old="access$000()Lorg/apache/harmony/javax/security/auth/AuthPermission;" new="m_Jf"/>
   <method old="access$100(Lorg/apache/harmony/javax/security/auth/Subject;)V" new="m_Rx"/>
   <method old="access$200(Ljava/security/Permission;)V" new="m_mV"/>
   <method old="access$300()Lorg/apache/harmony/javax/security/auth/AuthPermission;" new="m_Ex"/>
   <method old="access$400(Lorg/apache/harmony/javax/security/auth/Subject;)Ljava/util/Set;" new="m_eV"/>
   <method old="access$500()Lorg/apache/harmony/javax/security/auth/AuthPermission;" new="m_cV"/>
   <method old="checkPermission(Ljava/security/Permission;)V" new="m_YU"/>
   <method old="checkState()V" new="m_qx"/>
   <method old="doAs(Lorg/apache/harmony/javax/security/auth/Subject;Ljava/security/PrivilegedAction;)Ljava/lang/Object;" new="m_VW"/>
   <method old="doAs(Lorg/apache/harmony/javax/security/auth/Subject;Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;" new="m_iU"/>
   <method old="doAsPrivileged(Lorg/apache/harmony/javax/security/auth/Subject;Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" new="m_Ew"/>
   <method old="doAsPrivileged(Lorg/apache/harmony/javax/security/auth/Subject;Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" new="m_eW"/>
   <method old="doAs_PrivilegedAction(Lorg/apache/harmony/javax/security/auth/Subject;Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" new="m_UV"/>
   <method old="doAs_PrivilegedExceptionAction(Lorg/apache/harmony/javax/security/auth/Subject;Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" new="m_QV"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getPrincipals()Ljava/util/Set;" new="m_hv"/>
   <method old="getPrincipals(Ljava/lang/Class;)Ljava/util/Set;" new="m_ww"/>
   <method old="getPrivateCredentials()Ljava/util/Set;" new="m_Rw"/>
   <method old="getPrivateCredentials(Ljava/lang/Class;)Ljava/util/Set;" new="m_yv"/>
   <method old="getPublicCredentials()Ljava/util/Set;" new="m_Cx"/>
   <method old="getPublicCredentials(Ljava/lang/Class;)Ljava/util/Set;" new="m_gx"/>
   <method old="getSubject(Ljava/security/AccessControlContext;)Lorg/apache/harmony/javax/security/auth/Subject;" new="m_rx"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="isReadOnly()Z" new="m_GW"/>
   <method old="readObject(Ljava/io/ObjectInputStream;)V" new="m_CQ"/>
   <method old="setReadOnly()V" new="m_NV"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="writeObject(Ljava/io/ObjectOutputStream;)V" new="m_CP"/>
   <field old="_AS Lorg/apache/harmony/javax/security/auth/AuthPermission;" new="f_m"/>
   <field old="_AS_PRIVILEGED Lorg/apache/harmony/javax/security/auth/AuthPermission;" new="f_I"/>
   <field old="_PRINCIPALS Lorg/apache/harmony/javax/security/auth/AuthPermission;" new="f_l"/>
   <field old="_PRIVATE_CREDENTIALS Lorg/apache/harmony/javax/security/auth/AuthPermission;" new="f_B"/>
   <field old="_PUBLIC_CREDENTIALS Lorg/apache/harmony/javax/security/auth/AuthPermission;" new="f_f"/>
   <field old="_READ_ONLY Lorg/apache/harmony/javax/security/auth/AuthPermission;" new="f_b"/>
   <field old="_SUBJECT Lorg/apache/harmony/javax/security/auth/AuthPermission;" new="f_d"/>
   <field old="principals Ljava/util/Set;" new="f_k"/>
   <field old="privateCredentials Lorg/apache/harmony/javax/security/auth/Subject$SecureSet;" new="f_e"/>
   <field old="publicCredentials Lorg/apache/harmony/javax/security/auth/Subject$SecureSet;" new="f_j"/>
   <field old="readOnly Z" new="f_J"/>
   <field old="serialVersionUID J" new="f_K"/>
  </class>
  <class old="net.java.otr4j.crypto.SM" new="wy.c_WB">
   <method old="checkEqualCoords(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Lnet/java/otr4j/crypto/SM$SMState;I)I" new="m_zZ"/>
   <method old="checkEqualLogs(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Lnet/java/otr4j/crypto/SM$SMState;I)I" new="m_yy"/>
   <method old="checkExpon(Ljava/math/BigInteger;)Z" new="m_Ly"/>
   <method old="checkGroupElem(Ljava/math/BigInteger;)Z" new="m_TZ"/>
   <method old="checkKnowLog(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;I)I" new="m_sy"/>
   <method old="hash(ILjava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;" new="m_HX"/>
   <method old="main([Ljava/lang/String;)V" new="main"/>
   <method old="proofEqualCoords(Lnet/java/otr4j/crypto/SM$SMState;Ljava/math/BigInteger;I)[Ljava/math/BigInteger;" new="m_Pz"/>
   <method old="proofEqualLogs(Lnet/java/otr4j/crypto/SM$SMState;I)[Ljava/math/BigInteger;" new="m_Cy"/>
   <method old="proofKnowLog(Ljava/math/BigInteger;Ljava/math/BigInteger;I)[Ljava/math/BigInteger;" new="m_wy"/>
   <method old="randomExponent()Ljava/math/BigInteger;" new="m_Rz"/>
   <method old="serialize([Ljava/math/BigInteger;)[B" new="m_BY"/>
   <method old="step1(Lnet/java/otr4j/crypto/SM$SMState;[B)[B" new="m_Laa"/>
   <method old="step2a(Lnet/java/otr4j/crypto/SM$SMState;[BI)V" new="m_YZ"/>
   <method old="step2b(Lnet/java/otr4j/crypto/SM$SMState;[B)[B" new="m_sz"/>
   <method old="step3(Lnet/java/otr4j/crypto/SM$SMState;[B)[B" new="m_HZ"/>
   <method old="step4(Lnet/java/otr4j/crypto/SM$SMState;[B)[B" new="m_QZ"/>
   <method old="step5(Lnet/java/otr4j/crypto/SM$SMState;[B)V" new="m_oZ"/>
   <method old="unserialize([B)[Ljava/math/BigInteger;" new="m_cZ"/>
   <field old="EXPECT1 I" new="f_I"/>
   <field old="EXPECT2 I" new="f_m"/>
   <field old="EXPECT3 I" new="f_g"/>
   <field old="EXPECT4 I" new="f_M"/>
   <field old="EXPECT5 I" new="f_k"/>
   <field old="GENERATOR_S [B" new="f_b"/>
   <field old="MODULUS_MINUS_2 Ljava/math/BigInteger;" new="f_F"/>
   <field old="MODULUS_S Ljava/math/BigInteger;" new="f_h"/>
   <field old="MOD_LEN_BITS I" new="f_J"/>
   <field old="MOD_LEN_BYTES I" new="f_d"/>
   <field old="MSG1_LEN I" new="f_B"/>
   <field old="MSG2_LEN I" new="f_l"/>
   <field old="MSG3_LEN I" new="f_D"/>
   <field old="MSG4_LEN I" new="f_j"/>
   <field old="ORDER_S Ljava/math/BigInteger;" new="f_K"/>
   <field old="PROG_CHEATED I" new="f_e"/>
   <field old="PROG_FAILED I" new="f_H"/>
   <field old="PROG_OK I" new="f_f"/>
   <field old="PROG_SUCCEEDED I" new="f_G"/>
  </class>
  <class old="org.jivesoftware.smackx.muc.InvitationRejectionListener" new="org.jivesoftware.smackx.muc.c_H">
   <method old="invitationDeclined(Ljava/lang/String;Ljava/lang/String;)V" new="m_w"/>
  </class>
  <class old="org.jivesoftware.smackx.provider.MultipleAddressesProvider" new="org.jivesoftware.smackx.provider.c_M">
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_I"/>
  </class>
  <class old="org.xbill.DNS.EmptyRecord" new="org.xbill.DNS.c_xa">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="serialVersionUID J" new="f_m"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smack.packet.Authentication" new="org.jivesoftware.smack.packet.c_l">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getDigest()Ljava/lang/String;" new="m_te"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getPassword()Ljava/lang/String;" new="m_rj"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getResource()Ljava/lang/String;" new="m_Au"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getUsername()Ljava/lang/String;" new="m_tq"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setDigest(Ljava/lang/String;)V" new="m_tT"/>
   <method old="setDigest(Ljava/lang/String;Ljava/lang/String;)V" new="m_ts"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setPassword(Ljava/lang/String;)V" new="m_RK"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setResource(Ljava/lang/String;)V" new="m_pT"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="setUsername(Ljava/lang/String;)V" new="m_IS"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="digest Ljava/lang/String;" new="f_b"/>
   <field old="password Ljava/lang/String;" new="f_m"/>
   <field old="resource Ljava/lang/String;" new="f_B"/>
   <field old="username Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smack.util.ReaderListener" new="org.jivesoftware.smack.util.ReaderListener">
   <method old="close()V" new="m_la"/>
   <method old="read(Ljava/lang/String;)V" new="m_qB"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.util.encoders.Base64Encoder" new="wy.c_yc">
   <method old="decode(Ljava/lang/String;Ljava/io/OutputStream;)I" new="m_sd"/>
   <method old="decode([BIILjava/io/OutputStream;)I" new="m_rA"/>
   <method old="decodeLastBlock(Ljava/io/OutputStream;CCCC)I" new="m_Ey"/>
   <method old="encode([BIILjava/io/OutputStream;)I" new="m_kB"/>
   <method old="ignore(C)Z" new="m_jaa"/>
   <method old="initialiseDecodingTable()V" new="m_yY"/>
   <method old="nextI(Ljava/lang/String;II)I" new="m_rY"/>
   <method old="nextI([BII)I" new="m_qy"/>
   <field old="decodingTable [B" new="f_b"/>
   <field old="encodingTable [B" new="f_m"/>
   <field old="padding B" new="f_e"/>
  </class>
  <class old="com.xabber.xmpp.vcard.AddressProperty" new="com.xabber.xmpp.vcard.AddressProperty">
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/xmpp/vcard/AddressProperty;" new="valueOf"/>
   <method old="values()[Lcom/xabber/xmpp/vcard/AddressProperty;" new="values"/>
   <field old="$VALUES [Lcom/xabber/xmpp/vcard/AddressProperty;" new="f_e"/>
   <field old="CTRY Lcom/xabber/xmpp/vcard/AddressProperty;" new="f_B"/>
   <field old="EXTADR Lcom/xabber/xmpp/vcard/AddressProperty;" new="f_b"/>
   <field old="LOCALITY Lcom/xabber/xmpp/vcard/AddressProperty;" new="f_k"/>
   <field old="PCODE Lcom/xabber/xmpp/vcard/AddressProperty;" new="f_m"/>
   <field old="POBOX Lcom/xabber/xmpp/vcard/AddressProperty;" new="f_l"/>
   <field old="REGION Lcom/xabber/xmpp/vcard/AddressProperty;" new="f_j"/>
   <field old="STREET Lcom/xabber/xmpp/vcard/AddressProperty;" new="f_d"/>
  </class>
  <class old="org.jivesoftware.smackx.filetransfer.IBBTransferNegotiator$1" new="org.jivesoftware.smackx.filetransfer.c_e">
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.params.DSAParameters" new="wy.c_Sd">
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getG()Ljava/math/BigInteger;" new="m_Yy"/>
   <method old="getP()Ljava/math/BigInteger;" new="m_Xz"/>
   <method old="getQ()Ljava/math/BigInteger;" new="m_Jz"/>
   <method old="getValidationParameters()Lnet/java/otr4j/bouncycastle/crypto/params/DSAValidationParameters;" new="m_QX"/>
   <method old="hashCode()I" new="hashCode"/>
   <field old="g Ljava/math/BigInteger;" new="f_d"/>
   <field old="p Ljava/math/BigInteger;" new="f_b"/>
   <field old="q Ljava/math/BigInteger;" new="f_m"/>
   <field old="validation Lnet/java/otr4j/bouncycastle/crypto/params/DSAValidationParameters;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smack.packet.Message" new="org.jivesoftware.smack.packet.c_d">
   <method old="addBody(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/Message$Body;" new="m_Gu"/>
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="addSubject(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/Message$Subject;" new="m_Et"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="determineLanguage(Ljava/lang/String;)Ljava/lang/String;" new="m_yT"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getBodies()Ljava/util/Collection;" new="m_vj"/>
   <method old="getBody()Ljava/lang/String;" new="m_St"/>
   <method old="getBody(Ljava/lang/String;)Ljava/lang/String;" new="m_AU"/>
   <method old="getBodyLanguages()Ljava/util/Collection;" new="m_Rt"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getLanguage()Ljava/lang/String;" new="m_lJ"/>
   <method old="getMessageBody(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/Message$Body;" new="m_su"/>
   <method old="getMessageSubject(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/Message$Subject;" new="m_NR"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getSubject()Ljava/lang/String;" new="m_wM"/>
   <method old="getSubject(Ljava/lang/String;)Ljava/lang/String;" new="m_As"/>
   <method old="getSubjectLanguages()Ljava/util/Collection;" new="m_AS"/>
   <method old="getSubjects()Ljava/util/Collection;" new="m_eS"/>
   <method old="getThread()Ljava/lang/String;" new="m_QR"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/Message$Type;" new="m_b"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeBody(Ljava/lang/String;)Z" new="m_es"/>
   <method old="removeBody(Lorg/jivesoftware/smack/packet/Message$Body;)Z" new="m_qS"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="removeSubject(Ljava/lang/String;)Z" new="m_gu"/>
   <method old="removeSubject(Lorg/jivesoftware/smack/packet/Message$Subject;)Z" new="m_VS"/>
   <method old="setBody(Ljava/lang/String;)V" new="m_lt"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setLanguage(Ljava/lang/String;)V" new="m_bL"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setSubject(Ljava/lang/String;)V" new="m_Lt"/>
   <method old="setThread(Ljava/lang/String;)V" new="m_Qs"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/Message$Type;)V" new="m_gs"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="bodies Ljava/util/Set;" new="f_d"/>
   <field old="language Ljava/lang/String;" new="f_B"/>
   <field old="subjects Ljava/util/Set;" new="f_m"/>
   <field old="thread Ljava/lang/String;" new="f_b"/>
   <field old="type Lorg/jivesoftware/smack/packet/Message$Type;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.muc.RoomListenerMultiplexor$RoomMultiplexListener" new="org.jivesoftware.smackx.muc.RoomListenerMultiplexor$RoomMultiplexListener">
   <method old="addRoom(Ljava/lang/String;Lorg/jivesoftware/smackx/muc/PacketMultiplexListener;)V" new="m_CJ"/>
   <method old="processPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_C"/>
   <method old="removeRoom(Ljava/lang/String;)V" new="m_zK"/>
   <field old="roomListenersByAddress Ljava/util/Map;" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.archive.Modified" new="com.xabber.xmpp.archive.c_i">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="addModified(Lcom/xabber/xmpp/archive/AbstractModified;)V" new="m_sBa"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChats()Ljava/util/Collection;" new="m_pca"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getRsm()Lcom/xabber/xmpp/rsm/Set;" new="m_yCa"/>
   <method old="getStart()Ljava/util/Date;" new="m_vC"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="serializeContent(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_Fb"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setRsm(Lcom/xabber/xmpp/rsm/Set;)V" new="m_dba"/>
   <method old="setStart(Ljava/util/Date;)V" new="m_SBa"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_j"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="NAMESPACE Ljava/lang/String;" new="f_e"/>
   <field old="START_ATTRIBUTE Ljava/lang/String;" new="f_b"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="chats Ljava/util/Collection;" new="f_B"/>
   <field old="rsm Lcom/xabber/xmpp/rsm/Set;" new="f_m"/>
   <field old="start Ljava/util/Date;" new="f_d"/>
  </class>
  <class old="com.xabber.android.data.extension.muc.MUCManager$1" new="com.xabber.android.data.extension.muc.c_f">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/extension/muc/MUCManager;" new="f_b"/>
   <field old="val$needJoins Ljava/util/Collection;" new="f_m"/>
   <field old="val$roomChats Ljava/util/Collection;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.extension.muc.MUCManager$2" new="com.xabber.android.data.extension.muc.c_j">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/extension/muc/MUCManager;" new="f_m"/>
   <field old="val$account Ljava/lang/String;" new="f_b"/>
   <field old="val$room Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.extension.muc.MUCManager$3" new="com.xabber.android.data.extension.muc.c_J">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/extension/muc/MUCManager;" new="f_j"/>
   <field old="val$account Ljava/lang/String;" new="f_b"/>
   <field old="val$join Z" new="f_B"/>
   <field old="val$nickname Ljava/lang/String;" new="f_m"/>
   <field old="val$password Ljava/lang/String;" new="f_e"/>
   <field old="val$room Ljava/lang/String;" new="f_d"/>
  </class>
  <class old="com.xabber.android.data.extension.muc.MUCManager$4" new="com.xabber.android.data.extension.muc.c_M">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/extension/muc/MUCManager;" new="f_j"/>
   <field old="val$account Ljava/lang/String;" new="f_d"/>
   <field old="val$multiUserChat Lorg/jivesoftware/smackx/muc/MultiUserChat;" new="f_k"/>
   <field old="val$nickname Ljava/lang/String;" new="f_m"/>
   <field old="val$password Ljava/lang/String;" new="f_b"/>
   <field old="val$room Ljava/lang/String;" new="f_B"/>
   <field old="val$roomChat Lcom/xabber/android/data/extension/muc/RoomChat;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.extension.muc.MUCManager$5" new="com.xabber.android.data.extension.muc.c_H">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/extension/muc/MUCManager;" new="f_m"/>
   <field old="val$multiUserChat Lorg/jivesoftware/smackx/muc/MultiUserChat;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smack.filter.PacketFilter" new="wy.c_A">
   <method old="accept(Lorg/jivesoftware/smack/packet/Packet;)Z" new="m_x"/>
  </class>
  <class old="org.xbill.DNS.WKSRecord$Service" new="org.xbill.DNS.c_f">
   <method old="string(I)Ljava/lang/String;" new="m_Wd"/>
   <method old="value(Ljava/lang/String;)I" new="m_le"/>
   <field old="AUTH I" new="f_ba"/>
   <field old="BL_IDM I" new="f_Ia"/>
   <field old="BOOTPC I" new="f_G"/>
   <field old="BOOTPS I" new="f_C"/>
   <field old="CHARGEN I" new="f_Sa"/>
   <field old="CISCO_FNA I" new="f_t"/>
   <field old="CISCO_SYS I" new="f_La"/>
   <field old="CISCO_TNA I" new="f_E"/>
   <field old="CSNET_NS I" new="f_Q"/>
   <field old="DAYTIME I" new="f_W"/>
   <field old="DCP I" new="f_u"/>
   <field old="DISCARD I" new="f_v"/>
   <field old="DOMAIN I" new="f_o"/>
   <field old="DSP I" new="f_r"/>
   <field old="ECHO I" new="f_J"/>
   <field old="EMFIS_CNTL I" new="f_i"/>
   <field old="EMFIS_DATA I" new="f_m"/>
   <field old="ERPC I" new="f_d"/>
   <field old="FINGER I" new="f_p"/>
   <field old="FTP I" new="f_A"/>
   <field old="FTP_DATA I" new="f_x"/>
   <field old="GRAPHICS I" new="f_D"/>
   <field old="HOSTNAME I" new="f_ja"/>
   <field old="HOSTS2_NS I" new="f_R"/>
   <field old="INGRES_NET I" new="f_ka"/>
   <field old="ISI_GL I" new="f_Ba"/>
   <field old="ISO_TSAP I" new="f_Ma"/>
   <field old="LA_MAINT I" new="f_n"/>
   <field old="LINK I" new="f_fa"/>
   <field old="LOCUS_CON I" new="f_l"/>
   <field old="LOCUS_MAP I" new="f_Ja"/>
   <field old="LOC_SRV I" new="f_Y"/>
   <field old="LOGIN I" new="f_j"/>
   <field old="METAGRAM I" new="f_a"/>
   <field old="MIT_DOV I" new="f_s"/>
   <field old="MPM I" new="f_ca"/>
   <field old="MPM_FLAGS I" new="f_Ga"/>
   <field old="MPM_SND I" new="f_Ha"/>
   <field old="MSG_AUTH I" new="f_ea"/>
   <field old="MSG_ICP I" new="f_g"/>
   <field old="NAMESERVER I" new="f_Fa"/>
   <field old="NETBIOS_DGM I" new="f_B"/>
   <field old="NETBIOS_NS I" new="f_T"/>
   <field old="NETBIOS_SSN I" new="f_b"/>
   <field old="NETRJS_1 I" new="f_ga"/>
   <field old="NETRJS_2 I" new="f_c"/>
   <field old="NETRJS_3 I" new="f_q"/>
   <field old="NETRJS_4 I" new="f_da"/>
   <field old="NICNAME I" new="f_oa"/>
   <field old="NI_FTP I" new="f_Z"/>
   <field old="NI_MAIL I" new="f_z"/>
   <field old="NNTP I" new="f_k"/>
   <field old="NSW_FE I" new="f_aa"/>
   <field old="NTP I" new="f_Ca"/>
   <field old="POP_2 I" new="f_L"/>
   <field old="PROFILE I" new="f_M"/>
   <field old="PWDGEN I" new="f_ha"/>
   <field old="QUOTE I" new="f_S"/>
   <field old="RJE I" new="f_F"/>
   <field old="RLP I" new="f_O"/>
   <field old="RTELNET I" new="f_Ka"/>
   <field old="SFTP I" new="f_X"/>
   <field old="SMTP I" new="f_Aa"/>
   <field old="STATSRV I" new="f_H"/>
   <field old="SUNRPC I" new="f_N"/>
   <field old="SUPDUP I" new="f_Ea"/>
   <field old="SUR_MEAS I" new="f_la"/>
   <field old="SU_MIT_TG I" new="f_Da"/>
   <field old="SWIFT_RVF I" new="f_w"/>
   <field old="TACACS_DS I" new="f_y"/>
   <field old="TACNEWS I" new="f_I"/>
   <field old="TELNET I" new="f_V"/>
   <field old="TFTP I" new="f_e"/>
   <field old="TIME I" new="f_P"/>
   <field old="USERS I" new="f_ia"/>
   <field old="UUCP_PATH I" new="f_U"/>
   <field old="VIA_FTP I" new="f_ma"/>
   <field old="X400 I" new="f_K"/>
   <field old="X400_SND I" new="f_h"/>
   <field old="services Lorg/xbill/DNS/Mnemonic;" new="f_f"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$Activate" new="org.jivesoftware.smackx.bytestreams.socks5.packet.c_A">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="getTarget()Ljava/lang/String;" new="m_ff"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="ELEMENTNAME Ljava/lang/String;" new="f_e"/>
   <field old="NAMESPACE Ljava/lang/String;" new="f_m"/>
   <field old="target Ljava/lang/String;" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smack.util.WriterListener" new="org.jivesoftware.smack.util.c_E">
   <method old="close()V" new="m_la"/>
   <method old="write(Ljava/lang/String;)V" new="m_Md"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.params.DSAPublicKeyParameters" new="wy.c_fA">
   <method old="getParameters()Lnet/java/otr4j/bouncycastle/crypto/params/DSAParameters;" new="m_Paa"/>
   <method old="getY()Ljava/math/BigInteger;" new="m_yz"/>
   <method old="isPrivate()Z" new="m_Gaa"/>
   <field old="privateKey Z" new="f_m"/>
   <field old="y Ljava/math/BigInteger;" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.ssn.LoggingValue" new="com.xabber.xmpp.ssn.LoggingValue">
   <method old="createOption()Lorg/jivesoftware/smackx/FormField$Option;" new="m_Hy"/>
   <method old="fromString(Ljava/lang/String;)Lcom/xabber/xmpp/ssn/LoggingValue;" new="m_tc"/>
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/xmpp/ssn/LoggingValue;" new="valueOf"/>
   <method old="values()[Lcom/xabber/xmpp/ssn/LoggingValue;" new="values"/>
   <field old="$VALUES [Lcom/xabber/xmpp/ssn/LoggingValue;" new="f_d"/>
   <field old="label Ljava/lang/String;" new="f_b"/>
   <field old="may Lcom/xabber/xmpp/ssn/LoggingValue;" new="f_m"/>
   <field old="mustnot Lcom/xabber/xmpp/ssn/LoggingValue;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smack.Connection$ListenerWrapper" new="org.jivesoftware.smack.c_Z">
   <method old="notifyListener(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_TU"/>
   <field old="packetFilter Lorg/jivesoftware/smack/filter/PacketFilter;" new="f_m"/>
   <field old="packetListener Lorg/jivesoftware/smack/PacketListener;" new="f_e"/>
  </class>
  <class old="org.apache.harmony.javax.security.sasl.AuthenticationException" new="org.apache.harmony.javax.security.sasl.c_j">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getCause()Ljava/lang/Throwable;" new="getCause"/>
   <method old="initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;" new="initCause"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="serialVersionUID J" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.provider.MUCUserProvider" new="org.jivesoftware.smackx.provider.c_j">
   <method old="parseDecline(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smackx/packet/MUCUser$Decline;" new="m_Nj"/>
   <method old="parseDestroy(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smackx/packet/MUCUser$Destroy;" new="m_EK"/>
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_I"/>
   <method old="parseInvite(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smackx/packet/MUCUser$Invite;" new="m_qj"/>
   <method old="parseItem(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smackx/packet/MUCUser$Item;" new="m_cK"/>
  </class>
  <class old="org.jivesoftware.smackx.ServiceDiscoveryManager" new="org.jivesoftware.smackx.c_d">
   <method old="access$100(Lorg/jivesoftware/smackx/ServiceDiscoveryManager;)Lorg/jivesoftware/smack/Connection;" new="m_Hr"/>
   <method old="access$200()Ljava/util/Map;" new="m_vq"/>
   <method old="access$300(Lorg/jivesoftware/smackx/ServiceDiscoveryManager;)Lorg/jivesoftware/smackx/EntityCapsManager;" new="m_kP"/>
   <method old="access$400(Lorg/jivesoftware/smackx/ServiceDiscoveryManager;)Ljava/lang/String;" new="m_Tr"/>
   <method old="access$500(Lorg/jivesoftware/smackx/ServiceDiscoveryManager;Ljava/lang/String;)Lorg/jivesoftware/smackx/NodeInformationProvider;" new="m_tp"/>
   <method old="access$600(Lorg/jivesoftware/smackx/ServiceDiscoveryManager;)Z" new="m_nr"/>
   <method old="addDiscoverInfoTo(Lorg/jivesoftware/smackx/packet/DiscoverInfo;)V" new="m_XP"/>
   <method old="addFeature(Ljava/lang/String;)V" new="m_oK"/>
   <method old="canPublishItems(Ljava/lang/String;)Z" new="m_Nr"/>
   <method old="canPublishItems(Lorg/jivesoftware/smackx/packet/DiscoverInfo;)Z" new="m_pQ"/>
   <method old="cloneDiscoverInfo(Lorg/jivesoftware/smackx/packet/DiscoverInfo;)Lorg/jivesoftware/smackx/packet/DiscoverInfo;" new="m_MR"/>
   <method old="discoverInfo(Ljava/lang/String;)Lorg/jivesoftware/smackx/packet/DiscoverInfo;" new="m_Zq"/>
   <method old="discoverInfo(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smackx/packet/DiscoverInfo;" new="m_vO"/>
   <method old="discoverInfoByCaps(Ljava/lang/String;)Lorg/jivesoftware/smackx/packet/DiscoverInfo;" new="m_bP"/>
   <method old="discoverItems(Ljava/lang/String;)Lorg/jivesoftware/smackx/packet/DiscoverItems;" new="m_jR"/>
   <method old="discoverItems(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smackx/packet/DiscoverItems;" new="m_GR"/>
   <method old="getEntityCapsManager()Lorg/jivesoftware/smackx/EntityCapsManager;" new="m_IR"/>
   <method old="getEntityCapsVersion()Ljava/lang/String;" new="m_wO"/>
   <method old="getFeatures()Ljava/util/Iterator;" new="m_hL"/>
   <method old="getIdentityName()Ljava/lang/String;" new="m_Fp"/>
   <method old="getIdentityType()Ljava/lang/String;" new="m_JR"/>
   <method old="getInstanceFor(Lorg/jivesoftware/smack/Connection;)Lorg/jivesoftware/smackx/ServiceDiscoveryManager;" new="m_Rm"/>
   <method old="getNodeInformationProvider(Ljava/lang/String;)Lorg/jivesoftware/smackx/NodeInformationProvider;" new="m_CR"/>
   <method old="getOwnDiscoverInfo()Lorg/jivesoftware/smackx/packet/DiscoverInfo;" new="m_PP"/>
   <method old="includesFeature(Ljava/lang/String;)Z" new="m_DR"/>
   <method old="init()V" new="m_ZG"/>
   <method old="isNonCapsCachingEnabled()Z" new="m_pp"/>
   <method old="isSendPresence()Z" new="m_Mq"/>
   <method old="publishItems(Ljava/lang/String;Ljava/lang/String;Lorg/jivesoftware/smackx/packet/DiscoverItems;)V" new="m_Lq"/>
   <method old="publishItems(Ljava/lang/String;Lorg/jivesoftware/smackx/packet/DiscoverItems;)V" new="m_GQ"/>
   <method old="removeExtendedInfo()V" new="m_hR"/>
   <method old="removeFeature(Ljava/lang/String;)V" new="m_Qq"/>
   <method old="removeNodeInformationProvider(Ljava/lang/String;)V" new="m_Cp"/>
   <method old="renewEntityCapsVersion()V" new="m_NP"/>
   <method old="setEntityCapsManager(Lorg/jivesoftware/smackx/EntityCapsManager;)V" new="m_zQ"/>
   <method old="setExtendedInfo(Lorg/jivesoftware/smackx/packet/DataForm;)V" new="m_yO"/>
   <method old="setIdentityName(Ljava/lang/String;)V" new="m_gq"/>
   <method old="setIdentityType(Ljava/lang/String;)V" new="m_Dp"/>
   <method old="setNodeInformationProvider(Ljava/lang/String;Lorg/jivesoftware/smackx/NodeInformationProvider;)V" new="m_VP"/>
   <method old="setNonCapsCaching(Z)V" new="m_iQ"/>
   <method old="setSendPresence()V" new="m_BQ"/>
   <field old="cacheNonCaps Z" new="f_b"/>
   <field old="capsManager Lorg/jivesoftware/smackx/EntityCapsManager;" new="f_d"/>
   <field old="connection Lorg/jivesoftware/smack/Connection;" new="f_j"/>
   <field old="currentCapsVersion Ljava/lang/String;" new="f_e"/>
   <field old="entityNode Ljava/lang/String;" new="f_k"/>
   <field old="extendedInfo Lorg/jivesoftware/smackx/packet/DataForm;" new="f_I"/>
   <field old="features Ljava/util/List;" new="f_m"/>
   <field old="identityName Ljava/lang/String;" new="f_l"/>
   <field old="identityType Ljava/lang/String;" new="f_J"/>
   <field old="instances Ljava/util/Map;" new="f_f"/>
   <field old="nodeInformationProviders Ljava/util/Map;" new="f_B"/>
   <field old="nonCapsCache Ljava/util/Map;" new="f_D"/>
   <field old="sendPresence Z" new="f_K"/>
  </class>
  <class old="com.xabber.xmpp.vcard.AbstractBinaryData" new="com.xabber.xmpp.vcard.c_W">
   <method old="getData()[B" new="m_tD"/>
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getType()Ljava/lang/String;" new="m_b"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="setData([B)V" new="m_jz"/>
   <method old="setType(Ljava/lang/String;)V" new="m_Al"/>
   <method old="writeBody(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_zy"/>
   <field old="BINVAL_NAME Ljava/lang/String;" new="f_d"/>
   <field old="MAX_ENCODED_DATA_SIZE I" new="f_m"/>
   <field old="TYPE_NAME Ljava/lang/String;" new="f_b"/>
   <field old="data [B" new="f_e"/>
   <field old="type Ljava/lang/String;" new="f_B"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.ibb.packet.Data" new="wy.c_x">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDataPacketExtension()Lorg/jivesoftware/smackx/bytestreams/ibb/packet/DataPacketExtension;" new="m_um"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="dataPacketExtension Lorg/jivesoftware/smackx/bytestreams/ibb/packet/DataPacketExtension;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.adapter.SmoothContactAdapter" new="com.xabber.android.ui.adapter.c_c">
   <method old="getCount()I" new="getCount"/>
   <method old="getFilter()Landroid/widget/Filter;" new="getFilter"/>
   <method old="getInflater()Lcom/xabber/android/ui/adapter/BaseContactInflater;" new="m_zaa"/>
   <method old="getItem(I)Ljava/lang/Object;" new="getItem"/>
   <method old="getItemId(I)J" new="getItemId"/>
   <method old="getView(ILandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;" new="getView"/>
   <method old="onChange()V" new="m_cb"/>
   <field old="SMOOTH_SCROLLBAR_LIMIT I" new="f_m"/>
   <field old="activity Landroid/app/Activity;" new="f_B"/>
   <field old="baseEntities Ljava/util/ArrayList;" new="f_b"/>
   <field old="contactFilter Lcom/xabber/android/ui/adapter/BaseContactAdapter$ContactFilter;" new="f_j"/>
   <field old="filterString Ljava/lang/String;" new="f_e"/>
   <field old="inflater Lcom/xabber/android/ui/adapter/BaseContactInflater;" new="f_d"/>
   <field old="listView Landroid/widget/ListView;" new="f_e"/>
   <field old="locale Ljava/util/Locale;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.connection.CertificateManager" new="com.xabber.android.data.connection.c_S">
   <method old="accept(Ljava/lang/String;Lcom/xabber/android/data/connection/CertificateInvalidReason;)V" new="m_TJa"/>
   <method old="access$000(Lcom/xabber/android/data/connection/CertificateManager;)Ljava/util/Collection;" new="m_MKa"/>
   <method old="access$100(Lcom/xabber/android/data/connection/CertificateManager;Ljava/util/Map;Ljava/util/Map;)V" new="m_kja"/>
   <method old="access$200(Ljava/lang/String;Lcom/xabber/android/data/connection/CertificateInvalidReason;Ljava/util/Collection;)Lcom/xabber/android/data/connection/PendingCertificate;" new="m_Aja"/>
   <method old="access$300(Lcom/xabber/android/data/connection/CertificateManager;)Lcom/xabber/android/data/notification/BaseNotificationProvider;" new="m_RKa"/>
   <method old="access$400()Ljava/util/Map;" new="m_QJa"/>
   <method old="access$500()[C" new="m_cV"/>
   <method old="access$600(Lcom/xabber/android/data/connection/CertificateManager;)Ljava/util/Map;" new="m_kla"/>
   <method old="access$700(Lcom/xabber/android/data/connection/CertificateManager;Ljava/lang/String;Ljava/security/cert/X509Certificate;Lcom/xabber/android/data/connection/CertificateInvalidReason;)Z" new="m_Xja"/>
   <method old="createCertificateListener(Lcom/xabber/android/data/connection/ConnectionItem;)Lorg/jivesoftware/smack/CertificateListener;" new="m_mKa"/>
   <method old="createKeyStore(Lcom/xabber/android/data/connection/CertificateInvalidReason;)Ljava/security/KeyStore;" new="m_HLa"/>
   <method old="discard(Ljava/lang/String;Lcom/xabber/android/data/connection/CertificateInvalidReason;)V" new="m_Yja"/>
   <method old="getFingerprint(Ljava/security/cert/X509Certificate;)Ljava/lang/String;" new="m_Vja"/>
   <method old="getInputStream(Ljava/io/File;)Ljava/io/InputStream;" new="m_pJa"/>
   <method old="getInstance()Lcom/xabber/android/data/connection/CertificateManager;" new="m_Xr"/>
   <method old="getPendingCertificate(Ljava/lang/String;Lcom/xabber/android/data/connection/CertificateInvalidReason;)Lcom/xabber/android/data/connection/PendingCertificate;" new="m_RJa"/>
   <method old="getPendingCertificate(Ljava/lang/String;Lcom/xabber/android/data/connection/CertificateInvalidReason;Ljava/util/Collection;)Lcom/xabber/android/data/connection/PendingCertificate;" new="m_ALa"/>
   <method old="isTrustedCertificate(Ljava/lang/String;Ljava/security/cert/X509Certificate;Lcom/xabber/android/data/connection/CertificateInvalidReason;)Z" new="m_gLa"/>
   <method old="loadKeyStore(Ljava/io/InputStream;)Ljava/security/KeyStore;" new="m_FJa"/>
   <method old="onClear()V" new="m_nC"/>
   <method old="onLoad()V" new="m_pA"/>
   <method old="onLoaded(Ljava/util/Map;Ljava/util/Map;)V" new="m_BIa"/>
   <method old="removeCertificates()V" new="m_qKa"/>
   <method old="showFingerprint(Ljava/lang/String;)Ljava/lang/String;" new="m_UJa"/>
   <field old="INVALID Ljava/lang/String;" new="f_m"/>
   <field old="KEY_FILES Ljava/util/Map;" new="f_d"/>
   <field old="PASSWORD [C" new="f_e"/>
   <field old="defaultStores Ljava/util/Map;" new="f_b"/>
   <field old="ignoreCertificates Ljava/util/Collection;" new="f_k"/>
   <field old="instance Lcom/xabber/android/data/connection/CertificateManager;" new="f_B"/>
   <field old="keyStores Ljava/util/Map;" new="f_j"/>
   <field old="pendingCertificateProvider Lcom/xabber/android/data/notification/BaseNotificationProvider;" new="f_l"/>
  </class>
  <class old="com.xabber.android.data.roster.SystemContactStatus" new="com.xabber.android.data.roster.c_J">
   <method old="createStatus(Lcom/xabber/android/data/roster/RosterContact;)Lcom/xabber/android/data/roster/SystemContactStatus;" new="m_pDa"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getPresence()Ljava/lang/Integer;" new="m_hDa"/>
   <method old="getPresence(Lcom/xabber/android/data/account/StatusMode;)Ljava/lang/Integer;" new="m_iEa"/>
   <method old="getText()Ljava/lang/String;" new="m_ZA"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="isEmpty()Z" new="m_Oaa"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="UNAVAILABLE Lcom/xabber/android/data/roster/SystemContactStatus;" new="f_m"/>
   <field old="presence Ljava/lang/Integer;" new="f_b"/>
   <field old="text Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.CapsExtension" new="org.jivesoftware.smackx.packet.c_ka">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getHash()Ljava/lang/String;" new="m_GK"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="getNode()Ljava/lang/String;" new="m_Ol"/>
   <method old="getVersion()Ljava/lang/String;" new="m_Sd"/>
   <method old="setHash(Ljava/lang/String;)V" new="m_nj"/>
   <method old="setNode(Ljava/lang/String;)V" new="m_kJ"/>
   <method old="setVersion(Ljava/lang/String;)V" new="m_TL"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="NODE_NAME Ljava/lang/String;" new="f_e"/>
   <field old="XMLNS Ljava/lang/String;" new="f_B"/>
   <field old="hash Ljava/lang/String;" new="f_m"/>
   <field old="node Ljava/lang/String;" new="f_d"/>
   <field old="version Ljava/lang/String;" new="f_b"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.params.AsymmetricKeyParameter" new="wy.c_hc">
   <method old="isPrivate()Z" new="m_Gaa"/>
   <field old="privateKey Z" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.filetransfer.FileTransferNegotiator" new="org.jivesoftware.smackx.filetransfer.c_L">
   <method old="access$000(Lorg/jivesoftware/smackx/filetransfer/FileTransferNegotiator;Lorg/jivesoftware/smack/Connection;)V" new="m_VN"/>
   <method old="cleanup(Lorg/jivesoftware/smack/Connection;)V" new="m_DO"/>
   <method old="configureConnection(Lorg/jivesoftware/smack/Connection;)V" new="m_bn"/>
   <method old="createDefaultInitiationForm()Lorg/jivesoftware/smackx/packet/DataForm;" new="m_nN"/>
   <method old="createIQ(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jivesoftware/smack/packet/IQ$Type;)Lorg/jivesoftware/smack/packet/IQ;" new="m_KN"/>
   <method old="getInstanceFor(Lorg/jivesoftware/smack/Connection;)Lorg/jivesoftware/smackx/filetransfer/FileTransferNegotiator;" new="m_Rm"/>
   <method old="getNegotiator(Lorg/jivesoftware/smackx/FormField;)Lorg/jivesoftware/smackx/filetransfer/StreamNegotiator;" new="m_in"/>
   <method old="getNextStreamID()Ljava/lang/String;" new="m_vM"/>
   <method old="getOutgoingNegotiator(Lorg/jivesoftware/smackx/FormField;)Lorg/jivesoftware/smackx/filetransfer/StreamNegotiator;" new="m_NN"/>
   <method old="getStreamMethodField(Lorg/jivesoftware/smackx/packet/DataForm;)Lorg/jivesoftware/smackx/FormField;" new="m_wN"/>
   <method old="getSupportedProtocols()Ljava/util/Collection;" new="m_Oo"/>
   <method old="isServiceEnabled(Lorg/jivesoftware/smack/Connection;)Z" new="m_Nm"/>
   <method old="negotiateOutgoingTransfer(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;I)Lorg/jivesoftware/smackx/filetransfer/StreamNegotiator;" new="m_Um"/>
   <method old="rejectStream(Lorg/jivesoftware/smackx/packet/StreamInitiation;)V" new="m_oo"/>
   <method old="selectStreamNegotiator(Lorg/jivesoftware/smackx/filetransfer/FileTransferRequest;)Lorg/jivesoftware/smackx/filetransfer/StreamNegotiator;" new="m_nO"/>
   <method old="setServiceEnabled(Lorg/jivesoftware/smack/Connection;Z)V" new="m_nm"/>
   <field old="IBB_ONLY Z" new="f_d"/>
   <field old="NAMESPACE [Ljava/lang/String;" new="f_B"/>
   <field old="STREAM_DATA_FIELD_NAME Ljava/lang/String;" new="f_j"/>
   <field old="STREAM_INIT_PREFIX Ljava/lang/String;" new="f_f"/>
   <field old="byteStreamTransferManager Lorg/jivesoftware/smackx/filetransfer/StreamNegotiator;" new="f_m"/>
   <field old="connection Lorg/jivesoftware/smack/Connection;" new="f_e"/>
   <field old="inbandTransferManager Lorg/jivesoftware/smackx/filetransfer/StreamNegotiator;" new="f_l"/>
   <field old="randomGenerator Ljava/util/Random;" new="f_b"/>
   <field old="transferObject Ljava/util/Map;" new="f_k"/>
  </class>
  <class old="org.xbill.DNS.IPSECKEYRecord$Algorithm" new="org.xbill.DNS.c_Ya">
   <field old="DSA I" new="f_m"/>
   <field old="RSA I" new="f_e"/>
  </class>
  <class old="net.java.otr4j.OtrKeyManagerStore" new="net.java.otr4j.c_A">
   <method old="getPropertyBoolean(Ljava/lang/String;Z)Z" new="m_DB"/>
   <method old="getPropertyBytes(Ljava/lang/String;)[B" new="m_Rb"/>
   <method old="removeProperty(Ljava/lang/String;)V" new="m_Jd"/>
   <method old="setProperty(Ljava/lang/String;Z)V" new="m_Ab"/>
   <method old="setProperty(Ljava/lang/String;[B)V" new="m_gd"/>
  </class>
  <class old="com.xabber.android.data.connection.ProxyType" new="com.xabber.android.data.connection.ProxyType">
   <method old="getProxyInfo(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/proxy/ProxyInfo;" new="m_bla"/>
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/android/data/connection/ProxyType;" new="valueOf"/>
   <method old="values()[Lcom/xabber/android/data/connection/ProxyType;" new="values"/>
   <field old="$VALUES [Lcom/xabber/android/data/connection/ProxyType;" new="f_B"/>
   <field old="http Lcom/xabber/android/data/connection/ProxyType;" new="f_j"/>
   <field old="none Lcom/xabber/android/data/connection/ProxyType;" new="f_b"/>
   <field old="orbot Lcom/xabber/android/data/connection/ProxyType;" new="f_e"/>
   <field old="socks4 Lcom/xabber/android/data/connection/ProxyType;" new="f_m"/>
   <field old="socks5 Lcom/xabber/android/data/connection/ProxyType;" new="f_d"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.macs.HMac" new="wy.c_BB">
   <method old="doFinal([BI)I" new="m_sC"/>
   <method old="getAlgorithmName()Ljava/lang/String;" new="m_Bc"/>
   <method old="getByteLength(Lnet/java/otr4j/bouncycastle/crypto/Digest;)I" new="m_lY"/>
   <method old="getMacSize()I" new="m_WA"/>
   <method old="getUnderlyingDigest()Lnet/java/otr4j/bouncycastle/crypto/Digest;" new="m_Fz"/>
   <method old="init(Lnet/java/otr4j/bouncycastle/crypto/CipherParameters;)V" new="m_vA"/>
   <method old="reset()V" new="m_ld"/>
   <method old="update(B)V" new="m_DA"/>
   <method old="update([BII)V" new="m_WC"/>
   <field old="IPAD B" new="f_B"/>
   <field old="OPAD B" new="f_e"/>
   <field old="blockLength I" new="f_l"/>
   <field old="blockLengths Ljava/util/Hashtable;" new="f_k"/>
   <field old="digest Lnet/java/otr4j/bouncycastle/crypto/Digest;" new="f_m"/>
   <field old="digestSize I" new="f_b"/>
   <field old="inputPad [B" new="f_d"/>
   <field old="outputPad [B" new="f_j"/>
  </class>
  <class old="com.novell.sasl.client.ParsedDirective" new="com.novell.sasl.client.c_H">
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getValue()Ljava/lang/String;" new="m_Ra"/>
   <method old="getValueType()I" new="m_pda"/>
   <field old="QUOTED_STRING_VALUE I" new="f_d"/>
   <field old="TOKEN_VALUE I" new="f_e"/>
   <field old="m_name Ljava/lang/String;" new="f_m"/>
   <field old="m_value Ljava/lang/String;" new="f_b"/>
   <field old="m_valueType I" new="f_B"/>
  </class>
  <class old="com.xabber.android.ui.adapter.ChatViewerAdapter" new="com.xabber.android.ui.adapter.c_i">
   <method old="access$000(Lcom/xabber/android/ui/adapter/ChatViewerAdapter;)Lcom/xabber/android/ui/adapter/OnTextChangedListener;" new="m_Ica"/>
   <method old="getCount()I" new="getCount"/>
   <method old="getItem(I)Ljava/lang/Object;" new="getItem"/>
   <method old="getItemId(I)J" new="getItemId"/>
   <method old="getOnClickListener()Landroid/view/View$OnClickListener;" new="m_HAa"/>
   <method old="getOnCreateContextMenuListener()Landroid/view/View$OnCreateContextMenuListener;" new="m_FAa"/>
   <method old="getOnEditorActionListener()Landroid/widget/TextView$OnEditorActionListener;" new="m_KBa"/>
   <method old="getOnKeyListener()Landroid/view/View$OnKeyListener;" new="m_fBa"/>
   <method old="getOnTextChangedListener()Lcom/xabber/android/ui/adapter/OnTextChangedListener;" new="m_ida"/>
   <method old="getView(ILandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;" new="getView"/>
   <method old="onChange()V" new="m_cb"/>
   <method old="onChatChange(Landroid/view/View;Z)V" new="m_jda"/>
   <method old="saveState(Landroid/view/View;)V" new="m_dB"/>
   <method old="setOnClickListener(Landroid/view/View$OnClickListener;)V" new="m_aca"/>
   <method old="setOnCreateContextMenuListener(Landroid/view/View$OnCreateContextMenuListener;)V" new="m_Jba"/>
   <method old="setOnEditorActionListener(Landroid/widget/TextView$OnEditorActionListener;)V" new="m_wca"/>
   <method old="setOnKeyListener(Landroid/view/View$OnKeyListener;)V" new="m_kba"/>
   <method old="setOnTextChangedListener(Lcom/xabber/android/ui/adapter/OnTextChangedListener;)V" new="m_vBa"/>
   <field old="activeChats Ljava/util/ArrayList;" new="f_l"/>
   <field old="activity Landroid/app/Activity;" new="f_e"/>
   <field old="avatarInflaterHelper Lcom/xabber/android/ui/helper/AbstractAvatarInflaterHelper;" new="f_K"/>
   <field old="intent Lcom/xabber/android/data/message/AbstractChat;" new="f_B"/>
   <field old="intentPosition I" new="f_d"/>
   <field old="onClickListener Landroid/view/View$OnClickListener;" new="f_j"/>
   <field old="onCreateContextMenuListener Landroid/view/View$OnCreateContextMenuListener;" new="f_k"/>
   <field old="onEditorActionListener Landroid/widget/TextView$OnEditorActionListener;" new="f_m"/>
   <field old="onKeyListener Landroid/view/View$OnKeyListener;" new="f_f"/>
   <field old="onTextChangedListener Lcom/xabber/android/ui/adapter/OnTextChangedListener;" new="f_I"/>
   <field old="shake Landroid/view/animation/Animation;" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamListener" new="org.jivesoftware.smackx.bytestreams.ibb.c_e">
   <method old="incomingBytestreamRequest(Lorg/jivesoftware/smackx/bytestreams/BytestreamRequest;)V" new="m_ya"/>
   <method old="incomingBytestreamRequest(Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamRequest;)V" new="m_WP"/>
  </class>
  <class old="org.jivesoftware.smack.RosterStorage" new="org.jivesoftware.smack.RosterStorage">
   <method old="addEntry(Lorg/jivesoftware/smack/packet/RosterPacket$Item;Ljava/lang/String;)V" new="m_JC"/>
   <method old="getEntries()Ljava/util/List;" new="m_hd"/>
   <method old="getEntry(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/RosterPacket$Item;" new="m_gc"/>
   <method old="getEntryCount()I" new="m_nB"/>
   <method old="getRosterVersion()Ljava/lang/String;" new="m_HC"/>
   <method old="removeEntry(Ljava/lang/String;)V" new="m_vc"/>
   <method old="updateLocalEntry(Lorg/jivesoftware/smack/packet/RosterPacket$Item;)V" new="m_OC"/>
  </class>
  <class old="org.xbill.DNS.IPSECKEYRecord" new="org.xbill.DNS.c_ra">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getAlgorithmType()I" new="m_vH"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getGateway()Ljava/lang/Object;" new="m_bG"/>
   <method old="getGatewayType()I" new="m_mi"/>
   <method old="getKey()[B" new="m_xa"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getPrecedence()I" new="m_ZI"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="algorithmType I" new="f_d"/>
   <field old="dclass I" new="f_m"/>
   <field old="gateway Ljava/lang/Object;" new="f_m"/>
   <field old="gatewayType I" new="f_k"/>
   <field old="key [B" new="f_e"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="precedence I" new="f_j"/>
   <field old="serialVersionUID J" new="f_B"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="com.xabber.android.ui.QuestionViewer" new="com.xabber.android.ui.QuestionViewer">
   <method old="createCanelIntent(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;" new="m_QBa"/>
   <method old="createIntent(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;ZZLjava/lang/String;)Landroid/content/Intent;" new="m_Pba"/>
   <method old="getAccount(Landroid/content/Intent;)Ljava/lang/String;" new="m_lCa"/>
   <method old="getUser(Landroid/content/Intent;)Ljava/lang/String;" new="m_NCa"/>
   <method old="onAccountsChanged(Ljava/util/Collection;)V" new="m_vB"/>
   <method old="onActivityResult(IILandroid/content/Intent;)V" new="onActivityResult"/>
   <method old="onClick(Landroid/view/View;)V" new="onClick"/>
   <method old="onContactsChanged(Ljava/util/Collection;)V" new="m_bd"/>
   <method old="onCreate(Landroid/os/Bundle;)V" new="onCreate"/>
   <method old="onDestroy()V" new="onDestroy"/>
   <method old="onNewIntent(Landroid/content/Intent;)V" new="onNewIntent"/>
   <method old="onPause()V" new="onPause"/>
   <method old="onResume()V" new="onResume"/>
   <method old="startActivity(Landroid/content/Intent;)V" new="startActivity"/>
   <method old="startActivityForResult(Landroid/content/Intent;I)V" new="startActivityForResult"/>
   <method old="update()V" new="m_fca"/>
   <field old="EXTRA_FIELD_ANSWER_REQUEST Ljava/lang/String;" new="f_d"/>
   <field old="EXTRA_FIELD_CANCEL Ljava/lang/String;" new="f_j"/>
   <field old="EXTRA_FIELD_SHOW_QUESTION Ljava/lang/String;" new="f_B"/>
   <field old="account Ljava/lang/String;" new="f_k"/>
   <field old="answerRequest Z" new="f_m"/>
   <field old="questionView Landroid/widget/EditText;" new="f_l"/>
   <field old="showQuestion Z" new="f_e"/>
   <field old="user Ljava/lang/String;" new="f_b"/>
  </class>
  <class old="org.xbill.DNS.A6Record" new="org.xbill.DNS.c_BB">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getPrefix()Lorg/xbill/DNS/Name;" new="m_ck"/>
   <method old="getPrefixBits()I" new="m_ij"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getSuffix()Ljava/net/InetAddress;" new="m_gl"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="prefix Lorg/xbill/DNS/Name;" new="f_b"/>
   <field old="prefixBits I" new="f_e"/>
   <field old="serialVersionUID J" new="f_B"/>
   <field old="suffix Ljava/net/InetAddress;" new="f_j"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smackx.PrivateDataManager" new="org.jivesoftware.smackx.c_i">
   <method old="addPrivateDataProvider(Ljava/lang/String;Ljava/lang/String;Lorg/jivesoftware/smackx/provider/PrivateDataProvider;)V" new="m_dq"/>
   <method old="getPrivateData(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smackx/packet/PrivateData;" new="m_xq"/>
   <method old="getPrivateDataProvider(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smackx/provider/PrivateDataProvider;" new="m_jr"/>
   <method old="getProviderKey(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" new="m_wP"/>
   <method old="removePrivateDataProvider(Ljava/lang/String;Ljava/lang/String;)V" new="m_gr"/>
   <method old="setPrivateData(Lorg/jivesoftware/smackx/packet/PrivateData;)V" new="m_kR"/>
   <field old="connection Lorg/jivesoftware/smack/Connection;" new="f_m"/>
   <field old="privateDataProviders Ljava/util/Map;" new="f_e"/>
   <field old="user Ljava/lang/String;" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smack.proxy.HTTPProxySocketFactory" new="org.jivesoftware.smack.proxy.c_m">
   <method old="createSocket(Ljava/lang/String;I)Ljava/net/Socket;" new="createSocket"/>
   <method old="createSocket(Ljava/lang/String;ILjava/net/InetAddress;I)Ljava/net/Socket;" new="createSocket"/>
   <method old="createSocket(Ljava/net/InetAddress;I)Ljava/net/Socket;" new="createSocket"/>
   <method old="createSocket(Ljava/net/InetAddress;ILjava/net/InetAddress;I)Ljava/net/Socket;" new="createSocket"/>
   <method old="httpProxifiedSocket(Ljava/lang/String;I)Ljava/net/Socket;" new="m_st"/>
   <field old="RESPONSE_PATTERN Ljava/util/regex/Pattern;" new="f_e"/>
   <field old="proxy Lorg/jivesoftware/smack/proxy/ProxyInfo;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.TXTBase" new="org.xbill.DNS.c_w">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getStrings()Ljava/util/List;" new="m_CE"/>
   <method old="getStringsAsByteArrays()Ljava/util/List;" new="m_dD"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="serialVersionUID J" new="f_m"/>
   <field old="strings Ljava/util/List;" new="f_e"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="org.apache.harmony.javax.security.sasl.RealmChoiceCallback" new="org.apache.harmony.javax.security.sasl.RealmChoiceCallback">
   <method old="allowMultipleSelections()Z" new="m_Tx"/>
   <method old="getChoices()[Ljava/lang/String;" new="m_UU"/>
   <method old="getDefaultChoice()I" new="m_wU"/>
   <method old="getPrompt()Ljava/lang/String;" new="m_DW"/>
   <method old="getSelectedIndexes()[I" new="m_Mx"/>
   <method old="setSelectedIndex(I)V" new="m_Qx"/>
   <method old="setSelectedIndexes([I)V" new="m_hw"/>
   <field old="serialVersionUID J" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.vcard.EmailProvider" new="com.xabber.xmpp.vcard.c_Aa">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/vcard/Email;" new="m_ZZ"/>
   <method old="getInstance()Lcom/xabber/xmpp/vcard/EmailProvider;" new="m_Xr"/>
   <method old="getTypes()[Lcom/xabber/xmpp/vcard/EmailType;" new="m_xg"/>
   <method old="getTypes()[Ljava/lang/Enum;" new="m_xg"/>
   <method old="getValueName()Ljava/lang/String;" new="m_IZ"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/AbstractTypedData;)Z" new="m_caa"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/AbstractTypedDataWithValue;)Z" new="m_RX"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
   <field old="instance Lcom/xabber/xmpp/vcard/EmailProvider;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.adapter.BaseContactAdapter" new="com.xabber.android.ui.adapter.c_K">
   <method old="getCount()I" new="getCount"/>
   <method old="getFilter()Landroid/widget/Filter;" new="getFilter"/>
   <method old="getInflater()Lcom/xabber/android/ui/adapter/BaseContactInflater;" new="m_zaa"/>
   <method old="getItem(I)Ljava/lang/Object;" new="getItem"/>
   <method old="getItemId(I)J" new="getItemId"/>
   <method old="getView(ILandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;" new="getView"/>
   <method old="onChange()V" new="m_cb"/>
   <field old="activity Landroid/app/Activity;" new="f_B"/>
   <field old="baseEntities Ljava/util/ArrayList;" new="f_b"/>
   <field old="contactFilter Lcom/xabber/android/ui/adapter/BaseContactAdapter$ContactFilter;" new="f_j"/>
   <field old="filterString Ljava/lang/String;" new="f_e"/>
   <field old="inflater Lcom/xabber/android/ui/adapter/BaseContactInflater;" new="f_d"/>
   <field old="locale Ljava/util/Locale;" new="f_m"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.util.BigIntegers" new="wy.c_AC">
   <method old="asUnsignedByteArray(Ljava/math/BigInteger;)[B" new="m_pY"/>
   <method old="createRandomInRange(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/security/SecureRandom;)Ljava/math/BigInteger;" new="m_Kaa"/>
   <field old="MAX_ITERATIONS I" new="f_e"/>
   <field old="ZERO Ljava/math/BigInteger;" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.ssn.SecurityValue" new="com.xabber.xmpp.ssn.SecurityValue">
   <method old="createOption()Lorg/jivesoftware/smackx/FormField$Option;" new="m_Hy"/>
   <method old="fromString(Ljava/lang/String;)Lcom/xabber/xmpp/ssn/SecurityValue;" new="m_tc"/>
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/xmpp/ssn/SecurityValue;" new="valueOf"/>
   <method old="values()[Lcom/xabber/xmpp/ssn/SecurityValue;" new="values"/>
   <field old="$VALUES [Lcom/xabber/xmpp/ssn/SecurityValue;" new="f_b"/>
   <field old="c2s Lcom/xabber/xmpp/ssn/SecurityValue;" new="f_m"/>
   <field old="e2e Lcom/xabber/xmpp/ssn/SecurityValue;" new="f_e"/>
   <field old="label Ljava/lang/String;" new="f_d"/>
   <field old="none Lcom/xabber/xmpp/ssn/SecurityValue;" new="f_B"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.RosterExchange" new="org.jivesoftware.smackx.packet.RosterExchange">
   <method old="addRosterEntry(Lorg/jivesoftware/smack/RosterEntry;)V" new="m_kK"/>
   <method old="addRosterEntry(Lorg/jivesoftware/smackx/RemoteRosterEntry;)V" new="m_uL"/>
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getEntryCount()I" new="m_nB"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="getRosterEntries()Ljava/util/Iterator;" new="m_mk"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="remoteRosterEntries Ljava/util/List;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.extension.muc.RoomInvite" new="com.xabber.android.data.extension.muc.RoomInvite">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="compareTo(Lcom/xabber/android/data/entity/BaseEntity;)I" new="m_bCa"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="equals(Ljava/lang/String;Ljava/lang/String;)Z" new="m_Bba"/>
   <method old="getAccount()Ljava/lang/String;" new="m_FC"/>
   <method old="getConfirmation()Ljava/lang/String;" new="m_sEa"/>
   <method old="getIntent()Landroid/content/Intent;" new="m_db"/>
   <method old="getInviter()Ljava/lang/String;" new="m_Xha"/>
   <method old="getPassword()Ljava/lang/String;" new="m_rj"/>
   <method old="getReason()Ljava/lang/String;" new="m_zj"/>
   <method old="getText()Ljava/lang/String;" new="m_ZA"/>
   <method old="getTitle()Ljava/lang/String;" new="m_zb"/>
   <method old="getUser()Ljava/lang/String;" new="m_TA"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="account Ljava/lang/String;" new="f_m"/>
   <field old="inviter Ljava/lang/String;" new="f_b"/>
   <field old="password Ljava/lang/String;" new="f_d"/>
   <field old="reason Ljava/lang/String;" new="f_B"/>
   <field old="user Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="com.xabber.xmpp.vcard.ExternalSound" new="com.xabber.xmpp.vcard.c_q">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getValue()Ljava/lang/String;" new="m_Ra"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="setValue(Ljava/lang/String;)V" new="m_TT"/>
   <method old="writeBody(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_zy"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_m"/>
   <field old="EXTVAL_NAME Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.StreamInitiation$Feature" new="org.jivesoftware.smackx.packet.c_g">
   <method old="getData()Lorg/jivesoftware/smackx/packet/DataForm;" new="m_tD"/>
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="data Lorg/jivesoftware/smackx/packet/DataForm;" new="f_m"/>
   <field old="this$0 Lorg/jivesoftware/smackx/packet/StreamInitiation;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.extension.ssn.SessionState" new="com.xabber.android.data.extension.ssn.SessionState">
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/android/data/extension/ssn/SessionState;" new="valueOf"/>
   <method old="values()[Lcom/xabber/android/data/extension/ssn/SessionState;" new="values"/>
   <field old="$VALUES [Lcom/xabber/android/data/extension/ssn/SessionState;" new="f_m"/>
   <field old="active Lcom/xabber/android/data/extension/ssn/SessionState;" new="f_b"/>
   <field old="renegotiation Lcom/xabber/android/data/extension/ssn/SessionState;" new="f_d"/>
   <field old="requesting Lcom/xabber/android/data/extension/ssn/SessionState;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.SettingsManager$SecurityOtrMode" new="com.xabber.android.data.SettingsManager$SecurityOtrMode">
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/android/data/SettingsManager$SecurityOtrMode;" new="valueOf"/>
   <method old="values()[Lcom/xabber/android/data/SettingsManager$SecurityOtrMode;" new="values"/>
   <field old="$VALUES [Lcom/xabber/android/data/SettingsManager$SecurityOtrMode;" new="f_m"/>
   <field old="auto Lcom/xabber/android/data/SettingsManager$SecurityOtrMode;" new="f_e"/>
   <field old="disabled Lcom/xabber/android/data/SettingsManager$SecurityOtrMode;" new="f_B"/>
   <field old="manual Lcom/xabber/android/data/SettingsManager$SecurityOtrMode;" new="f_b"/>
   <field old="required Lcom/xabber/android/data/SettingsManager$SecurityOtrMode;" new="f_d"/>
  </class>
  <class old="com.xabber.android.data.OnInitializedListener" new="com.xabber.android.data.c_M">
   <method old="onInitialized()V" new="m_ub"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$1" new="org.jivesoftware.smackx.bytestreams.ibb.c_d">
   <method old="connectionCreated(Lorg/jivesoftware/smack/Connection;)V" new="m_q"/>
  </class>
  <class old="org.xbill.DNS.DClass" new="org.xbill.DNS.c_bC">
   <method old="check(I)V" new="m_vd"/>
   <method old="string(I)Ljava/lang/String;" new="m_Wd"/>
   <method old="value(Ljava/lang/String;)I" new="m_le"/>
   <field old="ANY I" new="f_j"/>
   <field old="CH I" new="f_B"/>
   <field old="CHAOS I" new="f_l"/>
   <field old="HESIOD I" new="f_d"/>
   <field old="HS I" new="f_k"/>
   <field old="IN I" new="f_e"/>
   <field old="NONE I" new="f_m"/>
   <field old="classes Lorg/xbill/DNS/Mnemonic;" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.extension.ping.PingManager" new="wy.c_ib">
   <method old="getInstance()Lcom/xabber/android/data/extension/ping/PingManager;" new="m_Xr"/>
   <method old="onPacket(Lcom/xabber/android/data/connection/ConnectionItem;Ljava/lang/String;Lorg/jivesoftware/smack/packet/Packet;)V" new="m_tC"/>
   <field old="instance Lcom/xabber/android/data/extension/ping/PingManager;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.NSEC3Record$Digest" new="org.xbill.DNS.c_ea">
   <field old="SHA1 I" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.KeyStoreManager" new="org.jivesoftware.smack.c_Y">
   <method old="getOrCreateKeyStore(Lorg/jivesoftware/smack/ConnectionConfiguration;)Ljava/security/KeyStore;" new="m_Dv"/>
   <field old="stores Ljava/util/Map;" new="f_m"/>
  </class>
  <class old="net.java.otr4j.session.AuthContext" new="net.java.otr4j.session.c_A">
   <method old="getIsSecure()Z" new="m_iB"/>
   <method old="getLocalDHKeyPair()Ljava/security/KeyPair;" new="m_cC"/>
   <method old="getLocalLongTermKeyPair()Ljava/security/KeyPair;" new="m_OA"/>
   <method old="getRemoteDHPublicKey()Ljavax/crypto/interfaces/DHPublicKey;" new="m_KA"/>
   <method old="getRemoteLongTermPublicKey()Ljava/security/PublicKey;" new="m_zC"/>
   <method old="getS()Ljava/math/BigInteger;" new="m_Qb"/>
   <method old="handleReceivingMessage(Lnet/java/otr4j/io/messages/AbstractMessage;)V" new="m_wb"/>
   <method old="reset()V" new="m_ld"/>
   <method old="respondV2Auth()V" new="m_XA"/>
   <method old="startV2Auth()V" new="m_Mb"/>
   <field old="AWAITING_DHKEY I" new="f_j"/>
   <field old="AWAITING_REVEALSIG I" new="f_d"/>
   <field old="AWAITING_SIG I" new="f_m"/>
   <field old="C_START B" new="f_f"/>
   <field old="M1_START B" new="f_l"/>
   <field old="M1p_START B" new="f_I"/>
   <field old="M2_START B" new="f_b"/>
   <field old="M2p_START B" new="f_B"/>
   <field old="NONE I" new="f_e"/>
   <field old="V1_SETUP I" new="f_k"/>
  </class>
  <class old="com.xabber.xmpp.vcard.Geo" new="com.xabber.xmpp.vcard.c_h">
   <method old="getLat()Ljava/lang/String;" new="m_by"/>
   <method old="getLon()Ljava/lang/String;" new="m_maa"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="setLat(Ljava/lang/String;)V" new="m_uy"/>
   <method old="setLon(Ljava/lang/String;)V" new="m_hY"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_d"/>
   <field old="LAT_NAME Ljava/lang/String;" new="f_b"/>
   <field old="LON_NAME Ljava/lang/String;" new="f_m"/>
   <field old="lat Ljava/lang/String;" new="f_e"/>
   <field old="lon Ljava/lang/String;" new="f_B"/>
  </class>
  <class old="com.xabber.android.data.message.MessageTable" new="com.xabber.android.data.message.c_B">
   <method old="add(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/xabber/android/data/message/ChatAction;Ljava/util/Date;Ljava/util/Date;ZZZZ)J" new="m_QEa"/>
   <method old="clear()V" new="m_EA"/>
   <method old="create(Landroid/database/sqlite/SQLiteDatabase;)V" new="m_AB"/>
   <method old="getAccount(Landroid/database/Cursor;)Ljava/lang/String;" new="m_Jea"/>
   <method old="getAction(Landroid/database/Cursor;)Lcom/xabber/android/data/message/ChatAction;" new="m_jEa"/>
   <method old="getDelayTimeStamp(Landroid/database/Cursor;)Ljava/util/Date;" new="m_iDa"/>
   <method old="getId(Landroid/database/Cursor;)J" new="m_WFa"/>
   <method old="getInstance()Lcom/xabber/android/data/message/MessageTable;" new="m_Xr"/>
   <method old="getListOrder()Ljava/lang/String;" new="m_YDa"/>
   <method old="getProjection()[Ljava/lang/String;" new="m_AFa"/>
   <method old="getResource(Landroid/database/Cursor;)Ljava/lang/String;" new="m_uda"/>
   <method old="getTableName()Ljava/lang/String;" new="m_dga"/>
   <method old="getTag(Landroid/database/Cursor;)Ljava/lang/String;" new="m_Vfa"/>
   <method old="getText(Landroid/database/Cursor;)Ljava/lang/String;" new="m_cEa"/>
   <method old="getTimeStamp(Landroid/database/Cursor;)Ljava/util/Date;" new="m_Uea"/>
   <method old="getUser(Landroid/database/Cursor;)Ljava/lang/String;" new="m_oDa"/>
   <method old="hasError(Landroid/database/Cursor;)Z" new="m_ifa"/>
   <method old="isIncoming(Landroid/database/Cursor;)Z" new="m_jDa"/>
   <method old="isRead(Landroid/database/Cursor;)Z" new="m_uea"/>
   <method old="isSent(Landroid/database/Cursor;)Z" new="m_IFa"/>
   <method old="list()Landroid/database/Cursor;" new="m_wEa"/>
   <method old="list(Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;" new="m_Fga"/>
   <method old="markAsError(J)V" new="m_IEa"/>
   <method old="markAsRead(Ljava/util/Collection;)V" new="m_yea"/>
   <method old="markAsSent(Ljava/util/Collection;)V" new="m_Zda"/>
   <method old="messagesToSend()Landroid/database/Cursor;" new="m_uFa"/>
   <method old="migrate(Landroid/database/sqlite/SQLiteDatabase;I)V" new="m_Cd"/>
   <method old="removeAccount(Ljava/lang/String;)V" new="m_YEa"/>
   <method old="removeMessages(Ljava/util/Collection;)V" new="m_sFa"/>
   <method old="removeReadAndSent(Ljava/lang/String;)V" new="m_UDa"/>
   <method old="removeSent(Ljava/lang/String;)V" new="m_TEa"/>
   <field old="NAME Ljava/lang/String;" new="f_d"/>
   <field old="PROJECTION [Ljava/lang/String;" new="f_j"/>
   <field old="databaseManager Lcom/xabber/android/data/DatabaseManager;" new="f_e"/>
   <field old="insertNewMessageLock Ljava/lang/Object;" new="f_b"/>
   <field old="insertNewMessageStatement Landroid/database/sqlite/SQLiteStatement;" new="f_B"/>
   <field old="instance Lcom/xabber/android/data/message/MessageTable;" new="f_m"/>
  </class>
  <class old="com.xabber.android.classic.R$color" new="com.xabber.android.classic.R$color">
   <field old="bright_foreground_dark I" new="bright_foreground_dark"/>
   <field old="bright_foreground_light I" new="bright_foreground_light"/>
  </class>
  <class old="com.xabber.android.data.account.AccountProtocol" new="com.xabber.android.data.account.AccountProtocol">
   <method old="getNameResource()I" new="m_tLa"/>
   <method old="getShortResource()I" new="m_Sja"/>
   <method old="isOAuth()Z" new="m_LJa"/>
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/android/data/account/AccountProtocol;" new="valueOf"/>
   <method old="values()[Lcom/xabber/android/data/account/AccountProtocol;" new="values"/>
   <field old="$VALUES [Lcom/xabber/android/data/account/AccountProtocol;" new="f_e"/>
   <field old="gtalk Lcom/xabber/android/data/account/AccountProtocol;" new="f_b"/>
   <field old="wlm Lcom/xabber/android/data/account/AccountProtocol;" new="f_d"/>
   <field old="xmpp Lcom/xabber/android/data/account/AccountProtocol;" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.SerializerUtils" new="com.xabber.xmpp.c_f">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="addBooleanTag(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;Ljava/lang/Boolean;)V" new="m_GCa"/>
   <method old="addDateTimeTag(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;Ljava/util/Date;)V" new="m_rca"/>
   <method old="addEmtpyTag(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;)V" new="m_Hba"/>
   <method old="addIntegerTag(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;Ljava/lang/Integer;)V" new="m_cba"/>
   <method old="addTextTag(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;Ljava/lang/String;)V" new="m_IAa"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;Lcom/xabber/xmpp/Container;)V" new="m_uCa"/>
   <method old="serializeBoolean(Ljava/lang/Boolean;)Ljava/lang/String;" new="m_TCa"/>
   <method old="serializeDateTime(Ljava/util/Date;)Ljava/lang/String;" new="m_fda"/>
   <method old="serializeInteger(Ljava/lang/Integer;)Ljava/lang/String;" new="m_zba"/>
   <method old="setBooleanAttribute(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;Ljava/lang/Boolean;)V" new="m_ada"/>
   <method old="setDateTimeAttribute(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;Ljava/util/Date;)V" new="m_Waa"/>
   <method old="setIntegerAttribute(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;Ljava/lang/Integer;)V" new="m_iAa"/>
   <method old="setTextAttribute(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;Ljava/lang/String;)V" new="m_xba"/>
   <method old="toXml(Lcom/xabber/xmpp/Instance;)Ljava/lang/String;" new="m_Zba"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.util.Arrays" new="wy.c_bC">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="areEqual([B[B)Z" new="m_WZ"/>
   <method old="areEqual([C[C)Z" new="m_saa"/>
   <method old="areEqual([I[I)Z" new="m_wY"/>
   <method old="areEqual([J[J)Z" new="m_Qz"/>
   <method old="areEqual([Ljava/math/BigInteger;[Ljava/math/BigInteger;)Z" new="m_aX"/>
   <method old="areEqual([Z[Z)Z" new="m_PZ"/>
   <method old="clone([B)[B" new="m_aaa"/>
   <method old="clone([I)[I" new="m_nZ"/>
   <method old="clone([Ljava/math/BigInteger;)[Ljava/math/BigInteger;" new="m_cY"/>
   <method old="constantTimeAreEqual([B[B)Z" new="m_faa"/>
   <method old="copyOf([BI)[B" new="m_bZ"/>
   <method old="copyOf([II)[I" new="m_hX"/>
   <method old="copyOf([JI)[J" new="m_JX"/>
   <method old="copyOf([Ljava/math/BigInteger;I)[Ljava/math/BigInteger;" new="m_Sz"/>
   <method old="copyOfRange([BII)[B" new="m_aY"/>
   <method old="copyOfRange([III)[I" new="m_kY"/>
   <method old="copyOfRange([JII)[J" new="m_Iaa"/>
   <method old="copyOfRange([Ljava/math/BigInteger;II)[Ljava/math/BigInteger;" new="m_kZ"/>
   <method old="fill([BB)V" new="m_dY"/>
   <method old="fill([II)V" new="m_Daa"/>
   <method old="fill([JJ)V" new="m_JY"/>
   <method old="fill([SS)V" new="m_lZ"/>
   <method old="getLength(II)I" new="m_nz"/>
   <method old="hashCode([B)I" new="m_AY"/>
   <method old="hashCode([C)I" new="m_Ky"/>
   <method old="hashCode([I)I" new="m_oaa"/>
   <method old="hashCode([Ljava/math/BigInteger;)I" new="m_Caa"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.generators.DHKeyGeneratorHelper" new="wy.c_kA">
   <method old="calculatePrivate(Lnet/java/otr4j/bouncycastle/crypto/params/DHParameters;Ljava/security/SecureRandom;)Ljava/math/BigInteger;" new="m_qX"/>
   <method old="calculatePublic(Lnet/java/otr4j/bouncycastle/crypto/params/DHParameters;Ljava/math/BigInteger;)Ljava/math/BigInteger;" new="m_sX"/>
   <field old="INSTANCE Lnet/java/otr4j/bouncycastle/crypto/generators/DHKeyGeneratorHelper;" new="f_b"/>
   <field old="ONE Ljava/math/BigInteger;" new="f_e"/>
   <field old="TWO Ljava/math/BigInteger;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IBBOutputStream" new="org.jivesoftware.smackx.bytestreams.ibb.c_B">
   <method old="close()V" new="close"/>
   <method old="closeInternal(Z)V" new="m_uM"/>
   <method old="flush()V" new="flush"/>
   <method old="flushBuffer()V" new="m_jO"/>
   <method old="write(I)V" new="write"/>
   <method old="write([B)V" new="write"/>
   <method old="write([BII)V" new="write"/>
   <method old="writeOut([BII)V" new="m_uo"/>
   <method old="writeToXML(Lorg/jivesoftware/smackx/bytestreams/ibb/packet/DataPacketExtension;)V" new="m_Gm"/>
   <field old="buffer [B" new="f_d"/>
   <field old="bufferPointer I" new="f_B"/>
   <field old="isClosed Z" new="f_b"/>
   <field old="seq J" new="f_e"/>
   <field old="this$0 Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamSession;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.dialog.NotificationDialogListener" new="wy.c_D">
   <method old="onAccept(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_Lc"/>
   <method old="onCancel(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_Vb"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.login.AppConfigurationEntry" new="wy.c_xa">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getControlFlag()Lorg/apache/harmony/javax/security/auth/login/AppConfigurationEntry$LoginModuleControlFlag;" new="m_kV"/>
   <method old="getLoginModuleName()Ljava/lang/String;" new="m_IW"/>
   <method old="getOptions()Ljava/util/Map;" new="m_PG"/>
   <field old="controlFlag Lorg/apache/harmony/javax/security/auth/login/AppConfigurationEntry$LoginModuleControlFlag;" new="f_m"/>
   <field old="loginModuleName Ljava/lang/String;" new="f_e"/>
   <field old="options Ljava/util/Map;" new="f_b"/>
  </class>
  <class old="com.xabber.android.ui.helper.ContactTitleInflater$1" new="com.xabber.android.ui.helper.c_j">
   <method old="onClick(Landroid/view/View;)V" new="onClick"/>
   <field old="val$activity Landroid/app/Activity;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.PhraseEditor" new="com.xabber.android.ui.PhraseEditor">
   <method old="createIntent(Landroid/content/Context;)Landroid/content/Intent;" new="m_yBa"/>
   <method old="createIntent(Landroid/content/Context;Ljava/lang/Integer;)Landroid/content/Intent;" new="m_IBa"/>
   <method old="getBoolean(Ljava/util/Map;I)Z" new="m_gba"/>
   <method old="getInt(Ljava/util/Map;I)I" new="m_YCa"/>
   <method old="getPhraseIndex(Landroid/content/Intent;)Ljava/lang/Integer;" new="m_Zaa"/>
   <method old="getPrefecence(Landroid/preference/Preference;Ljava/util/Map;)Ljava/lang/Object;" new="m_uba"/>
   <method old="getPreferences(Ljava/util/Map;)Ljava/util/Map;" new="m_gca"/>
   <method old="getString(Ljava/util/Map;I)Ljava/lang/String;" new="m_VAa"/>
   <method old="getUri(Ljava/util/Map;I)Landroid/net/Uri;" new="m_nCa"/>
   <method old="getValues()Ljava/util/Map;" new="m_bQ"/>
   <method old="hasChanges(Ljava/util/Map;Ljava/util/Map;I)Z" new="m_Gba"/>
   <method old="hasChanges(Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;)Z" new="m_qCa"/>
   <method old="isInitialChange()Z" new="m_qAa"/>
   <method old="onActivityResult(IILandroid/content/Intent;)V" new="onActivityResult"/>
   <method old="onCreate(Landroid/os/Bundle;)V" new="onCreate"/>
   <method old="onCreateDialog(I)Landroid/app/Dialog;" new="onCreateDialog"/>
   <method old="onCreateOptionsMenu(Landroid/view/Menu;)Z" new="onCreateOptionsMenu"/>
   <method old="onDestroy()V" new="onDestroy"/>
   <method old="onInflate(Landroid/os/Bundle;)V" new="m_TBa"/>
   <method old="onKeyDown(ILandroid/view/KeyEvent;)Z" new="onKeyDown"/>
   <method old="onNewIntent(Landroid/content/Intent;)V" new="onNewIntent"/>
   <method old="onOptionsItemSelected(Landroid/view/MenuItem;)Z" new="onOptionsItemSelected"/>
   <method old="onPause()V" new="onPause"/>
   <method old="onPreferenceChange(Landroid/preference/Preference;Ljava/lang/Object;)Z" new="onPreferenceChange"/>
   <method old="onResume()V" new="onResume"/>
   <method old="putValue(Ljava/util/Map;ILjava/lang/Object;)V" new="m_Ida"/>
   <method old="setPreference(Landroid/preference/Preference;Ljava/lang/Object;)V" new="m_xAa"/>
   <method old="setPreferences(Ljava/util/Map;)V" new="m_sca"/>
   <method old="setValues(Ljava/util/Map;Ljava/util/Map;)Z" new="m_eba"/>
   <method old="startActivity(Landroid/content/Intent;)V" new="startActivity"/>
   <method old="startActivityForResult(Landroid/content/Intent;I)V" new="startActivityForResult"/>
   <field old="phrase Lcom/xabber/android/data/message/phrase/Phrase;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.account.AccountItem" new="com.xabber.android.data.account.c_o">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="clearPassword()V" new="m_zw"/>
   <method old="disconnect(Lcom/xabber/android/data/connection/ConnectionThread;)V" new="m_Mka"/>
   <method old="forceReconnect()V" new="m_SKa"/>
   <method old="getAccount()Ljava/lang/String;" new="m_FC"/>
   <method old="getArchiveMode()Lcom/xabber/android/data/account/ArchiveMode;" new="m_eka"/>
   <method old="getColorIndex()I" new="m_rKa"/>
   <method old="getConnectionSettings()Lcom/xabber/android/data/connection/ConnectionSettings;" new="m_oja"/>
   <method old="getConnectionThread()Lcom/xabber/android/data/connection/ConnectionThread;" new="m_Yla"/>
   <method old="getDisplayStatusMode()Lcom/xabber/android/data/account/StatusMode;" new="m_rla"/>
   <method old="getFactualStatusMode()Lcom/xabber/android/data/account/StatusMode;" new="m_qla"/>
   <method old="getId()Ljava/lang/Long;" new="m_Hca"/>
   <method old="getKeyPair()Ljava/security/KeyPair;" new="m_lJa"/>
   <method old="getLastSync()Ljava/util/Date;" new="m_Ola"/>
   <method old="getPresence()Lorg/jivesoftware/smack/packet/Presence;" new="m_hDa"/>
   <method old="getPriority()I" new="m_iD"/>
   <method old="getRawStatusMode()Lcom/xabber/android/data/account/StatusMode;" new="m_Sla"/>
   <method old="getRealJid()Ljava/lang/String;" new="m_LLa"/>
   <method old="getState()Lcom/xabber/android/data/connection/ConnectionState;" new="m_FK"/>
   <method old="getStatusText()Ljava/lang/String;" new="m_tFa"/>
   <method old="getValidPriority(I)I" new="m_uja"/>
   <method old="isConnectionAvailable(Z)Z" new="m_VKa"/>
   <method old="isEnabled()Z" new="m_Qea"/>
   <method old="isStorePassword()Z" new="m_Yka"/>
   <method old="isSyncable()Z" new="m_Nja"/>
   <method old="onAuthFailed()V" new="m_Fja"/>
   <method old="onAuthorized(Lcom/xabber/android/data/connection/ConnectionThread;)V" new="m_Jja"/>
   <method old="onClose(Lcom/xabber/android/data/connection/ConnectionThread;)V" new="m_ZKa"/>
   <method old="onConnected(Lcom/xabber/android/data/connection/ConnectionThread;)V" new="m_dka"/>
   <method old="onInvalidCertificate()V" new="m_bKa"/>
   <method old="onPasswordChanged(Ljava/lang/String;)V" new="m_JKa"/>
   <method old="onSRVResolved(Lcom/xabber/android/data/connection/ConnectionThread;)V" new="m_RLa"/>
   <method old="onSeeOtherHost(Lcom/xabber/android/data/connection/ConnectionThread;Ljava/lang/String;IZ)V" new="m_dla"/>
   <method old="setArchiveMode(Lcom/xabber/android/data/account/ArchiveMode;)V" new="m_Dja"/>
   <method old="setEnabled(Z)V" new="m_iea"/>
   <method old="setId(J)V" new="m_CKa"/>
   <method old="setKeyPair(Ljava/security/KeyPair;)V" new="m_EKa"/>
   <method old="setLastSync(Ljava/util/Date;)V" new="m_Zja"/>
   <method old="setPriority(I)V" new="m_iT"/>
   <method old="setStatus(Lcom/xabber/android/data/account/StatusMode;Ljava/lang/String;)V" new="m_jca"/>
   <method old="setStorePassword(Z)V" new="m_Tka"/>
   <method old="setSyncable(Z)V" new="m_xka"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="updateConnection(Z)Z" new="m_Fka"/>
   <method old="updateConnectionSettings(ZLjava/lang/String;ILjava/lang/String;ZLcom/xabber/android/data/connection/TLSMode;ZLcom/xabber/android/data/connection/ProxyType;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V" new="m_jJa"/>
   <field old="UNDEFINED_PASSWORD Ljava/lang/String;" new="f_G"/>
   <field old="account Ljava/lang/String;" new="f_I"/>
   <field old="archiveMode Lcom/xabber/android/data/account/ArchiveMode;" new="f_m"/>
   <field old="authFailed Z" new="f_k"/>
   <field old="colorIndex I" new="f_M"/>
   <field old="enabled Z" new="f_B"/>
   <field old="id Ljava/lang/Long;" new="f_D"/>
   <field old="invalidCertificate Z" new="f_g"/>
   <field old="keyPair Ljava/security/KeyPair;" new="f_e"/>
   <field old="lastSync Ljava/util/Date;" new="f_J"/>
   <field old="passwordRequested Z" new="f_f"/>
   <field old="priority I" new="f_K"/>
   <field old="statusMode Lcom/xabber/android/data/account/StatusMode;" new="f_b"/>
   <field old="statusText Ljava/lang/String;" new="f_d"/>
   <field old="storePassword Z" new="f_l"/>
   <field old="syncable Z" new="f_j"/>
  </class>
  <class old="org.xbill.DNS.TKEYRecord" new="org.xbill.DNS.c_n">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getAlgorithm()Lorg/xbill/DNS/Name;" new="m_Ne"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getError()I" new="m_Hg"/>
   <method old="getKey()[B" new="m_xa"/>
   <method old="getMode()I" new="m_de"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getOther()[B" new="m_KD"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getTimeExpire()Ljava/util/Date;" new="m_zd"/>
   <method old="getTimeInception()Ljava/util/Date;" new="m_PE"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="modeString()Ljava/lang/String;" new="m_cF"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="DELETE I" new="f_K"/>
   <field old="DIFFIEHELLMAN I" new="f_I"/>
   <field old="GSSAPI I" new="f_M"/>
   <field old="RESOLVERASSIGNED I" new="f_J"/>
   <field old="SERVERASSIGNED I" new="f_d"/>
   <field old="alg Lorg/xbill/DNS/Name;" new="f_k"/>
   <field old="dclass I" new="f_m"/>
   <field old="error I" new="f_e"/>
   <field old="key [B" new="f_B"/>
   <field old="mode I" new="f_f"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="other [B" new="f_b"/>
   <field old="serialVersionUID J" new="f_G"/>
   <field old="timeExpire Ljava/util/Date;" new="f_D"/>
   <field old="timeInception Ljava/util/Date;" new="f_l"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.CryptoException" new="net.java.otr4j.bouncycastle.crypto.c_f">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getCause()Ljava/lang/Throwable;" new="getCause"/>
   <field old="cause Ljava/lang/Throwable;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.muc.UserStatusListener" new="org.jivesoftware.smackx.muc.c_B">
   <method old="adminGranted()V" new="m_Q"/>
   <method old="adminRevoked()V" new="m_v"/>
   <method old="banned(Ljava/lang/String;Ljava/lang/String;)V" new="m_T"/>
   <method old="kicked(Ljava/lang/String;Ljava/lang/String;)V" new="m_O"/>
   <method old="membershipGranted()V" new="m_u"/>
   <method old="membershipRevoked()V" new="m_P"/>
   <method old="moderatorGranted()V" new="m_n"/>
   <method old="moderatorRevoked()V" new="m_R"/>
   <method old="ownershipGranted()V" new="m_N"/>
   <method old="ownershipRevoked()V" new="m_X"/>
   <method old="voiceGranted()V" new="m_o"/>
   <method old="voiceRevoked()V" new="m_z"/>
  </class>
  <class old="org.apache.qpid.management.common.sasl.SaslProvider" new="wy.c_ua">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <field old="serialVersionUID J" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.packet.XMPPError$Condition" new="org.jivesoftware.smack.packet.c_m">
   <method old="access$000(Lorg/jivesoftware/smack/packet/XMPPError$Condition;)Ljava/lang/String;" new="m_OT"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="bad_request Lorg/jivesoftware/smack/packet/XMPPError$Condition;" new="f_I"/>
   <field old="conflict Lorg/jivesoftware/smack/packet/XMPPError$Condition;" new="f_A"/>
   <field old="feature_not_implemented Lorg/jivesoftware/smack/packet/XMPPError$Condition;" new="f_J"/>
   <field old="forbidden Lorg/jivesoftware/smack/packet/XMPPError$Condition;" new="f_G"/>
   <field old="gone Lorg/jivesoftware/smack/packet/XMPPError$Condition;" new="f_l"/>
   <field old="interna_server_error Lorg/jivesoftware/smack/packet/XMPPError$Condition;" new="f_m"/>
   <field old="item_not_found Lorg/jivesoftware/smack/packet/XMPPError$Condition;" new="f_M"/>
   <field old="jid_malformed Lorg/jivesoftware/smack/packet/XMPPError$Condition;" new="f_i"/>
   <field old="no_acceptable Lorg/jivesoftware/smack/packet/XMPPError$Condition;" new="f_C"/>
   <field old="not_allowed Lorg/jivesoftware/smack/packet/XMPPError$Condition;" new="f_f"/>
   <field old="not_authorized Lorg/jivesoftware/smack/packet/XMPPError$Condition;" new="f_H"/>
   <field old="payment_required Lorg/jivesoftware/smack/packet/XMPPError$Condition;" new="f_a"/>
   <field old="recipient_unavailable Lorg/jivesoftware/smack/packet/XMPPError$Condition;" new="f_E"/>
   <field old="redirect Lorg/jivesoftware/smack/packet/XMPPError$Condition;" new="f_B"/>
   <field old="registration_required Lorg/jivesoftware/smack/packet/XMPPError$Condition;" new="f_K"/>
   <field old="remote_server_error Lorg/jivesoftware/smack/packet/XMPPError$Condition;" new="f_d"/>
   <field old="remote_server_not_found Lorg/jivesoftware/smack/packet/XMPPError$Condition;" new="f_j"/>
   <field old="remote_server_timeout Lorg/jivesoftware/smack/packet/XMPPError$Condition;" new="f_c"/>
   <field old="request_timeout Lorg/jivesoftware/smack/packet/XMPPError$Condition;" new="f_F"/>
   <field old="resource_constraint Lorg/jivesoftware/smack/packet/XMPPError$Condition;" new="f_b"/>
   <field old="service_unavailable Lorg/jivesoftware/smack/packet/XMPPError$Condition;" new="f_h"/>
   <field old="subscription_required Lorg/jivesoftware/smack/packet/XMPPError$Condition;" new="f_g"/>
   <field old="undefined_condition Lorg/jivesoftware/smack/packet/XMPPError$Condition;" new="f_e"/>
   <field old="unexpected_request Lorg/jivesoftware/smack/packet/XMPPError$Condition;" new="f_D"/>
   <field old="value Ljava/lang/String;" new="f_k"/>
  </class>
  <class old="org.jivesoftware.smackx.filetransfer.IBBTransferNegotiator$ByteStreamRequest" new="org.jivesoftware.smackx.filetransfer.c_g">
   <method old="accept()Lorg/jivesoftware/smackx/bytestreams/BytestreamSession;" new="m_Ja"/>
   <method old="accept()Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamSession;" new="m_Ja"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getSessionID()Ljava/lang/String;" new="m_Ba"/>
   <method old="reject()V" new="m_ba"/>
  </class>
  <class old="com.xabber.android.ui.adapter.ContactListAdapter" new="com.xabber.android.ui.adapter.c_a">
   <method old="addContact(Lcom/xabber/android/data/roster/AbstractContact;Ljava/lang/String;ZLjava/util/TreeMap;Ljava/util/TreeMap;Ljava/util/ArrayList;ZZ)V" new="m_Eda"/>
   <method old="addContact(Lcom/xabber/android/data/roster/AbstractContact;ZLjava/util/TreeMap;Ljava/util/TreeMap;Ljava/util/ArrayList;ZZZ)Z" new="m_dda"/>
   <method old="getCount()I" new="getCount"/>
   <method old="getFilter()Landroid/widget/Filter;" new="getFilter"/>
   <method old="getGroupConfiguration(Lcom/xabber/android/ui/adapter/AccountConfiguration;Ljava/lang/String;)Lcom/xabber/android/ui/adapter/GroupConfiguration;" new="m_uaa"/>
   <method old="getGroupConfiguration(Ljava/util/TreeMap;Ljava/lang/String;)Lcom/xabber/android/ui/adapter/GroupConfiguration;" new="m_rBa"/>
   <method old="getGroupStateProvider()Lcom/xabber/android/data/roster/GroupStateProvider;" new="m_pBa"/>
   <method old="getInflater()Lcom/xabber/android/ui/adapter/BaseContactInflater;" new="m_zaa"/>
   <method old="getItem(I)Ljava/lang/Object;" new="getItem"/>
   <method old="getItemId(I)J" new="getItemId"/>
   <method old="getItemViewType(I)I" new="getItemViewType"/>
   <method old="getView(ILandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;" new="getView"/>
   <method old="getViewTypeCount()I" new="getViewTypeCount"/>
   <method old="onChange()V" new="m_cb"/>
   <method old="refreshRequest()V" new="m_pAa"/>
   <method old="removeRefreshRequests()V" new="m_bba"/>
   <method old="run()V" new="run"/>
   <method old="setExpanded(Ljava/lang/String;Ljava/lang/String;Z)V" new="m_fC"/>
   <field old="NO_GROUP_LIST Ljava/util/Collection;" new="f_e"/>
   <field old="REFRESH_INTERVAL J" new="f_l"/>
   <field old="TYPE_CONTACT I" new="f_B"/>
   <field old="TYPE_GROUP I" new="f_k"/>
   <field old="activity Landroid/app/Activity;" new="f_B"/>
   <field old="animation Landroid/view/animation/Animation;" new="f_b"/>
   <field old="baseEntities Ljava/util/ArrayList;" new="f_b"/>
   <field old="buttonView Landroid/widget/Button;" new="f_I"/>
   <field old="connectedView Landroid/view/View;" new="f_e"/>
   <field old="contactFilter Lcom/xabber/android/ui/adapter/BaseContactAdapter$ContactFilter;" new="f_j"/>
   <field old="disconnectedView Landroid/view/View;" new="f_m"/>
   <field old="filterString Ljava/lang/String;" new="f_e"/>
   <field old="groupStateProvider Lcom/xabber/android/data/roster/GroupStateProvider;" new="f_b"/>
   <field old="handler Landroid/os/Handler;" new="f_j"/>
   <field old="inflater Lcom/xabber/android/ui/adapter/BaseContactInflater;" new="f_d"/>
   <field old="infoView Landroid/view/View;" new="f_B"/>
   <field old="listView Landroid/widget/ListView;" new="f_e"/>
   <field old="locale Ljava/util/Locale;" new="f_m"/>
   <field old="nextRefresh Ljava/util/Date;" new="f_K"/>
   <field old="refreshInProgess Z" new="f_k"/>
   <field old="refreshLock Ljava/lang/Object;" new="f_J"/>
   <field old="refreshRequested Z" new="f_d"/>
   <field old="textView Landroid/widget/TextView;" new="f_f"/>
  </class>
  <class old="net.java.otr4j.io.messages.DataMessage" new="net.java.otr4j.io.messages.c_k">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getT()Lnet/java/otr4j/io/messages/MysteriousT;" new="m_kaa"/>
   <method old="hashCode()I" new="hashCode"/>
   <field old="MESSAGE_DATA I" new="MESSAGE_DATA"/>
   <field old="MESSAGE_DHKEY I" new="MESSAGE_DHKEY"/>
   <field old="MESSAGE_DH_COMMIT I" new="MESSAGE_DH_COMMIT"/>
   <field old="MESSAGE_ERROR I" new="MESSAGE_ERROR"/>
   <field old="MESSAGE_PLAINTEXT I" new="MESSAGE_PLAINTEXT"/>
   <field old="MESSAGE_QUERY I" new="MESSAGE_QUERY"/>
   <field old="MESSAGE_REVEALSIG I" new="MESSAGE_REVEALSIG"/>
   <field old="MESSAGE_SIGNATURE I" new="MESSAGE_SIGNATURE"/>
   <field old="ctr [B" new="f_d"/>
   <field old="encryptedMessage [B" new="f_e"/>
   <field old="flags I" new="f_k"/>
   <field old="mac [B" new="f_j"/>
   <field old="messageType I" new="f_m"/>
   <field old="nextDH Ljavax/crypto/interfaces/DHPublicKey;" new="f_l"/>
   <field old="oldMACKeys [B" new="f_m"/>
   <field old="protocolVersion I" new="f_e"/>
   <field old="recipientKeyID I" new="f_b"/>
   <field old="senderKeyID I" new="f_B"/>
  </class>
  <class old="org.jivesoftware.smackx.muc.RoomListenerMultiplexor$1" new="org.jivesoftware.smackx.muc.RoomListenerMultiplexor$1">
  </class>
  <class old="net.java.otr4j.io.messages.ErrorMessage" new="net.java.otr4j.io.messages.c_f">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="hashCode()I" new="hashCode"/>
   <field old="MESSAGE_ERROR I" new="MESSAGE_ERROR"/>
   <field old="MESSAGE_PLAINTEXT I" new="MESSAGE_PLAINTEXT"/>
   <field old="MESSAGE_QUERY I" new="MESSAGE_QUERY"/>
   <field old="error Ljava/lang/String;" new="f_m"/>
   <field old="messageType I" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry" new="org.jivesoftware.smack.util.collections.c_F">
   <method old="access$000(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;)Ljava/lang/Object;" new="m_ip"/>
   <method old="access$002(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;Ljava/lang/Object;)Ljava/lang/Object;" new="m_Mp"/>
   <method old="access$100(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;)Ljava/lang/Object;" new="m_IP"/>
   <method old="access$102(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;Ljava/lang/Object;)Ljava/lang/Object;" new="m_YP"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getKey()Ljava/lang/Object;" new="getKey"/>
   <method old="getValue()Ljava/lang/Object;" new="getValue"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="setKey(Ljava/lang/Object;)V" new="m_eP"/>
   <method old="setValue(Ljava/lang/Object;)Ljava/lang/Object;" new="setValue"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="hashCode I" new="f_b"/>
   <field old="key Ljava/lang/Object;" new="f_e"/>
   <field old="next Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;" new="f_d"/>
   <field old="value Ljava/lang/Object;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.util.Cache$1" new="org.jivesoftware.smack.util.c_e">
   <method old="iterator()Ljava/util/Iterator;" new="iterator"/>
   <method old="size()I" new="size"/>
   <field old="this$0 Lorg/jivesoftware/smack/util/Cache;" new="f_e"/>
   <field old="values Ljava/util/Collection;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.util.Cache$2" new="org.jivesoftware.smack.util.c_d">
   <method old="access$000(Lorg/jivesoftware/smack/util/Cache$2;)Ljava/util/Set;" new="m_fu"/>
   <method old="iterator()Ljava/util/Iterator;" new="iterator"/>
   <method old="size()I" new="size"/>
   <field old="set Ljava/util/Set;" new="f_e"/>
   <field old="this$0 Lorg/jivesoftware/smack/util/Cache;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.XMPPException" new="org.jivesoftware.smack.c_K">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getMessage()Ljava/lang/String;" new="getMessage"/>
   <method old="getStreamError()Lorg/jivesoftware/smack/packet/StreamError;" new="m_JT"/>
   <method old="getWrappedThrowable()Ljava/lang/Throwable;" new="m_ou"/>
   <method old="getXMPPError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_qu"/>
   <method old="printStackTrace()V" new="printStackTrace"/>
   <method old="printStackTrace(Ljava/io/PrintStream;)V" new="printStackTrace"/>
   <method old="printStackTrace(Ljava/io/PrintWriter;)V" new="printStackTrace"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="error Lorg/jivesoftware/smack/packet/XMPPError;" new="f_e"/>
   <field old="streamError Lorg/jivesoftware/smack/packet/StreamError;" new="f_b"/>
   <field old="wrappedThrowable Ljava/lang/Throwable;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.Header" new="org.jivesoftware.smackx.packet.c_p">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="getValue()Ljava/lang/String;" new="m_Ra"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="name Ljava/lang/String;" new="f_m"/>
   <field old="value Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$1" new="org.jivesoftware.smackx.bytestreams.ibb.c_c">
   <field old="$SwitchMap$org$jivesoftware$smackx$bytestreams$ibb$InBandBytestreamManager$StanzaType [I" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.vcard.AbstractTypedDataProvider" new="com.xabber.xmpp.vcard.c_M">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="getTypes()[Ljava/lang/Enum;" new="m_xg"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/AbstractTypedData;)Z" new="m_caa"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
  </class>
  <class old="org.xbill.DNS.NSIDOption" new="org.xbill.DNS.c_ja">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;)Lorg/xbill/DNS/EDNSOption;" new="m_rI"/>
   <method old="fromWire([B)Lorg/xbill/DNS/EDNSOption;" new="m_Si"/>
   <method old="getCode()I" new="m_ej"/>
   <method old="getData()[B" new="m_tD"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="optionFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_XI"/>
   <method old="optionToString()Ljava/lang/String;" new="m_cG"/>
   <method old="optionToWire(Lorg/xbill/DNS/DNSOutput;)V" new="m_GH"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire()[B" new="m_tF"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;)V" new="m_ne"/>
   <field old="serialVersionUID J" new="f_m"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.params.DHKeyParameters" new="wy.c_IA">
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getParameters()Lnet/java/otr4j/bouncycastle/crypto/params/DHParameters;" new="m_Paa"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="isPrivate()Z" new="m_Gaa"/>
   <field old="params Lnet/java/otr4j/bouncycastle/crypto/params/DHParameters;" new="f_m"/>
   <field old="privateKey Z" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.message.chat.AbstractChatPropertyTable$Fields" new="wy.c_tc">
   <field old="ACCOUNT Ljava/lang/String;" new="f_m"/>
   <field old="USER Ljava/lang/String;" new="f_e"/>
   <field old="VALUE Ljava/lang/String;" new="f_b"/>
  </class>
  <class old="org.xbill.DNS.TSIG" new="org.xbill.DNS.c_v">
   <method old="access$000(Lorg/xbill/DNS/TSIG;)Ljava/lang/String;" new="m_ud"/>
   <method old="access$100(Lorg/xbill/DNS/TSIG;)I" new="m_mD"/>
   <method old="access$200(Lorg/xbill/DNS/TSIG;)[B" new="m_aF"/>
   <method old="access$300(Lorg/xbill/DNS/TSIG;)Lorg/xbill/DNS/Name;" new="m_PF"/>
   <method old="access$400(Lorg/xbill/DNS/TSIG;)Lorg/xbill/DNS/Name;" new="m_oE"/>
   <method old="apply(Lorg/xbill/DNS/Message;ILorg/xbill/DNS/TSIGRecord;)V" new="m_kF"/>
   <method old="apply(Lorg/xbill/DNS/Message;Lorg/xbill/DNS/TSIGRecord;)V" new="m_Df"/>
   <method old="applyStream(Lorg/xbill/DNS/Message;Lorg/xbill/DNS/TSIGRecord;Z)V" new="m_EE"/>
   <method old="fromString(Ljava/lang/String;)Lorg/xbill/DNS/TSIG;" new="m_tc"/>
   <method old="generate(Lorg/xbill/DNS/Message;[BILorg/xbill/DNS/TSIGRecord;)Lorg/xbill/DNS/TSIGRecord;" new="m_UD"/>
   <method old="getDigest()V" new="m_te"/>
   <method old="recordLength()I" new="m_QD"/>
   <method old="verify(Lorg/xbill/DNS/Message;[BILorg/xbill/DNS/TSIGRecord;)B" new="m_CD"/>
   <method old="verify(Lorg/xbill/DNS/Message;[BLorg/xbill/DNS/TSIGRecord;)I" new="m_OE"/>
   <field old="FUDGE S" new="f_d"/>
   <field old="HMAC Lorg/xbill/DNS/Name;" new="f_I"/>
   <field old="HMAC_MD5 Lorg/xbill/DNS/Name;" new="f_h"/>
   <field old="HMAC_MD5_STR Ljava/lang/String;" new="f_H"/>
   <field old="HMAC_SHA1 Lorg/xbill/DNS/Name;" new="f_b"/>
   <field old="HMAC_SHA1_STR Ljava/lang/String;" new="f_G"/>
   <field old="HMAC_SHA224 Lorg/xbill/DNS/Name;" new="f_K"/>
   <field old="HMAC_SHA224_STR Ljava/lang/String;" new="f_e"/>
   <field old="HMAC_SHA256 Lorg/xbill/DNS/Name;" new="f_M"/>
   <field old="HMAC_SHA256_STR Ljava/lang/String;" new="f_D"/>
   <field old="HMAC_SHA384 Lorg/xbill/DNS/Name;" new="f_g"/>
   <field old="HMAC_SHA384_STR Ljava/lang/String;" new="f_J"/>
   <field old="HMAC_SHA512 Lorg/xbill/DNS/Name;" new="f_k"/>
   <field old="HMAC_SHA512_STR Ljava/lang/String;" new="f_B"/>
   <field old="alg Lorg/xbill/DNS/Name;" new="f_l"/>
   <field old="digest Ljava/lang/String;" new="f_f"/>
   <field old="digestBlockLength I" new="f_F"/>
   <field old="key [B" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
  </class>
  <class old="org.jivesoftware.smack.ConnectionCreationListener" new="org.jivesoftware.smack.c_A">
   <method old="connectionCreated(Lorg/jivesoftware/smack/Connection;)V" new="m_q"/>
  </class>
  <class old="org.jivesoftware.smack.ChatManagerListener" new="org.jivesoftware.smack.c_m">
   <method old="chatCreated(Lorg/jivesoftware/smack/Chat;Z)V" new="m_oa"/>
  </class>
  <class old="org.xbill.DNS.DNSSEC$MalformedKeyException" new="org.xbill.DNS.c_Tc">
  </class>
  <class old="org.jivesoftware.smack.filter.NotFilter" new="wy.c_Ea">
   <method old="accept(Lorg/jivesoftware/smack/packet/Packet;)Z" new="m_x"/>
   <field old="filter Lorg/jivesoftware/smack/filter/PacketFilter;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.utils.base32$Alphabet" new="wy.c_w">
   <field old="BASE32 Ljava/lang/String;" new="f_e"/>
   <field old="BASE32HEX Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.ChatStateManager$1" new="org.jivesoftware.smackx.c_p">
  </class>
  <class old="org.xbill.DNS.ClientSubnetOption" new="org.xbill.DNS.c_cb">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="checkMaskLength(Ljava/lang/String;II)I" new="m_lI"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;)Lorg/xbill/DNS/EDNSOption;" new="m_rI"/>
   <method old="fromWire([B)Lorg/xbill/DNS/EDNSOption;" new="m_Si"/>
   <method old="getAddress()Ljava/net/InetAddress;" new="m_kf"/>
   <method old="getCode()I" new="m_ej"/>
   <method old="getData()[B" new="m_tD"/>
   <method old="getFamily()I" new="m_Ch"/>
   <method old="getScopeNetmask()I" new="m_TI"/>
   <method old="getSourceNetmask()I" new="m_zh"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="optionFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_XI"/>
   <method old="optionToString()Ljava/lang/String;" new="m_cG"/>
   <method old="optionToWire(Lorg/xbill/DNS/DNSOutput;)V" new="m_GH"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire()[B" new="m_tF"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;)V" new="m_ne"/>
   <field old="address Ljava/net/InetAddress;" new="f_B"/>
   <field old="family I" new="f_b"/>
   <field old="scopeNetmask I" new="f_d"/>
   <field old="serialVersionUID J" new="f_m"/>
   <field old="sourceNetmask I" new="f_e"/>
  </class>
  <class old="org.xbill.DNS.NSAP_PTRRecord" new="org.xbill.DNS.c_Ca">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getSingleName()Lorg/xbill/DNS/Name;" new="m_NH"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getTarget()Lorg/xbill/DNS/Name;" new="m_ff"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="serialVersionUID J" new="f_m"/>
   <field old="singleName Lorg/xbill/DNS/Name;" new="f_m"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smack.provider.PacketExtensionProvider" new="wy.c_H">
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_I"/>
  </class>
  <class old="com.xabber.android.data.notification.NotificationItem" new="wy.c_d">
   <method old="getIntent()Landroid/content/Intent;" new="m_db"/>
   <method old="getText()Ljava/lang/String;" new="m_ZA"/>
   <method old="getTitle()Ljava/lang/String;" new="m_zb"/>
  </class>
  <class old="org.jivesoftware.smack.util.collections.AbstractKeyValue" new="org.jivesoftware.smack.util.collections.c_f">
   <method old="getKey()Ljava/lang/Object;" new="getKey"/>
   <method old="getValue()Ljava/lang/Object;" new="getValue"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="key Ljava/lang/Object;" new="f_e"/>
   <field old="value Ljava/lang/Object;" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.archive.AbstractModified" new="com.xabber.xmpp.archive.c_G">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getStart()Ljava/util/Date;" new="m_vC"/>
   <method old="getStartString()Ljava/lang/String;" new="m_lC"/>
   <method old="getVersion()Ljava/lang/Integer;" new="m_Sd"/>
   <method old="getWith()Ljava/lang/String;" new="m_ib"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="setStart(Ljava/util/Date;)V" new="m_SBa"/>
   <method old="setStartString(Ljava/lang/String;)V" new="m_tca"/>
   <method old="setVersion(Ljava/lang/Integer;)V" new="m_JCa"/>
   <method old="setWith(Ljava/lang/String;)V" new="m_mda"/>
   <field old="START_ATTRIBUTE Ljava/lang/String;" new="f_d"/>
   <field old="VERSION_ATTRIBUTE Ljava/lang/String;" new="f_m"/>
   <field old="WITH_ATTRIBUTE Ljava/lang/String;" new="f_j"/>
   <field old="start Ljava/util/Date;" new="f_B"/>
   <field old="startString Ljava/lang/String;" new="f_b"/>
   <field old="version Ljava/lang/Integer;" new="f_k"/>
   <field old="with Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="org.xbill.DNS.DSRecord$Digest" new="org.xbill.DNS.c_vC">
   <field old="SHA1 I" new="f_e"/>
   <field old="SHA256 I" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$MessageIBBOutputStream" new="org.jivesoftware.smackx.bytestreams.ibb.c_m">
   <method old="close()V" new="close"/>
   <method old="closeInternal(Z)V" new="m_uM"/>
   <method old="flush()V" new="flush"/>
   <method old="write(I)V" new="write"/>
   <method old="write([B)V" new="write"/>
   <method old="write([BII)V" new="write"/>
   <method old="writeToXML(Lorg/jivesoftware/smackx/bytestreams/ibb/packet/DataPacketExtension;)V" new="m_Gm"/>
   <field old="buffer [B" new="f_d"/>
   <field old="bufferPointer I" new="f_B"/>
   <field old="isClosed Z" new="f_b"/>
   <field old="seq J" new="f_e"/>
   <field old="this$0 Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamSession;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.widget.NoDefaultSpinner$SpinnerAdapterProxy" new="com.xabber.android.ui.widget.c_B">
   <method old="getView(ILandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;" new="m_tba"/>
   <method old="invoke(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;" new="invoke"/>
   <field old="getView Ljava/lang/reflect/Method;" new="f_b"/>
   <field old="obj Landroid/widget/SpinnerAdapter;" new="f_m"/>
   <field old="this$0 Lcom/xabber/android/ui/widget/NoDefaultSpinner;" new="f_e"/>
  </class>
  <class old="org.xbill.DNS.utils.hexdump" new="wy.c_F">
   <method old="dump(Ljava/lang/String;[B)Ljava/lang/String;" new="m_NB"/>
   <method old="dump(Ljava/lang/String;[BII)Ljava/lang/String;" new="m_Ob"/>
   <field old="hex [C" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.socks5.Socks5Proxy$1" new="org.jivesoftware.smackx.bytestreams.socks5.c_B">
  </class>
  <class old="org.xbill.DNS.Tokenizer$1" new="org.xbill.DNS.c_F">
  </class>
  <class old="org.jivesoftware.smack.KeyStoreManager$KeyStoreOptions" new="org.jivesoftware.smack.c_t">
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getPassword()Ljava/lang/String;" new="m_rj"/>
   <method old="getPath()Ljava/lang/String;" new="m_XW"/>
   <method old="getType()Ljava/lang/String;" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <field old="password Ljava/lang/String;" new="f_e"/>
   <field old="path Ljava/lang/String;" new="f_m"/>
   <field old="type Ljava/lang/String;" new="f_b"/>
  </class>
  <class old="org.xbill.DNS.DClass$DClassMnemonic" new="org.xbill.DNS.c_AC">
   <method old="add(ILjava/lang/String;)V" new="m_DF"/>
   <method old="addAlias(ILjava/lang/String;)V" new="m_vE"/>
   <method old="addAll(Lorg/xbill/DNS/Mnemonic;)V" new="m_DE"/>
   <method old="check(I)V" new="m_vd"/>
   <method old="getText(I)Ljava/lang/String;" new="m_fF"/>
   <method old="getValue(Ljava/lang/String;)I" new="m_oF"/>
   <method old="setMaximum(I)V" new="m_Bg"/>
   <method old="setNumericAllowed(Z)V" new="m_hF"/>
   <method old="setPrefix(Ljava/lang/String;)V" new="m_Dg"/>
   <method old="toInteger(I)Ljava/lang/Integer;" new="m_qE"/>
   <field old="CASE_LOWER I" new="f_d"/>
   <field old="CASE_SENSITIVE I" new="f_B"/>
   <field old="CASE_UPPER I" new="f_e"/>
  </class>
  <class old="com.xabber.android.ui.helper.PreferenceSummaryHelper" new="com.xabber.android.ui.helper.c_E">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="updateSummary(Landroid/preference/PreferenceGroup;)V" new="m_uBa"/>
  </class>
  <class old="org.xbill.DNS.IPSECKEYRecord$Gateway" new="org.xbill.DNS.c_ya">
   <field old="IPv4 I" new="f_e"/>
   <field old="IPv6 I" new="f_b"/>
   <field old="Name I" new="f_m"/>
   <field old="None I" new="f_d"/>
  </class>
  <class old="com.xabber.android.data.extension.vcard.OnVCardListener" new="wy.c_a">
   <method old="onVCardFailed(Ljava/lang/String;Ljava/lang/String;)V" new="m_Rd"/>
   <method old="onVCardReceived(Ljava/lang/String;Ljava/lang/String;Lcom/xabber/xmpp/vcard/VCard;)V" new="m_BB"/>
  </class>
  <class old="org.jivesoftware.smackx.filetransfer.Socks5TransferNegotiator$1" new="org.jivesoftware.smackx.filetransfer.c_m">
  </class>
  <class old="com.xabber.xmpp.archive.List" new="com.xabber.xmpp.archive.c_L">
   <method old="addChat(Lcom/xabber/xmpp/archive/Chat;)V" new="m_oca"/>
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChats()Ljava/util/Collection;" new="m_pca"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getEnd()Ljava/util/Date;" new="m_JAa"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getRsm()Lcom/xabber/xmpp/rsm/Set;" new="m_yCa"/>
   <method old="getStart()Ljava/util/Date;" new="m_vC"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getWith()Ljava/lang/String;" new="m_ib"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="isExactmatch()Z" new="m_ica"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="serializeContent(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_Fb"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setEnd(Ljava/util/Date;)V" new="m_wCa"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setExactmatch(Z)V" new="m_Cba"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setRsm(Lcom/xabber/xmpp/rsm/Set;)V" new="m_dba"/>
   <method old="setStart(Ljava/util/Date;)V" new="m_SBa"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="setWith(Ljava/lang/String;)V" new="m_mda"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_B"/>
   <field old="END_ATTRIBUTE Ljava/lang/String;" new="f_e"/>
   <field old="EXACTMATCH_ATTRIBUTE Ljava/lang/String;" new="f_J"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="NAMESPACE Ljava/lang/String;" new="f_I"/>
   <field old="START_ATTRIBUTE Ljava/lang/String;" new="f_D"/>
   <field old="WITH_ATTRIBUTE Ljava/lang/String;" new="f_m"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="chats Ljava/util/Collection;" new="f_K"/>
   <field old="end Ljava/util/Date;" new="f_l"/>
   <field old="exactmatch Z" new="f_f"/>
   <field old="rsm Lcom/xabber/xmpp/rsm/Set;" new="f_b"/>
   <field old="start Ljava/util/Date;" new="f_k"/>
   <field old="with Ljava/lang/String;" new="f_j"/>
  </class>
  <class old="com.xabber.android.data.roster.ResourceItem" new="com.xabber.android.data.roster.ResourceItem">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="compareTo(Lcom/xabber/android/data/roster/ResourceItem;)I" new="m_lFa"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="getPriority()I" new="m_iD"/>
   <method old="getStatusMode()Lcom/xabber/android/data/account/StatusMode;" new="m_tfa"/>
   <method old="getStatusText()Ljava/lang/String;" new="m_tFa"/>
   <method old="getUser(Ljava/lang/String;)Ljava/lang/String;" new="m_xFa"/>
   <method old="getVerbose()Ljava/lang/String;" new="m_NEa"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="setPriority(I)V" new="m_iT"/>
   <method old="setStatusMode(Lcom/xabber/android/data/account/StatusMode;)V" new="m_lca"/>
   <method old="setStatusText(Ljava/lang/String;)V" new="m_Dfa"/>
   <method old="setVerbose(Ljava/lang/String;)V" new="m_oEa"/>
   <field old="priority I" new="f_e"/>
   <field old="statusMode Lcom/xabber/android/data/account/StatusMode;" new="f_d"/>
   <field old="statusText Ljava/lang/String;" new="f_b"/>
   <field old="verbose Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="net.java.otr4j.OtrKeyManagerImpl" new="net.java.otr4j.c_G">
   <method old="addListener(Lnet/java/otr4j/OtrKeyManagerListener;)V" new="m_CA"/>
   <method old="generateLocalKeyPair(Lnet/java/otr4j/session/SessionID;)V" new="m_mb"/>
   <method old="getLocalFingerprint(Lnet/java/otr4j/session/SessionID;)Ljava/lang/String;" new="m_Fd"/>
   <method old="getLocalFingerprintRaw(Lnet/java/otr4j/session/SessionID;)[B" new="m_gB"/>
   <method old="getRemoteFingerprint(Lnet/java/otr4j/session/SessionID;)Ljava/lang/String;" new="m_aB"/>
   <method old="isVerified(Lnet/java/otr4j/session/SessionID;)Z" new="m_dA"/>
   <method old="loadLocalKeyPair(Lnet/java/otr4j/session/SessionID;)Ljava/security/KeyPair;" new="m_JA"/>
   <method old="loadRemotePublicKey(Lnet/java/otr4j/session/SessionID;)Ljava/security/PublicKey;" new="m_ed"/>
   <method old="removeListener(Lnet/java/otr4j/OtrKeyManagerListener;)V" new="m_md"/>
   <method old="savePublicKey(Lnet/java/otr4j/session/SessionID;Ljava/security/PublicKey;)V" new="m_PB"/>
   <method old="unverify(Lnet/java/otr4j/session/SessionID;)V" new="m_EC"/>
   <method old="verify(Lnet/java/otr4j/session/SessionID;)V" new="m_rC"/>
   <field old="listeners Ljava/util/List;" new="f_e"/>
   <field old="store Lnet/java/otr4j/OtrKeyManagerStore;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.InvalidTypeException" new="org.xbill.DNS.c_oa">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.MultipleAddresses$1" new="org.jivesoftware.smackx.packet.c_o">
  </class>
  <class old="org.jivesoftware.smackx.DefaultMessageEventRequestListener" new="org.jivesoftware.smackx.c_T">
   <method old="composingNotificationRequested(Ljava/lang/String;Ljava/lang/String;Lorg/jivesoftware/smackx/MessageEventManager;)V" new="m_Ta"/>
   <method old="deliveredNotificationRequested(Ljava/lang/String;Ljava/lang/String;Lorg/jivesoftware/smackx/MessageEventManager;)V" new="m_va"/>
   <method old="displayedNotificationRequested(Ljava/lang/String;Ljava/lang/String;Lorg/jivesoftware/smackx/MessageEventManager;)V" new="m_Na"/>
   <method old="offlineNotificationRequested(Ljava/lang/String;Ljava/lang/String;Lorg/jivesoftware/smackx/MessageEventManager;)V" new="m_Za"/>
  </class>
  <class old="com.xabber.android.ui.adapter.BaseListEditorAdapter" new="com.xabber.android.ui.adapter.c_J">
   <method old="getActivity()Landroid/app/Activity;" new="m_yba"/>
   <method old="getCount()I" new="getCount"/>
   <method old="getItem(I)Ljava/lang/Object;" new="getItem"/>
   <method old="getItemId(I)J" new="getItemId"/>
   <method old="getTags()Ljava/util/Collection;" new="m_mCa"/>
   <method old="onChange()V" new="m_cb"/>
   <field old="activity Landroid/app/Activity;" new="f_e"/>
   <field old="tags Ljava/util/List;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.extension.archive.ModificationStorage" new="com.xabber.android.data.extension.archive.c_A">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="addHeaders(Ljava/util/Collection;)V" new="m_cia"/>
   <method old="getHeaderCount()I" new="m_pIa"/>
   <method old="getLastRequest()Ljava/util/Date;" new="m_Gia"/>
   <method old="getNext()Ljava/lang/String;" new="m_Ui"/>
   <method old="isHeadersReceived()Z" new="m_pga"/>
   <method old="isInProgress()Z" new="m_sGa"/>
   <method old="isSucceed()Z" new="m_Jha"/>
   <method old="onConnected()V" new="m_WIa"/>
   <method old="onFinished()V" new="m_JHa"/>
   <method old="onHeadersReceived()V" new="m_kGa"/>
   <method old="onSuccess()V" new="m_CIa"/>
   <method old="peekHeader()Lcom/xabber/xmpp/archive/CollectionHeader;" new="m_xHa"/>
   <method old="pollHeader()Lcom/xabber/xmpp/archive/CollectionHeader;" new="m_bHa"/>
   <method old="request(Ljava/util/Date;)Z" new="m_iHa"/>
   <method old="reset()V" new="m_ld"/>
   <method old="setInProgress(Z)V" new="m_Pia"/>
   <method old="setNext(Ljava/lang/String;)V" new="m_rGa"/>
   <field old="last Ljava/util/Date;" new="f_m"/>
   <field old="request Ljava/util/Date;" new="f_b"/>
   <field old="succeed Z" new="f_e"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.login.CredentialNotFoundException" new="wy.c_Xa">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <field old="serialVersionUID J" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.message.phrase.PhraseTable$Fields" new="wy.c_SC">
   <field old="GROUP Ljava/lang/String;" new="f_B"/>
   <field old="REGEXP Ljava/lang/String;" new="f_d"/>
   <field old="SOUND Ljava/lang/String;" new="f_e"/>
   <field old="USER Ljava/lang/String;" new="f_m"/>
   <field old="VALUE Ljava/lang/String;" new="f_b"/>
  </class>
  <class old="com.jcraft.jzlib.StaticTree" new="wy.c_lb">
   <field old="BL_CODES I" new="f_I"/>
   <field old="D_CODES I" new="f_d"/>
   <field old="LENGTH_CODES I" new="f_b"/>
   <field old="LITERALS I" new="f_k"/>
   <field old="L_CODES I" new="f_f"/>
   <field old="MAX_BITS I" new="f_l"/>
   <field old="MAX_BL_BITS I" new="f_e"/>
   <field old="elems I" new="f_j"/>
   <field old="extra_base I" new="f_B"/>
   <field old="extra_bits [I" new="f_H"/>
   <field old="max_length I" new="f_g"/>
   <field old="static_bl_desc Lcom/jcraft/jzlib/StaticTree;" new="f_M"/>
   <field old="static_d_desc Lcom/jcraft/jzlib/StaticTree;" new="f_D"/>
   <field old="static_dtree [S" new="f_J"/>
   <field old="static_l_desc Lcom/jcraft/jzlib/StaticTree;" new="f_m"/>
   <field old="static_ltree [S" new="f_G"/>
   <field old="static_tree [S" new="f_K"/>
  </class>
  <class old="com.novell.sasl.client.DirectiveList" new="com.novell.sasl.client.c_A">
   <method old="addDirective(Ljava/lang/String;Z)V" new="m_Lna"/>
   <method old="getIterator()Ljava/util/Iterator;" new="m_nMa"/>
   <method old="isValidTokenChar(C)Z" new="m_eMa"/>
   <method old="isWhiteSpace(C)Z" new="m_nNa"/>
   <method old="parseDirectives()V" new="m_fNa"/>
   <field old="STATE_LOOKING_FOR_COMMA I" new="f_g"/>
   <field old="STATE_LOOKING_FOR_DIRECTIVE I" new="f_J"/>
   <field old="STATE_LOOKING_FOR_EQUALS I" new="f_m"/>
   <field old="STATE_LOOKING_FOR_FIRST_DIRECTIVE I" new="f_d"/>
   <field old="STATE_LOOKING_FOR_VALUE I" new="f_K"/>
   <field old="STATE_NO_UTF8_SUPPORT I" new="f_D"/>
   <field old="STATE_SCANNING_NAME I" new="f_I"/>
   <field old="STATE_SCANNING_QUOTED_STRING_VALUE I" new="f_f"/>
   <field old="STATE_SCANNING_TOKEN_VALUE I" new="f_M"/>
   <field old="m_curName Ljava/lang/String;" new="f_j"/>
   <field old="m_curPos I" new="f_b"/>
   <field old="m_directiveList Ljava/util/ArrayList;" new="f_G"/>
   <field old="m_directives Ljava/lang/String;" new="f_B"/>
   <field old="m_errorPos I" new="f_k"/>
   <field old="m_scanStart I" new="f_e"/>
   <field old="m_state I" new="f_l"/>
  </class>
  <class old="org.xbill.DNS.DNAMERecord" new="org.xbill.DNS.c_rd">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getAlias()Lorg/xbill/DNS/Name;" new="m_JI"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getSingleName()Lorg/xbill/DNS/Name;" new="m_NH"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getTarget()Lorg/xbill/DNS/Name;" new="m_ff"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="serialVersionUID J" new="f_m"/>
   <field old="singleName Lorg/xbill/DNS/Name;" new="f_m"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="org.xbill.DNS.ResolverConfig" new="org.xbill.DNS.ResolverConfig">
   <method old="addSearch(Ljava/lang/String;Ljava/util/List;)V" new="m_HE"/>
   <method old="addServer(Ljava/lang/String;Ljava/util/List;)V" new="m_Nf"/>
   <method old="configureFromLists(Ljava/util/List;Ljava/util/List;)V" new="m_hf"/>
   <method old="configureNdots(I)V" new="m_rh"/>
   <method old="find95()V" new="m_dj"/>
   <method old="findAndroid()V" new="m_FH"/>
   <method old="findAndroidProp()Z" new="m_Vd"/>
   <method old="findNT()V" new="m_oG"/>
   <method old="findNetware()V" new="m_Mi"/>
   <method old="findProperty()Z" new="m_Gg"/>
   <method old="findResolvConf(Ljava/lang/String;)V" new="m_rE"/>
   <method old="findSunJVM()Z" new="m_xF"/>
   <method old="findUnix()V" new="m_bD"/>
   <method old="findWin(Ljava/io/InputStream;)V" new="m_Bi"/>
   <method old="findWin(Ljava/io/InputStream;Ljava/util/Locale;)V" new="m_QE"/>
   <method old="getCurrentConfig()Lorg/xbill/DNS/ResolverConfig;" new="m_Wh"/>
   <method old="ndots()I" new="m_hh"/>
   <method old="parseNdots(Ljava/lang/String;)I" new="m_Ph"/>
   <method old="refresh()V" new="m_oC"/>
   <method old="searchPath()[Lorg/xbill/DNS/Name;" new="m_rD"/>
   <method old="server()Ljava/lang/String;" new="m_Qe"/>
   <method old="servers()[Ljava/lang/String;" new="m_oH"/>
   <field old="currentConfig Lorg/xbill/DNS/ResolverConfig;" new="f_m"/>
   <field old="ndots I" new="f_b"/>
   <field old="searchlist [Lorg/xbill/DNS/Name;" new="f_d"/>
   <field old="servers [Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.account.OAuthResult" new="com.xabber.android.data.account.c_g">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getAccessToken()Ljava/lang/String;" new="m_ILa"/>
   <method old="getRefreshToken()Ljava/lang/String;" new="m_wKa"/>
   <method old="isExpired()Z" new="m_cJa"/>
   <field old="SHIFT J" new="f_d"/>
   <field old="accessToken Ljava/lang/String;" new="f_b"/>
   <field old="expires J" new="f_e"/>
   <field old="refreshToken Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.socks5.InitiationListener$1" new="org.jivesoftware.smackx.bytestreams.socks5.c_D">
   <method old="run()V" new="run"/>
   <field old="this$0 Lorg/jivesoftware/smackx/bytestreams/socks5/InitiationListener;" new="f_m"/>
   <field old="val$packet Lorg/jivesoftware/smack/packet/Packet;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.message.MessageTable$Fields" new="com.xabber.android.data.message.c_A">
   <field old="ACCOUNT Ljava/lang/String;" new="f_m"/>
   <field old="ACTION Ljava/lang/String;" new="f_d"/>
   <field old="DELAY_TIMESTAMP Ljava/lang/String;" new="f_f"/>
   <field old="ERROR Ljava/lang/String;" new="f_b"/>
   <field old="INCOMING Ljava/lang/String;" new="f_B"/>
   <field old="READ Ljava/lang/String;" new="f_j"/>
   <field old="RESOURCE Ljava/lang/String;" new="f_K"/>
   <field old="SENT Ljava/lang/String;" new="f_J"/>
   <field old="TAG Ljava/lang/String;" new="f_k"/>
   <field old="TEXT Ljava/lang/String;" new="f_l"/>
   <field old="TIMESTAMP Ljava/lang/String;" new="f_I"/>
   <field old="USER Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smack.packet.Message$Type" new="org.jivesoftware.smack.packet.Message$Type">
   <method old="fromString(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/Message$Type;" new="m_tc"/>
   <method old="valueOf(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/Message$Type;" new="valueOf"/>
   <method old="values()[Lorg/jivesoftware/smack/packet/Message$Type;" new="values"/>
   <field old="$VALUES [Lorg/jivesoftware/smack/packet/Message$Type;" new="f_e"/>
   <field old="chat Lorg/jivesoftware/smack/packet/Message$Type;" new="f_d"/>
   <field old="error Lorg/jivesoftware/smack/packet/Message$Type;" new="f_m"/>
   <field old="groupchat Lorg/jivesoftware/smack/packet/Message$Type;" new="f_b"/>
   <field old="headline Lorg/jivesoftware/smack/packet/Message$Type;" new="f_j"/>
   <field old="normal Lorg/jivesoftware/smack/packet/Message$Type;" new="f_B"/>
  </class>
  <class old="com.xabber.xmpp.Container" new="com.xabber.xmpp.c_H">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="serializeContent(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_Fb"/>
  </class>
  <class old="com.xabber.android.ui.dialog.ConfirmDialogBuilder" new="wy.c_iC">
   <method old="create()Landroid/app/AlertDialog;" new="create"/>
   <method old="getDialogId()I" new="m_EAa"/>
   <method old="getNegativeTitle()Ljava/lang/String;" new="m_rCa"/>
   <method old="getPositiveTitle()Ljava/lang/String;" new="m_sAa"/>
   <method old="onAccept(Landroid/content/DialogInterface;)V" new="m_pba"/>
   <method old="onCancel(Landroid/content/DialogInterface;)V" new="m_NAa"/>
   <method old="onDecline(Landroid/content/DialogInterface;)V" new="m_bda"/>
   <method old="onDismiss(Landroid/content/DialogInterface;)V" new="onDismiss"/>
   <method old="setOnAcceptListener(Lcom/xabber/android/ui/dialog/OnAcceptListener;)Lcom/xabber/android/ui/dialog/ListenableDialogBuilder;" new="m_fAa"/>
   <method old="setOnCancelListener(Lcom/xabber/android/ui/dialog/OnCancelListener;)Lcom/xabber/android/ui/dialog/ListenableDialogBuilder;" new="m_lba"/>
   <method old="setOnDeclineListener(Lcom/xabber/android/ui/dialog/OnDeclineListener;)Lcom/xabber/android/ui/dialog/ListenableDialogBuilder;" new="m_Tba"/>
   <field old="activity Landroid/app/Activity;" new="f_m"/>
   <field old="dialogId I" new="f_e"/>
  </class>
  <class old="org.xbill.DNS.TypeBitmap" new="org.xbill.DNS.c_e">
   <method old="contains(I)Z" new="m_of"/>
   <method old="empty()Z" new="m_mg"/>
   <method old="mapToWire(Lorg/xbill/DNS/DNSOutput;Ljava/util/TreeSet;I)V" new="m_AE"/>
   <method old="toArray()[I" new="m_oD"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;)V" new="m_ne"/>
   <field old="serialVersionUID J" new="f_e"/>
   <field old="types Ljava/util/TreeSet;" new="f_m"/>
  </class>
  <class old="com.xabber.android.service.SyncAdapterService" new="com.xabber.android.service.SyncAdapterService">
   <method old="onBind(Landroid/content/Intent;)Landroid/os/IBinder;" new="onBind"/>
   <method old="onCreate()V" new="onCreate"/>
   <field old="syncAdapter Lcom/xabber/android/service/SyncAdapterService$SyncAdapter;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.filetransfer.FaultTolerantNegotiator" new="org.jivesoftware.smackx.filetransfer.c_w">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="access$000(Lorg/jivesoftware/smackx/filetransfer/FaultTolerantNegotiator;Lorg/jivesoftware/smack/packet/Packet;)Lorg/jivesoftware/smackx/filetransfer/StreamNegotiator;" new="m_Ln"/>
   <method old="cleanup()V" new="m_wD"/>
   <method old="createError(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WM"/>
   <method old="createIncomingStream(Lorg/jivesoftware/smackx/packet/StreamInitiation;)Ljava/io/InputStream;" new="m_cn"/>
   <method old="createInitiationAccept(Lorg/jivesoftware/smackx/packet/StreamInitiation;[Ljava/lang/String;)Lorg/jivesoftware/smackx/packet/StreamInitiation;" new="m_yo"/>
   <method old="createOutgoingStream(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/io/OutputStream;" new="m_bo"/>
   <method old="determineNegotiator(Lorg/jivesoftware/smack/packet/Packet;)Lorg/jivesoftware/smackx/filetransfer/StreamNegotiator;" new="m_UM"/>
   <method old="getInitiationPacketFilter(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/filter/PacketFilter;" new="m_fo"/>
   <method old="getNamespaces()[Ljava/lang/String;" new="m_HN"/>
   <method old="initiateIncomingStream(Lorg/jivesoftware/smack/Connection;Lorg/jivesoftware/smackx/packet/StreamInitiation;)Lorg/jivesoftware/smack/packet/Packet;" new="m_Zo"/>
   <method old="negotiateIncomingStream(Lorg/jivesoftware/smack/packet/Packet;)Ljava/io/InputStream;" new="m_no"/>
   <field old="connection Lorg/jivesoftware/smack/Connection;" new="f_m"/>
   <field old="primaryFilter Lorg/jivesoftware/smack/filter/PacketFilter;" new="f_d"/>
   <field old="primaryNegotiator Lorg/jivesoftware/smackx/filetransfer/StreamNegotiator;" new="f_e"/>
   <field old="secondaryFilter Lorg/jivesoftware/smack/filter/PacketFilter;" new="f_B"/>
   <field old="secondaryNegotiator Lorg/jivesoftware/smackx/filetransfer/StreamNegotiator;" new="f_b"/>
  </class>
  <class old="net.java.otr4j.crypto.SM$SMException" new="wy.c_nC">
   <field old="serialVersionUID J" new="f_m"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.Mac" new="net.java.otr4j.bouncycastle.crypto.c_B">
   <method old="doFinal([BI)I" new="m_sC"/>
   <method old="getAlgorithmName()Ljava/lang/String;" new="m_Bc"/>
   <method old="getMacSize()I" new="m_WA"/>
   <method old="init(Lnet/java/otr4j/bouncycastle/crypto/CipherParameters;)V" new="m_vA"/>
   <method old="reset()V" new="m_ld"/>
   <method old="update(B)V" new="m_DA"/>
   <method old="update([BII)V" new="m_WC"/>
  </class>
  <class old="com.xabber.android.data.notification.EntityNotificationItem" new="wy.c_e">
   <method old="getAccount()Ljava/lang/String;" new="m_FC"/>
   <method old="getIntent()Landroid/content/Intent;" new="m_db"/>
   <method old="getText()Ljava/lang/String;" new="m_ZA"/>
   <method old="getTitle()Ljava/lang/String;" new="m_zb"/>
   <method old="getUser()Ljava/lang/String;" new="m_TA"/>
  </class>
  <class old="com.xabber.android.data.extension.otr.SecurityLevel" new="com.xabber.android.data.extension.otr.SecurityLevel">
   <method old="getImageLevel()I" new="m_kHa"/>
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/android/data/extension/otr/SecurityLevel;" new="valueOf"/>
   <method old="values()[Lcom/xabber/android/data/extension/otr/SecurityLevel;" new="values"/>
   <field old="$VALUES [Lcom/xabber/android/data/extension/otr/SecurityLevel;" new="f_d"/>
   <field old="encrypted Lcom/xabber/android/data/extension/otr/SecurityLevel;" new="f_m"/>
   <field old="finished Lcom/xabber/android/data/extension/otr/SecurityLevel;" new="f_B"/>
   <field old="plain Lcom/xabber/android/data/extension/otr/SecurityLevel;" new="f_e"/>
   <field old="verified Lcom/xabber/android/data/extension/otr/SecurityLevel;" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smackx.ServiceDiscoveryManager$1" new="org.jivesoftware.smackx.c_a">
   <method old="connectionCreated(Lorg/jivesoftware/smack/Connection;)V" new="m_q"/>
  </class>
  <class old="org.jivesoftware.smack.Roster$RosterResultListener" new="org.jivesoftware.smack.Roster$RosterResultListener">
   <method old="processPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_C"/>
   <field old="this$0 Lorg/jivesoftware/smack/Roster;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.extension.muc.RoomTable$Fields" new="com.xabber.android.data.extension.muc.RoomTable$Fields">
   <field old="ACCOUNT Ljava/lang/String;" new="f_m"/>
   <field old="NEED_JOIN Ljava/lang/String;" new="NEED_JOIN"/>
   <field old="NICKNAME Ljava/lang/String;" new="NICKNAME"/>
   <field old="PASSWORD Ljava/lang/String;" new="PASSWORD"/>
   <field old="ROOM Ljava/lang/String;" new="ROOM"/>
  </class>
  <class old="org.jivesoftware.smackx.ServiceDiscoveryManager$2" new="org.jivesoftware.smackx.c_D">
   <method old="connectionClosed()V" new="m_r"/>
   <method old="connectionClosedOnError(Ljava/lang/Exception;)V" new="m_U"/>
   <method old="reconnectingIn(I)V" new="m_Z"/>
   <method old="reconnectionFailed(Ljava/lang/Exception;)V" new="m_S"/>
   <method old="reconnectionSuccessful()V" new="m_W"/>
   <field old="this$0 Lorg/jivesoftware/smackx/ServiceDiscoveryManager;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.ServiceDiscoveryManager$3" new="org.jivesoftware.smackx.c_c">
   <method old="interceptPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_ca"/>
   <field old="this$0 Lorg/jivesoftware/smackx/ServiceDiscoveryManager;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.ServiceDiscoveryManager$4" new="org.jivesoftware.smackx.c_K">
   <method old="processPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_C"/>
   <field old="this$0 Lorg/jivesoftware/smackx/ServiceDiscoveryManager;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.ServiceDiscoveryManager$5" new="org.jivesoftware.smackx.c_G">
   <method old="processPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_C"/>
   <field old="this$0 Lorg/jivesoftware/smackx/ServiceDiscoveryManager;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.widget.PriorityPreference" new="com.xabber.android.ui.widget.PriorityPreference">
   <method old="callChangeListener(Ljava/lang/Object;)Z" new="callChangeListener"/>
   <method old="setText(Ljava/lang/String;)V" new="setText"/>
   <field old="context Landroid/content/Context;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.OnLoadListener" new="com.xabber.android.data.c_A">
   <method old="onLoad()V" new="m_pA"/>
  </class>
  <class old="org.jivesoftware.smackx.muc.MultiUserChat$InvitationsMonitor$1" new="org.jivesoftware.smackx.muc.c_f">
   <method old="processPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_C"/>
   <field old="this$0 Lorg/jivesoftware/smackx/muc/MultiUserChat$InvitationsMonitor;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.connection.NetworkManager" new="com.xabber.android.data.connection.c_G">
   <method old="getInstance()Lcom/xabber/android/data/connection/NetworkManager;" new="m_Xr"/>
   <method old="getState()Lcom/xabber/android/data/connection/NetworkState;" new="m_FK"/>
   <method old="getType(Landroid/net/NetworkInfo;)Ljava/lang/Integer;" new="m_kka"/>
   <method old="isSuspended(Landroid/net/NetworkInfo;)Z" new="m_hLa"/>
   <method old="onAvailable(I)V" new="m_Ila"/>
   <method old="onClose()V" new="m_cc"/>
   <method old="onInitialized()V" new="m_ub"/>
   <method old="onNetworkChange(Landroid/net/NetworkInfo;)V" new="m_Rka"/>
   <method old="onResume()V" new="m_Yga"/>
   <method old="onSuspend()V" new="m_Qka"/>
   <method old="onUnavailable()V" new="m_SLa"/>
   <method old="onWakeLockSettingsChanged()V" new="m_nJa"/>
   <method old="onWifiLockSettingsChanged()V" new="m_OKa"/>
   <field old="connectivityManager Landroid/net/ConnectivityManager;" new="f_l"/>
   <field old="connectivityReceiver Lcom/xabber/android/receiver/ConnectivityReceiver;" new="f_b"/>
   <field old="instance Lcom/xabber/android/data/connection/NetworkManager;" new="f_j"/>
   <field old="state Lcom/xabber/android/data/connection/NetworkState;" new="f_k"/>
   <field old="suspended Z" new="f_B"/>
   <field old="type Ljava/lang/Integer;" new="f_d"/>
   <field old="wakeLock Landroid/os/PowerManager$WakeLock;" new="f_e"/>
   <field old="wifiLock Landroid/net/wifi/WifiManager$WifiLock;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.ibb.provider.DataPacketProvider" new="wy.c_y">
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_I"/>
   <method old="parseIQ(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/IQ;" new="m_g"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IBBDataPacketFilter" new="org.jivesoftware.smackx.bytestreams.ibb.c_K">
   <method old="accept(Lorg/jivesoftware/smack/packet/Packet;)Z" new="m_x"/>
   <field old="this$0 Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamSession;" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.OverflowReceiverBufferException" new="com.xabber.xmpp.c_G">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <field old="serialVersionUID J" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.SharedGroupsInfo$Provider" new="org.jivesoftware.smackx.packet.c_I">
   <method old="parseIQ(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/IQ;" new="m_g"/>
  </class>
  <class old="com.xabber.android.ui.dialog.OnDeclineListener" new="wy.c_G">
   <method old="onDecline(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_ad"/>
  </class>
  <class old="com.xabber.xmpp.vcard.KeyProvider" new="com.xabber.xmpp.vcard.c_L">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/vcard/Key;" new="m_ZZ"/>
   <method old="getInstance()Lcom/xabber/xmpp/vcard/KeyProvider;" new="m_Xr"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/Key;)Z" new="m_Jaa"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
   <field old="instance Lcom/xabber/xmpp/vcard/KeyProvider;" new="f_m"/>
  </class>
  <class old="com.xabber.android.utils.DummyCursor" new="wy.c_Ac">
   <method old="close()V" new="close"/>
   <method old="copyStringToBuffer(ILandroid/database/CharArrayBuffer;)V" new="copyStringToBuffer"/>
   <method old="deactivate()V" new="deactivate"/>
   <method old="getBlob(I)[B" new="getBlob"/>
   <method old="getColumnCount()I" new="getColumnCount"/>
   <method old="getColumnIndex(Ljava/lang/String;)I" new="getColumnIndex"/>
   <method old="getColumnIndexOrThrow(Ljava/lang/String;)I" new="getColumnIndexOrThrow"/>
   <method old="getColumnName(I)Ljava/lang/String;" new="getColumnName"/>
   <method old="getColumnNames()[Ljava/lang/String;" new="getColumnNames"/>
   <method old="getCount()I" new="getCount"/>
   <method old="getDouble(I)D" new="getDouble"/>
   <method old="getExtras()Landroid/os/Bundle;" new="getExtras"/>
   <method old="getFloat(I)F" new="getFloat"/>
   <method old="getInt(I)I" new="getInt"/>
   <method old="getLong(I)J" new="getLong"/>
   <method old="getPosition()I" new="getPosition"/>
   <method old="getShort(I)S" new="getShort"/>
   <method old="getString(I)Ljava/lang/String;" new="getString"/>
   <method old="getWantsAllOnMoveCalls()Z" new="getWantsAllOnMoveCalls"/>
   <method old="isAfterLast()Z" new="isAfterLast"/>
   <method old="isBeforeFirst()Z" new="isBeforeFirst"/>
   <method old="isClosed()Z" new="isClosed"/>
   <method old="isFirst()Z" new="isFirst"/>
   <method old="isLast()Z" new="isLast"/>
   <method old="isNull(I)Z" new="isNull"/>
   <method old="move(I)Z" new="move"/>
   <method old="moveToFirst()Z" new="moveToFirst"/>
   <method old="moveToLast()Z" new="moveToLast"/>
   <method old="moveToNext()Z" new="moveToNext"/>
   <method old="moveToPosition(I)Z" new="moveToPosition"/>
   <method old="moveToPrevious()Z" new="moveToPrevious"/>
   <method old="registerContentObserver(Landroid/database/ContentObserver;)V" new="registerContentObserver"/>
   <method old="registerDataSetObserver(Landroid/database/DataSetObserver;)V" new="registerDataSetObserver"/>
   <method old="requery()Z" new="requery"/>
   <method old="respond(Landroid/os/Bundle;)Landroid/os/Bundle;" new="respond"/>
   <method old="setNotificationUri(Landroid/content/ContentResolver;Landroid/net/Uri;)V" new="setNotificationUri"/>
   <method old="unregisterContentObserver(Landroid/database/ContentObserver;)V" new="unregisterContentObserver"/>
   <method old="unregisterDataSetObserver(Landroid/database/DataSetObserver;)V" new="unregisterDataSetObserver"/>
  </class>
  <class old="com.xabber.android.data.extension.otr.OTRUnencryptedException" new="com.xabber.android.data.extension.otr.c_A">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getText()Ljava/lang/String;" new="m_ZA"/>
   <field old="serialVersionUID J" new="f_e"/>
   <field old="text Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.sasl.SASLExternalMechanism" new="wy.c_Ga">
   <method old="authenticate()V" new="m_ls"/>
   <method old="authenticate(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_Pd"/>
   <method old="authenticate(Ljava/lang/String;Ljava/lang/String;Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;)V" new="m_eC"/>
   <method old="challengeReceived(Ljava/lang/String;)V" new="m_vt"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getSASLAuthentication()Lorg/jivesoftware/smack/SASLAuthentication;" new="m_Gt"/>
   <method old="handle([Lorg/apache/harmony/javax/security/auth/callback/Callback;)V" new="m_Jb"/>
   <field old="authenticationId Ljava/lang/String;" new="f_e"/>
   <field old="hostname Ljava/lang/String;" new="f_B"/>
   <field old="password Ljava/lang/String;" new="f_m"/>
   <field old="sc Lorg/apache/harmony/javax/security/sasl/SaslClient;" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.notification.NotificationTable" new="wy.c_Nc">
   <method old="clear()V" new="m_EA"/>
   <method old="create(Landroid/database/sqlite/SQLiteDatabase;)V" new="m_AB"/>
   <method old="getAccount(Landroid/database/Cursor;)Ljava/lang/String;" new="m_Jea"/>
   <method old="getCount(Landroid/database/Cursor;)I" new="m_Rea"/>
   <method old="getInstance()Lcom/xabber/android/data/notification/NotificationTable;" new="m_Xr"/>
   <method old="getListOrder()Ljava/lang/String;" new="m_YDa"/>
   <method old="getProjection()[Ljava/lang/String;" new="m_AFa"/>
   <method old="getTableName()Ljava/lang/String;" new="m_dga"/>
   <method old="getText(Landroid/database/Cursor;)Ljava/lang/String;" new="m_cEa"/>
   <method old="getTimeStamp(Landroid/database/Cursor;)Ljava/util/Date;" new="m_Uea"/>
   <method old="getUser(Landroid/database/Cursor;)Ljava/lang/String;" new="m_oDa"/>
   <method old="list()Landroid/database/Cursor;" new="m_wEa"/>
   <method old="migrate(Landroid/database/sqlite/SQLiteDatabase;I)V" new="m_Cd"/>
   <method old="remove(Ljava/lang/String;Ljava/lang/String;)V" new="m_cFa"/>
   <method old="removeAccount(Ljava/lang/String;)V" new="m_YEa"/>
   <method old="write(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Date;I)V" new="m_wFa"/>
   <field old="NAME Ljava/lang/String;" new="f_d"/>
   <field old="PROJECTION [Ljava/lang/String;" new="f_B"/>
   <field old="databaseManager Lcom/xabber/android/data/DatabaseManager;" new="f_b"/>
   <field old="instance Lcom/xabber/android/data/notification/NotificationTable;" new="f_e"/>
   <field old="writeLock Ljava/lang/Object;" new="f_m"/>
   <field old="writeStatement Landroid/database/sqlite/SQLiteStatement;" new="f_j"/>
  </class>
  <class old="org.jivesoftware.smack.util.PacketParserUtils$1" new="org.jivesoftware.smack.util.c_B">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
  </class>
  <class old="org.jivesoftware.smack.packet.Presence$Mode" new="org.jivesoftware.smack.packet.Presence$Mode">
   <method old="valueOf(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/Presence$Mode;" new="valueOf"/>
   <method old="values()[Lorg/jivesoftware/smack/packet/Presence$Mode;" new="values"/>
   <field old="$VALUES [Lorg/jivesoftware/smack/packet/Presence$Mode;" new="f_m"/>
   <field old="available Lorg/jivesoftware/smack/packet/Presence$Mode;" new="f_b"/>
   <field old="away Lorg/jivesoftware/smack/packet/Presence$Mode;" new="f_B"/>
   <field old="chat Lorg/jivesoftware/smack/packet/Presence$Mode;" new="f_j"/>
   <field old="dnd Lorg/jivesoftware/smack/packet/Presence$Mode;" new="f_e"/>
   <field old="xa Lorg/jivesoftware/smack/packet/Presence$Mode;" new="f_d"/>
  </class>
  <class old="org.jivesoftware.smack.util.PacketParserUtils$2" new="org.jivesoftware.smack.util.c_A">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
  </class>
  <class old="org.xbill.DNS.NameTooLongException" new="org.xbill.DNS.c_Ja">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
  </class>
  <class old="com.xabber.android.data.extension.avatar.AvatarTable$Fields" new="wy.c_mb">
   <field old="HASH Ljava/lang/String;" new="f_e"/>
   <field old="USER Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IQIBBInputStream$1" new="org.jivesoftware.smackx.bytestreams.ibb.c_k">
   <method old="processPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_C"/>
   <field old="lastSequence J" new="f_m"/>
   <field old="this$1 Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamSession$IQIBBInputStream;" new="f_e"/>
  </class>
  <class old="com.xabber.android.ui.dialog.DialogBuilder" new="wy.c_Cd">
   <method old="create()Landroid/app/AlertDialog;" new="create"/>
   <method old="getDialogId()I" new="m_EAa"/>
   <method old="onDismiss(Landroid/content/DialogInterface;)V" new="onDismiss"/>
   <field old="activity Landroid/app/Activity;" new="f_m"/>
   <field old="dialogId I" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smack.PacketCollector" new="org.jivesoftware.smack.c_Aa">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="cancel()V" new="m_pk"/>
   <method old="getPacketFilter()Lorg/jivesoftware/smack/filter/PacketFilter;" new="m_rV"/>
   <method old="nextResult()Lorg/jivesoftware/smack/packet/Packet;" new="m_Em"/>
   <method old="nextResult(J)Lorg/jivesoftware/smack/packet/Packet;" new="m_Wn"/>
   <method old="pollResult()Lorg/jivesoftware/smack/packet/Packet;" new="m_Sm"/>
   <method old="processPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_C"/>
   <field old="MAX_PACKETS I" new="f_m"/>
   <field old="cancelled Z" new="f_B"/>
   <field old="conection Lorg/jivesoftware/smack/Connection;" new="f_b"/>
   <field old="packetFilter Lorg/jivesoftware/smack/filter/PacketFilter;" new="f_e"/>
   <field old="resultQueue Ljava/util/LinkedList;" new="f_d"/>
  </class>
  <class old="com.xabber.android.data.OnLowMemoryListener" new="com.xabber.android.data.c_f">
   <method old="onLowMemory()V" new="m_Wb"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.DiscoverItems" new="org.jivesoftware.smackx.packet.c_P">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="addItem(Lorg/jivesoftware/smackx/packet/DiscoverItems$Item;)V" new="m_Rj"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getItems()Ljava/util/Iterator;" new="m_Vj"/>
   <method old="getNode()Ljava/lang/String;" new="m_Ol"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setNode(Ljava/lang/String;)V" new="m_kJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="items Ljava/util/List;" new="f_m"/>
   <field old="node Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="com.xabber.android.ui.ContactViewer" new="com.xabber.android.ui.ContactViewer">
   <method old="addPreferenceScreen(Landroid/preference/PreferenceGroup;ILjava/lang/String;)Landroid/preference/PreferenceScreen;" new="m_hba"/>
   <method old="addString(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" new="m_xCa"/>
   <method old="createIntent(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;" new="m_CAa"/>
   <method old="createTypedCategory(ILjava/lang/String;Ljava/lang/String;)Landroid/preference/PreferenceScreen;" new="m_MAa"/>
   <method old="getAccount(Landroid/content/Intent;)Ljava/lang/String;" new="m_lCa"/>
   <method old="getUser(Landroid/content/Intent;)Ljava/lang/String;" new="m_NCa"/>
   <method old="onAccountsChanged(Ljava/util/Collection;)V" new="m_vB"/>
   <method old="onActivityResult(IILandroid/content/Intent;)V" new="onActivityResult"/>
   <method old="onContactsChanged(Ljava/util/Collection;)V" new="m_bd"/>
   <method old="onCreate(Landroid/os/Bundle;)V" new="onCreate"/>
   <method old="onDestroy()V" new="onDestroy"/>
   <method old="onNewIntent(Landroid/content/Intent;)V" new="onNewIntent"/>
   <method old="onPause()V" new="onPause"/>
   <method old="onResume()V" new="onResume"/>
   <method old="onSaveInstanceState(Landroid/os/Bundle;)V" new="onSaveInstanceState"/>
   <method old="onVCardFailed(Ljava/lang/String;Ljava/lang/String;)V" new="m_Rd"/>
   <method old="onVCardReceived(Ljava/lang/String;Ljava/lang/String;Lcom/xabber/xmpp/vcard/VCard;)V" new="m_BB"/>
   <method old="setValue(ILjava/lang/String;)V" new="m_Qba"/>
   <method old="startActivity(Landroid/content/Intent;)V" new="startActivity"/>
   <method old="startActivityForResult(Landroid/content/Intent;I)V" new="startActivityForResult"/>
   <method old="updateContact()V" new="m_Fda"/>
   <method old="updateVCard()V" new="m_bBa"/>
   <field old="ADDRESS_PROPERTY_MAP Ljava/util/Map;" new="f_J"/>
   <field old="ADDRESS_TYPE_MAP Ljava/util/Map;" new="f_I"/>
   <field old="EMAIL_TYPE_MAP Ljava/util/Map;" new="f_e"/>
   <field old="SAVED_VCARD Ljava/lang/String;" new="f_D"/>
   <field old="SAVED_VCARD_ERROR Ljava/lang/String;" new="f_d"/>
   <field old="TELEPHONE_TYPE_MAP Ljava/util/Map;" new="f_k"/>
   <field old="account Ljava/lang/String;" new="f_j"/>
   <field old="addresses Ljava/util/List;" new="f_f"/>
   <field old="bareAddress Ljava/lang/String;" new="f_b"/>
   <field old="emails Ljava/util/List;" new="f_B"/>
   <field old="telephones Ljava/util/List;" new="f_K"/>
   <field old="vCard Lcom/xabber/xmpp/vcard/VCard;" new="f_m"/>
   <field old="vCardError Z" new="f_l"/>
  </class>
  <class old="org.xbill.DNS.ZoneTransferIn$Delta" new="org.xbill.DNS.c_H">
   <field old="adds Ljava/util/List;" new="f_b"/>
   <field old="deletes Ljava/util/List;" new="f_e"/>
   <field old="end J" new="f_m"/>
   <field old="start J" new="f_d"/>
  </class>
  <class old="com.xabber.xmpp.archive.Default" new="com.xabber.xmpp.archive.c_v">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getExpire()Ljava/lang/Integer;" new="m_Fg"/>
   <method old="getOtr()Lcom/xabber/xmpp/archive/OtrMode;" new="m_DAa"/>
   <method old="getSave()Lcom/xabber/xmpp/archive/SaveMode;" new="m_Fca"/>
   <method old="isUnset()Z" new="m_Xaa"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="serializeAttributes(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_SAa"/>
   <method old="setExpire(Ljava/lang/Integer;)V" new="m_zAa"/>
   <method old="setOtr(Lcom/xabber/xmpp/archive/OtrMode;)V" new="m_Iba"/>
   <method old="setSave(Lcom/xabber/xmpp/archive/SaveMode;)V" new="m_hca"/>
   <method old="setUnset(Z)V" new="m_RCa"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_d"/>
   <field old="EXPIRE_ATTRIBUTE Ljava/lang/String;" new="f_e"/>
   <field old="OTR_ATTRIBUTE Ljava/lang/String;" new="f_m"/>
   <field old="SAVE_ATTRIBUTE Ljava/lang/String;" new="f_B"/>
   <field old="UNSET_ATTRIBUTE Ljava/lang/String;" new="f_b"/>
   <field old="unset Z" new="f_B"/>
  </class>
  <class old="org.xbill.DNS.LOCRecord" new="org.xbill.DNS.c_Wa">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getAltitude()D" new="m_zG"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getHPrecision()D" new="m_JH"/>
   <method old="getLatitude()D" new="m_VG"/>
   <method old="getLongitude()D" new="m_Yg"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getSize()D" new="m_DH"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="getVPrecision()D" new="m_tI"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="parseDouble(Lorg/xbill/DNS/Tokenizer;Ljava/lang/String;ZJJJ)J" new="m_jH"/>
   <method old="parseFixedPoint(Ljava/lang/String;)D" new="m_Ih"/>
   <method old="parseLOCformat(I)J" new="m_Wi"/>
   <method old="parsePosition(Lorg/xbill/DNS/Tokenizer;Ljava/lang/String;)J" new="m_xH"/>
   <method old="positionToString(JCC)Ljava/lang/String;" new="m_kh"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="renderFixedPoint(Ljava/lang/StringBuffer;Ljava/text/NumberFormat;JJ)V" new="m_bj"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toLOCformat(J)I" new="m_AI"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="altitude J" new="f_f"/>
   <field old="dclass I" new="f_m"/>
   <field old="hPrecision J" new="f_B"/>
   <field old="latitude J" new="f_k"/>
   <field old="longitude J" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="serialVersionUID J" new="f_b"/>
   <field old="size J" new="f_I"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
   <field old="vPrecision J" new="f_j"/>
   <field old="w2 Ljava/text/NumberFormat;" new="f_e"/>
   <field old="w3 Ljava/text/NumberFormat;" new="f_l"/>
  </class>
  <class old="net.java.otr4j.session.OfferStatus" new="net.java.otr4j.session.OfferStatus">
   <method old="valueOf(Ljava/lang/String;)Lnet/java/otr4j/session/OfferStatus;" new="valueOf"/>
   <method old="values()[Lnet/java/otr4j/session/OfferStatus;" new="values"/>
   <field old="$VALUES [Lnet/java/otr4j/session/OfferStatus;" new="f_B"/>
   <field old="accepted Lnet/java/otr4j/session/OfferStatus;" new="f_b"/>
   <field old="idle Lnet/java/otr4j/session/OfferStatus;" new="f_d"/>
   <field old="rejected Lnet/java/otr4j/session/OfferStatus;" new="f_e"/>
   <field old="sent Lnet/java/otr4j/session/OfferStatus;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.ContactAdd" new="com.xabber.android.ui.ContactAdd">
   <method old="createIntent(Landroid/content/Context;)Landroid/content/Intent;" new="m_yBa"/>
   <method old="createIntent(Landroid/content/Context;Ljava/lang/String;)Landroid/content/Intent;" new="m_bca"/>
   <method old="createIntent(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;" new="m_CAa"/>
   <method old="createSubscriptionIntent(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;" new="m_QFa"/>
   <method old="getAccount(Landroid/content/Intent;)Ljava/lang/String;" new="m_lCa"/>
   <method old="getInitialGroups()Ljava/util/Collection;" new="m_Uca"/>
   <method old="getInitialSelected()Ljava/util/Collection;" new="m_Uba"/>
   <method old="getSelected()Ljava/util/ArrayList;" new="m_nba"/>
   <method old="getUser(Landroid/content/Intent;)Ljava/lang/String;" new="m_NCa"/>
   <method old="onAccept(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_Lc"/>
   <method old="onActivityResult(IILandroid/content/Intent;)V" new="onActivityResult"/>
   <method old="onCancel(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_Vb"/>
   <method old="onClick(Landroid/view/View;)V" new="onClick"/>
   <method old="onCreate(Landroid/os/Bundle;)V" new="onCreate"/>
   <method old="onCreateDialog(I)Landroid/app/Dialog;" new="onCreateDialog"/>
   <method old="onCreateOptionsMenu(Landroid/view/Menu;)Z" new="onCreateOptionsMenu"/>
   <method old="onDecline(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_ad"/>
   <method old="onDestroy()V" new="onDestroy"/>
   <method old="onInflate(Landroid/os/Bundle;)V" new="m_TBa"/>
   <method old="onItemClick(Landroid/widget/AdapterView;Landroid/view/View;IJ)V" new="onItemClick"/>
   <method old="onItemSelected(Landroid/widget/AdapterView;Landroid/view/View;IJ)V" new="onItemSelected"/>
   <method old="onNewIntent(Landroid/content/Intent;)V" new="onNewIntent"/>
   <method old="onNothingSelected(Landroid/widget/AdapterView;)V" new="onNothingSelected"/>
   <method old="onOptionsItemSelected(Landroid/view/MenuItem;)Z" new="onOptionsItemSelected"/>
   <method old="onPause()V" new="onPause"/>
   <method old="onResume()V" new="onResume"/>
   <method old="onSaveInstanceState(Landroid/os/Bundle;)V" new="onSaveInstanceState"/>
   <method old="setGroups(Ljava/util/Collection;Ljava/util/Collection;)V" new="m_ZBa"/>
   <method old="startActivity(Landroid/content/Intent;)V" new="startActivity"/>
   <method old="startActivityForResult(Landroid/content/Intent;I)V" new="startActivityForResult"/>
   <field old="ACTION_SUBSCRIPTION_REQUEST Ljava/lang/String;" new="f_K"/>
   <field old="DIALOG_ADD_GROUP_ID I" new="f_j"/>
   <field old="DIALOG_SUBSCRIPTION_REQUEST_ID I" new="f_b"/>
   <field old="OPTION_MENU_ADD_GROUP_ID I" new="f_m"/>
   <field old="SAVED_ACCOUNT Ljava/lang/String;" new="f_j"/>
   <field old="SAVED_NAME Ljava/lang/String;" new="f_e"/>
   <field old="SAVED_USER Ljava/lang/String;" new="f_I"/>
   <field old="account Ljava/lang/String;" new="f_f"/>
   <field old="accountView Landroid/widget/Spinner;" new="f_m"/>
   <field old="nameView Landroid/widget/EditText;" new="f_k"/>
   <field old="subscriptionRequest Lcom/xabber/android/data/roster/SubscriptionRequest;" new="f_B"/>
   <field old="user Ljava/lang/String;" new="f_d"/>
   <field old="userView Landroid/widget/EditText;" new="f_l"/>
  </class>
  <class old="com.xabber.xmpp.vcard.ExternalLogo" new="com.xabber.xmpp.vcard.c_o">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getValue()Ljava/lang/String;" new="m_Ra"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="setValue(Ljava/lang/String;)V" new="m_TT"/>
   <method old="writeBody(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_zy"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_m"/>
   <field old="EXTVAL_NAME Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="org.xbill.DNS.Update" new="org.xbill.DNS.c_c">
   <method old="absent(Lorg/xbill/DNS/Name;)V" new="m_ef"/>
   <method old="absent(Lorg/xbill/DNS/Name;I)V" new="m_nf"/>
   <method old="add(Lorg/xbill/DNS/Name;IJLjava/lang/String;)V" new="m_ae"/>
   <method old="add(Lorg/xbill/DNS/Name;IJLorg/xbill/DNS/Tokenizer;)V" new="m_pE"/>
   <method old="add(Lorg/xbill/DNS/RRset;)V" new="m_rf"/>
   <method old="add(Lorg/xbill/DNS/Record;)V" new="m_zF"/>
   <method old="add([Lorg/xbill/DNS/Record;)V" new="m_Hf"/>
   <method old="addRecord(Lorg/xbill/DNS/Record;I)V" new="m_df"/>
   <method old="clone()Ljava/lang/Object;" new="clone"/>
   <method old="delete(Lorg/xbill/DNS/Name;)V" new="m_jE"/>
   <method old="delete(Lorg/xbill/DNS/Name;I)V" new="m_UF"/>
   <method old="delete(Lorg/xbill/DNS/Name;ILjava/lang/String;)V" new="m_Cf"/>
   <method old="delete(Lorg/xbill/DNS/Name;ILorg/xbill/DNS/Tokenizer;)V" new="m_wF"/>
   <method old="delete(Lorg/xbill/DNS/RRset;)V" new="m_iF"/>
   <method old="delete(Lorg/xbill/DNS/Record;)V" new="m_GD"/>
   <method old="delete([Lorg/xbill/DNS/Record;)V" new="m_rF"/>
   <method old="findRRset(Lorg/xbill/DNS/Name;I)Z" new="m_bE"/>
   <method old="findRRset(Lorg/xbill/DNS/Name;II)Z" new="m_Lg"/>
   <method old="findRecord(Lorg/xbill/DNS/Record;)Z" new="m_mE"/>
   <method old="findRecord(Lorg/xbill/DNS/Record;I)Z" new="m_TD"/>
   <method old="getHeader()Lorg/xbill/DNS/Header;" new="m_Fe"/>
   <method old="getOPT()Lorg/xbill/DNS/OPTRecord;" new="m_We"/>
   <method old="getQuestion()Lorg/xbill/DNS/Record;" new="m_Le"/>
   <method old="getRcode()I" new="m_xD"/>
   <method old="getSectionArray(I)[Lorg/xbill/DNS/Record;" new="m_tE"/>
   <method old="getSectionRRsets(I)[Lorg/xbill/DNS/RRset;" new="m_Ge"/>
   <method old="getTSIG()Lorg/xbill/DNS/TSIGRecord;" new="m_ge"/>
   <method old="isSigned()Z" new="m_FF"/>
   <method old="isVerified()Z" new="m_Pe"/>
   <method old="newPrereq(Lorg/xbill/DNS/Record;)V" new="m_Re"/>
   <method old="newQuery(Lorg/xbill/DNS/Record;)Lorg/xbill/DNS/Message;" new="m_BD"/>
   <method old="newUpdate(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Message;" new="m_JF"/>
   <method old="newUpdate(Lorg/xbill/DNS/Record;)V" new="m_Yf"/>
   <method old="numBytes()I" new="m_Ef"/>
   <method old="present(Lorg/xbill/DNS/Name;)V" new="m_PD"/>
   <method old="present(Lorg/xbill/DNS/Name;I)V" new="m_qe"/>
   <method old="present(Lorg/xbill/DNS/Name;ILjava/lang/String;)V" new="m_se"/>
   <method old="present(Lorg/xbill/DNS/Name;ILorg/xbill/DNS/Tokenizer;)V" new="m_Ag"/>
   <method old="present(Lorg/xbill/DNS/Record;)V" new="m_Xf"/>
   <method old="removeAllRecords(I)V" new="m_ke"/>
   <method old="removeRecord(Lorg/xbill/DNS/Record;I)Z" new="m_vf"/>
   <method old="replace(Lorg/xbill/DNS/Name;IJLjava/lang/String;)V" new="m_wd"/>
   <method old="replace(Lorg/xbill/DNS/Name;IJLorg/xbill/DNS/Tokenizer;)V" new="m_SE"/>
   <method old="replace(Lorg/xbill/DNS/RRset;)V" new="m_dF"/>
   <method old="replace(Lorg/xbill/DNS/Record;)V" new="m_RF"/>
   <method old="replace([Lorg/xbill/DNS/Record;)V" new="m_OF"/>
   <method old="sectionToString(I)Ljava/lang/String;" new="m_lF"/>
   <method old="setHeader(Lorg/xbill/DNS/Header;)V" new="m_LD"/>
   <method old="setTSIG(Lorg/xbill/DNS/TSIG;ILorg/xbill/DNS/TSIGRecord;)V" new="m_wf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire()[B" new="m_tF"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;)V" new="m_ne"/>
   <field old="MAXLENGTH I" new="f_f"/>
   <field old="TSIG_FAILED I" new="f_M"/>
   <field old="TSIG_INTERMEDIATE I" new="f_d"/>
   <field old="TSIG_SIGNED I" new="f_k"/>
   <field old="TSIG_UNSIGNED I" new="f_H"/>
   <field old="TSIG_VERIFIED I" new="f_b"/>
   <field old="dclass I" new="f_B"/>
   <field old="origin Lorg/xbill/DNS/Name;" new="f_m"/>
   <field old="sig0start I" new="f_g"/>
   <field old="tsigState I" new="f_I"/>
   <field old="tsigstart I" new="f_e"/>
  </class>
  <class old="org.xbill.DNS.Opcode" new="org.xbill.DNS.c_ma">
   <method old="string(I)Ljava/lang/String;" new="m_Wd"/>
   <method old="value(Ljava/lang/String;)I" new="m_le"/>
   <field old="IQUERY I" new="f_j"/>
   <field old="NOTIFY I" new="f_d"/>
   <field old="QUERY I" new="f_B"/>
   <field old="STATUS I" new="f_m"/>
   <field old="UPDATE I" new="f_b"/>
   <field old="opcodes Lorg/xbill/DNS/Mnemonic;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.muc.Occupant" new="org.jivesoftware.smackx.muc.c_j">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getAffiliation()Ljava/lang/String;" new="m_Ck"/>
   <method old="getJid()Ljava/lang/String;" new="m_tL"/>
   <method old="getNick()Ljava/lang/String;" new="m_Ql"/>
   <method old="getRole()Ljava/lang/String;" new="m_ul"/>
   <method old="hashCode()I" new="hashCode"/>
   <field old="affiliation Ljava/lang/String;" new="f_d"/>
   <field old="jid Ljava/lang/String;" new="f_b"/>
   <field old="nick Ljava/lang/String;" new="f_m"/>
   <field old="role Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="com.xabber.android.classic.R$string" new="com.xabber.android.classic.R$string">
   <field old="ALREADY_IN_PROGRESS I" new="ALREADY_IN_PROGRESS"/>
   <field old="ALREADY_JOINED I" new="ALREADY_JOINED"/>
   <field old="ATTENTION_IS_NOT_SUPPORTED I" new="ATTENTION_IS_NOT_SUPPORTED"/>
   <field old="AUTHENTICATION_FAILED I" new="AUTHENTICATION_FAILED"/>
   <field old="CANNOT_ADD_TO_GROUP I" new="CANNOT_ADD_TO_GROUP"/>
   <field old="CANNOT_CREATE_CONTACT I" new="CANNOT_CREATE_CONTACT"/>
   <field old="CANNOT_REMOVE_CONTACT I" new="CANNOT_REMOVE_CONTACT"/>
   <field old="CANNOT_REMOVE_FROM_GROUP I" new="CANNOT_REMOVE_FROM_GROUP"/>
   <field old="CANNOT_REMOVE_GROUP I" new="CANNOT_REMOVE_GROUP"/>
   <field old="CANNOT_RENAME_GROUP I" new="CANNOT_RENAME_GROUP"/>
   <field old="CONNECTION_FAILED I" new="CONNECTION_FAILED"/>
   <field old="EMPTY_ACCOUNT I" new="EMPTY_ACCOUNT"/>
   <field old="EMPTY_NICK_NAME I" new="EMPTY_NICK_NAME"/>
   <field old="EMPTY_ROOM_NAME I" new="EMPTY_ROOM_NAME"/>
   <field old="EMPTY_SERVER_NAME I" new="EMPTY_SERVER_NAME"/>
   <field old="EMPTY_USER_NAME I" new="EMPTY_USER_NAME"/>
   <field old="ENTRY_IS_NOT_AVAILABLE I" new="ENTRY_IS_NOT_AVAILABLE"/>
   <field old="ENTRY_IS_NOT_FOUND I" new="ENTRY_IS_NOT_FOUND"/>
   <field old="FILE_NOT_FOUND I" new="FILE_NOT_FOUND"/>
   <field old="INCORRECT_USER_NAME I" new="INCORRECT_USER_NAME"/>
   <field old="INVALID_CERTIFICATE I" new="INVALID_CERTIFICATE"/>
   <field old="NICK_ALREADY_USED I" new="NICK_ALREADY_USED"/>
   <field old="NOT_CONNECTED I" new="NOT_CONNECTED"/>
   <field old="NO_SUCH_ACCOUNT I" new="NO_SUCH_ACCOUNT"/>
   <field old="OTR_ERROR I" new="OTR_ERROR"/>
   <field old="PASSWORD_REQUIRED I" new="PASSWORD_REQUIRED"/>
   <field old="XMPP_EXCEPTION I" new="XMPP_EXCEPTION"/>
   <field old="about_copyright I" new="about_copyright"/>
   <field old="about_feedback I" new="about_feedback"/>
   <field old="about_license I" new="about_license"/>
   <field old="about_site I" new="about_site"/>
   <field old="about_version I" new="about_version"/>
   <field old="about_viewer I" new="about_viewer"/>
   <field old="accept_subscription I" new="accept_subscription"/>
   <field old="account_add I" new="account_add"/>
   <field old="account_archive_mode I" new="account_archive_mode"/>
   <field old="account_archive_mode_available I" new="account_archive_mode_available"/>
   <field old="account_archive_mode_dont_store I" new="account_archive_mode_dont_store"/>
   <field old="account_archive_mode_key I" new="account_archive_mode_key"/>
   <field old="account_archive_mode_local I" new="account_archive_mode_local"/>
   <field old="account_archive_mode_server I" new="account_archive_mode_server"/>
   <field old="account_archive_mode_unread I" new="account_archive_mode_unread"/>
   <field old="account_compression I" new="account_compression"/>
   <field old="account_compression_key I" new="account_compression_key"/>
   <field old="account_compression_summary I" new="account_compression_summary"/>
   <field old="account_custom I" new="account_custom"/>
   <field old="account_custom_key I" new="account_custom_key"/>
   <field old="account_custom_summary I" new="account_custom_summary"/>
   <field old="account_delete I" new="account_delete"/>
   <field old="account_delete_confirm I" new="account_delete_confirm"/>
   <field old="account_editor I" new="account_editor"/>
   <field old="account_editor_title I" new="account_editor_title"/>
   <field old="account_enabled I" new="account_enabled"/>
   <field old="account_enabled_key I" new="account_enabled_key"/>
   <field old="account_enabled_summary I" new="account_enabled_summary"/>
   <field old="account_host I" new="account_host"/>
   <field old="account_host_key I" new="account_host_key"/>
   <field old="account_invalid_port I" new="account_invalid_port"/>
   <field old="account_invalid_priority I" new="account_invalid_priority"/>
   <field old="account_is_offline I" new="account_is_offline"/>
   <field old="account_oauth I" new="account_oauth"/>
   <field old="account_oauth_invalidated I" new="account_oauth_invalidated"/>
   <field old="account_oauth_key I" new="account_oauth_key"/>
   <field old="account_oauth_summary I" new="account_oauth_summary"/>
   <field old="account_password I" new="account_password"/>
   <field old="account_password_key I" new="account_password_key"/>
   <field old="account_port I" new="account_port"/>
   <field old="account_port_key I" new="account_port_key"/>
   <field old="account_priority I" new="account_priority"/>
   <field old="account_priority_key I" new="account_priority_key"/>
   <field old="account_protocol_gtalk I" new="account_protocol_gtalk"/>
   <field old="account_protocol_gtalk_title I" new="account_protocol_gtalk_title"/>
   <field old="account_protocol_wlm I" new="account_protocol_wlm"/>
   <field old="account_protocol_wlm_title I" new="account_protocol_wlm_title"/>
   <field old="account_protocol_xmpp I" new="account_protocol_xmpp"/>
   <field old="account_protocol_xmpp_title I" new="account_protocol_xmpp_title"/>
   <field old="account_proxy_host I" new="account_proxy_host"/>
   <field old="account_proxy_host_key I" new="account_proxy_host_key"/>
   <field old="account_proxy_password I" new="account_proxy_password"/>
   <field old="account_proxy_password_key I" new="account_proxy_password_key"/>
   <field old="account_proxy_port I" new="account_proxy_port"/>
   <field old="account_proxy_port_key I" new="account_proxy_port_key"/>
   <field old="account_proxy_type I" new="account_proxy_type"/>
   <field old="account_proxy_type_http I" new="account_proxy_type_http"/>
   <field old="account_proxy_type_key I" new="account_proxy_type_key"/>
   <field old="account_proxy_type_none I" new="account_proxy_type_none"/>
   <field old="account_proxy_type_orbot I" new="account_proxy_type_orbot"/>
   <field old="account_proxy_type_socks4 I" new="account_proxy_type_socks4"/>
   <field old="account_proxy_type_socks5 I" new="account_proxy_type_socks5"/>
   <field old="account_proxy_user I" new="account_proxy_user"/>
   <field old="account_proxy_user_key I" new="account_proxy_user_key"/>
   <field old="account_quantity_1 I" new="account_quantity_1"/>
   <field old="account_quantity_2 I" new="account_quantity_2"/>
   <field old="account_quantity_5 I" new="account_quantity_5"/>
   <field old="account_quantity_offline_1 I" new="account_quantity_offline_1"/>
   <field old="account_quantity_offline_2 I" new="account_quantity_offline_2"/>
   <field old="account_quantity_offline_5 I" new="account_quantity_offline_5"/>
   <field old="account_reconnect I" new="account_reconnect"/>
   <field old="account_resource I" new="account_resource"/>
   <field old="account_resource_key I" new="account_resource_key"/>
   <field old="account_sasl I" new="account_sasl"/>
   <field old="account_sasl_key I" new="account_sasl_key"/>
   <field old="account_sasl_summary I" new="account_sasl_summary"/>
   <field old="account_server_key I" new="account_server_key"/>
   <field old="account_server_name I" new="account_server_name"/>
   <field old="account_state_authentication I" new="account_state_authentication"/>
   <field old="account_state_connected I" new="account_state_connected"/>
   <field old="account_state_connecting I" new="account_state_connecting"/>
   <field old="account_state_disconnecting I" new="account_state_disconnecting"/>
   <field old="account_state_offline I" new="account_state_offline"/>
   <field old="account_state_waiting I" new="account_state_waiting"/>
   <field old="account_store_password I" new="account_store_password"/>
   <field old="account_store_password_key I" new="account_store_password_key"/>
   <field old="account_store_password_summary I" new="account_store_password_summary"/>
   <field old="account_syncable I" new="account_syncable"/>
   <field old="account_syncable_key I" new="account_syncable_key"/>
   <field old="account_syncable_summary I" new="account_syncable_summary"/>
   <field old="account_tls_enable I" new="account_tls_enable"/>
   <field old="account_tls_enable_summary I" new="account_tls_enable_summary"/>
   <field old="account_tls_legacy I" new="account_tls_legacy"/>
   <field old="account_tls_legacy_summary I" new="account_tls_legacy_summary"/>
   <field old="account_tls_mode I" new="account_tls_mode"/>
   <field old="account_tls_mode_key I" new="account_tls_mode_key"/>
   <field old="account_tls_require I" new="account_tls_require"/>
   <field old="account_tls_require_summary I" new="account_tls_require_summary"/>
   <field old="account_type I" new="account_type"/>
   <field old="account_type_helps_facebook I" new="account_type_helps_facebook"/>
   <field old="account_type_helps_gtalk I" new="account_type_helps_gtalk"/>
   <field old="account_type_helps_livejournal I" new="account_type_helps_livejournal"/>
   <field old="account_type_helps_odnoklassniki I" new="account_type_helps_odnoklassniki"/>
   <field old="account_type_helps_qip I" new="account_type_helps_qip"/>
   <field old="account_type_helps_vkontakte I" new="account_type_helps_vkontakte"/>
   <field old="account_type_helps_wlm I" new="account_type_helps_wlm"/>
   <field old="account_type_helps_xmpp I" new="account_type_helps_xmpp"/>
   <field old="account_type_helps_ya I" new="account_type_helps_ya"/>
   <field old="account_type_hints_facebook I" new="account_type_hints_facebook"/>
   <field old="account_type_hints_gtalk I" new="account_type_hints_gtalk"/>
   <field old="account_type_hints_livejournal I" new="account_type_hints_livejournal"/>
   <field old="account_type_hints_odnoklassniki I" new="account_type_hints_odnoklassniki"/>
   <field old="account_type_hints_qip I" new="account_type_hints_qip"/>
   <field old="account_type_hints_vkontakte I" new="account_type_hints_vkontakte"/>
   <field old="account_type_hints_wlm I" new="account_type_hints_wlm"/>
   <field old="account_type_hints_xmpp I" new="account_type_hints_xmpp"/>
   <field old="account_type_hints_ya I" new="account_type_hints_ya"/>
   <field old="account_type_names_facebook I" new="account_type_names_facebook"/>
   <field old="account_type_names_gtalk I" new="account_type_names_gtalk"/>
   <field old="account_type_names_livejournal I" new="account_type_names_livejournal"/>
   <field old="account_type_names_odnoklassniki I" new="account_type_names_odnoklassniki"/>
   <field old="account_type_names_qip I" new="account_type_names_qip"/>
   <field old="account_type_names_vkontakte I" new="account_type_names_vkontakte"/>
   <field old="account_type_names_wlm I" new="account_type_names_wlm"/>
   <field old="account_type_names_xmpp I" new="account_type_names_xmpp"/>
   <field old="account_type_names_ya I" new="account_type_names_ya"/>
   <field old="account_use_orbot I" new="account_use_orbot"/>
   <field old="account_user_name I" new="account_user_name"/>
   <field old="account_username_key I" new="account_username_key"/>
   <field old="action_attention_called I" new="action_attention_called"/>
   <field old="action_attention_requested I" new="action_attention_requested"/>
   <field old="action_ban I" new="action_ban"/>
   <field old="action_ban_by I" new="action_ban_by"/>
   <field old="action_invite_error I" new="action_invite_error"/>
   <field old="action_invite_sent I" new="action_invite_sent"/>
   <field old="action_join I" new="action_join"/>
   <field old="action_join_complete I" new="action_join_complete"/>
   <field old="action_join_complete_to I" new="action_join_complete_to"/>
   <field old="action_kick I" new="action_kick"/>
   <field old="action_kick_by I" new="action_kick_by"/>
   <field old="action_leave I" new="action_leave"/>
   <field old="action_nickname I" new="action_nickname"/>
   <field old="action_otr_encryption I" new="action_otr_encryption"/>
   <field old="action_otr_error I" new="action_otr_error"/>
   <field old="action_otr_finish I" new="action_otr_finish"/>
   <field old="action_otr_finished_session I" new="action_otr_finished_session"/>
   <field old="action_otr_plain I" new="action_otr_plain"/>
   <field old="action_otr_smp_cheated I" new="action_otr_smp_cheated"/>
   <field old="action_otr_smp_failed I" new="action_otr_smp_failed"/>
   <field old="action_otr_smp_not_approved I" new="action_otr_smp_not_approved"/>
   <field old="action_otr_smp_unverified I" new="action_otr_smp_unverified"/>
   <field old="action_otr_smp_verified I" new="action_otr_smp_verified"/>
   <field old="action_otr_unreadable I" new="action_otr_unreadable"/>
   <field old="action_otr_verified I" new="action_otr_verified"/>
   <field old="action_status_available I" new="action_status_available"/>
   <field old="action_status_away I" new="action_status_away"/>
   <field old="action_status_chat I" new="action_status_chat"/>
   <field old="action_status_dnd I" new="action_status_dnd"/>
   <field old="action_status_text I" new="action_status_text"/>
   <field old="action_status_text_none I" new="action_status_text_none"/>
   <field old="action_status_unavailable I" new="action_status_unavailable"/>
   <field old="action_status_xa I" new="action_status_xa"/>
   <field old="action_subject I" new="action_subject"/>
   <field old="always I" new="always"/>
   <field old="application_action_disabled I" new="application_action_disabled"/>
   <field old="application_action_empty I" new="application_action_empty"/>
   <field old="application_action_no_contacts I" new="application_action_no_contacts"/>
   <field old="application_action_no_online I" new="application_action_no_online"/>
   <field old="application_action_offline I" new="application_action_offline"/>
   <field old="application_action_waiting I" new="application_action_waiting"/>
   <field old="application_name I" new="application_name"/>
   <field old="application_package I" new="application_package"/>
   <field old="application_state_closing I" new="application_state_closing"/>
   <field old="application_state_connecting I" new="application_state_connecting"/>
   <field old="application_state_disabled I" new="application_state_disabled"/>
   <field old="application_state_empty I" new="application_state_empty"/>
   <field old="application_state_no_contacts I" new="application_state_no_contacts"/>
   <field old="application_state_no_online I" new="application_state_no_online"/>
   <field old="application_state_offline I" new="application_state_offline"/>
   <field old="application_state_roster I" new="application_state_roster"/>
   <field old="application_state_starting I" new="application_state_starting"/>
   <field old="application_state_waiting I" new="application_state_waiting"/>
   <field old="application_version I" new="application_version"/>
   <field old="archive_available_request_message I" new="archive_available_request_message"/>
   <field old="archive_available_request_title I" new="archive_available_request_title"/>
   <field old="auto I" new="auto"/>
   <field old="available I" new="available"/>
   <field old="away I" new="away"/>
   <field old="boot_count_key I" new="boot_count_key"/>
   <field old="cache_clear I" new="cache_clear"/>
   <field old="cache_clear_key I" new="cache_clear_key"/>
   <field old="cache_clear_warning I" new="cache_clear_warning"/>
   <field old="call_attention I" new="call_attention"/>
   <field old="certificate_confirmation I" new="certificate_confirmation"/>
   <field old="certificate_details I" new="certificate_details"/>
   <field old="certificate_invalid_chane I" new="certificate_invalid_chane"/>
   <field old="certificate_invalid_target I" new="certificate_invalid_target"/>
   <field old="certificate_self_signed I" new="certificate_self_signed"/>
   <field old="certificate_show_details I" new="certificate_show_details"/>
   <field old="chat I" new="chat"/>
   <field old="chat_contact_quantity_1 I" new="chat_contact_quantity_1"/>
   <field old="chat_contact_quantity_2 I" new="chat_contact_quantity_2"/>
   <field old="chat_contact_quantity_5 I" new="chat_contact_quantity_5"/>
   <field old="chat_delay I" new="chat_delay"/>
   <field old="chat_events_show_text_key I" new="chat_events_show_text_key"/>
   <field old="chat_events_sound_key I" new="chat_events_sound_key"/>
   <field old="chat_events_vibro_key I" new="chat_events_vibro_key"/>
   <field old="chat_events_visible_chat_key I" new="chat_events_visible_chat_key"/>
   <field old="chat_input_hint I" new="chat_input_hint"/>
   <field old="chat_list I" new="chat_list"/>
   <field old="chat_list_is_empty I" new="chat_list_is_empty"/>
   <field old="chat_message_quantity_1 I" new="chat_message_quantity_1"/>
   <field old="chat_message_quantity_2 I" new="chat_message_quantity_2"/>
   <field old="chat_message_quantity_5 I" new="chat_message_quantity_5"/>
   <field old="chat_page I" new="chat_page"/>
   <field old="chat_save_history_key I" new="chat_save_history_key"/>
   <field old="chat_send I" new="chat_send"/>
   <field old="chat_settings I" new="chat_settings"/>
   <field old="chat_state_composing I" new="chat_state_composing"/>
   <field old="chat_state_paused I" new="chat_state_paused"/>
   <field old="chat_status I" new="chat_status"/>
   <field old="chat_typed I" new="chat_typed"/>
   <field old="chat_viewer I" new="chat_viewer"/>
   <field old="chats_attention I" new="chats_attention"/>
   <field old="chats_attention_key I" new="chats_attention_key"/>
   <field old="chats_attention_sound I" new="chats_attention_sound"/>
   <field old="chats_attention_sound_default I" new="chats_attention_sound_default"/>
   <field old="chats_attention_sound_key I" new="chats_attention_sound_key"/>
   <field old="chats_divide I" new="chats_divide"/>
   <field old="chats_divide_always_value I" new="chats_divide_always_value"/>
   <field old="chats_divide_default I" new="chats_divide_default"/>
   <field old="chats_divide_key I" new="chats_divide_key"/>
   <field old="chats_divide_never_value I" new="chats_divide_never_value"/>
   <field old="chats_divide_portrait I" new="chats_divide_portrait"/>
   <field old="chats_divide_portrait_value I" new="chats_divide_portrait_value"/>
   <field old="chats_font_size I" new="chats_font_size"/>
   <field old="chats_font_size_default I" new="chats_font_size_default"/>
   <field old="chats_font_size_key I" new="chats_font_size_key"/>
   <field old="chats_font_size_large I" new="chats_font_size_large"/>
   <field old="chats_font_size_large_value I" new="chats_font_size_large_value"/>
   <field old="chats_font_size_normal I" new="chats_font_size_normal"/>
   <field old="chats_font_size_normal_value I" new="chats_font_size_normal_value"/>
   <field old="chats_font_size_small I" new="chats_font_size_small"/>
   <field old="chats_font_size_small_value I" new="chats_font_size_small_value"/>
   <field old="chats_font_size_xlarge I" new="chats_font_size_xlarge"/>
   <field old="chats_font_size_xlarge_value I" new="chats_font_size_xlarge_value"/>
   <field old="chats_hide_keyboard I" new="chats_hide_keyboard"/>
   <field old="chats_hide_keyboard_always_value I" new="chats_hide_keyboard_always_value"/>
   <field old="chats_hide_keyboard_default I" new="chats_hide_keyboard_default"/>
   <field old="chats_hide_keyboard_key I" new="chats_hide_keyboard_key"/>
   <field old="chats_hide_keyboard_landscape I" new="chats_hide_keyboard_landscape"/>
   <field old="chats_hide_keyboard_landscape_value I" new="chats_hide_keyboard_landscape_value"/>
   <field old="chats_hide_keyboard_never_value I" new="chats_hide_keyboard_never_value"/>
   <field old="chats_receipt I" new="chats_receipt"/>
   <field old="chats_send_by_enter I" new="chats_send_by_enter"/>
   <field old="chats_send_by_enter_key I" new="chats_send_by_enter_key"/>
   <field old="chats_show_avatars I" new="chats_show_avatars"/>
   <field old="chats_show_avatars_key I" new="chats_show_avatars_key"/>
   <field old="chats_show_status_change I" new="chats_show_status_change"/>
   <field old="chats_show_status_change_always_value I" new="chats_show_status_change_always_value"/>
   <field old="chats_show_status_change_default I" new="chats_show_status_change_default"/>
   <field old="chats_show_status_change_key I" new="chats_show_status_change_key"/>
   <field old="chats_show_status_change_muc I" new="chats_show_status_change_muc"/>
   <field old="chats_show_status_change_muc_value I" new="chats_show_status_change_muc_value"/>
   <field old="chats_show_status_change_never_value I" new="chats_show_status_change_never_value"/>
   <field old="chats_state_notification I" new="chats_state_notification"/>
   <field old="chats_state_notification_key I" new="chats_state_notification_key"/>
   <field old="choose_account I" new="choose_account"/>
   <field old="classic_versions_103 I" new="classic_versions_103"/>
   <field old="classic_versions_105 I" new="classic_versions_105"/>
   <field old="classic_versions_106 I" new="classic_versions_106"/>
   <field old="clear_history I" new="clear_history"/>
   <field old="clear_message I" new="clear_message"/>
   <field old="clear_statuses I" new="clear_statuses"/>
   <field old="client_name I" new="client_name"/>
   <field old="close_chat I" new="close_chat"/>
   <field old="close_chats I" new="close_chats"/>
   <field old="confirm_cancellation I" new="confirm_cancellation"/>
   <field old="connection_adjust_priority I" new="connection_adjust_priority"/>
   <field old="connection_adjust_priority_key I" new="connection_adjust_priority_key"/>
   <field old="connection_go_away I" new="connection_go_away"/>
   <field old="connection_go_away_default I" new="connection_go_away_default"/>
   <field old="connection_go_away_immediately I" new="connection_go_away_immediately"/>
   <field old="connection_go_away_key I" new="connection_go_away_key"/>
   <field old="connection_go_xa I" new="connection_go_xa"/>
   <field old="connection_go_xa_default I" new="connection_go_xa_default"/>
   <field old="connection_go_xa_key I" new="connection_go_xa_key"/>
   <field old="connection_load_vcard I" new="connection_load_vcard"/>
   <field old="connection_load_vcard_key I" new="connection_load_vcard_key"/>
   <field old="connection_priority I" new="connection_priority"/>
   <field old="connection_priority_available_default I" new="connection_priority_available_default"/>
   <field old="connection_priority_available_key I" new="connection_priority_available_key"/>
   <field old="connection_priority_away_default I" new="connection_priority_away_default"/>
   <field old="connection_priority_away_key I" new="connection_priority_away_key"/>
   <field old="connection_priority_chat_default I" new="connection_priority_chat_default"/>
   <field old="connection_priority_chat_key I" new="connection_priority_chat_key"/>
   <field old="connection_priority_dnd_default I" new="connection_priority_dnd_default"/>
   <field old="connection_priority_dnd_key I" new="connection_priority_dnd_key"/>
   <field old="connection_priority_xa_default I" new="connection_priority_xa_default"/>
   <field old="connection_priority_xa_key I" new="connection_priority_xa_key"/>
   <field old="connection_start_at_boot I" new="connection_start_at_boot"/>
   <field old="connection_start_at_boot_key I" new="connection_start_at_boot_key"/>
   <field old="connection_state_connected_1 I" new="connection_state_connected_1"/>
   <field old="connection_state_connected_2 I" new="connection_state_connected_2"/>
   <field old="connection_state_connected_5 I" new="connection_state_connected_5"/>
   <field old="connection_state_connecting_1 I" new="connection_state_connecting_1"/>
   <field old="connection_state_connecting_2 I" new="connection_state_connecting_2"/>
   <field old="connection_state_connecting_5 I" new="connection_state_connecting_5"/>
   <field old="connection_state_offline I" new="connection_state_offline"/>
   <field old="connection_state_waiting_1 I" new="connection_state_waiting_1"/>
   <field old="connection_state_waiting_2 I" new="connection_state_waiting_2"/>
   <field old="connection_state_waiting_5 I" new="connection_state_waiting_5"/>
   <field old="connection_wake_lock I" new="connection_wake_lock"/>
   <field old="connection_wake_lock_key I" new="connection_wake_lock_key"/>
   <field old="connection_wifi_lock I" new="connection_wifi_lock"/>
   <field old="connection_wifi_lock_key I" new="connection_wifi_lock_key"/>
   <field old="contact_account I" new="contact_account"/>
   <field old="contact_add I" new="contact_add"/>
   <field old="contact_delete I" new="contact_delete"/>
   <field old="contact_delete_confirm I" new="contact_delete_confirm"/>
   <field old="contact_editor I" new="contact_editor"/>
   <field old="contact_editor_title I" new="contact_editor_title"/>
   <field old="contact_group I" new="contact_group"/>
   <field old="contact_integration_suggest I" new="contact_integration_suggest"/>
   <field old="contact_integration_suggested_key I" new="contact_integration_suggested_key"/>
   <field old="contact_is_offline I" new="contact_is_offline"/>
   <field old="contact_list I" new="contact_list"/>
   <field old="contact_name I" new="contact_name"/>
   <field old="contact_subscribe_confirm I" new="contact_subscribe_confirm"/>
   <field old="contact_user I" new="contact_user"/>
   <field old="contact_viewer I" new="contact_viewer"/>
   <field old="contact_viewer_client_info I" new="contact_viewer_client_info"/>
   <field old="contact_viewer_for I" new="contact_viewer_for"/>
   <field old="contact_viewer_jid I" new="contact_viewer_jid"/>
   <field old="contact_viewer_mime_type I" new="contact_viewer_mime_type"/>
   <field old="contact_viewer_name I" new="contact_viewer_name"/>
   <field old="contact_viewer_resource_summary I" new="contact_viewer_resource_summary"/>
   <field old="contact_viewer_resources I" new="contact_viewer_resources"/>
   <field old="contact_viewer_xmpp I" new="contact_viewer_xmpp"/>
   <field old="contacts_enable_show_accounts_key I" new="contacts_enable_show_accounts_key"/>
   <field old="contacts_order I" new="contacts_order"/>
   <field old="contacts_order_alphabet I" new="contacts_order_alphabet"/>
   <field old="contacts_order_alphabet_value I" new="contacts_order_alphabet_value"/>
   <field old="contacts_order_default I" new="contacts_order_default"/>
   <field old="contacts_order_key I" new="contacts_order_key"/>
   <field old="contacts_order_status I" new="contacts_order_status"/>
   <field old="contacts_order_status_value I" new="contacts_order_status_value"/>
   <field old="contacts_reset_offline I" new="contacts_reset_offline"/>
   <field old="contacts_reset_offline_key I" new="contacts_reset_offline_key"/>
   <field old="contacts_reset_offline_warning I" new="contacts_reset_offline_warning"/>
   <field old="contacts_selected_account_key I" new="contacts_selected_account_key"/>
   <field old="contacts_show_accounts I" new="contacts_show_accounts"/>
   <field old="contacts_show_accounts_key I" new="contacts_show_accounts_key"/>
   <field old="contacts_show_active_chats I" new="contacts_show_active_chats"/>
   <field old="contacts_show_active_chats_key I" new="contacts_show_active_chats_key"/>
   <field old="contacts_show_avatars I" new="contacts_show_avatars"/>
   <field old="contacts_show_avatars_key I" new="contacts_show_avatars_key"/>
   <field old="contacts_show_empty_groups I" new="contacts_show_empty_groups"/>
   <field old="contacts_show_empty_groups_key I" new="contacts_show_empty_groups_key"/>
   <field old="contacts_show_groups I" new="contacts_show_groups"/>
   <field old="contacts_show_groups_key I" new="contacts_show_groups_key"/>
   <field old="contacts_show_offline I" new="contacts_show_offline"/>
   <field old="contacts_show_offline_key I" new="contacts_show_offline_key"/>
   <field old="contacts_show_panel I" new="contacts_show_panel"/>
   <field old="contacts_show_panel_key I" new="contacts_show_panel_key"/>
   <field old="contacts_stay_active_chats I" new="contacts_stay_active_chats"/>
   <field old="contacts_stay_active_chats_key I" new="contacts_stay_active_chats_key"/>
   <field old="debug_log I" new="debug_log"/>
   <field old="debug_log_key I" new="debug_log_key"/>
   <field old="default_sound I" new="default_sound"/>
   <field old="development_changes I" new="development_changes"/>
   <field old="development_changes_1 I" new="development_changes_1"/>
   <field old="development_changes_10 I" new="development_changes_10"/>
   <field old="development_changes_11 I" new="development_changes_11"/>
   <field old="development_changes_12 I" new="development_changes_12"/>
   <field old="development_changes_13 I" new="development_changes_13"/>
   <field old="development_changes_14 I" new="development_changes_14"/>
   <field old="development_changes_15 I" new="development_changes_15"/>
   <field old="development_changes_16 I" new="development_changes_16"/>
   <field old="development_changes_17 I" new="development_changes_17"/>
   <field old="development_changes_18 I" new="development_changes_18"/>
   <field old="development_changes_19 I" new="development_changes_19"/>
   <field old="development_changes_2 I" new="development_changes_2"/>
   <field old="development_changes_20 I" new="development_changes_20"/>
   <field old="development_changes_21 I" new="development_changes_21"/>
   <field old="development_changes_22 I" new="development_changes_22"/>
   <field old="development_changes_23 I" new="development_changes_23"/>
   <field old="development_changes_24 I" new="development_changes_24"/>
   <field old="development_changes_25 I" new="development_changes_25"/>
   <field old="development_changes_26 I" new="development_changes_26"/>
   <field old="development_changes_27 I" new="development_changes_27"/>
   <field old="development_changes_28 I" new="development_changes_28"/>
   <field old="development_changes_29 I" new="development_changes_29"/>
   <field old="development_changes_3 I" new="development_changes_3"/>
   <field old="development_changes_30 I" new="development_changes_30"/>
   <field old="development_changes_31 I" new="development_changes_31"/>
   <field old="development_changes_32 I" new="development_changes_32"/>
   <field old="development_changes_33 I" new="development_changes_33"/>
   <field old="development_changes_34 I" new="development_changes_34"/>
   <field old="development_changes_35 I" new="development_changes_35"/>
   <field old="development_changes_36 I" new="development_changes_36"/>
   <field old="development_changes_37 I" new="development_changes_37"/>
   <field old="development_changes_38 I" new="development_changes_38"/>
   <field old="development_changes_39 I" new="development_changes_39"/>
   <field old="development_changes_4 I" new="development_changes_4"/>
   <field old="development_changes_40 I" new="development_changes_40"/>
   <field old="development_changes_41 I" new="development_changes_41"/>
   <field old="development_changes_42 I" new="development_changes_42"/>
   <field old="development_changes_43 I" new="development_changes_43"/>
   <field old="development_changes_44 I" new="development_changes_44"/>
   <field old="development_changes_45 I" new="development_changes_45"/>
   <field old="development_changes_46 I" new="development_changes_46"/>
   <field old="development_changes_47 I" new="development_changes_47"/>
   <field old="development_changes_48 I" new="development_changes_48"/>
   <field old="development_changes_49 I" new="development_changes_49"/>
   <field old="development_changes_5 I" new="development_changes_5"/>
   <field old="development_changes_50 I" new="development_changes_50"/>
   <field old="development_changes_51 I" new="development_changes_51"/>
   <field old="development_changes_52 I" new="development_changes_52"/>
   <field old="development_changes_53 I" new="development_changes_53"/>
   <field old="development_changes_54 I" new="development_changes_54"/>
   <field old="development_changes_55 I" new="development_changes_55"/>
   <field old="development_changes_56 I" new="development_changes_56"/>
   <field old="development_changes_57 I" new="development_changes_57"/>
   <field old="development_changes_58 I" new="development_changes_58"/>
   <field old="development_changes_59 I" new="development_changes_59"/>
   <field old="development_changes_6 I" new="development_changes_6"/>
   <field old="development_changes_60 I" new="development_changes_60"/>
   <field old="development_changes_61 I" new="development_changes_61"/>
   <field old="development_changes_62 I" new="development_changes_62"/>
   <field old="development_changes_63 I" new="development_changes_63"/>
   <field old="development_changes_64 I" new="development_changes_64"/>
   <field old="development_changes_65 I" new="development_changes_65"/>
   <field old="development_changes_66 I" new="development_changes_66"/>
   <field old="development_changes_67 I" new="development_changes_67"/>
   <field old="development_changes_68 I" new="development_changes_68"/>
   <field old="development_changes_69 I" new="development_changes_69"/>
   <field old="development_changes_7 I" new="development_changes_7"/>
   <field old="development_changes_70 I" new="development_changes_70"/>
   <field old="development_changes_71 I" new="development_changes_71"/>
   <field old="development_changes_72 I" new="development_changes_72"/>
   <field old="development_changes_73 I" new="development_changes_73"/>
   <field old="development_changes_74 I" new="development_changes_74"/>
   <field old="development_changes_75 I" new="development_changes_75"/>
   <field old="development_changes_76 I" new="development_changes_76"/>
   <field old="development_changes_77 I" new="development_changes_77"/>
   <field old="development_changes_78 I" new="development_changes_78"/>
   <field old="development_changes_79 I" new="development_changes_79"/>
   <field old="development_changes_8 I" new="development_changes_8"/>
   <field old="development_changes_80 I" new="development_changes_80"/>
   <field old="development_changes_81 I" new="development_changes_81"/>
   <field old="development_changes_9 I" new="development_changes_9"/>
   <field old="development_description I" new="development_description"/>
   <field old="development_title I" new="development_title"/>
   <field old="development_versions_1 I" new="development_versions_1"/>
   <field old="development_versions_10 I" new="development_versions_10"/>
   <field old="development_versions_102 I" new="development_versions_102"/>
   <field old="development_versions_11 I" new="development_versions_11"/>
   <field old="development_versions_12 I" new="development_versions_12"/>
   <field old="development_versions_13 I" new="development_versions_13"/>
   <field old="development_versions_14 I" new="development_versions_14"/>
   <field old="development_versions_15 I" new="development_versions_15"/>
   <field old="development_versions_16 I" new="development_versions_16"/>
   <field old="development_versions_17 I" new="development_versions_17"/>
   <field old="development_versions_18 I" new="development_versions_18"/>
   <field old="development_versions_19 I" new="development_versions_19"/>
   <field old="development_versions_2 I" new="development_versions_2"/>
   <field old="development_versions_20 I" new="development_versions_20"/>
   <field old="development_versions_21 I" new="development_versions_21"/>
   <field old="development_versions_22 I" new="development_versions_22"/>
   <field old="development_versions_23 I" new="development_versions_23"/>
   <field old="development_versions_24 I" new="development_versions_24"/>
   <field old="development_versions_25 I" new="development_versions_25"/>
   <field old="development_versions_26 I" new="development_versions_26"/>
   <field old="development_versions_27 I" new="development_versions_27"/>
   <field old="development_versions_28 I" new="development_versions_28"/>
   <field old="development_versions_29 I" new="development_versions_29"/>
   <field old="development_versions_3 I" new="development_versions_3"/>
   <field old="development_versions_30 I" new="development_versions_30"/>
   <field old="development_versions_31 I" new="development_versions_31"/>
   <field old="development_versions_32 I" new="development_versions_32"/>
   <field old="development_versions_33 I" new="development_versions_33"/>
   <field old="development_versions_34 I" new="development_versions_34"/>
   <field old="development_versions_35 I" new="development_versions_35"/>
   <field old="development_versions_36 I" new="development_versions_36"/>
   <field old="development_versions_37 I" new="development_versions_37"/>
   <field old="development_versions_38 I" new="development_versions_38"/>
   <field old="development_versions_39 I" new="development_versions_39"/>
   <field old="development_versions_4 I" new="development_versions_4"/>
   <field old="development_versions_40 I" new="development_versions_40"/>
   <field old="development_versions_41 I" new="development_versions_41"/>
   <field old="development_versions_42 I" new="development_versions_42"/>
   <field old="development_versions_43 I" new="development_versions_43"/>
   <field old="development_versions_44 I" new="development_versions_44"/>
   <field old="development_versions_45 I" new="development_versions_45"/>
   <field old="development_versions_46 I" new="development_versions_46"/>
   <field old="development_versions_47 I" new="development_versions_47"/>
   <field old="development_versions_48 I" new="development_versions_48"/>
   <field old="development_versions_49 I" new="development_versions_49"/>
   <field old="development_versions_5 I" new="development_versions_5"/>
   <field old="development_versions_50 I" new="development_versions_50"/>
   <field old="development_versions_51 I" new="development_versions_51"/>
   <field old="development_versions_52 I" new="development_versions_52"/>
   <field old="development_versions_53 I" new="development_versions_53"/>
   <field old="development_versions_54 I" new="development_versions_54"/>
   <field old="development_versions_55 I" new="development_versions_55"/>
   <field old="development_versions_56 I" new="development_versions_56"/>
   <field old="development_versions_57 I" new="development_versions_57"/>
   <field old="development_versions_58 I" new="development_versions_58"/>
   <field old="development_versions_59 I" new="development_versions_59"/>
   <field old="development_versions_6 I" new="development_versions_6"/>
   <field old="development_versions_60 I" new="development_versions_60"/>
   <field old="development_versions_61 I" new="development_versions_61"/>
   <field old="development_versions_62 I" new="development_versions_62"/>
   <field old="development_versions_63 I" new="development_versions_63"/>
   <field old="development_versions_64 I" new="development_versions_64"/>
   <field old="development_versions_65 I" new="development_versions_65"/>
   <field old="development_versions_66 I" new="development_versions_66"/>
   <field old="development_versions_67 I" new="development_versions_67"/>
   <field old="development_versions_68 I" new="development_versions_68"/>
   <field old="development_versions_69 I" new="development_versions_69"/>
   <field old="development_versions_7 I" new="development_versions_7"/>
   <field old="development_versions_70 I" new="development_versions_70"/>
   <field old="development_versions_71 I" new="development_versions_71"/>
   <field old="development_versions_72 I" new="development_versions_72"/>
   <field old="development_versions_73 I" new="development_versions_73"/>
   <field old="development_versions_74 I" new="development_versions_74"/>
   <field old="development_versions_75 I" new="development_versions_75"/>
   <field old="development_versions_76 I" new="development_versions_76"/>
   <field old="development_versions_77 I" new="development_versions_77"/>
   <field old="development_versions_78 I" new="development_versions_78"/>
   <field old="development_versions_79 I" new="development_versions_79"/>
   <field old="development_versions_8 I" new="development_versions_8"/>
   <field old="development_versions_80 I" new="development_versions_80"/>
   <field old="development_versions_81 I" new="development_versions_81"/>
   <field old="development_versions_82 I" new="development_versions_82"/>
   <field old="development_versions_86 I" new="development_versions_86"/>
   <field old="development_versions_88 I" new="development_versions_88"/>
   <field old="development_versions_9 I" new="development_versions_9"/>
   <field old="disabled I" new="disabled"/>
   <field old="discard_subscription I" new="discard_subscription"/>
   <field old="dnd I" new="dnd"/>
   <field old="edit_status I" new="edit_status"/>
   <field old="empty_status I" new="empty_status"/>
   <field old="events_first_only I" new="events_first_only"/>
   <field old="events_first_only_key I" new="events_first_only_key"/>
   <field old="events_ignore_system_vibro I" new="events_ignore_system_vibro"/>
   <field old="events_ignore_system_vibro_key I" new="events_ignore_system_vibro_key"/>
   <field old="events_lightning I" new="events_lightning"/>
   <field old="events_lightning_key I" new="events_lightning_key"/>
   <field old="events_message I" new="events_message"/>
   <field old="events_message_chat I" new="events_message_chat"/>
   <field old="events_message_chat_and_muc I" new="events_message_chat_and_muc"/>
   <field old="events_message_chat_and_muc_value I" new="events_message_chat_and_muc_value"/>
   <field old="events_message_chat_value I" new="events_message_chat_value"/>
   <field old="events_message_default I" new="events_message_default"/>
   <field old="events_message_key I" new="events_message_key"/>
   <field old="events_message_none I" new="events_message_none"/>
   <field old="events_message_none_value I" new="events_message_none_value"/>
   <field old="events_persistent I" new="events_persistent"/>
   <field old="events_persistent_key I" new="events_persistent_key"/>
   <field old="events_phrases I" new="events_phrases"/>
   <field old="events_phrases_title I" new="events_phrases_title"/>
   <field old="events_show_text I" new="events_show_text"/>
   <field old="events_show_text_key I" new="events_show_text_key"/>
   <field old="events_sound I" new="events_sound"/>
   <field old="events_sound_default I" new="events_sound_default"/>
   <field old="events_sound_key I" new="events_sound_key"/>
   <field old="events_vibro I" new="events_vibro"/>
   <field old="events_vibro_key I" new="events_vibro_key"/>
   <field old="events_visible_chat I" new="events_visible_chat"/>
   <field old="events_visible_chat_key I" new="events_visible_chat_key"/>
   <field old="exit I" new="exit"/>
   <field old="export_chat I" new="export_chat"/>
   <field old="export_chat_done I" new="export_chat_done"/>
   <field old="export_chat_mask I" new="export_chat_mask"/>
   <field old="export_chat_send I" new="export_chat_send"/>
   <field old="export_chat_title I" new="export_chat_title"/>
   <field old="group_active_chat I" new="group_active_chat"/>
   <field old="group_add I" new="group_add"/>
   <field old="group_default I" new="group_default"/>
   <field old="group_exists I" new="group_exists"/>
   <field old="group_is_empty I" new="group_is_empty"/>
   <field old="group_name I" new="group_name"/>
   <field old="group_none I" new="group_none"/>
   <field old="group_remove I" new="group_remove"/>
   <field old="group_remove_confirm I" new="group_remove_confirm"/>
   <field old="group_rename I" new="group_rename"/>
   <field old="group_room I" new="group_room"/>
   <field old="in10m I" new="in10m"/>
   <field old="in15m I" new="in15m"/>
   <field old="in1h I" new="in1h"/>
   <field old="in1m I" new="in1m"/>
   <field old="in2m I" new="in2m"/>
   <field old="in30m I" new="in30m"/>
   <field old="in5m I" new="in5m"/>
   <field old="in_10m_value I" new="in_10m_value"/>
   <field old="in_15m_value I" new="in_15m_value"/>
   <field old="in_1h_value I" new="in_1h_value"/>
   <field old="in_1m_value I" new="in_1m_value"/>
   <field old="in_2m_value I" new="in_2m_value"/>
   <field old="in_30m_value I" new="in_30m_value"/>
   <field old="in_5m_value I" new="in_5m_value"/>
   <field old="in_immediately_value I" new="in_immediately_value"/>
   <field old="in_never_value I" new="in_never_value"/>
   <field old="interface_smiles I" new="interface_smiles"/>
   <field old="interface_smiles_android I" new="interface_smiles_android"/>
   <field old="interface_smiles_android_value I" new="interface_smiles_android_value"/>
   <field old="interface_smiles_default I" new="interface_smiles_default"/>
   <field old="interface_smiles_key I" new="interface_smiles_key"/>
   <field old="interface_smiles_none I" new="interface_smiles_none"/>
   <field old="interface_smiles_none_value I" new="interface_smiles_none_value"/>
   <field old="interface_theme I" new="interface_theme"/>
   <field old="interface_theme_dark I" new="interface_theme_dark"/>
   <field old="interface_theme_dark_value I" new="interface_theme_dark_value"/>
   <field old="interface_theme_default I" new="interface_theme_default"/>
   <field old="interface_theme_key I" new="interface_theme_key"/>
   <field old="interface_theme_light I" new="interface_theme_light"/>
   <field old="interface_theme_light_value I" new="interface_theme_light_value"/>
   <field old="interface_theme_normal I" new="interface_theme_normal"/>
   <field old="interface_theme_normal_value I" new="interface_theme_normal_value"/>
   <field old="invisible I" new="invisible"/>
   <field old="manual I" new="manual"/>
   <field old="message_copy I" new="message_copy"/>
   <field old="message_quote I" new="message_quote"/>
   <field old="message_remove I" new="message_remove"/>
   <field old="message_repeat I" new="message_repeat"/>
   <field old="muc_add I" new="muc_add"/>
   <field old="muc_delete I" new="muc_delete"/>
   <field old="muc_delete_confirm I" new="muc_delete_confirm"/>
   <field old="muc_edit I" new="muc_edit"/>
   <field old="muc_invite I" new="muc_invite"/>
   <field old="muc_invite_confirm I" new="muc_invite_confirm"/>
   <field old="muc_invite_confirm_reason I" new="muc_invite_confirm_reason"/>
   <field old="muc_invite_message I" new="muc_invite_message"/>
   <field old="muc_is_unavailable I" new="muc_is_unavailable"/>
   <field old="muc_join I" new="muc_join"/>
   <field old="muc_leave I" new="muc_leave"/>
   <field old="muc_nick I" new="muc_nick"/>
   <field old="muc_nick_hint I" new="muc_nick_hint"/>
   <field old="muc_password I" new="muc_password"/>
   <field old="muc_password_hint I" new="muc_password_hint"/>
   <field old="muc_room I" new="muc_room"/>
   <field old="muc_save I" new="muc_save"/>
   <field old="muc_server I" new="muc_server"/>
   <field old="muc_server_hint I" new="muc_server_hint"/>
   <field old="negative_priotiry_summary I" new="negative_priotiry_summary"/>
   <field old="never I" new="never"/>
   <field old="occupant_list I" new="occupant_list"/>
   <field old="orbot_required_message I" new="orbot_required_message"/>
   <field old="orbot_required_title I" new="orbot_required_title"/>
   <field old="otr_answer I" new="otr_answer"/>
   <field old="otr_copy_fingerprint I" new="otr_copy_fingerprint"/>
   <field old="otr_encryption I" new="otr_encryption"/>
   <field old="otr_end I" new="otr_end"/>
   <field old="otr_fingerprint_description I" new="otr_fingerprint_description"/>
   <field old="otr_is_verified I" new="otr_is_verified"/>
   <field old="otr_local_fingerprint I" new="otr_local_fingerprint"/>
   <field old="otr_question I" new="otr_question"/>
   <field old="otr_question_description I" new="otr_question_description"/>
   <field old="otr_refresh I" new="otr_refresh"/>
   <field old="otr_remote_fingerprint I" new="otr_remote_fingerprint"/>
   <field old="otr_request I" new="otr_request"/>
   <field old="otr_scan_fingerprint I" new="otr_scan_fingerprint"/>
   <field old="otr_secret I" new="otr_secret"/>
   <field old="otr_secret_description I" new="otr_secret_description"/>
   <field old="otr_show_fingerprint I" new="otr_show_fingerprint"/>
   <field old="otr_start I" new="otr_start"/>
   <field old="otr_unencrypted_message I" new="otr_unencrypted_message"/>
   <field old="otr_unreadable_message I" new="otr_unreadable_message"/>
   <field old="otr_verification I" new="otr_verification"/>
   <field old="otr_verification_in_progress I" new="otr_verification_in_progress"/>
   <field old="otr_verify_fingerprint I" new="otr_verify_fingerprint"/>
   <field old="otr_verify_question I" new="otr_verify_question"/>
   <field old="otr_verify_secret I" new="otr_verify_secret"/>
   <field old="pay_attention I" new="pay_attention"/>
   <field old="phrase_add I" new="phrase_add"/>
   <field old="phrase_delete I" new="phrase_delete"/>
   <field old="phrase_delete_confirm I" new="phrase_delete_confirm"/>
   <field old="phrase_empty I" new="phrase_empty"/>
   <field old="phrase_group I" new="phrase_group"/>
   <field old="phrase_group_key I" new="phrase_group_key"/>
   <field old="phrase_regexp I" new="phrase_regexp"/>
   <field old="phrase_regexp_key I" new="phrase_regexp_key"/>
   <field old="phrase_sound I" new="phrase_sound"/>
   <field old="phrase_sound_key I" new="phrase_sound_key"/>
   <field old="phrase_text I" new="phrase_text"/>
   <field old="phrase_text_key I" new="phrase_text_key"/>
   <field old="phrase_user I" new="phrase_user"/>
   <field old="phrase_user_key I" new="phrase_user_key"/>
   <field old="please_wait I" new="please_wait"/>
   <field old="preference_about I" new="preference_about"/>
   <field old="preference_about_key I" new="preference_about_key"/>
   <field old="preference_accounts I" new="preference_accounts"/>
   <field old="preference_accounts_key I" new="preference_accounts_key"/>
   <field old="preference_chats I" new="preference_chats"/>
   <field old="preference_connection I" new="preference_connection"/>
   <field old="preference_contacts I" new="preference_contacts"/>
   <field old="preference_debug I" new="preference_debug"/>
   <field old="preference_editor I" new="preference_editor"/>
   <field old="preference_events I" new="preference_events"/>
   <field old="preference_interface I" new="preference_interface"/>
   <field old="preference_security I" new="preference_security"/>
   <field old="preference_xabber_key I" new="preference_xabber_key"/>
   <field old="production_changes I" new="production_changes"/>
   <field old="production_changes_1 I" new="production_changes_1"/>
   <field old="production_changes_10 I" new="production_changes_10"/>
   <field old="production_changes_11 I" new="production_changes_11"/>
   <field old="production_changes_12 I" new="production_changes_12"/>
   <field old="production_changes_13 I" new="production_changes_13"/>
   <field old="production_changes_14 I" new="production_changes_14"/>
   <field old="production_changes_15 I" new="production_changes_15"/>
   <field old="production_changes_16 I" new="production_changes_16"/>
   <field old="production_changes_17 I" new="production_changes_17"/>
   <field old="production_changes_18 I" new="production_changes_18"/>
   <field old="production_changes_19 I" new="production_changes_19"/>
   <field old="production_changes_2 I" new="production_changes_2"/>
   <field old="production_changes_20 I" new="production_changes_20"/>
   <field old="production_changes_21 I" new="production_changes_21"/>
   <field old="production_changes_22 I" new="production_changes_22"/>
   <field old="production_changes_23 I" new="production_changes_23"/>
   <field old="production_changes_24 I" new="production_changes_24"/>
   <field old="production_changes_25 I" new="production_changes_25"/>
   <field old="production_changes_26 I" new="production_changes_26"/>
   <field old="production_changes_27 I" new="production_changes_27"/>
   <field old="production_changes_28 I" new="production_changes_28"/>
   <field old="production_changes_29 I" new="production_changes_29"/>
   <field old="production_changes_3 I" new="production_changes_3"/>
   <field old="production_changes_30 I" new="production_changes_30"/>
   <field old="production_changes_31 I" new="production_changes_31"/>
   <field old="production_changes_32 I" new="production_changes_32"/>
   <field old="production_changes_33 I" new="production_changes_33"/>
   <field old="production_changes_34 I" new="production_changes_34"/>
   <field old="production_changes_35 I" new="production_changes_35"/>
   <field old="production_changes_36 I" new="production_changes_36"/>
   <field old="production_changes_37 I" new="production_changes_37"/>
   <field old="production_changes_38 I" new="production_changes_38"/>
   <field old="production_changes_39 I" new="production_changes_39"/>
   <field old="production_changes_4 I" new="production_changes_4"/>
   <field old="production_changes_40 I" new="production_changes_40"/>
   <field old="production_changes_41 I" new="production_changes_41"/>
   <field old="production_changes_42 I" new="production_changes_42"/>
   <field old="production_changes_43 I" new="production_changes_43"/>
   <field old="production_changes_44 I" new="production_changes_44"/>
   <field old="production_changes_45 I" new="production_changes_45"/>
   <field old="production_changes_46 I" new="production_changes_46"/>
   <field old="production_changes_47 I" new="production_changes_47"/>
   <field old="production_changes_48 I" new="production_changes_48"/>
   <field old="production_changes_5 I" new="production_changes_5"/>
   <field old="production_changes_6 I" new="production_changes_6"/>
   <field old="production_changes_7 I" new="production_changes_7"/>
   <field old="production_changes_8 I" new="production_changes_8"/>
   <field old="production_changes_9 I" new="production_changes_9"/>
   <field old="production_description I" new="production_description"/>
   <field old="production_promo I" new="production_promo"/>
   <field old="production_title I" new="production_title"/>
   <field old="production_versions_1 I" new="production_versions_1"/>
   <field old="production_versions_10 I" new="production_versions_10"/>
   <field old="production_versions_11 I" new="production_versions_11"/>
   <field old="production_versions_12 I" new="production_versions_12"/>
   <field old="production_versions_13 I" new="production_versions_13"/>
   <field old="production_versions_14 I" new="production_versions_14"/>
   <field old="production_versions_15 I" new="production_versions_15"/>
   <field old="production_versions_16 I" new="production_versions_16"/>
   <field old="production_versions_17 I" new="production_versions_17"/>
   <field old="production_versions_18 I" new="production_versions_18"/>
   <field old="production_versions_19 I" new="production_versions_19"/>
   <field old="production_versions_2 I" new="production_versions_2"/>
   <field old="production_versions_20 I" new="production_versions_20"/>
   <field old="production_versions_21 I" new="production_versions_21"/>
   <field old="production_versions_22 I" new="production_versions_22"/>
   <field old="production_versions_23 I" new="production_versions_23"/>
   <field old="production_versions_24 I" new="production_versions_24"/>
   <field old="production_versions_25 I" new="production_versions_25"/>
   <field old="production_versions_26 I" new="production_versions_26"/>
   <field old="production_versions_27 I" new="production_versions_27"/>
   <field old="production_versions_28 I" new="production_versions_28"/>
   <field old="production_versions_29 I" new="production_versions_29"/>
   <field old="production_versions_3 I" new="production_versions_3"/>
   <field old="production_versions_30 I" new="production_versions_30"/>
   <field old="production_versions_31 I" new="production_versions_31"/>
   <field old="production_versions_34 I" new="production_versions_34"/>
   <field old="production_versions_35 I" new="production_versions_35"/>
   <field old="production_versions_36 I" new="production_versions_36"/>
   <field old="production_versions_37 I" new="production_versions_37"/>
   <field old="production_versions_38 I" new="production_versions_38"/>
   <field old="production_versions_39 I" new="production_versions_39"/>
   <field old="production_versions_4 I" new="production_versions_4"/>
   <field old="production_versions_40 I" new="production_versions_40"/>
   <field old="production_versions_41 I" new="production_versions_41"/>
   <field old="production_versions_42 I" new="production_versions_42"/>
   <field old="production_versions_43 I" new="production_versions_43"/>
   <field old="production_versions_44 I" new="production_versions_44"/>
   <field old="production_versions_45 I" new="production_versions_45"/>
   <field old="production_versions_46 I" new="production_versions_46"/>
   <field old="production_versions_47 I" new="production_versions_47"/>
   <field old="production_versions_48 I" new="production_versions_48"/>
   <field old="production_versions_5 I" new="production_versions_5"/>
   <field old="production_versions_6 I" new="production_versions_6"/>
   <field old="production_versions_7 I" new="production_versions_7"/>
   <field old="production_versions_8 I" new="production_versions_8"/>
   <field old="production_versions_9 I" new="production_versions_9"/>
   <field old="remove_status I" new="remove_status"/>
   <field old="request_subscription I" new="request_subscription"/>
   <field old="required I" new="required"/>
   <field old="save_history I" new="save_history"/>
   <field old="security_check_certificate I" new="security_check_certificate"/>
   <field old="security_check_certificate_key I" new="security_check_certificate_key"/>
   <field old="security_clear_certificate I" new="security_clear_certificate"/>
   <field old="security_clear_certificate_key I" new="security_clear_certificate_key"/>
   <field old="security_clear_certificate_warning I" new="security_clear_certificate_warning"/>
   <field old="security_otr_history I" new="security_otr_history"/>
   <field old="security_otr_history_key I" new="security_otr_history_key"/>
   <field old="security_otr_mode I" new="security_otr_mode"/>
   <field old="security_otr_mode_auto_value I" new="security_otr_mode_auto_value"/>
   <field old="security_otr_mode_default I" new="security_otr_mode_default"/>
   <field old="security_otr_mode_disabled_value I" new="security_otr_mode_disabled_value"/>
   <field old="security_otr_mode_key I" new="security_otr_mode_key"/>
   <field old="security_otr_mode_manual_value I" new="security_otr_mode_manual_value"/>
   <field old="security_otr_mode_required_value I" new="security_otr_mode_required_value"/>
   <field old="select_contact I" new="select_contact"/>
   <field old="select_status I" new="select_status"/>
   <field old="short_description I" new="short_description"/>
   <field old="show_history I" new="show_history"/>
   <field old="show_offline_always I" new="show_offline_always"/>
   <field old="show_offline_never I" new="show_offline_never"/>
   <field old="show_offline_normal I" new="show_offline_normal"/>
   <field old="show_offline_settings I" new="show_offline_settings"/>
   <field old="start_at_boot_suggest I" new="start_at_boot_suggest"/>
   <field old="start_at_boot_suggested_key I" new="start_at_boot_suggested_key"/>
   <field old="status_editor I" new="status_editor"/>
   <field old="status_editor_for I" new="status_editor_for"/>
   <field old="status_mode_key I" new="status_mode_key"/>
   <field old="status_text_hint I" new="status_text_hint"/>
   <field old="status_text_key I" new="status_text_key"/>
   <field old="subscription_request_message I" new="subscription_request_message"/>
   <field old="sync_account_type I" new="sync_account_type"/>
   <field old="unavailable I" new="unavailable"/>
   <field old="unknown I" new="unknown"/>
   <field old="unsubscribed I" new="unsubscribed"/>
   <field old="vcard_address I" new="vcard_address"/>
   <field old="vcard_address_ctry I" new="vcard_address_ctry"/>
   <field old="vcard_address_extadr I" new="vcard_address_extadr"/>
   <field old="vcard_address_locality I" new="vcard_address_locality"/>
   <field old="vcard_address_pcode I" new="vcard_address_pcode"/>
   <field old="vcard_address_pobox I" new="vcard_address_pobox"/>
   <field old="vcard_address_region I" new="vcard_address_region"/>
   <field old="vcard_address_street I" new="vcard_address_street"/>
   <field old="vcard_birth_date I" new="vcard_birth_date"/>
   <field old="vcard_categories I" new="vcard_categories"/>
   <field old="vcard_decsription I" new="vcard_decsription"/>
   <field old="vcard_email I" new="vcard_email"/>
   <field old="vcard_family_name I" new="vcard_family_name"/>
   <field old="vcard_formatted_name I" new="vcard_formatted_name"/>
   <field old="vcard_given_name I" new="vcard_given_name"/>
   <field old="vcard_middle_name I" new="vcard_middle_name"/>
   <field old="vcard_nick_name I" new="vcard_nick_name"/>
   <field old="vcard_note I" new="vcard_note"/>
   <field old="vcard_organization I" new="vcard_organization"/>
   <field old="vcard_other I" new="vcard_other"/>
   <field old="vcard_person I" new="vcard_person"/>
   <field old="vcard_prefix_name I" new="vcard_prefix_name"/>
   <field old="vcard_role I" new="vcard_role"/>
   <field old="vcard_suffix_name I" new="vcard_suffix_name"/>
   <field old="vcard_telephone I" new="vcard_telephone"/>
   <field old="vcard_title I" new="vcard_title"/>
   <field old="vcard_type I" new="vcard_type"/>
   <field old="vcard_type_bbs I" new="vcard_type_bbs"/>
   <field old="vcard_type_cell I" new="vcard_type_cell"/>
   <field old="vcard_type_dom I" new="vcard_type_dom"/>
   <field old="vcard_type_fax I" new="vcard_type_fax"/>
   <field old="vcard_type_home I" new="vcard_type_home"/>
   <field old="vcard_type_internet I" new="vcard_type_internet"/>
   <field old="vcard_type_intl I" new="vcard_type_intl"/>
   <field old="vcard_type_isdn I" new="vcard_type_isdn"/>
   <field old="vcard_type_modem I" new="vcard_type_modem"/>
   <field old="vcard_type_msg I" new="vcard_type_msg"/>
   <field old="vcard_type_pager I" new="vcard_type_pager"/>
   <field old="vcard_type_parcel I" new="vcard_type_parcel"/>
   <field old="vcard_type_pcs I" new="vcard_type_pcs"/>
   <field old="vcard_type_postal I" new="vcard_type_postal"/>
   <field old="vcard_type_pref I" new="vcard_type_pref"/>
   <field old="vcard_type_video I" new="vcard_type_video"/>
   <field old="vcard_type_voice I" new="vcard_type_voice"/>
   <field old="vcard_type_work I" new="vcard_type_work"/>
   <field old="vcard_type_x400 I" new="vcard_type_x400"/>
   <field old="vcard_url I" new="vcard_url"/>
   <field old="vip_description I" new="vip_description"/>
   <field old="vip_title I" new="vip_title"/>
   <field old="xa I" new="xa"/>
   <field old="zxing_install_fail I" new="zxing_install_fail"/>
   <field old="zxing_install_message I" new="zxing_install_message"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.DataForm$Item" new="org.jivesoftware.smackx.packet.c_fa">
   <method old="getFields()Ljava/util/Iterator;" new="m_qJ"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="fields Ljava/util/List;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.sasl.SASLMechanism$Response" new="wy.c_u">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="authenticationText Ljava/lang/String;" new="f_e"/>
   <field old="this$0 Lorg/jivesoftware/smack/sasl/SASLMechanism;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.roster.PresenceManager$1" new="com.xabber.android.data.roster.c_i">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/roster/PresenceManager;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.filetransfer.Socks5TransferNegotiator" new="org.jivesoftware.smackx.filetransfer.c_J">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="cleanup()V" new="m_wD"/>
   <method old="createError(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WM"/>
   <method old="createIncomingStream(Lorg/jivesoftware/smackx/packet/StreamInitiation;)Ljava/io/InputStream;" new="m_cn"/>
   <method old="createInitiationAccept(Lorg/jivesoftware/smackx/packet/StreamInitiation;[Ljava/lang/String;)Lorg/jivesoftware/smackx/packet/StreamInitiation;" new="m_yo"/>
   <method old="createOutgoingStream(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/io/OutputStream;" new="m_bo"/>
   <method old="getInitiationPacketFilter(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/filter/PacketFilter;" new="m_fo"/>
   <method old="getNamespaces()[Ljava/lang/String;" new="m_HN"/>
   <method old="initiateIncomingStream(Lorg/jivesoftware/smack/Connection;Lorg/jivesoftware/smackx/packet/StreamInitiation;)Lorg/jivesoftware/smack/packet/Packet;" new="m_Zo"/>
   <method old="negotiateIncomingStream(Lorg/jivesoftware/smack/packet/Packet;)Ljava/io/InputStream;" new="m_no"/>
   <field old="connection Lorg/jivesoftware/smack/Connection;" new="f_m"/>
   <field old="manager Lorg/jivesoftware/smackx/bytestreams/socks5/Socks5BytestreamManager;" new="f_e"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.SubjectDomainCombiner" new="org.apache.harmony.javax.security.auth.c_H">
   <method old="combine([Ljava/security/ProtectionDomain;[Ljava/security/ProtectionDomain;)[Ljava/security/ProtectionDomain;" new="combine"/>
   <method old="getSubject()Lorg/apache/harmony/javax/security/auth/Subject;" new="m_wM"/>
   <field old="_GET Lorg/apache/harmony/javax/security/auth/AuthPermission;" new="f_e"/>
   <field old="subject Lorg/apache/harmony/javax/security/auth/Subject;" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.vcard.AbstractDataProvider" new="com.xabber.xmpp.vcard.c_K">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createBinaryData()Lcom/xabber/xmpp/Instance;" new="m_iaa"/>
   <method old="createExternalData()Lcom/xabber/xmpp/Instance;" new="m_bY"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="createPayload(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/DataHolder;)Z" new="m_lz"/>
   <method old="inflateBinaryData(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/AbstractBinaryData;)Z" new="m_GY"/>
   <method old="inflateExternalData(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/AbstractExternalData;)Z" new="m_mz"/>
   <method old="inflatePayload(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/DataHolder;)Z" new="m_qY"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/DataHolder;)Z" new="m_iz"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
  </class>
  <class old="com.xabber.android.data.message.ChatContact" new="com.xabber.android.data.message.c_G">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="compareTo(Lcom/xabber/android/data/entity/BaseEntity;)I" new="m_bCa"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="equals(Ljava/lang/String;Ljava/lang/String;)Z" new="m_Bba"/>
   <method old="getAccount()Ljava/lang/String;" new="m_FC"/>
   <method old="getAvatar()Landroid/graphics/drawable/Drawable;" new="m_UL"/>
   <method old="getAvatarForContactList()Landroid/graphics/drawable/Drawable;" new="m_ZEa"/>
   <method old="getClientSoftware()Lcom/xabber/android/data/extension/capability/ClientSoftware;" new="m_sda"/>
   <method old="getColorLevel()I" new="m_fFa"/>
   <method old="getGroups()Ljava/util/Collection;" new="m_pK"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getStatusMode()Lcom/xabber/android/data/account/StatusMode;" new="m_tfa"/>
   <method old="getStatusText()Ljava/lang/String;" new="m_tFa"/>
   <method old="getUser()Ljava/lang/String;" new="m_TA"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="isConnected()Z" new="m_ZS"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="account Ljava/lang/String;" new="f_m"/>
   <field old="user Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="com.xabber.android.utils.StringUtils" new="wy.c_IC">
   <method old="escapeHtml(Ljava/lang/String;)Ljava/lang/String;" new="m_oBa"/>
   <method old="getDateTimeText(Ljava/util/Date;)Ljava/lang/String;" new="m_Xca"/>
   <method old="getQuantityString(Landroid/content/res/Resources;IJ)Ljava/lang/String;" new="m_xca"/>
   <method old="getSmartTimeText(Ljava/util/Date;)Ljava/lang/String;" new="m_FBa"/>
   <field old="DATE_TIME Ljava/text/DateFormat;" new="f_m"/>
   <field old="TIME Ljava/text/DateFormat;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$StanzaType" new="org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$StanzaType">
   <method old="valueOf(Ljava/lang/String;)Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamManager$StanzaType;" new="valueOf"/>
   <method old="values()[Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamManager$StanzaType;" new="values"/>
   <field old="$VALUES [Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamManager$StanzaType;" new="f_m"/>
   <field old="IQ Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamManager$StanzaType;" new="f_e"/>
   <field old="MESSAGE Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamManager$StanzaType;" new="f_b"/>
  </class>
  <class old="com.xabber.android.ui.ChatEditor" new="com.xabber.android.ui.ChatEditor">
   <method old="createIntent(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;" new="m_CAa"/>
   <method old="getAccount(Landroid/content/Intent;)Ljava/lang/String;" new="m_lCa"/>
   <method old="getBoolean(Ljava/util/Map;I)Z" new="m_gba"/>
   <method old="getInt(Ljava/util/Map;I)I" new="m_YCa"/>
   <method old="getPrefecence(Landroid/preference/Preference;Ljava/util/Map;)Ljava/lang/Object;" new="m_uba"/>
   <method old="getPreferences(Ljava/util/Map;)Ljava/util/Map;" new="m_gca"/>
   <method old="getString(Ljava/util/Map;I)Ljava/lang/String;" new="m_VAa"/>
   <method old="getUri(Ljava/util/Map;I)Landroid/net/Uri;" new="m_nCa"/>
   <method old="getUser(Landroid/content/Intent;)Ljava/lang/String;" new="m_NCa"/>
   <method old="getValues()Ljava/util/Map;" new="m_bQ"/>
   <method old="hasChanges(Ljava/util/Map;Ljava/util/Map;I)Z" new="m_Gba"/>
   <method old="hasChanges(Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;)Z" new="m_qCa"/>
   <method old="isInitialChange()Z" new="m_qAa"/>
   <method old="onActivityResult(IILandroid/content/Intent;)V" new="onActivityResult"/>
   <method old="onCreate(Landroid/os/Bundle;)V" new="onCreate"/>
   <method old="onCreateDialog(I)Landroid/app/Dialog;" new="onCreateDialog"/>
   <method old="onCreateOptionsMenu(Landroid/view/Menu;)Z" new="onCreateOptionsMenu"/>
   <method old="onDestroy()V" new="onDestroy"/>
   <method old="onInflate(Landroid/os/Bundle;)V" new="m_TBa"/>
   <method old="onKeyDown(ILandroid/view/KeyEvent;)Z" new="onKeyDown"/>
   <method old="onNewIntent(Landroid/content/Intent;)V" new="onNewIntent"/>
   <method old="onOptionsItemSelected(Landroid/view/MenuItem;)Z" new="onOptionsItemSelected"/>
   <method old="onPause()V" new="onPause"/>
   <method old="onPreferenceChange(Landroid/preference/Preference;Ljava/lang/Object;)Z" new="onPreferenceChange"/>
   <method old="onResume()V" new="onResume"/>
   <method old="putValue(Ljava/util/Map;ILjava/lang/Object;)V" new="m_Ida"/>
   <method old="setPreference(Landroid/preference/Preference;Ljava/lang/Object;)V" new="m_xAa"/>
   <method old="setPreferences(Ljava/util/Map;)V" new="m_sca"/>
   <method old="setValues(Ljava/util/Map;Ljava/util/Map;)Z" new="m_eba"/>
   <method old="startActivity(Landroid/content/Intent;)V" new="startActivity"/>
   <method old="startActivityForResult(Landroid/content/Intent;I)V" new="startActivityForResult"/>
   <field old="account Ljava/lang/String;" new="f_e"/>
   <field old="user Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.provider.RosterExchangeProvider" new="org.jivesoftware.smackx.provider.RosterExchangeProvider">
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_I"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.login.FailedLoginException" new="wy.c_Va">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <field old="serialVersionUID J" new="f_m"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.DSA" new="net.java.otr4j.bouncycastle.crypto.c_E">
   <method old="generateSignature([B)[Ljava/math/BigInteger;" new="m_xC"/>
   <method old="init(ZLnet/java/otr4j/bouncycastle/crypto/CipherParameters;)V" new="m_Hd"/>
   <method old="verifySignature([BLjava/math/BigInteger;Ljava/math/BigInteger;)Z" new="m_Ub"/>
  </class>
  <class old="org.jivesoftware.smackx.MultipleRecipientInfo" new="org.jivesoftware.smackx.c_w">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getCCAddresses()Ljava/util/List;" new="m_hr"/>
   <method old="getReplyAddress()Lorg/jivesoftware/smackx/packet/MultipleAddresses$Address;" new="m_EQ"/>
   <method old="getReplyRoom()Ljava/lang/String;" new="m_gR"/>
   <method old="getTOAddresses()Ljava/util/List;" new="m_Hq"/>
   <method old="shouldNotReply()Z" new="m_AR"/>
   <field old="extension Lorg/jivesoftware/smackx/packet/MultipleAddresses;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.roster.RosterContact" new="com.xabber.android.data.roster.RosterContact">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="addGroupReference(Lcom/xabber/android/data/roster/RosterGroupReference;)V" new="m_Hea"/>
   <method old="compareTo(Lcom/xabber/android/data/entity/BaseEntity;)I" new="m_bCa"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="equals(Ljava/lang/String;Ljava/lang/String;)Z" new="m_Bba"/>
   <method old="getAccount()Ljava/lang/String;" new="m_FC"/>
   <method old="getAvatar()Landroid/graphics/drawable/Drawable;" new="m_UL"/>
   <method old="getAvatarForContactList()Landroid/graphics/drawable/Drawable;" new="m_ZEa"/>
   <method old="getClientSoftware()Lcom/xabber/android/data/extension/capability/ClientSoftware;" new="m_sda"/>
   <method old="getColorLevel()I" new="m_fFa"/>
   <method old="getGroupNames()Ljava/util/Collection;" new="m_Qp"/>
   <method old="getGroups()Ljava/util/Collection;" new="m_pK"/>
   <method old="getJidId()Ljava/lang/Long;" new="m_oea"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getNickNameId()Ljava/lang/Long;" new="m_uDa"/>
   <method old="getRawId()Ljava/lang/Long;" new="m_Fea"/>
   <method old="getRealName()Ljava/lang/String;" new="m_KFa"/>
   <method old="getRosterGroupReference(Ljava/lang/String;)Lcom/xabber/android/data/roster/RosterGroupReference;" new="m_QDa"/>
   <method old="getStatusMode()Lcom/xabber/android/data/account/StatusMode;" new="m_tfa"/>
   <method old="getStatusText()Ljava/lang/String;" new="m_tFa"/>
   <method old="getStructuredNameId()Ljava/lang/Long;" new="m_Rfa"/>
   <method old="getUser()Ljava/lang/String;" new="m_TA"/>
   <method old="getViewId()Ljava/lang/Long;" new="m_Gea"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="isConnected()Z" new="m_ZS"/>
   <method old="isEnabled()Z" new="m_Qea"/>
   <method old="removeGroupReference(Lcom/xabber/android/data/roster/RosterGroupReference;)V" new="m_Ofa"/>
   <method old="setConnected(Z)V" new="m_zfa"/>
   <method old="setEnabled(Z)V" new="m_iea"/>
   <method old="setJidId(Ljava/lang/Long;)V" new="m_Cea"/>
   <method old="setName(Ljava/lang/String;)V" new="m_Xl"/>
   <method old="setNickNameId(Ljava/lang/Long;)V" new="m_KDa"/>
   <method old="setRawId(Ljava/lang/Long;)V" new="m_EFa"/>
   <method old="setStructuredNameId(Ljava/lang/Long;)V" new="m_WEa"/>
   <method old="setSubscribed(Z)V" new="m_vFa"/>
   <method old="setViewId(Ljava/lang/Long;)V" new="m_eFa"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="account Ljava/lang/String;" new="f_m"/>
   <field old="connected Z" new="f_I"/>
   <field old="enabled Z" new="f_d"/>
   <field old="groupReferences Ljava/util/Map;" new="f_m"/>
   <field old="jidId Ljava/lang/Long;" new="f_k"/>
   <field old="name Ljava/lang/String;" new="f_b"/>
   <field old="nickNameId Ljava/lang/Long;" new="f_e"/>
   <field old="rawId Ljava/lang/Long;" new="f_B"/>
   <field old="structuredNameId Ljava/lang/Long;" new="f_l"/>
   <field old="subscribed Z" new="f_j"/>
   <field old="user Ljava/lang/String;" new="f_e"/>
   <field old="viewId Ljava/lang/Long;" new="f_f"/>
  </class>
  <class old="com.xabber.android.data.extension.otr.OTRTable$Fields" new="com.xabber.android.data.extension.otr.c_B">
   <field old="ACCOUNT Ljava/lang/String;" new="f_m"/>
   <field old="FINGERPRINT Ljava/lang/String;" new="f_b"/>
   <field old="USER Ljava/lang/String;" new="f_e"/>
   <field old="VERIFIED Ljava/lang/String;" new="f_d"/>
  </class>
  <class old="org.xbill.DNS.ResolverListener" new="org.xbill.DNS.ResolverListener">
   <method old="handleException(Ljava/lang/Object;Ljava/lang/Exception;)V" new="m_i"/>
   <method old="receiveMessage(Ljava/lang/Object;Lorg/xbill/DNS/Message;)V" new="m_l"/>
  </class>
  <class old="net.java.otr4j.session.SessionKeysImpl" new="net.java.otr4j.session.c_m">
   <method old="getIsUsedReceivingMACKey()Ljava/lang/Boolean;" new="m_yc"/>
   <method old="getLocalKeyID()I" new="m_Gd"/>
   <method old="getLocalPair()Ljava/security/KeyPair;" new="m_AC"/>
   <method old="getReceivingAESKey()[B" new="m_PC"/>
   <method old="getReceivingCtr()[B" new="m_OB"/>
   <method old="getReceivingMACKey()[B" new="m_CC"/>
   <method old="getRemoteKey()Ljavax/crypto/interfaces/DHPublicKey;" new="m_Kd"/>
   <method old="getRemoteKeyID()I" new="m_dc"/>
   <method old="getS()Ljava/math/BigInteger;" new="m_Qb"/>
   <method old="getSendingAESKey()[B" new="m_fB"/>
   <method old="getSendingCtr()[B" new="m_eB"/>
   <method old="getSendingMACKey()[B" new="m_qd"/>
   <method old="h1(B)[B" new="m_Ax"/>
   <method old="incrementSendingCtr()V" new="m_Pb"/>
   <method old="reset()V" new="m_ld"/>
   <method old="setIsUsedReceivingMACKey(Ljava/lang/Boolean;)V" new="m_hA"/>
   <method old="setLocalKeyID(I)V" new="m_Kw"/>
   <method old="setLocalPair(Ljava/security/KeyPair;I)V" new="m_iC"/>
   <method old="setReceivingCtr([B)V" new="m_hb"/>
   <method old="setRemoteDHPublicKey(Ljavax/crypto/interfaces/DHPublicKey;I)V" new="m_fd"/>
   <method old="setRemoteKey(Ljavax/crypto/interfaces/DHPublicKey;)V" new="m_Jx"/>
   <method old="setRemoteKeyID(I)V" new="m_LV"/>
   <method old="setS(Ljava/math/BigInteger;)V" new="m_GB"/>
   <field old="Current I" new="f_b"/>
   <field old="HIGH_RECEIVE_BYTE B" new="f_j"/>
   <field old="HIGH_SEND_BYTE B" new="f_B"/>
   <field old="LOW_RECEIVE_BYTE B" new="f_d"/>
   <field old="LOW_SEND_BYTE B" new="f_e"/>
   <field old="Previous I" new="f_m"/>
   <field old="isHigh Ljava/lang/Boolean;" new="f_d"/>
   <field old="isUsedReceivingMACKey Ljava/lang/Boolean;" new="f_K"/>
   <field old="keyDescription Ljava/lang/String;" new="f_k"/>
   <field old="localKeyID I" new="f_e"/>
   <field old="localPair Ljava/security/KeyPair;" new="f_G"/>
   <field old="logger Ljava/util/logging/Logger;" new="f_b"/>
   <field old="receivingAESKey [B" new="f_l"/>
   <field old="receivingCtr [B" new="f_I"/>
   <field old="receivingMACKey [B" new="f_g"/>
   <field old="remoteKey Ljavax/crypto/interfaces/DHPublicKey;" new="f_j"/>
   <field old="remoteKeyID I" new="f_B"/>
   <field old="s Ljava/math/BigInteger;" new="f_M"/>
   <field old="sendingAESKey [B" new="f_D"/>
   <field old="sendingCtr [B" new="f_f"/>
   <field old="sendingMACKey [B" new="f_J"/>
  </class>
  <class old="com.xabber.xmpp.archive.Auto" new="com.xabber.xmpp.archive.c_N">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="isSave()Z" new="m_tBa"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="serializeContent(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_Fb"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setSave(Z)V" new="m_JBa"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_e"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="NAMESPACE Ljava/lang/String;" new="f_m"/>
   <field old="SAVE_ATTRIBUTE Ljava/lang/String;" new="f_B"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="save Z" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smackx.provider.MUCAdminProvider" new="org.jivesoftware.smackx.provider.c_k">
   <method old="parseIQ(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/IQ;" new="m_g"/>
   <method old="parseItem(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smackx/packet/MUCAdmin$Item;" new="m_cK"/>
  </class>
  <class old="com.xabber.android.ui.adapter.StatusContactInflater$ViewHolder" new="com.xabber.android.ui.adapter.c_F">
   <field old="avatar Landroid/widget/ImageView;" new="f_e"/>
   <field old="color Landroid/widget/ImageView;" new="f_B"/>
   <field old="name Landroid/widget/TextView;" new="f_m"/>
   <field old="panel Landroid/widget/RelativeLayout;" new="f_b"/>
   <field old="shadow Landroid/widget/ImageView;" new="f_d"/>
   <field old="status Landroid/widget/TextView;" new="f_j"/>
   <field old="statusMode Landroid/widget/ImageView;" new="f_m"/>
  </class>
  <class old="com.xabber.android.classic.R$xml" new="com.xabber.android.classic.R$xml">
   <field old="account_editor_oauth I" new="account_editor_oauth"/>
   <field old="account_editor_xmpp I" new="account_editor_xmpp"/>
   <field old="authenticator I" new="authenticator"/>
   <field old="chat_editor I" new="chat_editor"/>
   <field old="contact_viewer I" new="contact_viewer"/>
   <field old="contacts_structure I" new="contacts_structure"/>
   <field old="phrase_editor I" new="phrase_editor"/>
   <field old="preference_editor I" new="preference_editor"/>
   <field old="syncadapter I" new="syncadapter"/>
  </class>
  <class old="com.xabber.android.data.account.StatusTable$Fields" new="com.xabber.android.data.account.c_K">
   <field old="STATUS_MODE Ljava/lang/String;" new="f_e"/>
   <field old="STATUS_TEXT Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.dialog.AccountChooseDialogBuilder$1" new="wy.c_Zb">
   <method old="onClick(Landroid/content/DialogInterface;I)V" new="onClick"/>
   <field old="this$0 Lcom/xabber/android/ui/dialog/AccountChooseDialogBuilder;" new="f_e"/>
   <field old="val$adapter Lcom/xabber/android/ui/dialog/AccountChooseDialogBuilder$Adapter;" new="f_m"/>
   <field old="val$listener Lcom/xabber/android/ui/dialog/ConfirmDialogListener;" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smack.util.collections.AbstractHashedMap$KeySetIterator" new="org.jivesoftware.smack.util.collections.c_s">
   <method old="currentEntry()Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;" new="m_yQ"/>
   <method old="hasNext()Z" new="hasNext"/>
   <method old="next()Ljava/lang/Object;" new="next"/>
   <method old="nextEntry()Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;" new="m_Kq"/>
   <method old="remove()V" new="remove"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="expectedModCount I" new="f_d"/>
   <field old="hashIndex I" new="f_e"/>
   <field old="last Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;" new="f_b"/>
   <field old="next Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;" new="f_B"/>
   <field old="parent Lorg/jivesoftware/smack/util/collections/AbstractHashedMap;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.provider.StreamInitiationProvider" new="org.jivesoftware.smackx.provider.c_m">
   <method old="parseIQ(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/IQ;" new="m_g"/>
  </class>
  <class old="com.xabber.xmpp.vcard.Organization" new="com.xabber.xmpp.vcard.c_e">
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getUnits()Ljava/util/List;" new="m_vZ"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="setName(Ljava/lang/String;)V" new="m_Xl"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_e"/>
   <field old="ORGNAME_NAME Ljava/lang/String;" new="f_b"/>
   <field old="ORGUNIT_NAME Ljava/lang/String;" new="f_d"/>
   <field old="name Ljava/lang/String;" new="f_B"/>
   <field old="units Ljava/util/List;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.adapter.BaseContactAdapter$ContactFilter" new="com.xabber.android.ui.adapter.c_n">
   <method old="performFiltering(Ljava/lang/CharSequence;)Landroid/widget/Filter$FilterResults;" new="performFiltering"/>
   <method old="publishResults(Ljava/lang/CharSequence;Landroid/widget/Filter$FilterResults;)V" new="publishResults"/>
   <field old="this$0 Lcom/xabber/android/ui/adapter/BaseContactAdapter;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.filetransfer.FileTransfer" new="org.jivesoftware.smackx.filetransfer.c_G">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="cancel()V" new="m_pk"/>
   <method old="getAmountWritten()J" new="m_MM"/>
   <method old="getError()Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Error;" new="m_Hg"/>
   <method old="getException()Ljava/lang/Exception;" new="m_Tm"/>
   <method old="getFileName()Ljava/lang/String;" new="m_Hm"/>
   <method old="getFilePath()Ljava/lang/String;" new="m_CN"/>
   <method old="getFileSize()J" new="m_HO"/>
   <method old="getPeer()Ljava/lang/String;" new="m_vo"/>
   <method old="getProgress()D" new="m_Eo"/>
   <method old="getStatus()Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Status;" new="m_yL"/>
   <method old="getStreamID()Ljava/lang/String;" new="m_KM"/>
   <method old="isDone()Z" new="m_CO"/>
   <method old="setError(Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Error;)V" new="m_fN"/>
   <method old="setException(Ljava/lang/Exception;)V" new="m_To"/>
   <method old="setFileInfo(Ljava/lang/String;J)V" new="m_eM"/>
   <method old="setFileInfo(Ljava/lang/String;Ljava/lang/String;J)V" new="m_qm"/>
   <method old="setStatus(Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Status;)V" new="m_km"/>
   <method old="updateStatus(Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Status;Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Status;)Z" new="m_cm"/>
   <method old="writeToStream(Ljava/io/InputStream;Ljava/io/OutputStream;)V" new="m_ho"/>
   <field old="BUFFER_SIZE I" new="f_J"/>
   <field old="amountWritten J" new="f_j"/>
   <field old="error Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Error;" new="f_K"/>
   <field old="exception Ljava/lang/Exception;" new="f_f"/>
   <field old="fileName Ljava/lang/String;" new="f_B"/>
   <field old="filePath Ljava/lang/String;" new="f_l"/>
   <field old="fileSize J" new="f_I"/>
   <field old="negotiator Lorg/jivesoftware/smackx/filetransfer/FileTransferNegotiator;" new="f_m"/>
   <field old="peer Ljava/lang/String;" new="f_e"/>
   <field old="status Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Status;" new="f_d"/>
   <field old="statusMonitor Ljava/lang/Object;" new="f_b"/>
   <field old="streamID Ljava/lang/String;" new="f_k"/>
  </class>
  <class old="com.xabber.android.classic.R$raw" new="com.xabber.android.classic.R$raw">
   <field old="smack I" new="smack"/>
   <field old="smack_config I" new="smack_config"/>
  </class>
  <class old="org.xbill.DNS.EDNSOption" new="org.xbill.DNS.c_Ka">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;)Lorg/xbill/DNS/EDNSOption;" new="m_rI"/>
   <method old="fromWire([B)Lorg/xbill/DNS/EDNSOption;" new="m_Si"/>
   <method old="getCode()I" new="m_ej"/>
   <method old="getData()[B" new="m_tD"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="optionFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_XI"/>
   <method old="optionToString()Ljava/lang/String;" new="m_cG"/>
   <method old="optionToWire(Lorg/xbill/DNS/DNSOutput;)V" new="m_GH"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire()[B" new="m_tF"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;)V" new="m_ne"/>
   <field old="code I" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.vcard.ExternalPhoto" new="com.xabber.xmpp.vcard.c_s">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getValue()Ljava/lang/String;" new="m_Ra"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="setValue(Ljava/lang/String;)V" new="m_TT"/>
   <method old="writeBody(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_zy"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_m"/>
   <field old="EXTVAL_NAME Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smack.sasl.SASLMechanism$AuthMechanism" new="wy.c_ga">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="authenticationText Ljava/lang/String;" new="f_m"/>
   <field old="name Ljava/lang/String;" new="f_b"/>
   <field old="this$0 Lorg/jivesoftware/smack/sasl/SASLMechanism;" new="f_e"/>
  </class>
  <class old="org.xbill.DNS.TXTRecord" new="org.xbill.DNS.c_q">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getStrings()Ljava/util/List;" new="m_CE"/>
   <method old="getStringsAsByteArrays()Ljava/util/List;" new="m_dD"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="serialVersionUID J" new="f_m"/>
   <field old="strings Ljava/util/List;" new="f_e"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.account.OAuthProvider" new="com.xabber.android.data.account.c_j">
   <method old="getAccountProtocol()Lcom/xabber/android/data/account/AccountProtocol;" new="m_uB"/>
   <method old="getUrl()Ljava/lang/String;" new="m_nc"/>
   <method old="isValidUri(Landroid/net/Uri;)Z" new="m_Sb"/>
   <method old="requestAccessToken(Ljava/lang/String;)Lcom/xabber/android/data/account/OAuthResult;" new="m_rc"/>
   <method old="requestRefreshToken(Ljava/lang/String;)Ljava/lang/String;" new="m_SB"/>
  </class>
  <class old="com.xabber.xmpp.delay.Delay" new="wy.c_hB">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getDelay(Lorg/jivesoftware/smack/packet/Packet;)Ljava/util/Date;" new="m_Lda"/>
   <method old="isOfflineMessage(Ljava/lang/String;Lorg/jivesoftware/smack/packet/Packet;)Z" new="m_dAa"/>
  </class>
  <class old="org.xbill.DNS.UNKRecord" new="org.xbill.DNS.c_D">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getData()[B" new="m_tD"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="data [B" new="f_m"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="serialVersionUID J" new="f_e"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smack.ReconnectionManager" new="org.jivesoftware.smack.ReconnectionManager">
   <method old="access$100(Lorg/jivesoftware/smack/ReconnectionManager;)I" new="m_rW"/>
   <method old="access$200(Lorg/jivesoftware/smack/ReconnectionManager;)Z" new="m_ev"/>
   <method old="access$300(Lorg/jivesoftware/smack/ReconnectionManager;)Lorg/jivesoftware/smack/Connection;" new="m_Vx"/>
   <method old="connectionClosed()V" new="m_r"/>
   <method old="connectionClosedOnError(Ljava/lang/Exception;)V" new="m_U"/>
   <method old="isReconnectionAllowed()Z" new="m_yt"/>
   <method old="notifyAttemptToReconnectIn(I)V" new="m_kU"/>
   <method old="notifyReconnectionFailed(Ljava/lang/Exception;)V" new="m_sW"/>
   <method old="reconnect()V" new="m_Gv"/>
   <method old="reconnectingIn(I)V" new="m_Z"/>
   <method old="reconnectionFailed(Ljava/lang/Exception;)V" new="m_S"/>
   <method old="reconnectionSuccessful()V" new="m_W"/>
   <field old="connection Lorg/jivesoftware/smack/Connection;" new="f_d"/>
   <field old="done Z" new="f_e"/>
   <field old="randomBase I" new="f_b"/>
   <field old="reconnectionThread Ljava/lang/Thread;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.intent.BaseIntentBuilder" new="wy.c_tb">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="build()Landroid/content/Intent;" new="m_oIa"/>
   <field old="cls Ljava/lang/Class;" new="f_m"/>
   <field old="context Landroid/content/Context;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smack.provider.ProviderManager" new="wy.c_Ka">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="addExtensionProvider(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V" new="m_mT"/>
   <method old="addIQProvider(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V" new="m_nu"/>
   <method old="getClassLoaders()[Ljava/lang/ClassLoader;" new="m_ST"/>
   <method old="getExtensionProvider(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;" new="m_OR"/>
   <method old="getExtensionProviders()Ljava/util/Collection;" new="m_US"/>
   <method old="getIQProvider(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;" new="m_Ot"/>
   <method old="getIQProviders()Ljava/util/Collection;" new="m_WR"/>
   <method old="getInstance()Lorg/jivesoftware/smack/provider/ProviderManager;" new="m_Xr"/>
   <method old="getProviderKey(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" new="m_wP"/>
   <method old="initialize()V" new="m_wR"/>
   <method old="removeExtensionProvider(Ljava/lang/String;Ljava/lang/String;)V" new="m_ZR"/>
   <method old="removeIQProvider(Ljava/lang/String;Ljava/lang/String;)V" new="m_Xu"/>
   <method old="setInstance(Lorg/jivesoftware/smack/provider/ProviderManager;)V" new="m_bT"/>
   <field old="extensionProviders Ljava/util/Map;" new="f_e"/>
   <field old="instance Lorg/jivesoftware/smack/provider/ProviderManager;" new="f_m"/>
   <field old="iqProviders Ljava/util/Map;" new="f_b"/>
  </class>
  <class old="com.xabber.xmpp.wlm.XMessengerOAuth2" new="wy.c_db">
   <method old="authenticate()V" new="m_ls"/>
   <method old="authenticate(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_Pd"/>
   <method old="authenticate(Ljava/lang/String;Ljava/lang/String;Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;)V" new="m_eC"/>
   <method old="challengeReceived(Ljava/lang/String;)V" new="m_vt"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getSASLAuthentication()Lorg/jivesoftware/smack/SASLAuthentication;" new="m_Gt"/>
   <method old="handle([Lorg/apache/harmony/javax/security/auth/callback/Callback;)V" new="m_Jb"/>
   <field old="authenticationId Ljava/lang/String;" new="f_e"/>
   <field old="hostname Ljava/lang/String;" new="f_B"/>
   <field old="password Ljava/lang/String;" new="f_m"/>
   <field old="sc Lorg/apache/harmony/javax/security/sasl/SaslClient;" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.extension.muc.RoomTable" new="com.xabber.android.data.extension.muc.RoomTable">
   <method old="clear()V" new="m_EA"/>
   <method old="create(Landroid/database/sqlite/SQLiteDatabase;)V" new="m_AB"/>
   <method old="getAccount(Landroid/database/Cursor;)Ljava/lang/String;" new="m_Jea"/>
   <method old="getId(Landroid/database/Cursor;)J" new="m_WFa"/>
   <method old="getInstance()Lcom/xabber/android/data/extension/muc/RoomTable;" new="m_Xr"/>
   <method old="getListOrder()Ljava/lang/String;" new="m_YDa"/>
   <method old="getNickname(Landroid/database/Cursor;)Ljava/lang/String;" new="m_HHa"/>
   <method old="getPassword(Landroid/database/Cursor;)Ljava/lang/String;" new="m_Dia"/>
   <method old="getProjection()[Ljava/lang/String;" new="m_AFa"/>
   <method old="getRoom(Landroid/database/Cursor;)Ljava/lang/String;" new="m_GHa"/>
   <method old="getTableName()Ljava/lang/String;" new="m_dga"/>
   <method old="list()Landroid/database/Cursor;" new="m_wEa"/>
   <method old="migrate(Landroid/database/sqlite/SQLiteDatabase;I)V" new="m_Cd"/>
   <method old="needJoin(Landroid/database/Cursor;)Z" new="m_qHa"/>
   <method old="remove(Ljava/lang/String;Ljava/lang/String;)V" new="m_cFa"/>
   <method old="removeAccount(Ljava/lang/String;)V" new="m_YEa"/>
   <method old="write(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V" new="m_RIa"/>
   <field old="NAME Ljava/lang/String;" new="f_e"/>
   <field old="PROJECTION [Ljava/lang/String;" new="f_B"/>
   <field old="databaseManager Lcom/xabber/android/data/DatabaseManager;" new="f_m"/>
   <field old="instance Lcom/xabber/android/data/extension/muc/RoomTable;" new="f_d"/>
   <field old="writeLock Ljava/lang/Object;" new="f_b"/>
   <field old="writeStatement Landroid/database/sqlite/SQLiteStatement;" new="f_j"/>
  </class>
  <class old="com.xabber.xmpp.PacketExtension" new="com.xabber.xmpp.c_j">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="serializeContent(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_Fb"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
  </class>
  <class old="com.xabber.android.classic.R$style" new="com.xabber.android.classic.R$style">
   <field old="ChatHeader I" new="ChatHeader"/>
   <field old="ChatHeader_Delay I" new="ChatHeader_Delay"/>
   <field old="ChatHeader_Name I" new="ChatHeader_Name"/>
   <field old="ChatHeader_Time I" new="ChatHeader_Time"/>
   <field old="ChatInfo I" new="ChatInfo"/>
   <field old="ChatInfo_Info I" new="ChatInfo_Info"/>
   <field old="ChatInfo_Warning I" new="ChatInfo_Warning"/>
   <field old="ChatList I" new="ChatList"/>
   <field old="ChatList_Normal I" new="ChatList_Normal"/>
   <field old="ChatList_Notification I" new="ChatList_Notification"/>
   <field old="ChatRead I" new="ChatRead"/>
   <field old="ChatText I" new="ChatText"/>
   <field old="ChatText_Large I" new="ChatText_Large"/>
   <field old="ChatText_Normal I" new="ChatText_Normal"/>
   <field old="ChatText_Small I" new="ChatText_Small"/>
   <field old="ChatText_XLarge I" new="ChatText_XLarge"/>
   <field old="NotificationText I" new="NotificationText"/>
   <field old="NotificationText2 I" new="NotificationText2"/>
   <field old="NotificationTitle I" new="NotificationTitle"/>
   <field old="OccupantList I" new="OccupantList"/>
   <field old="OccupantList_Moderator I" new="OccupantList_Moderator"/>
   <field old="OccupantList_Participant I" new="OccupantList_Participant"/>
   <field old="OccupantList_Visitor I" new="OccupantList_Visitor"/>
   <field old="Theme I" new="Theme"/>
   <field old="Theme_Dark I" new="Theme_Dark"/>
   <field old="Theme_Dark_NoTitleBar I" new="Theme_Dark_NoTitleBar"/>
   <field old="Theme_Light I" new="Theme_Light"/>
   <field old="Theme_Light_NoTitleBar I" new="Theme_Light_NoTitleBar"/>
   <field old="Theme_NoTitleBar I" new="Theme_NoTitleBar"/>
  </class>
  <class old="com.xabber.xmpp.archive.To" new="com.xabber.xmpp.archive.c_m">
   <method old="getBody()Ljava/lang/String;" new="m_St"/>
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getJid()Ljava/lang/String;" new="m_tL"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getSecs()Ljava/lang/Integer;" new="m_RBa"/>
   <method old="getUtc()Ljava/util/Date;" new="m_mj"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="setBody(Ljava/lang/String;)V" new="m_lt"/>
   <method old="setJid(Ljava/lang/String;)V" new="m_AJ"/>
   <method old="setName(Ljava/lang/String;)V" new="m_Xl"/>
   <method old="setSecs(Ljava/lang/Integer;)V" new="m_wAa"/>
   <method old="setUtc(Ljava/util/Date;)V" new="m_oz"/>
   <field old="BODY_NAME Ljava/lang/String;" new="f_l"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_e"/>
   <field old="JID_ATTRIBUTE Ljava/lang/String;" new="f_I"/>
   <field old="NAME_ATTRIBUTE Ljava/lang/String;" new="f_d"/>
   <field old="SECS_ATTRIBUTE Ljava/lang/String;" new="f_j"/>
   <field old="UTC_ATTRIBUTE Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.packet.Message$1" new="org.jivesoftware.smack.packet.c_a">
  </class>
  <class old="org.jivesoftware.smack.util.collections.AbstractMapEntry" new="org.jivesoftware.smack.util.collections.c_k">
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getKey()Ljava/lang/Object;" new="getKey"/>
   <method old="getValue()Ljava/lang/Object;" new="getValue"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="setValue(Ljava/lang/Object;)Ljava/lang/Object;" new="setValue"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="key Ljava/lang/Object;" new="f_e"/>
   <field old="value Ljava/lang/Object;" new="f_m"/>
  </class>
  <class old="org.apache.qpid.management.common.sasl.PlainSaslClient" new="wy.c_Wa">
   <method old="clearPassword()V" new="m_zw"/>
   <method old="dispose()V" new="m_xA"/>
   <method old="evaluateChallenge([B)[B" new="m_YB"/>
   <method old="finalize()V" new="finalize"/>
   <method old="getMechanismName()Ljava/lang/String;" new="m_qC"/>
   <method old="getNegotiatedProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_IB"/>
   <method old="getUserInfo()[Ljava/lang/Object;" new="m_lU"/>
   <method old="hasInitialResponse()Z" new="m_kd"/>
   <method old="isComplete()Z" new="m_kc"/>
   <method old="unwrap([BII)[B" new="m_Eb"/>
   <method old="wrap([BII)[B" new="m_hC"/>
   <field old="SEPARATOR B" new="f_b"/>
   <field old="authenticationID Ljava/lang/String;" new="f_j"/>
   <field old="authorizationID Ljava/lang/String;" new="f_B"/>
   <field old="cbh Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;" new="f_d"/>
   <field old="completed Z" new="f_m"/>
   <field old="password [B" new="f_e"/>
  </class>
  <class old="com.xabber.android.ui.adapter.ChatContactInflater$ViewHolder" new="com.xabber.android.ui.adapter.c_w">
   <field old="avatar Landroid/widget/ImageView;" new="f_e"/>
   <field old="clientSoftware Landroid/widget/ImageView;" new="f_b"/>
   <field old="color Landroid/widget/ImageView;" new="f_B"/>
   <field old="name Landroid/widget/TextView;" new="f_m"/>
   <field old="panel Landroid/view/View;" new="f_m"/>
   <field old="panel Landroid/widget/RelativeLayout;" new="f_b"/>
   <field old="shadow Landroid/widget/ImageView;" new="f_d"/>
   <field old="status Landroid/widget/TextView;" new="f_j"/>
   <field old="statusMode Landroid/widget/ImageView;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.adapter.BaseContactInflater$ViewHolder" new="com.xabber.android.ui.adapter.c_C">
   <field old="avatar Landroid/widget/ImageView;" new="f_e"/>
   <field old="color Landroid/widget/ImageView;" new="f_B"/>
   <field old="name Landroid/widget/TextView;" new="f_m"/>
   <field old="panel Landroid/widget/RelativeLayout;" new="f_b"/>
   <field old="shadow Landroid/widget/ImageView;" new="f_d"/>
   <field old="status Landroid/widget/TextView;" new="f_j"/>
  </class>
  <class old="org.jivesoftware.smack.packet.PrivacyItem$Type" new="org.jivesoftware.smack.packet.PrivacyItem$Type">
   <method old="valueOf(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PrivacyItem$Type;" new="valueOf"/>
   <method old="values()[Lorg/jivesoftware/smack/packet/PrivacyItem$Type;" new="values"/>
   <field old="$VALUES [Lorg/jivesoftware/smack/packet/PrivacyItem$Type;" new="f_d"/>
   <field old="group Lorg/jivesoftware/smack/packet/PrivacyItem$Type;" new="f_m"/>
   <field old="jid Lorg/jivesoftware/smack/packet/PrivacyItem$Type;" new="f_b"/>
   <field old="subscription Lorg/jivesoftware/smack/packet/PrivacyItem$Type;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.DiscoverInfo$Feature" new="org.jivesoftware.smackx.packet.c_ga">
   <method old="getVar()Ljava/lang/String;" new="m_gL"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="variable Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.util.encoders.Hex" new="wy.c_rd">
   <method old="decode(Ljava/lang/String;)[B" new="m_ru"/>
   <method old="decode(Ljava/lang/String;Ljava/io/OutputStream;)I" new="m_sd"/>
   <method old="decode([B)[B" new="m_Wy"/>
   <method old="encode([B)[B" new="m_tX"/>
   <method old="encode([BII)[B" new="m_mY"/>
   <method old="encode([BIILjava/io/OutputStream;)I" new="m_kB"/>
   <method old="encode([BLjava/io/OutputStream;)I" new="m_Tz"/>
   <field old="encoder Lnet/java/otr4j/bouncycastle/util/encoders/Encoder;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.provider.IQProvider" new="wy.c_E">
   <method old="parseIQ(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/IQ;" new="m_g"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.callback.LanguageCallback" new="wy.c_Tc">
   <method old="getLocale()Ljava/util/Locale;" new="m_iw"/>
   <method old="setLocale(Ljava/util/Locale;)V" new="m_Mv"/>
   <field old="locale Ljava/util/Locale;" new="f_e"/>
   <field old="serialVersionUID J" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.XMPPConnection" new="org.jivesoftware.smack.c_a">
   <method old="addConnectionCreationListener(Lorg/jivesoftware/smack/ConnectionCreationListener;)V" new="m_Vu"/>
   <method old="addConnectionListener(Lorg/jivesoftware/smack/ConnectionListener;)V" new="m_ms"/>
   <method old="addPacketInterceptor(Lorg/jivesoftware/smack/PacketInterceptor;Lorg/jivesoftware/smack/filter/PacketFilter;)V" new="m_mu"/>
   <method old="addPacketListener(Lorg/jivesoftware/smack/PacketListener;Lorg/jivesoftware/smack/filter/PacketFilter;)V" new="m_SS"/>
   <method old="addPacketSendingListener(Lorg/jivesoftware/smack/PacketListener;Lorg/jivesoftware/smack/filter/PacketFilter;)V" new="m_uR"/>
   <method old="addPacketWriterInterceptor(Lorg/jivesoftware/smack/PacketInterceptor;Lorg/jivesoftware/smack/filter/PacketFilter;)V" new="m_uT"/>
   <method old="addPacketWriterListener(Lorg/jivesoftware/smack/PacketListener;Lorg/jivesoftware/smack/filter/PacketFilter;)V" new="m_jS"/>
   <method old="connect()V" new="m_FT"/>
   <method old="connectUsingConfiguration(Lorg/jivesoftware/smack/ConnectionConfiguration;)V" new="m_gt"/>
   <method old="createPacketCollector(Lorg/jivesoftware/smack/filter/PacketFilter;)Lorg/jivesoftware/smack/PacketCollector;" new="m_gS"/>
   <method old="disconnect()V" new="m_Lu"/>
   <method old="disconnect(Lorg/jivesoftware/smack/packet/Presence;)V" new="m_Mt"/>
   <method old="enableEncryption(Z)V" new="m_sR"/>
   <method old="firePacketInterceptors(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_au"/>
   <method old="firePacketSendingListeners(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_Ht"/>
   <method old="forceAddConnectionListener(Lorg/jivesoftware/smack/ConnectionListener;)V" new="m_Xt"/>
   <method old="getAccountManager()Lorg/jivesoftware/smack/AccountManager;" new="m_Pu"/>
   <method old="getCapsNode()Ljava/lang/String;" new="m_ht"/>
   <method old="getChatManager()Lorg/jivesoftware/smack/ChatManager;" new="m_Uu"/>
   <method old="getConfiguration()Lorg/jivesoftware/smack/ConnectionConfiguration;" new="m_ps"/>
   <method old="getConnectionCreationListeners()Ljava/util/Collection;" new="m_Ms"/>
   <method old="getConnectionID()Ljava/lang/String;" new="m_Wu"/>
   <method old="getConnectionListeners()Ljava/util/Collection;" new="m_oR"/>
   <method old="getHost()Ljava/lang/String;" new="m_vD"/>
   <method old="getPacketCollectors()Ljava/util/Collection;" new="m_tu"/>
   <method old="getPacketInterceptors()Ljava/util/Map;" new="m_BU"/>
   <method old="getPacketListeners()Ljava/util/Map;" new="m_Yu"/>
   <method old="getPacketSendingListeners()Ljava/util/Map;" new="m_ct"/>
   <method old="getPort()I" new="m_Jg"/>
   <method old="getRoster()Lorg/jivesoftware/smack/Roster;" new="m_TS"/>
   <method old="getRosterImmediately()Lorg/jivesoftware/smack/Roster;" new="m_zs"/>
   <method old="getSASLAuthentication()Lorg/jivesoftware/smack/SASLAuthentication;" new="m_Gt"/>
   <method old="getServiceName()Ljava/lang/String;" new="m_ys"/>
   <method old="getUser()Ljava/lang/String;" new="m_TA"/>
   <method old="hasAvailableCompressionMethod(Ljava/lang/String;)Z" new="m_Kt"/>
   <method old="initConnection()V" new="m_it"/>
   <method old="initDebugger()V" new="m_aS"/>
   <method old="initReaderAndWriter()V" new="m_XS"/>
   <method old="isAlive()Z" new="m_UT"/>
   <method old="isAnonymous()Z" new="m_HT"/>
   <method old="isAuthenticated()Z" new="m_zS"/>
   <method old="isConnected()Z" new="m_ZS"/>
   <method old="isReconnectionAllowed()Z" new="m_yt"/>
   <method old="isSecureConnection()Z" new="m_Xs"/>
   <method old="isSendPresence()Z" new="m_Mq"/>
   <method old="isUsingCompression()Z" new="m_Mu"/>
   <method old="isUsingSSL()Z" new="m_Ut"/>
   <method old="isUsingTLS()Z" new="m_OS"/>
   <method old="login(Ljava/lang/String;Ljava/lang/String;)V" new="m_YT"/>
   <method old="login(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_Yt"/>
   <method old="loginAnonymously()V" new="m_NS"/>
   <method old="proceedTLSReceived()V" new="m_pt"/>
   <method old="removeConnectionCreationListener(Lorg/jivesoftware/smack/ConnectionCreationListener;)V" new="m_js"/>
   <method old="removeConnectionListener(Lorg/jivesoftware/smack/ConnectionListener;)V" new="m_Nu"/>
   <method old="removePacketCollector(Lorg/jivesoftware/smack/PacketCollector;)V" new="m_FS"/>
   <method old="removePacketInterceptor(Lorg/jivesoftware/smack/PacketInterceptor;)V" new="m_cS"/>
   <method old="removePacketListener(Lorg/jivesoftware/smack/PacketListener;)V" new="m_uu"/>
   <method old="removePacketSendingListener(Lorg/jivesoftware/smack/PacketListener;)V" new="m_qt"/>
   <method old="removePacketWriterInterceptor(Lorg/jivesoftware/smack/PacketInterceptor;)V" new="m_ns"/>
   <method old="removePacketWriterListener(Lorg/jivesoftware/smack/PacketListener;)V" new="m_hT"/>
   <method old="requestStreamCompression()V" new="m_VR"/>
   <method old="sendPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_ES"/>
   <method old="setAvailableCompressionMethods(Ljava/util/Collection;)V" new="m_Hs"/>
   <method old="setRosterStorage(Lorg/jivesoftware/smack/RosterStorage;)V" new="m_Du"/>
   <method old="setWasAuthenticated(Z)V" new="m_BT"/>
   <method old="shutdown(Lorg/jivesoftware/smack/packet/Presence;)V" new="m_dS"/>
   <method old="startStreamCompression()V" new="m_yS"/>
   <method old="startTLSReceived(Z)V" new="m_tS"/>
   <method old="streamCompressionDenied()V" new="m_DT"/>
   <method old="useCompression()Z" new="m_AT"/>
   <field old="DEBUG_ENABLED Z" new="f_I"/>
   <field old="SECURE_RANDOM Ljava/security/SecureRandom;" new="f_M"/>
   <field old="anonymous Z" new="f_k"/>
   <field old="authenticated Z" new="f_b"/>
   <field old="chatManager Lorg/jivesoftware/smack/ChatManager;" new="f_B"/>
   <field old="collectors Ljava/util/Collection;" new="f_l"/>
   <field old="compressionMethods Ljava/util/Collection;" new="f_K"/>
   <field old="config Lorg/jivesoftware/smack/ConnectionConfiguration;" new="f_G"/>
   <field old="connected Z" new="f_d"/>
   <field old="connectionCounterValue I" new="f_D"/>
   <field old="connectionID Ljava/lang/String;" new="f_J"/>
   <field old="connectionListeners Ljava/util/Collection;" new="f_f"/>
   <field old="debugger Lorg/jivesoftware/smack/debugger/SmackDebugger;" new="f_k"/>
   <field old="interceptors Ljava/util/Map;" new="f_m"/>
   <field old="packetReader Lorg/jivesoftware/smack/PacketReader;" new="f_e"/>
   <field old="packetWriter Lorg/jivesoftware/smack/PacketWriter;" new="f_f"/>
   <field old="reader Ljava/io/Reader;" new="f_d"/>
   <field old="recvListeners Ljava/util/Map;" new="f_b"/>
   <field old="roster Lorg/jivesoftware/smack/Roster;" new="f_D"/>
   <field old="rosterStorage Lorg/jivesoftware/smack/RosterStorage;" new="f_M"/>
   <field old="saslAuthentication Lorg/jivesoftware/smack/SASLAuthentication;" new="f_g"/>
   <field old="sendListeners Ljava/util/Map;" new="f_H"/>
   <field old="socket Ljava/net/Socket;" new="f_I"/>
   <field old="user Ljava/lang/String;" new="f_G"/>
   <field old="usingCompression Z" new="f_m"/>
   <field old="usingSSL Z" new="f_B"/>
   <field old="usingTLS Z" new="f_l"/>
   <field old="wasAuthenticated Z" new="f_j"/>
   <field old="writer Ljava/io/Writer;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.MUCUser" new="org.jivesoftware.smackx.packet.c_Z">
   <method old="getDecline()Lorg/jivesoftware/smackx/packet/MUCUser$Decline;" new="m_NK"/>
   <method old="getDestroy()Lorg/jivesoftware/smackx/packet/MUCUser$Destroy;" new="m_DK"/>
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getInvite()Lorg/jivesoftware/smackx/packet/MUCUser$Invite;" new="m_Dk"/>
   <method old="getItem()Lorg/jivesoftware/smackx/packet/MUCUser$Item;" new="m_mJ"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="getPassword()Ljava/lang/String;" new="m_rj"/>
   <method old="getStatus()Lorg/jivesoftware/smackx/packet/MUCUser$Status;" new="m_yL"/>
   <method old="setDecline(Lorg/jivesoftware/smackx/packet/MUCUser$Decline;)V" new="m_yl"/>
   <method old="setDestroy(Lorg/jivesoftware/smackx/packet/MUCUser$Destroy;)V" new="m_Ik"/>
   <method old="setInvite(Lorg/jivesoftware/smackx/packet/MUCUser$Invite;)V" new="m_YL"/>
   <method old="setItem(Lorg/jivesoftware/smackx/packet/MUCUser$Item;)V" new="m_HJ"/>
   <method old="setPassword(Ljava/lang/String;)V" new="m_RK"/>
   <method old="setStatus(Lorg/jivesoftware/smackx/packet/MUCUser$Status;)V" new="m_Pk"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="decline Lorg/jivesoftware/smackx/packet/MUCUser$Decline;" new="f_B"/>
   <field old="destroy Lorg/jivesoftware/smackx/packet/MUCUser$Destroy;" new="f_j"/>
   <field old="invite Lorg/jivesoftware/smackx/packet/MUCUser$Invite;" new="f_d"/>
   <field old="item Lorg/jivesoftware/smackx/packet/MUCUser$Item;" new="f_e"/>
   <field old="password Ljava/lang/String;" new="f_m"/>
   <field old="status Lorg/jivesoftware/smackx/packet/MUCUser$Status;" new="f_b"/>
  </class>
  <class old="org.xbill.DNS.MFRecord" new="org.xbill.DNS.c_Da">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getMailAgent()Lorg/xbill/DNS/Name;" new="m_uG"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getSingleName()Lorg/xbill/DNS/Name;" new="m_NH"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="serialVersionUID J" new="f_m"/>
   <field old="singleName Lorg/xbill/DNS/Name;" new="f_m"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smack.sasl.SASLMechanism" new="wy.c_S">
   <method old="authenticate()V" new="m_ls"/>
   <method old="authenticate(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_Pd"/>
   <method old="authenticate(Ljava/lang/String;Ljava/lang/String;Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;)V" new="m_eC"/>
   <method old="challengeReceived(Ljava/lang/String;)V" new="m_vt"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getSASLAuthentication()Lorg/jivesoftware/smack/SASLAuthentication;" new="m_Gt"/>
   <method old="handle([Lorg/apache/harmony/javax/security/auth/callback/Callback;)V" new="m_Jb"/>
   <field old="authenticationId Ljava/lang/String;" new="f_e"/>
   <field old="hostname Ljava/lang/String;" new="f_B"/>
   <field old="password Ljava/lang/String;" new="f_m"/>
   <field old="saslAuthentication Lorg/jivesoftware/smack/SASLAuthentication;" new="f_d"/>
   <field old="sc Lorg/apache/harmony/javax/security/sasl/SaslClient;" new="f_b"/>
  </class>
  <class old="com.xabber.android.ui.adapter.StatusModeAdapter" new="com.xabber.android.ui.adapter.c_m">
   <method old="getCount()I" new="getCount"/>
   <method old="getDropDownView(ILandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;" new="getDropDownView"/>
   <method old="getItem(I)Ljava/lang/Object;" new="getItem"/>
   <method old="getItemId(I)J" new="getItemId"/>
   <method old="getView(ILandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;" new="getView"/>
   <method old="updateView(ILandroid/view/View;)V" new="m_eca"/>
   <field old="activity Landroid/app/Activity;" new="f_m"/>
   <field old="statusModes Ljava/util/ArrayList;" new="f_e"/>
  </class>
  <class old="org.apache.harmony.javax.security.sasl.SaslClient" new="org.apache.harmony.javax.security.sasl.c_E">
   <method old="dispose()V" new="m_xA"/>
   <method old="evaluateChallenge([B)[B" new="m_YB"/>
   <method old="getMechanismName()Ljava/lang/String;" new="m_qC"/>
   <method old="getNegotiatedProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_IB"/>
   <method old="hasInitialResponse()Z" new="m_kd"/>
   <method old="isComplete()Z" new="m_kc"/>
   <method old="unwrap([BII)[B" new="m_Eb"/>
   <method old="wrap([BII)[B" new="m_hC"/>
  </class>
  <class old="org.jivesoftware.smackx.filetransfer.FileTransferRequest" new="org.jivesoftware.smackx.filetransfer.c_b">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="accept()Lorg/jivesoftware/smackx/filetransfer/IncomingFileTransfer;" new="m_Ja"/>
   <method old="getDescription()Ljava/lang/String;" new="m_XK"/>
   <method old="getFileName()Ljava/lang/String;" new="m_Hm"/>
   <method old="getFileSize()J" new="m_HO"/>
   <method old="getMimeType()Ljava/lang/String;" new="m_ak"/>
   <method old="getRequestor()Ljava/lang/String;" new="m_In"/>
   <method old="getStreamID()Ljava/lang/String;" new="m_KM"/>
   <method old="getStreamInitiation()Lorg/jivesoftware/smackx/packet/StreamInitiation;" new="m_gO"/>
   <method old="reject()V" new="m_ba"/>
   <field old="manager Lorg/jivesoftware/smackx/filetransfer/FileTransferManager;" new="f_e"/>
   <field old="streamInitiation Lorg/jivesoftware/smackx/packet/StreamInitiation;" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.vcard.NameInflater" new="com.xabber.xmpp.vcard.c_I">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getInstance()Lcom/xabber/xmpp/vcard/NameInflater;" new="m_Xr"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/VCard;)Z" new="m_dy"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <field old="instance Lcom/xabber/xmpp/vcard/NameInflater;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.filetransfer.IBBTransferNegotiator$IBBOpenSidFilter" new="org.jivesoftware.smackx.filetransfer.c_d">
   <method old="accept(Lorg/jivesoftware/smack/packet/Packet;)Z" new="m_x"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="packetType Ljava/lang/Class;" new="f_m"/>
   <field old="sessionID Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.account.OnAccountRemovedListener" new="com.xabber.android.data.account.c_A">
   <method old="onAccountRemoved(Lcom/xabber/android/data/account/AccountItem;)V" new="m_kb"/>
  </class>
  <class old="com.xabber.xmpp.archive.Retrieve" new="com.xabber.xmpp.archive.Retrieve">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getRsm()Lcom/xabber/xmpp/rsm/Set;" new="m_yCa"/>
   <method old="getStart()Ljava/util/Date;" new="m_vC"/>
   <method old="getStartString()Ljava/lang/String;" new="m_lC"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getWith()Ljava/lang/String;" new="m_ib"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="serializeContent(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_Fb"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setRsm(Lcom/xabber/xmpp/rsm/Set;)V" new="m_dba"/>
   <method old="setStart(Ljava/util/Date;)V" new="m_SBa"/>
   <method old="setStartString(Ljava/lang/String;)V" new="m_tca"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="setWith(Ljava/lang/String;)V" new="m_mda"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_m"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="NAMESPACE Ljava/lang/String;" new="f_j"/>
   <field old="START_ATTRIBUTE Ljava/lang/String;" new="f_b"/>
   <field old="WITH_ATTRIBUTE Ljava/lang/String;" new="f_B"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="rsm Lcom/xabber/xmpp/rsm/Set;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.provider.HeadersProvider" new="org.jivesoftware.smackx.provider.c_K">
   <method old="createReturnExtension(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljava/util/List;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_mK"/>
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_I"/>
  </class>
  <class old="com.xabber.xmpp.archive.RemovedProvider" new="com.xabber.xmpp.archive.RemovedProvider">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/archive/Removed;" new="m_ZZ"/>
   <method old="getInstance()Lcom/xabber/xmpp/archive/RemovedProvider;" new="m_Xr"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/archive/AbstractModified;)Lcom/xabber/xmpp/archive/AbstractModified;" new="m_Mba"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
   <field old="instance Lcom/xabber/xmpp/archive/RemovedProvider;" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.muc.Affiliation" new="com.xabber.xmpp.muc.Affiliation">
   <method old="fromString(Ljava/lang/String;)Lcom/xabber/xmpp/muc/Affiliation;" new="m_tc"/>
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/xmpp/muc/Affiliation;" new="valueOf"/>
   <method old="values()[Lcom/xabber/xmpp/muc/Affiliation;" new="values"/>
   <field old="$VALUES [Lcom/xabber/xmpp/muc/Affiliation;" new="f_d"/>
   <field old="admin Lcom/xabber/xmpp/muc/Affiliation;" new="f_b"/>
   <field old="member Lcom/xabber/xmpp/muc/Affiliation;" new="f_j"/>
   <field old="none Lcom/xabber/xmpp/muc/Affiliation;" new="f_e"/>
   <field old="outcast Lcom/xabber/xmpp/muc/Affiliation;" new="f_m"/>
   <field old="owner Lcom/xabber/xmpp/muc/Affiliation;" new="f_B"/>
  </class>
  <class old="org.jivesoftware.smackx.MessageEventNotificationListener" new="org.jivesoftware.smackx.c_A">
   <method old="cancelledNotification(Ljava/lang/String;Ljava/lang/String;)V" new="m_pa"/>
   <method old="composingNotification(Ljava/lang/String;Ljava/lang/String;)V" new="m_ta"/>
   <method old="deliveredNotification(Ljava/lang/String;Ljava/lang/String;)V" new="m_ra"/>
   <method old="displayedNotification(Ljava/lang/String;Ljava/lang/String;)V" new="m_Oa"/>
   <method old="offlineNotification(Ljava/lang/String;Ljava/lang/String;)V" new="m_sa"/>
  </class>
  <class old="org.jivesoftware.smack.sasl.SASLAnonymous" new="wy.c_la">
   <method old="authenticate()V" new="m_ls"/>
   <method old="authenticate(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_Pd"/>
   <method old="authenticate(Ljava/lang/String;Ljava/lang/String;Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;)V" new="m_eC"/>
   <method old="challengeReceived(Ljava/lang/String;)V" new="m_vt"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getSASLAuthentication()Lorg/jivesoftware/smack/SASLAuthentication;" new="m_Gt"/>
   <method old="handle([Lorg/apache/harmony/javax/security/auth/callback/Callback;)V" new="m_Jb"/>
   <field old="authenticationId Ljava/lang/String;" new="f_e"/>
   <field old="hostname Ljava/lang/String;" new="f_B"/>
   <field old="password Ljava/lang/String;" new="f_m"/>
   <field old="sc Lorg/apache/harmony/javax/security/sasl/SaslClient;" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smack.filter.OrFilter" new="wy.c_ca">
   <method old="accept(Lorg/jivesoftware/smack/packet/Packet;)Z" new="m_x"/>
   <method old="addFilter(Lorg/jivesoftware/smack/filter/PacketFilter;)V" new="m_MT"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="filters [Lorg/jivesoftware/smack/filter/PacketFilter;" new="f_m"/>
   <field old="size I" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.extension.otr.OTRTable" new="com.xabber.android.data.extension.otr.c_m">
   <method old="clear()V" new="m_EA"/>
   <method old="create(Landroid/database/sqlite/SQLiteDatabase;)V" new="m_AB"/>
   <method old="getAccount(Landroid/database/Cursor;)Ljava/lang/String;" new="m_Jea"/>
   <method old="getFingerprint(Landroid/database/Cursor;)Ljava/lang/String;" new="m_VGa"/>
   <method old="getInstance()Lcom/xabber/android/data/extension/otr/OTRTable;" new="m_Xr"/>
   <method old="getListOrder()Ljava/lang/String;" new="m_YDa"/>
   <method old="getProjection()[Ljava/lang/String;" new="m_AFa"/>
   <method old="getTableName()Ljava/lang/String;" new="m_dga"/>
   <method old="getUser(Landroid/database/Cursor;)Ljava/lang/String;" new="m_oDa"/>
   <method old="isVerified(Landroid/database/Cursor;)Z" new="m_uga"/>
   <method old="list()Landroid/database/Cursor;" new="m_wEa"/>
   <method old="migrate(Landroid/database/sqlite/SQLiteDatabase;I)V" new="m_Cd"/>
   <method old="remove(Ljava/lang/String;Ljava/lang/String;)V" new="m_cFa"/>
   <method old="removeAccount(Ljava/lang/String;)V" new="m_YEa"/>
   <method old="write(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V" new="m_nia"/>
   <field old="NAME Ljava/lang/String;" new="f_b"/>
   <field old="PROJECTION [Ljava/lang/String;" new="f_B"/>
   <field old="databaseManager Lcom/xabber/android/data/DatabaseManager;" new="f_j"/>
   <field old="instance Lcom/xabber/android/data/extension/otr/OTRTable;" new="f_d"/>
   <field old="writeLock Ljava/lang/Object;" new="f_m"/>
   <field old="writeStatement Landroid/database/sqlite/SQLiteStatement;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.connection.Host" new="com.xabber.android.data.connection.c_K">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="convert(Ljava/lang/Object;)Ljava/lang/Object;" new="m_LKa"/>
   <method old="convert(Ljava/net/InetAddress;)Ljava/net/InetAddress;" new="m_eLa"/>
   <method old="getNext()Ljava/lang/Object;" new="m_Ui"/>
   <method old="update(Ljava/util/List;)V" new="m_aKa"/>
   <method old="update([Ljava/lang/Object;)V" new="m_bJa"/>
   <field old="pool Ljava/util/Queue;" new="f_e"/>
   <field old="used Ljava/util/Queue;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamListener" new="org.jivesoftware.smackx.bytestreams.socks5.c_c">
   <method old="incomingBytestreamRequest(Lorg/jivesoftware/smackx/bytestreams/BytestreamRequest;)V" new="m_ya"/>
   <method old="incomingBytestreamRequest(Lorg/jivesoftware/smackx/bytestreams/socks5/Socks5BytestreamRequest;)V" new="m_fM"/>
  </class>
  <class old="org.jivesoftware.smack.PrivacyListManager" new="org.jivesoftware.smack.c_l">
   <method old="access$100(Lorg/jivesoftware/smack/PrivacyListManager;)Lorg/jivesoftware/smack/Connection;" new="m_TW"/>
   <method old="access$200()Ljava/util/Map;" new="m_vq"/>
   <method old="access$300(Lorg/jivesoftware/smack/PrivacyListManager;)Ljava/util/List;" new="m_pW"/>
   <method old="addListener(Lorg/jivesoftware/smack/PrivacyListListener;)V" new="m_Sx"/>
   <method old="createPrivacyList(Ljava/lang/String;Ljava/util/List;)V" new="m_cv"/>
   <method old="declineActiveList()V" new="m_Sw"/>
   <method old="declineDefaultList()V" new="m_WU"/>
   <method old="deletePrivacyList(Ljava/lang/String;)V" new="m_cU"/>
   <method old="getActiveList()Lorg/jivesoftware/smack/PrivacyList;" new="m_aW"/>
   <method old="getDefaultList()Lorg/jivesoftware/smack/PrivacyList;" new="m_Nv"/>
   <method old="getInstanceFor(Lorg/jivesoftware/smack/Connection;)Lorg/jivesoftware/smack/PrivacyListManager;" new="m_Rm"/>
   <method old="getPrivacyList(Ljava/lang/String;)Lorg/jivesoftware/smack/PrivacyList;" new="m_Bt"/>
   <method old="getPrivacyListItems(Ljava/lang/String;)Ljava/util/List;" new="m_Ow"/>
   <method old="getPrivacyLists()[Lorg/jivesoftware/smack/PrivacyList;" new="m_rU"/>
   <method old="getPrivacyWithListNames()Lorg/jivesoftware/smack/packet/Privacy;" new="m_VU"/>
   <method old="getRequest(Lorg/jivesoftware/smack/packet/Privacy;)Lorg/jivesoftware/smack/packet/Privacy;" new="m_Yx"/>
   <method old="getUser()Ljava/lang/String;" new="m_TA"/>
   <method old="init()V" new="m_ZG"/>
   <method old="setActiveListName(Ljava/lang/String;)V" new="m_JU"/>
   <method old="setDefaultListName(Ljava/lang/String;)V" new="m_Mw"/>
   <method old="setRequest(Lorg/jivesoftware/smack/packet/Privacy;)Lorg/jivesoftware/smack/packet/Packet;" new="m_Jv"/>
   <method old="updatePrivacyList(Ljava/lang/String;Ljava/util/List;)V" new="m_lW"/>
   <field old="connection Lorg/jivesoftware/smack/Connection;" new="f_b"/>
   <field old="instances Ljava/util/Map;" new="f_m"/>
   <field old="listeners Ljava/util/List;" new="f_e"/>
   <field old="packetFilter Lorg/jivesoftware/smack/filter/PacketFilter;" new="f_d"/>
  </class>
  <class old="com.xabber.android.ui.FingerprintViewer" new="com.xabber.android.ui.FingerprintViewer">
   <method old="createIntent(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;" new="m_CAa"/>
   <method old="getAccount(Landroid/content/Intent;)Ljava/lang/String;" new="m_lCa"/>
   <method old="getUser(Landroid/content/Intent;)Ljava/lang/String;" new="m_NCa"/>
   <method old="onAccept(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_Lc"/>
   <method old="onAccountsChanged(Ljava/util/Collection;)V" new="m_vB"/>
   <method old="onActivityResult(IILandroid/content/Intent;)V" new="onActivityResult"/>
   <method old="onCancel(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_Vb"/>
   <method old="onCheckedChanged(Landroid/widget/CompoundButton;Z)V" new="onCheckedChanged"/>
   <method old="onClick(Landroid/view/View;)V" new="onClick"/>
   <method old="onContactsChanged(Ljava/util/Collection;)V" new="m_bd"/>
   <method old="onCreate(Landroid/os/Bundle;)V" new="onCreate"/>
   <method old="onCreateDialog(I)Landroid/app/Dialog;" new="onCreateDialog"/>
   <method old="onDecline(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_ad"/>
   <method old="onDestroy()V" new="onDestroy"/>
   <method old="onNewIntent(Landroid/content/Intent;)V" new="onNewIntent"/>
   <method old="onPause()V" new="onPause"/>
   <method old="onRestoreInstanceState(Landroid/os/Bundle;)V" new="onRestoreInstanceState"/>
   <method old="onResume()V" new="onResume"/>
   <method old="onSaveInstanceState(Landroid/os/Bundle;)V" new="onSaveInstanceState"/>
   <method old="startActivity(Landroid/content/Intent;)V" new="startActivity"/>
   <method old="startActivityForResult(Landroid/content/Intent;I)V" new="startActivityForResult"/>
   <method old="update()V" new="m_fca"/>
   <method old="wrapInstallDialog(Landroid/app/AlertDialog;)V" new="m_LCa"/>
   <field old="SAVED_LOCAL_FINGERPRINT Ljava/lang/String;" new="f_k"/>
   <field old="SAVED_REMOTE_FINGERPRINT Ljava/lang/String;" new="f_e"/>
   <field old="account Ljava/lang/String;" new="f_m"/>
   <field old="copyView Landroid/view/View;" new="f_B"/>
   <field old="integrator Lcom/google/zxing/integration/android/IntentIntegrator;" new="f_f"/>
   <field old="isUpdating Z" new="f_d"/>
   <field old="localFingerprint Ljava/lang/String;" new="f_I"/>
   <field old="remoteFingerprint Ljava/lang/String;" new="f_J"/>
   <field old="scanView Landroid/view/View;" new="f_K"/>
   <field old="showView Landroid/view/View;" new="f_l"/>
   <field old="user Ljava/lang/String;" new="f_j"/>
   <field old="verifiedView Landroid/widget/CheckBox;" new="f_b"/>
  </class>
  <class old="com.xabber.xmpp.AbstractProvider" new="com.xabber.xmpp.c_B">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_I"/>
   <method old="parseIQ(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/IQ;" new="m_g"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
  </class>
  <class old="org.jivesoftware.smack.Connection$InterceptorWrapper" new="org.jivesoftware.smack.c_X">
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="notifyListener(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_TU"/>
   <field old="packetFilter Lorg/jivesoftware/smack/filter/PacketFilter;" new="f_e"/>
   <field old="packetInterceptor Lorg/jivesoftware/smack/PacketInterceptor;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.MGRecord" new="org.xbill.DNS.c_Ha">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getMailbox()Lorg/xbill/DNS/Name;" new="m_iI"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getSingleName()Lorg/xbill/DNS/Name;" new="m_NH"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="serialVersionUID J" new="f_m"/>
   <field old="singleName Lorg/xbill/DNS/Name;" new="f_m"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.SyncPacketSend" new="org.jivesoftware.smackx.packet.c_a">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getReply(Lorg/jivesoftware/smack/Connection;Lorg/jivesoftware/smack/packet/Packet;)Lorg/jivesoftware/smack/packet/Packet;" new="m_TK"/>
   <method old="getReply(Lorg/jivesoftware/smack/Connection;Lorg/jivesoftware/smack/packet/Packet;J)Lorg/jivesoftware/smack/packet/Packet;" new="m_Jj"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.StreamInitiation" new="org.jivesoftware.smackx.packet.c_e">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFeatureNegotiationForm()Lorg/jivesoftware/smackx/packet/DataForm;" new="m_Xj"/>
   <method old="getFile()Lorg/jivesoftware/smackx/packet/StreamInitiation$File;" new="m_KJ"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getMimeType()Ljava/lang/String;" new="m_ak"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getSessionID()Ljava/lang/String;" new="m_Ba"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFeatureNegotiationForm(Lorg/jivesoftware/smackx/packet/DataForm;)V" new="m_Zl"/>
   <method old="setFile(Lorg/jivesoftware/smackx/packet/StreamInitiation$File;)V" new="m_xk"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setMimeType(Ljava/lang/String;)V" new="m_kL"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setSesssionID(Ljava/lang/String;)V" new="m_oL"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="featureNegotiation Lorg/jivesoftware/smackx/packet/StreamInitiation$Feature;" new="f_b"/>
   <field old="file Lorg/jivesoftware/smackx/packet/StreamInitiation$File;" new="f_d"/>
   <field old="id Ljava/lang/String;" new="f_m"/>
   <field old="mimeType Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="org.xbill.DNS.GenericEDNSOption" new="org.xbill.DNS.c_ka">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;)Lorg/xbill/DNS/EDNSOption;" new="m_rI"/>
   <method old="fromWire([B)Lorg/xbill/DNS/EDNSOption;" new="m_Si"/>
   <method old="getCode()I" new="m_ej"/>
   <method old="getData()[B" new="m_tD"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="optionFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_XI"/>
   <method old="optionToString()Ljava/lang/String;" new="m_cG"/>
   <method old="optionToWire(Lorg/xbill/DNS/DNSOutput;)V" new="m_GH"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire()[B" new="m_tF"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;)V" new="m_ne"/>
   <field old="data [B" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.RosterGroup" new="org.jivesoftware.smack.RosterGroup">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="addEntry(Lorg/jivesoftware/smack/RosterEntry;)V" new="m_VT"/>
   <method old="addEntryLocal(Lorg/jivesoftware/smack/RosterEntry;)V" new="m_bu"/>
   <method old="contains(Ljava/lang/String;)Z" new="m_dT"/>
   <method old="contains(Lorg/jivesoftware/smack/RosterEntry;)Z" new="m_Ru"/>
   <method old="getEntries()Ljava/util/Collection;" new="m_hd"/>
   <method old="getEntry(Ljava/lang/String;)Lorg/jivesoftware/smack/RosterEntry;" new="m_gc"/>
   <method old="getEntryCount()I" new="m_nB"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="removeEntry(Lorg/jivesoftware/smack/RosterEntry;)V" new="m_qT"/>
   <method old="removeEntryLocal(Lorg/jivesoftware/smack/RosterEntry;)V" new="m_yu"/>
   <method old="setName(Ljava/lang/String;)V" new="m_Xl"/>
   <field old="connection Lorg/jivesoftware/smack/Connection;" new="f_e"/>
   <field old="entries Ljava/util/List;" new="f_m"/>
   <field old="name Ljava/lang/String;" new="f_b"/>
  </class>
  <class old="org.xbill.DNS.KEYRecord$Protocol" new="org.xbill.DNS.c_aA">
   <method old="string(I)Ljava/lang/String;" new="m_Wd"/>
   <method old="value(Ljava/lang/String;)I" new="m_le"/>
   <field old="ANY I" new="f_b"/>
   <field old="DNSSEC I" new="f_e"/>
   <field old="EMAIL I" new="f_k"/>
   <field old="IPSEC I" new="f_j"/>
   <field old="NONE I" new="f_B"/>
   <field old="TLS I" new="f_m"/>
   <field old="protocols Lorg/xbill/DNS/Mnemonic;" new="f_d"/>
  </class>
  <class old="com.xabber.android.data.extension.avatar.AvatarTable" new="wy.c_Nb">
   <method old="clear()V" new="m_EA"/>
   <method old="create(Landroid/database/sqlite/SQLiteDatabase;)V" new="m_AB"/>
   <method old="getHash(Landroid/database/Cursor;)Ljava/lang/String;" new="m_sha"/>
   <method old="getInstance()Lcom/xabber/android/data/extension/avatar/AvatarTable;" new="m_Xr"/>
   <method old="getListOrder()Ljava/lang/String;" new="m_YDa"/>
   <method old="getProjection()[Ljava/lang/String;" new="m_AFa"/>
   <method old="getTableName()Ljava/lang/String;" new="m_dga"/>
   <method old="getUser(Landroid/database/Cursor;)Ljava/lang/String;" new="m_oDa"/>
   <method old="list()Landroid/database/Cursor;" new="m_wEa"/>
   <method old="migrate(Landroid/database/sqlite/SQLiteDatabase;I)V" new="m_Cd"/>
   <method old="write(Ljava/lang/String;Ljava/lang/String;)V" new="m_Dga"/>
   <field old="NAME Ljava/lang/String;" new="f_m"/>
   <field old="PROJECTION [Ljava/lang/String;" new="f_B"/>
   <field old="databaseManager Lcom/xabber/android/data/DatabaseManager;" new="f_e"/>
   <field old="instance Lcom/xabber/android/data/extension/avatar/AvatarTable;" new="f_b"/>
   <field old="writeLock Ljava/lang/Object;" new="f_j"/>
   <field old="writeStatement Landroid/database/sqlite/SQLiteStatement;" new="f_d"/>
  </class>
  <class old="com.xabber.android.data.roster.RosterGroup" new="com.xabber.android.data.roster.RosterGroup">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getAccount()Ljava/lang/String;" new="m_FC"/>
   <method old="getId()Ljava/lang/Long;" new="m_Hca"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="setId(Ljava/lang/Long;)V" new="m_Cga"/>
   <field old="account Ljava/lang/String;" new="f_m"/>
   <field old="id Ljava/lang/Long;" new="f_b"/>
   <field old="name Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="com.xabber.android.ui.OAuthActivity$OAuthWebViewClient" new="com.xabber.android.ui.c_E">
   <method old="onPageFinished(Landroid/webkit/WebView;Ljava/lang/String;)V" new="onPageFinished"/>
   <field old="this$0 Lcom/xabber/android/ui/OAuthActivity;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.extension.muc.MUCManager$4$1" new="com.xabber.android.data.extension.muc.c_m">
   <method old="run()V" new="run"/>
   <field old="this$1 Lcom/xabber/android/data/extension/muc/MUCManager$4;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.extension.muc.MUCManager$4$2" new="com.xabber.android.data.extension.muc.c_B">
   <method old="run()V" new="run"/>
   <field old="this$1 Lcom/xabber/android/data/extension/muc/MUCManager$4;" new="f_m"/>
   <field old="val$e Lorg/jivesoftware/smack/XMPPException;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.extension.muc.MUCManager$4$3" new="com.xabber.android.data.extension.muc.c_A">
   <method old="run()V" new="run"/>
   <field old="this$1 Lcom/xabber/android/data/extension/muc/MUCManager$4;" new="f_m"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.digests.GeneralDigest" new="wy.c_Db">
   <method old="doFinal([BI)I" new="m_sC"/>
   <method old="finish()V" new="m_fy"/>
   <method old="getAlgorithmName()Ljava/lang/String;" new="m_Bc"/>
   <method old="getByteLength()I" new="m_eb"/>
   <method old="getDigestSize()I" new="m_yC"/>
   <method old="processBlock()V" new="m_fY"/>
   <method old="processLength(J)V" new="m_cz"/>
   <method old="processWord([BI)V" new="m_OZ"/>
   <method old="reset()V" new="m_ld"/>
   <method old="update(B)V" new="m_DA"/>
   <method old="update([BII)V" new="m_WC"/>
   <field old="BYTE_LENGTH I" new="f_m"/>
   <field old="byteCount J" new="f_d"/>
   <field old="xBuf [B" new="f_e"/>
   <field old="xBufOff I" new="f_b"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.Subject$SecureSet$1" new="org.apache.harmony.javax.security.auth.c_m">
   <method old="hasNext()Z" new="hasNext"/>
   <method old="next()Ljava/lang/Object;" new="next"/>
   <method old="remove()V" new="remove"/>
   <field old="iterator Ljava/util/Iterator;" new="f_m"/>
   <field old="this$1 Lorg/apache/harmony/javax/security/auth/Subject$SecureSet;" new="f_e"/>
  </class>
  <class old="com.jcraft.jzlib.Adler32" new="wy.c_Xc">
   <method old="adler32(J[BII)J" new="m_DMa"/>
   <field old="BASE I" new="f_m"/>
   <field old="NMAX I" new="f_e"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.Subject$SecureSet$2" new="org.apache.harmony.javax.security.auth.c_A">
   <method old="add(Ljava/lang/Object;)Z" new="add"/>
   <method old="iterator()Ljava/util/Iterator;" new="iterator"/>
   <method old="retainAll(Ljava/util/Collection;)Z" new="retainAll"/>
   <method old="size()I" new="size"/>
   <field old="elements Ljava/util/LinkedList;" new="f_b"/>
   <field old="this$1 Lorg/apache/harmony/javax/security/auth/Subject$SecureSet;" new="f_e"/>
   <field old="val$c Ljava/lang/Class;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.SmackConfiguration" new="org.jivesoftware.smack.c_d">
   <method old="addSaslMech(Ljava/lang/String;)V" new="m_vT"/>
   <method old="addSaslMechs(Ljava/util/Collection;)V" new="m_Ps"/>
   <method old="getClassLoaders()[Ljava/lang/ClassLoader;" new="m_ST"/>
   <method old="getKeepAliveInterval()I" new="m_NT"/>
   <method old="getKeepAliveResponse()I" new="m_SR"/>
   <method old="getLocalSocks5ProxyPort()I" new="m_kS"/>
   <method old="getPacketReplyTimeout()I" new="m_Ys"/>
   <method old="getSaslMechs()Ljava/util/List;" new="m_YS"/>
   <method old="getVersion()Ljava/lang/String;" new="m_Sd"/>
   <method old="isLocalSocks5ProxyEnabled()Z" new="m_ks"/>
   <method old="parseClassToLoad(Lorg/xmlpull/v1/XmlPullParser;)V" new="m_Eu"/>
   <method old="parseIntProperty(Lorg/xmlpull/v1/XmlPullParser;I)I" new="m_xu"/>
   <method old="removeSaslMech(Ljava/lang/String;)V" new="m_RR"/>
   <method old="removeSaslMechs(Ljava/util/Collection;)V" new="m_vR"/>
   <method old="setKeepAliveInterval(I)V" new="m_xR"/>
   <method old="setKeepAliveResponse(I)V" new="m_rR"/>
   <method old="setLocalSocks5ProxyEnabled(Z)V" new="m_ET"/>
   <method old="setLocalSocks5ProxyPort(I)V" new="m_at"/>
   <method old="setPacketReplyTimeout(I)V" new="m_TR"/>
   <field old="SMACK_VERSION Ljava/lang/String;" new="f_e"/>
   <field old="defaultMechs Ljava/util/Vector;" new="f_b"/>
   <field old="keepAliveInterval I" new="f_B"/>
   <field old="keepAliveResponse I" new="f_m"/>
   <field old="localSocks5ProxyEnabled Z" new="f_j"/>
   <field old="localSocks5ProxyPort I" new="f_k"/>
   <field old="packetReplyTimeout I" new="f_d"/>
  </class>
  <class old="com.xabber.android.data.extension.muc.RoomAuthorizationError" new="com.xabber.android.data.extension.muc.RoomAuthorizationError">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="compareTo(Lcom/xabber/android/data/entity/BaseEntity;)I" new="m_bCa"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="equals(Ljava/lang/String;Ljava/lang/String;)Z" new="m_Bba"/>
   <method old="getAccount()Ljava/lang/String;" new="m_FC"/>
   <method old="getIntent()Landroid/content/Intent;" new="m_db"/>
   <method old="getText()Ljava/lang/String;" new="m_ZA"/>
   <method old="getTitle()Ljava/lang/String;" new="m_zb"/>
   <method old="getUser()Ljava/lang/String;" new="m_TA"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="account Ljava/lang/String;" new="f_m"/>
   <field old="user Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="com.xabber.xmpp.archive.AbstractChat" new="com.xabber.xmpp.archive.c_f">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getStart()Ljava/util/Date;" new="m_vC"/>
   <method old="getStartString()Ljava/lang/String;" new="m_lC"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getVersion()Ljava/lang/Integer;" new="m_Sd"/>
   <method old="getWith()Ljava/lang/String;" new="m_ib"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="serializeContent(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_Fb"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setStart(Ljava/util/Date;)V" new="m_SBa"/>
   <method old="setStartString(Ljava/lang/String;)V" new="m_tca"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="setWith(Ljava/lang/String;)V" new="m_mda"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="NAMESPACE Ljava/lang/String;" new="f_j"/>
   <field old="START_ATTRIBUTE Ljava/lang/String;" new="f_b"/>
   <field old="WITH_ATTRIBUTE Ljava/lang/String;" new="f_B"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="start Ljava/util/Date;" new="f_k"/>
   <field old="startString Ljava/lang/String;" new="f_m"/>
   <field old="with Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="net.java.otr4j.io.SerializationUtils" new="net.java.otr4j.io.c_H">
   <method old="byteArrayToHexString([B)Ljava/lang/String;" new="m_EZ"/>
   <method old="hexStringToByteArray(Ljava/lang/String;)[B" new="m_Uy"/>
   <method old="readMpi([B)Ljava/math/BigInteger;" new="m_sZ"/>
   <method old="toByteArray(Lnet/java/otr4j/io/messages/MysteriousT;)[B" new="m_ay"/>
   <method old="toByteArray(Lnet/java/otr4j/io/messages/SignatureM;)[B" new="m_rz"/>
   <method old="toByteArray(Lnet/java/otr4j/io/messages/SignatureX;)[B" new="m_ny"/>
   <method old="toMessage(Ljava/lang/String;)Lnet/java/otr4j/io/messages/AbstractMessage;" new="m_CZ"/>
   <method old="toMysteriousX([B)Lnet/java/otr4j/io/messages/SignatureX;" new="m_Kz"/>
   <method old="toString(Lnet/java/otr4j/io/messages/AbstractMessage;)Ljava/lang/String;" new="m_xy"/>
   <method old="writeData([B)[B" new="m_Ez"/>
   <method old="writeMpi(Ljava/math/BigInteger;)[B" new="m_OX"/>
   <method old="writePublicKey(Ljava/security/PublicKey;)[B" new="m_zY"/>
   <field old="HEX_DECODER Ljava/lang/String;" new="f_e"/>
   <field old="HEX_ENCODER [C" new="f_b"/>
   <field old="patternWhitespace Ljava/util/regex/Pattern;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.DelayInformation" new="org.jivesoftware.smackx.packet.c_ha">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="getReason()Ljava/lang/String;" new="m_zj"/>
   <method old="getStamp()Ljava/util/Date;" new="m_SJ"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setReason(Ljava/lang/String;)V" new="m_QJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="XEP_0091_UTC_FORMAT Ljava/text/DateFormat;" new="f_m"/>
   <field old="from Ljava/lang/String;" new="f_e"/>
   <field old="reason Ljava/lang/String;" new="f_d"/>
   <field old="stamp Ljava/util/Date;" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.extension.muc.MUCManager" new="com.xabber.android.data.extension.muc.c_k">
   <method old="access$000(Lcom/xabber/android/data/extension/muc/MUCManager;Ljava/util/Collection;Ljava/util/Collection;)V" new="m_CGa"/>
   <method old="addAuthorizationError(Ljava/lang/String;Ljava/lang/String;)V" new="m_eha"/>
   <method old="createRoom(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V" new="m_YHa"/>
   <method old="getInstance()Lcom/xabber/android/data/extension/muc/MUCManager;" new="m_Xr"/>
   <method old="getInvite(Ljava/lang/String;Ljava/lang/String;)Lcom/xabber/android/data/extension/muc/RoomInvite;" new="m_Kia"/>
   <method old="getNickname(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" new="m_THa"/>
   <method old="getOccupants(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Collection;" new="m_Dha"/>
   <method old="getPassword(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" new="m_Bia"/>
   <method old="getRoomChat(Ljava/lang/String;Ljava/lang/String;)Lcom/xabber/android/data/extension/muc/RoomChat;" new="m_hia"/>
   <method old="hasRoom(Ljava/lang/String;Ljava/lang/String;)Z" new="m_Wha"/>
   <method old="inUse(Ljava/lang/String;Ljava/lang/String;)Z" new="m_fGa"/>
   <method old="invite(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_aGa"/>
   <method old="isDisabled(Ljava/lang/String;Ljava/lang/String;)Z" new="m_DHa"/>
   <method old="joinRoom(Ljava/lang/String;Ljava/lang/String;Z)V" new="m_wIa"/>
   <method old="leaveRoom(Ljava/lang/String;Ljava/lang/String;)V" new="m_Lia"/>
   <method old="onLoad()V" new="m_pA"/>
   <method old="onLoaded(Ljava/util/Collection;Ljava/util/Collection;)V" new="m_zda"/>
   <method old="onPacket(Lcom/xabber/android/data/connection/ConnectionItem;Ljava/lang/String;Lorg/jivesoftware/smack/packet/Packet;)V" new="m_tC"/>
   <method old="removeAuthorizationError(Ljava/lang/String;Ljava/lang/String;)V" new="m_BHa"/>
   <method old="removeInvite(Lcom/xabber/android/data/extension/muc/RoomInvite;)V" new="m_Sga"/>
   <method old="removeRoom(Ljava/lang/String;Ljava/lang/String;)V" new="m_qha"/>
   <method old="requestToWriteRoom(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V" new="m_jGa"/>
   <field old="authorizationErrorProvider Lcom/xabber/android/data/notification/EntityNotificationProvider;" new="f_b"/>
   <field old="instance Lcom/xabber/android/data/extension/muc/MUCManager;" new="f_e"/>
   <field old="inviteProvider Lcom/xabber/android/data/notification/EntityNotificationProvider;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.account.ScreenManager" new="com.xabber.android.data.account.c_D">
   <method old="getInstance()Lcom/xabber/android/data/account/ScreenManager;" new="m_Xr"/>
   <method old="getTime(I)J" new="m_Pla"/>
   <method old="onClose()V" new="m_cc"/>
   <method old="onInitialized()V" new="m_ub"/>
   <method old="onScreen(Landroid/content/Intent;)V" new="m_vja"/>
   <field old="alarmManager Landroid/app/AlarmManager;" new="f_B"/>
   <field old="goAwayPendingIntent Landroid/app/PendingIntent;" new="f_d"/>
   <field old="goXaPendingIntent Landroid/app/PendingIntent;" new="f_b"/>
   <field old="instance Lcom/xabber/android/data/account/ScreenManager;" new="f_e"/>
   <field old="screenReceiver Lcom/xabber/android/receiver/ScreenReceiver;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.XHTMLExtension" new="org.jivesoftware.smackx.packet.c_A">
   <method old="addBody(Ljava/lang/String;)V" new="m_Wl"/>
   <method old="getBodies()Ljava/util/Iterator;" new="m_vj"/>
   <method old="getBodiesCount()I" new="m_bJ"/>
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="bodies Ljava/util/List;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.EntityCapsManager$1" new="org.jivesoftware.smackx.c_V">
   <method old="compare(Ljava/lang/Object;Ljava/lang/Object;)I" new="compare"/>
   <method old="compare(Lorg/jivesoftware/smackx/FormField;Lorg/jivesoftware/smackx/FormField;)I" new="m_VQ"/>
   <field old="this$0 Lorg/jivesoftware/smackx/EntityCapsManager;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.adapter.ChatMessageAdapter" new="com.xabber.android.ui.adapter.c_l">
   <method old="append(Landroid/text/SpannableStringBuilder;Ljava/lang/CharSequence;Landroid/text/style/CharacterStyle;)V" new="m_hCa"/>
   <method old="getAccount()Ljava/lang/String;" new="m_FC"/>
   <method old="getCount()I" new="getCount"/>
   <method old="getHint()Ljava/lang/String;" new="m_vAa"/>
   <method old="getItem(I)Ljava/lang/Object;" new="getItem"/>
   <method old="getItemId(I)J" new="getItemId"/>
   <method old="getItemViewType(I)I" new="getItemViewType"/>
   <method old="getUser()Ljava/lang/String;" new="m_TA"/>
   <method old="getView(ILandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;" new="getView"/>
   <method old="getViewTypeCount()I" new="getViewTypeCount"/>
   <method old="onChange()V" new="m_cb"/>
   <method old="setChat(Ljava/lang/String;Ljava/lang/String;)V" new="m_waa"/>
   <method old="updateInfo()V" new="m_Hda"/>
   <field old="TYPE_EMPTY I" new="f_d"/>
   <field old="TYPE_HINT I" new="f_K"/>
   <field old="TYPE_MESSAGE I" new="f_b"/>
   <field old="account Ljava/lang/String;" new="f_B"/>
   <field old="activity Landroid/app/Activity;" new="f_j"/>
   <field old="appearanceStyle I" new="f_I"/>
   <field old="divider Ljava/lang/String;" new="f_k"/>
   <field old="hint Ljava/lang/String;" new="f_m"/>
   <field old="isMUC Z" new="f_l"/>
   <field old="messages Ljava/util/List;" new="f_f"/>
   <field old="user Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.message.phrase.PhraseManager$1" new="wy.c_Eb">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/message/phrase/PhraseManager;" new="f_e"/>
   <field old="val$phrases Ljava/util/Collection;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.message.phrase.PhraseManager$2" new="wy.c_eB">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/message/phrase/PhraseManager;" new="f_d"/>
   <field old="val$group Ljava/lang/String;" new="f_j"/>
   <field old="val$phrase Lcom/xabber/android/data/message/phrase/Phrase;" new="f_b"/>
   <field old="val$regexp Z" new="f_B"/>
   <field old="val$sound Landroid/net/Uri;" new="f_m"/>
   <field old="val$user Ljava/lang/String;" new="f_k"/>
   <field old="val$value Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.extension.avatar.GingerbreadShortcutHelper" new="wy.c_Xb">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getLauncherLargeIconSize()I" new="m_Xga"/>
  </class>
  <class old="org.xbill.DNS.DNSSEC$KeyMismatchException" new="org.xbill.DNS.c_Gb">
   <field old="key Lorg/xbill/DNS/KEYBase;" new="f_m"/>
   <field old="sig Lorg/xbill/DNS/SIGBase;" new="f_e"/>
  </class>
  <class old="com.xabber.android.classic.R" new="com.xabber.android.classic.R">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
  </class>
  <class old="org.jivesoftware.smackx.ReportedData$Field" new="org.jivesoftware.smackx.ReportedData$Field">
   <method old="getValues()Ljava/util/Iterator;" new="m_bQ"/>
   <method old="getVariable()Ljava/lang/String;" new="m_tr"/>
   <field old="values Ljava/util/List;" new="f_e"/>
   <field old="variable Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.extension.muc.RoomContact" new="com.xabber.android.data.extension.muc.RoomContact">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="compareTo(Lcom/xabber/android/data/entity/BaseEntity;)I" new="m_bCa"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="equals(Ljava/lang/String;Ljava/lang/String;)Z" new="m_Bba"/>
   <method old="getAccount()Ljava/lang/String;" new="m_FC"/>
   <method old="getAvatar()Landroid/graphics/drawable/Drawable;" new="m_UL"/>
   <method old="getAvatarForContactList()Landroid/graphics/drawable/Drawable;" new="m_ZEa"/>
   <method old="getClientSoftware()Lcom/xabber/android/data/extension/capability/ClientSoftware;" new="m_sda"/>
   <method old="getColorLevel()I" new="m_fFa"/>
   <method old="getGroups()Ljava/util/Collection;" new="m_pK"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getStatusMode()Lcom/xabber/android/data/account/StatusMode;" new="m_tfa"/>
   <method old="getStatusText()Ljava/lang/String;" new="m_tFa"/>
   <method old="getUser()Ljava/lang/String;" new="m_TA"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="isConnected()Z" new="m_ZS"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="account Ljava/lang/String;" new="f_m"/>
   <field old="roomItem Lcom/xabber/android/data/extension/muc/RoomChat;" new="f_m"/>
   <field old="user Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="com.xabber.android.receiver.ConnectivityReceiver" new="com.xabber.android.receiver.ConnectivityReceiver">
   <method old="onReceive(Landroid/content/Context;Landroid/content/Intent;)V" new="onReceive"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.ibb.CloseListener" new="org.jivesoftware.smackx.bytestreams.ibb.c_b">
   <method old="getFilter()Lorg/jivesoftware/smack/filter/PacketFilter;" new="m_co"/>
   <method old="processPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_C"/>
   <field old="closeFilter Lorg/jivesoftware/smack/filter/PacketFilter;" new="f_m"/>
   <field old="manager Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamManager;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smack.sasl.SASLDigestMD5Mechanism" new="wy.c_fa">
   <method old="authenticate()V" new="m_ls"/>
   <method old="authenticate(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_Pd"/>
   <method old="authenticate(Ljava/lang/String;Ljava/lang/String;Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;)V" new="m_eC"/>
   <method old="challengeReceived(Ljava/lang/String;)V" new="m_vt"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getSASLAuthentication()Lorg/jivesoftware/smack/SASLAuthentication;" new="m_Gt"/>
   <method old="handle([Lorg/apache/harmony/javax/security/auth/callback/Callback;)V" new="m_Jb"/>
   <field old="authenticationId Ljava/lang/String;" new="f_e"/>
   <field old="hostname Ljava/lang/String;" new="f_B"/>
   <field old="password Ljava/lang/String;" new="f_m"/>
   <field old="sc Lorg/apache/harmony/javax/security/sasl/SaslClient;" new="f_b"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.login.Configuration" new="wy.c_wa">
   <method old="getAccessibleConfiguration()Lorg/apache/harmony/javax/security/auth/login/Configuration;" new="m_jv"/>
   <method old="getAppConfigurationEntry(Ljava/lang/String;)[Lorg/apache/harmony/javax/security/auth/login/AppConfigurationEntry;" new="m_sw"/>
   <method old="getConfiguration()Lorg/apache/harmony/javax/security/auth/login/Configuration;" new="m_ps"/>
   <method old="getDefaultProvider()Lorg/apache/harmony/javax/security/auth/login/Configuration;" new="m_TV"/>
   <method old="refresh()V" new="m_oC"/>
   <method old="setConfiguration(Lorg/apache/harmony/javax/security/auth/login/Configuration;)V" new="m_Nx"/>
   <field old="GET_LOGIN_CONFIGURATION Lorg/apache/harmony/javax/security/auth/AuthPermission;" new="f_d"/>
   <field old="LOGIN_CONFIGURATION_PROVIDER Ljava/lang/String;" new="f_m"/>
   <field old="SET_LOGIN_CONFIGURATION Lorg/apache/harmony/javax/security/auth/AuthPermission;" new="f_e"/>
   <field old="configuration Lorg/apache/harmony/javax/security/auth/login/Configuration;" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.roster.GroupTable$Fields" new="com.xabber.android.data.roster.c_L">
   <field old="ACCOUNT Ljava/lang/String;" new="f_m"/>
   <field old="EXPANDED Ljava/lang/String;" new="f_b"/>
   <field old="GROUP_NAME Ljava/lang/String;" new="f_d"/>
   <field old="OFFLINE Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="org.xbill.DNS.SingleNameBase" new="org.xbill.DNS.c_u">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getSingleName()Lorg/xbill/DNS/Name;" new="m_NH"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="serialVersionUID J" new="f_e"/>
   <field old="singleName Lorg/xbill/DNS/Name;" new="f_m"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="com.xabber.android.ui.ArchiveRequest" new="com.xabber.android.ui.ArchiveRequest">
   <method old="createIntent(Landroid/content/Context;Ljava/lang/String;)Landroid/content/Intent;" new="m_bca"/>
   <method old="getAccount(Landroid/content/Intent;)Ljava/lang/String;" new="m_lCa"/>
   <method old="onAccept()V" new="m_WBa"/>
   <method old="onActivityResult(IILandroid/content/Intent;)V" new="onActivityResult"/>
   <method old="onCenter()V" new="m_Jca"/>
   <method old="onCreate(Landroid/os/Bundle;)V" new="onCreate"/>
   <method old="onDecline()V" new="m_Qca"/>
   <method old="onDestroy()V" new="onDestroy"/>
   <method old="onNewIntent(Landroid/content/Intent;)V" new="onNewIntent"/>
   <method old="onPause()V" new="onPause"/>
   <method old="onResume()V" new="onResume"/>
   <method old="setCustomView(Landroid/view/View;Z)V" new="m_LBa"/>
   <method old="setDialogMessage(I)V" new="m_Gca"/>
   <method old="setDialogMessage(Ljava/lang/CharSequence;)V" new="m_SCa"/>
   <method old="setDialogTitle(I)V" new="m_Kca"/>
   <method old="setDialogTitle(Ljava/lang/CharSequence;)V" new="m_VCa"/>
   <method old="startActivity(Landroid/content/Intent;)V" new="startActivity"/>
   <method old="startActivityForResult(Landroid/content/Intent;I)V" new="startActivityForResult"/>
   <field old="account Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.SIG0" new="org.xbill.DNS.c_S">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="signMessage(Lorg/xbill/DNS/Message;Lorg/xbill/DNS/KEYRecord;Ljava/security/PrivateKey;Lorg/xbill/DNS/SIGRecord;)V" new="m_aD"/>
   <method old="verifyMessage(Lorg/xbill/DNS/Message;[BLorg/xbill/DNS/KEYRecord;Lorg/xbill/DNS/SIGRecord;)V" new="m_LE"/>
   <field old="VALIDITY S" new="f_m"/>
  </class>
  <class old="com.jcraft.jzlib.Inflate" new="wy.c_NA">
   <method old="inflate(Lcom/jcraft/jzlib/ZStream;I)I" new="m_FOa"/>
   <method old="inflateEnd(Lcom/jcraft/jzlib/ZStream;)I" new="m_cma"/>
   <method old="inflateInit(Lcom/jcraft/jzlib/ZStream;I)I" new="m_poa"/>
   <method old="inflateReset(Lcom/jcraft/jzlib/ZStream;)I" new="m_Xna"/>
   <method old="inflateSetDictionary(Lcom/jcraft/jzlib/ZStream;[BI)I" new="m_Qma"/>
   <method old="inflateSync(Lcom/jcraft/jzlib/ZStream;)I" new="m_Zma"/>
   <method old="inflateSyncPoint(Lcom/jcraft/jzlib/ZStream;)I" new="m_kOa"/>
   <field old="BAD I" new="f_j"/>
   <field old="BLOCKS I" new="f_z"/>
   <field old="CHECK1 I" new="f_i"/>
   <field old="CHECK2 I" new="f_Y"/>
   <field old="CHECK3 I" new="f_U"/>
   <field old="CHECK4 I" new="f_b"/>
   <field old="DICT0 I" new="f_a"/>
   <field old="DICT1 I" new="f_C"/>
   <field old="DICT2 I" new="f_e"/>
   <field old="DICT3 I" new="f_B"/>
   <field old="DICT4 I" new="f_p"/>
   <field old="DONE I" new="f_h"/>
   <field old="FLAG I" new="f_g"/>
   <field old="MAX_WBITS I" new="f_W"/>
   <field old="METHOD I" new="f_H"/>
   <field old="PRESET_DICT I" new="f_y"/>
   <field old="Z_BUF_ERROR I" new="f_k"/>
   <field old="Z_DATA_ERROR I" new="f_R"/>
   <field old="Z_DEFLATED I" new="f_w"/>
   <field old="Z_ERRNO I" new="f_I"/>
   <field old="Z_FINISH I" new="f_l"/>
   <field old="Z_FULL_FLUSH I" new="f_P"/>
   <field old="Z_MEM_ERROR I" new="f_u"/>
   <field old="Z_NEED_DICT I" new="f_G"/>
   <field old="Z_NO_FLUSH I" new="f_S"/>
   <field old="Z_OK I" new="f_m"/>
   <field old="Z_PARTIAL_FLUSH I" new="f_A"/>
   <field old="Z_STREAM_END I" new="f_F"/>
   <field old="Z_STREAM_ERROR I" new="f_M"/>
   <field old="Z_SYNC_FLUSH I" new="f_d"/>
   <field old="Z_VERSION_ERROR I" new="f_o"/>
   <field old="blocks Lcom/jcraft/jzlib/InfBlocks;" new="f_E"/>
   <field old="mark [B" new="f_c"/>
   <field old="marker I" new="f_f"/>
   <field old="method I" new="f_J"/>
   <field old="mode I" new="f_D"/>
   <field old="need J" new="f_n"/>
   <field old="nowrap I" new="f_L"/>
   <field old="was [J" new="f_K"/>
   <field old="wbits I" new="f_Z"/>
  </class>
  <class old="com.xabber.xmpp.vcard.Address" new="com.xabber.xmpp.vcard.c_y">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getProperties()Ljava/util/Map;" new="m_KZ"/>
   <method old="getTypes()Ljava/util/Set;" new="m_xg"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="writeBody(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_zy"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_e"/>
   <field old="properties Ljava/util/Map;" new="f_m"/>
   <field old="types Ljava/util/Set;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.Rcode" new="org.xbill.DNS.Rcode">
   <method old="TSIGstring(I)Ljava/lang/String;" new="m_WG"/>
   <method old="string(I)Ljava/lang/String;" new="m_Wd"/>
   <method old="value(Ljava/lang/String;)I" new="m_le"/>
   <field old="BADKEY I" new="BADKEY"/>
   <field old="BADMODE I" new="BADMODE"/>
   <field old="BADSIG I" new="BADSIG"/>
   <field old="BADTIME I" new="BADTIME"/>
   <field old="BADVERS I" new="BADVERS"/>
   <field old="FORMERR I" new="FORMERR"/>
   <field old="NOERROR I" new="NOERROR"/>
   <field old="NOTAUTH I" new="NOTAUTH"/>
   <field old="NOTIMP I" new="NOTIMP"/>
   <field old="NOTIMPL I" new="NOTIMPL"/>
   <field old="NOTZONE I" new="NOTZONE"/>
   <field old="NXDOMAIN I" new="NXDOMAIN"/>
   <field old="NXRRSET I" new="NXRRSET"/>
   <field old="REFUSED I" new="REFUSED"/>
   <field old="SERVFAIL I" new="SERVFAIL"/>
   <field old="YXDOMAIN I" new="YXDOMAIN"/>
   <field old="YXRRSET I" new="YXRRSET"/>
   <field old="rcodes Lorg/xbill/DNS/Mnemonic;" new="f_m"/>
   <field old="tsigrcodes Lorg/xbill/DNS/Mnemonic;" new="f_e"/>
  </class>
  <class old="org.xbill.DNS.spi.DNSJavaNameService" new="wy.c_n">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getHostByAddr([B)Ljava/lang/String;" new="m_Wc"/>
   <method old="invoke(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;" new="invoke"/>
   <method old="lookupAllHostAddr(Ljava/lang/String;)[Ljava/net/InetAddress;" new="m_jA"/>
   <field old="domainProperty Ljava/lang/String;" new="f_b"/>
   <field old="nsProperty Ljava/lang/String;" new="f_e"/>
   <field old="preferV6 Z" new="f_m"/>
   <field old="v6Property Ljava/lang/String;" new="f_d"/>
  </class>
  <class old="com.xabber.android.ui.adapter.ChatContactInflater" new="com.xabber.android.ui.adapter.c_Aa">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createView(ILandroid/view/ViewGroup;)Landroid/view/View;" new="m_eCa"/>
   <method old="createViewHolder(ILandroid/view/View;)Lcom/xabber/android/ui/adapter/BaseContactInflater$ViewHolder;" new="m_BCa"/>
   <method old="createViewHolder(ILandroid/view/View;)Lcom/xabber/android/ui/adapter/ChatContactInflater$ViewHolder;" new="m_BCa"/>
   <method old="createViewHolder(ILandroid/view/View;)Lcom/xabber/android/ui/adapter/ClientContactInflater$ViewHolder;" new="m_BCa"/>
   <method old="createViewHolder(ILandroid/view/View;)Lcom/xabber/android/ui/adapter/StatusContactInflater$ViewHolder;" new="m_BCa"/>
   <method old="getStatusText(Lcom/xabber/android/data/roster/AbstractContact;)Ljava/lang/String;" new="m_Wca"/>
   <method old="getView(Landroid/view/View;Lcom/xabber/android/data/roster/AbstractContact;)V" new="m_kda"/>
   <method old="setAdapter(Landroid/widget/BaseAdapter;)V" new="m_fCa"/>
   <field old="activity Landroid/app/Activity;" new="f_B"/>
   <field old="adapter Landroid/widget/BaseAdapter;" new="f_e"/>
   <field old="avatarInflaterHelper Lcom/xabber/android/ui/helper/AbstractAvatarInflaterHelper;" new="f_b"/>
   <field old="layoutInflater Landroid/view/LayoutInflater;" new="f_m"/>
   <field old="shadowDrawable Landroid/graphics/drawable/BitmapDrawable;" new="f_d"/>
   <field old="textColorPrimary I" new="f_m"/>
   <field old="textColorSecondary I" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smack.Connection" new="org.jivesoftware.smack.c_D">
   <method old="addConnectionCreationListener(Lorg/jivesoftware/smack/ConnectionCreationListener;)V" new="m_Vu"/>
   <method old="addConnectionListener(Lorg/jivesoftware/smack/ConnectionListener;)V" new="m_ms"/>
   <method old="addPacketInterceptor(Lorg/jivesoftware/smack/PacketInterceptor;Lorg/jivesoftware/smack/filter/PacketFilter;)V" new="m_mu"/>
   <method old="addPacketListener(Lorg/jivesoftware/smack/PacketListener;Lorg/jivesoftware/smack/filter/PacketFilter;)V" new="m_SS"/>
   <method old="addPacketSendingListener(Lorg/jivesoftware/smack/PacketListener;Lorg/jivesoftware/smack/filter/PacketFilter;)V" new="m_uR"/>
   <method old="connect()V" new="m_FT"/>
   <method old="createPacketCollector(Lorg/jivesoftware/smack/filter/PacketFilter;)Lorg/jivesoftware/smack/PacketCollector;" new="m_gS"/>
   <method old="disconnect()V" new="m_Lu"/>
   <method old="disconnect(Lorg/jivesoftware/smack/packet/Presence;)V" new="m_Mt"/>
   <method old="firePacketInterceptors(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_au"/>
   <method old="firePacketSendingListeners(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_Ht"/>
   <method old="forceAddConnectionListener(Lorg/jivesoftware/smack/ConnectionListener;)V" new="m_Xt"/>
   <method old="getAccountManager()Lorg/jivesoftware/smack/AccountManager;" new="m_Pu"/>
   <method old="getCapsNode()Ljava/lang/String;" new="m_ht"/>
   <method old="getChatManager()Lorg/jivesoftware/smack/ChatManager;" new="m_Uu"/>
   <method old="getConfiguration()Lorg/jivesoftware/smack/ConnectionConfiguration;" new="m_ps"/>
   <method old="getConnectionCreationListeners()Ljava/util/Collection;" new="m_Ms"/>
   <method old="getConnectionID()Ljava/lang/String;" new="m_Wu"/>
   <method old="getConnectionListeners()Ljava/util/Collection;" new="m_oR"/>
   <method old="getHost()Ljava/lang/String;" new="m_vD"/>
   <method old="getPacketCollectors()Ljava/util/Collection;" new="m_tu"/>
   <method old="getPacketInterceptors()Ljava/util/Map;" new="m_BU"/>
   <method old="getPacketListeners()Ljava/util/Map;" new="m_Yu"/>
   <method old="getPacketSendingListeners()Ljava/util/Map;" new="m_ct"/>
   <method old="getPort()I" new="m_Jg"/>
   <method old="getRoster()Lorg/jivesoftware/smack/Roster;" new="m_TS"/>
   <method old="getSASLAuthentication()Lorg/jivesoftware/smack/SASLAuthentication;" new="m_Gt"/>
   <method old="getServiceName()Ljava/lang/String;" new="m_ys"/>
   <method old="getUser()Ljava/lang/String;" new="m_TA"/>
   <method old="initDebugger()V" new="m_aS"/>
   <method old="isAnonymous()Z" new="m_HT"/>
   <method old="isAuthenticated()Z" new="m_zS"/>
   <method old="isConnected()Z" new="m_ZS"/>
   <method old="isReconnectionAllowed()Z" new="m_yt"/>
   <method old="isSecureConnection()Z" new="m_Xs"/>
   <method old="isSendPresence()Z" new="m_Mq"/>
   <method old="isUsingCompression()Z" new="m_Mu"/>
   <method old="login(Ljava/lang/String;Ljava/lang/String;)V" new="m_YT"/>
   <method old="login(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_Yt"/>
   <method old="loginAnonymously()V" new="m_NS"/>
   <method old="removeConnectionCreationListener(Lorg/jivesoftware/smack/ConnectionCreationListener;)V" new="m_js"/>
   <method old="removeConnectionListener(Lorg/jivesoftware/smack/ConnectionListener;)V" new="m_Nu"/>
   <method old="removePacketCollector(Lorg/jivesoftware/smack/PacketCollector;)V" new="m_FS"/>
   <method old="removePacketInterceptor(Lorg/jivesoftware/smack/PacketInterceptor;)V" new="m_cS"/>
   <method old="removePacketListener(Lorg/jivesoftware/smack/PacketListener;)V" new="m_uu"/>
   <method old="removePacketSendingListener(Lorg/jivesoftware/smack/PacketListener;)V" new="m_qt"/>
   <method old="sendPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_ES"/>
   <method old="setRosterStorage(Lorg/jivesoftware/smack/RosterStorage;)V" new="m_Du"/>
   <field old="DEBUG_ENABLED Z" new="f_I"/>
   <field old="accountManager Lorg/jivesoftware/smack/AccountManager;" new="f_K"/>
   <field old="chatManager Lorg/jivesoftware/smack/ChatManager;" new="f_B"/>
   <field old="collectors Ljava/util/Collection;" new="f_l"/>
   <field old="config Lorg/jivesoftware/smack/ConnectionConfiguration;" new="f_G"/>
   <field old="connectionCounter Ljava/util/concurrent/atomic/AtomicInteger;" new="f_j"/>
   <field old="connectionCounterValue I" new="f_D"/>
   <field old="connectionEstablishedListeners Ljava/util/Set;" new="f_J"/>
   <field old="connectionListeners Ljava/util/Collection;" new="f_f"/>
   <field old="debugger Lorg/jivesoftware/smack/debugger/SmackDebugger;" new="f_k"/>
   <field old="interceptors Ljava/util/Map;" new="f_m"/>
   <field old="reader Ljava/io/Reader;" new="f_d"/>
   <field old="recvListeners Ljava/util/Map;" new="f_b"/>
   <field old="rosterStorage Lorg/jivesoftware/smack/RosterStorage;" new="f_M"/>
   <field old="saslAuthentication Lorg/jivesoftware/smack/SASLAuthentication;" new="f_g"/>
   <field old="sendListeners Ljava/util/Map;" new="f_H"/>
   <field old="writer Ljava/io/Writer;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smack.PacketReader$1" new="org.jivesoftware.smack.c_s">
   <method old="run()V" new="run"/>
   <field old="this$0 Lorg/jivesoftware/smack/PacketReader;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.PacketReader$2" new="org.jivesoftware.smack.c_q">
   <method old="newThread(Ljava/lang/Runnable;)Ljava/lang/Thread;" new="newThread"/>
   <field old="this$0 Lorg/jivesoftware/smack/PacketReader;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.notification.NotificationManager$1" new="wy.c_cC">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/notification/NotificationManager;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.notification.NotificationManager$2" new="wy.c_IB">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/notification/NotificationManager;" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.archive.PreviousProvider" new="com.xabber.xmpp.archive.c_c">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/archive/Previous;" new="m_ZZ"/>
   <method old="getInstance()Lcom/xabber/xmpp/archive/PreviousProvider;" new="m_Xr"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/archive/AbstractLink;)Lcom/xabber/xmpp/archive/AbstractLink;" new="m_UCa"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
   <field old="instance Lcom/xabber/xmpp/archive/PreviousProvider;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.notification.NotificationManager$3" new="wy.c_cc">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/notification/NotificationManager;" new="f_e"/>
   <field old="val$messageNotifications Ljava/util/Collection;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.entity.NestedMap$Values" new="wy.c_JA">
   <method old="add(Ljava/lang/Object;)Z" new="add"/>
   <method old="addAll(Ljava/util/Collection;)Z" new="addAll"/>
   <method old="clear()V" new="clear"/>
   <method old="contains(Ljava/lang/Object;)Z" new="contains"/>
   <method old="containsAll(Ljava/util/Collection;)Z" new="containsAll"/>
   <method old="isEmpty()Z" new="isEmpty"/>
   <method old="iterator()Ljava/util/Iterator;" new="iterator"/>
   <method old="remove(Ljava/lang/Object;)Z" new="remove"/>
   <method old="removeAll(Ljava/util/Collection;)Z" new="removeAll"/>
   <method old="retainAll(Ljava/util/Collection;)Z" new="retainAll"/>
   <method old="size()I" new="size"/>
   <method old="toArray()[Ljava/lang/Object;" new="toArray"/>
   <method old="toArray([Ljava/lang/Object;)[Ljava/lang/Object;" new="toArray"/>
   <field old="this$0 Lcom/xabber/android/data/entity/NestedMap;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.notification.NotificationManager$4" new="wy.c_YB">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/notification/NotificationManager;" new="f_j"/>
   <field old="val$account Ljava/lang/String;" new="f_e"/>
   <field old="val$count I" new="f_d"/>
   <field old="val$text Ljava/lang/String;" new="f_b"/>
   <field old="val$timestamp Ljava/util/Date;" new="f_m"/>
   <field old="val$user Ljava/lang/String;" new="f_B"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamRequest" new="org.jivesoftware.smackx.bytestreams.socks5.c_E">
   <method old="accept()Lorg/jivesoftware/smackx/bytestreams/BytestreamSession;" new="m_Ja"/>
   <method old="accept()Lorg/jivesoftware/smackx/bytestreams/socks5/Socks5BytestreamSession;" new="m_Ja"/>
   <method old="cancelRequest()V" new="m_Bn"/>
   <method old="createUsedHostResponse(Lorg/jivesoftware/smackx/bytestreams/socks5/packet/Bytestream$StreamHost;)Lorg/jivesoftware/smackx/bytestreams/socks5/packet/Bytestream;" new="m_Dn"/>
   <method old="getConnectFailureThreshold()I" new="m_aO"/>
   <method old="getConnectionFailures(Ljava/lang/String;)I" new="m_OO"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getMinimumConnectTimeout()I" new="m_Vo"/>
   <method old="getSessionID()Ljava/lang/String;" new="m_Ba"/>
   <method old="getTotalConnectTimeout()I" new="m_QM"/>
   <method old="incrementConnectionFailures(Ljava/lang/String;)V" new="m_gN"/>
   <method old="reject()V" new="m_ba"/>
   <method old="setConnectFailureThreshold(I)V" new="m_mM"/>
   <method old="setMinimumConnectTimeout(I)V" new="m_DN"/>
   <method old="setTotalConnectTimeout(I)V" new="m_sN"/>
   <field old="ADDRESS_BLACKLIST Lorg/jivesoftware/smack/util/Cache;" new="f_d"/>
   <field old="BLACKLIST_LIFETIME J" new="f_j"/>
   <field old="BLACKLIST_MAX_SIZE I" new="f_k"/>
   <field old="CONNECTION_FAILURE_THRESHOLD I" new="f_b"/>
   <field old="bytestreamRequest Lorg/jivesoftware/smackx/bytestreams/socks5/packet/Bytestream;" new="f_m"/>
   <field old="manager Lorg/jivesoftware/smackx/bytestreams/socks5/Socks5BytestreamManager;" new="f_l"/>
   <field old="minimumConnectTimeout I" new="f_e"/>
   <field old="totalConnectTimeout I" new="f_B"/>
  </class>
  <class old="com.xabber.android.data.notification.NotificationManager$5" new="wy.c_EA">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/notification/NotificationManager;" new="f_e"/>
   <field old="val$account Ljava/lang/String;" new="f_b"/>
   <field old="val$user Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.notification.NotificationManager$6" new="wy.c_wB">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/notification/NotificationManager;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.message.chat.VibroTable" new="wy.c_LB">
   <method old="bindValue(Landroid/database/sqlite/SQLiteStatement;Ljava/lang/Boolean;)V" new="m_Ifa"/>
   <method old="bindValue(Landroid/database/sqlite/SQLiteStatement;Ljava/lang/Object;)V" new="m_ega"/>
   <method old="clear()V" new="m_EA"/>
   <method old="create(Landroid/database/sqlite/SQLiteDatabase;)V" new="m_AB"/>
   <method old="getAccount(Landroid/database/Cursor;)Ljava/lang/String;" new="m_Jea"/>
   <method old="getInstance()Lcom/xabber/android/data/message/chat/VibroTable;" new="m_Xr"/>
   <method old="getListOrder()Ljava/lang/String;" new="m_YDa"/>
   <method old="getProjection()[Ljava/lang/String;" new="m_AFa"/>
   <method old="getTableName()Ljava/lang/String;" new="m_dga"/>
   <method old="getUser(Landroid/database/Cursor;)Ljava/lang/String;" new="m_oDa"/>
   <method old="getValue(Landroid/database/Cursor;)Z" new="m_Efa"/>
   <method old="getValueType()Ljava/lang/String;" new="m_pda"/>
   <method old="initialMigrate(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)V" new="m_SDa"/>
   <method old="list()Landroid/database/Cursor;" new="m_wEa"/>
   <method old="migrate(Landroid/database/sqlite/SQLiteDatabase;I)V" new="m_Cd"/>
   <method old="removeAccount(Ljava/lang/String;)V" new="m_YEa"/>
   <method old="write(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V" new="m_xDa"/>
   <field old="NAME Ljava/lang/String;" new="f_e"/>
   <field old="instance Lcom/xabber/android/data/message/chat/VibroTable;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.notification.NotificationManager$7" new="wy.c_Rb">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/notification/NotificationManager;" new="f_e"/>
   <field old="val$account Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.DiscoverInfo$Identity" new="org.jivesoftware.smackx.packet.c_O">
   <method old="getCategory()Ljava/lang/String;" new="m_fK"/>
   <method old="getLanguage()Ljava/lang/String;" new="m_lJ"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getType()Ljava/lang/String;" new="m_b"/>
   <method old="setLanguage(Ljava/lang/String;)V" new="m_bL"/>
   <method old="setType(Ljava/lang/String;)V" new="m_Al"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="category Ljava/lang/String;" new="f_d"/>
   <field old="language Ljava/lang/String;" new="f_m"/>
   <field old="name Ljava/lang/String;" new="f_e"/>
   <field old="type Ljava/lang/String;" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smackx.LastActivityManager" new="org.jivesoftware.smackx.c_n">
   <method old="access$100(Lorg/jivesoftware/smackx/LastActivityManager;)V" new="m_fr"/>
   <method old="access$200(Lorg/jivesoftware/smackx/LastActivityManager;)J" new="m_LQ"/>
   <method old="access$300(Lorg/jivesoftware/smackx/LastActivityManager;)Lorg/jivesoftware/smack/Connection;" new="m_qp"/>
   <method old="getIdleTime()J" new="m_zL"/>
   <method old="getLastActivity(Lorg/jivesoftware/smack/Connection;Ljava/lang/String;)Lorg/jivesoftware/smackx/packet/LastActivity;" new="m_Gj"/>
   <method old="resetIdleTime()V" new="m_kp"/>
   <field old="connection Lorg/jivesoftware/smack/Connection;" new="f_e"/>
   <field old="lastMessageSent J" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.connection.AbstractPool" new="com.xabber.android.data.connection.c_j">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="convert(Ljava/lang/Object;)Ljava/lang/Object;" new="m_LKa"/>
   <method old="getNext()Ljava/lang/Object;" new="m_Ui"/>
   <method old="update(Ljava/util/List;)V" new="m_aKa"/>
   <method old="update([Ljava/lang/Object;)V" new="m_bJa"/>
   <field old="pool Ljava/util/Queue;" new="f_e"/>
   <field old="used Ljava/util/Queue;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.Master" new="org.xbill.DNS.c_Ma">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="_nextRecord()Lorg/xbill/DNS/Record;" new="m_ti"/>
   <method old="endGenerate()V" new="m_WI"/>
   <method old="expandGenerate(Z)V" new="m_si"/>
   <method old="finalize()V" new="finalize"/>
   <method old="generators()Ljava/util/Iterator;" new="m_yI"/>
   <method old="nextGenerated()Lorg/xbill/DNS/Record;" new="m_pi"/>
   <method old="nextRecord()Lorg/xbill/DNS/Record;" new="m_Zh"/>
   <method old="parseName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_YI"/>
   <method old="parseTTLClassAndType()V" new="m_Ej"/>
   <method old="parseUInt32(Ljava/lang/String;)J" new="m_TH"/>
   <method old="startGenerate()V" new="m_qG"/>
   <field old="currentDClass I" new="f_d"/>
   <field old="currentTTL J" new="f_f"/>
   <field old="currentType I" new="f_m"/>
   <field old="defaultTTL J" new="f_l"/>
   <field old="file Ljava/io/File;" new="f_k"/>
   <field old="generator Lorg/xbill/DNS/Generator;" new="f_j"/>
   <field old="generators Ljava/util/List;" new="f_I"/>
   <field old="included Lorg/xbill/DNS/Master;" new="f_b"/>
   <field old="last Lorg/xbill/DNS/Record;" new="f_D"/>
   <field old="needSOATTL Z" new="f_J"/>
   <field old="noExpandGenerate Z" new="f_K"/>
   <field old="origin Lorg/xbill/DNS/Name;" new="f_e"/>
   <field old="st Lorg/xbill/DNS/Tokenizer;" new="f_B"/>
  </class>
  <class old="org.jivesoftware.smack.filter.PacketTypeFilter" new="wy.c_Z">
   <method old="accept(Lorg/jivesoftware/smack/packet/Packet;)Z" new="m_x"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="packetType Ljava/lang/Class;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.MUCOwner$Destroy" new="org.jivesoftware.smackx.packet.c_z">
   <method old="getJid()Ljava/lang/String;" new="m_tL"/>
   <method old="getReason()Ljava/lang/String;" new="m_zj"/>
   <method old="setJid(Ljava/lang/String;)V" new="m_AJ"/>
   <method old="setReason(Ljava/lang/String;)V" new="m_QJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="jid Ljava/lang/String;" new="f_m"/>
   <field old="reason Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.connection.OnPacketListener" new="com.xabber.android.data.connection.c_H">
   <method old="onPacket(Lcom/xabber/android/data/connection/ConnectionItem;Ljava/lang/String;Lorg/jivesoftware/smack/packet/Packet;)V" new="m_tC"/>
  </class>
  <class old="com.xabber.android.ui.dialog.ListenableDialogBuilder" new="wy.c_TA">
   <method old="create()Landroid/app/AlertDialog;" new="create"/>
   <method old="getDialogId()I" new="m_EAa"/>
   <method old="getNegativeTitle()Ljava/lang/String;" new="m_rCa"/>
   <method old="getPositiveTitle()Ljava/lang/String;" new="m_sAa"/>
   <method old="onAccept(Landroid/content/DialogInterface;)V" new="m_pba"/>
   <method old="onCancel(Landroid/content/DialogInterface;)V" new="m_NAa"/>
   <method old="onDecline(Landroid/content/DialogInterface;)V" new="m_bda"/>
   <method old="onDismiss(Landroid/content/DialogInterface;)V" new="onDismiss"/>
   <method old="setOnAcceptListener(Lcom/xabber/android/ui/dialog/OnAcceptListener;)Lcom/xabber/android/ui/dialog/ListenableDialogBuilder;" new="m_fAa"/>
   <method old="setOnCancelListener(Lcom/xabber/android/ui/dialog/OnCancelListener;)Lcom/xabber/android/ui/dialog/ListenableDialogBuilder;" new="m_lba"/>
   <method old="setOnDeclineListener(Lcom/xabber/android/ui/dialog/OnDeclineListener;)Lcom/xabber/android/ui/dialog/ListenableDialogBuilder;" new="m_Tba"/>
   <field old="activity Landroid/app/Activity;" new="f_m"/>
   <field old="dialogId I" new="f_e"/>
   <field old="onAcceptListener Lcom/xabber/android/ui/dialog/OnAcceptListener;" new="f_m"/>
   <field old="onCancelListener Lcom/xabber/android/ui/dialog/OnCancelListener;" new="f_b"/>
   <field old="onDeclineListener Lcom/xabber/android/ui/dialog/OnDeclineListener;" new="f_e"/>
  </class>
  <class old="net.java.otr4j.OtrEngine" new="net.java.otr4j.c_M">
   <method old="addOtrEngineListener(Lnet/java/otr4j/OtrEngineListener;)V" new="m_mc"/>
   <method old="endSession(Lnet/java/otr4j/session/SessionID;)V" new="m_rd"/>
   <method old="getRemotePublicKey(Lnet/java/otr4j/session/SessionID;)Ljava/security/PublicKey;" new="m_od"/>
   <method old="getSession(Lnet/java/otr4j/session/SessionID;)Lnet/java/otr4j/session/Session;" new="m_pb"/>
   <method old="getSessionStatus(Lnet/java/otr4j/session/SessionID;)Lnet/java/otr4j/session/SessionStatus;" new="m_yB"/>
   <method old="refreshSession(Lnet/java/otr4j/session/SessionID;)V" new="m_ec"/>
   <method old="removeOtrEngineListener(Lnet/java/otr4j/OtrEngineListener;)V" new="m_Zb"/>
   <method old="startSession(Lnet/java/otr4j/session/SessionID;)V" new="m_QB"/>
   <method old="transformReceiving(Lnet/java/otr4j/session/SessionID;Ljava/lang/String;)Ljava/lang/String;" new="m_qc"/>
   <method old="transformSending(Lnet/java/otr4j/session/SessionID;Ljava/lang/String;)Ljava/lang/String;" new="m_Ed"/>
   <method old="transformSending(Lnet/java/otr4j/session/SessionID;Ljava/lang/String;Ljava/util/List;)Ljava/lang/String;" new="m_fb"/>
  </class>
  <class old="com.xabber.android.ui.adapter.PhraseListAdapter" new="com.xabber.android.ui.adapter.c_j">
   <method old="append(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" new="m_XBa"/>
   <method old="getActivity()Landroid/app/Activity;" new="m_yba"/>
   <method old="getCount()I" new="getCount"/>
   <method old="getItem(I)Ljava/lang/Object;" new="getItem"/>
   <method old="getItemId(I)J" new="getItemId"/>
   <method old="getTags()Ljava/util/Collection;" new="m_mCa"/>
   <method old="getView(ILandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;" new="getView"/>
   <method old="onChange()V" new="m_cb"/>
  </class>
  <class old="com.xabber.android.ui.AccountList" new="com.xabber.android.ui.AccountList">
   <method old="createIntent(Landroid/content/Context;)Landroid/content/Intent;" new="m_yBa"/>
   <method old="createListAdapter()Lcom/xabber/android/ui/adapter/BaseListEditorAdapter;" new="m_mca"/>
   <method old="getActionWith()Ljava/lang/Object;" new="m_Aba"/>
   <method old="getAddIntent()Landroid/content/Intent;" new="m_DCa"/>
   <method old="getAddTextResourceId()I" new="m_Yba"/>
   <method old="getEditIntent(Ljava/lang/Object;)Landroid/content/Intent;" new="m_GBa"/>
   <method old="getEditIntent(Ljava/lang/String;)Landroid/content/Intent;" new="m_jea"/>
   <method old="getRemoveConfirmation(Ljava/lang/Object;)Ljava/lang/String;" new="m_cda"/>
   <method old="getRemoveConfirmation(Ljava/lang/String;)Ljava/lang/String;" new="m_yfa"/>
   <method old="getRemoveTextResourceId()I" new="m_HCa"/>
   <method old="getSavedValue(Landroid/os/Bundle;Ljava/lang/String;)Ljava/lang/Object;" new="m_dBa"/>
   <method old="getSavedValue(Landroid/os/Bundle;Ljava/lang/String;)Ljava/lang/String;" new="m_dBa"/>
   <method old="onAccept(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_Lc"/>
   <method old="onAccountsChanged(Ljava/util/Collection;)V" new="m_vB"/>
   <method old="onActivityResult(IILandroid/content/Intent;)V" new="onActivityResult"/>
   <method old="onCancel(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_Vb"/>
   <method old="onContextItemSelected(Landroid/view/MenuItem;)Z" new="onContextItemSelected"/>
   <method old="onCreate(Landroid/os/Bundle;)V" new="onCreate"/>
   <method old="onCreateContextMenu(Landroid/view/ContextMenu;Landroid/view/View;Landroid/view/ContextMenu$ContextMenuInfo;)V" new="onCreateContextMenu"/>
   <method old="onCreateContextMenu(Landroid/view/ContextMenu;Ljava/lang/Object;)V" new="m_jAa"/>
   <method old="onCreateContextMenu(Landroid/view/ContextMenu;Ljava/lang/String;)V" new="m_Lea"/>
   <method old="onCreateDialog(I)Landroid/app/Dialog;" new="onCreateDialog"/>
   <method old="onCreateOptionsMenu(Landroid/view/Menu;)Z" new="onCreateOptionsMenu"/>
   <method old="onDecline(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_ad"/>
   <method old="onDestroy()V" new="onDestroy"/>
   <method old="onInflate(Landroid/os/Bundle;)V" new="m_TBa"/>
   <method old="onItemClick(Landroid/widget/AdapterView;Landroid/view/View;IJ)V" new="onItemClick"/>
   <method old="onNewIntent(Landroid/content/Intent;)V" new="onNewIntent"/>
   <method old="onPause()V" new="onPause"/>
   <method old="onResume()V" new="onResume"/>
   <method old="onSaveInstanceState(Landroid/os/Bundle;)V" new="onSaveInstanceState"/>
   <method old="putSavedValue(Landroid/os/Bundle;Ljava/lang/String;Ljava/lang/Object;)V" new="m_ZCa"/>
   <method old="putSavedValue(Landroid/os/Bundle;Ljava/lang/String;Ljava/lang/String;)V" new="m_qda"/>
   <method old="removeItem(Ljava/lang/Object;)V" new="m_Gda"/>
   <method old="removeItem(Ljava/lang/String;)V" new="m_bfa"/>
   <method old="startActivity(Landroid/content/Intent;)V" new="startActivity"/>
   <method old="startActivityForResult(Landroid/content/Intent;I)V" new="startActivityForResult"/>
   <field old="CONTEXT_MENU_STATUS_EDITOR_ID I" new="f_e"/>
   <field old="CONTEXT_MENU_VIEW_ACCOUNT_ID I" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.extension.ping.PingManager$1" new="wy.c_FB">
   <method old="connectionCreated(Lorg/jivesoftware/smack/Connection;)V" new="m_q"/>
  </class>
  <class old="com.xabber.android.data.message.ChatAction" new="com.xabber.android.data.message.ChatAction">
   <method old="getChatAction(Lcom/xabber/android/data/account/StatusMode;)Lcom/xabber/android/data/message/ChatAction;" new="m_KGa"/>
   <method old="getChatAction(Ljava/lang/String;)Lcom/xabber/android/data/message/ChatAction;" new="m_LGa"/>
   <method old="getOptionalText(Ljava/lang/String;)Ljava/lang/String;" new="m_EIa"/>
   <method old="getText(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" new="m_ZHa"/>
   <method old="isStatusChage()Z" new="m_NHa"/>
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/android/data/message/ChatAction;" new="valueOf"/>
   <method old="values()[Lcom/xabber/android/data/message/ChatAction;" new="values"/>
   <field old="$VALUES [Lcom/xabber/android/data/message/ChatAction;" new="f_p"/>
   <field old="attention_called Lcom/xabber/android/data/message/ChatAction;" new="f_u"/>
   <field old="attention_requested Lcom/xabber/android/data/message/ChatAction;" new="f_e"/>
   <field old="available Lcom/xabber/android/data/message/ChatAction;" new="f_E"/>
   <field old="away Lcom/xabber/android/data/message/ChatAction;" new="f_m"/>
   <field old="ban Lcom/xabber/android/data/message/ChatAction;" new="f_S"/>
   <field old="chat Lcom/xabber/android/data/message/ChatAction;" new="f_h"/>
   <field old="complete Lcom/xabber/android/data/message/ChatAction;" new="f_y"/>
   <field old="dnd Lcom/xabber/android/data/message/ChatAction;" new="f_H"/>
   <field old="invite_error Lcom/xabber/android/data/message/ChatAction;" new="f_f"/>
   <field old="invite_sent Lcom/xabber/android/data/message/ChatAction;" new="f_i"/>
   <field old="join Lcom/xabber/android/data/message/ChatAction;" new="f_b"/>
   <field old="kick Lcom/xabber/android/data/message/ChatAction;" new="f_B"/>
   <field old="leave Lcom/xabber/android/data/message/ChatAction;" new="f_Z"/>
   <field old="nickname Lcom/xabber/android/data/message/ChatAction;" new="f_J"/>
   <field old="otr_encryption Lcom/xabber/android/data/message/ChatAction;" new="f_L"/>
   <field old="otr_error Lcom/xabber/android/data/message/ChatAction;" new="f_A"/>
   <field old="otr_finish Lcom/xabber/android/data/message/ChatAction;" new="f_D"/>
   <field old="otr_finished_session Lcom/xabber/android/data/message/ChatAction;" new="f_c"/>
   <field old="otr_plain Lcom/xabber/android/data/message/ChatAction;" new="f_G"/>
   <field old="otr_smp_cheated Lcom/xabber/android/data/message/ChatAction;" new="f_g"/>
   <field old="otr_smp_failed Lcom/xabber/android/data/message/ChatAction;" new="f_a"/>
   <field old="otr_smp_not_approved Lcom/xabber/android/data/message/ChatAction;" new="f_l"/>
   <field old="otr_smp_unverified Lcom/xabber/android/data/message/ChatAction;" new="f_F"/>
   <field old="otr_smp_verified Lcom/xabber/android/data/message/ChatAction;" new="f_j"/>
   <field old="otr_unreadable Lcom/xabber/android/data/message/ChatAction;" new="f_C"/>
   <field old="otr_verified Lcom/xabber/android/data/message/ChatAction;" new="f_I"/>
   <field old="status Lcom/xabber/android/data/message/ChatAction;" new="f_d"/>
   <field old="subject Lcom/xabber/android/data/message/ChatAction;" new="f_K"/>
   <field old="unavailable Lcom/xabber/android/data/message/ChatAction;" new="f_M"/>
   <field old="xa Lcom/xabber/android/data/message/ChatAction;" new="f_k"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.login.LoginContext$ContextedCallbackHandler" new="wy.c_Oa">
   <method old="access$400(Lorg/apache/harmony/javax/security/auth/login/LoginContext$ContextedCallbackHandler;)Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;" new="m_Fv"/>
   <method old="handle([Lorg/apache/harmony/javax/security/auth/callback/Callback;)V" new="m_Jb"/>
   <field old="hiddenHandlerRef Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;" new="f_m"/>
   <field old="this$0 Lorg/apache/harmony/javax/security/auth/login/LoginContext;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.MessageEventManager" new="org.jivesoftware.smackx.c_s">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="access$000(Lorg/jivesoftware/smackx/MessageEventManager;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_UO"/>
   <method old="access$100(Lorg/jivesoftware/smackx/MessageEventManager;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_nP"/>
   <method old="addMessageEventNotificationListener(Lorg/jivesoftware/smackx/MessageEventNotificationListener;)V" new="m_cQ"/>
   <method old="addMessageEventRequestListener(Lorg/jivesoftware/smackx/MessageEventRequestListener;)V" new="m_Ap"/>
   <method old="addNotificationsRequests(Lorg/jivesoftware/smack/packet/Message;ZZZZ)V" new="m_mQ"/>
   <method old="destroy()V" new="m_cd"/>
   <method old="finalize()V" new="finalize"/>
   <method old="fireMessageEventNotificationListeners(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_Mr"/>
   <method old="fireMessageEventRequestListeners(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_Iq"/>
   <method old="init()V" new="m_ZG"/>
   <method old="removeMessageEventNotificationListener(Lorg/jivesoftware/smackx/MessageEventNotificationListener;)V" new="m_Ep"/>
   <method old="removeMessageEventRequestListener(Lorg/jivesoftware/smackx/MessageEventRequestListener;)V" new="m_sQ"/>
   <method old="sendCancelledNotification(Ljava/lang/String;Ljava/lang/String;)V" new="m_yp"/>
   <method old="sendComposingNotification(Ljava/lang/String;Ljava/lang/String;)V" new="m_FR"/>
   <method old="sendDeliveredNotification(Ljava/lang/String;Ljava/lang/String;)V" new="m_JP"/>
   <method old="sendDisplayedNotification(Ljava/lang/String;Ljava/lang/String;)V" new="m_KQ"/>
   <field old="con Lorg/jivesoftware/smack/Connection;" new="f_e"/>
   <field old="messageEventNotificationListeners Ljava/util/List;" new="f_m"/>
   <field old="messageEventRequestListeners Ljava/util/List;" new="f_B"/>
   <field old="packetFilter Lorg/jivesoftware/smack/filter/PacketFilter;" new="f_d"/>
   <field old="packetListener Lorg/jivesoftware/smack/PacketListener;" new="f_b"/>
  </class>
  <class old="com.xabber.xmpp.vcard.Logo" new="com.xabber.xmpp.vcard.c_A">
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="net.java.otr4j.io.messages.MysteriousT" new="net.java.otr4j.io.messages.c_j">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="hashCode()I" new="hashCode"/>
   <field old="ctr [B" new="f_e"/>
   <field old="encryptedMessage [B" new="f_d"/>
   <field old="flags I" new="f_j"/>
   <field old="messageType I" new="f_k"/>
   <field old="nextDH Ljavax/crypto/interfaces/DHPublicKey;" new="f_B"/>
   <field old="protocolVersion I" new="f_l"/>
   <field old="recipientKeyID I" new="f_b"/>
   <field old="senderKeyID I" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.extension.otr.OTRManager$1" new="com.xabber.android.data.extension.otr.c_G">
   <method old="newThread(Ljava/lang/Runnable;)Ljava/lang/Thread;" new="newThread"/>
   <field old="this$0 Lcom/xabber/android/data/extension/otr/OTRManager;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.extension.otr.OTRManager$2" new="com.xabber.android.data.extension.otr.c_k">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/extension/otr/OTRManager;" new="f_e"/>
   <field old="val$fingerprints Lcom/xabber/android/data/entity/NestedNestedMaps;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.extension.otr.OTRManager$3" new="com.xabber.android.data.extension.otr.c_f">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/extension/otr/OTRManager;" new="f_m"/>
   <field old="val$accountItem Lcom/xabber/android/data/account/AccountItem;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.extension.otr.OTRManager$4" new="com.xabber.android.data.extension.otr.c_M">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/extension/otr/OTRManager;" new="f_B"/>
   <field old="val$account Ljava/lang/String;" new="f_m"/>
   <field old="val$fingerprint Ljava/lang/String;" new="f_e"/>
   <field old="val$user Ljava/lang/String;" new="f_d"/>
   <field old="val$verified Z" new="f_b"/>
  </class>
  <class old="org.xbill.DNS.tests.xfrin" new="wy.c_Aa">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="main([Ljava/lang/String;)V" new="main"/>
   <method old="usage(Ljava/lang/String;)V" new="m_zA"/>
  </class>
  <class old="com.xabber.xmpp.vcard.VCardProperty" new="com.xabber.xmpp.vcard.VCardProperty">
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/xmpp/vcard/VCardProperty;" new="valueOf"/>
   <method old="values()[Lcom/xabber/xmpp/vcard/VCardProperty;" new="values"/>
   <field old="$VALUES [Lcom/xabber/xmpp/vcard/VCardProperty;" new="f_j"/>
   <field old="BDAY Lcom/xabber/xmpp/vcard/VCardProperty;" new="f_m"/>
   <field old="DESC Lcom/xabber/xmpp/vcard/VCardProperty;" new="f_e"/>
   <field old="FN Lcom/xabber/xmpp/vcard/VCardProperty;" new="f_H"/>
   <field old="JABBERID Lcom/xabber/xmpp/vcard/VCardProperty;" new="f_B"/>
   <field old="MAILER Lcom/xabber/xmpp/vcard/VCardProperty;" new="f_d"/>
   <field old="NICKNAME Lcom/xabber/xmpp/vcard/VCardProperty;" new="f_J"/>
   <field old="NOTE Lcom/xabber/xmpp/vcard/VCardProperty;" new="f_b"/>
   <field old="PRODID Lcom/xabber/xmpp/vcard/VCardProperty;" new="f_M"/>
   <field old="REV Lcom/xabber/xmpp/vcard/VCardProperty;" new="f_l"/>
   <field old="ROLE Lcom/xabber/xmpp/vcard/VCardProperty;" new="f_f"/>
   <field old="SORT_STRING Lcom/xabber/xmpp/vcard/VCardProperty;" new="f_K"/>
   <field old="TITLE Lcom/xabber/xmpp/vcard/VCardProperty;" new="f_g"/>
   <field old="TZ Lcom/xabber/xmpp/vcard/VCardProperty;" new="f_k"/>
   <field old="UID Lcom/xabber/xmpp/vcard/VCardProperty;" new="f_D"/>
   <field old="URL Lcom/xabber/xmpp/vcard/VCardProperty;" new="f_G"/>
   <field old="name Ljava/lang/String;" new="f_I"/>
  </class>
  <class old="org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntrySetIterator" new="org.jivesoftware.smack.util.collections.c_l">
   <method old="currentEntry()Lorg/jivesoftware/smack/util/collections/AbstractReferenceMap$ReferenceEntry;" new="m_yQ"/>
   <method old="hasNext()Z" new="hasNext"/>
   <method old="next()Ljava/lang/Object;" new="next"/>
   <method old="next()Lorg/jivesoftware/smack/util/collections/AbstractReferenceMap$ReferenceEntry;" new="m_Eq"/>
   <method old="nextEntry()Lorg/jivesoftware/smack/util/collections/AbstractReferenceMap$ReferenceEntry;" new="m_Kq"/>
   <method old="remove()V" new="remove"/>
   <method old="superNext()Lorg/jivesoftware/smack/util/collections/AbstractReferenceMap$ReferenceEntry;" new="m_cr"/>
   <field old="currentKey Ljava/lang/Object;" new="f_b"/>
   <field old="currentValue Ljava/lang/Object;" new="f_m"/>
   <field old="entry Lorg/jivesoftware/smack/util/collections/AbstractReferenceMap$ReferenceEntry;" new="f_f"/>
   <field old="expectedModCount I" new="f_l"/>
   <field old="index I" new="f_k"/>
   <field old="nextKey Ljava/lang/Object;" new="f_e"/>
   <field old="nextValue Ljava/lang/Object;" new="f_j"/>
   <field old="parent Lorg/jivesoftware/smack/util/collections/AbstractReferenceMap;" new="f_d"/>
   <field old="previous Lorg/jivesoftware/smack/util/collections/AbstractReferenceMap$ReferenceEntry;" new="f_B"/>
  </class>
  <class old="org.jivesoftware.smack.packet.Message$Body" new="org.jivesoftware.smack.packet.c_D">
   <method old="access$300(Lorg/jivesoftware/smack/packet/Message$Body;)Ljava/lang/String;" new="m_nR"/>
   <method old="access$400(Lorg/jivesoftware/smack/packet/Message$Body;)Ljava/lang/String;" new="m_GT"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getLanguage()Ljava/lang/String;" new="m_lJ"/>
   <method old="getMessage()Ljava/lang/String;" new="m_Wm"/>
   <method old="hashCode()I" new="hashCode"/>
   <field old="language Ljava/lang/String;" new="f_e"/>
   <field old="message Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.Tokenizer$TokenizerException" new="org.xbill.DNS.c_L">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getBaseMessage()Ljava/lang/String;" new="m_ND"/>
   <field old="message Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.AFSDBRecord" new="org.xbill.DNS.c_cd">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getHost()Lorg/xbill/DNS/Name;" new="m_vD"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getNameField()Lorg/xbill/DNS/Name;" new="m_ng"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getSubtype()I" new="m_Hl"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="getU16Field()I" new="m_DG"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="nameField Lorg/xbill/DNS/Name;" new="f_m"/>
   <field old="serialVersionUID J" new="f_m"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
   <field old="u16Field I" new="f_d"/>
  </class>
  <class old="com.xabber.xmpp.vcard.TelephoneProvider" new="com.xabber.xmpp.vcard.c_j">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/vcard/Telephone;" new="m_ZZ"/>
   <method old="getInstance()Lcom/xabber/xmpp/vcard/TelephoneProvider;" new="m_Xr"/>
   <method old="getTypes()[Lcom/xabber/xmpp/vcard/TelephoneType;" new="m_xg"/>
   <method old="getTypes()[Ljava/lang/Enum;" new="m_xg"/>
   <method old="getValueName()Ljava/lang/String;" new="m_IZ"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/AbstractTypedData;)Z" new="m_caa"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/AbstractTypedDataWithValue;)Z" new="m_RX"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
   <field old="instance Lcom/xabber/xmpp/vcard/TelephoneProvider;" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.archive.Previous" new="com.xabber.xmpp.archive.c_a">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getStart()Ljava/util/Date;" new="m_vC"/>
   <method old="getWith()Ljava/lang/String;" new="m_ib"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="setStart(Ljava/util/Date;)V" new="m_SBa"/>
   <method old="setWith(Ljava/lang/String;)V" new="m_mda"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_e"/>
   <field old="START_ATTRIBUTE Ljava/lang/String;" new="f_d"/>
   <field old="WITH_ATTRIBUTE Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.apache.qpid.management.common.sasl.JCAProvider" new="wy.c_Ta">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="register(Ljava/util/Map;)V" new="m_Lv"/>
   <field old="serialVersionUID J" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.OfflineMessageInfo" new="org.jivesoftware.smackx.packet.c_h">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="getNode()Ljava/lang/String;" new="m_Ol"/>
   <method old="setNode(Ljava/lang/String;)V" new="m_kJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="node Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.callback.CallbackHandler" new="wy.c_B">
   <method old="handle([Lorg/apache/harmony/javax/security/auth/callback/Callback;)V" new="m_Jb"/>
  </class>
  <class old="com.xabber.android.service.SyncAdapterService$SyncAdapter" new="com.xabber.android.service.c_E">
   <method old="onPerformSync(Landroid/accounts/Account;Landroid/os/Bundle;Ljava/lang/String;Landroid/content/ContentProviderClient;Landroid/content/SyncResult;)V" new="onPerformSync"/>
  </class>
  <class old="org.xbill.DNS.Cache" new="org.xbill.DNS.c_fA">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="access$000(JJ)I" new="m_Fi"/>
   <method old="addElement(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Cache$Element;)V" new="m_wg"/>
   <method old="addMessage(Lorg/xbill/DNS/Message;)Lorg/xbill/DNS/SetResponse;" new="m_KI"/>
   <method old="addNegative(Lorg/xbill/DNS/Name;ILorg/xbill/DNS/SOARecord;I)V" new="m_Lh"/>
   <method old="addRRset(Lorg/xbill/DNS/RRset;I)V" new="m_nI"/>
   <method old="addRecord(Lorg/xbill/DNS/Record;ILjava/lang/Object;)V" new="m_uh"/>
   <method old="allElements(Ljava/lang/Object;)[Lorg/xbill/DNS/Cache$Element;" new="m_vh"/>
   <method old="clearCache()V" new="m_yh"/>
   <method old="exactName(Lorg/xbill/DNS/Name;)Ljava/lang/Object;" new="m_wE"/>
   <method old="findAnyRecords(Lorg/xbill/DNS/Name;I)[Lorg/xbill/DNS/RRset;" new="m_Ug"/>
   <method old="findElement(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Cache$Element;" new="m_fj"/>
   <method old="findRecords(Lorg/xbill/DNS/Name;I)[Lorg/xbill/DNS/RRset;" new="m_uD"/>
   <method old="findRecords(Lorg/xbill/DNS/Name;II)[Lorg/xbill/DNS/RRset;" new="m_ji"/>
   <method old="flushName(Lorg/xbill/DNS/Name;)V" new="m_wI"/>
   <method old="flushSet(Lorg/xbill/DNS/Name;I)V" new="m_tg"/>
   <method old="getCred(IZ)I" new="m_ug"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getMaxCache()I" new="m_kH"/>
   <method old="getMaxEntries()I" new="m_ci"/>
   <method old="getMaxNCache()I" new="m_oI"/>
   <method old="getSize()I" new="m_DH"/>
   <method old="limitExpire(JJ)I" new="m_Di"/>
   <method old="lookup(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/SetResponse;" new="m_Vi"/>
   <method old="lookupRecords(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/SetResponse;" new="m_yG"/>
   <method old="markAdditional(Lorg/xbill/DNS/RRset;Ljava/util/Set;)V" new="m_pG"/>
   <method old="oneElement(Lorg/xbill/DNS/Name;Ljava/lang/Object;II)Lorg/xbill/DNS/Cache$Element;" new="m_NG"/>
   <method old="removeElement(Lorg/xbill/DNS/Name;I)V" new="m_xI"/>
   <method old="removeName(Lorg/xbill/DNS/Name;)V" new="m_zH"/>
   <method old="setMaxCache(I)V" new="m_bH"/>
   <method old="setMaxEntries(I)V" new="m_GI"/>
   <method old="setMaxNCache(I)V" new="m_Eh"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="data Lorg/xbill/DNS/Cache$CacheMap;" new="f_e"/>
   <field old="dclass I" new="f_m"/>
   <field old="defaultMaxEntries I" new="f_B"/>
   <field old="maxcache I" new="f_d"/>
   <field old="maxncache I" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.intent.BaseAccountIntentBuilder" new="wy.c_Kc">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="addSegment(Ljava/lang/String;)Lcom/xabber/android/data/intent/SegmentIntentBuilder;" new="m_eia"/>
   <method old="build()Landroid/content/Intent;" new="m_oIa"/>
   <method old="getAccount(Landroid/content/Intent;)Ljava/lang/String;" new="m_lCa"/>
   <method old="getSegment(Landroid/content/Intent;I)Ljava/lang/String;" new="m_Qia"/>
   <method old="getSegmentCount()I" new="m_EGa"/>
   <method old="getSegments(Landroid/content/Intent;)Ljava/util/List;" new="m_Eha"/>
   <method old="preBuild()V" new="m_KHa"/>
   <method old="setAccount(Ljava/lang/String;)Lcom/xabber/android/data/intent/BaseAccountIntentBuilder;" new="m_jIa"/>
   <field old="account Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.Instance" new="com.xabber.xmpp.c_E">
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
  </class>
  <class old="com.xabber.android.data.message.chat.ChatManager" new="wy.c_WA">
   <method old="access$000(Lcom/xabber/android/data/message/chat/ChatManager;Ljava/util/Set;Lcom/xabber/android/data/entity/NestedMap;Lcom/xabber/android/data/entity/NestedMap;Lcom/xabber/android/data/entity/NestedMap;Lcom/xabber/android/data/entity/NestedMap;)V" new="m_KEa"/>
   <method old="getInstance()Lcom/xabber/android/data/message/chat/ChatManager;" new="m_Xr"/>
   <method old="getSelectionEnd(Ljava/lang/String;Ljava/lang/String;)I" new="m_pEa"/>
   <method old="getSelectionStart(Ljava/lang/String;Ljava/lang/String;)I" new="m_hea"/>
   <method old="getSound(Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri;" new="m_kea"/>
   <method old="getTypedMessage(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" new="m_qea"/>
   <method old="isMakeVibro(Ljava/lang/String;Ljava/lang/String;)Z" new="m_hFa"/>
   <method old="isNotifyVisible(Ljava/lang/String;Ljava/lang/String;)Z" new="m_Aga"/>
   <method old="isSaveMessages(Ljava/lang/String;Ljava/lang/String;)Z" new="m_FEa"/>
   <method old="isShowText(Ljava/lang/String;Ljava/lang/String;)Z" new="m_wda"/>
   <method old="onAccountRemoved(Lcom/xabber/android/data/account/AccountItem;)V" new="m_kb"/>
   <method old="onLoad()V" new="m_pA"/>
   <method old="onLoaded(Ljava/util/Set;Lcom/xabber/android/data/entity/NestedMap;Lcom/xabber/android/data/entity/NestedMap;Lcom/xabber/android/data/entity/NestedMap;Lcom/xabber/android/data/entity/NestedMap;)V" new="m_REa"/>
   <method old="setMakeVibro(Ljava/lang/String;Ljava/lang/String;Z)V" new="m_mDa"/>
   <method old="setNotifyVisible(Ljava/lang/String;Ljava/lang/String;Z)V" new="m_jFa"/>
   <method old="setSaveMessages(Ljava/lang/String;Ljava/lang/String;Z)V" new="m_Sfa"/>
   <method old="setShowText(Ljava/lang/String;Ljava/lang/String;Z)V" new="m_hEa"/>
   <method old="setSound(Ljava/lang/String;Ljava/lang/String;Landroid/net/Uri;)V" new="m_ZDa"/>
   <method old="setTyped(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;II)V" new="m_pea"/>
   <field old="EMPTY_SOUND Landroid/net/Uri;" new="f_k"/>
   <field old="PRIVATE_CHAT Ljava/lang/Object;" new="f_f"/>
   <field old="chatInputs Lcom/xabber/android/data/entity/NestedMap;" new="f_m"/>
   <field old="instance Lcom/xabber/android/data/message/chat/ChatManager;" new="f_b"/>
   <field old="makeVibro Lcom/xabber/android/data/entity/NestedMap;" new="f_l"/>
   <field old="notifyVisible Lcom/xabber/android/data/entity/NestedMap;" new="f_B"/>
   <field old="privateChats Lcom/xabber/android/data/entity/NestedMap;" new="f_e"/>
   <field old="showText Lcom/xabber/android/data/entity/NestedMap;" new="f_d"/>
   <field old="sounds Lcom/xabber/android/data/entity/NestedMap;" new="f_j"/>
  </class>
  <class old="org.jivesoftware.smack.util.collections.AbstractHashedMap$EntrySetIterator" new="org.jivesoftware.smack.util.collections.c_Aa">
   <method old="currentEntry()Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;" new="m_yQ"/>
   <method old="hasNext()Z" new="hasNext"/>
   <method old="next()Ljava/lang/Object;" new="next"/>
   <method old="next()Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;" new="m_Eq"/>
   <method old="nextEntry()Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;" new="m_Kq"/>
   <method old="remove()V" new="remove"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="expectedModCount I" new="f_d"/>
   <field old="hashIndex I" new="f_e"/>
   <field old="last Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;" new="f_b"/>
   <field old="next Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;" new="f_B"/>
   <field old="parent Lorg/jivesoftware/smack/util/collections/AbstractHashedMap;" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.archive.ListProvider" new="com.xabber.xmpp.archive.c_l">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/archive/List;" new="m_ZZ"/>
   <method old="parseIQ(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/IQ;" new="m_g"/>
   <method old="parseIQ(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/IQ;" new="m_g"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/archive/List;)Z" new="m_cCa"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/archive/List;)Lcom/xabber/xmpp/archive/List;" new="m_sCa"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
  </class>
  <class old="org.jivesoftware.smackx.filetransfer.FileTransferNegotiator$1" new="org.jivesoftware.smackx.filetransfer.c_l">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
  </class>
  <class old="org.jivesoftware.smackx.filetransfer.FileTransferNegotiator$2" new="org.jivesoftware.smackx.filetransfer.c_i">
   <method old="connectionClosed()V" new="m_r"/>
   <method old="connectionClosedOnError(Ljava/lang/Exception;)V" new="m_U"/>
   <method old="reconnectingIn(I)V" new="m_Z"/>
   <method old="reconnectionFailed(Ljava/lang/Exception;)V" new="m_S"/>
   <method old="reconnectionSuccessful()V" new="m_W"/>
   <field old="this$0 Lorg/jivesoftware/smackx/filetransfer/FileTransferNegotiator;" new="f_m"/>
   <field old="val$connection Lorg/jivesoftware/smack/Connection;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.extension.archive.HistoryStorage" new="com.xabber.android.data.extension.archive.c_f">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="addHeaders(Ljava/util/Collection;)V" new="m_cia"/>
   <method old="enoughMessages(II)Z" new="m_uha"/>
   <method old="getHeaderCount()I" new="m_pIa"/>
   <method old="getNext()Ljava/lang/String;" new="m_Ui"/>
   <method old="hasPacketId(Ljava/lang/String;)Z" new="m_aha"/>
   <method old="isHeadersReceived()Z" new="m_pga"/>
   <method old="isInProgress()Z" new="m_sGa"/>
   <method old="onHeadersReceived()V" new="m_kGa"/>
   <method old="onRequest(II)V" new="m_xia"/>
   <method old="onResume()Z" new="m_Yga"/>
   <method old="onSuccess()V" new="m_CIa"/>
   <method old="peekHeader()Lcom/xabber/xmpp/archive/CollectionHeader;" new="m_xHa"/>
   <method old="pollHeader()Lcom/xabber/xmpp/archive/CollectionHeader;" new="m_bHa"/>
   <method old="reset()V" new="m_ld"/>
   <method old="setInProgress(Z)V" new="m_Pia"/>
   <method old="setNext(Ljava/lang/String;)V" new="m_rGa"/>
   <method old="setPacketId(Ljava/lang/String;)V" new="m_Qga"/>
   <method old="setRequestedCountAtLeast(II)V" new="m_Fha"/>
   <field old="packetId Ljava/lang/String;" new="f_b"/>
   <field old="receivedIncoming I" new="f_e"/>
   <field old="receivedNew I" new="f_m"/>
   <field old="requestedIncoming Ljava/lang/Integer;" new="f_B"/>
   <field old="requestedNew Ljava/lang/Integer;" new="f_d"/>
  </class>
  <class old="com.xabber.android.data.connection.ReconnectionManager$1" new="com.xabber.android.data.connection.ReconnectionManager$1">
  </class>
  <class old="com.xabber.android.ui.dialog.OrbotInstallerDialogBuilder$1" new="wy.c_ZC">
   <method old="onClick(Landroid/content/DialogInterface;I)V" new="onClick"/>
   <field old="this$0 Lcom/xabber/android/ui/dialog/OrbotInstallerDialogBuilder;" new="f_e"/>
   <field old="val$activity Landroid/app/Activity;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.filter.ThreadFilter" new="wy.c_da">
   <method old="accept(Lorg/jivesoftware/smack/packet/Packet;)Z" new="m_x"/>
   <field old="thread Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.packet.DefaultPacketExtension" new="org.jivesoftware.smack.packet.c_b">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getNames()Ljava/util/Collection;" new="m_tK"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="getValue(Ljava/lang/String;)Ljava/lang/String;" new="m_oF"/>
   <method old="setValue(Ljava/lang/String;Ljava/lang/String;)V" new="m_dk"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="elementName Ljava/lang/String;" new="f_m"/>
   <field old="map Ljava/util/Map;" new="f_e"/>
   <field old="namespace Ljava/lang/String;" new="f_b"/>
  </class>
  <class old="org.xbill.DNS.tests.primary" new="wy.c_v">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="main([Ljava/lang/String;)V" new="main"/>
   <method old="usage()V" new="m_fA"/>
  </class>
  <class old="com.xabber.xmpp.archive.AbstractSettingsProvider" new="com.xabber.xmpp.archive.c_F">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/archive/AbstractSettings;)Lcom/xabber/xmpp/archive/AbstractSettings;" new="m_xaa"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IQIBBInputStream" new="org.jivesoftware.smackx.bytestreams.ibb.c_G">
   <method old="access$400(Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamSession$IBBInputStream;)I" new="m_oO"/>
   <method old="access$402(Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamSession$IBBInputStream;I)I" new="m_bO"/>
   <method old="access$500(Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamSession$IBBInputStream;)V" new="m_om"/>
   <method old="access$600(Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamSession$IBBInputStream;)V" new="m_mm"/>
   <method old="access$700(Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamSession$IBBInputStream;)Z" new="m_fm"/>
   <method old="close()V" new="close"/>
   <method old="getDataPacketFilter()Lorg/jivesoftware/smack/filter/PacketFilter;" new="m_bM"/>
   <method old="getDataPacketListener()Lorg/jivesoftware/smack/PacketListener;" new="m_jN"/>
   <method old="markSupported()Z" new="markSupported"/>
   <method old="read()I" new="read"/>
   <method old="read([B)I" new="read"/>
   <method old="read([BII)I" new="read"/>
   <field old="dataQueue Ljava/util/concurrent/BlockingQueue;" new="f_e"/>
   <field old="this$0 Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamSession;" new="f_b"/>
  </class>
  <class old="com.jcraft.jzlib.Deflate" new="wy.c_oA">
   <method old="_tr_align()V" new="m_iNa"/>
   <method old="_tr_flush_block(IIZ)V" new="m_COa"/>
   <method old="_tr_stored_block(IIZ)V" new="m_tMa"/>
   <method old="_tr_tally(II)Z" new="m_zMa"/>
   <method old="bi_flush()V" new="m_WNa"/>
   <method old="bi_windup()V" new="m_Poa"/>
   <method old="build_bl_tree()I" new="m_LMa"/>
   <method old="compress_block([S[S)V" new="m_DNa"/>
   <method old="copy_block(IIZ)V" new="m_Wma"/>
   <method old="deflate(Lcom/jcraft/jzlib/ZStream;I)I" new="m_sna"/>
   <method old="deflateEnd()I" new="m_dMa"/>
   <method old="deflateInit(Lcom/jcraft/jzlib/ZStream;I)I" new="m_tma"/>
   <method old="deflateInit(Lcom/jcraft/jzlib/ZStream;II)I" new="m_joa"/>
   <method old="deflateInit2(Lcom/jcraft/jzlib/ZStream;IIIII)I" new="m_Sna"/>
   <method old="deflateParams(Lcom/jcraft/jzlib/ZStream;II)I" new="m_Zna"/>
   <method old="deflateReset(Lcom/jcraft/jzlib/ZStream;)I" new="m_LOa"/>
   <method old="deflateSetDictionary(Lcom/jcraft/jzlib/ZStream;[BI)I" new="m_gMa"/>
   <method old="deflate_fast(I)I" new="m_sma"/>
   <method old="deflate_slow(I)I" new="m_Ama"/>
   <method old="deflate_stored(I)I" new="m_Toa"/>
   <method old="fill_window()V" new="m_Zoa"/>
   <method old="flush_block_only(Z)V" new="m_BOa"/>
   <method old="init_block()V" new="m_cna"/>
   <method old="lm_init()V" new="m_yLa"/>
   <method old="longest_match(I)I" new="m_vMa"/>
   <method old="pqdownheap([SI)V" new="m_Hoa"/>
   <method old="putShortMSB(I)V" new="m_GMa"/>
   <method old="put_byte(B)V" new="m_Ooa"/>
   <method old="put_byte([BII)V" new="m_fOa"/>
   <method old="put_short(I)V" new="m_hOa"/>
   <method old="scan_tree([SI)V" new="m_iOa"/>
   <method old="send_all_trees(III)V" new="m_HNa"/>
   <method old="send_bits(II)V" new="m_wna"/>
   <method old="send_code(I[S)V" new="m_Oma"/>
   <method old="send_tree([SI)V" new="m_yna"/>
   <method old="set_data_type()V" new="m_SNa"/>
   <method old="smaller([SII[B)Z" new="m_zoa"/>
   <method old="tr_init()V" new="m_Rna"/>
   <field old="BL_CODES I" new="f_Ya"/>
   <field old="BUSY_STATE I" new="f_ya"/>
   <field old="BlockDone I" new="f_Na"/>
   <field old="Buf_size I" new="f_h"/>
   <field old="DEF_MEM_LEVEL I" new="f_M"/>
   <field old="DYN_TREES I" new="f_d"/>
   <field old="D_CODES I" new="f_N"/>
   <field old="END_BLOCK I" new="f_eC"/>
   <field old="FAST I" new="f_ka"/>
   <field old="FINISH_STATE I" new="f_Gd"/>
   <field old="FinishDone I" new="f_I"/>
   <field old="FinishStarted I" new="f_Ua"/>
   <field old="HEAP_SIZE I" new="f_i"/>
   <field old="INIT_STATE I" new="f_r"/>
   <field old="LENGTH_CODES I" new="f_Fa"/>
   <field old="LITERALS I" new="f_E"/>
   <field old="L_CODES I" new="f_k"/>
   <field old="MAX_BITS I" new="f_pa"/>
   <field old="MAX_MATCH I" new="f_lC"/>
   <field old="MAX_MEM_LEVEL I" new="f_c"/>
   <field old="MAX_WBITS I" new="f_ia"/>
   <field old="MIN_LOOKAHEAD I" new="f_WB"/>
   <field old="MIN_MATCH I" new="f_ra"/>
   <field old="NeedMore I" new="f_H"/>
   <field old="PRESET_DICT I" new="f_w"/>
   <field old="REPZ_11_138 I" new="f_X"/>
   <field old="REPZ_3_10 I" new="f_Ia"/>
   <field old="REP_3_6 I" new="f_l"/>
   <field old="SLOW I" new="f_v"/>
   <field old="STATIC_TREES I" new="f_Qa"/>
   <field old="STORED I" new="f_A"/>
   <field old="STORED_BLOCK I" new="f_Ga"/>
   <field old="Z_ASCII I" new="f_S"/>
   <field old="Z_BINARY I" new="f_la"/>
   <field old="Z_BUF_ERROR I" new="f_T"/>
   <field old="Z_DATA_ERROR I" new="f_Oa"/>
   <field old="Z_DEFAULT_COMPRESSION I" new="f_y"/>
   <field old="Z_DEFAULT_STRATEGY I" new="f_Pa"/>
   <field old="Z_DEFLATED I" new="f_p"/>
   <field old="Z_ERRNO I" new="f_Ja"/>
   <field old="Z_FILTERED I" new="f_aa"/>
   <field old="Z_FINISH I" new="f_z"/>
   <field old="Z_FULL_FLUSH I" new="f_Z"/>
   <field old="Z_HUFFMAN_ONLY I" new="f_V"/>
   <field old="Z_MEM_ERROR I" new="f_n"/>
   <field old="Z_NEED_DICT I" new="f_Q"/>
   <field old="Z_NO_FLUSH I" new="f_jd"/>
   <field old="Z_OK I" new="f_t"/>
   <field old="Z_PARTIAL_FLUSH I" new="f_s"/>
   <field old="Z_STREAM_END I" new="f_ca"/>
   <field old="Z_STREAM_ERROR I" new="f_C"/>
   <field old="Z_SYNC_FLUSH I" new="f_j"/>
   <field old="Z_UNKNOWN I" new="f_Ra"/>
   <field old="Z_VERSION_ERROR I" new="f_e"/>
   <field old="bi_buf S" new="f_f"/>
   <field old="bi_valid I" new="f_F"/>
   <field old="bl_count [S" new="f_ha"/>
   <field old="bl_desc Lcom/jcraft/jzlib/Tree;" new="f_bb"/>
   <field old="bl_tree [S" new="f_oa"/>
   <field old="block_start I" new="f_g"/>
   <field old="config_table [Lcom/jcraft/jzlib/Deflate$Config;" new="f_Wa"/>
   <field old="d_buf I" new="f_Za"/>
   <field old="d_desc Lcom/jcraft/jzlib/Tree;" new="f_G"/>
   <field old="data_type B" new="f_qa"/>
   <field old="depth [B" new="f_D"/>
   <field old="dyn_dtree [S" new="f_ga"/>
   <field old="dyn_ltree [S" new="f_La"/>
   <field old="good_match I" new="f_Xa"/>
   <field old="hash_bits I" new="f_Ba"/>
   <field old="hash_mask I" new="f_ja"/>
   <field old="hash_shift I" new="f_ba"/>
   <field old="hash_size I" new="f_Va"/>
   <field old="head [S" new="f_ma"/>
   <field old="heap [I" new="f_O"/>
   <field old="heap_len I" new="f_za"/>
   <field old="heap_max I" new="f_ua"/>
   <field old="ins_h I" new="f_U"/>
   <field old="l_buf I" new="f_wa"/>
   <field old="l_desc Lcom/jcraft/jzlib/Tree;" new="f_W"/>
   <field old="last_eob_len I" new="f_Y"/>
   <field old="last_flush I" new="f_ta"/>
   <field old="last_lit I" new="f_Ma"/>
   <field old="level I" new="f_Da"/>
   <field old="lit_bufsize I" new="f_u"/>
   <field old="lookahead I" new="f_fa"/>
   <field old="match_available I" new="f_va"/>
   <field old="match_length I" new="f_B"/>
   <field old="match_start I" new="f_x"/>
   <field old="matches I" new="f_Ca"/>
   <field old="max_chain_length I" new="f_Ta"/>
   <field old="max_lazy_match I" new="f_L"/>
   <field old="method B" new="f_J"/>
   <field old="nice_match I" new="f_FA"/>
   <field old="noheader I" new="f_na"/>
   <field old="opt_len I" new="f_b"/>
   <field old="pending I" new="f_m"/>
   <field old="pending_buf [B" new="f_o"/>
   <field old="pending_buf_size I" new="f_Ea"/>
   <field old="pending_out I" new="f_sa"/>
   <field old="prev [S" new="f_K"/>
   <field old="prev_length I" new="f_Aa"/>
   <field old="prev_match I" new="f_xa"/>
   <field old="static_len I" new="f_da"/>
   <field old="status I" new="f_a"/>
   <field old="strategy I" new="f_R"/>
   <field old="strm Lcom/jcraft/jzlib/ZStream;" new="f_Sa"/>
   <field old="strstart I" new="f_Ha"/>
   <field old="w_bits I" new="f_Cd"/>
   <field old="w_mask I" new="f_P"/>
   <field old="w_size I" new="f_q"/>
   <field old="window [B" new="f_ea"/>
   <field old="window_size I" new="f_Kd"/>
   <field old="z_errmsg [Ljava/lang/String;" new="f_Ka"/>
  </class>
  <class old="org.jivesoftware.smack.packet.PrivacyItem" new="org.jivesoftware.smack.packet.c_k">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getOrder()I" new="m_Kh"/>
   <method old="getRule()Lorg/jivesoftware/smack/packet/PrivacyItem$PrivacyRule;" new="m_fU"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/PrivacyItem$Type;" new="m_b"/>
   <method old="getValue()Ljava/lang/String;" new="m_Ra"/>
   <method old="isAllow()Z" new="m_cu"/>
   <method old="isFilterEverything()Z" new="m_rT"/>
   <method old="isFilterIQ()Z" new="m_At"/>
   <method old="isFilterMessage()Z" new="m_oT"/>
   <method old="isFilterPresence_in()Z" new="m_CU"/>
   <method old="isFilterPresence_out()Z" new="m_Ct"/>
   <method old="setAllow(Z)V" new="m_Vs"/>
   <method old="setFilterIQ(Z)V" new="m_qR"/>
   <method old="setFilterMessage(Z)V" new="m_wS"/>
   <method old="setFilterPresence_in(Z)V" new="m_RT"/>
   <method old="setFilterPresence_out(Z)V" new="m_Bu"/>
   <method old="setOrder(I)V" new="m_fs"/>
   <method old="setRule(Lorg/jivesoftware/smack/packet/PrivacyItem$PrivacyRule;)V" new="m_EU"/>
   <method old="setValue(Ljava/lang/String;)V" new="m_TT"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="allow Z" new="f_k"/>
   <field old="filterIQ Z" new="f_B"/>
   <field old="filterMessage Z" new="f_e"/>
   <field old="filterPresence_in Z" new="f_d"/>
   <field old="filterPresence_out Z" new="f_b"/>
   <field old="order I" new="f_m"/>
   <field old="rule Lorg/jivesoftware/smack/packet/PrivacyItem$PrivacyRule;" new="f_j"/>
  </class>
  <class old="org.apache.qpid.management.common.sasl.Constants" new="wy.c_aA">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <field old="MECH_CRAMMD5 Ljava/lang/String;" new="f_e"/>
   <field old="MECH_PLAIN Ljava/lang/String;" new="f_b"/>
   <field old="SASL_CRAMMD5 Ljava/lang/String;" new="f_m"/>
   <field old="SASL_PLAIN Ljava/lang/String;" new="f_d"/>
  </class>
  <class old="com.xabber.android.data.connection.OnDisconnectListener" new="com.xabber.android.data.connection.c_E">
   <method old="onDisconnect(Lcom/xabber/android/data/connection/ConnectionItem;)V" new="m_xB"/>
  </class>
  <class old="org.xbill.DNS.CERTRecord" new="org.xbill.DNS.c_hb">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getAlgorithm()I" new="m_Ne"/>
   <method old="getCert()[B" new="m_cj"/>
   <method old="getCertType()I" new="m_Oi"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getKeyTag()I" new="m_RH"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="OID I" new="f_J"/>
   <field old="PGP I" new="f_d"/>
   <field old="PKIX I" new="f_e"/>
   <field old="SPKI I" new="f_j"/>
   <field old="URI I" new="f_l"/>
   <field old="alg I" new="f_k"/>
   <field old="cert [B" new="f_I"/>
   <field old="certType I" new="f_B"/>
   <field old="dclass I" new="f_m"/>
   <field old="keyTag I" new="f_K"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="serialVersionUID J" new="f_f"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smackx.provider.DelayInformationProvider$1" new="org.jivesoftware.smackx.provider.c_d">
   <method old="compare(Ljava/lang/Object;Ljava/lang/Object;)I" new="compare"/>
   <method old="compare(Ljava/util/Calendar;Ljava/util/Calendar;)I" new="m_gJ"/>
   <field old="this$0 Lorg/jivesoftware/smackx/provider/DelayInformationProvider;" new="f_e"/>
   <field old="val$now Ljava/util/Calendar;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.packet.Presence$Type" new="org.jivesoftware.smack.packet.Presence$Type">
   <method old="valueOf(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/Presence$Type;" new="valueOf"/>
   <method old="values()[Lorg/jivesoftware/smack/packet/Presence$Type;" new="values"/>
   <field old="$VALUES [Lorg/jivesoftware/smack/packet/Presence$Type;" new="f_B"/>
   <field old="available Lorg/jivesoftware/smack/packet/Presence$Type;" new="f_k"/>
   <field old="error Lorg/jivesoftware/smack/packet/Presence$Type;" new="f_b"/>
   <field old="subscribe Lorg/jivesoftware/smack/packet/Presence$Type;" new="f_m"/>
   <field old="subscribed Lorg/jivesoftware/smack/packet/Presence$Type;" new="f_j"/>
   <field old="unavailable Lorg/jivesoftware/smack/packet/Presence$Type;" new="f_d"/>
   <field old="unsubscribe Lorg/jivesoftware/smack/packet/Presence$Type;" new="f_l"/>
   <field old="unsubscribed Lorg/jivesoftware/smack/packet/Presence$Type;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.FileLogDebugger$1" new="com.xabber.android.data.c_I">
   <method old="close()V" new="m_la"/>
   <method old="read(Ljava/lang/String;)V" new="m_qB"/>
   <field old="this$0 Lcom/xabber/android/data/FileLogDebugger;" new="f_m"/>
   <field old="val$inherited Lorg/jivesoftware/smack/util/ReaderListener;" new="f_e"/>
  </class>
  <class old="com.xabber.android.ui.adapter.AccountListAdapter" new="com.xabber.android.ui.adapter.c_Z">
   <method old="getActivity()Landroid/app/Activity;" new="m_yba"/>
   <method old="getCount()I" new="getCount"/>
   <method old="getItem(I)Ljava/lang/Object;" new="getItem"/>
   <method old="getItemId(I)J" new="getItemId"/>
   <method old="getTags()Ljava/util/Collection;" new="m_mCa"/>
   <method old="getView(ILandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;" new="getView"/>
   <method old="onChange()V" new="m_cb"/>
  </class>
  <class old="com.xabber.android.data.FileLogDebugger$2" new="com.xabber.android.data.c_e">
   <method old="close()V" new="m_la"/>
   <method old="write(Ljava/lang/String;)V" new="m_Md"/>
   <field old="this$0 Lcom/xabber/android/data/FileLogDebugger;" new="f_m"/>
   <field old="val$inherited Lorg/jivesoftware/smack/util/WriterListener;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.ibb.packet.Open" new="wy.c_U">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getBlockSize()I" new="m_bA"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getSessionID()Ljava/lang/String;" new="m_Ba"/>
   <method old="getStanza()Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamManager$StanzaType;" new="m_Im"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="blockSize I" new="f_e"/>
   <field old="sessionID Ljava/lang/String;" new="f_m"/>
   <field old="stanza Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamManager$StanzaType;" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smackx.OfflineMessageManager" new="org.jivesoftware.smackx.c_L">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="deleteMessages()V" new="m_Kr"/>
   <method old="deleteMessages(Ljava/util/List;)V" new="m_xp"/>
   <method old="getHeaders()Ljava/util/Iterator;" new="m_GJ"/>
   <method old="getMessageCount()I" new="m_FQ"/>
   <method old="getMessages()Ljava/util/Iterator;" new="m_oP"/>
   <method old="getMessages(Ljava/util/List;)Ljava/util/Iterator;" new="m_ir"/>
   <method old="supportsFlexibleRetrieval()Z" new="m_Zp"/>
   <field old="connection Lorg/jivesoftware/smack/Connection;" new="f_b"/>
   <field old="namespace Ljava/lang/String;" new="f_m"/>
   <field old="packetFilter Lorg/jivesoftware/smack/filter/PacketFilter;" new="f_e"/>
  </class>
  <class old="com.xabber.android.ui.adapter.GroupedContactAdapter$GroupViewHolder" new="com.xabber.android.ui.adapter.c_k">
   <field old="indicator Landroid/widget/ImageView;" new="f_e"/>
   <field old="name Landroid/widget/TextView;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.Nick$Provider" new="org.jivesoftware.smackx.packet.c_w">
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_I"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.ibb.InitiationListener" new="org.jivesoftware.smackx.bytestreams.ibb.c_A">
   <method old="access$000(Lorg/jivesoftware/smackx/bytestreams/ibb/InitiationListener;Lorg/jivesoftware/smack/packet/Packet;)V" new="m_Mo"/>
   <method old="getFilter()Lorg/jivesoftware/smack/filter/PacketFilter;" new="m_co"/>
   <method old="processPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_C"/>
   <method old="processRequest(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_fO"/>
   <method old="shutdown()V" new="m_Fo"/>
   <field old="initFilter Lorg/jivesoftware/smack/filter/PacketFilter;" new="f_e"/>
   <field old="initiationListenerExecutor Ljava/util/concurrent/ExecutorService;" new="f_b"/>
   <field old="manager Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamManager;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.ChatManager" new="org.jivesoftware.smack.c_aa">
   <method old="access$000(Lorg/jivesoftware/smack/ChatManager;Ljava/lang/String;)Lorg/jivesoftware/smack/Chat;" new="m_gv"/>
   <method old="access$100(Lorg/jivesoftware/smack/ChatManager;Lorg/jivesoftware/smack/packet/Message;)Lorg/jivesoftware/smack/Chat;" new="m_sx"/>
   <method old="access$200(Lorg/jivesoftware/smack/ChatManager;Lorg/jivesoftware/smack/Chat;Lorg/jivesoftware/smack/packet/Message;)V" new="m_nW"/>
   <method old="addChatListener(Lorg/jivesoftware/smack/ChatManagerListener;)V" new="m_BV"/>
   <method old="addOutgoingMessageInterceptor(Lorg/jivesoftware/smack/PacketInterceptor;)V" new="m_NU"/>
   <method old="addOutgoingMessageInterceptor(Lorg/jivesoftware/smack/PacketInterceptor;Lorg/jivesoftware/smack/filter/PacketFilter;)V" new="m_dw"/>
   <method old="createChat(Ljava/lang/String;Ljava/lang/String;Lorg/jivesoftware/smack/MessageListener;)Lorg/jivesoftware/smack/Chat;" new="m_dV"/>
   <method old="createChat(Ljava/lang/String;Ljava/lang/String;Z)Lorg/jivesoftware/smack/Chat;" new="m_cw"/>
   <method old="createChat(Ljava/lang/String;Lorg/jivesoftware/smack/MessageListener;)Lorg/jivesoftware/smack/Chat;" new="m_bW"/>
   <method old="createChat(Lorg/jivesoftware/smack/packet/Message;)Lorg/jivesoftware/smack/Chat;" new="m_kx"/>
   <method old="createPacketCollector(Lorg/jivesoftware/smack/Chat;)Lorg/jivesoftware/smack/PacketCollector;" new="m_CV"/>
   <method old="deliverMessage(Lorg/jivesoftware/smack/Chat;Lorg/jivesoftware/smack/packet/Message;)V" new="m_gW"/>
   <method old="getChatListeners()Ljava/util/Collection;" new="m_wW"/>
   <method old="getThreadChat(Ljava/lang/String;)Lorg/jivesoftware/smack/Chat;" new="m_pU"/>
   <method old="getUserChat(Ljava/lang/String;)Lorg/jivesoftware/smack/Chat;" new="m_tv"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeChatListener(Lorg/jivesoftware/smack/ChatManagerListener;)V" new="m_aV"/>
   <method old="sendMessage(Lorg/jivesoftware/smack/Chat;Lorg/jivesoftware/smack/packet/Message;)V" new="m_ix"/>
   <field old="baseJidChats Ljava/util/Map;" new="f_e"/>
   <field old="chatManagerListeners Ljava/util/Set;" new="f_b"/>
   <field old="connection Lorg/jivesoftware/smack/Connection;" new="f_j"/>
   <field old="id J" new="f_m"/>
   <field old="interceptors Ljava/util/Map;" new="f_d"/>
   <field old="jidChats Ljava/util/Map;" new="f_k"/>
   <field old="prefix Ljava/lang/String;" new="f_l"/>
   <field old="threadChats Ljava/util/Map;" new="f_B"/>
  </class>
  <class old="org.jivesoftware.smackx.ReportedData" new="org.jivesoftware.smackx.ReportedData">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="addColumn(Lorg/jivesoftware/smackx/ReportedData$Column;)V" new="m_fR"/>
   <method old="addRow(Lorg/jivesoftware/smackx/ReportedData$Row;)V" new="m_wQ"/>
   <method old="getColumns()Ljava/util/Iterator;" new="m_UQ"/>
   <method old="getReportedDataFrom(Lorg/jivesoftware/smack/packet/Packet;)Lorg/jivesoftware/smackx/ReportedData;" new="m_uP"/>
   <method old="getRows()Ljava/util/Iterator;" new="m_vQ"/>
   <method old="getTitle()Ljava/lang/String;" new="m_zb"/>
   <field old="columns Ljava/util/List;" new="f_b"/>
   <field old="rows Ljava/util/List;" new="f_m"/>
   <field old="title Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="com.xabber.xmpp.archive.Item" new="com.xabber.xmpp.archive.c_q">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getExactmatch()Ljava/lang/Boolean;" new="m_rba"/>
   <method old="getExpire()Ljava/lang/Integer;" new="m_Fg"/>
   <method old="getJid()Ljava/lang/String;" new="m_tL"/>
   <method old="getOtr()Lcom/xabber/xmpp/archive/OtrMode;" new="m_DAa"/>
   <method old="getSave()Lcom/xabber/xmpp/archive/SaveMode;" new="m_Fca"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="serializeAttributes(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_SAa"/>
   <method old="setExactmatch(Ljava/lang/Boolean;)V" new="m_WAa"/>
   <method old="setExpire(Ljava/lang/Integer;)V" new="m_zAa"/>
   <method old="setJid(Ljava/lang/String;)V" new="m_AJ"/>
   <method old="setOtr(Lcom/xabber/xmpp/archive/OtrMode;)V" new="m_Iba"/>
   <method old="setSave(Lcom/xabber/xmpp/archive/SaveMode;)V" new="m_hca"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_k"/>
   <field old="EXACTMATCH_ATTRIBUTE Ljava/lang/String;" new="f_j"/>
   <field old="EXPIRE_ATTRIBUTE Ljava/lang/String;" new="f_e"/>
   <field old="JID_ATTRIBUTE Ljava/lang/String;" new="f_d"/>
   <field old="OTR_ATTRIBUTE Ljava/lang/String;" new="f_m"/>
   <field old="SAVE_ATTRIBUTE Ljava/lang/String;" new="f_B"/>
   <field old="exactmatch Ljava/lang/Boolean;" new="f_B"/>
   <field old="jid Ljava/lang/String;" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.BytestreamSession" new="org.jivesoftware.smackx.bytestreams.c_H">
   <method old="close()V" new="m_la"/>
   <method old="getInputStream()Ljava/io/InputStream;" new="m_ma"/>
   <method old="getOutputStream()Ljava/io/OutputStream;" new="m_Da"/>
   <method old="getReadTimeout()I" new="m_ga"/>
   <method old="setReadTimeout(I)V" new="m_za"/>
  </class>
  <class old="org.jivesoftware.smackx.muc.DeafOccupantInterceptor$1" new="org.jivesoftware.smackx.muc.c_C">
  </class>
  <class old="com.xabber.xmpp.archive.Chat" new="com.xabber.xmpp.archive.c_t">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="addMessage(Lcom/xabber/xmpp/archive/AbstractMessage;)V" new="m_RAa"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getMessages()Ljava/util/Collection;" new="m_oP"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="getNext()Lcom/xabber/xmpp/archive/Next;" new="m_Ui"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getPrevious()Lcom/xabber/xmpp/archive/Previous;" new="m_aAa"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getRsm()Lcom/xabber/xmpp/rsm/Set;" new="m_yCa"/>
   <method old="getStart()Ljava/util/Date;" new="m_vC"/>
   <method old="getStartString()Ljava/lang/String;" new="m_lC"/>
   <method old="getSubject()Ljava/lang/String;" new="m_wM"/>
   <method old="getThread()Ljava/lang/String;" new="m_QR"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getVersion()Ljava/lang/Integer;" new="m_Sd"/>
   <method old="getWith()Ljava/lang/String;" new="m_ib"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="serializeContent(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_Fb"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setNext(Lcom/xabber/xmpp/archive/Next;)V" new="m_ICa"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setPrevious(Lcom/xabber/xmpp/archive/Previous;)V" new="m_zBa"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setRsm(Lcom/xabber/xmpp/rsm/Set;)V" new="m_dba"/>
   <method old="setStart(Ljava/util/Date;)V" new="m_SBa"/>
   <method old="setStartString(Ljava/lang/String;)V" new="m_tca"/>
   <method old="setSubject(Ljava/lang/String;)V" new="m_Lt"/>
   <method old="setThread(Ljava/lang/String;)V" new="m_Qs"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="setVersion(Ljava/lang/Integer;)V" new="m_JCa"/>
   <method old="setWith(Ljava/lang/String;)V" new="m_mda"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_D"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="NAMESPACE Ljava/lang/String;" new="f_j"/>
   <field old="START_ATTRIBUTE Ljava/lang/String;" new="f_b"/>
   <field old="SUBJECT_ATTRIBUTE Ljava/lang/String;" new="f_l"/>
   <field old="THREAD_ATTRIBUTE Ljava/lang/String;" new="f_f"/>
   <field old="VERSION_ATTRIBUTE Ljava/lang/String;" new="f_k"/>
   <field old="WITH_ATTRIBUTE Ljava/lang/String;" new="f_B"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="messages Ljava/util/Collection;" new="f_e"/>
   <field old="next Lcom/xabber/xmpp/archive/Next;" new="f_d"/>
   <field old="previous Lcom/xabber/xmpp/archive/Previous;" new="f_b"/>
   <field old="rsm Lcom/xabber/xmpp/rsm/Set;" new="f_J"/>
   <field old="subject Ljava/lang/String;" new="f_m"/>
   <field old="thread Ljava/lang/String;" new="f_I"/>
   <field old="version Ljava/lang/Integer;" new="f_K"/>
  </class>
  <class old="com.xabber.xmpp.archive.AbstractMessage" new="com.xabber.xmpp.archive.c_B">
   <method old="getBody()Ljava/lang/String;" new="m_St"/>
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getJid()Ljava/lang/String;" new="m_tL"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getSecs()Ljava/lang/Integer;" new="m_RBa"/>
   <method old="getUtc()Ljava/util/Date;" new="m_mj"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="setBody(Ljava/lang/String;)V" new="m_lt"/>
   <method old="setJid(Ljava/lang/String;)V" new="m_AJ"/>
   <method old="setName(Ljava/lang/String;)V" new="m_Xl"/>
   <method old="setSecs(Ljava/lang/Integer;)V" new="m_wAa"/>
   <method old="setUtc(Ljava/util/Date;)V" new="m_oz"/>
   <field old="BODY_NAME Ljava/lang/String;" new="f_l"/>
   <field old="JID_ATTRIBUTE Ljava/lang/String;" new="f_I"/>
   <field old="NAME_ATTRIBUTE Ljava/lang/String;" new="f_d"/>
   <field old="SECS_ATTRIBUTE Ljava/lang/String;" new="f_j"/>
   <field old="UTC_ATTRIBUTE Ljava/lang/String;" new="f_m"/>
   <field old="body Ljava/lang/String;" new="f_k"/>
   <field old="jid Ljava/lang/String;" new="f_B"/>
   <field old="name Ljava/lang/String;" new="f_e"/>
   <field old="secs Ljava/lang/Integer;" new="f_b"/>
   <field old="utc Ljava/util/Date;" new="f_f"/>
  </class>
  <class old="com.xabber.xmpp.archive.Next" new="com.xabber.xmpp.archive.c_I">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getStart()Ljava/util/Date;" new="m_vC"/>
   <method old="getWith()Ljava/lang/String;" new="m_ib"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="setStart(Ljava/util/Date;)V" new="m_SBa"/>
   <method old="setWith(Ljava/lang/String;)V" new="m_mda"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_e"/>
   <field old="START_ATTRIBUTE Ljava/lang/String;" new="f_d"/>
   <field old="WITH_ATTRIBUTE Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.provider.PrivateDataProvider" new="org.jivesoftware.smackx.provider.c_E">
   <method old="parsePrivateData(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smackx/packet/PrivateData;" new="m_a"/>
  </class>
  <class old="com.xabber.xmpp.vcard.LogoHolderProvider" new="com.xabber.xmpp.vcard.c_b">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createBinaryData()Lcom/xabber/xmpp/Instance;" new="m_iaa"/>
   <method old="createBinaryData()Lcom/xabber/xmpp/vcard/Logo;" new="m_iaa"/>
   <method old="createExternalData()Lcom/xabber/xmpp/Instance;" new="m_bY"/>
   <method old="createExternalData()Lcom/xabber/xmpp/vcard/Logo;" new="m_bY"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/vcard/DataHolder;" new="m_ZZ"/>
   <method old="createPayload(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/DataHolder;)Z" new="m_lz"/>
   <method old="getInstance()Lcom/xabber/xmpp/vcard/LogoHolderProvider;" new="m_Xr"/>
   <method old="inflateBinaryData(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/AbstractBinaryData;)Z" new="m_GY"/>
   <method old="inflateExternalData(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/AbstractExternalData;)Z" new="m_mz"/>
   <method old="inflatePayload(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/DataHolder;)Z" new="m_qY"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/DataHolder;)Z" new="m_iz"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
   <field old="instance Lcom/xabber/xmpp/vcard/LogoHolderProvider;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.filter.FromMatchesFilter" new="wy.c_Fa">
   <method old="accept(Lorg/jivesoftware/smack/packet/Packet;)Z" new="m_x"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="address Ljava/lang/String;" new="f_m"/>
   <field old="matchBareJID Z" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.extension.vcard.VCardTable" new="wy.c_yA">
   <method old="clear()V" new="m_EA"/>
   <method old="create(Landroid/database/sqlite/SQLiteDatabase;)V" new="m_AB"/>
   <method old="getFirstName(Landroid/database/Cursor;)Ljava/lang/String;" new="m_aIa"/>
   <method old="getFormattedName(Landroid/database/Cursor;)Ljava/lang/String;" new="m_PGa"/>
   <method old="getInstance()Lcom/xabber/android/data/extension/vcard/VCardTable;" new="m_Xr"/>
   <method old="getLastName(Landroid/database/Cursor;)Ljava/lang/String;" new="m_Rga"/>
   <method old="getListOrder()Ljava/lang/String;" new="m_YDa"/>
   <method old="getMiddleName(Landroid/database/Cursor;)Ljava/lang/String;" new="m_yHa"/>
   <method old="getNickName(Landroid/database/Cursor;)Ljava/lang/String;" new="m_qga"/>
   <method old="getProjection()[Ljava/lang/String;" new="m_AFa"/>
   <method old="getTableName()Ljava/lang/String;" new="m_dga"/>
   <method old="getUser(Landroid/database/Cursor;)Ljava/lang/String;" new="m_oDa"/>
   <method old="list()Landroid/database/Cursor;" new="m_wEa"/>
   <method old="migrate(Landroid/database/sqlite/SQLiteDatabase;I)V" new="m_Cd"/>
   <method old="write(Ljava/lang/String;Lcom/xabber/android/data/roster/StructuredName;)V" new="m_xGa"/>
   <field old="NAME Ljava/lang/String;" new="f_d"/>
   <field old="PROJECTION [Ljava/lang/String;" new="f_j"/>
   <field old="databaseManager Lcom/xabber/android/data/DatabaseManager;" new="f_b"/>
   <field old="instance Lcom/xabber/android/data/extension/vcard/VCardTable;" new="f_B"/>
   <field old="writeLock Ljava/lang/Object;" new="f_m"/>
   <field old="writeStatement Landroid/database/sqlite/SQLiteStatement;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.muc.ConnectionDetachedPacketCollector" new="org.jivesoftware.smackx.muc.c_h">
   <method old="nextResult()Lorg/jivesoftware/smack/packet/Packet;" new="m_Em"/>
   <method old="nextResult(J)Lorg/jivesoftware/smack/packet/Packet;" new="m_Wn"/>
   <method old="pollResult()Lorg/jivesoftware/smack/packet/Packet;" new="m_Sm"/>
   <method old="processPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_C"/>
   <field old="MAX_PACKETS I" new="f_e"/>
   <field old="resultQueue Ljava/util/LinkedList;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.NSEC3Record" new="org.xbill.DNS.c_ca">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getFlags()I" new="m_JG"/>
   <method old="getHashAlgorithm()I" new="m_EI"/>
   <method old="getIterations()I" new="m_IH"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getNext()[B" new="m_Ui"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getSalt()[B" new="m_qg"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="getTypes()[I" new="m_xg"/>
   <method old="hasType(I)Z" new="m_Cj"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="hashName(Lorg/xbill/DNS/Name;)[B" new="m_Yh"/>
   <method old="hashName(Lorg/xbill/DNS/Name;II[B)[B" new="m_uI"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="SHA1_DIGEST_ID I" new="f_k"/>
   <field old="b32 Lorg/xbill/DNS/utils/base32;" new="f_K"/>
   <field old="dclass I" new="f_m"/>
   <field old="flags I" new="f_d"/>
   <field old="hashAlg I" new="f_e"/>
   <field old="iterations I" new="f_B"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="next [B" new="f_l"/>
   <field old="salt [B" new="f_f"/>
   <field old="serialVersionUID J" new="f_j"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
   <field old="types Lorg/xbill/DNS/TypeBitmap;" new="f_I"/>
  </class>
  <class old="com.xabber.android.service.AccountAuthenticatorService" new="com.xabber.android.service.AccountAuthenticatorService">
   <method old="onBind(Landroid/content/Intent;)Landroid/os/IBinder;" new="onBind"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.ibb.DataListener" new="org.jivesoftware.smackx.bytestreams.ibb.c_I">
   <method old="getFilter()Lorg/jivesoftware/smack/filter/PacketFilter;" new="m_co"/>
   <method old="processPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_C"/>
   <field old="dataFilter Lorg/jivesoftware/smack/filter/PacketFilter;" new="f_e"/>
   <field old="manager Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamManager;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.extension.capability.Capability" new="com.xabber.android.data.extension.capability.c_m">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="compareTo(Lcom/xabber/android/data/entity/BaseEntity;)I" new="m_bCa"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="equals(Ljava/lang/String;Ljava/lang/String;)Z" new="m_Bba"/>
   <method old="getAccount()Ljava/lang/String;" new="m_FC"/>
   <method old="getHash()Ljava/lang/String;" new="m_GK"/>
   <method old="getHashedValue(Ljava/lang/String;)Ljava/lang/String;" new="m_pHa"/>
   <method old="getNode()Ljava/lang/String;" new="m_Ol"/>
   <method old="getUser()Ljava/lang/String;" new="m_TA"/>
   <method old="getVersion()Ljava/lang/String;" new="m_Sd"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="isLegacy()Z" new="m_xga"/>
   <method old="isLegacy(Ljava/lang/String;)Z" new="m_AHa"/>
   <method old="isSupportedHash()Z" new="m_Oga"/>
   <method old="isSupportedHash(Ljava/lang/String;)Z" new="m_Jga"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="DIRECT_REQUEST_METHOD Ljava/lang/String;" new="f_B"/>
   <field old="SHA1_METHOD Ljava/lang/String;" new="f_k"/>
   <field old="account Ljava/lang/String;" new="f_m"/>
   <field old="hash Ljava/lang/String;" new="f_d"/>
   <field old="node Ljava/lang/String;" new="f_b"/>
   <field old="user Ljava/lang/String;" new="f_e"/>
   <field old="version Ljava/lang/String;" new="f_j"/>
  </class>
  <class old="com.xabber.xmpp.vcard.Key" new="com.xabber.xmpp.vcard.c_C">
   <method old="getEncodedData()Ljava/lang/String;" new="m_Iy"/>
   <method old="getType()Ljava/lang/String;" new="m_b"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="setEncodedData(Ljava/lang/String;)V" new="m_vy"/>
   <method old="setType(Ljava/lang/String;)V" new="m_Al"/>
   <field old="CRED_NAME Ljava/lang/String;" new="f_b"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_B"/>
   <field old="MAX_ENCODED_DATA_SIZE I" new="f_m"/>
   <field old="TYPE_NAME Ljava/lang/String;" new="f_j"/>
   <field old="encodedData Ljava/lang/String;" new="f_e"/>
   <field old="type Ljava/lang/String;" new="f_d"/>
  </class>
  <class old="org.jivesoftware.smackx.provider.MUCOwnerProvider" new="org.jivesoftware.smackx.provider.c_f">
   <method old="parseDestroy(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smackx/packet/MUCOwner$Destroy;" new="m_EK"/>
   <method old="parseIQ(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/IQ;" new="m_g"/>
   <method old="parseItem(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smackx/packet/MUCOwner$Item;" new="m_cK"/>
  </class>
  <class old="com.xabber.android.classic.R$layout" new="com.xabber.android.classic.R$layout">
   <field old="about_viewer I" new="about_viewer"/>
   <field old="account_add I" new="account_add"/>
   <field old="account_choose_dropdown I" new="account_choose_dropdown"/>
   <field old="account_choose_item I" new="account_choose_item"/>
   <field old="account_list_item I" new="account_list_item"/>
   <field old="account_toggler_item I" new="account_toggler_item"/>
   <field old="account_type_dropdown I" new="account_type_dropdown"/>
   <field old="account_type_item I" new="account_type_item"/>
   <field old="add_item I" new="add_item"/>
   <field old="base_contact_avatar I" new="base_contact_avatar"/>
   <field old="base_contact_item I" new="base_contact_item"/>
   <field old="base_group_item I" new="base_group_item"/>
   <field old="chat_list_item I" new="chat_list_item"/>
   <field old="chat_notification I" new="chat_notification"/>
   <field old="chat_viewer I" new="chat_viewer"/>
   <field old="chat_viewer_empty I" new="chat_viewer_empty"/>
   <field old="chat_viewer_info I" new="chat_viewer_info"/>
   <field old="chat_viewer_item I" new="chat_viewer_item"/>
   <field old="chat_viewer_message I" new="chat_viewer_message"/>
   <field old="contact_add I" new="contact_add"/>
   <field old="contact_add_header I" new="contact_add_header"/>
   <field old="contact_editor I" new="contact_editor"/>
   <field old="contact_list I" new="contact_list"/>
   <field old="contact_title I" new="contact_title"/>
   <field old="contact_title_avatar I" new="contact_title_avatar"/>
   <field old="dialog I" new="dialog"/>
   <field old="export_chat I" new="export_chat"/>
   <field old="fingerprint_viewer I" new="fingerprint_viewer"/>
   <field old="group_name I" new="group_name"/>
   <field old="info_preference I" new="info_preference"/>
   <field old="list I" new="list"/>
   <field old="load I" new="load"/>
   <field old="muc_editor I" new="muc_editor"/>
   <field old="oauth I" new="oauth"/>
   <field old="occupant_list_item I" new="occupant_list_item"/>
   <field old="password_request I" new="password_request"/>
   <field old="preference I" new="preference"/>
   <field old="preference_status_widget I" new="preference_status_widget"/>
   <field old="progress_preference I" new="progress_preference"/>
   <field old="question_viewer I" new="question_viewer"/>
   <field old="secret_viewer I" new="secret_viewer"/>
   <field old="status_editor I" new="status_editor"/>
   <field old="status_editor_header I" new="status_editor_header"/>
   <field old="status_editor_item I" new="status_editor_item"/>
   <field old="status_mode_dropdown I" new="status_mode_dropdown"/>
   <field old="status_mode_item I" new="status_mode_item"/>
  </class>
  <class old="org.xbill.DNS.DNSSEC$SignatureVerificationException" new="org.xbill.DNS.c_gC">
  </class>
  <class old="org.xbill.DNS.MXRecord" new="org.xbill.DNS.c_ia">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getNameField()Lorg/xbill/DNS/Name;" new="m_ng"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getPriority()I" new="m_iD"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getTarget()Lorg/xbill/DNS/Name;" new="m_ff"/>
   <method old="getType()I" new="m_b"/>
   <method old="getU16Field()I" new="m_DG"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="nameField Lorg/xbill/DNS/Name;" new="f_m"/>
   <field old="serialVersionUID J" new="f_m"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
   <field old="u16Field I" new="f_d"/>
  </class>
  <class old="org.jivesoftware.smack.util.collections.AbstractHashedMap" new="org.jivesoftware.smack.util.collections.c_B">
   <method old="addEntry(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;I)V" new="m_Dq"/>
   <method old="addMapping(IILjava/lang/Object;Ljava/lang/Object;)V" new="m_hq"/>
   <method old="calculateNewCapacity(I)I" new="m_up"/>
   <method old="calculateThreshold(IF)I" new="m_aR"/>
   <method old="checkCapacity()V" new="m_Jr"/>
   <method old="clear()V" new="clear"/>
   <method old="clone()Ljava/lang/Object;" new="clone"/>
   <method old="containsKey(Ljava/lang/Object;)Z" new="containsKey"/>
   <method old="containsValue(Ljava/lang/Object;)Z" new="containsValue"/>
   <method old="createEntry(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;ILjava/lang/Object;Ljava/lang/Object;)Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;" new="m_Kp"/>
   <method old="createEntrySetIterator()Ljava/util/Iterator;" new="m_XO"/>
   <method old="createKeySetIterator()Ljava/util/Iterator;" new="m_zq"/>
   <method old="createValuesIterator()Ljava/util/Iterator;" new="m_Lr"/>
   <method old="destroyEntry(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;)V" new="m_uQ"/>
   <method old="doReadObject(Ljava/io/ObjectInputStream;)V" new="m_Ir"/>
   <method old="doWriteObject(Ljava/io/ObjectOutputStream;)V" new="m_Fr"/>
   <method old="ensureCapacity(I)V" new="m_Er"/>
   <method old="entryHashCode(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;)I" new="m_WQ"/>
   <method old="entryKey(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;)Ljava/lang/Object;" new="m_hp"/>
   <method old="entryNext(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;)Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;" new="m_Vq"/>
   <method old="entrySet()Ljava/util/Set;" new="entrySet"/>
   <method old="entryValue(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;)Ljava/lang/Object;" new="m_QP"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="get(Ljava/lang/Object;)Ljava/lang/Object;" new="get"/>
   <method old="getEntry(Ljava/lang/Object;)Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;" new="m_Up"/>
   <method old="hash(Ljava/lang/Object;)I" new="m_UP"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="hashIndex(II)I" new="m_HR"/>
   <method old="init()V" new="m_ZG"/>
   <method old="isEmpty()Z" new="isEmpty"/>
   <method old="isEqualKey(Ljava/lang/Object;Ljava/lang/Object;)Z" new="m_oQ"/>
   <method old="isEqualValue(Ljava/lang/Object;Ljava/lang/Object;)Z" new="m_Xq"/>
   <method old="keySet()Ljava/util/Set;" new="keySet"/>
   <method old="mapIterator()Lorg/jivesoftware/smack/util/collections/MapIterator;" new="m_Wa"/>
   <method old="put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" new="put"/>
   <method old="putAll(Ljava/util/Map;)V" new="putAll"/>
   <method old="remove(Ljava/lang/Object;)Ljava/lang/Object;" new="remove"/>
   <method old="removeEntry(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;ILorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;)V" new="m_ZO"/>
   <method old="removeMapping(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;ILorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;)V" new="m_Jq"/>
   <method old="reuseEntry(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;IILjava/lang/Object;Ljava/lang/Object;)V" new="m_rp"/>
   <method old="size()I" new="size"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="updateEntry(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;Ljava/lang/Object;)V" new="m_KR"/>
   <method old="values()Ljava/util/Collection;" new="values"/>
   <field old="DEFAULT_CAPACITY I" new="f_J"/>
   <field old="DEFAULT_LOAD_FACTOR F" new="f_H"/>
   <field old="DEFAULT_THRESHOLD I" new="f_M"/>
   <field old="GETKEY_INVALID Ljava/lang/String;" new="f_d"/>
   <field old="GETVALUE_INVALID Ljava/lang/String;" new="f_h"/>
   <field old="MAXIMUM_CAPACITY I" new="f_g"/>
   <field old="NO_NEXT_ENTRY Ljava/lang/String;" new="f_f"/>
   <field old="NO_PREVIOUS_ENTRY Ljava/lang/String;" new="f_m"/>
   <field old="NULL Ljava/lang/Object;" new="f_b"/>
   <field old="REMOVE_INVALID Ljava/lang/String;" new="f_e"/>
   <field old="SETVALUE_INVALID Ljava/lang/String;" new="f_B"/>
   <field old="data [Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;" new="f_k"/>
   <field old="entrySet Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$EntrySet;" new="f_K"/>
   <field old="keySet Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$KeySet;" new="f_G"/>
   <field old="loadFactor F" new="f_j"/>
   <field old="modCount I" new="f_I"/>
   <field old="size I" new="f_F"/>
   <field old="threshold I" new="f_l"/>
   <field old="values Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$Values;" new="f_D"/>
  </class>
  <class old="com.xabber.xmpp.archive.TypeMode" new="com.xabber.xmpp.archive.TypeMode">
   <method old="fromString(Ljava/lang/String;)Lcom/xabber/xmpp/archive/TypeMode;" new="m_tc"/>
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/xmpp/archive/TypeMode;" new="valueOf"/>
   <method old="values()[Lcom/xabber/xmpp/archive/TypeMode;" new="values"/>
   <field old="$VALUES [Lcom/xabber/xmpp/archive/TypeMode;" new="f_b"/>
   <field old="auto Lcom/xabber/xmpp/archive/TypeMode;" new="f_e"/>
   <field old="local Lcom/xabber/xmpp/archive/TypeMode;" new="f_d"/>
   <field old="manual Lcom/xabber/xmpp/archive/TypeMode;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.muc.MultiUserChat" new="org.jivesoftware.smackx.muc.c_e">
   <method old="access$000(Lorg/jivesoftware/smack/Connection;)Ljava/util/Iterator;" new="m_jn"/>
   <method old="access$1000(Lorg/jivesoftware/smackx/muc/MultiUserChat;Ljava/lang/String;ZLorg/jivesoftware/smackx/packet/MUCUser;Ljava/lang/String;)V" new="m_dN"/>
   <method old="access$102(Lorg/jivesoftware/smackx/muc/MultiUserChat;Ljava/lang/String;)Ljava/lang/String;" new="m_pn"/>
   <method old="access$1100(Lorg/jivesoftware/smackx/muc/MultiUserChat;Ljava/lang/String;Ljava/lang/String;)V" new="m_ao"/>
   <method old="access$200(Lorg/jivesoftware/smackx/muc/MultiUserChat;Ljava/lang/String;Ljava/lang/String;)V" new="m_MO"/>
   <method old="access$300(Lorg/jivesoftware/smackx/muc/MultiUserChat;)Ljava/lang/String;" new="m_IO"/>
   <method old="access$400(Lorg/jivesoftware/smackx/muc/MultiUserChat;)Ljava/lang/String;" new="m_OM"/>
   <method old="access$500(Lorg/jivesoftware/smackx/muc/MultiUserChat;)Ljava/util/Map;" new="m_Fm"/>
   <method old="access$600(Lorg/jivesoftware/smackx/muc/MultiUserChat;Lorg/jivesoftware/smack/packet/Packet;)Lorg/jivesoftware/smackx/packet/MUCUser;" new="m_an"/>
   <method old="access$700(Lorg/jivesoftware/smackx/muc/MultiUserChat;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V" new="m_GM"/>
   <method old="access$800(Lorg/jivesoftware/smackx/muc/MultiUserChat;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V" new="m_XM"/>
   <method old="access$900(Lorg/jivesoftware/smackx/muc/MultiUserChat;Ljava/lang/String;Ljava/util/List;)V" new="m_GO"/>
   <method old="addInvitationListener(Lorg/jivesoftware/smack/Connection;Lorg/jivesoftware/smackx/muc/InvitationListener;)V" new="m_On"/>
   <method old="addInvitationRejectionListener(Lorg/jivesoftware/smackx/muc/InvitationRejectionListener;)V" new="m_ZM"/>
   <method old="addMessageListener(Lorg/jivesoftware/smack/PacketListener;)V" new="m_cO"/>
   <method old="addParticipantListener(Lorg/jivesoftware/smack/PacketListener;)V" new="m_Qm"/>
   <method old="addParticipantStatusListener(Lorg/jivesoftware/smackx/muc/ParticipantStatusListener;)V" new="m_Go"/>
   <method old="addPresenceInterceptor(Lorg/jivesoftware/smack/PacketInterceptor;)V" new="m_QN"/>
   <method old="addSubjectUpdatedListener(Lorg/jivesoftware/smackx/muc/SubjectUpdatedListener;)V" new="m_iM"/>
   <method old="addUserStatusListener(Lorg/jivesoftware/smackx/muc/UserStatusListener;)V" new="m_PN"/>
   <method old="banUser(Ljava/lang/String;Ljava/lang/String;)V" new="m_tn"/>
   <method old="banUsers(Ljava/util/Collection;)V" new="m_xM"/>
   <method old="changeAffiliationByAdmin(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_An"/>
   <method old="changeAffiliationByAdmin(Ljava/util/Collection;Ljava/lang/String;)V" new="m_Yn"/>
   <method old="changeAffiliationByOwner(Ljava/lang/String;Ljava/lang/String;)V" new="m_hM"/>
   <method old="changeAffiliationByOwner(Ljava/util/Collection;Ljava/lang/String;)V" new="m_AM"/>
   <method old="changeAvailabilityStatus(Ljava/lang/String;Lorg/jivesoftware/smack/packet/Presence$Mode;)V" new="m_jM"/>
   <method old="changeNickname(Ljava/lang/String;)V" new="m_yM"/>
   <method old="changeRole(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_xN"/>
   <method old="changeRole(Ljava/util/Collection;Ljava/lang/String;)V" new="m_ln"/>
   <method old="changeSubject(Ljava/lang/String;)V" new="m_en"/>
   <method old="checkAffiliationModifications(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V" new="m_wn"/>
   <method old="checkPresenceCode(Ljava/lang/String;ZLorg/jivesoftware/smackx/packet/MUCUser;Ljava/lang/String;)V" new="m_sm"/>
   <method old="checkRoleModifications(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V" new="m_tM"/>
   <method old="create(Ljava/lang/String;)V" new="m_Kn"/>
   <method old="createMessage()Lorg/jivesoftware/smack/packet/Message;" new="m_FM"/>
   <method old="createPrivateChat(Ljava/lang/String;Lorg/jivesoftware/smack/MessageListener;)Lorg/jivesoftware/smack/Chat;" new="m_SM"/>
   <method old="decline(Lorg/jivesoftware/smack/Connection;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_dn"/>
   <method old="destroy(Ljava/lang/String;Ljava/lang/String;)V" new="m_BM"/>
   <method old="finalize()V" new="finalize"/>
   <method old="fireInvitationRejectionListeners(Ljava/lang/String;Ljava/lang/String;)V" new="m_Cm"/>
   <method old="fireParticipantStatusListeners(Ljava/lang/String;Ljava/util/List;)V" new="m_zn"/>
   <method old="fireSubjectUpdatedListeners(Ljava/lang/String;Ljava/lang/String;)V" new="m_lN"/>
   <method old="fireUserStatusListeners(Ljava/lang/String;[Ljava/lang/Object;)V" new="m_zm"/>
   <method old="getAdmins()Ljava/util/Collection;" new="m_aN"/>
   <method old="getAffiliatesByAdmin(Ljava/lang/String;)Ljava/util/Collection;" new="m_IM"/>
   <method old="getAffiliatesByOwner(Ljava/lang/String;)Ljava/util/Collection;" new="m_zN"/>
   <method old="getConfigurationForm()Lorg/jivesoftware/smackx/Form;" new="m_mn"/>
   <method old="getHostedRooms(Lorg/jivesoftware/smack/Connection;Ljava/lang/String;)Ljava/util/Collection;" new="m_uN"/>
   <method old="getJoinedRooms(Lorg/jivesoftware/smack/Connection;)Ljava/util/Iterator;" new="m_ON"/>
   <method old="getJoinedRooms(Lorg/jivesoftware/smack/Connection;Ljava/lang/String;)Ljava/util/Iterator;" new="m_Yo"/>
   <method old="getMUCUserExtension(Lorg/jivesoftware/smack/packet/Packet;)Lorg/jivesoftware/smackx/packet/MUCUser;" new="m_AN"/>
   <method old="getMembers()Ljava/util/Collection;" new="m_dm"/>
   <method old="getModerators()Ljava/util/Collection;" new="m_JO"/>
   <method old="getNickname()Ljava/lang/String;" new="m_HM"/>
   <method old="getOccupant(Ljava/lang/String;)Lorg/jivesoftware/smackx/muc/Occupant;" new="m_oN"/>
   <method old="getOccupantPresence(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/Presence;" new="m_YM"/>
   <method old="getOccupants()Ljava/util/Iterator;" new="m_Zn"/>
   <method old="getOccupants(Ljava/lang/String;)Ljava/util/Collection;" new="m_lO"/>
   <method old="getOccupantsCount()I" new="m_bK"/>
   <method old="getOutcasts()Ljava/util/Collection;" new="m_bN"/>
   <method old="getOwners()Ljava/util/Collection;" new="m_EM"/>
   <method old="getParticipants()Ljava/util/Collection;" new="m_un"/>
   <method old="getRegistrationForm()Lorg/jivesoftware/smackx/Form;" new="m_XN"/>
   <method old="getReservedNickname()Ljava/lang/String;" new="m_lm"/>
   <method old="getRoom()Ljava/lang/String;" new="m_IJ"/>
   <method old="getRoomInfo(Lorg/jivesoftware/smack/Connection;Ljava/lang/String;)Lorg/jivesoftware/smackx/muc/RoomInfo;" new="m_Gn"/>
   <method old="getServiceNames(Lorg/jivesoftware/smack/Connection;)Ljava/util/Collection;" new="m_EN"/>
   <method old="getSubject()Ljava/lang/String;" new="m_wM"/>
   <method old="grantAdmin(Ljava/lang/String;)V" new="m_AO"/>
   <method old="grantAdmin(Ljava/util/Collection;)V" new="m_Lo"/>
   <method old="grantMembership(Ljava/lang/String;)V" new="m_fn"/>
   <method old="grantMembership(Ljava/util/Collection;)V" new="m_eN"/>
   <method old="grantModerator(Ljava/lang/String;)V" new="m_xm"/>
   <method old="grantModerator(Ljava/util/Collection;)V" new="m_Xo"/>
   <method old="grantOwnership(Ljava/lang/String;)V" new="m_hO"/>
   <method old="grantOwnership(Ljava/util/Collection;)V" new="m_iO"/>
   <method old="grantVoice(Ljava/lang/String;)V" new="m_Ko"/>
   <method old="grantVoice(Ljava/util/Collection;)V" new="m_Hn"/>
   <method old="init()V" new="m_ZG"/>
   <method old="invite(Ljava/lang/String;Ljava/lang/String;)V" new="m_vm"/>
   <method old="invite(Lorg/jivesoftware/smack/packet/Message;Ljava/lang/String;Ljava/lang/String;)V" new="m_pm"/>
   <method old="isJoined()Z" new="m_Mn"/>
   <method old="isServiceEnabled(Lorg/jivesoftware/smack/Connection;Ljava/lang/String;)Z" new="m_eO"/>
   <method old="join(Ljava/lang/String;)V" new="m_jo"/>
   <method old="join(Ljava/lang/String;Ljava/lang/String;)V" new="m_DM"/>
   <method old="join(Ljava/lang/String;Ljava/lang/String;Lorg/jivesoftware/smackx/muc/DiscussionHistory;J)V" new="m_oM"/>
   <method old="kickParticipant(Ljava/lang/String;Ljava/lang/String;)V" new="m_lM"/>
   <method old="leave()V" new="m_qO"/>
   <method old="nextMessage()Lorg/jivesoftware/smack/packet/Message;" new="m_YN"/>
   <method old="nextMessage(J)Lorg/jivesoftware/smack/packet/Message;" new="m_Pn"/>
   <method old="pollMessage()Lorg/jivesoftware/smack/packet/Message;" new="m_tm"/>
   <method old="removeInvitationListener(Lorg/jivesoftware/smack/Connection;Lorg/jivesoftware/smackx/muc/InvitationListener;)V" new="m_Wo"/>
   <method old="removeInvitationRejectionListener(Lorg/jivesoftware/smackx/muc/InvitationRejectionListener;)V" new="m_Am"/>
   <method old="removeMessageListener(Lorg/jivesoftware/smack/PacketListener;)V" new="m_TM"/>
   <method old="removeParticipantListener(Lorg/jivesoftware/smack/PacketListener;)V" new="m_CM"/>
   <method old="removeParticipantStatusListener(Lorg/jivesoftware/smackx/muc/ParticipantStatusListener;)V" new="m_PM"/>
   <method old="removePresenceInterceptor(Lorg/jivesoftware/smack/PacketInterceptor;)V" new="m_Zm"/>
   <method old="removeSubjectUpdatedListener(Lorg/jivesoftware/smackx/muc/SubjectUpdatedListener;)V" new="m_MN"/>
   <method old="removeUserStatusListener(Lorg/jivesoftware/smackx/muc/UserStatusListener;)V" new="m_kN"/>
   <method old="revokeAdmin(Ljava/lang/String;)V" new="m_mo"/>
   <method old="revokeAdmin(Ljava/util/Collection;)V" new="m_BN"/>
   <method old="revokeMembership(Ljava/lang/String;)V" new="m_rM"/>
   <method old="revokeMembership(Ljava/util/Collection;)V" new="m_Qo"/>
   <method old="revokeModerator(Ljava/lang/String;)V" new="m_So"/>
   <method old="revokeModerator(Ljava/util/Collection;)V" new="m_JM"/>
   <method old="revokeOwnership(Ljava/lang/String;)V" new="m_SN"/>
   <method old="revokeOwnership(Ljava/util/Collection;)V" new="m_En"/>
   <method old="revokeVoice(Ljava/lang/String;)V" new="m_Io"/>
   <method old="revokeVoice(Ljava/util/Collection;)V" new="m_Ho"/>
   <method old="sendConfigurationForm(Lorg/jivesoftware/smackx/Form;)V" new="m_ym"/>
   <method old="sendMessage(Ljava/lang/String;)V" new="m_wm"/>
   <method old="sendMessage(Lorg/jivesoftware/smack/packet/Message;)V" new="m_ro"/>
   <method old="sendRegistrationForm(Lorg/jivesoftware/smackx/Form;)V" new="m_vN"/>
   <method old="userHasJoined()V" new="m_LM"/>
   <method old="userHasLeft()V" new="m_Tn"/>
   <field old="connection Lorg/jivesoftware/smack/Connection;" new="f_h"/>
   <field old="connectionListeners Ljava/util/List;" new="f_B"/>
   <field old="discoNamespace Ljava/lang/String;" new="f_K"/>
   <field old="discoNode Ljava/lang/String;" new="f_g"/>
   <field old="invitationRejectionListeners Ljava/util/List;" new="f_G"/>
   <field old="joined Z" new="f_F"/>
   <field old="joinedRooms Ljava/util/Map;" new="f_k"/>
   <field old="messageCollector Lorg/jivesoftware/smackx/muc/ConnectionDetachedPacketCollector;" new="f_D"/>
   <field old="messageFilter Lorg/jivesoftware/smack/filter/PacketFilter;" new="f_e"/>
   <field old="nickname Ljava/lang/String;" new="f_M"/>
   <field old="occupantsMap Ljava/util/Map;" new="f_m"/>
   <field old="participantStatusListeners Ljava/util/List;" new="f_H"/>
   <field old="presenceFilter Lorg/jivesoftware/smack/filter/PacketFilter;" new="f_d"/>
   <field old="presenceInterceptors Ljava/util/List;" new="f_j"/>
   <field old="room Ljava/lang/String;" new="f_l"/>
   <field old="roomListenerMultiplexor Lorg/jivesoftware/smackx/muc/RoomListenerMultiplexor;" new="f_f"/>
   <field old="subject Ljava/lang/String;" new="f_b"/>
   <field old="subjectUpdatedListeners Ljava/util/List;" new="f_J"/>
   <field old="userStatusListeners Ljava/util/List;" new="f_I"/>
  </class>
  <class old="org.jivesoftware.smackx.RosterExchangeListener" new="org.jivesoftware.smackx.RosterExchangeListener">
   <method old="entriesReceived(Ljava/lang/String;Ljava/util/Iterator;)V" new="m_Va"/>
  </class>
  <class old="org.apache.harmony.javax.security.sasl.SaslException" new="org.apache.harmony.javax.security.sasl.c_J">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getCause()Ljava/lang/Throwable;" new="getCause"/>
   <method old="initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;" new="initCause"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="_exception Ljava/lang/Throwable;" new="f_e"/>
   <field old="serialVersionUID J" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.NSECRecord" new="org.xbill.DNS.c_da">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getNext()Lorg/xbill/DNS/Name;" new="m_Ui"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="getTypes()[I" new="m_xg"/>
   <method old="hasType(I)Z" new="m_Cj"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="next Lorg/xbill/DNS/Name;" new="f_m"/>
   <field old="serialVersionUID J" new="f_e"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
   <field old="types Lorg/xbill/DNS/TypeBitmap;" new="f_b"/>
  </class>
  <class old="com.xabber.xmpp.avatar.VCardUpdateProvider" new="wy.c_Fb">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/avatar/VCardUpdate;" new="m_ZZ"/>
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/PacketExtension;" new="m_I"/>
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_I"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/avatar/VCardUpdate;)Z" new="m_Zca"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
  </class>
  <class old="com.xabber.android.ui.adapter.ComparatorByName" new="com.xabber.android.ui.adapter.c_d">
   <method old="compare(Lcom/xabber/android/data/roster/AbstractContact;Lcom/xabber/android/data/roster/AbstractContact;)I" new="m_zCa"/>
   <method old="compare(Ljava/lang/Object;Ljava/lang/Object;)I" new="compare"/>
   <field old="COMPARATOR_BY_NAME Lcom/xabber/android/ui/adapter/ComparatorByName;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.message.chat.AbstractChatPropertyTable" new="wy.c_bB">
   <method old="bindValue(Landroid/database/sqlite/SQLiteStatement;Ljava/lang/Object;)V" new="m_ega"/>
   <method old="clear()V" new="m_EA"/>
   <method old="create(Landroid/database/sqlite/SQLiteDatabase;)V" new="m_AB"/>
   <method old="getAccount(Landroid/database/Cursor;)Ljava/lang/String;" new="m_Jea"/>
   <method old="getListOrder()Ljava/lang/String;" new="m_YDa"/>
   <method old="getProjection()[Ljava/lang/String;" new="m_AFa"/>
   <method old="getTableName()Ljava/lang/String;" new="m_dga"/>
   <method old="getUser(Landroid/database/Cursor;)Ljava/lang/String;" new="m_oDa"/>
   <method old="getValueType()Ljava/lang/String;" new="m_pda"/>
   <method old="initialMigrate(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)V" new="m_SDa"/>
   <method old="list()Landroid/database/Cursor;" new="m_wEa"/>
   <method old="migrate(Landroid/database/sqlite/SQLiteDatabase;I)V" new="m_Cd"/>
   <method old="removeAccount(Ljava/lang/String;)V" new="m_YEa"/>
   <method old="write(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V" new="m_xDa"/>
   <field old="PROJECTION [Ljava/lang/String;" new="f_m"/>
   <field old="databaseManager Lcom/xabber/android/data/DatabaseManager;" new="f_e"/>
   <field old="writeLock Ljava/lang/Object;" new="f_b"/>
   <field old="writeStatement Landroid/database/sqlite/SQLiteStatement;" new="f_d"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamManager$1$1" new="org.jivesoftware.smackx.bytestreams.socks5.c_k">
   <method old="connectionClosed()V" new="m_r"/>
   <method old="connectionClosedOnError(Ljava/lang/Exception;)V" new="m_U"/>
   <method old="reconnectingIn(I)V" new="m_Z"/>
   <method old="reconnectionFailed(Ljava/lang/Exception;)V" new="m_S"/>
   <method old="reconnectionSuccessful()V" new="m_W"/>
   <field old="this$0 Lorg/jivesoftware/smackx/bytestreams/socks5/Socks5BytestreamManager$1;" new="f_e"/>
   <field old="val$connection Lorg/jivesoftware/smack/Connection;" new="f_b"/>
   <field old="val$manager Lorg/jivesoftware/smackx/bytestreams/socks5/Socks5BytestreamManager;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.UserAuthentication" new="org.jivesoftware.smack.c_J">
   <method old="authenticate(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" new="m_Pd"/>
   <method old="authenticate(Ljava/lang/String;Ljava/lang/String;Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;)Ljava/lang/String;" new="m_eC"/>
   <method old="authenticateAnonymously()Ljava/lang/String;" new="m_LB"/>
  </class>
  <class old="org.jivesoftware.smack.sasl.SASLGSSAPIMechanism" new="wy.c_ma">
   <method old="authenticate()V" new="m_ls"/>
   <method old="authenticate(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_Pd"/>
   <method old="authenticate(Ljava/lang/String;Ljava/lang/String;Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;)V" new="m_eC"/>
   <method old="challengeReceived(Ljava/lang/String;)V" new="m_vt"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getSASLAuthentication()Lorg/jivesoftware/smack/SASLAuthentication;" new="m_Gt"/>
   <method old="handle([Lorg/apache/harmony/javax/security/auth/callback/Callback;)V" new="m_Jb"/>
   <field old="authenticationId Ljava/lang/String;" new="f_e"/>
   <field old="hostname Ljava/lang/String;" new="f_B"/>
   <field old="password Ljava/lang/String;" new="f_m"/>
   <field old="sc Lorg/apache/harmony/javax/security/sasl/SaslClient;" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smack.util.Cache$2$1$1" new="org.jivesoftware.smack.util.c_D">
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getKey()Ljava/lang/Object;" new="getKey"/>
   <method old="getValue()Ljava/lang/Object;" new="getValue"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="setValue(Ljava/lang/Object;)Ljava/lang/Object;" new="setValue"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="key Ljava/lang/Object;" new="f_e"/>
   <field old="this$2 Lorg/jivesoftware/smack/util/Cache$2$1;" new="f_m"/>
   <field old="value Ljava/lang/Object;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.account.OnAccountSyncableChangedListener" new="com.xabber.android.data.account.c_B">
   <method old="onAccountSyncableChanged(Lcom/xabber/android/data/account/AccountItem;)V" new="m_YA"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.BytestreamRequest" new="org.jivesoftware.smackx.bytestreams.c_E">
   <method old="accept()Lorg/jivesoftware/smackx/bytestreams/BytestreamSession;" new="m_Ja"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getSessionID()Ljava/lang/String;" new="m_Ba"/>
   <method old="reject()V" new="m_ba"/>
  </class>
  <class old="net.java.otr4j.io.OtrInputStream" new="net.java.otr4j.io.c_B">
   <method old="readBigInt()Ljava/math/BigInteger;" new="m_NX"/>
   <method old="readByte()I" new="m_NZ"/>
   <method old="readCtr()[B" new="m_VZ"/>
   <method old="readDHPublicKey()Ljavax/crypto/interfaces/DHPublicKey;" new="m_Ny"/>
   <method old="readData()[B" new="m_Wz"/>
   <method old="readInt()I" new="m_tz"/>
   <method old="readMac()[B" new="m_Sy"/>
   <method old="readMysteriousX()Lnet/java/otr4j/io/messages/SignatureX;" new="m_Nz"/>
   <method old="readNumber(I)I" new="m_Dz"/>
   <method old="readPublicKey()Ljava/security/PublicKey;" new="m_CX"/>
   <method old="readShort()I" new="m_xX"/>
   <method old="readSignature(Ljava/security/PublicKey;)[B" new="m_FZ"/>
   <method old="readTlvData()[B" new="m_cX"/>
   <field old="DATA_LEN I" new="f_D"/>
   <field old="ERROR_PREFIX Ljava/lang/String;" new="f_J"/>
   <field old="HEAD Ljava/lang/String;" new="f_k"/>
   <field old="HEAD_ENCODED C" new="f_b"/>
   <field old="HEAD_ERROR C" new="f_f"/>
   <field old="HEAD_QUERY_Q C" new="f_j"/>
   <field old="HEAD_QUERY_V C" new="f_B"/>
   <field old="TLV_LEN I" new="f_m"/>
   <field old="TYPE_LEN_BYTE I" new="f_e"/>
   <field old="TYPE_LEN_CTR I" new="f_d"/>
   <field old="TYPE_LEN_INT I" new="f_I"/>
   <field old="TYPE_LEN_MAC I" new="f_K"/>
   <field old="TYPE_LEN_SHORT I" new="f_l"/>
  </class>
  <class old="org.apache.qpid.management.common.sasl.ClientSaslFactory" new="wy.c_sa">
   <method old="createSaslClient([Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;)Lorg/apache/harmony/javax/security/sasl/SaslClient;" new="m_Ic"/>
   <method old="getMechanismNames(Ljava/util/Map;)[Ljava/lang/String;" new="m_Dc"/>
  </class>
  <class old="com.xabber.android.data.notification.NotificationManager" new="wy.c_TB">
   <method old="access$000(Lcom/xabber/android/data/notification/NotificationManager;)Ljava/lang/Runnable;" new="m_kEa"/>
   <method old="access$100(Lcom/xabber/android/data/notification/NotificationManager;)Landroid/os/Handler;" new="m_bEa"/>
   <method old="access$200(Lcom/xabber/android/data/notification/NotificationManager;)Ljava/lang/Runnable;" new="m_gEa"/>
   <method old="access$300(Lcom/xabber/android/data/notification/NotificationManager;)Lcom/xabber/android/data/Application;" new="m_HDa"/>
   <method old="access$400(Lcom/xabber/android/data/notification/NotificationManager;Ljava/util/Collection;)V" new="m_Bea"/>
   <method old="getInstance()Lcom/xabber/android/data/notification/NotificationManager;" new="m_Xr"/>
   <method old="getMessageNotification(Ljava/lang/String;Ljava/lang/String;)Lcom/xabber/android/data/notification/MessageNotification;" new="m_Ffa"/>
   <method old="getNotificationMessageCount(Ljava/lang/String;Ljava/lang/String;)I" new="m_gfa"/>
   <method old="getPersistentNotification()Landroid/app/Notification;" new="m_Rda"/>
   <method old="notify(ILandroid/app/Notification;)V" new="m_zFa"/>
   <method old="onAccountArchiveModeChanged(Lcom/xabber/android/data/account/AccountItem;)V" new="m_aA"/>
   <method old="onAccountRemoved(Lcom/xabber/android/data/account/AccountItem;)V" new="m_kb"/>
   <method old="onAccountsChanged(Ljava/util/Collection;)V" new="m_vB"/>
   <method old="onClearNotifications()V" new="m_aFa"/>
   <method old="onClose()V" new="m_cc"/>
   <method old="onInitialized()V" new="m_ub"/>
   <method old="onLoad()V" new="m_pA"/>
   <method old="onLoaded(Ljava/util/Collection;)V" new="m_lDa"/>
   <method old="onMessageNotification()V" new="m_rFa"/>
   <method old="onMessageNotification(Lcom/xabber/android/data/message/MessageItem;Z)V" new="m_qfa"/>
   <method old="registerNotificationProvider(Lcom/xabber/android/data/notification/NotificationProvider;)V" new="m_mea"/>
   <method old="removeMessageNotification(Ljava/lang/String;Ljava/lang/String;)V" new="m_nFa"/>
   <method old="run()V" new="run"/>
   <method old="setNotificationDefaults(Landroid/app/Notification;ZLandroid/net/Uri;I)V" new="m_tda"/>
   <method old="trimText(Ljava/lang/String;)Ljava/lang/String;" new="m_Oea"/>
   <method old="updateMessageNotification(Lcom/xabber/android/data/message/MessageItem;)V" new="m_Yea"/>
   <method old="updateNotification(Landroid/app/Notification;Lcom/xabber/android/data/message/MessageItem;)V" new="m_PEa"/>
   <method old="updateNotifications(Lcom/xabber/android/data/notification/NotificationProvider;Lcom/xabber/android/data/notification/NotificationItem;)V" new="m_Mfa"/>
   <field old="BASE_NOTIFICATION_PROVIDER_ID I" new="f_m"/>
   <field old="CHAT_NOTIFICATION_ID I" new="f_J"/>
   <field old="MAX_NOTIFICATION_TEXT I" new="f_j"/>
   <field old="PERSISTENT_NOTIFICATION_ID I" new="f_M"/>
   <field old="VIBRATION_DURATION J" new="f_D"/>
   <field old="application Lcom/xabber/android/data/Application;" new="f_k"/>
   <field old="clearNotifications Landroid/app/PendingIntent;" new="f_b"/>
   <field old="handler Landroid/os/Handler;" new="f_g"/>
   <field old="instance Lcom/xabber/android/data/notification/NotificationManager;" new="f_e"/>
   <field old="messageNotifications Ljava/util/List;" new="f_K"/>
   <field old="notificationManager Landroid/app/NotificationManager;" new="f_d"/>
   <field old="persistentNotification Landroid/app/Notification;" new="f_G"/>
   <field old="providers Ljava/util/List;" new="f_I"/>
   <field old="startTime J" new="f_f"/>
   <field old="startVibro Ljava/lang/Runnable;" new="f_B"/>
   <field old="stopVibro Ljava/lang/Runnable;" new="f_l"/>
  </class>
  <class old="com.xabber.android.data.account.StatusTable" new="com.xabber.android.data.account.c_c">
   <method old="clear()V" new="m_EA"/>
   <method old="create(Landroid/database/sqlite/SQLiteDatabase;)V" new="m_AB"/>
   <method old="getInstance()Lcom/xabber/android/data/account/StatusTable;" new="m_Xr"/>
   <method old="getListOrder()Ljava/lang/String;" new="m_YDa"/>
   <method old="getProjection()[Ljava/lang/String;" new="m_AFa"/>
   <method old="getStatusMode(Landroid/database/Cursor;)Lcom/xabber/android/data/account/StatusMode;" new="m_YKa"/>
   <method old="getStatusText(Landroid/database/Cursor;)Ljava/lang/String;" new="m_qja"/>
   <method old="getTableName()Ljava/lang/String;" new="m_dga"/>
   <method old="list()Landroid/database/Cursor;" new="m_wEa"/>
   <method old="migrate(Landroid/database/sqlite/SQLiteDatabase;I)V" new="m_Cd"/>
   <method old="remove(Lcom/xabber/android/data/account/StatusMode;Ljava/lang/String;)V" new="m_WJa"/>
   <method old="write(Lcom/xabber/android/data/account/StatusMode;Ljava/lang/String;)V" new="m_oLa"/>
   <field old="NAME Ljava/lang/String;" new="f_B"/>
   <field old="PROJECTION [Ljava/lang/String;" new="f_m"/>
   <field old="databaseManager Lcom/xabber/android/data/DatabaseManager;" new="f_j"/>
   <field old="instance Lcom/xabber/android/data/account/StatusTable;" new="f_e"/>
   <field old="writeLock Ljava/lang/Object;" new="f_b"/>
   <field old="writeStatement Landroid/database/sqlite/SQLiteStatement;" new="f_d"/>
  </class>
  <class old="org.jivesoftware.smackx.filetransfer.IBBTransferNegotiator" new="org.jivesoftware.smackx.filetransfer.c_I">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="cleanup()V" new="m_wD"/>
   <method old="createError(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WM"/>
   <method old="createIncomingStream(Lorg/jivesoftware/smackx/packet/StreamInitiation;)Ljava/io/InputStream;" new="m_cn"/>
   <method old="createInitiationAccept(Lorg/jivesoftware/smackx/packet/StreamInitiation;[Ljava/lang/String;)Lorg/jivesoftware/smackx/packet/StreamInitiation;" new="m_yo"/>
   <method old="createOutgoingStream(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/io/OutputStream;" new="m_bo"/>
   <method old="getInitiationPacketFilter(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/filter/PacketFilter;" new="m_fo"/>
   <method old="getNamespaces()[Ljava/lang/String;" new="m_HN"/>
   <method old="initiateIncomingStream(Lorg/jivesoftware/smack/Connection;Lorg/jivesoftware/smackx/packet/StreamInitiation;)Lorg/jivesoftware/smack/packet/Packet;" new="m_Zo"/>
   <method old="negotiateIncomingStream(Lorg/jivesoftware/smack/packet/Packet;)Ljava/io/InputStream;" new="m_no"/>
   <field old="connection Lorg/jivesoftware/smack/Connection;" new="f_m"/>
   <field old="manager Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamManager;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smack.provider.PrivacyProvider" new="wy.c_ka">
   <method old="parseIQ(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/IQ;" new="m_g"/>
   <method old="parseItem(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/PrivacyItem;" new="m_cK"/>
   <method old="parseList(Lorg/xmlpull/v1/XmlPullParser;Lorg/jivesoftware/smack/packet/Privacy;)V" new="m_ft"/>
  </class>
  <class old="org.xbill.DNS.DNSSEC$Algorithm" new="org.xbill.DNS.c_JB">
   <method old="string(I)Ljava/lang/String;" new="m_Wd"/>
   <method old="value(Ljava/lang/String;)I" new="m_le"/>
   <field old="DH I" new="f_B"/>
   <field old="DSA I" new="f_l"/>
   <field old="DSA_NSEC3_SHA1 I" new="f_k"/>
   <field old="ECC I" new="f_f"/>
   <field old="INDIRECT I" new="f_b"/>
   <field old="PRIVATEDNS I" new="f_j"/>
   <field old="PRIVATEOID I" new="f_d"/>
   <field old="RSAMD5 I" new="f_m"/>
   <field old="RSASHA1 I" new="f_K"/>
   <field old="RSASHA256 I" new="f_J"/>
   <field old="RSASHA512 I" new="f_D"/>
   <field old="RSA_NSEC3_SHA1 I" new="f_I"/>
   <field old="algs Lorg/xbill/DNS/Mnemonic;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.filetransfer.FileTransferManager" new="org.jivesoftware.smackx.filetransfer.c_F">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="addFileTransferListener(Lorg/jivesoftware/smackx/filetransfer/FileTransferListener;)V" new="m_kO"/>
   <method old="createIncomingFileTransfer(Lorg/jivesoftware/smackx/filetransfer/FileTransferRequest;)Lorg/jivesoftware/smackx/filetransfer/IncomingFileTransfer;" new="m_do"/>
   <method old="createOutgoingFileTransfer(Ljava/lang/String;)Lorg/jivesoftware/smackx/filetransfer/OutgoingFileTransfer;" new="m_RM"/>
   <method old="fireNewRequest(Lorg/jivesoftware/smackx/packet/StreamInitiation;)V" new="m_im"/>
   <method old="initListeners()V" new="m_Vn"/>
   <method old="rejectIncomingFileTransfer(Lorg/jivesoftware/smackx/filetransfer/FileTransferRequest;)V" new="m_xn"/>
   <method old="removeFileTransferListener(Lorg/jivesoftware/smackx/filetransfer/FileTransferListener;)V" new="m_GN"/>
   <field old="connection Lorg/jivesoftware/smack/Connection;" new="f_e"/>
   <field old="fileTransferNegotiator Lorg/jivesoftware/smackx/filetransfer/FileTransferNegotiator;" new="f_m"/>
   <field old="listeners Ljava/util/List;" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smackx.GroupChatInvitation$Provider" new="org.jivesoftware.smackx.c_t">
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_I"/>
  </class>
  <class old="com.xabber.android.ui.widget.StatusPreference" new="com.xabber.android.ui.widget.StatusPreference">
   <method old="init()V" new="m_ZG"/>
   <method old="onBindView(Landroid/view/View;)V" new="onBindView"/>
   <method old="setStatusMode(Lcom/xabber/android/data/account/StatusMode;)V" new="m_lca"/>
   <field old="statusMode Lcom/xabber/android/data/account/StatusMode;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.adapter.ChatViewerAdapter$1" new="com.xabber.android.ui.adapter.c_b">
   <method old="afterTextChanged(Landroid/text/Editable;)V" new="afterTextChanged"/>
   <method old="beforeTextChanged(Ljava/lang/CharSequence;III)V" new="beforeTextChanged"/>
   <method old="onTextChanged(Ljava/lang/CharSequence;III)V" new="onTextChanged"/>
   <field old="this$0 Lcom/xabber/android/ui/adapter/ChatViewerAdapter;" new="f_e"/>
   <field old="val$chatViewHolder Lcom/xabber/android/ui/adapter/ChatViewerAdapter$ChatViewHolder;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.Zone$ZoneIterator" new="org.xbill.DNS.c_M">
   <method old="hasNext()Z" new="hasNext"/>
   <method old="next()Ljava/lang/Object;" new="next"/>
   <method old="remove()V" new="remove"/>
   <field old="count I" new="f_d"/>
   <field old="current [Lorg/xbill/DNS/RRset;" new="f_m"/>
   <field old="this$0 Lorg/xbill/DNS/Zone;" new="f_b"/>
   <field old="wantLastSOA Z" new="f_B"/>
   <field old="zentries Ljava/util/Iterator;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.connection.OnResponseListener" new="com.xabber.android.data.connection.c_A">
   <method old="onDisconnect(Ljava/lang/String;Ljava/lang/String;)V" new="m_Uc"/>
   <method old="onError(Ljava/lang/String;Ljava/lang/String;Lorg/jivesoftware/smack/packet/IQ;)V" new="m_Ld"/>
   <method old="onReceived(Ljava/lang/String;Ljava/lang/String;Lorg/jivesoftware/smack/packet/IQ;)V" new="m_VA"/>
   <method old="onTimeout(Ljava/lang/String;Ljava/lang/String;)V" new="m_aC"/>
  </class>
  <class old="org.apache.harmony.javax.security.sasl.RealmCallback" new="org.apache.harmony.javax.security.sasl.RealmCallback">
   <method old="getDefaultText()Ljava/lang/String;" new="m_XU"/>
   <method old="getPrompt()Ljava/lang/String;" new="m_DW"/>
   <method old="getText()Ljava/lang/String;" new="m_ZA"/>
   <method old="setText(Ljava/lang/String;)V" new="m_RW"/>
   <field old="serialVersionUID J" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.archive.ChatProvider" new="com.xabber.xmpp.archive.c_n">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/archive/Chat;" new="m_ZZ"/>
   <method old="getInstance()Lcom/xabber/xmpp/archive/ChatProvider;" new="m_Xr"/>
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/archive/Chat;" new="m_I"/>
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_I"/>
   <method old="parseIQ(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/IQ;" new="m_g"/>
   <method old="parseIQ(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/IQ;" new="m_g"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/archive/Chat;)Z" new="m_oCa"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/archive/Chat;)Lcom/xabber/xmpp/archive/Chat;" new="m_YBa"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
   <field old="instance Lcom/xabber/xmpp/archive/ChatProvider;" new="f_m"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.params.KeyParameter" new="wy.c_cb">
   <method old="getKey()[B" new="m_xa"/>
   <field old="key [B" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.Nick" new="org.jivesoftware.smackx.packet.c_q">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="setName(Ljava/lang/String;)V" new="m_Xl"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_m"/>
   <field old="NAMESPACE Ljava/lang/String;" new="f_b"/>
   <field old="name Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="com.xabber.android.ui.dialog.OrbotInstallerDialogBuilder" new="wy.c_jc">
   <method old="create()Landroid/app/AlertDialog;" new="create"/>
   <method old="getDialogId()I" new="m_EAa"/>
   <method old="onDismiss(Landroid/content/DialogInterface;)V" new="onDismiss"/>
   <field old="MARKET_SEARCH Ljava/lang/String;" new="f_m"/>
   <field old="activity Landroid/app/Activity;" new="f_m"/>
   <field old="dialogId I" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamManager$1" new="org.jivesoftware.smackx.bytestreams.socks5.c_G">
   <method old="connectionCreated(Lorg/jivesoftware/smack/Connection;)V" new="m_q"/>
  </class>
  <class old="org.jivesoftware.smackx.muc.Affiliate" new="org.jivesoftware.smackx.muc.c_w">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getAffiliation()Ljava/lang/String;" new="m_Ck"/>
   <method old="getJid()Ljava/lang/String;" new="m_tL"/>
   <method old="getNick()Ljava/lang/String;" new="m_Ql"/>
   <method old="getRole()Ljava/lang/String;" new="m_ul"/>
   <field old="affiliation Ljava/lang/String;" new="f_d"/>
   <field old="jid Ljava/lang/String;" new="f_e"/>
   <field old="nick Ljava/lang/String;" new="f_b"/>
   <field old="role Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntrySet" new="org.jivesoftware.smack.util.collections.c_C">
   <method old="clear()V" new="clear"/>
   <method old="contains(Ljava/util/Map$Entry;)Z" new="m_ur"/>
   <method old="iterator()Ljava/util/Iterator;" new="iterator"/>
   <method old="remove(Ljava/lang/Object;)Z" new="remove"/>
   <method old="size()I" new="size"/>
   <method old="toArray()[Ljava/lang/Object;" new="toArray"/>
   <method old="toArray([Ljava/lang/Object;)[Ljava/lang/Object;" new="toArray"/>
   <field old="parent Lorg/jivesoftware/smack/util/collections/AbstractHashedMap;" new="f_m"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.PrivateCredentialPermission" new="org.apache.harmony.javax.security.auth.c_K">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getActions()Ljava/lang/String;" new="getActions"/>
   <method old="getCredentialClass()Ljava/lang/String;" new="m_Wv"/>
   <method old="getPrincipals()[[Ljava/lang/String;" new="m_hv"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="implies(Ljava/security/Permission;)Z" new="implies"/>
   <method old="initTargetName(Ljava/lang/String;)V" new="m_lx"/>
   <method old="newPermissionCollection()Ljava/security/PermissionCollection;" new="newPermissionCollection"/>
   <method old="readObject(Ljava/io/ObjectInputStream;)V" new="m_CQ"/>
   <method old="sameMembers([Ljava/lang/Object;[Ljava/lang/Object;I)Z" new="m_JV"/>
   <field old="READ Ljava/lang/String;" new="f_m"/>
   <field old="credentialClass Ljava/lang/String;" new="f_B"/>
   <field old="offset I" new="f_e"/>
   <field old="serialVersionUID J" new="f_b"/>
   <field old="set [Lorg/apache/harmony/javax/security/auth/PrivateCredentialPermission$CredOwner;" new="f_d"/>
  </class>
  <class old="com.xabber.android.data.extension.archive.ChatStorage" new="com.xabber.android.data.extension.archive.c_k">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="addItem(Lcom/xabber/android/data/message/AbstractChat;Lcom/xabber/xmpp/archive/Chat;Lcom/xabber/xmpp/archive/AbstractMessage;J)V" new="m_uHa"/>
   <method old="getItems()Ljava/util/Collection;" new="m_Vj"/>
   <method old="hasVersion(Ljava/lang/Integer;)Z" new="m_gGa"/>
   <method old="isApplied()Z" new="m_EHa"/>
   <method old="isReceived()Z" new="m_nHa"/>
   <method old="onApplied()V" new="m_Iha"/>
   <method old="onItemsReceived(Ljava/lang/Integer;)V" new="m_PIa"/>
   <field old="applied Z" new="f_B"/>
   <field old="items Ljava/util/Collection;" new="f_e"/>
   <field old="received Z" new="f_m"/>
   <field old="timestamp Ljava/util/Date;" new="f_d"/>
   <field old="version Ljava/lang/Integer;" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.OfflineMessageInfo$Provider" new="org.jivesoftware.smackx.packet.c_F">
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_I"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.socks5.InitiationListener" new="org.jivesoftware.smackx.bytestreams.socks5.c_a">
   <method old="access$000(Lorg/jivesoftware/smackx/bytestreams/socks5/InitiationListener;Lorg/jivesoftware/smack/packet/Packet;)V" new="m_qo"/>
   <method old="getFilter()Lorg/jivesoftware/smack/filter/PacketFilter;" new="m_co"/>
   <method old="processPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_C"/>
   <method old="processRequest(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_fO"/>
   <method old="shutdown()V" new="m_Fo"/>
   <field old="initFilter Lorg/jivesoftware/smack/filter/PacketFilter;" new="f_m"/>
   <field old="initiationListenerExecutor Ljava/util/concurrent/ExecutorService;" new="f_b"/>
   <field old="manager Lorg/jivesoftware/smackx/bytestreams/socks5/Socks5BytestreamManager;" new="f_e"/>
  </class>
  <class old="com.xabber.android.ui.adapter.StatusContactInflater" new="com.xabber.android.ui.adapter.c_s">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createView(ILandroid/view/ViewGroup;)Landroid/view/View;" new="m_eCa"/>
   <method old="createViewHolder(ILandroid/view/View;)Lcom/xabber/android/ui/adapter/BaseContactInflater$ViewHolder;" new="m_BCa"/>
   <method old="createViewHolder(ILandroid/view/View;)Lcom/xabber/android/ui/adapter/StatusContactInflater$ViewHolder;" new="m_BCa"/>
   <method old="getStatusText(Lcom/xabber/android/data/roster/AbstractContact;)Ljava/lang/String;" new="m_Wca"/>
   <method old="getView(Landroid/view/View;Lcom/xabber/android/data/roster/AbstractContact;)V" new="m_kda"/>
   <method old="setAdapter(Landroid/widget/BaseAdapter;)V" new="m_fCa"/>
   <field old="activity Landroid/app/Activity;" new="f_B"/>
   <field old="adapter Landroid/widget/BaseAdapter;" new="f_e"/>
   <field old="avatarInflaterHelper Lcom/xabber/android/ui/helper/AbstractAvatarInflaterHelper;" new="f_b"/>
   <field old="layoutInflater Landroid/view/LayoutInflater;" new="f_m"/>
   <field old="shadowDrawable Landroid/graphics/drawable/BitmapDrawable;" new="f_d"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$StreamHost" new="org.jivesoftware.smackx.bytestreams.socks5.packet.c_H">
   <method old="getAddress()Ljava/lang/String;" new="m_kf"/>
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getJID()Ljava/lang/String;" new="m_hn"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="getPort()I" new="m_Jg"/>
   <method old="setPort(I)V" new="m_m"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="ELEMENTNAME Ljava/lang/String;" new="f_B"/>
   <field old="JID Ljava/lang/String;" new="f_d"/>
   <field old="NAMESPACE Ljava/lang/String;" new="f_m"/>
   <field old="addy Ljava/lang/String;" new="f_b"/>
   <field old="port I" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.account.OAuthManager" new="com.xabber.android.data.account.c_e">
   <method old="getAccessToken(Ljava/lang/String;)Ljava/lang/String;" new="m_lLa"/>
   <method old="getAssignedJid(Ljava/lang/String;)Ljava/lang/String;" new="m_Ska"/>
   <method old="getInstance()Lcom/xabber/android/data/account/OAuthManager;" new="m_Xr"/>
   <method old="getOAuthProvider(Lcom/xabber/android/data/account/AccountProtocol;)Lcom/xabber/android/data/account/OAuthProvider;" new="m_zja"/>
   <method old="getPassword(Lcom/xabber/android/data/account/AccountProtocol;Ljava/lang/String;)Ljava/lang/String;" new="m_uKa"/>
   <method old="getUrl(Lcom/xabber/android/data/account/AccountProtocol;)Ljava/lang/String;" new="m_hKa"/>
   <method old="isValidUri(Lcom/xabber/android/data/account/AccountProtocol;Landroid/net/Uri;)Z" new="m_jLa"/>
   <method old="onAccessTokenReceived(Lcom/xabber/android/data/account/OAuthResult;)V" new="m_Zla"/>
   <method old="onAccountRemoved(Lcom/xabber/android/data/account/AccountItem;)V" new="m_kb"/>
   <method old="onAuthorized(Lcom/xabber/android/data/connection/ConnectionItem;)V" new="m_WB"/>
   <method old="requestAccessToken(Lcom/xabber/android/data/account/AccountProtocol;Ljava/lang/String;)Lcom/xabber/android/data/account/OAuthResult;" new="m_BLa"/>
   <method old="requestRefreshToken(Lcom/xabber/android/data/account/AccountProtocol;Ljava/lang/String;)Ljava/lang/String;" new="m_xja"/>
   <field old="instance Lcom/xabber/android/data/account/OAuthManager;" new="f_e"/>
   <field old="jids Ljava/util/Map;" new="f_m"/>
   <field old="tokens Ljava/util/Map;" new="f_b"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.login.CredentialException" new="wy.c_pa">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <field old="serialVersionUID J" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.dialog.ExportChatDialogBuilder" new="wy.c_ab">
   <method old="create()Landroid/app/AlertDialog;" new="create"/>
   <method old="getDialogId()I" new="m_EAa"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getNegativeTitle()Ljava/lang/String;" new="m_rCa"/>
   <method old="getPositiveTitle()Ljava/lang/String;" new="m_sAa"/>
   <method old="isSendChecked()Z" new="m_DBa"/>
   <method old="onAccept(Landroid/content/DialogInterface;)V" new="m_pba"/>
   <method old="onCancel(Landroid/content/DialogInterface;)V" new="m_NAa"/>
   <method old="onDecline(Landroid/content/DialogInterface;)V" new="m_bda"/>
   <method old="onDismiss(Landroid/content/DialogInterface;)V" new="onDismiss"/>
   <method old="setOnAcceptListener(Lcom/xabber/android/ui/dialog/OnAcceptListener;)Lcom/xabber/android/ui/dialog/ListenableDialogBuilder;" new="m_fAa"/>
   <method old="setOnCancelListener(Lcom/xabber/android/ui/dialog/OnCancelListener;)Lcom/xabber/android/ui/dialog/ListenableDialogBuilder;" new="m_lba"/>
   <method old="setOnDeclineListener(Lcom/xabber/android/ui/dialog/OnDeclineListener;)Lcom/xabber/android/ui/dialog/ListenableDialogBuilder;" new="m_Tba"/>
   <field old="activity Landroid/app/Activity;" new="f_m"/>
   <field old="dialogId I" new="f_e"/>
   <field old="nameView Landroid/widget/EditText;" new="f_m"/>
   <field old="sendView Landroid/widget/CheckBox;" new="f_e"/>
  </class>
  <class old="org.xbill.DNS.InvalidDClassException" new="org.xbill.DNS.c_Pa">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
  </class>
  <class old="com.xabber.xmpp.ssn.DisclosureValue" new="com.xabber.xmpp.ssn.DisclosureValue">
   <method old="createOption()Lorg/jivesoftware/smackx/FormField$Option;" new="m_Hy"/>
   <method old="fromString(Ljava/lang/String;)Lcom/xabber/xmpp/ssn/DisclosureValue;" new="m_tc"/>
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/xmpp/ssn/DisclosureValue;" new="valueOf"/>
   <method old="values()[Lcom/xabber/xmpp/ssn/DisclosureValue;" new="values"/>
   <field old="$VALUES [Lcom/xabber/xmpp/ssn/DisclosureValue;" new="f_b"/>
   <field old="disabled Lcom/xabber/xmpp/ssn/DisclosureValue;" new="f_m"/>
   <field old="enabled Lcom/xabber/xmpp/ssn/DisclosureValue;" new="f_B"/>
   <field old="label Ljava/lang/String;" new="f_e"/>
   <field old="never Lcom/xabber/xmpp/ssn/DisclosureValue;" new="f_d"/>
  </class>
  <class old="com.xabber.android.ui.adapter.BaseContactInflater" new="com.xabber.android.ui.adapter.c_q">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createView(ILandroid/view/ViewGroup;)Landroid/view/View;" new="m_eCa"/>
   <method old="createViewHolder(ILandroid/view/View;)Lcom/xabber/android/ui/adapter/BaseContactInflater$ViewHolder;" new="m_BCa"/>
   <method old="getStatusText(Lcom/xabber/android/data/roster/AbstractContact;)Ljava/lang/String;" new="m_Wca"/>
   <method old="getView(Landroid/view/View;Lcom/xabber/android/data/roster/AbstractContact;)V" new="m_kda"/>
   <method old="setAdapter(Landroid/widget/BaseAdapter;)V" new="m_fCa"/>
   <field old="activity Landroid/app/Activity;" new="f_B"/>
   <field old="adapter Landroid/widget/BaseAdapter;" new="f_e"/>
   <field old="avatarInflaterHelper Lcom/xabber/android/ui/helper/AbstractAvatarInflaterHelper;" new="f_b"/>
   <field old="layoutInflater Landroid/view/LayoutInflater;" new="f_m"/>
   <field old="shadowDrawable Landroid/graphics/drawable/BitmapDrawable;" new="f_d"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.Destroyable" new="org.apache.harmony.javax.security.auth.c_E">
   <method old="destroy()V" new="m_cd"/>
   <method old="isDestroyed()Z" new="m_Ec"/>
  </class>
  <class old="org.xbill.DNS.RRSIGRecord" new="org.xbill.DNS.RRSIGRecord">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getAlgorithm()I" new="m_Ne"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getExpire()Ljava/util/Date;" new="m_Fg"/>
   <method old="getFootprint()I" new="m_VF"/>
   <method old="getLabels()I" new="m_UE"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getOrigTTL()J" new="m_Wf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getSignature()[B" new="m_IE"/>
   <method old="getSigner()Lorg/xbill/DNS/Name;" new="m_Ve"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getTimeSigned()Ljava/util/Date;" new="m_Je"/>
   <method old="getType()I" new="m_b"/>
   <method old="getTypeCovered()I" new="m_WF"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setSignature([B)V" new="m_GF"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="alg I" new="f_l"/>
   <field old="covered I" new="f_d"/>
   <field old="dclass I" new="f_m"/>
   <field old="expire Ljava/util/Date;" new="f_I"/>
   <field old="footprint I" new="f_e"/>
   <field old="labels I" new="f_B"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="origttl J" new="f_k"/>
   <field old="serialVersionUID J" new="f_m"/>
   <field old="signature [B" new="f_j"/>
   <field old="signer Lorg/xbill/DNS/Name;" new="f_b"/>
   <field old="timeSigned Ljava/util/Date;" new="f_K"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="org.xbill.DNS.X25Record" new="org.xbill.DNS.c_j">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkAndConvertAddress(Ljava/lang/String;)[B" new="m_JD"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getAddress()Ljava/lang/String;" new="m_kf"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="address [B" new="f_m"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="serialVersionUID J" new="f_e"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.DiscoverItems$Item" new="org.jivesoftware.smackx.packet.c_u">
   <method old="getAction()Ljava/lang/String;" new="m_dJ"/>
   <method old="getEntityID()Ljava/lang/String;" new="m_XJ"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getNode()Ljava/lang/String;" new="m_Ol"/>
   <method old="setAction(Ljava/lang/String;)V" new="m_zJ"/>
   <method old="setName(Ljava/lang/String;)V" new="m_Xl"/>
   <method old="setNode(Ljava/lang/String;)V" new="m_kJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="REMOVE_ACTION Ljava/lang/String;" new="f_m"/>
   <field old="UPDATE_ACTION Ljava/lang/String;" new="f_B"/>
   <field old="action Ljava/lang/String;" new="f_j"/>
   <field old="entityID Ljava/lang/String;" new="f_b"/>
   <field old="name Ljava/lang/String;" new="f_e"/>
   <field old="node Ljava/lang/String;" new="f_d"/>
  </class>
  <class old="com.xabber.android.data.extension.archive.MessageArchiveManager" new="com.xabber.android.data.extension.archive.c_j">
   <method old="access$000(Lcom/xabber/android/data/extension/archive/MessageArchiveManager;)V" new="m_uia"/>
   <method old="access$100(Lcom/xabber/android/data/extension/archive/MessageArchiveManager;Ljava/lang/String;Lcom/xabber/xmpp/archive/Pref;)V" new="m_bia"/>
   <method old="access$200(Lcom/xabber/android/data/extension/archive/MessageArchiveManager;Ljava/lang/String;Lcom/xabber/xmpp/archive/Modified;)V" new="m_kia"/>
   <method old="access$300(Lcom/xabber/android/data/extension/archive/MessageArchiveManager;Ljava/lang/String;)V" new="m_Tha"/>
   <method old="access$400(Lcom/xabber/android/data/extension/archive/MessageArchiveManager;Ljava/lang/String;Lcom/xabber/xmpp/archive/Chat;)V" new="m_Qha"/>
   <method old="apply(Ljava/lang/String;Lcom/xabber/android/data/extension/archive/ModificationStorage;)V" new="m_Nga"/>
   <method old="apply(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/xabber/android/data/extension/archive/ChatStorage;Lcom/xabber/android/data/extension/archive/HistoryStorage;)Z" new="m_vha"/>
   <method old="checkForDefaults(Ljava/lang/String;Lcom/xabber/xmpp/archive/Default;)V" new="m_tia"/>
   <method old="getInstance()Lcom/xabber/android/data/extension/archive/MessageArchiveManager;" new="m_Xr"/>
   <method old="getItemArchivePreference(Ljava/lang/String;Ljava/lang/String;)Lcom/xabber/android/data/extension/archive/ArchivePreference;" new="m_rha"/>
   <method old="getOtrMode(Ljava/lang/String;Ljava/lang/String;)Lcom/xabber/xmpp/archive/OtrMode;" new="m_MHa"/>
   <method old="getSaveMode(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/xabber/xmpp/archive/SaveMode;" new="m_Tga"/>
   <method old="getUserSaveMode(Ljava/lang/String;Ljava/lang/String;)Lcom/xabber/xmpp/archive/SaveMode;" new="m_tha"/>
   <method old="isModificationsSucceed(Ljava/lang/String;)Z" new="m_Oha"/>
   <method old="onAccountAdded(Lcom/xabber/android/data/account/AccountItem;)V" new="m_NA"/>
   <method old="onAccountArchiveModeChanged(Lcom/xabber/android/data/account/AccountItem;)V" new="m_aA"/>
   <method old="onAccountRemoved(Lcom/xabber/android/data/account/AccountItem;)V" new="m_kb"/>
   <method old="onChatReceived(Ljava/lang/String;Lcom/xabber/xmpp/archive/Chat;)V" new="m_dIa"/>
   <method old="onDisconnect(Lcom/xabber/android/data/connection/ConnectionItem;)V" new="m_xB"/>
   <method old="onHeadersReceived(Ljava/lang/String;Ljava/lang/String;Lcom/xabber/android/data/extension/archive/HeaderSequence;Ljava/util/Collection;Lcom/xabber/xmpp/rsm/Set;)V" new="m_Mha"/>
   <method old="onItemRemoveReceived(Ljava/lang/String;Lcom/xabber/xmpp/archive/ItemRemove;)V" new="m_mia"/>
   <method old="onListReceived(Ljava/lang/String;Lcom/xabber/xmpp/archive/List;)V" new="m_nha"/>
   <method old="onLoad()V" new="m_pA"/>
   <method old="onLoaded()V" new="m_Kea"/>
   <method old="onModifiedAvailable(Lcom/xabber/android/data/connection/ConnectionItem;)V" new="m_IGa"/>
   <method old="onModifiedAvailable(Ljava/lang/String;)V" new="m_kha"/>
   <method old="onModifiedReceived(Ljava/lang/String;Lcom/xabber/xmpp/archive/Modified;)V" new="m_QGa"/>
   <method old="onPacket(Lcom/xabber/android/data/connection/ConnectionItem;Ljava/lang/String;Lorg/jivesoftware/smack/packet/Packet;)V" new="m_tC"/>
   <method old="onPreferenceAvailable(Ljava/lang/String;)V" new="m_Mia"/>
   <method old="onPreferenceReceived(Ljava/lang/String;Lcom/xabber/xmpp/archive/Pref;)V" new="m_OGa"/>
   <method old="onPreferencesResponce(Ljava/lang/String;Lcom/xabber/xmpp/archive/Pref;)V" new="m_Lha"/>
   <method old="onSessionRemoveReceived(Ljava/lang/String;Lcom/xabber/xmpp/archive/SessionRemove;)V" new="m_sIa"/>
   <method old="onTimeReceived(Lcom/xabber/android/data/connection/ConnectionItem;)V" new="m_IA"/>
   <method old="removeNotReceived(Ljava/lang/String;)V" new="m_xIa"/>
   <method old="requestChat(Ljava/lang/String;Lcom/xabber/xmpp/archive/CollectionHeader;Ljava/lang/String;Z)V" new="m_hHa"/>
   <method old="requestHistory(Ljava/lang/String;Ljava/lang/String;II)V" new="m_Zga"/>
   <method old="requestList(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" new="m_Lga"/>
   <method old="requestModified(Ljava/lang/String;Ljava/lang/String;)V" new="m_UGa"/>
   <method old="requestPreferences(Ljava/lang/String;)V" new="m_aia"/>
   <method old="requestSequence(Ljava/lang/String;Ljava/lang/String;Lcom/xabber/android/data/extension/archive/HeaderSequence;)V" new="m_LIa"/>
   <method old="sendItemRemove(Ljava/lang/String;Ljava/lang/String;)V" new="m_Oia"/>
   <method old="sendItemUpdate(Ljava/lang/String;Ljava/lang/String;Lcom/xabber/xmpp/archive/SaveMode;Lcom/xabber/xmpp/archive/OtrMode;)V" new="m_YIa"/>
   <method old="sendSessionRemove(Ljava/lang/String;Ljava/lang/String;)V" new="m_Iga"/>
   <method old="sendSessionUpdate(Ljava/lang/String;Ljava/lang/String;Lcom/xabber/xmpp/archive/SaveMode;)V" new="m_TIa"/>
   <method old="setOtrMode(Ljava/lang/String;Ljava/lang/String;Lcom/xabber/xmpp/archive/OtrMode;)V" new="m_hha"/>
   <method old="setSaveMode(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/xabber/xmpp/archive/SaveMode;)V" new="m_IHa"/>
   <field old="FEATURE_ARCH Ljava/lang/String;" new="f_I"/>
   <field old="FEATURE_MANAGE Ljava/lang/String;" new="f_l"/>
   <field old="FEATURE_PREF Ljava/lang/String;" new="f_K"/>
   <field old="RSM_MAX I" new="f_g"/>
   <field old="SESSION_TIMEOUT Ljava/lang/Integer;" new="f_B"/>
   <field old="availableArchiveRequestProvider Lcom/xabber/android/data/notification/BaseAccountNotificationProvider;" new="f_M"/>
   <field old="chatStorages Lcom/xabber/android/data/entity/NestedNestedMaps;" new="f_j"/>
   <field old="connected Ljava/util/Map;" new="f_J"/>
   <field old="defaults Ljava/util/Map;" new="f_e"/>
   <field old="historyStorages Lcom/xabber/android/data/entity/NestedMap;" new="f_D"/>
   <field old="instance Lcom/xabber/android/data/extension/archive/MessageArchiveManager;" new="f_b"/>
   <field old="items Ljava/util/Map;" new="f_G"/>
   <field old="modificationRequests Lcom/xabber/android/data/entity/NestedMap;" new="f_d"/>
   <field old="modificationStorages Ljava/util/Map;" new="f_f"/>
   <field old="saves Ljava/util/Map;" new="f_m"/>
   <field old="sessionSaves Lcom/xabber/android/data/entity/NestedMap;" new="f_k"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.params.DHPublicKeyParameters" new="wy.c_Rd">
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getParameters()Lnet/java/otr4j/bouncycastle/crypto/params/DHParameters;" new="m_Paa"/>
   <method old="getY()Ljava/math/BigInteger;" new="m_yz"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="isPrivate()Z" new="m_Gaa"/>
   <field old="privateKey Z" new="f_m"/>
   <field old="y Ljava/math/BigInteger;" new="f_m"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.callback.Callback" new="wy.c_m">
  </class>
  <class old="org.xbill.DNS.NSRecord" new="org.xbill.DNS.c_la">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getSingleName()Lorg/xbill/DNS/Name;" new="m_NH"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getTarget()Lorg/xbill/DNS/Name;" new="m_ff"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="serialVersionUID J" new="f_m"/>
   <field old="singleName Lorg/xbill/DNS/Name;" new="f_m"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.OnClearListener" new="com.xabber.android.data.c_j">
   <method old="onClear()V" new="m_nC"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.ibb.InitiationListener$1" new="org.jivesoftware.smackx.bytestreams.ibb.c_H">
   <method old="run()V" new="run"/>
   <field old="this$0 Lorg/jivesoftware/smackx/bytestreams/ibb/InitiationListener;" new="f_m"/>
   <field old="val$packet Lorg/jivesoftware/smack/packet/Packet;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IQIBBOutputStream" new="org.jivesoftware.smackx.bytestreams.ibb.c_f">
   <method old="close()V" new="close"/>
   <method old="closeInternal(Z)V" new="m_uM"/>
   <method old="flush()V" new="flush"/>
   <method old="write(I)V" new="write"/>
   <method old="write([B)V" new="write"/>
   <method old="write([BII)V" new="write"/>
   <method old="writeToXML(Lorg/jivesoftware/smackx/bytestreams/ibb/packet/DataPacketExtension;)V" new="m_Gm"/>
   <field old="buffer [B" new="f_d"/>
   <field old="bufferPointer I" new="f_B"/>
   <field old="isClosed Z" new="f_b"/>
   <field old="seq J" new="f_e"/>
   <field old="this$0 Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamSession;" new="f_m"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.util.encoders.Encoder" new="wy.c_f">
   <method old="decode(Ljava/lang/String;Ljava/io/OutputStream;)I" new="m_sd"/>
   <method old="decode([BIILjava/io/OutputStream;)I" new="m_rA"/>
   <method old="encode([BIILjava/io/OutputStream;)I" new="m_kB"/>
  </class>
  <class old="org.xbill.DNS.TextParseException" new="org.xbill.DNS.c_l">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
  </class>
  <class old="org.jivesoftware.smackx.XHTMLManager" new="org.jivesoftware.smackx.c_j">
   <method old="addBody(Lorg/jivesoftware/smack/packet/Message;Ljava/lang/String;)V" new="m_nq"/>
   <method old="getBodies(Lorg/jivesoftware/smack/packet/Message;)Ljava/util/Iterator;" new="m_rQ"/>
   <method old="isServiceEnabled(Lorg/jivesoftware/smack/Connection;)Z" new="m_Nm"/>
   <method old="isServiceEnabled(Lorg/jivesoftware/smack/Connection;Ljava/lang/String;)Z" new="m_eO"/>
   <method old="isXHTMLMessage(Lorg/jivesoftware/smack/packet/Message;)Z" new="m_MQ"/>
   <method old="setServiceEnabled(Lorg/jivesoftware/smack/Connection;Z)V" new="m_nm"/>
   <field old="namespace Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.packet.XMPPError" new="org.jivesoftware.smack.packet.c_M">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="getCode()I" new="m_ej"/>
   <method old="getCondition()Ljava/lang/String;" new="m_Iu"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/List;" new="m_IK"/>
   <method old="getMessage()Ljava/lang/String;" new="m_Wm"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/XMPPError$Type;" new="m_b"/>
   <method old="init(Lorg/jivesoftware/smack/packet/XMPPError$Condition;)V" new="m_xS"/>
   <method old="setExtension(Ljava/util/List;)V" new="m_jT"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="applicationExtensions Ljava/util/List;" new="f_e"/>
   <field old="code I" new="f_m"/>
   <field old="condition Ljava/lang/String;" new="f_B"/>
   <field old="message Ljava/lang/String;" new="f_d"/>
   <field old="type Lorg/jivesoftware/smack/packet/XMPPError$Type;" new="f_b"/>
  </class>
  <class old="org.xbill.DNS.NULLRecord" new="org.xbill.DNS.c_Na">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getData()[B" new="m_tD"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="data [B" new="f_e"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="serialVersionUID J" new="f_m"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="net.java.otr4j.OtrException" new="net.java.otr4j.c_j">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
  </class>
  <class old="org.jivesoftware.smack.filter.PacketExtensionFilter" new="wy.c_ea">
   <method old="accept(Lorg/jivesoftware/smack/packet/Packet;)Z" new="m_x"/>
   <field old="elementName Ljava/lang/String;" new="f_e"/>
   <field old="namespace Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.apache.harmony.javax.security.sasl.SaslServer" new="org.apache.harmony.javax.security.sasl.c_B">
   <method old="dispose()V" new="m_xA"/>
   <method old="evaluateResponse([B)[B" new="m_cB"/>
   <method old="getAuthorizationID()Ljava/lang/String;" new="m_Yb"/>
   <method old="getMechanismName()Ljava/lang/String;" new="m_qC"/>
   <method old="getNegotiatedProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_IB"/>
   <method old="isComplete()Z" new="m_kc"/>
   <method old="unwrap([BII)[B" new="m_Eb"/>
   <method old="wrap([BII)[B" new="m_hC"/>
  </class>
  <class old="com.xabber.android.data.extension.capability.ClientInfo" new="com.xabber.android.data.extension.capability.c_B">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getClientSoftware()Lcom/xabber/android/data/extension/capability/ClientSoftware;" new="m_sda"/>
   <method old="getFeatures()Ljava/util/Collection;" new="m_hL"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getType()Ljava/lang/String;" new="m_b"/>
   <field old="clientSoftware Lcom/xabber/android/data/extension/capability/ClientSoftware;" new="f_d"/>
   <field old="features Ljava/util/Collection;" new="f_m"/>
   <field old="name Ljava/lang/String;" new="f_e"/>
   <field old="type Ljava/lang/String;" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.extension.avatar.HoneycombShortcutHelper" new="wy.c_DB">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getLauncherLargeIconSize()I" new="m_Xga"/>
  </class>
  <class old="org.jivesoftware.smack.packet.StreamError$Type" new="org.jivesoftware.smack.packet.StreamError$Type">
   <method old="fromString(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/StreamError$Type;" new="m_tc"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="valueOf(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/StreamError$Type;" new="valueOf"/>
   <method old="values()[Lorg/jivesoftware/smack/packet/StreamError$Type;" new="values"/>
   <field old="$VALUES [Lorg/jivesoftware/smack/packet/StreamError$Type;" new="f_F"/>
   <field old="badFormat Lorg/jivesoftware/smack/packet/StreamError$Type;" new="f_M"/>
   <field old="badNamespacePrefix Lorg/jivesoftware/smack/packet/StreamError$Type;" new="f_K"/>
   <field old="conflict Lorg/jivesoftware/smack/packet/StreamError$Type;" new="f_C"/>
   <field old="connectionTimeout Lorg/jivesoftware/smack/packet/StreamError$Type;" new="f_k"/>
   <field old="hostGone Lorg/jivesoftware/smack/packet/StreamError$Type;" new="f_g"/>
   <field old="hostUnknown Lorg/jivesoftware/smack/packet/StreamError$Type;" new="f_h"/>
   <field old="improperAddressing Lorg/jivesoftware/smack/packet/StreamError$Type;" new="f_p"/>
   <field old="internalServerError Lorg/jivesoftware/smack/packet/StreamError$Type;" new="f_c"/>
   <field old="invalidFrom Lorg/jivesoftware/smack/packet/StreamError$Type;" new="f_l"/>
   <field old="invalidId Lorg/jivesoftware/smack/packet/StreamError$Type;" new="f_G"/>
   <field old="invalidNamespace Lorg/jivesoftware/smack/packet/StreamError$Type;" new="f_A"/>
   <field old="invalidXml Lorg/jivesoftware/smack/packet/StreamError$Type;" new="f_j"/>
   <field old="notAuthorized Lorg/jivesoftware/smack/packet/StreamError$Type;" new="f_H"/>
   <field old="notWellFormed Lorg/jivesoftware/smack/packet/StreamError$Type;" new="f_Z"/>
   <field old="policyViolation Lorg/jivesoftware/smack/packet/StreamError$Type;" new="f_E"/>
   <field old="remoteConnectionFailed Lorg/jivesoftware/smack/packet/StreamError$Type;" new="f_L"/>
   <field old="reset Lorg/jivesoftware/smack/packet/StreamError$Type;" new="f_B"/>
   <field old="resourceConstraint Lorg/jivesoftware/smack/packet/StreamError$Type;" new="f_d"/>
   <field old="restrictedXml Lorg/jivesoftware/smack/packet/StreamError$Type;" new="f_e"/>
   <field old="seeOtherHost Lorg/jivesoftware/smack/packet/StreamError$Type;" new="f_f"/>
   <field old="systemShutdown Lorg/jivesoftware/smack/packet/StreamError$Type;" new="f_b"/>
   <field old="undefinedCondition Lorg/jivesoftware/smack/packet/StreamError$Type;" new="f_D"/>
   <field old="unsupportedEncoding Lorg/jivesoftware/smack/packet/StreamError$Type;" new="f_a"/>
   <field old="unsupportedFeature Lorg/jivesoftware/smack/packet/StreamError$Type;" new="f_J"/>
   <field old="unsupportedStanzaType Lorg/jivesoftware/smack/packet/StreamError$Type;" new="f_I"/>
   <field old="unsupportedVersion Lorg/jivesoftware/smack/packet/StreamError$Type;" new="f_i"/>
   <field old="value Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.PrivateCredentialPermission$CredOwner" new="org.apache.harmony.javax.security.auth.c_G">
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="implies(Ljava/lang/Object;)Z" new="m_Lw"/>
   <field old="isClassWildcard Z" new="f_m"/>
   <field old="isPNameWildcard Z" new="f_b"/>
   <field old="principalClass Ljava/lang/String;" new="f_d"/>
   <field old="principalName Ljava/lang/String;" new="f_e"/>
   <field old="serialVersionUID J" new="f_B"/>
  </class>
  <class old="org.jivesoftware.smack.PrivacyListListener" new="org.jivesoftware.smack.c_j">
   <method old="setPrivacyList(Ljava/lang/String;Ljava/util/List;)V" new="m_ZB"/>
   <method old="updatedPrivacyList(Ljava/lang/String;)V" new="m_gb"/>
  </class>
  <class old="org.xbill.DNS.Mnemonic" new="org.xbill.DNS.c_I">
   <method old="add(ILjava/lang/String;)V" new="m_DF"/>
   <method old="addAlias(ILjava/lang/String;)V" new="m_vE"/>
   <method old="addAll(Lorg/xbill/DNS/Mnemonic;)V" new="m_DE"/>
   <method old="check(I)V" new="m_vd"/>
   <method old="getText(I)Ljava/lang/String;" new="m_fF"/>
   <method old="getValue(Ljava/lang/String;)I" new="m_oF"/>
   <method old="parseNumeric(Ljava/lang/String;)I" new="m_ED"/>
   <method old="sanitize(Ljava/lang/String;)Ljava/lang/String;" new="m_aE"/>
   <method old="setMaximum(I)V" new="m_Bg"/>
   <method old="setNumericAllowed(Z)V" new="m_hF"/>
   <method old="setPrefix(Ljava/lang/String;)V" new="m_Dg"/>
   <method old="toInteger(I)Ljava/lang/Integer;" new="m_qE"/>
   <field old="CASE_LOWER I" new="f_d"/>
   <field old="CASE_SENSITIVE I" new="f_B"/>
   <field old="CASE_UPPER I" new="f_e"/>
   <field old="cachedInts [Ljava/lang/Integer;" new="f_I"/>
   <field old="description Ljava/lang/String;" new="f_m"/>
   <field old="max I" new="f_j"/>
   <field old="numericok Z" new="f_b"/>
   <field old="prefix Ljava/lang/String;" new="f_k"/>
   <field old="strings Ljava/util/HashMap;" new="f_l"/>
   <field old="values Ljava/util/HashMap;" new="f_f"/>
   <field old="wordcase I" new="f_K"/>
  </class>
  <class old="org.xbill.DNS.CERTRecord$CertificateType" new="org.xbill.DNS.c_Sd">
   <method old="string(I)Ljava/lang/String;" new="m_Wd"/>
   <method old="value(Ljava/lang/String;)I" new="m_le"/>
   <field old="ACPKIX I" new="f_k"/>
   <field old="IACPKIX I" new="f_m"/>
   <field old="IPGP I" new="f_b"/>
   <field old="IPKIX I" new="f_l"/>
   <field old="ISPKI I" new="f_B"/>
   <field old="OID I" new="f_j"/>
   <field old="PGP I" new="f_e"/>
   <field old="PKIX I" new="f_K"/>
   <field old="SPKI I" new="f_d"/>
   <field old="URI I" new="f_f"/>
   <field old="types Lorg/xbill/DNS/Mnemonic;" new="f_I"/>
  </class>
  <class old="org.xbill.DNS.Cache$CacheRRset" new="org.xbill.DNS.c_hc">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="addRR(Lorg/xbill/DNS/Record;)V" new="m_HI"/>
   <method old="clear()V" new="m_EA"/>
   <method old="compareCredibility(I)I" new="m_H"/>
   <method old="deleteRR(Lorg/xbill/DNS/Record;)V" new="m_OH"/>
   <method old="expired()Z" new="m_h"/>
   <method old="first()Lorg/xbill/DNS/Record;" new="m_Th"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="rrs()Ljava/util/Iterator;" new="m_vI"/>
   <method old="rrs(Z)Ljava/util/Iterator;" new="m_Oh"/>
   <method old="sigs()Ljava/util/Iterator;" new="m_nh"/>
   <method old="size()I" new="m_ui"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="credibility I" new="f_m"/>
   <field old="expire I" new="f_e"/>
   <field old="serialVersionUID J" new="f_b"/>
  </class>
  <class old="org.xbill.DNS.Type" new="org.xbill.DNS.c_i">
   <method old="check(I)V" new="m_vd"/>
   <method old="getProto(I)Lorg/xbill/DNS/Record;" new="m_cE"/>
   <method old="isRR(I)Z" new="m_sF"/>
   <method old="string(I)Ljava/lang/String;" new="m_Wd"/>
   <method old="value(Ljava/lang/String;)I" new="m_le"/>
   <method old="value(Ljava/lang/String;Z)I" new="m_je"/>
   <field old="A I" new="f_f"/>
   <field old="A6 I" new="f_e"/>
   <field old="AAAA I" new="f_U"/>
   <field old="AFSDB I" new="f_D"/>
   <field old="ANY I" new="f_M"/>
   <field old="APL I" new="f_s"/>
   <field old="ATMA I" new="f_a"/>
   <field old="AXFR I" new="f_Da"/>
   <field old="CERT I" new="f_p"/>
   <field old="CNAME I" new="f_b"/>
   <field old="DHCID I" new="f_y"/>
   <field old="DLV I" new="f_J"/>
   <field old="DNAME I" new="f_N"/>
   <field old="DNSKEY I" new="f_W"/>
   <field old="DS I" new="f_c"/>
   <field old="EID I" new="f_u"/>
   <field old="GPOS I" new="f_q"/>
   <field old="HINFO I" new="f_P"/>
   <field old="IPSECKEY I" new="f_S"/>
   <field old="ISDN I" new="f_O"/>
   <field old="IXFR I" new="f_m"/>
   <field old="KEY I" new="f_R"/>
   <field old="KX I" new="f_Ma"/>
   <field old="LOC I" new="f_F"/>
   <field old="MAILA I" new="f_L"/>
   <field old="MAILB I" new="f_w"/>
   <field old="MB I" new="f_Fa"/>
   <field old="MD I" new="f_ma"/>
   <field old="MF I" new="f_k"/>
   <field old="MG I" new="f_G"/>
   <field old="MINFO I" new="f_Aa"/>
   <field old="MR I" new="f_T"/>
   <field old="MX I" new="f_Z"/>
   <field old="NAPTR I" new="f_h"/>
   <field old="NIMLOC I" new="f_g"/>
   <field old="NS I" new="f_z"/>
   <field old="NSAP I" new="f_Q"/>
   <field old="NSAP_PTR I" new="f_n"/>
   <field old="NSEC I" new="f_t"/>
   <field old="NSEC3 I" new="f_X"/>
   <field old="NSEC3PARAM I" new="f_V"/>
   <field old="NULL I" new="f_E"/>
   <field old="NXT I" new="f_Y"/>
   <field old="OPT I" new="f_K"/>
   <field old="PTR I" new="f_l"/>
   <field old="PX I" new="f_r"/>
   <field old="RP I" new="f_Ha"/>
   <field old="RRSIG I" new="f_x"/>
   <field old="RT I" new="f_ja"/>
   <field old="SIG I" new="f_A"/>
   <field old="SOA I" new="f_I"/>
   <field old="SPF I" new="f_v"/>
   <field old="SRV I" new="f_C"/>
   <field old="SSHFP I" new="f_o"/>
   <field old="TKEY I" new="f_B"/>
   <field old="TSIG I" new="f_H"/>
   <field old="TXT I" new="f_ga"/>
   <field old="WKS I" new="f_i"/>
   <field old="X25 I" new="f_j"/>
   <field old="types Lorg/xbill/DNS/Type$TypeMnemonic;" new="f_d"/>
  </class>
  <class old="com.xabber.android.classic.R$attr" new="com.xabber.android.classic.R$attr">
   <field old="accountBackground I" new="accountBackground"/>
   <field old="expanderAccountColor I" new="expanderAccountColor"/>
   <field old="expanderBackground I" new="expanderBackground"/>
   <field old="expanderGroupColor I" new="expanderGroupColor"/>
   <field old="expanderIndicator I" new="expanderIndicator"/>
   <field old="textColorPrimaryNoSelected I" new="textColorPrimaryNoSelected"/>
   <field old="titleAccountBackground I" new="titleAccountBackground"/>
   <field old="titleMainBackground I" new="titleMainBackground"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.socks5.provider.BytestreamsProvider" new="wy.c_X">
   <method old="parseIQ(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/IQ;" new="m_g"/>
  </class>
  <class old="org.jivesoftware.smack.util.collections.AbstractReferenceMap" new="org.jivesoftware.smack.util.collections.c_m">
   <method old="access$000(Lorg/jivesoftware/smack/util/collections/AbstractReferenceMap;)Ljava/lang/ref/ReferenceQueue;" new="m_Wq"/>
   <method old="addEntry(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;I)V" new="m_Dq"/>
   <method old="addMapping(IILjava/lang/Object;Ljava/lang/Object;)V" new="m_hq"/>
   <method old="calculateNewCapacity(I)I" new="m_up"/>
   <method old="calculateThreshold(IF)I" new="m_aR"/>
   <method old="checkCapacity()V" new="m_Jr"/>
   <method old="clear()V" new="clear"/>
   <method old="clone()Ljava/lang/Object;" new="clone"/>
   <method old="containsKey(Ljava/lang/Object;)Z" new="containsKey"/>
   <method old="containsValue(Ljava/lang/Object;)Z" new="containsValue"/>
   <method old="createEntry(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;ILjava/lang/Object;Ljava/lang/Object;)Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;" new="m_Kp"/>
   <method old="createEntrySetIterator()Ljava/util/Iterator;" new="m_XO"/>
   <method old="createKeySetIterator()Ljava/util/Iterator;" new="m_zq"/>
   <method old="createValuesIterator()Ljava/util/Iterator;" new="m_Lr"/>
   <method old="destroyEntry(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;)V" new="m_uQ"/>
   <method old="doReadObject(Ljava/io/ObjectInputStream;)V" new="m_Ir"/>
   <method old="doWriteObject(Ljava/io/ObjectOutputStream;)V" new="m_Fr"/>
   <method old="ensureCapacity(I)V" new="m_Er"/>
   <method old="entryHashCode(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;)I" new="m_WQ"/>
   <method old="entryKey(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;)Ljava/lang/Object;" new="m_hp"/>
   <method old="entryNext(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;)Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;" new="m_Vq"/>
   <method old="entrySet()Ljava/util/Set;" new="entrySet"/>
   <method old="entryValue(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;)Ljava/lang/Object;" new="m_QP"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="get(Ljava/lang/Object;)Ljava/lang/Object;" new="get"/>
   <method old="getEntry(Ljava/lang/Object;)Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;" new="m_Up"/>
   <method old="hash(Ljava/lang/Object;)I" new="m_UP"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="hashEntry(Ljava/lang/Object;Ljava/lang/Object;)I" new="m_fq"/>
   <method old="hashIndex(II)I" new="m_HR"/>
   <method old="init()V" new="m_ZG"/>
   <method old="isEmpty()Z" new="isEmpty"/>
   <method old="isEqualKey(Ljava/lang/Object;Ljava/lang/Object;)Z" new="m_oQ"/>
   <method old="isEqualValue(Ljava/lang/Object;Ljava/lang/Object;)Z" new="m_Xq"/>
   <method old="keySet()Ljava/util/Set;" new="keySet"/>
   <method old="mapIterator()Lorg/jivesoftware/smack/util/collections/MapIterator;" new="m_Wa"/>
   <method old="purge()V" new="m_xQ"/>
   <method old="purge(Ljava/lang/ref/Reference;)V" new="m_HP"/>
   <method old="purgeBeforeRead()V" new="m_dQ"/>
   <method old="purgeBeforeWrite()V" new="m_cR"/>
   <method old="put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" new="put"/>
   <method old="putAll(Ljava/util/Map;)V" new="putAll"/>
   <method old="remove(Ljava/lang/Object;)Ljava/lang/Object;" new="remove"/>
   <method old="removeEntry(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;ILorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;)V" new="m_ZO"/>
   <method old="removeMapping(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;ILorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;)V" new="m_Jq"/>
   <method old="reuseEntry(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;IILjava/lang/Object;Ljava/lang/Object;)V" new="m_rp"/>
   <method old="size()I" new="size"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="updateEntry(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;Ljava/lang/Object;)V" new="m_KR"/>
   <method old="values()Ljava/util/Collection;" new="values"/>
   <method old="verify(Ljava/lang/String;I)V" new="m_Zr"/>
   <field old="DEFAULT_CAPACITY I" new="f_J"/>
   <field old="DEFAULT_LOAD_FACTOR F" new="f_H"/>
   <field old="DEFAULT_THRESHOLD I" new="f_M"/>
   <field old="GETKEY_INVALID Ljava/lang/String;" new="f_d"/>
   <field old="GETVALUE_INVALID Ljava/lang/String;" new="f_h"/>
   <field old="HARD I" new="HARD"/>
   <field old="MAXIMUM_CAPACITY I" new="f_g"/>
   <field old="NO_NEXT_ENTRY Ljava/lang/String;" new="f_f"/>
   <field old="NO_PREVIOUS_ENTRY Ljava/lang/String;" new="f_m"/>
   <field old="NULL Ljava/lang/Object;" new="f_b"/>
   <field old="REMOVE_INVALID Ljava/lang/String;" new="f_e"/>
   <field old="SETVALUE_INVALID Ljava/lang/String;" new="f_B"/>
   <field old="SOFT I" new="SOFT"/>
   <field old="WEAK I" new="WEAK"/>
   <field old="data [Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;" new="f_k"/>
   <field old="entrySet Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$EntrySet;" new="f_K"/>
   <field old="keySet Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$KeySet;" new="f_G"/>
   <field old="keyType I" new="f_b"/>
   <field old="loadFactor F" new="f_j"/>
   <field old="modCount I" new="f_I"/>
   <field old="purgeValues Z" new="f_d"/>
   <field old="queue Ljava/lang/ref/ReferenceQueue;" new="f_e"/>
   <field old="size I" new="f_F"/>
   <field old="threshold I" new="f_l"/>
   <field old="valueType I" new="f_m"/>
   <field old="values Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$Values;" new="f_D"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.AsymmetricCipherKeyPairGenerator" new="net.java.otr4j.bouncycastle.crypto.c_m">
   <method old="generateKeyPair()Lnet/java/otr4j/bouncycastle/crypto/AsymmetricCipherKeyPair;" new="m_wc"/>
   <method old="init(Lnet/java/otr4j/bouncycastle/crypto/KeyGenerationParameters;)V" new="m_kA"/>
  </class>
  <class old="org.jivesoftware.smack.util.collections.IterableMap" new="org.jivesoftware.smack.util.collections.c_E">
   <method old="mapIterator()Lorg/jivesoftware/smack/util/collections/MapIterator;" new="m_Wa"/>
  </class>
  <class old="com.xabber.android.data.account.SavedStatus" new="com.xabber.android.data.account.c_a">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="compareTo(Lcom/xabber/android/data/account/SavedStatus;)I" new="m_mJa"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getStatusMode()Lcom/xabber/android/data/account/StatusMode;" new="m_tfa"/>
   <method old="getStatusText()Ljava/lang/String;" new="m_tFa"/>
   <method old="hashCode()I" new="hashCode"/>
   <field old="statusMode Lcom/xabber/android/data/account/StatusMode;" new="f_e"/>
   <field old="statusText Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="com.google.zxing.integration.android.IntentIntegrator$1" new="wy.c_Qd">
   <method old="onClick(Landroid/content/DialogInterface;I)V" new="onClick"/>
   <field old="this$0 Lcom/google/zxing/integration/android/IntentIntegrator;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.AbstractConnectionListener" new="org.jivesoftware.smack.c_k">
   <method old="connectionClosed()V" new="m_r"/>
   <method old="connectionClosedOnError(Ljava/lang/Exception;)V" new="m_U"/>
   <method old="reconnectingIn(I)V" new="m_Z"/>
   <method old="reconnectionFailed(Ljava/lang/Exception;)V" new="m_S"/>
   <method old="reconnectionSuccessful()V" new="m_W"/>
  </class>
  <class old="com.google.zxing.integration.android.IntentIntegrator$2" new="wy.c_Rc">
   <method old="onClick(Landroid/content/DialogInterface;I)V" new="onClick"/>
   <field old="this$0 Lcom/google/zxing/integration/android/IntentIntegrator;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.Cache$Element" new="org.xbill.DNS.c_E">
   <method old="compareCredibility(I)I" new="m_H"/>
   <method old="expired()Z" new="m_h"/>
   <method old="getType()I" new="m_b"/>
  </class>
  <class old="org.jivesoftware.smackx.XHTMLText" new="org.jivesoftware.smackx.c_M">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="append(Ljava/lang/String;)V" new="m_Bq"/>
   <method old="appendBrTag()V" new="m_Op"/>
   <method old="appendCloseAnchorTag()V" new="m_ZQ"/>
   <method old="appendCloseBlockQuoteTag()V" new="m_xr"/>
   <method old="appendCloseCodeTag()V" new="m_vp"/>
   <method old="appendCloseEmTag()V" new="m_Fq"/>
   <method old="appendCloseHeaderTag(I)V" new="m_MP"/>
   <method old="appendCloseInlinedQuoteTag()V" new="m_Sq"/>
   <method old="appendCloseOrderedListTag()V" new="m_TO"/>
   <method old="appendCloseParagraphTag()V" new="m_HQ"/>
   <method old="appendCloseSpanTag()V" new="m_bp"/>
   <method old="appendCloseStrongTag()V" new="m_wq"/>
   <method old="appendCloseUnorderedListTag()V" new="m_bq"/>
   <method old="appendImageTag(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_uO"/>
   <method old="appendLineItemTag(Ljava/lang/String;)V" new="m_yP"/>
   <method old="appendOpenAnchorTag(Ljava/lang/String;Ljava/lang/String;)V" new="m_lr"/>
   <method old="appendOpenBlockQuoteTag(Ljava/lang/String;)V" new="m_NQ"/>
   <method old="appendOpenBodyTag(Ljava/lang/String;Ljava/lang/String;)V" new="m_Yr"/>
   <method old="appendOpenCiteTag()V" new="m_lq"/>
   <method old="appendOpenCodeTag()V" new="m_yq"/>
   <method old="appendOpenEmTag()V" new="m_fP"/>
   <method old="appendOpenHeaderTag(ILjava/lang/String;)V" new="m_zO"/>
   <method old="appendOpenInlinedQuoteTag(Ljava/lang/String;)V" new="m_cq"/>
   <method old="appendOpenOrderedListTag(Ljava/lang/String;)V" new="m_hQ"/>
   <method old="appendOpenParagraphTag(Ljava/lang/String;)V" new="m_wr"/>
   <method old="appendOpenSpanTag(Ljava/lang/String;)V" new="m_hP"/>
   <method old="appendOpenStrongTag()V" new="m_dp"/>
   <method old="appendOpenUnorderedListTag(Ljava/lang/String;)V" new="m_kq"/>
   <method old="closeBodyTag()Ljava/lang/String;" new="m_cp"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="text Ljava/lang/StringBuilder;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.Client" new="org.xbill.DNS.c_d">
   <method old="blockUntil(Ljava/nio/channels/SelectionKey;J)V" new="m_LF"/>
   <method old="cleanup()V" new="m_wD"/>
   <method old="verboseLog(Ljava/lang/String;[B)V" new="m_WD"/>
   <field old="endTime J" new="f_m"/>
   <field old="key Ljava/nio/channels/SelectionKey;" new="f_e"/>
  </class>
  <class old="com.xabber.android.classic.R$anim" new="com.xabber.android.classic.R$anim">
   <field old="chat_page_out I" new="chat_page_out"/>
   <field old="connection I" new="connection"/>
   <field old="shake I" new="shake"/>
   <field old="shake_interpolator I" new="shake_interpolator"/>
  </class>
  <class old="org.jivesoftware.smackx.provider.VCardProvider$VCardReader" new="org.jivesoftware.smackx.provider.c_A">
   <method old="appendText(Ljava/lang/StringBuilder;Lorg/w3c/dom/Node;)V" new="m_lk"/>
   <method old="getTagContents(Ljava/lang/String;)Ljava/lang/String;" new="m_lj"/>
   <method old="getTextContent(Lorg/w3c/dom/Node;)Ljava/lang/String;" new="m_lL"/>
   <method old="initializeFields()V" new="m_LK"/>
   <method old="isWorkHome(Ljava/lang/String;)Z" new="m_BJ"/>
   <method old="setupAddresses()V" new="m_Qj"/>
   <method old="setupEmails()V" new="m_SL"/>
   <method old="setupPhones()V" new="m_yk"/>
   <method old="setupSimpleFields()V" new="m_kk"/>
   <field old="document Lorg/w3c/dom/Document;" new="f_e"/>
   <field old="vCard Lorg/jivesoftware/smackx/packet/VCard;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.PrivateDataManager$PrivateDataIQProvider" new="org.jivesoftware.smackx.c_e">
   <method old="parseIQ(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/IQ;" new="m_g"/>
  </class>
  <class old="org.jivesoftware.smack.PacketWriter$1" new="org.jivesoftware.smack.c_F">
   <method old="run()V" new="run"/>
   <field old="this$0 Lorg/jivesoftware/smack/PacketWriter;" new="f_m"/>
  </class>
  <class old="com.jcraft.jzlib.Tree" new="wy.c_qA">
   <method old="bi_reverse(II)I" new="m_bOa"/>
   <method old="build_tree(Lcom/jcraft/jzlib/Deflate;)V" new="m_FMa"/>
   <method old="d_code(I)I" new="m_Lma"/>
   <method old="gen_bitlen(Lcom/jcraft/jzlib/Deflate;)V" new="m_ANa"/>
   <method old="gen_codes([SI[S)V" new="m_Qoa"/>
   <field old="BL_CODES I" new="f_h"/>
   <field old="Buf_size I" new="f_G"/>
   <field old="DIST_CODE_LEN I" new="f_l"/>
   <field old="D_CODES I" new="f_j"/>
   <field old="END_BLOCK I" new="f_D"/>
   <field old="HEAP_SIZE I" new="f_f"/>
   <field old="LENGTH_CODES I" new="f_A"/>
   <field old="LITERALS I" new="f_K"/>
   <field old="L_CODES I" new="f_J"/>
   <field old="MAX_BITS I" new="f_e"/>
   <field old="MAX_BL_BITS I" new="f_C"/>
   <field old="REPZ_11_138 I" new="f_F"/>
   <field old="REPZ_3_10 I" new="f_E"/>
   <field old="REP_3_6 I" new="f_c"/>
   <field old="_dist_code [B" new="f_a"/>
   <field old="_length_code [B" new="f_B"/>
   <field old="base_dist [I" new="f_b"/>
   <field old="base_length [I" new="f_H"/>
   <field old="bl_order [B" new="f_I"/>
   <field old="dyn_tree [S" new="f_m"/>
   <field old="extra_blbits [I" new="f_k"/>
   <field old="extra_dbits [I" new="f_M"/>
   <field old="extra_lbits [I" new="f_i"/>
   <field old="max_code I" new="f_g"/>
   <field old="stat_desc Lcom/jcraft/jzlib/StaticTree;" new="f_d"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.DestroyFailedException" new="org.apache.harmony.javax.security.auth.c_c">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <field old="serialVersionUID J" new="f_m"/>
  </class>
  <class old="org.apache.harmony.javax.security.sasl.SaslServerFactory" new="org.apache.harmony.javax.security.sasl.c_A">
   <method old="createSaslServer(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;)Lorg/apache/harmony/javax/security/sasl/SaslServer;" new="m_sB"/>
   <method old="getMechanismNames(Ljava/util/Map;)[Ljava/lang/String;" new="m_Dc"/>
  </class>
  <class old="org.xbill.DNS.Compression$1" new="org.xbill.DNS.c_aB">
  </class>
  <class old="com.xabber.android.classic.R$styleable" new="com.xabber.android.classic.R$styleable">
   <field old="ContactList [I" new="ContactList"/>
   <field old="ContactList_accountBackground I" new="ContactList_accountBackground"/>
   <field old="ContactList_expanderAccountColor I" new="ContactList_expanderAccountColor"/>
   <field old="ContactList_expanderBackground I" new="ContactList_expanderBackground"/>
   <field old="ContactList_expanderGroupColor I" new="ContactList_expanderGroupColor"/>
   <field old="ContactList_expanderIndicator I" new="ContactList_expanderIndicator"/>
   <field old="ContactList_textColorPrimaryNoSelected I" new="ContactList_textColorPrimaryNoSelected"/>
   <field old="ContactList_titleAccountBackground I" new="ContactList_titleAccountBackground"/>
   <field old="ContactList_titleMainBackground I" new="ContactList_titleMainBackground"/>
  </class>
  <class old="com.xabber.android.data.extension.capability.OnServerInfoReceivedListener" new="com.xabber.android.data.extension.capability.c_E">
   <method old="onServerInfoReceived(Lcom/xabber/android/data/connection/ConnectionItem;)V" new="m_zB"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.VCard$VCardWriter$1" new="org.jivesoftware.smackx.packet.c_G">
   <method old="addTagContent()V" new="m_D"/>
   <field old="this$1 Lorg/jivesoftware/smackx/packet/VCard$VCardWriter;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.VCard$VCardWriter$2" new="org.jivesoftware.smackx.packet.c_k">
   <method old="addTagContent()V" new="m_D"/>
   <field old="this$1 Lorg/jivesoftware/smackx/packet/VCard$VCardWriter;" new="f_e"/>
   <field old="val$email Ljava/lang/String;" new="f_m"/>
   <field old="val$type Ljava/lang/String;" new="f_b"/>
  </class>
  <class old="com.xabber.android.ui.adapter.ChatListAdapter" new="com.xabber.android.ui.adapter.c_L">
   <method old="getCount()I" new="getCount"/>
   <method old="getItem(I)Ljava/lang/Object;" new="getItem"/>
   <method old="getItemId(I)J" new="getItemId"/>
   <method old="getView(ILandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;" new="getView"/>
   <method old="onChange()V" new="m_cb"/>
   <field old="abstractChats Ljava/util/ArrayList;" new="f_m"/>
   <field old="activity Landroid/app/Activity;" new="f_b"/>
   <field old="avatarInflaterHelper Lcom/xabber/android/ui/helper/AbstractAvatarInflaterHelper;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.VCard$VCardWriter$3" new="org.jivesoftware.smackx.packet.c_f">
   <method old="addTagContent()V" new="m_D"/>
   <field old="this$1 Lorg/jivesoftware/smackx/packet/VCard$VCardWriter;" new="f_b"/>
   <field old="val$code Ljava/lang/String;" new="f_m"/>
   <field old="val$entry Ljava/util/Map$Entry;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.VCard$VCardWriter$4" new="org.jivesoftware.smackx.packet.c_j">
   <method old="addTagContent()V" new="m_D"/>
   <field old="this$1 Lorg/jivesoftware/smackx/packet/VCard$VCardWriter;" new="f_e"/>
   <field old="val$addr Ljava/util/Map;" new="f_b"/>
   <field old="val$code Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.MUCUser$Invite" new="org.jivesoftware.smackx.packet.c_Y">
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getReason()Ljava/lang/String;" new="m_zj"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setReason(Ljava/lang/String;)V" new="m_QJ"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="from Ljava/lang/String;" new="f_b"/>
   <field old="reason Ljava/lang/String;" new="f_e"/>
   <field old="to Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.VCard$VCardWriter$5" new="org.jivesoftware.smackx.packet.c_J">
   <method old="addTagContent()V" new="m_D"/>
   <field old="this$1 Lorg/jivesoftware/smackx/packet/VCard$VCardWriter;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.VCard$VCardWriter$6" new="org.jivesoftware.smackx.packet.c_M">
   <method old="addTagContent()V" new="m_D"/>
   <field old="this$1 Lorg/jivesoftware/smackx/packet/VCard$VCardWriter;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.VCard$VCardWriter$7" new="org.jivesoftware.smackx.packet.c_m">
   <method old="addTagContent()V" new="m_D"/>
   <field old="this$1 Lorg/jivesoftware/smackx/packet/VCard$VCardWriter;" new="f_e"/>
   <field old="val$tagText Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.roster.OnStatusChangeListener" new="com.xabber.android.data.roster.c_M">
   <method old="onStatusChanged(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/xabber/android/data/account/StatusMode;Ljava/lang/String;)V" new="m_UA"/>
   <method old="onStatusChanged(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_Ac"/>
  </class>
  <class old="com.xabber.android.data.connection.DNSManager" new="com.xabber.android.data.connection.c_c">
   <method old="fetchAddresses(Ljava/lang/String;)[Ljava/net/InetAddress;" new="m_Bka"/>
   <method old="fetchRecords(Ljava/lang/String;)[Lorg/xbill/DNS/Record;" new="m_NKa"/>
   <method old="getCurrentTarget(Ljava/lang/String;)Lcom/xabber/android/data/connection/Target;" new="m_wka"/>
   <method old="getInstance()Lcom/xabber/android/data/connection/DNSManager;" new="m_Xr"/>
   <method old="getNextAddress(Ljava/lang/String;)Ljava/net/InetAddress;" new="m_gka"/>
   <method old="getNextTarget(Ljava/lang/String;)Lcom/xabber/android/data/connection/Target;" new="m_jka"/>
   <method old="getRecords(Ljava/lang/String;)[Lorg/xbill/DNS/Record;" new="m_FLa"/>
   <method old="onAddressesReceived(Ljava/lang/String;[Ljava/net/InetAddress;)V" new="m_nka"/>
   <method old="onRecordsReceived(Ljava/lang/String;[Lorg/xbill/DNS/Record;)V" new="m_Nla"/>
   <method old="requestResolverUpdate()V" new="m_yka"/>
   <method old="updateDNSServer()V" new="m_Gja"/>
   <field old="hosts Ljava/util/Map;" new="f_e"/>
   <field old="instance Lcom/xabber/android/data/connection/DNSManager;" new="f_d"/>
   <field old="resolverUpdateLock Ljava/lang/Object;" new="f_B"/>
   <field old="resolverUpdateRequested Z" new="f_b"/>
   <field old="srvs Ljava/util/Map;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.Compression$Entry" new="org.xbill.DNS.c_PA">
   <field old="name Lorg/xbill/DNS/Name;" new="f_m"/>
   <field old="next Lorg/xbill/DNS/Compression$Entry;" new="f_e"/>
   <field old="pos I" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smack.proxy.DirectSocketFactory" new="org.jivesoftware.smack.proxy.c_M">
   <method old="createSocket(Ljava/lang/String;I)Ljava/net/Socket;" new="createSocket"/>
   <method old="createSocket(Ljava/lang/String;ILjava/net/InetAddress;I)Ljava/net/Socket;" new="createSocket"/>
   <method old="createSocket(Ljava/net/InetAddress;I)Ljava/net/Socket;" new="createSocket"/>
   <method old="createSocket(Ljava/net/InetAddress;ILjava/net/InetAddress;I)Ljava/net/Socket;" new="createSocket"/>
  </class>
  <class old="org.jivesoftware.smack.util.Cache$CacheObject" new="org.jivesoftware.smack.util.c_c">
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="hashCode()I" new="hashCode"/>
   <field old="ageListNode Lorg/jivesoftware/smack/util/Cache$LinkedListNode;" new="f_m"/>
   <field old="lastAccessedListNode Lorg/jivesoftware/smack/util/Cache$LinkedListNode;" new="f_d"/>
   <field old="object Ljava/lang/Object;" new="f_e"/>
   <field old="readCount I" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smack.packet.RosterPacket$Item" new="org.jivesoftware.smack.packet.RosterPacket$Item">
   <method old="addGroupName(Ljava/lang/String;)V" new="m_xT"/>
   <method old="getGroupNames()Ljava/util/Set;" new="m_Qp"/>
   <method old="getItemStatus()Lorg/jivesoftware/smack/packet/RosterPacket$ItemStatus;" new="m_RS"/>
   <method old="getItemType()Lorg/jivesoftware/smack/packet/RosterPacket$ItemType;" new="m_iu"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getUser()Ljava/lang/String;" new="m_TA"/>
   <method old="removeGroupName(Ljava/lang/String;)V" new="m_aU"/>
   <method old="setItemStatus(Lorg/jivesoftware/smack/packet/RosterPacket$ItemStatus;)V" new="m_hs"/>
   <method old="setItemType(Lorg/jivesoftware/smack/packet/RosterPacket$ItemType;)V" new="m_HS"/>
   <method old="setName(Ljava/lang/String;)V" new="m_Xl"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="groupNames Ljava/util/Set;" new="f_B"/>
   <field old="itemStatus Lorg/jivesoftware/smack/packet/RosterPacket$ItemStatus;" new="f_e"/>
   <field old="itemType Lorg/jivesoftware/smack/packet/RosterPacket$ItemType;" new="f_m"/>
   <field old="name Ljava/lang/String;" new="f_b"/>
   <field old="user Ljava/lang/String;" new="f_d"/>
  </class>
  <class old="com.xabber.android.data.extension.archive.ArchivePreference" new="com.xabber.android.data.extension.archive.c_K">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getOtrMode()Lcom/xabber/xmpp/archive/OtrMode;" new="m_AGa"/>
   <method old="getSaveMode()Lcom/xabber/xmpp/archive/SaveMode;" new="m_cHa"/>
   <field old="otrMode Lcom/xabber/xmpp/archive/OtrMode;" new="f_e"/>
   <field old="saveMode Lcom/xabber/xmpp/archive/SaveMode;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.intent.EntityIntentBuilder" new="wy.c_nb">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="addSegment(Ljava/lang/String;)Lcom/xabber/android/data/intent/SegmentIntentBuilder;" new="m_eia"/>
   <method old="build()Landroid/content/Intent;" new="m_oIa"/>
   <method old="getAccount(Landroid/content/Intent;)Ljava/lang/String;" new="m_lCa"/>
   <method old="getSegment(Landroid/content/Intent;I)Ljava/lang/String;" new="m_Qia"/>
   <method old="getSegmentCount()I" new="m_EGa"/>
   <method old="getSegments(Landroid/content/Intent;)Ljava/util/List;" new="m_Eha"/>
   <method old="getUser(Landroid/content/Intent;)Ljava/lang/String;" new="m_NCa"/>
   <method old="preBuild()V" new="m_KHa"/>
   <method old="setAccount(Ljava/lang/String;)Lcom/xabber/android/data/intent/BaseAccountIntentBuilder;" new="m_jIa"/>
   <method old="setUser(Ljava/lang/String;)Lcom/xabber/android/data/intent/EntityIntentBuilder;" new="m_WGa"/>
   <field old="user Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.util.collections.AbstractHashedMap$HashMapIterator" new="org.jivesoftware.smack.util.collections.c_o">
   <method old="currentEntry()Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;" new="m_yQ"/>
   <method old="getKey()Ljava/lang/Object;" new="m_xa"/>
   <method old="getValue()Ljava/lang/Object;" new="m_Ra"/>
   <method old="hasNext()Z" new="hasNext"/>
   <method old="next()Ljava/lang/Object;" new="next"/>
   <method old="nextEntry()Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;" new="m_Kq"/>
   <method old="remove()V" new="remove"/>
   <method old="setValue(Ljava/lang/Object;)Ljava/lang/Object;" new="m_Xa"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="expectedModCount I" new="f_d"/>
   <field old="hashIndex I" new="f_e"/>
   <field old="last Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;" new="f_b"/>
   <field old="next Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;" new="f_B"/>
   <field old="parent Lorg/jivesoftware/smack/util/collections/AbstractHashedMap;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.Application$3$1" new="com.xabber.android.data.c_w">
   <method old="run()V" new="run"/>
   <field old="this$1 Lcom/xabber/android/data/Application$3;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.adapter.GroupConfiguration" new="com.xabber.android.ui.adapter.c_X">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="addAbstractContact(Lcom/xabber/android/data/roster/AbstractContact;)V" new="m_lda"/>
   <method old="compareTo(Lcom/xabber/android/data/entity/BaseEntity;)I" new="m_bCa"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="equals(Ljava/lang/String;Ljava/lang/String;)Z" new="m_Bba"/>
   <method old="getAbstractContacts()Ljava/util/Collection;" new="m_mAa"/>
   <method old="getAccount()Ljava/lang/String;" new="m_FC"/>
   <method old="getOnline()I" new="m_Eca"/>
   <method old="getShowOfflineMode()Lcom/xabber/android/data/roster/ShowOfflineMode;" new="m_FCa"/>
   <method old="getTotal()I" new="m_Dba"/>
   <method old="getUser()Ljava/lang/String;" new="m_TA"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="increment(Z)V" new="m_dca"/>
   <method old="isEmpty()Z" new="m_Oaa"/>
   <method old="isExpanded()Z" new="m_Nba"/>
   <method old="setNotEmpty()V" new="m_aCa"/>
   <method old="sortAbstractContacts(Ljava/util/Comparator;)V" new="m_bAa"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="abstractContacts Ljava/util/ArrayList;" new="f_m"/>
   <field old="account Ljava/lang/String;" new="f_m"/>
   <field old="empty Z" new="f_e"/>
   <field old="expanded Z" new="f_b"/>
   <field old="online I" new="f_d"/>
   <field old="showOfflineMode Lcom/xabber/android/data/roster/ShowOfflineMode;" new="f_B"/>
   <field old="total I" new="f_j"/>
   <field old="user Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.CipherParameters" new="net.java.otr4j.bouncycastle.crypto.c_H">
  </class>
  <class old="org.xbill.DNS.APLRecord$1" new="org.xbill.DNS.c_UA">
  </class>
  <class old="org.xbill.DNS.Header" new="org.xbill.DNS.c_Ua">
   <method old="checkFlag(I)V" new="m_aI"/>
   <method old="clone()Ljava/lang/Object;" new="clone"/>
   <method old="decCount(I)V" new="m_sh"/>
   <method old="getCount(I)I" new="m_ii"/>
   <method old="getFlag(I)Z" new="m_KG"/>
   <method old="getFlags()[Z" new="m_JG"/>
   <method old="getID()I" new="m_rH"/>
   <method old="getOpcode()I" new="m_wG"/>
   <method old="getRcode()I" new="m_xD"/>
   <method old="incCount(I)V" new="m_OI"/>
   <method old="init()V" new="m_ZG"/>
   <method old="printFlags()Ljava/lang/String;" new="m_ai"/>
   <method old="setCount(II)V" new="m_xh"/>
   <method old="setFlag(I)V" new="m_ah"/>
   <method old="setID(I)V" new="m_Mh"/>
   <method old="setOpcode(I)V" new="m_og"/>
   <method old="setRcode(I)V" new="m_wh"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toStringWithRcode(I)Ljava/lang/String;" new="m_ri"/>
   <method old="toWire()[B" new="m_tF"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;)V" new="m_ne"/>
   <method old="unsetFlag(I)V" new="m_SI"/>
   <method old="validFlag(I)Z" new="m_gi"/>
   <field old="LENGTH I" new="f_b"/>
   <field old="counts [I" new="f_B"/>
   <field old="flags I" new="f_d"/>
   <field old="id I" new="f_e"/>
   <field old="random Ljava/util/Random;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.Generator" new="org.xbill.DNS.c_Va">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="expand()[Lorg/xbill/DNS/Record;" new="m_oh"/>
   <method old="nextRecord()Lorg/xbill/DNS/Record;" new="m_Zh"/>
   <method old="substitute(Ljava/lang/String;J)Ljava/lang/String;" new="m_xi"/>
   <method old="supportedType(I)Z" new="m_ei"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="current J" new="f_l"/>
   <field old="dclass I" new="f_I"/>
   <field old="end J" new="f_d"/>
   <field old="namePattern Ljava/lang/String;" new="f_B"/>
   <field old="origin Lorg/xbill/DNS/Name;" new="f_k"/>
   <field old="rdataPattern Ljava/lang/String;" new="f_b"/>
   <field old="start J" new="f_m"/>
   <field old="step J" new="f_e"/>
   <field old="ttl J" new="f_f"/>
   <field old="type I" new="f_j"/>
  </class>
  <class old="com.xabber.android.data.roster.OnRosterReceivedListener" new="com.xabber.android.data.roster.c_m">
   <method old="onRosterReceived(Lcom/xabber/android/data/account/AccountItem;)V" new="m_gC"/>
  </class>
  <class old="org.xbill.DNS.APLRecord$Element" new="org.xbill.DNS.c_NC">
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="address Ljava/lang/Object;" new="f_d"/>
   <field old="family I" new="f_m"/>
   <field old="negative Z" new="f_b"/>
   <field old="prefixLength I" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smack.sasl.SASLFacebookConnect" new="wy.c_Ja">
   <method old="MD5(Ljava/lang/String;)Ljava/lang/String;" new="m_rS"/>
   <method old="authenticate()V" new="m_ls"/>
   <method old="authenticate(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_Pd"/>
   <method old="authenticate(Ljava/lang/String;Ljava/lang/String;Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;)V" new="m_eC"/>
   <method old="challengeReceived(Ljava/lang/String;)V" new="m_vt"/>
   <method old="convertToHex([B)Ljava/lang/String;" new="m_cT"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getQueryMap(Ljava/lang/String;)Ljava/util/Map;" new="m_uS"/>
   <method old="getSASLAuthentication()Lorg/jivesoftware/smack/SASLAuthentication;" new="m_Gt"/>
   <method old="handle([Lorg/apache/harmony/javax/security/auth/callback/Callback;)V" new="m_Jb"/>
   <field old="apiKey Ljava/lang/String;" new="f_j"/>
   <field old="authenticationId Ljava/lang/String;" new="f_e"/>
   <field old="hostname Ljava/lang/String;" new="f_B"/>
   <field old="password Ljava/lang/String;" new="f_m"/>
   <field old="sc Lorg/apache/harmony/javax/security/sasl/SaslClient;" new="f_b"/>
   <field old="sessionKey Ljava/lang/String;" new="f_b"/>
   <field old="sessionSecret Ljava/lang/String;" new="f_d"/>
  </class>
  <class old="com.xabber.android.data.account.AccountManager" new="com.xabber.android.data.account.c_s">
   <method old="access$000(Lcom/xabber/android/data/account/AccountManager;Ljava/util/Collection;Ljava/util/Collection;)V" new="m_wla"/>
   <method old="addAccount(Lcom/xabber/android/data/account/AccountItem;)V" new="m_RDa"/>
   <method old="addAccount(Lcom/xabber/android/data/account/AccountProtocol;ZLjava/lang/String;ILjava/lang/String;Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;IILcom/xabber/android/data/account/StatusMode;Ljava/lang/String;ZZLcom/xabber/android/data/connection/TLSMode;ZLcom/xabber/android/data/connection/ProxyType;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ZLjava/security/KeyPair;Ljava/util/Date;Lcom/xabber/android/data/account/ArchiveMode;)Lcom/xabber/android/data/account/AccountItem;" new="m_mka"/>
   <method old="addAccount(Ljava/lang/String;Ljava/lang/String;Lcom/xabber/android/data/account/AccountType;ZZZ)Ljava/lang/String;" new="m_BJa"/>
   <method old="addAuthenticationError(Ljava/lang/String;)V" new="m_hJa"/>
   <method old="addPasswordRequest(Ljava/lang/String;)V" new="m_aja"/>
   <method old="addSavedStatus(Lcom/xabber/android/data/account/StatusMode;Ljava/lang/String;)V" new="m_Ika"/>
   <method old="clearSavedStatuses()V" new="m_vJa"/>
   <method old="getAccount(Ljava/lang/String;)Lcom/xabber/android/data/account/AccountItem;" new="m_xJa"/>
   <method old="getAccountTypes()Ljava/util/List;" new="m_rja"/>
   <method old="getAccounts()Ljava/util/Collection;" new="m_nLa"/>
   <method old="getAllAccounts()Ljava/util/Collection;" new="m_Rja"/>
   <method old="getArchiveMode(Ljava/lang/String;)Lcom/xabber/android/data/account/ArchiveMode;" new="m_Gla"/>
   <method old="getColorCount()I" new="m_cja"/>
   <method old="getColorLevel(Ljava/lang/String;)I" new="m_sJa"/>
   <method old="getCommonState()Lcom/xabber/android/data/account/CommonState;" new="m_rJa"/>
   <method old="getInstance()Lcom/xabber/android/data/account/AccountManager;" new="m_Xr"/>
   <method old="getNextColorIndex()I" new="m_ula"/>
   <method old="getNickName(Ljava/lang/String;)Ljava/lang/String;" new="m_dKa"/>
   <method old="getSavedStatuses()Ljava/util/Collection;" new="m_ola"/>
   <method old="getSelectedAccount()Ljava/lang/String;" new="m_wJa"/>
   <method old="getVerboseName(Ljava/lang/String;)Ljava/lang/String;" new="m_dJa"/>
   <method old="goAway()V" new="m_qLa"/>
   <method old="goXa()V" new="m_oJa"/>
   <method old="hasSameBareAddress(Ljava/lang/String;)Z" new="m_GKa"/>
   <method old="hasSameProtocol(Ljava/lang/String;)Z" new="m_KKa"/>
   <method old="isAway()Z" new="m_xt"/>
   <method old="isXa()Z" new="m_PJa"/>
   <method old="onAccountChanged(Ljava/lang/String;)V" new="m_aJa"/>
   <method old="onAccountDisabled(Lcom/xabber/android/data/account/AccountItem;)V" new="m_Qd"/>
   <method old="onAccountEnabled(Lcom/xabber/android/data/account/AccountItem;)V" new="m_BC"/>
   <method old="onAccountOffline(Lcom/xabber/android/data/account/AccountItem;)V" new="m_qA"/>
   <method old="onAccountOnline(Lcom/xabber/android/data/account/AccountItem;)V" new="m_kC"/>
   <method old="onAccountsChanged(Ljava/util/Collection;)V" new="m_vB"/>
   <method old="onLoad()V" new="m_pA"/>
   <method old="onLoaded(Ljava/util/Collection;Ljava/util/Collection;)V" new="m_zda"/>
   <method old="onWipe()V" new="m_KC"/>
   <method old="removeAccount(Ljava/lang/String;)V" new="m_YEa"/>
   <method old="removeAccountWithoutCallback(Ljava/lang/String;)V" new="m_Cla"/>
   <method old="removeAuthorizationError(Ljava/lang/String;)V" new="m_yja"/>
   <method old="removePasswordRequest(Ljava/lang/String;)V" new="m_HKa"/>
   <method old="removeSavedStatus(Lcom/xabber/android/data/account/SavedStatus;)V" new="m_bLa"/>
   <method old="requestToWriteAccount(Lcom/xabber/android/data/account/AccountItem;)V" new="m_OJa"/>
   <method old="resendPresence()V" new="m_aka"/>
   <method old="setArchiveMode(Ljava/lang/String;Lcom/xabber/android/data/account/ArchiveMode;)V" new="m_nja"/>
   <method old="setKeyPair(Ljava/lang/String;Ljava/security/KeyPair;)V" new="m_Eja"/>
   <method old="setLastSync(Ljava/lang/String;Ljava/util/Date;)V" new="m_Lja"/>
   <method old="setPassword(Ljava/lang/String;ZLjava/lang/String;)V" new="m_eJa"/>
   <method old="setStatus(Lcom/xabber/android/data/account/AccountItem;Lcom/xabber/android/data/account/StatusMode;Ljava/lang/String;)V" new="m_eja"/>
   <method old="setStatus(Lcom/xabber/android/data/account/StatusMode;Ljava/lang/String;)V" new="m_jca"/>
   <method old="setStatus(Ljava/lang/String;Lcom/xabber/android/data/account/StatusMode;Ljava/lang/String;)V" new="m_iKa"/>
   <method old="setSyncable(Ljava/lang/String;Z)V" new="m_uJa"/>
   <method old="updateAccount(Ljava/lang/String;ZLjava/lang/String;ILjava/lang/String;Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;IZZLcom/xabber/android/data/connection/TLSMode;ZLcom/xabber/android/data/connection/ProxyType;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ZLcom/xabber/android/data/account/ArchiveMode;)V" new="m_jla"/>
   <method old="wakeUp()V" new="m_fLa"/>
   <field old="accountItems Ljava/util/Map;" new="f_l"/>
   <field old="accountTypes Ljava/util/List;" new="f_B"/>
   <field old="application Lcom/xabber/android/data/Application;" new="f_e"/>
   <field old="authorizationErrorProvider Lcom/xabber/android/data/notification/BaseAccountNotificationProvider;" new="f_k"/>
   <field old="away Z" new="f_j"/>
   <field old="colors I" new="f_I"/>
   <field old="enabledAccounts Ljava/util/Collection;" new="f_m"/>
   <field old="instance Lcom/xabber/android/data/account/AccountManager;" new="f_f"/>
   <field old="passwordRequestProvider Lcom/xabber/android/data/notification/BaseAccountNotificationProvider;" new="f_b"/>
   <field old="savedStatuses Ljava/util/Collection;" new="f_d"/>
   <field old="xa Z" new="f_K"/>
  </class>
  <class old="com.xabber.xmpp.archive.Changed" new="com.xabber.xmpp.archive.c_W">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getStart()Ljava/util/Date;" new="m_vC"/>
   <method old="getStartString()Ljava/lang/String;" new="m_lC"/>
   <method old="getVersion()Ljava/lang/Integer;" new="m_Sd"/>
   <method old="getWith()Ljava/lang/String;" new="m_ib"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="setStart(Ljava/util/Date;)V" new="m_SBa"/>
   <method old="setStartString(Ljava/lang/String;)V" new="m_tca"/>
   <method old="setVersion(Ljava/lang/Integer;)V" new="m_JCa"/>
   <method old="setWith(Ljava/lang/String;)V" new="m_mda"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_e"/>
   <field old="START_ATTRIBUTE Ljava/lang/String;" new="f_d"/>
   <field old="VERSION_ATTRIBUTE Ljava/lang/String;" new="f_m"/>
   <field old="WITH_ATTRIBUTE Ljava/lang/String;" new="f_j"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.VCard$VCardWriter" new="org.jivesoftware.smackx.packet.c_K">
   <method old="access$100(Lorg/jivesoftware/smackx/packet/VCard$VCardWriter;)V" new="m_Jk"/>
   <method old="access$1000(Lorg/jivesoftware/smackx/packet/VCard$VCardWriter;Ljava/lang/String;Ljava/lang/String;)V" new="m_Uj"/>
   <method old="access$1900(Lorg/jivesoftware/smackx/packet/VCard$VCardWriter;)Ljava/lang/StringBuilder;" new="m_Kk"/>
   <method old="access$900(Lorg/jivesoftware/smackx/packet/VCard$VCardWriter;Ljava/lang/Object;)V" new="m_qk"/>
   <method old="appendAddress(Ljava/util/Map;Ljava/lang/String;)V" new="m_oJ"/>
   <method old="appendEmail(Ljava/lang/String;Ljava/lang/String;)V" new="m_iK"/>
   <method old="appendEmptyTag(Ljava/lang/Object;)V" new="m_Il"/>
   <method old="appendGenericFields()V" new="m_JL"/>
   <method old="appendN()V" new="m_RL"/>
   <method old="appendOrganization()V" new="m_eK"/>
   <method old="appendPhones(Ljava/util/Map;Ljava/lang/String;)V" new="m_dK"/>
   <method old="appendTag(Ljava/lang/String;Ljava/lang/String;)V" new="m_LJ"/>
   <method old="appendTag(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLorg/jivesoftware/smackx/packet/VCard$ContentBuilder;)V" new="m_rJ"/>
   <method old="appendTag(Ljava/lang/String;ZLorg/jivesoftware/smackx/packet/VCard$ContentBuilder;)V" new="m_VL"/>
   <method old="buildActualContent()V" new="m_Ij"/>
   <method old="write()V" new="m_cJ"/>
   <field old="sb Ljava/lang/StringBuilder;" new="f_e"/>
   <field old="this$0 Lorg/jivesoftware/smackx/packet/VCard;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.DNSInput" new="org.xbill.DNS.c_RA">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="clearActive()V" new="m_Zg"/>
   <method old="current()I" new="m_eG"/>
   <method old="jump(I)V" new="m_SH"/>
   <method old="readByteArray()[B" new="m_Ng"/>
   <method old="readByteArray(I)[B" new="m_Dj"/>
   <method old="readByteArray([BII)V" new="m_Ni"/>
   <method old="readCountedString()[B" new="m_Pi"/>
   <method old="readU16()I" new="m_jI"/>
   <method old="readU32()J" new="m_ih"/>
   <method old="readU8()I" new="m_Aj"/>
   <method old="remaining()I" new="m_sI"/>
   <method old="require(I)V" new="m_Vg"/>
   <method old="restore()V" new="m_WH"/>
   <method old="restoreActive(I)V" new="m_LI"/>
   <method old="save()V" new="m_mI"/>
   <method old="saveActive()I" new="m_Qh"/>
   <method old="setActive(I)V" new="m_Jh"/>
   <field old="array [B" new="f_e"/>
   <field old="end I" new="f_B"/>
   <field old="pos I" new="f_b"/>
   <field old="saved_end I" new="f_d"/>
   <field old="saved_pos I" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.Tokenizer" new="org.xbill.DNS.c_h">
   <method old="_getIdentifier(Ljava/lang/String;)Ljava/lang/String;" new="m_jf"/>
   <method old="checkUnbalancedParens()V" new="m_vF"/>
   <method old="close()V" new="m_la"/>
   <method old="exception(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;" new="m_zD"/>
   <method old="finalize()V" new="finalize"/>
   <method old="get()Lorg/xbill/DNS/Tokenizer$Token;" new="m_xd"/>
   <method old="get(ZZ)Lorg/xbill/DNS/Tokenizer$Token;" new="m_Mg"/>
   <method old="getAddress(I)Ljava/net/InetAddress;" new="m_xE"/>
   <method old="getBase32String(Lorg/xbill/DNS/utils/base32;)[B" new="m_VE"/>
   <method old="getBase64()[B" new="m_XF"/>
   <method old="getBase64(Z)[B" new="m_Pf"/>
   <method old="getChar()I" new="m_Ig"/>
   <method old="getEOL()V" new="m_Gf"/>
   <method old="getHex()[B" new="m_De"/>
   <method old="getHex(Z)[B" new="m_Tf"/>
   <method old="getHexString()[B" new="m_yD"/>
   <method old="getIdentifier()Ljava/lang/String;" new="m_Ff"/>
   <method old="getLong()J" new="m_pD"/>
   <method old="getName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_gg"/>
   <method old="getString()Ljava/lang/String;" new="m_VD"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getTTLLike()J" new="m_gD"/>
   <method old="getUInt16()I" new="m_Be"/>
   <method old="getUInt32()J" new="m_ve"/>
   <method old="getUInt8()I" new="m_Xe"/>
   <method old="remainingStrings()Ljava/lang/String;" new="m_nD"/>
   <method old="skipWhitespace()I" new="m_tf"/>
   <method old="unget()V" new="m_ZF"/>
   <method old="ungetChar(I)V" new="m_Sf"/>
   <field old="COMMENT I" new="f_B"/>
   <field old="EOF I" new="f_g"/>
   <field old="EOL I" new="f_f"/>
   <field old="IDENTIFIER I" new="f_J"/>
   <field old="QUOTED_STRING I" new="f_I"/>
   <field old="WHITESPACE I" new="f_d"/>
   <field old="current Lorg/xbill/DNS/Tokenizer$Token;" new="f_m"/>
   <field old="delim Ljava/lang/String;" new="f_k"/>
   <field old="delimiters Ljava/lang/String;" new="f_G"/>
   <field old="filename Ljava/lang/String;" new="f_e"/>
   <field old="is Ljava/io/PushbackInputStream;" new="f_M"/>
   <field old="line I" new="f_K"/>
   <field old="multiline I" new="f_D"/>
   <field old="quotes Ljava/lang/String;" new="f_b"/>
   <field old="quoting Z" new="f_l"/>
   <field old="sb Ljava/lang/StringBuffer;" new="f_H"/>
   <field old="ungottenToken Z" new="f_F"/>
   <field old="wantClose Z" new="f_j"/>
  </class>
  <class old="com.xabber.android.data.extension.cs.ChatStateManager" new="wy.c_bA">
   <method old="access$000(Lcom/xabber/android/data/extension/cs/ChatStateManager;)Lcom/xabber/android/data/entity/NestedNestedMaps;" new="m_yia"/>
   <method old="access$100(Lcom/xabber/android/data/extension/cs/ChatStateManager;)Lcom/xabber/android/data/entity/NestedNestedMaps;" new="m_Ria"/>
   <method old="access$200(Lcom/xabber/android/data/extension/cs/ChatStateManager;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_Iia"/>
   <method old="cancelPauseIntent(Ljava/lang/String;Ljava/lang/String;)V" new="m_Sia"/>
   <method old="getChatState(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smackx/ChatState;" new="m_kga"/>
   <method old="getInstance()Lcom/xabber/android/data/extension/cs/ChatStateManager;" new="m_Xr"/>
   <method old="isSupported(Lcom/xabber/android/data/message/AbstractChat;Z)Z" new="m_iIa"/>
   <method old="onClose()V" new="m_cc"/>
   <method old="onComposing(Ljava/lang/String;Ljava/lang/String;Ljava/lang/CharSequence;)V" new="m_pha"/>
   <method old="onDisconnect(Lcom/xabber/android/data/connection/ConnectionItem;)V" new="m_xB"/>
   <method old="onPacket(Lcom/xabber/android/data/connection/ConnectionItem;Ljava/lang/String;Lorg/jivesoftware/smack/packet/Packet;)V" new="m_tC"/>
   <method old="onPaused(Landroid/content/Intent;Ljava/lang/String;Ljava/lang/String;)V" new="m_LHa"/>
   <method old="removeCallback(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_fia"/>
   <method old="updateChatState(Ljava/lang/String;Ljava/lang/String;Lorg/jivesoftware/smackx/ChatState;)V" new="m_Hha"/>
   <method old="updateOutgoingMessage(Lcom/xabber/android/data/message/AbstractChat;Lorg/jivesoftware/smack/packet/Message;)V" new="m_uGa"/>
   <field old="PAUSE_TIMEOUT I" new="f_l"/>
   <field old="REMOVE_STATE_DELAY J" new="f_d"/>
   <field old="alarmManager Landroid/app/AlarmManager;" new="f_I"/>
   <field old="chatStates Lcom/xabber/android/data/entity/NestedNestedMaps;" new="f_m"/>
   <field old="handler Landroid/os/Handler;" new="f_b"/>
   <field old="instance Lcom/xabber/android/data/extension/cs/ChatStateManager;" new="f_e"/>
   <field old="pauseIntents Lcom/xabber/android/data/entity/NestedMap;" new="f_B"/>
   <field old="sent Lcom/xabber/android/data/entity/NestedMap;" new="f_f"/>
   <field old="stateCleaners Lcom/xabber/android/data/entity/NestedNestedMaps;" new="f_k"/>
   <field old="supports Lcom/xabber/android/data/entity/NestedNestedMaps;" new="f_j"/>
  </class>
  <class old="net.java.otr4j.io.messages.RevealSignatureMessage" new="net.java.otr4j.io.messages.RevealSignatureMessage">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="decrypt([B)[B" new="m_Cz"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="verify([B)Z" new="m_xc"/>
   <field old="MESSAGE_DATA I" new="MESSAGE_DATA"/>
   <field old="MESSAGE_DHKEY I" new="MESSAGE_DHKEY"/>
   <field old="MESSAGE_DH_COMMIT I" new="MESSAGE_DH_COMMIT"/>
   <field old="MESSAGE_ERROR I" new="MESSAGE_ERROR"/>
   <field old="MESSAGE_PLAINTEXT I" new="MESSAGE_PLAINTEXT"/>
   <field old="MESSAGE_QUERY I" new="MESSAGE_QUERY"/>
   <field old="MESSAGE_REVEALSIG I" new="MESSAGE_REVEALSIG"/>
   <field old="MESSAGE_SIGNATURE I" new="MESSAGE_SIGNATURE"/>
   <field old="messageType I" new="f_m"/>
   <field old="protocolVersion I" new="f_e"/>
   <field old="revealedKey [B" new="f_b"/>
   <field old="xEncrypted [B" new="f_m"/>
   <field old="xEncryptedMAC [B" new="f_e"/>
  </class>
  <class old="org.xbill.DNS.RTRecord" new="org.xbill.DNS.RTRecord">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getIntermediateHost()Lorg/xbill/DNS/Name;" new="m_EG"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getNameField()Lorg/xbill/DNS/Name;" new="m_ng"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getPreference()I" new="m_nG"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="getU16Field()I" new="m_DG"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="nameField Lorg/xbill/DNS/Name;" new="f_m"/>
   <field old="serialVersionUID J" new="f_m"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
   <field old="u16Field I" new="f_d"/>
  </class>
  <class old="org.jivesoftware.smack.packet.Registration" new="org.jivesoftware.smack.packet.Registration">
   <method old="addAttribute(Ljava/lang/String;Ljava/lang/String;)V" new="m_lu"/>
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getAttributes()Ljava/util/Map;" new="m_lS"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getField(Ljava/lang/String;)Ljava/lang/String;" new="m_Hj"/>
   <method old="getFieldNames()Ljava/util/List;" new="m_Ur"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getInstructions()Ljava/lang/String;" new="m_pj"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getRequiredFields()Ljava/util/List;" new="m_nQ"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="isRegistered()Z" new="m_aq"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setAttributes(Ljava/util/Map;)V" new="m_XT"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setInstructions(Ljava/lang/String;)V" new="m_Cq"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setPassword(Ljava/lang/String;)V" new="m_RK"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setRegistered(Z)V" new="m_Zu"/>
   <method old="setRemove(Z)V" new="m_WT"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="setUsername(Ljava/lang/String;)V" new="m_IS"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="attributes Ljava/util/Map;" new="f_B"/>
   <field old="instructions Ljava/lang/String;" new="f_e"/>
   <field old="registered Z" new="f_m"/>
   <field old="remove Z" new="f_b"/>
   <field old="requiredFields Ljava/util/List;" new="f_d"/>
  </class>
  <class old="com.xabber.android.ui.ReconnectionActivity" new="com.xabber.android.ui.ReconnectionActivity">
   <method old="createIntent(Landroid/content/Context;)Landroid/content/Intent;" new="m_yBa"/>
   <method old="onCreate(Landroid/os/Bundle;)V" new="onCreate"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.callback.NameCallback" new="wy.c_Sb">
   <method old="getDefaultName()Ljava/lang/String;" new="m_vu"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getPrompt()Ljava/lang/String;" new="m_DW"/>
   <method old="setDefaultName(Ljava/lang/String;)V" new="m_rs"/>
   <method old="setName(Ljava/lang/String;)V" new="m_Xl"/>
   <method old="setPrompt(Ljava/lang/String;)V" new="m_mW"/>
   <field old="defaultName Ljava/lang/String;" new="f_m"/>
   <field old="inputName Ljava/lang/String;" new="f_d"/>
   <field old="prompt Ljava/lang/String;" new="f_e"/>
   <field old="serialVersionUID J" new="f_b"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.login.AppConfigurationEntry$LoginModuleControlFlag" new="wy.c_qa">
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="OPTIONAL Lorg/apache/harmony/javax/security/auth/login/AppConfigurationEntry$LoginModuleControlFlag;" new="f_m"/>
   <field old="REQUIRED Lorg/apache/harmony/javax/security/auth/login/AppConfigurationEntry$LoginModuleControlFlag;" new="f_d"/>
   <field old="REQUISITE Lorg/apache/harmony/javax/security/auth/login/AppConfigurationEntry$LoginModuleControlFlag;" new="f_e"/>
   <field old="SUFFICIENT Lorg/apache/harmony/javax/security/auth/login/AppConfigurationEntry$LoginModuleControlFlag;" new="f_B"/>
   <field old="flag Ljava/lang/String;" new="f_b"/>
  </class>
  <class old="com.xabber.android.ui.ContactList$1" new="com.xabber.android.ui.c_m">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/ui/ContactList;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.ContactList$2" new="com.xabber.android.ui.c_B">
   <method old="onCancel(Landroid/content/DialogInterface;)V" new="onCancel"/>
   <field old="this$0 Lcom/xabber/android/ui/ContactList;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.connection.RequestHolder" new="com.xabber.android.data.connection.RequestHolder">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getListener()Lcom/xabber/android/data/connection/OnResponseListener;" new="m_hja"/>
   <method old="isExpired(J)Z" new="m_AJa"/>
   <field old="listener Lcom/xabber/android/data/connection/OnResponseListener;" new="f_e"/>
   <field old="timeout J" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.muc.RoomListenerMultiplexor$RoomMultiplexFilter" new="org.jivesoftware.smackx.muc.RoomListenerMultiplexor$RoomMultiplexFilter">
   <method old="accept(Lorg/jivesoftware/smack/packet/Packet;)Z" new="m_x"/>
   <method old="addRoom(Ljava/lang/String;)V" new="m_uj"/>
   <method old="removeRoom(Ljava/lang/String;)V" new="m_zK"/>
   <field old="roomAddressTable Ljava/util/Map;" new="f_m"/>
  </class>
  <class old="com.jcraft.jzlib.ZStreamException" new="wy.c_vc">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
  </class>
  <class old="org.jivesoftware.smackx.Gateway" new="org.jivesoftware.smackx.c_X">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="access$100(Lorg/jivesoftware/smackx/Gateway;)Ljava/lang/String;" new="m_sP"/>
   <method old="access$200(Lorg/jivesoftware/smackx/Gateway;)Lorg/jivesoftware/smack/Roster;" new="m_lQ"/>
   <method old="access$300(Lorg/jivesoftware/smackx/Gateway;)Lorg/jivesoftware/smack/Connection;" new="m_eQ"/>
   <method old="canRegister()Z" new="m_Uq"/>
   <method old="discoverInfo()V" new="m_jQ"/>
   <method old="getField(Ljava/lang/String;)Ljava/lang/String;" new="m_Hj"/>
   <method old="getFieldNames()Ljava/util/List;" new="m_Ur"/>
   <method old="getIdentity()Lorg/jivesoftware/smackx/packet/DiscoverInfo$Identity;" new="m_zP"/>
   <method old="getInstructions()Ljava/lang/String;" new="m_pj"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getPassword()Ljava/lang/String;" new="m_rj"/>
   <method old="getRegisterInfo()Lorg/jivesoftware/smack/packet/Registration;" new="m_Qr"/>
   <method old="getRequiredFields()Ljava/util/List;" new="m_nQ"/>
   <method old="getType()Ljava/lang/String;" new="m_b"/>
   <method old="getUsername()Ljava/lang/String;" new="m_tq"/>
   <method old="isRegistered()Z" new="m_aq"/>
   <method old="login()V" new="m_lB"/>
   <method old="login(Lorg/jivesoftware/smack/packet/Presence;)V" new="m_sq"/>
   <method old="logout()V" new="m_FA"/>
   <method old="refreshRegisterInfo()V" new="m_or"/>
   <method old="register(Ljava/lang/String;Ljava/lang/String;)V" new="m_gp"/>
   <method old="register(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V" new="m_sp"/>
   <method old="unregister()V" new="m_jp"/>
   <field old="connection Lorg/jivesoftware/smack/Connection;" new="f_b"/>
   <field old="entityJID Ljava/lang/String;" new="f_k"/>
   <field old="identity Lorg/jivesoftware/smackx/packet/DiscoverInfo$Identity;" new="f_m"/>
   <field old="info Lorg/jivesoftware/smackx/packet/DiscoverInfo;" new="f_e"/>
   <field old="registerInfo Lorg/jivesoftware/smack/packet/Registration;" new="f_d"/>
   <field old="roster Lorg/jivesoftware/smack/Roster;" new="f_j"/>
   <field old="sdManager Lorg/jivesoftware/smackx/ServiceDiscoveryManager;" new="f_B"/>
  </class>
  <class old="org.jivesoftware.smack.sasl.SASLMechanism$Failure" new="wy.c_P">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getCondition()Ljava/lang/String;" new="m_Iu"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="condition Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.DHCIDRecord" new="org.xbill.DNS.c_jA">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getData()[B" new="m_tD"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="data [B" new="f_m"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="serialVersionUID J" new="f_e"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.OnErrorListener" new="com.xabber.android.data.c_c">
   <method old="onError(I)V" new="m_MA"/>
  </class>
  <class old="com.xabber.android.ui.adapter.StatusEditorAdapter" new="com.xabber.android.ui.adapter.c_M">
   <method old="getCount()I" new="getCount"/>
   <method old="getItem(I)Ljava/lang/Object;" new="getItem"/>
   <method old="getItemId(I)J" new="getItemId"/>
   <method old="getView(ILandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;" new="getView"/>
   <method old="onChange()V" new="m_cb"/>
   <field old="activity Landroid/app/Activity;" new="f_e"/>
   <field old="statuses Ljava/util/ArrayList;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.socks5.Socks5Proxy$Socks5ServerProcess" new="org.jivesoftware.smackx.bytestreams.socks5.c_A">
   <method old="establishConnection(Ljava/net/Socket;)V" new="m_qn"/>
   <method old="run()V" new="run"/>
   <field old="this$0 Lorg/jivesoftware/smackx/bytestreams/socks5/Socks5Proxy;" new="f_m"/>
  </class>
  <class old="org.apache.harmony.javax.security.sasl.SaslClientFactory" new="org.apache.harmony.javax.security.sasl.c_H">
   <method old="createSaslClient([Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;)Lorg/apache/harmony/javax/security/sasl/SaslClient;" new="m_Ic"/>
   <method old="getMechanismNames(Ljava/util/Map;)[Ljava/lang/String;" new="m_Dc"/>
  </class>
  <class old="com.xabber.android.data.account.AccountTable" new="com.xabber.android.data.account.c_i">
   <method old="clear()V" new="m_EA"/>
   <method old="create(Landroid/database/sqlite/SQLiteDatabase;)V" new="m_AB"/>
   <method old="getArchiveMode(Landroid/database/Cursor;)Lcom/xabber/android/data/account/ArchiveMode;" new="m_pka"/>
   <method old="getColorIndex(Landroid/database/Cursor;)I" new="m_UKa"/>
   <method old="getHost(Landroid/database/Cursor;)Ljava/lang/String;" new="m_XKa"/>
   <method old="getId(Landroid/database/Cursor;)J" new="m_WFa"/>
   <method old="getInstance()Lcom/xabber/android/data/account/AccountTable;" new="m_Xr"/>
   <method old="getKeyPair(Landroid/database/Cursor;)Ljava/security/KeyPair;" new="m_BKa"/>
   <method old="getLastSync(Landroid/database/Cursor;)Ljava/util/Date;" new="m_mja"/>
   <method old="getListOrder()Ljava/lang/String;" new="m_YDa"/>
   <method old="getPassword(Landroid/database/Cursor;)Ljava/lang/String;" new="m_Dia"/>
   <method old="getPort(Landroid/database/Cursor;)I" new="m_Zka"/>
   <method old="getPriority(Landroid/database/Cursor;)I" new="m_kJa"/>
   <method old="getProjection()[Ljava/lang/String;" new="m_AFa"/>
   <method old="getProtocol(Landroid/database/Cursor;)Lcom/xabber/android/data/account/AccountProtocol;" new="m_DLa"/>
   <method old="getProxyHost(Landroid/database/Cursor;)Ljava/lang/String;" new="m_Gka"/>
   <method old="getProxyPassword(Landroid/database/Cursor;)Ljava/lang/String;" new="m_gla"/>
   <method old="getProxyPort(Landroid/database/Cursor;)I" new="m_mLa"/>
   <method old="getProxyType(Landroid/database/Cursor;)Lcom/xabber/android/data/connection/ProxyType;" new="m_nKa"/>
   <method old="getProxyUser(Landroid/database/Cursor;)Ljava/lang/String;" new="m_ska"/>
   <method old="getResource(Landroid/database/Cursor;)Ljava/lang/String;" new="m_uda"/>
   <method old="getServerName(Landroid/database/Cursor;)Ljava/lang/String;" new="m_Kja"/>
   <method old="getStatusMode(Landroid/database/Cursor;)Lcom/xabber/android/data/account/StatusMode;" new="m_YKa"/>
   <method old="getStatusText(Landroid/database/Cursor;)Ljava/lang/String;" new="m_qja"/>
   <method old="getTLSMode(Landroid/database/Cursor;)Lcom/xabber/android/data/connection/TLSMode;" new="m_Uka"/>
   <method old="getTableName()Ljava/lang/String;" new="m_dga"/>
   <method old="getUserName(Landroid/database/Cursor;)Ljava/lang/String;" new="m_sla"/>
   <method old="isCompression(Landroid/database/Cursor;)Z" new="m_ika"/>
   <method old="isCustom(Landroid/database/Cursor;)Z" new="m_zKa"/>
   <method old="isEnabled(Landroid/database/Cursor;)Z" new="m_tKa"/>
   <method old="isSaslEnabled(Landroid/database/Cursor;)Z" new="m_fka"/>
   <method old="isStorePassword(Landroid/database/Cursor;)Z" new="m_FKa"/>
   <method old="isSyncable(Landroid/database/Cursor;)Z" new="m_PKa"/>
   <method old="list()Landroid/database/Cursor;" new="m_wEa"/>
   <method old="migrate(Landroid/database/sqlite/SQLiteDatabase;I)V" new="m_Cd"/>
   <method old="remove(Ljava/lang/String;J)V" new="m_Dla"/>
   <method old="wipe()V" new="m_ZJa"/>
   <method old="write(Ljava/lang/Long;Lcom/xabber/android/data/account/AccountProtocol;ZLjava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;IILcom/xabber/android/data/account/StatusMode;Ljava/lang/String;ZZLcom/xabber/android/data/connection/TLSMode;ZLcom/xabber/android/data/connection/ProxyType;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ZLjava/security/KeyPair;Ljava/util/Date;Lcom/xabber/android/data/account/ArchiveMode;)J" new="m_Ula"/>
   <field old="NAME Ljava/lang/String;" new="f_d"/>
   <field old="PROJECTION [Ljava/lang/String;" new="f_e"/>
   <field old="databaseManager Lcom/xabber/android/data/DatabaseManager;" new="f_b"/>
   <field old="instance Lcom/xabber/android/data/account/AccountTable;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.dialog.ListenableDialogBuilder$1" new="wy.c_CC">
   <method old="onCancel(Landroid/content/DialogInterface;)V" new="onCancel"/>
   <field old="this$0 Lcom/xabber/android/ui/dialog/ListenableDialogBuilder;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.dialog.ListenableDialogBuilder$2" new="wy.c_PB">
   <method old="onClick(Landroid/content/DialogInterface;I)V" new="onClick"/>
   <field old="this$0 Lcom/xabber/android/ui/dialog/ListenableDialogBuilder;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.dialog.ListenableDialogBuilder$3" new="wy.c_Bc">
   <method old="onClick(Landroid/content/DialogInterface;I)V" new="onClick"/>
   <field old="this$0 Lcom/xabber/android/ui/dialog/ListenableDialogBuilder;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.ZoneTransferIn" new="org.xbill.DNS.c_B">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="closeConnection()V" new="m_Ue"/>
   <method old="doxfr()V" new="m_sD"/>
   <method old="fail(Ljava/lang/String;)V" new="m_uF"/>
   <method old="fallback()V" new="m_Rc"/>
   <method old="getAXFR()Ljava/util/List;" new="m_tB"/>
   <method old="getIXFR()Ljava/util/List;" new="m_YE"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getSOASerial(Lorg/xbill/DNS/Record;)J" new="m_kE"/>
   <method old="getType()I" new="m_b"/>
   <method old="isAXFR()Z" new="m_EB"/>
   <method old="isCurrent()Z" new="m_Nc"/>
   <method old="isIXFR()Z" new="m_KE"/>
   <method old="logxfr(Ljava/lang/String;)V" new="m_cA"/>
   <method old="newAXFR(Lorg/xbill/DNS/Name;Ljava/lang/String;ILorg/xbill/DNS/TSIG;)Lorg/xbill/DNS/ZoneTransferIn;" new="m_UC"/>
   <method old="newAXFR(Lorg/xbill/DNS/Name;Ljava/lang/String;Lorg/xbill/DNS/TSIG;)Lorg/xbill/DNS/ZoneTransferIn;" new="m_Td"/>
   <method old="newAXFR(Lorg/xbill/DNS/Name;Ljava/net/SocketAddress;Lorg/xbill/DNS/TSIG;)Lorg/xbill/DNS/ZoneTransferIn;" new="m_bg"/>
   <method old="newIXFR(Lorg/xbill/DNS/Name;JZLjava/lang/String;ILorg/xbill/DNS/TSIG;)Lorg/xbill/DNS/ZoneTransferIn;" new="m_QC"/>
   <method old="newIXFR(Lorg/xbill/DNS/Name;JZLjava/lang/String;Lorg/xbill/DNS/TSIG;)Lorg/xbill/DNS/ZoneTransferIn;" new="m_jd"/>
   <method old="newIXFR(Lorg/xbill/DNS/Name;JZLjava/net/SocketAddress;Lorg/xbill/DNS/TSIG;)Lorg/xbill/DNS/ZoneTransferIn;" new="m_Mc"/>
   <method old="openConnection()V" new="m_wC"/>
   <method old="parseMessage([B)Lorg/xbill/DNS/Message;" new="m_xf"/>
   <method old="parseRR(Lorg/xbill/DNS/Record;)V" new="m_Vf"/>
   <method old="run()Ljava/util/List;" new="m_sA"/>
   <method old="sendQuery()V" new="m_cD"/>
   <method old="setDClass(I)V" new="m_oc"/>
   <method old="setLocalAddress(Ljava/net/SocketAddress;)V" new="m_lg"/>
   <method old="setTimeout(I)V" new="m_M"/>
   <field old="AXFR I" new="f_b"/>
   <field old="END I" new="f_C"/>
   <field old="FIRSTDATA I" new="f_K"/>
   <field old="INITIALSOA I" new="f_A"/>
   <field old="IXFR_ADD I" new="f_H"/>
   <field old="IXFR_ADDSOA I" new="f_L"/>
   <field old="IXFR_DEL I" new="f_G"/>
   <field old="IXFR_DELSOA I" new="f_M"/>
   <field old="address Ljava/net/SocketAddress;" new="f_a"/>
   <field old="axfr Ljava/util/List;" new="f_k"/>
   <field old="client Lorg/xbill/DNS/TCPClient;" new="f_D"/>
   <field old="current_serial J" new="f_h"/>
   <field old="dclass I" new="f_F"/>
   <field old="end_serial J" new="f_J"/>
   <field old="initialsoa Lorg/xbill/DNS/Record;" new="f_l"/>
   <field old="ixfr Ljava/util/List;" new="f_m"/>
   <field old="ixfr_serial J" new="f_I"/>
   <field old="localAddress Ljava/net/SocketAddress;" new="f_i"/>
   <field old="qtype I" new="f_d"/>
   <field old="rtype I" new="f_e"/>
   <field old="state I" new="f_j"/>
   <field old="timeout J" new="f_c"/>
   <field old="tsig Lorg/xbill/DNS/TSIG;" new="f_B"/>
   <field old="verifier Lorg/xbill/DNS/TSIG$StreamVerifier;" new="f_E"/>
   <field old="want_fallback Z" new="f_f"/>
   <field old="zname Lorg/xbill/DNS/Name;" new="f_g"/>
  </class>
  <class old="com.xabber.android.data.account.AccountAuthorizationError" new="com.xabber.android.data.account.c_Aa">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getAccount()Ljava/lang/String;" new="m_FC"/>
   <method old="getIntent()Landroid/content/Intent;" new="m_db"/>
   <method old="getText()Ljava/lang/String;" new="m_ZA"/>
   <method old="getTitle()Ljava/lang/String;" new="m_zb"/>
   <method old="hashCode()I" new="hashCode"/>
   <field old="account Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.archive.UseMode" new="com.xabber.xmpp.archive.UseMode">
   <method old="fromString(Ljava/lang/String;)Lcom/xabber/xmpp/archive/UseMode;" new="m_tc"/>
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/xmpp/archive/UseMode;" new="valueOf"/>
   <method old="values()[Lcom/xabber/xmpp/archive/UseMode;" new="values"/>
   <field old="$VALUES [Lcom/xabber/xmpp/archive/UseMode;" new="f_e"/>
   <field old="concede Lcom/xabber/xmpp/archive/UseMode;" new="f_d"/>
   <field old="forbid Lcom/xabber/xmpp/archive/UseMode;" new="f_b"/>
   <field old="prefer Lcom/xabber/xmpp/archive/UseMode;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.MUCAdmin$Item" new="org.jivesoftware.smackx.packet.c_V">
   <method old="getActor()Ljava/lang/String;" new="m_uJ"/>
   <method old="getAffiliation()Ljava/lang/String;" new="m_Ck"/>
   <method old="getJid()Ljava/lang/String;" new="m_tL"/>
   <method old="getNick()Ljava/lang/String;" new="m_Ql"/>
   <method old="getReason()Ljava/lang/String;" new="m_zj"/>
   <method old="getRole()Ljava/lang/String;" new="m_ul"/>
   <method old="setActor(Ljava/lang/String;)V" new="m_sj"/>
   <method old="setJid(Ljava/lang/String;)V" new="m_AJ"/>
   <method old="setNick(Ljava/lang/String;)V" new="m_Pj"/>
   <method old="setReason(Ljava/lang/String;)V" new="m_QJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="actor Ljava/lang/String;" new="f_b"/>
   <field old="affiliation Ljava/lang/String;" new="f_d"/>
   <field old="jid Ljava/lang/String;" new="f_e"/>
   <field old="nick Ljava/lang/String;" new="f_B"/>
   <field old="reason Ljava/lang/String;" new="f_m"/>
   <field old="role Ljava/lang/String;" new="f_j"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.login.CredentialExpiredException" new="wy.c_za">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <field old="serialVersionUID J" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.Zone" new="org.xbill.DNS.c_J">
   <method old="AXFR()Ljava/util/Iterator;" new="m_NF"/>
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="access$000(Lorg/xbill/DNS/Zone;)Ljava/util/Map;" new="m_He"/>
   <method old="access$100(Lorg/xbill/DNS/Zone;)Ljava/lang/Object;" new="m_mF"/>
   <method old="access$200(Lorg/xbill/DNS/Zone;Ljava/lang/Object;)[Lorg/xbill/DNS/RRset;" new="m_nE"/>
   <method old="access$300(Lorg/xbill/DNS/Zone;Ljava/lang/Object;I)Lorg/xbill/DNS/RRset;" new="m_eE"/>
   <method old="access$400(Lorg/xbill/DNS/Zone;)Lorg/xbill/DNS/Name;" new="m_bF"/>
   <method old="addRRset(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/RRset;)V" new="m_AF"/>
   <method old="addRRset(Lorg/xbill/DNS/RRset;)V" new="m_Ke"/>
   <method old="addRecord(Lorg/xbill/DNS/Record;)V" new="m_ZE"/>
   <method old="allRRsets(Ljava/lang/Object;)[Lorg/xbill/DNS/RRset;" new="m_If"/>
   <method old="exactName(Lorg/xbill/DNS/Name;)Ljava/lang/Object;" new="m_wE"/>
   <method old="findExactMatch(Lorg/xbill/DNS/Name;I)Lorg/xbill/DNS/RRset;" new="m_XD"/>
   <method old="findRRset(Lorg/xbill/DNS/Name;I)Lorg/xbill/DNS/RRset;" new="m_bE"/>
   <method old="findRecords(Lorg/xbill/DNS/Name;I)Lorg/xbill/DNS/SetResponse;" new="m_uD"/>
   <method old="fromXFR(Lorg/xbill/DNS/ZoneTransferIn;)V" new="m_Se"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getNS()Lorg/xbill/DNS/RRset;" new="m_Ie"/>
   <method old="getOrigin()Lorg/xbill/DNS/Name;" new="m_Ze"/>
   <method old="getSOA()Lorg/xbill/DNS/SOARecord;" new="m_MD"/>
   <method old="iterator()Ljava/util/Iterator;" new="m_ue"/>
   <method old="lookup(Lorg/xbill/DNS/Name;I)Lorg/xbill/DNS/SetResponse;" new="m_lE"/>
   <method old="maybeAddRecord(Lorg/xbill/DNS/Record;)V" new="m_lf"/>
   <method old="nodeToString(Ljava/lang/StringBuffer;Ljava/lang/Object;)V" new="m_nF"/>
   <method old="oneRRset(Ljava/lang/Object;I)Lorg/xbill/DNS/RRset;" new="m_IF"/>
   <method old="removeRRset(Lorg/xbill/DNS/Name;I)V" new="m_bf"/>
   <method old="removeRecord(Lorg/xbill/DNS/Record;)V" new="m_yE"/>
   <method old="toMasterFile()Ljava/lang/String;" new="m_kD"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="validate()V" new="m_KF"/>
   <field old="NS Lorg/xbill/DNS/RRset;" new="f_I"/>
   <field old="PRIMARY I" new="f_B"/>
   <field old="SECONDARY I" new="f_b"/>
   <field old="SOA Lorg/xbill/DNS/SOARecord;" new="f_f"/>
   <field old="data Ljava/util/Map;" new="f_e"/>
   <field old="dclass I" new="f_k"/>
   <field old="hasWild Z" new="f_j"/>
   <field old="origin Lorg/xbill/DNS/Name;" new="f_m"/>
   <field old="originNode Ljava/lang/Object;" new="f_l"/>
   <field old="serialVersionUID J" new="f_d"/>
  </class>
  <class old="org.jivesoftware.smack.packet.IQ$1" new="org.jivesoftware.smack.packet.c_I">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
  </class>
  <class old="org.jivesoftware.smack.packet.IQ$2" new="org.jivesoftware.smack.packet.c_e">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="val$request Lorg/jivesoftware/smack/packet/IQ;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.intent.AccountIntentBuilder" new="wy.c_qC">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="addSegment(Ljava/lang/String;)Lcom/xabber/android/data/intent/SegmentIntentBuilder;" new="m_eia"/>
   <method old="build()Landroid/content/Intent;" new="m_oIa"/>
   <method old="getAccount(Landroid/content/Intent;)Ljava/lang/String;" new="m_lCa"/>
   <method old="getSegment(Landroid/content/Intent;I)Ljava/lang/String;" new="m_Qia"/>
   <method old="getSegmentCount()I" new="m_EGa"/>
   <method old="getSegments(Landroid/content/Intent;)Ljava/util/List;" new="m_Eha"/>
   <method old="preBuild()V" new="m_KHa"/>
   <method old="setAccount(Ljava/lang/String;)Lcom/xabber/android/data/intent/BaseAccountIntentBuilder;" new="m_jIa"/>
  </class>
  <class old="org.jivesoftware.smackx.provider.EmbeddedExtensionProvider" new="org.jivesoftware.smackx.provider.c_G">
   <method old="createReturnExtension(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljava/util/List;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_mK"/>
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_I"/>
  </class>
  <class old="de.measite.smack.SaslClientFactory" new="wy.c_uc">
   <method old="createSaslClient([Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;)Lorg/apache/harmony/javax/security/sasl/SaslClient;" new="m_Ic"/>
   <method old="getMechanismNames(Ljava/util/Map;)[Ljava/lang/String;" new="m_Dc"/>
  </class>
  <class old="com.xabber.android.data.message.chat.SoundTable" new="wy.c_wc">
   <method old="bindValue(Landroid/database/sqlite/SQLiteStatement;Landroid/net/Uri;)V" new="m_Xea"/>
   <method old="bindValue(Landroid/database/sqlite/SQLiteStatement;Ljava/lang/Object;)V" new="m_ega"/>
   <method old="clear()V" new="m_EA"/>
   <method old="create(Landroid/database/sqlite/SQLiteDatabase;)V" new="m_AB"/>
   <method old="getAccount(Landroid/database/Cursor;)Ljava/lang/String;" new="m_Jea"/>
   <method old="getInstance()Lcom/xabber/android/data/message/chat/SoundTable;" new="m_Xr"/>
   <method old="getListOrder()Ljava/lang/String;" new="m_YDa"/>
   <method old="getProjection()[Ljava/lang/String;" new="m_AFa"/>
   <method old="getTableName()Ljava/lang/String;" new="m_dga"/>
   <method old="getUser(Landroid/database/Cursor;)Ljava/lang/String;" new="m_oDa"/>
   <method old="getValue(Landroid/database/Cursor;)Landroid/net/Uri;" new="m_Efa"/>
   <method old="getValueType()Ljava/lang/String;" new="m_pda"/>
   <method old="initialMigrate(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)V" new="m_SDa"/>
   <method old="list()Landroid/database/Cursor;" new="m_wEa"/>
   <method old="migrate(Landroid/database/sqlite/SQLiteDatabase;I)V" new="m_Cd"/>
   <method old="removeAccount(Ljava/lang/String;)V" new="m_YEa"/>
   <method old="write(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V" new="m_xDa"/>
   <field old="NAME Ljava/lang/String;" new="f_m"/>
   <field old="instance Lcom/xabber/android/data/message/chat/SoundTable;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.muc.DeafOccupantInterceptor" new="org.jivesoftware.smackx.muc.c_F">
   <method old="interceptPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_ca"/>
  </class>
  <class old="org.xbill.DNS.DNSKEYRecord$Protocol" new="org.xbill.DNS.c_mB">
   <field old="DNSSEC I" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.MUCUser$Item" new="org.jivesoftware.smackx.packet.c_t">
   <method old="getActor()Ljava/lang/String;" new="m_uJ"/>
   <method old="getAffiliation()Ljava/lang/String;" new="m_Ck"/>
   <method old="getJid()Ljava/lang/String;" new="m_tL"/>
   <method old="getNick()Ljava/lang/String;" new="m_Ql"/>
   <method old="getReason()Ljava/lang/String;" new="m_zj"/>
   <method old="getRole()Ljava/lang/String;" new="m_ul"/>
   <method old="setActor(Ljava/lang/String;)V" new="m_sj"/>
   <method old="setJid(Ljava/lang/String;)V" new="m_AJ"/>
   <method old="setNick(Ljava/lang/String;)V" new="m_Pj"/>
   <method old="setReason(Ljava/lang/String;)V" new="m_QJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="actor Ljava/lang/String;" new="f_e"/>
   <field old="affiliation Ljava/lang/String;" new="f_j"/>
   <field old="jid Ljava/lang/String;" new="f_B"/>
   <field old="nick Ljava/lang/String;" new="f_m"/>
   <field old="reason Ljava/lang/String;" new="f_d"/>
   <field old="role Ljava/lang/String;" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smack.util.Cache$LinkedList" new="org.jivesoftware.smack.util.c_K">
   <method old="addFirst(Ljava/lang/Object;)Lorg/jivesoftware/smack/util/Cache$LinkedListNode;" new="m_wu"/>
   <method old="addFirst(Lorg/jivesoftware/smack/util/Cache$LinkedListNode;)Lorg/jivesoftware/smack/util/Cache$LinkedListNode;" new="m_qs"/>
   <method old="addLast(Ljava/lang/Object;)Lorg/jivesoftware/smack/util/Cache$LinkedListNode;" new="m_Su"/>
   <method old="clear()V" new="m_EA"/>
   <method old="getFirst()Lorg/jivesoftware/smack/util/Cache$LinkedListNode;" new="m_aT"/>
   <method old="getLast()Lorg/jivesoftware/smack/util/Cache$LinkedListNode;" new="m_cs"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="head Lorg/jivesoftware/smack/util/Cache$LinkedListNode;" new="f_m"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.params.DSAValidationParameters" new="wy.c_gb">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getCounter()I" new="m_vX"/>
   <method old="getSeed()[B" new="m_haa"/>
   <method old="hashCode()I" new="hashCode"/>
   <field old="counter I" new="f_e"/>
   <field old="seed [B" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.vcard.AbstractTypedDataWithValue" new="com.xabber.xmpp.vcard.c_k">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getTypes()Ljava/util/Set;" new="m_xg"/>
   <method old="getValue()Ljava/lang/String;" new="m_Ra"/>
   <method old="getValueName()Ljava/lang/String;" new="m_IZ"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="setValue(Ljava/lang/String;)V" new="m_TT"/>
   <method old="writeBody(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_zy"/>
   <field old="types Ljava/util/Set;" new="f_m"/>
   <field old="value Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.Roster$RosterPacketListener" new="org.jivesoftware.smack.Roster$RosterPacketListener">
   <method old="processPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_C"/>
   <field old="this$0 Lorg/jivesoftware/smack/Roster;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.account.OnAccountAddedListener" new="com.xabber.android.data.account.c_H">
   <method old="onAccountAdded(Lcom/xabber/android/data/account/AccountItem;)V" new="m_NA"/>
  </class>
  <class old="org.jivesoftware.smack.Roster$SubscriptionMode" new="org.jivesoftware.smack.Roster$SubscriptionMode">
   <method old="valueOf(Ljava/lang/String;)Lorg/jivesoftware/smack/Roster$SubscriptionMode;" new="valueOf"/>
   <method old="values()[Lorg/jivesoftware/smack/Roster$SubscriptionMode;" new="values"/>
   <field old="$VALUES [Lorg/jivesoftware/smack/Roster$SubscriptionMode;" new="f_m"/>
   <field old="accept_all Lorg/jivesoftware/smack/Roster$SubscriptionMode;" new="accept_all"/>
   <field old="manual Lorg/jivesoftware/smack/Roster$SubscriptionMode;" new="manual"/>
   <field old="reject_all Lorg/jivesoftware/smack/Roster$SubscriptionMode;" new="reject_all"/>
  </class>
  <class old="org.jivesoftware.smackx.ReportedData$Row" new="org.jivesoftware.smackx.ReportedData$Row">
   <method old="getFields()Ljava/util/Iterator;" new="m_qJ"/>
   <method old="getValues(Ljava/lang/String;)Ljava/util/Iterator;" new="m_qQ"/>
   <field old="fields Ljava/util/List;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.roster.OnContactChangedListener" new="com.xabber.android.data.roster.c_H">
   <method old="onContactsChanged(Ljava/util/Collection;)V" new="m_bd"/>
  </class>
  <class old="org.jivesoftware.smackx.filetransfer.FaultTolerantNegotiator$NegotiatorService" new="org.jivesoftware.smackx.filetransfer.c_h">
   <method old="call()Ljava/io/InputStream;" new="m_Xn"/>
   <method old="call()Ljava/lang/Object;" new="call"/>
   <field old="collector Lorg/jivesoftware/smack/PacketCollector;" new="f_e"/>
   <field old="this$0 Lorg/jivesoftware/smackx/filetransfer/FaultTolerantNegotiator;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.XMPPTrustManager" new="org.jivesoftware.smack.c_G">
   <method old="checkChain([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V" new="m_PT"/>
   <method old="checkClientTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V" new="checkClientTrusted"/>
   <method old="checkServerTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V" new="checkServerTrusted"/>
   <method old="checkTarget(Ljava/security/cert/X509Certificate;)V" new="m_Wt"/>
   <method old="chooseTrustManager([Ljavax/net/ssl/TrustManager;)Ljavax/net/ssl/X509TrustManager;" new="m_dt"/>
   <method old="getAcceptedIssuers()[Ljava/security/cert/X509Certificate;" new="getAcceptedIssuers"/>
   <method old="isSelfSigned([Ljava/security/cert/X509Certificate;)Z" new="m_du"/>
   <field old="allowSelfSigned Z" new="f_B"/>
   <field old="chainCheck Z" new="f_j"/>
   <field old="domainCheck Z" new="f_k"/>
   <field old="hostname Ljava/lang/String;" new="f_e"/>
   <field old="listener Lorg/jivesoftware/smack/CertificateListener;" new="f_b"/>
   <field old="trustManager Ljavax/net/ssl/X509TrustManager;" new="f_m"/>
   <field old="verifier Lorg/apache/http/conn/ssl/AbstractVerifier;" new="f_d"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.callback.UnsupportedCallbackException" new="wy.c_ub">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getCallback()Lorg/apache/harmony/javax/security/auth/callback/Callback;" new="m_mv"/>
   <field old="callback Lorg/apache/harmony/javax/security/auth/callback/Callback;" new="f_m"/>
   <field old="serialVersionUID J" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smack.Chat" new="org.jivesoftware.smack.c_U">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="addMessageListener(Lorg/jivesoftware/smack/MessageListener;)V" new="m_xw"/>
   <method old="createCollector()Lorg/jivesoftware/smack/PacketCollector;" new="m_iV"/>
   <method old="deliver(Lorg/jivesoftware/smack/packet/Message;)V" new="m_ax"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getListeners()Ljava/util/Collection;" new="m_zx"/>
   <method old="getParticipant()Ljava/lang/String;" new="m_Gx"/>
   <method old="getThreadID()Ljava/lang/String;" new="m_HW"/>
   <method old="removeMessageListener(Lorg/jivesoftware/smack/MessageListener;)V" new="m_qw"/>
   <method old="sendMessage(Ljava/lang/String;)V" new="m_wm"/>
   <method old="sendMessage(Lorg/jivesoftware/smack/packet/Message;)V" new="m_ro"/>
   <field old="chatManager Lorg/jivesoftware/smack/ChatManager;" new="f_m"/>
   <field old="listeners Ljava/util/Set;" new="f_e"/>
   <field old="participant Ljava/lang/String;" new="f_d"/>
   <field old="threadID Ljava/lang/String;" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smack.RosterListener" new="org.jivesoftware.smack.RosterListener">
   <method old="entriesAdded(Ljava/util/Collection;)V" new="m_MB"/>
   <method old="entriesDeleted(Ljava/util/Collection;)V" new="m_MC"/>
   <method old="entriesUpdated(Ljava/util/Collection;)V" new="m_nA"/>
   <method old="presenceChanged(Lorg/jivesoftware/smack/packet/Presence;)V" new="m_Xb"/>
  </class>
  <class old="com.xabber.android.data.message.chat.NotifyVisibleTable" new="wy.c_zb">
   <method old="bindValue(Landroid/database/sqlite/SQLiteStatement;Ljava/lang/Boolean;)V" new="m_Ifa"/>
   <method old="bindValue(Landroid/database/sqlite/SQLiteStatement;Ljava/lang/Object;)V" new="m_ega"/>
   <method old="clear()V" new="m_EA"/>
   <method old="create(Landroid/database/sqlite/SQLiteDatabase;)V" new="m_AB"/>
   <method old="getAccount(Landroid/database/Cursor;)Ljava/lang/String;" new="m_Jea"/>
   <method old="getInstance()Lcom/xabber/android/data/message/chat/NotifyVisibleTable;" new="m_Xr"/>
   <method old="getListOrder()Ljava/lang/String;" new="m_YDa"/>
   <method old="getProjection()[Ljava/lang/String;" new="m_AFa"/>
   <method old="getTableName()Ljava/lang/String;" new="m_dga"/>
   <method old="getUser(Landroid/database/Cursor;)Ljava/lang/String;" new="m_oDa"/>
   <method old="getValue(Landroid/database/Cursor;)Z" new="m_Efa"/>
   <method old="getValueType()Ljava/lang/String;" new="m_pda"/>
   <method old="initialMigrate(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)V" new="m_SDa"/>
   <method old="list()Landroid/database/Cursor;" new="m_wEa"/>
   <method old="migrate(Landroid/database/sqlite/SQLiteDatabase;I)V" new="m_Cd"/>
   <method old="removeAccount(Ljava/lang/String;)V" new="m_YEa"/>
   <method old="write(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V" new="m_xDa"/>
   <field old="NAME Ljava/lang/String;" new="f_m"/>
   <field old="instance Lcom/xabber/android/data/message/chat/NotifyVisibleTable;" new="f_e"/>
  </class>
  <class old="org.xbill.DNS.MDRecord" new="org.xbill.DNS.c_ta">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getMailAgent()Lorg/xbill/DNS/Name;" new="m_uG"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getSingleName()Lorg/xbill/DNS/Name;" new="m_NH"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="serialVersionUID J" new="f_m"/>
   <field old="singleName Lorg/xbill/DNS/Name;" new="f_m"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smack.debugger.ConsoleDebugger$1" new="wy.c_Da">
   <method old="close()V" new="m_la"/>
   <method old="read(Ljava/lang/String;)V" new="m_qB"/>
   <field old="this$0 Lorg/jivesoftware/smack/debugger/ConsoleDebugger;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.debugger.ConsoleDebugger$2" new="wy.c_Ha">
   <method old="close()V" new="m_la"/>
   <method old="write(Ljava/lang/String;)V" new="m_Md"/>
   <field old="this$0 Lorg/jivesoftware/smack/debugger/ConsoleDebugger;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.debugger.ConsoleDebugger$3" new="wy.c_La">
   <method old="processPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_C"/>
   <field old="this$0 Lorg/jivesoftware/smack/debugger/ConsoleDebugger;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.connection.ConnectionThread" new="com.xabber.android.data.connection.c_W">
   <method old="access$000(Lcom/xabber/android/data/connection/ConnectionThread;Ljava/lang/String;Ljava/lang/String;I[Lorg/xbill/DNS/Record;)V" new="m_hla"/>
   <method old="access$100(Lcom/xabber/android/data/connection/ConnectionThread;Ljava/lang/String;Ljava/lang/String;IZ)V" new="m_Hja"/>
   <method old="access$1000(Lcom/xabber/android/data/connection/ConnectionThread;Ljava/lang/String;Ljava/lang/String;I)V" new="m_MJa"/>
   <method old="access$200(Lcom/xabber/android/data/connection/ConnectionThread;Ljava/lang/String;Ljava/lang/String;IZ[Ljava/net/InetAddress;)V" new="m_Jka"/>
   <method old="access$300(Lcom/xabber/android/data/connection/ConnectionThread;Ljava/lang/String;)V" new="m_tla"/>
   <method old="access$400(Lcom/xabber/android/data/connection/ConnectionThread;)V" new="m_Pja"/>
   <method old="access$500(Lcom/xabber/android/data/connection/ConnectionThread;Lcom/xabber/android/data/account/OAuthResult;)V" new="m_lja"/>
   <method old="access$600(Lcom/xabber/android/data/connection/ConnectionThread;)Lcom/xabber/android/data/connection/ConnectionItem;" new="m_Mla"/>
   <method old="access$700(Lcom/xabber/android/data/connection/ConnectionThread;Ljava/lang/String;)V" new="m_KJa"/>
   <method old="access$800(Lcom/xabber/android/data/connection/ConnectionThread;Ljava/lang/String;)V" new="m_Qja"/>
   <method old="access$900(Lcom/xabber/android/data/connection/ConnectionThread;)V" new="m_cka"/>
   <method old="addressResolve(Ljava/lang/String;Ljava/lang/String;IZ)V" new="m_Lla"/>
   <method old="authorization(Ljava/lang/String;)V" new="m_fla"/>
   <method old="checkForCertificateError(Ljava/lang/Exception;)V" new="m_Mja"/>
   <method old="checkForSeeOtherHost(Ljava/lang/Exception;)Z" new="m_fja"/>
   <method old="connect(Ljava/lang/String;)V" new="m_Oja"/>
   <method old="connectionClosed()V" new="m_r"/>
   <method old="connectionClosedOnError(Ljava/lang/Exception;)V" new="m_U"/>
   <method old="getConnectionItem()Lcom/xabber/android/data/connection/ConnectionItem;" new="m_CLa"/>
   <method old="getXMPPConnection()Lorg/jivesoftware/smack/XMPPConnection;" new="m_vla"/>
   <method old="onAddressResolved(Ljava/lang/String;Ljava/lang/String;IZ[Ljava/net/InetAddress;)V" new="m_fJa"/>
   <method old="onAuthorized()V" new="m_DJa"/>
   <method old="onConnected(Ljava/lang/String;)V" new="m_cKa"/>
   <method old="onPasswordReceived(Lcom/xabber/android/data/account/OAuthResult;)V" new="m_CJa"/>
   <method old="onReady(Ljava/net/InetAddress;I)V" new="m_Xla"/>
   <method old="onSRVResolved(Ljava/lang/String;Ljava/lang/String;I[Lorg/xbill/DNS/Record;)V" new="m_wja"/>
   <method old="passwordRequest()V" new="m_Cja"/>
   <method old="processPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_C"/>
   <method old="reconnectingIn(I)V" new="m_Z"/>
   <method old="reconnectionFailed(Ljava/lang/Exception;)V" new="m_S"/>
   <method old="reconnectionSuccessful()V" new="m_W"/>
   <method old="runOnConnectionThread(Ljava/lang/Runnable;)V" new="m_jja"/>
   <method old="runOnUiThread(Ljava/lang/Runnable;)V" new="m_bja"/>
   <method old="seeOtherHost(Ljava/lang/String;)V" new="m_vKa"/>
   <method old="shutdown()V" new="m_Fo"/>
   <method old="srvResolve(Ljava/lang/String;Ljava/lang/String;I)V" new="m_NLa"/>
   <method old="start(Ljava/lang/String;IZ)V" new="m_sLa"/>
   <field old="ACCEPT_ALL Lcom/xabber/android/data/connection/ConnectionThread$AcceptAll;" new="f_J"/>
   <field old="ADDRESS_AND_PORT Ljava/util/regex/Pattern;" new="f_e"/>
   <field old="compression Z" new="f_k"/>
   <field old="connectionItem Lcom/xabber/android/data/connection/ConnectionItem;" new="f_I"/>
   <field old="executorService Ljava/util/concurrent/ExecutorService;" new="f_f"/>
   <field old="login Ljava/lang/String;" new="f_g"/>
   <field old="protocol Lcom/xabber/android/data/account/AccountProtocol;" new="f_l"/>
   <field old="proxyHost Ljava/lang/String;" new="f_D"/>
   <field old="proxyPassword Ljava/lang/String;" new="f_d"/>
   <field old="proxyPort I" new="f_b"/>
   <field old="proxyType Lcom/xabber/android/data/connection/ProxyType;" new="f_K"/>
   <field old="proxyUser Ljava/lang/String;" new="f_G"/>
   <field old="resource Ljava/lang/String;" new="f_M"/>
   <field old="saslEnabled Z" new="f_B"/>
   <field old="serverName Ljava/lang/String;" new="f_j"/>
   <field old="started Z" new="f_h"/>
   <field old="tlsMode Lcom/xabber/android/data/connection/TLSMode;" new="f_H"/>
   <field old="token Ljava/lang/String;" new="f_m"/>
   <field old="xmppConnection Lorg/jivesoftware/smack/XMPPConnection;" new="f_F"/>
  </class>
  <class old="org.jivesoftware.smack.debugger.ConsoleDebugger$4" new="wy.c_ba">
   <method old="connectionClosed()V" new="m_r"/>
   <method old="connectionClosedOnError(Ljava/lang/Exception;)V" new="m_U"/>
   <method old="reconnectingIn(I)V" new="m_Z"/>
   <method old="reconnectionFailed(Ljava/lang/Exception;)V" new="m_S"/>
   <method old="reconnectionSuccessful()V" new="m_W"/>
   <field old="this$0 Lorg/jivesoftware/smack/debugger/ConsoleDebugger;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.account.AccountType" new="com.xabber.android.data.account.c_I">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getFirstServer()Ljava/lang/String;" new="m_AKa"/>
   <method old="getHelp()Ljava/lang/String;" new="m_tka"/>
   <method old="getHint()Ljava/lang/String;" new="m_vAa"/>
   <method old="getHost()Ljava/lang/String;" new="m_vD"/>
   <method old="getIcon()Landroid/graphics/drawable/Drawable;" new="m_qb"/>
   <method old="getId()I" new="m_Hca"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getPort()I" new="m_Jg"/>
   <method old="getProtocol()Lcom/xabber/android/data/account/AccountProtocol;" new="m_jF"/>
   <method old="getServers()Ljava/util/List;" new="m_eKa"/>
   <method old="isAllowServer()Z" new="m_Tla"/>
   <method old="isTLSRequired()Z" new="m_cla"/>
   <field old="allowServer Z" new="f_I"/>
   <field old="help Ljava/lang/String;" new="f_k"/>
   <field old="hint Ljava/lang/String;" new="f_b"/>
   <field old="host Ljava/lang/String;" new="f_d"/>
   <field old="icon Landroid/graphics/drawable/Drawable;" new="f_m"/>
   <field old="id I" new="f_j"/>
   <field old="name Ljava/lang/String;" new="f_K"/>
   <field old="port I" new="f_B"/>
   <field old="protocol Lcom/xabber/android/data/account/AccountProtocol;" new="f_f"/>
   <field old="servers Ljava/util/List;" new="f_l"/>
   <field old="tlsRequired Z" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$Mode" new="org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$Mode">
   <method old="fromName(Ljava/lang/String;)Lorg/jivesoftware/smackx/bytestreams/socks5/packet/Bytestream$Mode;" new="m_zo"/>
   <method old="valueOf(Ljava/lang/String;)Lorg/jivesoftware/smackx/bytestreams/socks5/packet/Bytestream$Mode;" new="valueOf"/>
   <method old="values()[Lorg/jivesoftware/smackx/bytestreams/socks5/packet/Bytestream$Mode;" new="values"/>
   <field old="$VALUES [Lorg/jivesoftware/smackx/bytestreams/socks5/packet/Bytestream$Mode;" new="f_m"/>
   <field old="tcp Lorg/jivesoftware/smackx/bytestreams/socks5/packet/Bytestream$Mode;" new="f_e"/>
   <field old="udp Lorg/jivesoftware/smackx/bytestreams/socks5/packet/Bytestream$Mode;" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.MessageEvent" new="org.jivesoftware.smackx.packet.c_v">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getEventTypes()Ljava/util/Iterator;" new="m_CL"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="isCancelled()Z" new="m_nk"/>
   <method old="isComposing()Z" new="m_XL"/>
   <method old="isDelivered()Z" new="m_MK"/>
   <method old="isDisplayed()Z" new="m_vK"/>
   <method old="isMessageEventRequest()Z" new="m_GL"/>
   <method old="isOffline()Z" new="m_rl"/>
   <method old="setCancelled(Z)V" new="m_Vk"/>
   <method old="setComposing(Z)V" new="m_Tk"/>
   <method old="setDelivered(Z)V" new="m_aK"/>
   <method old="setDisplayed(Z)V" new="m_TJ"/>
   <method old="setOffline(Z)V" new="m_nJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="CANCELLED Ljava/lang/String;" new="f_m"/>
   <field old="COMPOSING Ljava/lang/String;" new="f_d"/>
   <field old="DELIVERED Ljava/lang/String;" new="f_l"/>
   <field old="DISPLAYED Ljava/lang/String;" new="f_b"/>
   <field old="OFFLINE Ljava/lang/String;" new="f_I"/>
   <field old="cancelled Z" new="f_j"/>
   <field old="composing Z" new="f_k"/>
   <field old="delivered Z" new="f_e"/>
   <field old="displayed Z" new="f_K"/>
   <field old="offline Z" new="f_B"/>
   <field old="packetID Ljava/lang/String;" new="f_f"/>
  </class>
  <class old="com.xabber.android.ui.AccountEditor" new="com.xabber.android.ui.AccountEditor">
   <method old="createIntent(Landroid/content/Context;Ljava/lang/String;)Landroid/content/Intent;" new="m_bca"/>
   <method old="getAccount(Landroid/content/Intent;)Ljava/lang/String;" new="m_lCa"/>
   <method old="getBoolean(Ljava/util/Map;I)Z" new="m_gba"/>
   <method old="getInt(Ljava/util/Map;I)I" new="m_YCa"/>
   <method old="getPrefecence(Landroid/preference/Preference;Ljava/util/Map;)Ljava/lang/Object;" new="m_uba"/>
   <method old="getPreferences(Ljava/util/Map;)Ljava/util/Map;" new="m_gca"/>
   <method old="getString(Ljava/util/Map;I)Ljava/lang/String;" new="m_VAa"/>
   <method old="getUri(Ljava/util/Map;I)Landroid/net/Uri;" new="m_nCa"/>
   <method old="getValues()Ljava/util/Map;" new="m_bQ"/>
   <method old="hasChanges(Ljava/util/Map;Ljava/util/Map;I)Z" new="m_Gba"/>
   <method old="hasChanges(Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;)Z" new="m_qCa"/>
   <method old="isInitialChange()Z" new="m_qAa"/>
   <method old="onActivityResult(IILandroid/content/Intent;)V" new="onActivityResult"/>
   <method old="onCreate(Landroid/os/Bundle;)V" new="onCreate"/>
   <method old="onCreateDialog(I)Landroid/app/Dialog;" new="onCreateDialog"/>
   <method old="onCreateOptionsMenu(Landroid/view/Menu;)Z" new="onCreateOptionsMenu"/>
   <method old="onDestroy()V" new="onDestroy"/>
   <method old="onInflate(Landroid/os/Bundle;)V" new="m_TBa"/>
   <method old="onKeyDown(ILandroid/view/KeyEvent;)Z" new="onKeyDown"/>
   <method old="onNewIntent(Landroid/content/Intent;)V" new="onNewIntent"/>
   <method old="onOAuthChange()V" new="m_rda"/>
   <method old="onOptionsItemSelected(Landroid/view/MenuItem;)Z" new="onOptionsItemSelected"/>
   <method old="onPause()V" new="onPause"/>
   <method old="onPreferenceChange(Landroid/preference/Preference;Ljava/lang/Object;)Z" new="onPreferenceChange"/>
   <method old="onPreferenceClick(Landroid/preference/Preference;)Z" new="onPreferenceClick"/>
   <method old="onResume()V" new="onResume"/>
   <method old="onSaveInstanceState(Landroid/os/Bundle;)V" new="onSaveInstanceState"/>
   <method old="putValue(Ljava/util/Map;ILjava/lang/Object;)V" new="m_Ida"/>
   <method old="setPreference(Landroid/preference/Preference;Ljava/lang/Object;)V" new="m_xAa"/>
   <method old="setPreferences(Ljava/util/Map;)V" new="m_sca"/>
   <method old="setValues(Ljava/util/Map;Ljava/util/Map;)Z" new="m_eba"/>
   <method old="startActivity(Landroid/content/Intent;)V" new="startActivity"/>
   <method old="startActivityForResult(Landroid/content/Intent;I)V" new="startActivityForResult"/>
   <field old="INVALIDATED_TOKEN Ljava/lang/String;" new="f_d"/>
   <field old="OAUTH_WML_REQUEST_CODE I" new="f_b"/>
   <field old="ORBOT_DIALOG_ID I" new="f_e"/>
   <field old="SAVED_TOKEN Ljava/lang/String;" new="f_j"/>
   <field old="account Ljava/lang/String;" new="f_l"/>
   <field old="accountItem Lcom/xabber/android/data/account/AccountItem;" new="f_m"/>
   <field old="oauthPreference Landroid/preference/Preference;" new="f_B"/>
   <field old="token Ljava/lang/String;" new="f_k"/>
  </class>
  <class old="com.xabber.xmpp.vcard.Telephone" new="com.xabber.xmpp.vcard.c_G">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getTypes()Ljava/util/Set;" new="m_xg"/>
   <method old="getValue()Ljava/lang/String;" new="m_Ra"/>
   <method old="getValueName()Ljava/lang/String;" new="m_IZ"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="setValue(Ljava/lang/String;)V" new="m_TT"/>
   <method old="writeBody(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_zy"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_e"/>
   <field old="NUMBER_NAME Ljava/lang/String;" new="f_m"/>
   <field old="types Ljava/util/Set;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.Roster" new="org.jivesoftware.smack.Roster">
   <method old="access$1000(Lorg/jivesoftware/smack/Roster;)Lorg/jivesoftware/smack/RosterStorage;" new="m_qW"/>
   <method old="access$1002(Lorg/jivesoftware/smack/Roster;Lorg/jivesoftware/smack/RosterStorage;)Lorg/jivesoftware/smack/RosterStorage;" new="m_XV"/>
   <method old="access$1100(Lorg/jivesoftware/smack/Roster;Lorg/jivesoftware/smack/packet/RosterPacket$Item;Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Collection;)V" new="m_Iv"/>
   <method old="access$1200(Lorg/jivesoftware/smack/Roster;Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Collection;)V" new="m_Pw"/>
   <method old="access$200(Lorg/jivesoftware/smack/Roster;)V" new="m_lv"/>
   <method old="access$400(Lorg/jivesoftware/smack/Roster;Ljava/lang/String;)Ljava/lang/String;" new="m_Zv"/>
   <method old="access$500(Lorg/jivesoftware/smack/Roster;)Ljava/util/Map;" new="m_Ww"/>
   <method old="access$600(Lorg/jivesoftware/smack/Roster;)Ljava/util/Map;" new="m_Wx"/>
   <method old="access$700(Lorg/jivesoftware/smack/Roster;Lorg/jivesoftware/smack/packet/Presence;)V" new="m_IU"/>
   <method old="access$800(Lorg/jivesoftware/smack/Roster;)Lorg/jivesoftware/smack/Roster$SubscriptionMode;" new="m_Tv"/>
   <method old="access$900(Lorg/jivesoftware/smack/Roster;)Lorg/jivesoftware/smack/Connection;" new="m_LW"/>
   <method old="addRosterListener(Lorg/jivesoftware/smack/RosterListener;)V" new="m_Hv"/>
   <method old="cleanup()V" new="m_wD"/>
   <method old="contains(Ljava/lang/String;)Z" new="m_dT"/>
   <method old="createEntry(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V" new="m_MV"/>
   <method old="createGroup(Ljava/lang/String;)Lorg/jivesoftware/smack/RosterGroup;" new="m_sV"/>
   <method old="fireRosterChangedEvent(Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Collection;)V" new="m_FW"/>
   <method old="fireRosterPresenceEvent(Lorg/jivesoftware/smack/packet/Presence;)V" new="m_iW"/>
   <method old="getDefaultSubscriptionMode()Lorg/jivesoftware/smack/Roster$SubscriptionMode;" new="m_QU"/>
   <method old="getEntries()Ljava/util/Collection;" new="m_hd"/>
   <method old="getEntry(Ljava/lang/String;)Lorg/jivesoftware/smack/RosterEntry;" new="m_gc"/>
   <method old="getEntryCount()I" new="m_nB"/>
   <method old="getGroup(Ljava/lang/String;)Lorg/jivesoftware/smack/RosterGroup;" new="m_Kx"/>
   <method old="getGroupCount()I" new="m_hV"/>
   <method old="getGroups()Ljava/util/Collection;" new="m_pK"/>
   <method old="getPresence(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/Presence;" new="m_fW"/>
   <method old="getPresenceMapKey(Ljava/lang/String;)Ljava/lang/String;" new="m_AW"/>
   <method old="getPresenceResource(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/Presence;" new="m_ZV"/>
   <method old="getPresences(Ljava/lang/String;)Ljava/util/Iterator;" new="m_mw"/>
   <method old="getSubscriptionMode()Lorg/jivesoftware/smack/Roster$SubscriptionMode;" new="m_fV"/>
   <method old="getUnfiledEntries()Ljava/util/Collection;" new="m_EW"/>
   <method old="getUnfiledEntryCount()I" new="m_xV"/>
   <method old="insertRosterItem(Lorg/jivesoftware/smack/packet/RosterPacket$Item;Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Collection;)V" new="m_RU"/>
   <method old="insertRosterItems(Ljava/util/List;)V" new="m_vv"/>
   <method old="reload()V" new="m_Kv"/>
   <method old="removeEmptyGroup(Ljava/lang/String;)V" new="m_OV"/>
   <method old="removeEntry(Lorg/jivesoftware/smack/RosterEntry;)V" new="m_qT"/>
   <method old="removeRosterListener(Lorg/jivesoftware/smack/RosterListener;)V" new="m_Uv"/>
   <method old="setDefaultSubscriptionMode(Lorg/jivesoftware/smack/Roster$SubscriptionMode;)V" new="m_ux"/>
   <method old="setOfflinePresences()V" new="m_jx"/>
   <method old="setSubscriptionMode(Lorg/jivesoftware/smack/Roster$SubscriptionMode;)V" new="m_vV"/>
   <field old="connection Lorg/jivesoftware/smack/Connection;" new="f_J"/>
   <field old="defaultSubscriptionMode Lorg/jivesoftware/smack/Roster$SubscriptionMode;" new="f_K"/>
   <field old="entries Ljava/util/Map;" new="f_e"/>
   <field old="groups Ljava/util/Map;" new="f_j"/>
   <field old="persistentStorage Lorg/jivesoftware/smack/RosterStorage;" new="f_f"/>
   <field old="presenceMap Ljava/util/Map;" new="f_m"/>
   <field old="presencePacketListener Lorg/jivesoftware/smack/Roster$PresencePacketListener;" new="f_b"/>
   <field old="requestPacketId Ljava/lang/String;" new="f_B"/>
   <field old="rosterInitialized Z" new="f_I"/>
   <field old="rosterListeners Ljava/util/List;" new="f_k"/>
   <field old="subscriptionMode Lorg/jivesoftware/smack/Roster$SubscriptionMode;" new="f_d"/>
   <field old="unfiledEntries Ljava/util/List;" new="f_l"/>
  </class>
  <class old="org.xbill.DNS.DNSSEC$SignatureNotYetValidException" new="org.xbill.DNS.c_FA">
   <method old="getExpiration()Ljava/util/Date;" new="m_LG"/>
   <method old="getVerifyTime()Ljava/util/Date;" new="m_II"/>
   <field old="now Ljava/util/Date;" new="f_e"/>
   <field old="when Ljava/util/Date;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.SharedGroupManager" new="org.jivesoftware.smackx.c_f">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getSharedGroups(Lorg/jivesoftware/smack/Connection;)Ljava/util/List;" new="m_Sp"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.login.AccountNotFoundException" new="wy.c_vC">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <field old="serialVersionUID J" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.AccountManager" new="org.jivesoftware.smack.c_V">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="changePassword(Ljava/lang/String;)V" new="m_GV"/>
   <method old="createAccount(Ljava/lang/String;Ljava/lang/String;)V" new="m_BW"/>
   <method old="createAccount(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V" new="m_ow"/>
   <method old="deleteAccount()V" new="m_ov"/>
   <method old="getAccountAttribute(Ljava/lang/String;)Ljava/lang/String;" new="m_Yv"/>
   <method old="getAccountAttributes()Ljava/util/Collection;" new="m_dW"/>
   <method old="getAccountInstructions()Ljava/lang/String;" new="m_yW"/>
   <method old="getRegistrationInfo()V" new="m_yw"/>
   <method old="setSupportsAccountCreation(Z)V" new="m_PV"/>
   <method old="supportsAccountCreation()Z" new="m_oU"/>
   <field old="accountCreationSupported Z" new="f_e"/>
   <field old="connection Lorg/jivesoftware/smack/Connection;" new="f_b"/>
   <field old="info Lorg/jivesoftware/smack/packet/Registration;" new="f_m"/>
  </class>
  <class old="org.apache.harmony.javax.security.sasl.Sasl" new="org.apache.harmony.javax.security.sasl.c_m">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createSaslClient([Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;)Lorg/apache/harmony/javax/security/sasl/SaslClient;" new="m_Ic"/>
   <method old="createSaslServer(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;)Lorg/apache/harmony/javax/security/sasl/SaslServer;" new="m_sB"/>
   <method old="findFactories(Ljava/lang/String;)Ljava/util/Collection;" new="m_rw"/>
   <method old="getSaslClientFactories()Ljava/util/Enumeration;" new="m_MU"/>
   <method old="getSaslServerFactories()Ljava/util/Enumeration;" new="m_Iw"/>
   <method old="newInstance(Ljava/lang/String;Ljava/security/Provider;)Ljava/lang/Object;" new="m_Bv"/>
   <field old="CLIENTFACTORYSRV Ljava/lang/String;" new="f_j"/>
   <field old="MAX_BUFFER Ljava/lang/String;" new="f_D"/>
   <field old="POLICY_FORWARD_SECRECY Ljava/lang/String;" new="f_B"/>
   <field old="POLICY_NOACTIVE Ljava/lang/String;" new="f_J"/>
   <field old="POLICY_NOANONYMOUS Ljava/lang/String;" new="f_e"/>
   <field old="POLICY_NODICTIONARY Ljava/lang/String;" new="f_m"/>
   <field old="POLICY_NOPLAINTEXT Ljava/lang/String;" new="f_f"/>
   <field old="POLICY_PASS_CREDENTIALS Ljava/lang/String;" new="f_d"/>
   <field old="QOP Ljava/lang/String;" new="f_I"/>
   <field old="RAW_SEND_SIZE Ljava/lang/String;" new="f_l"/>
   <field old="REUSE Ljava/lang/String;" new="f_M"/>
   <field old="SERVERFACTORYSRV Ljava/lang/String;" new="f_k"/>
   <field old="SERVER_AUTH Ljava/lang/String;" new="f_K"/>
   <field old="STRENGTH Ljava/lang/String;" new="f_b"/>
  </class>
  <class old="com.xabber.android.classic.R$array" new="com.xabber.android.classic.R$array">
   <field old="account_archive_mode_entries I" new="account_archive_mode_entries"/>
   <field old="account_archive_mode_entryvalues I" new="account_archive_mode_entryvalues"/>
   <field old="account_avatars I" new="account_avatars"/>
   <field old="account_proxy_type_entries I" new="account_proxy_type_entries"/>
   <field old="account_proxy_type_entryvalues I" new="account_proxy_type_entryvalues"/>
   <field old="account_quantity I" new="account_quantity"/>
   <field old="account_quantity_offline I" new="account_quantity_offline"/>
   <field old="account_tls_entries I" new="account_tls_entries"/>
   <field old="account_tls_entryvalues I" new="account_tls_entryvalues"/>
   <field old="account_type_facebook I" new="account_type_facebook"/>
   <field old="account_type_gtalk I" new="account_type_gtalk"/>
   <field old="account_type_livejournal I" new="account_type_livejournal"/>
   <field old="account_type_odnoklassniki I" new="account_type_odnoklassniki"/>
   <field old="account_type_qip I" new="account_type_qip"/>
   <field old="account_type_wlm I" new="account_type_wlm"/>
   <field old="account_type_xmpp I" new="account_type_xmpp"/>
   <field old="account_type_ya I" new="account_type_ya"/>
   <field old="account_types I" new="account_types"/>
   <field old="chat_contact_quantity I" new="chat_contact_quantity"/>
   <field old="chat_message_quantity I" new="chat_message_quantity"/>
   <field old="chats_divide_entries I" new="chats_divide_entries"/>
   <field old="chats_divide_entryvalues I" new="chats_divide_entryvalues"/>
   <field old="chats_font_size_entries I" new="chats_font_size_entries"/>
   <field old="chats_font_size_entryvalues I" new="chats_font_size_entryvalues"/>
   <field old="chats_hide_keyboard_entries I" new="chats_hide_keyboard_entries"/>
   <field old="chats_hide_keyboard_entryvalues I" new="chats_hide_keyboard_entryvalues"/>
   <field old="chats_show_status_change_entries I" new="chats_show_status_change_entries"/>
   <field old="chats_show_status_change_entryvalues I" new="chats_show_status_change_entryvalues"/>
   <field old="connection_go_away_entries I" new="connection_go_away_entries"/>
   <field old="connection_go_away_entryvalues I" new="connection_go_away_entryvalues"/>
   <field old="connection_go_xa_entries I" new="connection_go_xa_entries"/>
   <field old="connection_go_xa_entryvalues I" new="connection_go_xa_entryvalues"/>
   <field old="connection_state_connected I" new="connection_state_connected"/>
   <field old="connection_state_connecting I" new="connection_state_connecting"/>
   <field old="connection_state_waiting I" new="connection_state_waiting"/>
   <field old="contact_managers I" new="contact_managers"/>
   <field old="contacts_order_entries I" new="contacts_order_entries"/>
   <field old="contacts_order_entryvalues I" new="contacts_order_entryvalues"/>
   <field old="default_avatars I" new="default_avatars"/>
   <field old="development_changes I" new="development_changes"/>
   <field old="development_versions I" new="development_versions"/>
   <field old="events_message_entries I" new="events_message_entries"/>
   <field old="events_message_entryvalues I" new="events_message_entryvalues"/>
   <field old="interface_smiles_entries I" new="interface_smiles_entries"/>
   <field old="interface_smiles_entryvalues I" new="interface_smiles_entryvalues"/>
   <field old="interface_theme_entries I" new="interface_theme_entries"/>
   <field old="interface_theme_entryvalues I" new="interface_theme_entryvalues"/>
   <field old="managers I" new="managers"/>
   <field old="muc_avatars I" new="muc_avatars"/>
   <field old="production_changes I" new="production_changes"/>
   <field old="production_versions I" new="production_versions"/>
   <field old="security_otr_mode_entries I" new="security_otr_mode_entries"/>
   <field old="security_otr_mode_entryvalues I" new="security_otr_mode_entryvalues"/>
   <field old="tables I" new="tables"/>
  </class>
  <class old="com.xabber.xmpp.time.TimeProvider" new="wy.c_Gc">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/time/Time;" new="m_ZZ"/>
   <method old="parseIQ(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/IQ;" new="m_g"/>
   <method old="parseIQ(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/IQ;" new="m_g"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/time/Time;)Z" new="m_kz"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
   <field old="TZO Ljava/util/regex/Pattern;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.Options" new="org.xbill.DNS.c_ga">
   <method old="check(Ljava/lang/String;)Z" new="m_Rh"/>
   <method old="clear()V" new="m_EA"/>
   <method old="intValue(Ljava/lang/String;)I" new="m_pg"/>
   <method old="refresh()V" new="m_oC"/>
   <method old="set(Ljava/lang/String;)V" new="m_Ii"/>
   <method old="set(Ljava/lang/String;Ljava/lang/String;)V" new="m_sg"/>
   <method old="unset(Ljava/lang/String;)V" new="m_ch"/>
   <method old="value(Ljava/lang/String;)Ljava/lang/String;" new="m_le"/>
   <field old="table Ljava/util/Map;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.dialog.ConfirmDialogListener" new="wy.c_c">
   <method old="onAccept(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_Lc"/>
   <method old="onCancel(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_Vb"/>
   <method old="onDecline(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_ad"/>
  </class>
  <class old="com.xabber.android.classic.R$bool" new="com.xabber.android.classic.R$bool">
   <field old="chats_attention_default I" new="chats_attention_default"/>
   <field old="chats_send_by_enter_default I" new="chats_send_by_enter_default"/>
   <field old="chats_show_avatars_default I" new="chats_show_avatars_default"/>
   <field old="chats_state_notification_default I" new="chats_state_notification_default"/>
   <field old="connection_adjust_priority_default I" new="connection_adjust_priority_default"/>
   <field old="connection_load_vcard_default I" new="connection_load_vcard_default"/>
   <field old="connection_start_at_boot_default I" new="connection_start_at_boot_default"/>
   <field old="connection_wake_lock_default I" new="connection_wake_lock_default"/>
   <field old="connection_wifi_lock_default I" new="connection_wifi_lock_default"/>
   <field old="contacts_enable_show_accounts_default I" new="contacts_enable_show_accounts_default"/>
   <field old="contacts_show_accounts_default I" new="contacts_show_accounts_default"/>
   <field old="contacts_show_active_chats_default I" new="contacts_show_active_chats_default"/>
   <field old="contacts_show_avatars_default I" new="contacts_show_avatars_default"/>
   <field old="contacts_show_empty_groups_default I" new="contacts_show_empty_groups_default"/>
   <field old="contacts_show_groups_default I" new="contacts_show_groups_default"/>
   <field old="contacts_show_offline_default I" new="contacts_show_offline_default"/>
   <field old="contacts_show_panel_default I" new="contacts_show_panel_default"/>
   <field old="contacts_stay_active_chats_default I" new="contacts_stay_active_chats_default"/>
   <field old="debug_log_default I" new="debug_log_default"/>
   <field old="events_first_only_default I" new="events_first_only_default"/>
   <field old="events_ignore_system_vibro_default I" new="events_ignore_system_vibro_default"/>
   <field old="events_lightning_default I" new="events_lightning_default"/>
   <field old="events_persistent_default I" new="events_persistent_default"/>
   <field old="events_show_text_default I" new="events_show_text_default"/>
   <field old="events_vibro_default I" new="events_vibro_default"/>
   <field old="events_visible_chat_default I" new="events_visible_chat_default"/>
   <field old="landscape I" new="landscape"/>
   <field old="security_check_certificate_default I" new="security_check_certificate_default"/>
   <field old="security_otr_history_default I" new="security_otr_history_default"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.socks5.Socks5Proxy" new="org.jivesoftware.smackx.bytestreams.socks5.c_m">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="access$100(Lorg/jivesoftware/smackx/bytestreams/socks5/Socks5Proxy;)Ljava/net/ServerSocket;" new="m_aM"/>
   <method old="access$200(Lorg/jivesoftware/smackx/bytestreams/socks5/Socks5Proxy;)Ljava/util/List;" new="m_sM"/>
   <method old="access$300(Lorg/jivesoftware/smackx/bytestreams/socks5/Socks5Proxy;)Ljava/util/Map;" new="m_rm"/>
   <method old="addLocalAddress(Ljava/lang/String;)V" new="m_Un"/>
   <method old="addTransfer(Ljava/lang/String;)V" new="m_wo"/>
   <method old="getLocalAddresses()Ljava/util/List;" new="m_Co"/>
   <method old="getPort()I" new="m_Jg"/>
   <method old="getSocket(Ljava/lang/String;)Ljava/net/Socket;" new="m_Xm"/>
   <method old="getSocks5Proxy()Lorg/jivesoftware/smackx/bytestreams/socks5/Socks5Proxy;" new="m_jm"/>
   <method old="isRunning()Z" new="m_gM"/>
   <method old="removeLocalAddress(Ljava/lang/String;)V" new="m_PO"/>
   <method old="removeTransfer(Ljava/lang/String;)V" new="m_VM"/>
   <method old="replaceLocalAddresses(Ljava/util/List;)V" new="m_qM"/>
   <method old="start()V" new="m_kG"/>
   <method old="stop()V" new="m_so"/>
   <field old="allowedConnections Ljava/util/List;" new="f_k"/>
   <field old="connectionMap Ljava/util/Map;" new="f_B"/>
   <field old="localAddresses Ljava/util/Set;" new="f_b"/>
   <field old="serverProcess Lorg/jivesoftware/smackx/bytestreams/socks5/Socks5Proxy$Socks5ServerProcess;" new="f_d"/>
   <field old="serverSocket Ljava/net/ServerSocket;" new="f_e"/>
   <field old="serverThread Ljava/lang/Thread;" new="f_m"/>
   <field old="socks5Server Lorg/jivesoftware/smackx/bytestreams/socks5/Socks5Proxy;" new="f_j"/>
  </class>
  <class old="org.jivesoftware.smackx.filetransfer.FileTransferManager$1" new="org.jivesoftware.smackx.filetransfer.c_C">
   <method old="processPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_C"/>
   <field old="this$0 Lorg/jivesoftware/smackx/filetransfer/FileTransferManager;" new="f_m"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.Subject$SecureSet" new="org.apache.harmony.javax.security.auth.c_M">
   <method old="access$600(Lorg/apache/harmony/javax/security/auth/Subject$SecureSet;)Lorg/apache/harmony/javax/security/auth/AuthPermission;" new="m_hW"/>
   <method old="add(Ljava/lang/Object;)Z" new="add"/>
   <method old="get(Ljava/lang/Class;)Ljava/util/Set;" new="m_QW"/>
   <method old="iterator()Ljava/util/Iterator;" new="iterator"/>
   <method old="readObject(Ljava/io/ObjectInputStream;)V" new="m_CQ"/>
   <method old="retainAll(Ljava/util/Collection;)Z" new="retainAll"/>
   <method old="size()I" new="size"/>
   <method old="verifyElement(Ljava/lang/Object;)V" new="m_kv"/>
   <method old="writeObject(Ljava/io/ObjectOutputStream;)V" new="m_CP"/>
   <field old="SET_Principal I" new="f_b"/>
   <field old="SET_PrivCred I" new="f_e"/>
   <field old="SET_PubCred I" new="f_B"/>
   <field old="elements Ljava/util/LinkedList;" new="f_k"/>
   <field old="permission Lorg/apache/harmony/javax/security/auth/AuthPermission;" new="f_j"/>
   <field old="serialVersionUID J" new="f_l"/>
   <field old="setType I" new="f_d"/>
   <field old="this$0 Lorg/apache/harmony/javax/security/auth/Subject;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.LastActivity" new="org.jivesoftware.smackx.packet.c_S">
   <method old="access$000(Lorg/jivesoftware/smackx/packet/LastActivity;Ljava/lang/String;)V" new="m_ll"/>
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getIdleTime()J" new="m_zL"/>
   <method old="getLastActivity(Lorg/jivesoftware/smack/Connection;Ljava/lang/String;)Lorg/jivesoftware/smackx/packet/LastActivity;" new="m_Gj"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getStatusMessage()Ljava/lang/String;" new="m_Vl"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setLastActivity(J)V" new="m_Kj"/>
   <method old="setMessage(Ljava/lang/String;)V" new="m_hl"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="lastActivity J" new="f_m"/>
   <field old="message Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="com.xabber.xmpp.ProviderUtils" new="com.xabber.xmpp.c_k">
   <method old="parseBigDecimal(Lorg/xmlpull/v1/XmlPullParser;)Ljava/math/BigDecimal;" new="m_Xba"/>
   <method old="parseBoolean(Ljava/lang/String;)Ljava/lang/Boolean;" new="m_Cca"/>
   <method old="parseBoolean(Lorg/xmlpull/v1/XmlPullParser;)Ljava/lang/Integer;" new="m_qba"/>
   <method old="parseDateTime(Ljava/lang/String;)Ljava/util/Date;" new="m_eAa"/>
   <method old="parseDateTime(Lorg/xmlpull/v1/XmlPullParser;)Ljava/util/Date;" new="m_yAa"/>
   <method old="parseInteger(Ljava/lang/String;)Ljava/lang/Integer;" new="m_TAa"/>
   <method old="parseInteger(Lorg/xmlpull/v1/XmlPullParser;)Ljava/lang/Integer;" new="m_uca"/>
   <method old="parseText(Lorg/xmlpull/v1/XmlPullParser;)Ljava/lang/String;" new="m_mBa"/>
   <method old="parseText(Lorg/xmlpull/v1/XmlPullParser;I)Ljava/lang/String;" new="m_iBa"/>
   <method old="skipTag(Lorg/xmlpull/v1/XmlPullParser;)V" new="m_OAa"/>
   <field old="XEP_0082_UTC_FORMAT_WITHOUT_MILLIS Ljava/text/DateFormat;" new="f_m"/>
   <field old="pattern Ljava/util/regex/Pattern;" new="f_e"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.login.AccountException" new="wy.c_xB">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <field old="serialVersionUID J" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.Serial" new="org.xbill.DNS.c_N">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="compare(JJ)I" new="m_dg"/>
   <method old="increment(J)J" new="m_WE"/>
   <field old="MAX32 J" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.SettingsManager$ChatsShowStatusChange" new="com.xabber.android.data.SettingsManager$ChatsShowStatusChange">
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/android/data/SettingsManager$ChatsShowStatusChange;" new="valueOf"/>
   <method old="values()[Lcom/xabber/android/data/SettingsManager$ChatsShowStatusChange;" new="values"/>
   <field old="$VALUES [Lcom/xabber/android/data/SettingsManager$ChatsShowStatusChange;" new="f_b"/>
   <field old="always Lcom/xabber/android/data/SettingsManager$ChatsShowStatusChange;" new="f_e"/>
   <field old="muc Lcom/xabber/android/data/SettingsManager$ChatsShowStatusChange;" new="f_m"/>
   <field old="never Lcom/xabber/android/data/SettingsManager$ChatsShowStatusChange;" new="f_d"/>
  </class>
  <class old="com.xabber.android.data.extension.archive.AvailableArchiveRequest" new="com.xabber.android.data.extension.archive.c_G">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getAccount()Ljava/lang/String;" new="m_FC"/>
   <method old="getIntent()Landroid/content/Intent;" new="m_db"/>
   <method old="getText()Ljava/lang/String;" new="m_ZA"/>
   <method old="getTitle()Ljava/lang/String;" new="m_zb"/>
   <method old="hashCode()I" new="hashCode"/>
   <field old="account Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.ARecord" new="org.xbill.DNS.c_Rd">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromArray([B)I" new="m_Tj"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getAddress()Ljava/net/InetAddress;" new="m_kf"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toArray(I)[B" new="m_hk"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="addr I" new="f_e"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="serialVersionUID J" new="f_b"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceKeySet" new="org.jivesoftware.smack.util.collections.c_i">
   <method old="clear()V" new="clear"/>
   <method old="contains(Ljava/lang/Object;)Z" new="contains"/>
   <method old="iterator()Ljava/util/Iterator;" new="iterator"/>
   <method old="remove(Ljava/lang/Object;)Z" new="remove"/>
   <method old="size()I" new="size"/>
   <method old="toArray()[Ljava/lang/Object;" new="toArray"/>
   <method old="toArray([Ljava/lang/Object;)[Ljava/lang/Object;" new="toArray"/>
   <field old="parent Lorg/jivesoftware/smack/util/collections/AbstractHashedMap;" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.archive.ToProvider" new="com.xabber.xmpp.archive.c_A">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/archive/To;" new="m_ZZ"/>
   <method old="getInstance()Lcom/xabber/xmpp/archive/ToProvider;" new="m_Xr"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/archive/AbstractMessage;)Z" new="m_OCa"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/archive/AbstractMessage;)Lcom/xabber/xmpp/archive/AbstractMessage;" new="m_sba"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
   <field old="instance Lcom/xabber/xmpp/archive/ToProvider;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.SPFRecord" new="org.xbill.DNS.c_U">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getStrings()Ljava/util/List;" new="m_CE"/>
   <method old="getStringsAsByteArrays()Ljava/util/List;" new="m_dD"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="serialVersionUID J" new="f_m"/>
   <field old="strings Ljava/util/List;" new="f_e"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smackx.RosterExchangeManager$1" new="org.jivesoftware.smackx.RosterExchangeManager$1">
   <method old="processPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_C"/>
   <field old="this$0 Lorg/jivesoftware/smackx/RosterExchangeManager;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.MUCOwner" new="org.jivesoftware.smackx.packet.c_y">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="addItem(Lorg/jivesoftware/smackx/packet/MUCOwner$Item;)V" new="m_KL"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getDestroy()Lorg/jivesoftware/smackx/packet/MUCOwner$Destroy;" new="m_DK"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getItems()Ljava/util/Iterator;" new="m_Vj"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setDestroy(Lorg/jivesoftware/smackx/packet/MUCOwner$Destroy;)V" new="m_Wk"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="destroy Lorg/jivesoftware/smackx/packet/MUCOwner$Destroy;" new="f_e"/>
   <field old="items Ljava/util/List;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.proxy.ProxyInfo$ProxyType" new="org.jivesoftware.smack.proxy.ProxyInfo$ProxyType">
   <method old="valueOf(Ljava/lang/String;)Lorg/jivesoftware/smack/proxy/ProxyInfo$ProxyType;" new="valueOf"/>
   <method old="values()[Lorg/jivesoftware/smack/proxy/ProxyInfo$ProxyType;" new="values"/>
   <field old="$VALUES [Lorg/jivesoftware/smack/proxy/ProxyInfo$ProxyType;" new="f_d"/>
   <field old="HTTP Lorg/jivesoftware/smack/proxy/ProxyInfo$ProxyType;" new="f_b"/>
   <field old="NONE Lorg/jivesoftware/smack/proxy/ProxyInfo$ProxyType;" new="f_m"/>
   <field old="SOCKS4 Lorg/jivesoftware/smack/proxy/ProxyInfo$ProxyType;" new="f_B"/>
   <field old="SOCKS5 Lorg/jivesoftware/smack/proxy/ProxyInfo$ProxyType;" new="f_e"/>
  </class>
  <class old="com.xabber.xmpp.archive.ItemRemove" new="com.xabber.xmpp.archive.c_C">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="addItem(Lcom/xabber/xmpp/archive/Item;)V" new="m_gBa"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getItems()Ljava/util/Collection;" new="m_Vj"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="serializeContent(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_Fb"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_e"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="NAMESPACE Ljava/lang/String;" new="f_b"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="items Ljava/util/Collection;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.ChatViewer$ChatExportAsyncTask" new="com.xabber.android.ui.c_M">
   <method old="doInBackground([Ljava/lang/Object;)Ljava/lang/Object;" new="doInBackground"/>
   <method old="doInBackground([Ljava/lang/Void;)Ljava/io/File;" new="m_tDa"/>
   <method old="onPostExecute(Ljava/io/File;)V" new="m_TFa"/>
   <method old="onPostExecute(Ljava/lang/Object;)V" new="onPostExecute"/>
   <field old="builder Lcom/xabber/android/ui/dialog/ExportChatDialogBuilder;" new="f_e"/>
   <field old="this$0 Lcom/xabber/android/ui/ChatViewer;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.roster.ResourceContainer" new="com.xabber.android.data.roster.ResourceContainer">
   <method old="get(Ljava/lang/String;)Lcom/xabber/android/data/roster/ResourceItem;" new="m_yda"/>
   <method old="getBest()Lcom/xabber/android/data/roster/ResourceItem;" new="m_DDa"/>
   <method old="getResourceItems()Ljava/util/Collection;" new="m_vDa"/>
   <method old="put(Ljava/lang/String;Lcom/xabber/android/data/roster/ResourceItem;)V" new="m_sea"/>
   <method old="remove(Ljava/lang/String;)V" new="m_Tfa"/>
   <method old="updateBest()V" new="m_cfa"/>
   <field old="best Lcom/xabber/android/data/roster/ResourceItem;" new="f_e"/>
   <field old="resourceItems Ljava/util/Map;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.socks5.Socks5Utils" new="org.jivesoftware.smackx.bytestreams.socks5.c_H">
   <method old="createDigest(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" new="m_pN"/>
   <method old="receiveSocks5Message(Ljava/io/DataInputStream;)[B" new="m_TN"/>
  </class>
  <class old="com.xabber.android.data.extension.otr.SMProgress" new="com.xabber.android.data.extension.otr.c_H">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="compareTo(Lcom/xabber/android/data/entity/BaseEntity;)I" new="m_bCa"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="equals(Ljava/lang/String;Ljava/lang/String;)Z" new="m_Bba"/>
   <method old="getAccount()Ljava/lang/String;" new="m_FC"/>
   <method old="getIntent()Landroid/content/Intent;" new="m_db"/>
   <method old="getText()Ljava/lang/String;" new="m_ZA"/>
   <method old="getTitle()Ljava/lang/String;" new="m_zb"/>
   <method old="getUser()Ljava/lang/String;" new="m_TA"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="account Ljava/lang/String;" new="f_m"/>
   <field old="user Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.generators.DHKeyPairGenerator" new="wy.c_dc">
   <method old="generateKeyPair()Lnet/java/otr4j/bouncycastle/crypto/AsymmetricCipherKeyPair;" new="m_wc"/>
   <method old="init(Lnet/java/otr4j/bouncycastle/crypto/KeyGenerationParameters;)V" new="m_kA"/>
   <field old="param Lnet/java/otr4j/bouncycastle/crypto/params/DHKeyGenerationParameters;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.BytestreamManager" new="org.jivesoftware.smackx.bytestreams.c_A">
   <method old="addIncomingBytestreamListener(Lorg/jivesoftware/smackx/bytestreams/BytestreamListener;)V" new="m_wa"/>
   <method old="addIncomingBytestreamListener(Lorg/jivesoftware/smackx/bytestreams/BytestreamListener;Ljava/lang/String;)V" new="m_Qa"/>
   <method old="establishSession(Ljava/lang/String;)Lorg/jivesoftware/smackx/bytestreams/BytestreamSession;" new="m_na"/>
   <method old="establishSession(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smackx/bytestreams/BytestreamSession;" new="m_qa"/>
   <method old="removeIncomingBytestreamListener(Ljava/lang/String;)V" new="m_ua"/>
   <method old="removeIncomingBytestreamListener(Lorg/jivesoftware/smackx/bytestreams/BytestreamListener;)V" new="m_Sa"/>
  </class>
  <class old="com.xabber.android.ui.adapter.ComparatorByStatus" new="com.xabber.android.ui.adapter.c_g">
   <method old="compare(Lcom/xabber/android/data/roster/AbstractContact;Lcom/xabber/android/data/roster/AbstractContact;)I" new="m_zCa"/>
   <method old="compare(Ljava/lang/Object;Ljava/lang/Object;)I" new="compare"/>
   <field old="COMPARATOR_BY_NAME Lcom/xabber/android/ui/adapter/ComparatorByName;" new="f_m"/>
   <field old="COMPARATOR_BY_STATUS Lcom/xabber/android/ui/adapter/ComparatorByStatus;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream" new="org.jivesoftware.smackx.bytestreams.socks5.packet.c_B">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="addStreamHost(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smackx/bytestreams/socks5/packet/Bytestream$StreamHost;" new="m_sn"/>
   <method old="addStreamHost(Ljava/lang/String;Ljava/lang/String;I)Lorg/jivesoftware/smackx/bytestreams/socks5/packet/Bytestream$StreamHost;" new="m_Jm"/>
   <method old="addStreamHost(Lorg/jivesoftware/smackx/bytestreams/socks5/packet/Bytestream$StreamHost;)V" new="m_RO"/>
   <method old="countStreamHosts()I" new="m_rO"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getMode()Lorg/jivesoftware/smackx/bytestreams/socks5/packet/Bytestream$Mode;" new="m_de"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getSessionID()Ljava/lang/String;" new="m_Ba"/>
   <method old="getStreamHost(Ljava/lang/String;)Lorg/jivesoftware/smackx/bytestreams/socks5/packet/Bytestream$StreamHost;" new="m_xo"/>
   <method old="getStreamHosts()Ljava/util/Collection;" new="m_em"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getToActivate()Lorg/jivesoftware/smackx/bytestreams/socks5/packet/Bytestream$Activate;" new="m_gm"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getUsedHost()Lorg/jivesoftware/smackx/bytestreams/socks5/packet/Bytestream$StreamHostUsed;" new="m_Rn"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setMode(Lorg/jivesoftware/smackx/bytestreams/socks5/packet/Bytestream$Mode;)V" new="m_go"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setSessionID(Ljava/lang/String;)V" new="m_gn"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setToActivate(Ljava/lang/String;)V" new="m_po"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="setUsedHost(Ljava/lang/String;)V" new="m_Vm"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="mode Lorg/jivesoftware/smackx/bytestreams/socks5/packet/Bytestream$Mode;" new="f_d"/>
   <field old="sessionID Ljava/lang/String;" new="f_b"/>
   <field old="streamHosts Ljava/util/List;" new="f_e"/>
   <field old="toActivate Lorg/jivesoftware/smackx/bytestreams/socks5/packet/Bytestream$Activate;" new="f_B"/>
   <field old="usedHost Lorg/jivesoftware/smackx/bytestreams/socks5/packet/Bytestream$StreamHostUsed;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.entity.NestedMap$EntryIterator" new="wy.c_MB">
   <method old="hasNext()Z" new="hasNext"/>
   <method old="next()Lcom/xabber/android/data/entity/NestedMap$Entry;" new="m_Eq"/>
   <method old="next()Ljava/lang/Object;" new="next"/>
   <method old="remove()V" new="remove"/>
   <field old="firstIterator Ljava/util/Iterator;" new="f_b"/>
   <field old="nested Ljava/util/Map$Entry;" new="f_d"/>
   <field old="secondIterator Ljava/util/Iterator;" new="f_m"/>
   <field old="this$0 Lcom/xabber/android/data/entity/NestedMap;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smack.RosterEntry" new="org.jivesoftware.smack.RosterEntry">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="equalsDeep(Ljava/lang/Object;)Z" new="m_tw"/>
   <method old="getGroups()Ljava/util/Collection;" new="m_pK"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getStatus()Lorg/jivesoftware/smack/packet/RosterPacket$ItemStatus;" new="m_yL"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/RosterPacket$ItemType;" new="m_b"/>
   <method old="getUser()Ljava/lang/String;" new="m_TA"/>
   <method old="setName(Ljava/lang/String;)V" new="m_Xl"/>
   <method old="toRosterItem(Lorg/jivesoftware/smack/RosterEntry;)Lorg/jivesoftware/smack/packet/RosterPacket$Item;" new="m_ku"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="updateState(Ljava/lang/String;Lorg/jivesoftware/smack/packet/RosterPacket$ItemType;Lorg/jivesoftware/smack/packet/RosterPacket$ItemStatus;)V" new="m_YR"/>
   <field old="connection Lorg/jivesoftware/smack/Connection;" new="f_d"/>
   <field old="name Ljava/lang/String;" new="f_e"/>
   <field old="roster Lorg/jivesoftware/smack/Roster;" new="f_m"/>
   <field old="status Lorg/jivesoftware/smack/packet/RosterPacket$ItemStatus;" new="f_B"/>
   <field old="type Lorg/jivesoftware/smack/packet/RosterPacket$ItemType;" new="f_b"/>
   <field old="user Ljava/lang/String;" new="f_j"/>
  </class>
  <class old="com.xabber.android.ui.helper.BaseSettingsActivity" new="com.xabber.android.ui.helper.BaseSettingsActivity">
   <method old="getBoolean(Ljava/util/Map;I)Z" new="m_gba"/>
   <method old="getInt(Ljava/util/Map;I)I" new="m_YCa"/>
   <method old="getPrefecence(Landroid/preference/Preference;Ljava/util/Map;)Ljava/lang/Object;" new="m_uba"/>
   <method old="getPreferences(Ljava/util/Map;)Ljava/util/Map;" new="m_gca"/>
   <method old="getString(Ljava/util/Map;I)Ljava/lang/String;" new="m_VAa"/>
   <method old="getUri(Ljava/util/Map;I)Landroid/net/Uri;" new="m_nCa"/>
   <method old="getValues()Ljava/util/Map;" new="m_bQ"/>
   <method old="hasChanges(Ljava/util/Map;Ljava/util/Map;I)Z" new="m_Gba"/>
   <method old="hasChanges(Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;)Z" new="m_qCa"/>
   <method old="isInitialChange()Z" new="m_qAa"/>
   <method old="onActivityResult(IILandroid/content/Intent;)V" new="onActivityResult"/>
   <method old="onCreate(Landroid/os/Bundle;)V" new="onCreate"/>
   <method old="onCreateDialog(I)Landroid/app/Dialog;" new="onCreateDialog"/>
   <method old="onCreateOptionsMenu(Landroid/view/Menu;)Z" new="onCreateOptionsMenu"/>
   <method old="onDestroy()V" new="onDestroy"/>
   <method old="onInflate(Landroid/os/Bundle;)V" new="m_TBa"/>
   <method old="onKeyDown(ILandroid/view/KeyEvent;)Z" new="onKeyDown"/>
   <method old="onNewIntent(Landroid/content/Intent;)V" new="onNewIntent"/>
   <method old="onOptionsItemSelected(Landroid/view/MenuItem;)Z" new="onOptionsItemSelected"/>
   <method old="onPause()V" new="onPause"/>
   <method old="onPreferenceChange(Landroid/preference/Preference;Ljava/lang/Object;)Z" new="onPreferenceChange"/>
   <method old="onResume()V" new="onResume"/>
   <method old="operation(Lcom/xabber/android/ui/helper/BaseSettingsActivity$Operation;)Z" new="m_NBa"/>
   <method old="putValue(Ljava/util/Map;ILjava/lang/Object;)V" new="m_Ida"/>
   <method old="setPreference(Landroid/preference/Preference;Ljava/lang/Object;)V" new="m_xAa"/>
   <method old="setPreferences(Ljava/util/Map;)V" new="m_sca"/>
   <method old="setValues(Ljava/util/Map;Ljava/util/Map;)Z" new="m_eba"/>
   <method old="startActivity(Landroid/content/Intent;)V" new="startActivity"/>
   <method old="startActivityForResult(Landroid/content/Intent;I)V" new="startActivityForResult"/>
   <field old="CONFIRM_DIALOG_ID I" new="f_m"/>
   <field old="MENU_CANCEL I" new="f_e"/>
   <field old="MENU_SAVE I" new="f_b"/>
   <field old="initialChange Z" new="f_d"/>
  </class>
  <class old="org.xbill.DNS.AAAARecord" new="org.xbill.DNS.c_RB">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getAddress()Ljava/net/InetAddress;" new="m_kf"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="address Ljava/net/InetAddress;" new="f_m"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="serialVersionUID J" new="f_e"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smackx.provider.HeaderProvider" new="org.jivesoftware.smackx.provider.c_c">
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_I"/>
  </class>
  <class old="com.jcraft.jzlib.Deflate$Config" new="wy.c_wb">
   <field old="func I" new="f_B"/>
   <field old="good_length I" new="f_d"/>
   <field old="max_chain I" new="f_e"/>
   <field old="max_lazy I" new="f_m"/>
   <field old="nice_length I" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.roster.SyncManager$1" new="com.xabber.android.data.roster.c_d">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/roster/SyncManager;" new="f_e"/>
   <field old="val$rosterContacts Ljava/util/ArrayList;" new="f_b"/>
   <field old="val$rosterGroups Ljava/util/ArrayList;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.Lookup" new="org.xbill.DNS.c_ua">
   <method old="checkDone()V" new="m_BG"/>
   <method old="follow(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)V" new="m_xG"/>
   <method old="getAliases()[Lorg/xbill/DNS/Name;" new="m_Sg"/>
   <method old="getAnswers()[Lorg/xbill/DNS/Record;" new="m_vi"/>
   <method old="getDefaultCache(I)Lorg/xbill/DNS/Cache;" new="m_IG"/>
   <method old="getDefaultResolver()Lorg/xbill/DNS/Resolver;" new="m_Ki"/>
   <method old="getDefaultSearchPath()[Lorg/xbill/DNS/Name;" new="m_aH"/>
   <method old="getErrorString()Ljava/lang/String;" new="m_Fh"/>
   <method old="getResult()I" new="m_rg"/>
   <method old="lookup(Lorg/xbill/DNS/Name;)V" new="m_Li"/>
   <method old="processResponse(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/SetResponse;)V" new="m_KH"/>
   <method old="refreshDefault()V" new="m_Gh"/>
   <method old="reset()V" new="m_ld"/>
   <method old="resolve(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)V" new="m_YG"/>
   <method old="run()[Lorg/xbill/DNS/Record;" new="m_sA"/>
   <method old="setCache(Lorg/xbill/DNS/Cache;)V" new="m_fG"/>
   <method old="setCredibility(I)V" new="m_Hi"/>
   <method old="setDefaultCache(Lorg/xbill/DNS/Cache;I)V" new="m_gG"/>
   <method old="setDefaultResolver(Lorg/xbill/DNS/Resolver;)V" new="m_YH"/>
   <method old="setDefaultSearchPath([Ljava/lang/String;)V" new="m_mG"/>
   <method old="setDefaultSearchPath([Lorg/xbill/DNS/Name;)V" new="m_zg"/>
   <method old="setNdots(I)V" new="m_Ci"/>
   <method old="setResolver(Lorg/xbill/DNS/Resolver;)V" new="m_GG"/>
   <method old="setSearchPath([Ljava/lang/String;)V" new="m_iG"/>
   <method old="setSearchPath([Lorg/xbill/DNS/Name;)V" new="m_lG"/>
   <field old="HOST_NOT_FOUND I" new="f_p"/>
   <field old="SUCCESSFUL I" new="f_a"/>
   <field old="TRY_AGAIN I" new="f_Z"/>
   <field old="TYPE_NOT_FOUND I" new="f_h"/>
   <field old="UNRECOVERABLE I" new="f_B"/>
   <field old="aliases Ljava/util/List;" new="f_l"/>
   <field old="answers [Lorg/xbill/DNS/Record;" new="f_M"/>
   <field old="badresponse Z" new="f_g"/>
   <field old="badresponse_error Ljava/lang/String;" new="f_P"/>
   <field old="cache Lorg/xbill/DNS/Cache;" new="f_C"/>
   <field old="credibility I" new="f_K"/>
   <field old="dclass I" new="f_Y"/>
   <field old="defaultCaches Ljava/util/Map;" new="f_I"/>
   <field old="defaultNdots I" new="f_m"/>
   <field old="defaultResolver Lorg/xbill/DNS/Resolver;" new="f_A"/>
   <field old="defaultSearchPath [Lorg/xbill/DNS/Name;" new="f_F"/>
   <field old="done Z" new="f_f"/>
   <field old="doneCurrent Z" new="f_u"/>
   <field old="error Ljava/lang/String;" new="f_E"/>
   <field old="foundAlias Z" new="f_e"/>
   <field old="iterations I" new="f_J"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_o"/>
   <field old="nametoolong Z" new="f_b"/>
   <field old="networkerror Z" new="f_j"/>
   <field old="noAliases [Lorg/xbill/DNS/Name;" new="f_D"/>
   <field old="nxdomain Z" new="f_L"/>
   <field old="referral Z" new="f_S"/>
   <field old="resolver Lorg/xbill/DNS/Resolver;" new="f_i"/>
   <field old="result I" new="f_c"/>
   <field old="searchPath [Lorg/xbill/DNS/Name;" new="f_d"/>
   <field old="temporary_cache Z" new="f_k"/>
   <field old="timedout Z" new="f_G"/>
   <field old="type I" new="f_H"/>
   <field old="verbose Z" new="f_y"/>
  </class>
  <class old="com.xabber.android.data.roster.SyncManager$2" new="com.xabber.android.data.roster.c_a">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/roster/SyncManager;" new="f_e"/>
   <field old="val$removeGroupIds Ljava/util/ArrayList;" new="f_m"/>
   <field old="val$removeRawIds Ljava/util/ArrayList;" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.roster.SyncManager$3" new="com.xabber.android.data.roster.c_D">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/roster/SyncManager;" new="f_m"/>
   <field old="val$addedContacts Ljava/util/Map;" new="f_l"/>
   <field old="val$addedGroupReference Ljava/util/Map;" new="f_e"/>
   <field old="val$addedGroups Ljava/util/Collection;" new="f_j"/>
   <field old="val$removedContacts Ljava/util/Collection;" new="f_B"/>
   <field old="val$removedGroupReference Ljava/util/Map;" new="f_b"/>
   <field old="val$removedGroups Ljava/util/Collection;" new="f_k"/>
   <field old="val$renamedContacts Ljava/util/Map;" new="f_d"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.MultipleAddresses" new="org.jivesoftware.smackx.packet.c_Aa">
   <method old="addAddress(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V" new="m_zl"/>
   <method old="getAddressesOfType(Ljava/lang/String;)Ljava/util/List;" new="m_tk"/>
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="setNoReply()V" new="m_sK"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="BCC Ljava/lang/String;" new="f_k"/>
   <field old="CC Ljava/lang/String;" new="f_e"/>
   <field old="NO_REPLY Ljava/lang/String;" new="f_B"/>
   <field old="REPLY_ROOM Ljava/lang/String;" new="f_m"/>
   <field old="REPLY_TO Ljava/lang/String;" new="f_j"/>
   <field old="TO Ljava/lang/String;" new="f_b"/>
   <field old="addresses Ljava/util/List;" new="f_d"/>
  </class>
  <class old="com.xabber.android.data.roster.SyncManager$4" new="com.xabber.android.data.roster.c_c">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/roster/SyncManager;" new="f_e"/>
   <field old="val$rosterContacts Ljava/util/Collection;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.roster.SyncManager$5" new="com.xabber.android.data.roster.c_K">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/roster/SyncManager;" new="f_m"/>
   <field old="val$rosterContact Lcom/xabber/android/data/roster/RosterContact;" new="f_b"/>
   <field old="val$structuredName Lcom/xabber/android/data/roster/StructuredName;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.roster.SyncManager$6" new="com.xabber.android.data.roster.c_G">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/roster/SyncManager;" new="f_d"/>
   <field old="val$accountItem Lcom/xabber/android/data/account/AccountItem;" new="f_j"/>
   <field old="val$groupReferencesForContacts Ljava/util/HashMap;" new="f_e"/>
   <field old="val$nickNamesForContacts Ljava/util/HashMap;" new="f_m"/>
   <field old="val$rosterGroups Ljava/util/ArrayList;" new="f_b"/>
   <field old="val$structuredNamesForContacts Ljava/util/HashMap;" new="f_B"/>
  </class>
  <class old="org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceMapIterator" new="org.jivesoftware.smack.util.collections.c_e">
   <method old="currentEntry()Lorg/jivesoftware/smack/util/collections/AbstractReferenceMap$ReferenceEntry;" new="m_yQ"/>
   <method old="getKey()Ljava/lang/Object;" new="m_xa"/>
   <method old="getValue()Ljava/lang/Object;" new="m_Ra"/>
   <method old="hasNext()Z" new="hasNext"/>
   <method old="next()Ljava/lang/Object;" new="next"/>
   <method old="nextEntry()Lorg/jivesoftware/smack/util/collections/AbstractReferenceMap$ReferenceEntry;" new="m_Kq"/>
   <method old="remove()V" new="remove"/>
   <method old="setValue(Ljava/lang/Object;)Ljava/lang/Object;" new="m_Xa"/>
   <method old="superNext()Lorg/jivesoftware/smack/util/collections/AbstractReferenceMap$ReferenceEntry;" new="m_cr"/>
   <field old="currentKey Ljava/lang/Object;" new="f_b"/>
   <field old="currentValue Ljava/lang/Object;" new="f_m"/>
   <field old="entry Lorg/jivesoftware/smack/util/collections/AbstractReferenceMap$ReferenceEntry;" new="f_f"/>
   <field old="expectedModCount I" new="f_l"/>
   <field old="index I" new="f_k"/>
   <field old="nextKey Ljava/lang/Object;" new="f_e"/>
   <field old="nextValue Ljava/lang/Object;" new="f_j"/>
   <field old="parent Lorg/jivesoftware/smack/util/collections/AbstractReferenceMap;" new="f_d"/>
   <field old="previous Lorg/jivesoftware/smack/util/collections/AbstractReferenceMap$ReferenceEntry;" new="f_B"/>
  </class>
  <class old="com.xabber.android.data.roster.SyncManager$7" new="com.xabber.android.data.roster.c_k">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/roster/SyncManager;" new="f_d"/>
   <field old="val$accountItem Lcom/xabber/android/data/account/AccountItem;" new="f_j"/>
   <field old="val$groupReferencesForContacts Ljava/util/HashMap;" new="f_B"/>
   <field old="val$nickNamesForContacts Ljava/util/HashMap;" new="f_b"/>
   <field old="val$rosterGroups Ljava/util/ArrayList;" new="f_m"/>
   <field old="val$structuredNamesForContacts Ljava/util/HashMap;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.roster.SyncManager$8" new="com.xabber.android.data.roster.c_f">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/roster/SyncManager;" new="f_e"/>
   <field old="val$accounts [Landroid/accounts/Account;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.roster.SyncManager$9" new="com.xabber.android.data.roster.c_j">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/roster/SyncManager;" new="f_e"/>
   <field old="val$accounts Ljava/util/Collection;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$MessageIBBInputStream" new="org.jivesoftware.smackx.bytestreams.ibb.c_j">
   <method old="access$400(Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamSession$IBBInputStream;)I" new="m_oO"/>
   <method old="access$402(Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamSession$IBBInputStream;I)I" new="m_bO"/>
   <method old="access$500(Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamSession$IBBInputStream;)V" new="m_om"/>
   <method old="access$600(Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamSession$IBBInputStream;)V" new="m_mm"/>
   <method old="access$700(Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamSession$IBBInputStream;)Z" new="m_fm"/>
   <method old="close()V" new="close"/>
   <method old="getDataPacketFilter()Lorg/jivesoftware/smack/filter/PacketFilter;" new="m_bM"/>
   <method old="getDataPacketListener()Lorg/jivesoftware/smack/PacketListener;" new="m_jN"/>
   <method old="markSupported()Z" new="markSupported"/>
   <method old="read()I" new="read"/>
   <method old="read([B)I" new="read"/>
   <method old="read([BII)I" new="read"/>
   <field old="dataQueue Ljava/util/concurrent/BlockingQueue;" new="f_e"/>
   <field old="this$0 Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamSession;" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smack.util.collections.EmptyMapIterator" new="org.jivesoftware.smack.util.collections.c_J">
   <method old="add(Ljava/lang/Object;)V" new="m_AQ"/>
   <method old="getKey()Ljava/lang/Object;" new="m_xa"/>
   <method old="getValue()Ljava/lang/Object;" new="m_Ra"/>
   <method old="hasNext()Z" new="hasNext"/>
   <method old="hasPrevious()Z" new="m_sr"/>
   <method old="next()Ljava/lang/Object;" new="next"/>
   <method old="nextIndex()I" new="m_Oq"/>
   <method old="previous()Ljava/lang/Object;" new="m_ar"/>
   <method old="previousIndex()I" new="m_aP"/>
   <method old="remove()V" new="remove"/>
   <method old="reset()V" new="m_ld"/>
   <method old="set(Ljava/lang/Object;)V" new="m_dr"/>
   <method old="setValue(Ljava/lang/Object;)Ljava/lang/Object;" new="m_Xa"/>
   <field old="INSTANCE Lorg/jivesoftware/smack/util/collections/MapIterator;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.ChatState" new="org.jivesoftware.smackx.ChatState">
   <method old="valueOf(Ljava/lang/String;)Lorg/jivesoftware/smackx/ChatState;" new="valueOf"/>
   <method old="values()[Lorg/jivesoftware/smackx/ChatState;" new="values"/>
   <field old="$VALUES [Lorg/jivesoftware/smackx/ChatState;" new="f_e"/>
   <field old="active Lorg/jivesoftware/smackx/ChatState;" new="f_d"/>
   <field old="composing Lorg/jivesoftware/smackx/ChatState;" new="f_m"/>
   <field old="gone Lorg/jivesoftware/smackx/ChatState;" new="f_j"/>
   <field old="inactive Lorg/jivesoftware/smackx/ChatState;" new="f_b"/>
   <field old="paused Lorg/jivesoftware/smackx/ChatState;" new="f_B"/>
  </class>
  <class old="org.xbill.DNS.SOARecord" new="org.xbill.DNS.c_V">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getAdmin()Lorg/xbill/DNS/Name;" new="m_TE"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getExpire()J" new="m_Fg"/>
   <method old="getHost()Lorg/xbill/DNS/Name;" new="m_vD"/>
   <method old="getMinimum()J" new="m_ze"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getRefresh()J" new="m_Qf"/>
   <method old="getRetry()J" new="m_Zd"/>
   <method old="getSerial()J" new="m_Yd"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="admin Lorg/xbill/DNS/Name;" new="f_k"/>
   <field old="dclass I" new="f_m"/>
   <field old="expire J" new="f_e"/>
   <field old="host Lorg/xbill/DNS/Name;" new="f_l"/>
   <field old="minimum J" new="f_B"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="refresh J" new="f_m"/>
   <field old="retry J" new="f_b"/>
   <field old="serial J" new="f_I"/>
   <field old="serialVersionUID J" new="f_f"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.params.DHValidationParameters" new="wy.c_hb">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getCounter()I" new="m_vX"/>
   <method old="getSeed()[B" new="m_haa"/>
   <method old="hashCode()I" new="hashCode"/>
   <field old="counter I" new="f_m"/>
   <field old="seed [B" new="f_e"/>
  </class>
  <class old="com.xabber.xmpp.muc.Role" new="com.xabber.xmpp.muc.Role">
   <method old="fromString(Ljava/lang/String;)Lcom/xabber/xmpp/muc/Role;" new="m_tc"/>
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/xmpp/muc/Role;" new="valueOf"/>
   <method old="values()[Lcom/xabber/xmpp/muc/Role;" new="values"/>
   <field old="$VALUES [Lcom/xabber/xmpp/muc/Role;" new="f_m"/>
   <field old="moderator Lcom/xabber/xmpp/muc/Role;" new="moderator"/>
   <field old="none Lcom/xabber/xmpp/muc/Role;" new="none"/>
   <field old="participant Lcom/xabber/xmpp/muc/Role;" new="participant"/>
   <field old="visitor Lcom/xabber/xmpp/muc/Role;" new="visitor"/>
  </class>
  <class old="net.java.otr4j.OtrPolicyImpl" new="net.java.otr4j.c_f">
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getAllowV1()Z" new="m_Jc"/>
   <method old="getAllowV2()Z" new="m_PA"/>
   <method old="getEnableAlways()Z" new="m_oA"/>
   <method old="getEnableManual()Z" new="m_Cc"/>
   <method old="getErrorStartAKE()Z" new="m_jB"/>
   <method old="getPolicy()I" new="m_Pc"/>
   <method old="getRequireEncryption()Z" new="m_fc"/>
   <method old="getSendWhitespaceTag()Z" new="m_Kb"/>
   <method old="getWhitespaceStartAKE()Z" new="m_yA"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="setAllowV1(Z)V" new="m_pB"/>
   <method old="setAllowV2(Z)V" new="m_Vc"/>
   <method old="setEnableAlways(Z)V" new="m_Fc"/>
   <method old="setEnableManual(Z)V" new="m_Od"/>
   <method old="setErrorStartAKE(Z)V" new="m_ZC"/>
   <method old="setPolicy(I)V" new="m_UX"/>
   <method old="setRequireEncryption(Z)V" new="m_mC"/>
   <method old="setSendWhitespaceTag(Z)V" new="m_Kc"/>
   <method old="setWhitespaceStartAKE(Z)V" new="m_lc"/>
   <field old="ALLOW_V1 I" new="f_j"/>
   <field old="ALLOW_V2 I" new="f_K"/>
   <field old="ERROR_START_AKE I" new="f_B"/>
   <field old="NEVER I" new="f_m"/>
   <field old="OPPORTUNISTIC I" new="f_J"/>
   <field old="OTRL_POLICY_ALWAYS I" new="f_f"/>
   <field old="OTRL_POLICY_DEFAULT I" new="f_d"/>
   <field old="OTRL_POLICY_MANUAL I" new="f_I"/>
   <field old="REQUIRE_ENCRYPTION I" new="f_k"/>
   <field old="SEND_WHITESPACE_TAG I" new="f_e"/>
   <field old="VERSION_MASK I" new="f_l"/>
   <field old="WHITESPACE_START_AKE I" new="f_b"/>
   <field old="policy I" new="f_D"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.HeadersExtension" new="org.jivesoftware.smackx.packet.c_Q">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getHeaders()Ljava/util/Collection;" new="m_GJ"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="NAMESPACE Ljava/lang/String;" new="f_e"/>
   <field old="headers Ljava/util/Collection;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.FormField" new="org.jivesoftware.smackx.c_y">
   <method old="addOption(Lorg/jivesoftware/smackx/FormField$Option;)V" new="m_xP"/>
   <method old="addValue(Ljava/lang/String;)V" new="m_lR"/>
   <method old="addValues(Ljava/util/List;)V" new="m_OP"/>
   <method old="getDescription()Ljava/lang/String;" new="m_XK"/>
   <method old="getLabel()Ljava/lang/String;" new="m_DP"/>
   <method old="getOptions()Ljava/util/Iterator;" new="m_PG"/>
   <method old="getType()Ljava/lang/String;" new="m_b"/>
   <method old="getValues()Ljava/util/Iterator;" new="m_bQ"/>
   <method old="getVariable()Ljava/lang/String;" new="m_tr"/>
   <method old="isRequired()Z" new="m_ep"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="resetValues()V" new="m_Pp"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="setDescription(Ljava/lang/String;)V" new="m_Sl"/>
   <method old="setLabel(Ljava/lang/String;)V" new="m_er"/>
   <method old="setRequired(Z)V" new="m_eR"/>
   <method old="setType(Ljava/lang/String;)V" new="m_Al"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="TYPE_BOOLEAN Ljava/lang/String;" new="f_M"/>
   <field old="TYPE_FIXED Ljava/lang/String;" new="f_J"/>
   <field old="TYPE_HIDDEN Ljava/lang/String;" new="f_f"/>
   <field old="TYPE_JID_MULTI Ljava/lang/String;" new="f_d"/>
   <field old="TYPE_JID_SINGLE Ljava/lang/String;" new="f_D"/>
   <field old="TYPE_LIST_MULTI Ljava/lang/String;" new="f_K"/>
   <field old="TYPE_LIST_SINGLE Ljava/lang/String;" new="f_m"/>
   <field old="TYPE_TEXT_MULTI Ljava/lang/String;" new="f_g"/>
   <field old="TYPE_TEXT_PRIVATE Ljava/lang/String;" new="f_b"/>
   <field old="TYPE_TEXT_SINGLE Ljava/lang/String;" new="f_j"/>
   <field old="description Ljava/lang/String;" new="f_l"/>
   <field old="label Ljava/lang/String;" new="f_G"/>
   <field old="options Ljava/util/List;" new="f_e"/>
   <field old="required Z" new="f_k"/>
   <field old="type Ljava/lang/String;" new="f_B"/>
   <field old="values Ljava/util/List;" new="f_H"/>
   <field old="variable Ljava/lang/String;" new="f_I"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.MUCOwner$Item" new="org.jivesoftware.smackx.packet.c_X">
   <method old="getActor()Ljava/lang/String;" new="m_uJ"/>
   <method old="getAffiliation()Ljava/lang/String;" new="m_Ck"/>
   <method old="getJid()Ljava/lang/String;" new="m_tL"/>
   <method old="getNick()Ljava/lang/String;" new="m_Ql"/>
   <method old="getReason()Ljava/lang/String;" new="m_zj"/>
   <method old="getRole()Ljava/lang/String;" new="m_ul"/>
   <method old="setActor(Ljava/lang/String;)V" new="m_sj"/>
   <method old="setJid(Ljava/lang/String;)V" new="m_AJ"/>
   <method old="setNick(Ljava/lang/String;)V" new="m_Pj"/>
   <method old="setReason(Ljava/lang/String;)V" new="m_QJ"/>
   <method old="setRole(Ljava/lang/String;)V" new="m_jJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="actor Ljava/lang/String;" new="f_b"/>
   <field old="affiliation Ljava/lang/String;" new="f_B"/>
   <field old="jid Ljava/lang/String;" new="f_j"/>
   <field old="nick Ljava/lang/String;" new="f_d"/>
   <field old="reason Ljava/lang/String;" new="f_m"/>
   <field old="role Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.util.encoders.HexEncoder" new="wy.c_RA">
   <method old="decode(Ljava/lang/String;Ljava/io/OutputStream;)I" new="m_sd"/>
   <method old="decode([BIILjava/io/OutputStream;)I" new="m_rA"/>
   <method old="encode([BIILjava/io/OutputStream;)I" new="m_kB"/>
   <method old="ignore(C)Z" new="m_jaa"/>
   <method old="initialiseDecodingTable()V" new="m_yY"/>
   <field old="decodingTable [B" new="f_e"/>
   <field old="encodingTable [B" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.muc.ParticipantStatusListener" new="org.jivesoftware.smackx.muc.c_m">
   <method old="adminGranted(Ljava/lang/String;)V" new="m_ka"/>
   <method old="adminRevoked(Ljava/lang/String;)V" new="m_Ma"/>
   <method old="banned(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_p"/>
   <method old="joined(Ljava/lang/String;)V" new="m_Y"/>
   <method old="kicked(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" new="m_ea"/>
   <method old="left(Ljava/lang/String;)V" new="m_ha"/>
   <method old="membershipGranted(Ljava/lang/String;)V" new="m_Ca"/>
   <method old="membershipRevoked(Ljava/lang/String;)V" new="m_da"/>
   <method old="moderatorGranted(Ljava/lang/String;)V" new="m_Ia"/>
   <method old="moderatorRevoked(Ljava/lang/String;)V" new="m_Ka"/>
   <method old="nicknameChanged(Ljava/lang/String;Ljava/lang/String;)V" new="m_La"/>
   <method old="ownershipGranted(Ljava/lang/String;)V" new="m_Aa"/>
   <method old="ownershipRevoked(Ljava/lang/String;)V" new="m_ia"/>
   <method old="voiceGranted(Ljava/lang/String;)V" new="m_aa"/>
   <method old="voiceRevoked(Ljava/lang/String;)V" new="m_fa"/>
  </class>
  <class old="com.xabber.xmpp.archive.ScopeMode" new="com.xabber.xmpp.archive.ScopeMode">
   <method old="fromString(Ljava/lang/String;)Lcom/xabber/xmpp/archive/ScopeMode;" new="m_tc"/>
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/xmpp/archive/ScopeMode;" new="valueOf"/>
   <method old="values()[Lcom/xabber/xmpp/archive/ScopeMode;" new="values"/>
   <field old="$VALUES [Lcom/xabber/xmpp/archive/ScopeMode;" new="f_b"/>
   <field old="global Lcom/xabber/xmpp/archive/ScopeMode;" new="f_m"/>
   <field old="stream Lcom/xabber/xmpp/archive/ScopeMode;" new="f_e"/>
  </class>
  <class old="org.xbill.DNS.WKSRecord" new="org.xbill.DNS.c_G">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getAddress()Ljava/net/InetAddress;" new="m_kf"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getProtocol()I" new="m_jF"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getServices()[I" new="m_fE"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="address [B" new="f_e"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="protocol I" new="f_d"/>
   <field old="serialVersionUID J" new="f_m"/>
   <field old="services [I" new="f_B"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="net.java.otr4j.io.SerializationConstants" new="net.java.otr4j.io.c_E">
   <field old="DATA_LEN I" new="f_D"/>
   <field old="ERROR_PREFIX Ljava/lang/String;" new="f_J"/>
   <field old="HEAD Ljava/lang/String;" new="f_k"/>
   <field old="HEAD_ENCODED C" new="f_b"/>
   <field old="HEAD_ERROR C" new="f_f"/>
   <field old="HEAD_QUERY_Q C" new="f_j"/>
   <field old="HEAD_QUERY_V C" new="f_B"/>
   <field old="TLV_LEN I" new="f_m"/>
   <field old="TYPE_LEN_BYTE I" new="f_e"/>
   <field old="TYPE_LEN_CTR I" new="f_d"/>
   <field old="TYPE_LEN_INT I" new="f_I"/>
   <field old="TYPE_LEN_MAC I" new="f_K"/>
   <field old="TYPE_LEN_SHORT I" new="f_l"/>
  </class>
  <class old="org.jivesoftware.smackx.ChatStateManager" new="org.jivesoftware.smackx.c_u">
   <method old="access$200(Lorg/jivesoftware/smackx/ChatStateManager;)Lorg/jivesoftware/smack/Connection;" new="m_iq"/>
   <method old="access$300(Lorg/jivesoftware/smackx/ChatStateManager;Lorg/jivesoftware/smack/Chat;Lorg/jivesoftware/smackx/ChatState;)Z" new="m_RQ"/>
   <method old="access$400(Lorg/jivesoftware/smackx/ChatStateManager;Lorg/jivesoftware/smack/Chat;Lorg/jivesoftware/smackx/ChatState;)V" new="m_Gq"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fireNewChatState(Lorg/jivesoftware/smack/Chat;Lorg/jivesoftware/smackx/ChatState;)V" new="m_DQ"/>
   <method old="getInstance(Lorg/jivesoftware/smack/Connection;)Lorg/jivesoftware/smackx/ChatStateManager;" new="m_qP"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="init()V" new="m_ZG"/>
   <method old="setCurrentState(Lorg/jivesoftware/smackx/ChatState;Lorg/jivesoftware/smack/Chat;)V" new="m_np"/>
   <method old="updateChatState(Lorg/jivesoftware/smack/Chat;Lorg/jivesoftware/smackx/ChatState;)Z" new="m_iP"/>
   <field old="chatStates Ljava/util/Map;" new="f_d"/>
   <field old="connection Lorg/jivesoftware/smack/Connection;" new="f_b"/>
   <field old="filter Lorg/jivesoftware/smack/filter/PacketFilter;" new="f_m"/>
   <field old="incomingInterceptor Lorg/jivesoftware/smackx/ChatStateManager$IncomingMessageInterceptor;" new="f_j"/>
   <field old="managers Ljava/util/Map;" new="f_e"/>
   <field old="outgoingInterceptor Lorg/jivesoftware/smackx/ChatStateManager$OutgoingMessageInterceptor;" new="f_B"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.login.LoginException" new="wy.c_va">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <field old="serialVersionUID J" new="f_m"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.Digest" new="net.java.otr4j.bouncycastle.crypto.c_M">
   <method old="doFinal([BI)I" new="m_sC"/>
   <method old="getAlgorithmName()Ljava/lang/String;" new="m_Bc"/>
   <method old="getDigestSize()I" new="m_yC"/>
   <method old="reset()V" new="m_ld"/>
   <method old="update(B)V" new="m_DA"/>
   <method old="update([BII)V" new="m_WC"/>
  </class>
  <class old="net.java.otr4j.session.SessionKeys" new="net.java.otr4j.session.c_E">
   <method old="getIsUsedReceivingMACKey()Ljava/lang/Boolean;" new="m_yc"/>
   <method old="getLocalKeyID()I" new="m_Gd"/>
   <method old="getLocalPair()Ljava/security/KeyPair;" new="m_AC"/>
   <method old="getReceivingAESKey()[B" new="m_PC"/>
   <method old="getReceivingCtr()[B" new="m_OB"/>
   <method old="getReceivingMACKey()[B" new="m_CC"/>
   <method old="getRemoteKey()Ljavax/crypto/interfaces/DHPublicKey;" new="m_Kd"/>
   <method old="getRemoteKeyID()I" new="m_dc"/>
   <method old="getSendingAESKey()[B" new="m_fB"/>
   <method old="getSendingCtr()[B" new="m_eB"/>
   <method old="getSendingMACKey()[B" new="m_qd"/>
   <method old="incrementSendingCtr()V" new="m_Pb"/>
   <method old="setIsUsedReceivingMACKey(Ljava/lang/Boolean;)V" new="m_hA"/>
   <method old="setLocalPair(Ljava/security/KeyPair;I)V" new="m_iC"/>
   <method old="setReceivingCtr([B)V" new="m_hb"/>
   <method old="setRemoteDHPublicKey(Ljavax/crypto/interfaces/DHPublicKey;I)V" new="m_fd"/>
   <method old="setS(Ljava/math/BigInteger;)V" new="m_GB"/>
   <field old="Current I" new="f_b"/>
   <field old="HIGH_RECEIVE_BYTE B" new="f_j"/>
   <field old="HIGH_SEND_BYTE B" new="f_B"/>
   <field old="LOW_RECEIVE_BYTE B" new="f_d"/>
   <field old="LOW_SEND_BYTE B" new="f_e"/>
   <field old="Previous I" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.connection.ConnectionManager" new="com.xabber.android.data.connection.c_X">
   <method old="forceReconnect()V" new="m_SKa"/>
   <method old="getInstance()Lcom/xabber/android/data/connection/ConnectionManager;" new="m_Xr"/>
   <method old="onAuthorized(Lcom/xabber/android/data/connection/ConnectionThread;)V" new="m_Jja"/>
   <method old="onClose()V" new="m_cc"/>
   <method old="onConnected(Lcom/xabber/android/data/connection/ConnectionThread;)V" new="m_dka"/>
   <method old="onConnection(Lcom/xabber/android/data/connection/ConnectionThread;)V" new="m_Uja"/>
   <method old="onDisconnect(Lcom/xabber/android/data/connection/ConnectionThread;)V" new="m_sja"/>
   <method old="onInitialized()V" new="m_ub"/>
   <method old="onTimer()V" new="m_VB"/>
   <method old="processPacket(Lcom/xabber/android/data/connection/ConnectionThread;Lorg/jivesoftware/smack/packet/Packet;)V" new="m_YJa"/>
   <method old="sendPacket(Ljava/lang/String;Lorg/jivesoftware/smack/packet/Packet;)V" new="m_gja"/>
   <method old="sendRequest(Ljava/lang/String;Lorg/jivesoftware/smack/packet/IQ;Lcom/xabber/android/data/connection/OnResponseListener;)V" new="m_gKa"/>
   <method old="updateConnections(Z)V" new="m_Nka"/>
   <field old="DELAY I" new="f_m"/>
   <field old="PACKET_REPLY_TIMEOUT I" new="f_b"/>
   <field old="TRUST_STORE_PATH Ljava/lang/String;" new="f_m"/>
   <field old="instance Lcom/xabber/android/data/connection/ConnectionManager;" new="f_e"/>
   <field old="managedConnections Ljava/util/Collection;" new="f_d"/>
   <field old="requests Lcom/xabber/android/data/entity/NestedMap;" new="f_B"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamSession" new="org.jivesoftware.smackx.bytestreams.socks5.c_f">
   <method old="close()V" new="m_la"/>
   <method old="getInputStream()Ljava/io/InputStream;" new="m_ma"/>
   <method old="getOutputStream()Ljava/io/OutputStream;" new="m_Da"/>
   <method old="getReadTimeout()I" new="m_ga"/>
   <method old="isDirect()Z" new="m_kM"/>
   <method old="isMediated()Z" new="m_Dm"/>
   <method old="setReadTimeout(I)V" new="m_za"/>
   <field old="isDirect Z" new="f_m"/>
   <field old="socket Ljava/net/Socket;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.filetransfer.Socks5TransferNegotiator$BytestreamSIDFilter" new="org.jivesoftware.smackx.filetransfer.c_A">
   <method old="accept(Lorg/jivesoftware/smack/packet/Packet;)Z" new="m_x"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="packetType Ljava/lang/Class;" new="f_m"/>
   <field old="sessionID Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.sasl.SASLMechanism$Challenge" new="wy.c_O">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="data Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.ibb.packet.Close" new="wy.c_T">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getSessionID()Ljava/lang/String;" new="m_Ba"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="sessionID Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.StreamInitiation$File" new="org.jivesoftware.smackx.packet.c_d">
   <method old="getDate()Ljava/util/Date;" new="m_FL"/>
   <method old="getDesc()Ljava/lang/String;" new="m_JK"/>
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getHash()Ljava/lang/String;" new="m_GK"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="getSize()J" new="m_DH"/>
   <method old="isRanged()Z" new="m_EJ"/>
   <method old="setDate(Ljava/util/Date;)V" new="m_Lk"/>
   <method old="setDesc(Ljava/lang/String;)V" new="m_Yk"/>
   <method old="setHash(Ljava/lang/String;)V" new="m_nj"/>
   <method old="setRanged(Z)V" new="m_WK"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="date Ljava/util/Date;" new="f_m"/>
   <field old="desc Ljava/lang/String;" new="f_e"/>
   <field old="hash Ljava/lang/String;" new="f_b"/>
   <field old="isRanged Z" new="f_B"/>
   <field old="name Ljava/lang/String;" new="f_j"/>
   <field old="size J" new="f_d"/>
  </class>
  <class old="org.xbill.DNS.ExtendedFlags" new="org.xbill.DNS.c_qa">
   <method old="string(I)Ljava/lang/String;" new="m_Wd"/>
   <method old="value(Ljava/lang/String;)I" new="m_le"/>
   <field old="DO I" new="f_e"/>
   <field old="extflags Lorg/xbill/DNS/Mnemonic;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.adapter.UpdatableAdapter" new="com.xabber.android.ui.adapter.c_E">
   <method old="onChange()V" new="m_cb"/>
  </class>
  <class old="org.xbill.DNS.SSHFPRecord$Digest" new="org.xbill.DNS.c_X">
   <field old="SHA1 I" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.util.collections.AbstractHashedMap$EntrySet" new="org.jivesoftware.smack.util.collections.c_L">
   <method old="clear()V" new="clear"/>
   <method old="contains(Ljava/util/Map$Entry;)Z" new="m_ur"/>
   <method old="iterator()Ljava/util/Iterator;" new="iterator"/>
   <method old="remove(Ljava/lang/Object;)Z" new="remove"/>
   <method old="size()I" new="size"/>
   <field old="parent Lorg/jivesoftware/smack/util/collections/AbstractHashedMap;" new="f_m"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.callback.ConfirmationCallback" new="wy.c_Gb">
   <method old="getDefaultOption()I" new="m_ex"/>
   <method old="getMessageType()I" new="m_EV"/>
   <method old="getOptionType()I" new="m_xU"/>
   <method old="getOptions()[Ljava/lang/String;" new="m_PG"/>
   <method old="getPrompt()Ljava/lang/String;" new="m_DW"/>
   <method old="getSelectedIndex()I" new="m_yx"/>
   <method old="setSelectedIndex(I)V" new="m_Qx"/>
   <field old="CANCEL I" new="f_D"/>
   <field old="ERROR I" new="f_K"/>
   <field old="INFORMATION I" new="f_k"/>
   <field old="NO I" new="f_e"/>
   <field old="OK I" new="f_G"/>
   <field old="OK_CANCEL_OPTION I" new="f_B"/>
   <field old="UNSPECIFIED_OPTION I" new="f_j"/>
   <field old="WARNING I" new="f_J"/>
   <field old="YES I" new="f_m"/>
   <field old="YES_NO_CANCEL_OPTION I" new="f_f"/>
   <field old="YES_NO_OPTION I" new="f_g"/>
   <field old="defaultOption I" new="f_F"/>
   <field old="messageType I" new="f_M"/>
   <field old="optionType I" new="f_b"/>
   <field old="options [Ljava/lang/String;" new="f_l"/>
   <field old="prompt Ljava/lang/String;" new="f_d"/>
   <field old="selection I" new="f_I"/>
   <field old="serialVersionUID J" new="f_H"/>
  </class>
  <class old="net.java.otr4j.session.SessionImpl" new="net.java.otr4j.session.c_J">
   <method old="abortSmp()V" new="m_RB"/>
   <method old="addOtrEngineListener(Lnet/java/otr4j/OtrEngineListener;)V" new="m_mc"/>
   <method old="collectOldMacKeys()[B" new="m_yV"/>
   <method old="endSession()V" new="m_XC"/>
   <method old="getAuthContext()Lnet/java/otr4j/session/AuthContext;" new="m_PU"/>
   <method old="getEncryptionSessionKeys()Lnet/java/otr4j/session/SessionKeys;" new="m_nV"/>
   <method old="getHost()Lnet/java/otr4j/OtrEngineHost;" new="m_vD"/>
   <method old="getLocalKeyPair()Ljava/security/KeyPair;" new="m_RC"/>
   <method old="getMostRecentSessionKeys()Lnet/java/otr4j/session/SessionKeys;" new="m_jU"/>
   <method old="getOldMacKeys()Ljava/util/Vector;" new="m_pv"/>
   <method old="getRemotePublicKey()Ljava/security/PublicKey;" new="m_jc"/>
   <method old="getS()Ljava/math/BigInteger;" new="m_Qb"/>
   <method old="getSessionID()Lnet/java/otr4j/session/SessionID;" new="m_Ba"/>
   <method old="getSessionKeys()[[Lnet/java/otr4j/session/SessionKeys;" new="m_wv"/>
   <method old="getSessionKeysByID(II)Lnet/java/otr4j/session/SessionKeys;" new="m_Zw"/>
   <method old="getSessionKeysByIndex(II)Lnet/java/otr4j/session/SessionKeys;" new="m_Dw"/>
   <method old="getSessionPolicy()Lnet/java/otr4j/OtrPolicy;" new="m_HA"/>
   <method old="getSessionStatus()Lnet/java/otr4j/session/SessionStatus;" new="m_iA"/>
   <method old="handleDataMessage(Lnet/java/otr4j/io/messages/DataMessage;)Ljava/lang/String;" new="m_Nw"/>
   <method old="handleErrorMessage(Lnet/java/otr4j/io/messages/ErrorMessage;)V" new="m_kW"/>
   <method old="handlePlainTextMessage(Lnet/java/otr4j/io/messages/PlainTextMessage;)Ljava/lang/String;" new="m_zU"/>
   <method old="handleQueryMessage(Lnet/java/otr4j/io/messages/QueryMessage;)V" new="m_Yw"/>
   <method old="initSmp(Ljava/lang/String;Ljava/lang/String;)V" new="m_QA"/>
   <method old="injectMessage(Lnet/java/otr4j/io/messages/AbstractMessage;)V" new="m_Dd"/>
   <method old="refreshSession()V" new="m_Db"/>
   <method old="removeOtrEngineListener(Lnet/java/otr4j/OtrEngineListener;)V" new="m_Zb"/>
   <method old="respondSmp(Ljava/lang/String;Ljava/lang/String;)V" new="m_NC"/>
   <method old="rotateLocalSessionKeys()V" new="m_sv"/>
   <method old="rotateRemoteSessionKeys(Ljavax/crypto/interfaces/DHPublicKey;)V" new="m_FV"/>
   <method old="setHost(Lnet/java/otr4j/OtrEngineHost;)V" new="m_OW"/>
   <method old="setRemotePublicKey(Ljava/security/PublicKey;)V" new="m_lw"/>
   <method old="setSessionID(Lnet/java/otr4j/session/SessionID;)V" new="m_KU"/>
   <method old="setSessionStatus(Lnet/java/otr4j/session/SessionStatus;)V" new="m_Ux"/>
   <method old="startSession()V" new="m_pC"/>
   <method old="transformReceiving(Ljava/lang/String;)Ljava/lang/String;" new="m_bb"/>
   <method old="transformSending(Ljava/lang/String;Ljava/util/List;)Ljava/lang/String;" new="m_gA"/>
   <field old="authContext Lnet/java/otr4j/session/AuthContext;" new="f_J"/>
   <field old="ess Ljava/math/BigInteger;" new="f_l"/>
   <field old="host Lnet/java/otr4j/OtrEngineHost;" new="f_I"/>
   <field old="listeners Ljava/util/List;" new="f_b"/>
   <field old="logger Ljava/util/logging/Logger;" new="f_B"/>
   <field old="offerStatus Lnet/java/otr4j/session/OfferStatus;" new="f_d"/>
   <field old="oldMacKeys Ljava/util/Vector;" new="f_f"/>
   <field old="otrSm Lnet/java/otr4j/session/OtrSm;" new="f_e"/>
   <field old="remotePublicKey Ljava/security/PublicKey;" new="f_j"/>
   <field old="sessionID Lnet/java/otr4j/session/SessionID;" new="f_K"/>
   <field old="sessionKeys [[Lnet/java/otr4j/session/SessionKeys;" new="f_m"/>
   <field old="sessionStatus Lnet/java/otr4j/session/SessionStatus;" new="f_k"/>
  </class>
  <class old="com.xabber.android.data.roster.PresenceManager" new="com.xabber.android.data.roster.c_l">
   <method old="acceptSubscription(Ljava/lang/String;Ljava/lang/String;)V" new="m_dEa"/>
   <method old="access$000(Lcom/xabber/android/data/roster/PresenceManager;)V" new="m_aga"/>
   <method old="discardSubscription(Ljava/lang/String;Ljava/lang/String;)V" new="m_Cfa"/>
   <method old="getInstance()Lcom/xabber/android/data/roster/PresenceManager;" new="m_Xr"/>
   <method old="getResourceItem(Ljava/lang/String;Ljava/lang/String;)Lcom/xabber/android/data/roster/ResourceItem;" new="m_DFa"/>
   <method old="getResourceItems(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Collection;" new="m_FFa"/>
   <method old="getStatusMode(Ljava/lang/String;Ljava/lang/String;)Lcom/xabber/android/data/account/StatusMode;" new="m_PDa"/>
   <method old="getStatusText(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" new="m_efa"/>
   <method old="getSubscriptionRequest(Ljava/lang/String;Ljava/lang/String;)Lcom/xabber/android/data/roster/SubscriptionRequest;" new="m_sDa"/>
   <method old="hasSubscriptionRequest(Ljava/lang/String;Ljava/lang/String;)Z" new="m_CDa"/>
   <method old="onAccountDisabled(Lcom/xabber/android/data/account/AccountItem;)V" new="m_Qd"/>
   <method old="onArchiveModificationsReceived(Lcom/xabber/android/data/connection/ConnectionItem;)V" new="m_Ad"/>
   <method old="onDisconnect(Lcom/xabber/android/data/connection/ConnectionItem;)V" new="m_xB"/>
   <method old="onLoad()V" new="m_pA"/>
   <method old="onLoaded()V" new="m_Kea"/>
   <method old="onPacket(Lcom/xabber/android/data/connection/ConnectionItem;Ljava/lang/String;Lorg/jivesoftware/smack/packet/Packet;)V" new="m_tC"/>
   <method old="removeRequestedSubscription(Ljava/lang/String;Ljava/lang/String;)V" new="m_Iea"/>
   <method old="requestSubscription(Ljava/lang/String;Ljava/lang/String;)V" new="m_Xfa"/>
   <method old="resendPresence(Ljava/lang/String;)V" new="m_TDa"/>
   <field old="instance Lcom/xabber/android/data/roster/PresenceManager;" new="f_m"/>
   <field old="presenceContainers Lcom/xabber/android/data/entity/NestedMap;" new="f_d"/>
   <field old="readyAccounts Ljava/util/ArrayList;" new="f_b"/>
   <field old="requestedSubscriptions Ljava/util/HashMap;" new="f_B"/>
   <field old="subscriptionRequestProvider Lcom/xabber/android/data/notification/EntityNotificationProvider;" new="f_e"/>
  </class>
  <class old="org.xbill.DNS.utils.base16" new="wy.c_s">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="fromString(Ljava/lang/String;)[B" new="m_tc"/>
   <method old="toString([B)Ljava/lang/String;" new="m_tb"/>
   <field old="Base16 Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.Flags" new="org.xbill.DNS.c_za">
   <method old="isFlag(I)Z" new="m_VI"/>
   <method old="string(I)Ljava/lang/String;" new="m_Wd"/>
   <method old="value(Ljava/lang/String;)I" new="m_le"/>
   <field old="AA B" new="f_e"/>
   <field old="AD B" new="f_k"/>
   <field old="CD B" new="f_m"/>
   <field old="DO I" new="f_l"/>
   <field old="QR B" new="f_b"/>
   <field old="RA B" new="f_d"/>
   <field old="RD B" new="f_B"/>
   <field old="TC B" new="f_f"/>
   <field old="flags Lorg/xbill/DNS/Mnemonic;" new="f_j"/>
  </class>
  <class old="com.xabber.android.ui.adapter.OccupantListAdapter" new="com.xabber.android.ui.adapter.c_f">
   <method old="getCount()I" new="getCount"/>
   <method old="getItem(I)Ljava/lang/Object;" new="getItem"/>
   <method old="getItemId(I)J" new="getItemId"/>
   <method old="getView(ILandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;" new="getView"/>
   <method old="onChange()V" new="m_cb"/>
   <field old="account Ljava/lang/String;" new="f_m"/>
   <field old="activity Landroid/app/Activity;" new="f_d"/>
   <field old="occupants Ljava/util/ArrayList;" new="f_e"/>
   <field old="room Ljava/lang/String;" new="f_b"/>
  </class>
  <class old="org.xbill.DNS.WKSRecord$Protocol" new="org.xbill.DNS.c_k">
   <method old="string(I)Ljava/lang/String;" new="m_Wd"/>
   <method old="value(Ljava/lang/String;)I" new="m_le"/>
   <field old="ARGUS I" new="f_e"/>
   <field old="BBN_RCC_MON I" new="f_L"/>
   <field old="BR_SAT_MON I" new="f_I"/>
   <field old="CFTP I" new="f_E"/>
   <field old="CHAOS I" new="f_B"/>
   <field old="DCN_MEAS I" new="f_G"/>
   <field old="EGP I" new="f_D"/>
   <field old="EMCON I" new="f_P"/>
   <field old="GGP I" new="f_u"/>
   <field old="HMP I" new="f_j"/>
   <field old="ICMP I" new="f_m"/>
   <field old="IGMP I" new="f_Z"/>
   <field old="IGP I" new="f_y"/>
   <field old="IPCV I" new="f_W"/>
   <field old="IPPC I" new="f_U"/>
   <field old="IRTP I" new="f_c"/>
   <field old="ISO_TP4 I" new="f_A"/>
   <field old="LEAF_1 I" new="f_h"/>
   <field old="LEAF_2 I" new="f_n"/>
   <field old="MERIT_INP I" new="f_H"/>
   <field old="MFE_NSP I" new="f_i"/>
   <field old="MIT_SUBNET I" new="f_l"/>
   <field old="MUX I" new="f_M"/>
   <field old="NETBLT I" new="f_K"/>
   <field old="NVP_II I" new="f_w"/>
   <field old="PRM I" new="f_Y"/>
   <field old="PUP I" new="f_S"/>
   <field old="RDP I" new="f_J"/>
   <field old="RVD I" new="f_z"/>
   <field old="SAT_EXPAK I" new="f_g"/>
   <field old="SAT_MON I" new="f_q"/>
   <field old="SEP I" new="f_R"/>
   <field old="ST I" new="f_o"/>
   <field old="TCP I" new="f_r"/>
   <field old="TRUNK_1 I" new="f_k"/>
   <field old="TRUNK_2 I" new="f_t"/>
   <field old="UCL I" new="f_f"/>
   <field old="UDP I" new="f_d"/>
   <field old="WB_EXPAK I" new="f_C"/>
   <field old="WB_MON I" new="f_F"/>
   <field old="XNET I" new="f_b"/>
   <field old="XNS_IDP I" new="f_p"/>
   <field old="protocols Lorg/xbill/DNS/Mnemonic;" new="f_a"/>
  </class>
  <class old="com.xabber.xmpp.vcard.NameProperty" new="com.xabber.xmpp.vcard.NameProperty">
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/xmpp/vcard/NameProperty;" new="valueOf"/>
   <method old="values()[Lcom/xabber/xmpp/vcard/NameProperty;" new="values"/>
   <field old="$VALUES [Lcom/xabber/xmpp/vcard/NameProperty;" new="f_B"/>
   <field old="FAMILY Lcom/xabber/xmpp/vcard/NameProperty;" new="f_e"/>
   <field old="GIVEN Lcom/xabber/xmpp/vcard/NameProperty;" new="f_d"/>
   <field old="MIDDLE Lcom/xabber/xmpp/vcard/NameProperty;" new="f_j"/>
   <field old="PREFIX Lcom/xabber/xmpp/vcard/NameProperty;" new="f_m"/>
   <field old="SUFFIX Lcom/xabber/xmpp/vcard/NameProperty;" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.roster.StructuredName" new="com.xabber.android.data.roster.c_I">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getBestName()Ljava/lang/String;" new="m_rDa"/>
   <method old="getFirstName()Ljava/lang/String;" new="m_Hk"/>
   <method old="getFormattedName()Ljava/lang/String;" new="m_KX"/>
   <method old="getLastName()Ljava/lang/String;" new="m_NJ"/>
   <method old="getMiddleName()Ljava/lang/String;" new="m_qK"/>
   <method old="getNickName()Ljava/lang/String;" new="m_hJ"/>
   <field old="bestName Ljava/lang/String;" new="f_B"/>
   <field old="firstName Ljava/lang/String;" new="f_b"/>
   <field old="formattedName Ljava/lang/String;" new="f_j"/>
   <field old="lastName Ljava/lang/String;" new="f_d"/>
   <field old="middleName Ljava/lang/String;" new="f_m"/>
   <field old="nickName Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="com.xabber.xmpp.vcard.CategoriesInflater" new="com.xabber.xmpp.vcard.c_Y">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getInstance()Lcom/xabber/xmpp/vcard/CategoriesInflater;" new="m_Xr"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/VCard;)Z" new="m_dy"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <field old="instance Lcom/xabber/xmpp/vcard/CategoriesInflater;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.FormattedTime" new="org.xbill.DNS.c_Xa">
   <method old="format(Ljava/util/Date;)Ljava/lang/String;" new="m_CI"/>
   <method old="parse(Ljava/lang/String;)Ljava/util/Date;" new="m_jh"/>
   <field old="w2 Ljava/text/NumberFormat;" new="f_e"/>
   <field old="w4 Ljava/text/NumberFormat;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.account.ArchiveMode" new="com.xabber.android.data.account.ArchiveMode">
   <method old="saveLocally()Z" new="m_OLa"/>
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/android/data/account/ArchiveMode;" new="valueOf"/>
   <method old="values()[Lcom/xabber/android/data/account/ArchiveMode;" new="values"/>
   <field old="$VALUES [Lcom/xabber/android/data/account/ArchiveMode;" new="f_b"/>
   <field old="available Lcom/xabber/android/data/account/ArchiveMode;" new="f_d"/>
   <field old="dontStore Lcom/xabber/android/data/account/ArchiveMode;" new="f_j"/>
   <field old="local Lcom/xabber/android/data/account/ArchiveMode;" new="f_m"/>
   <field old="server Lcom/xabber/android/data/account/ArchiveMode;" new="f_B"/>
   <field old="unreadOnly Lcom/xabber/android/data/account/ArchiveMode;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smack.util.collections.AbstractReferenceMap$SoftRef" new="org.jivesoftware.smack.util.collections.c_c">
   <method old="hashCode()I" new="hashCode"/>
   <field old="hash I" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.adapter.AccountToggleAdapter" new="com.xabber.android.ui.adapter.c_N">
   <method old="getCount()I" new="m_zca"/>
   <method old="getItem(I)Ljava/lang/Object;" new="m_oba"/>
   <method old="getItemForView(Landroid/view/View;)Ljava/lang/Object;" new="m_Aca"/>
   <method old="onChange()V" new="m_cb"/>
   <method old="rebuild()V" new="m_nBa"/>
   <field old="accounts Ljava/util/ArrayList;" new="f_m"/>
   <field old="activity Landroid/app/Activity;" new="f_d"/>
   <field old="linearLayout Landroid/widget/LinearLayout;" new="f_b"/>
   <field old="onClickListener Landroid/view/View$OnClickListener;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.account.PasswordRequest" new="com.xabber.android.data.account.c_d">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getAccount()Ljava/lang/String;" new="m_FC"/>
   <method old="getIntent()Landroid/content/Intent;" new="m_db"/>
   <method old="getText()Ljava/lang/String;" new="m_ZA"/>
   <method old="getTitle()Ljava/lang/String;" new="m_zb"/>
   <method old="hashCode()I" new="hashCode"/>
   <field old="account Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.dialog.NotificationDialogBuilder" new="wy.c_EB">
   <method old="create()Landroid/app/AlertDialog;" new="create"/>
   <method old="getDialogId()I" new="m_EAa"/>
   <method old="getNegativeTitle()Ljava/lang/String;" new="m_rCa"/>
   <method old="getPositiveTitle()Ljava/lang/String;" new="m_sAa"/>
   <method old="onAccept(Landroid/content/DialogInterface;)V" new="m_pba"/>
   <method old="onCancel(Landroid/content/DialogInterface;)V" new="m_NAa"/>
   <method old="onDecline(Landroid/content/DialogInterface;)V" new="m_bda"/>
   <method old="onDismiss(Landroid/content/DialogInterface;)V" new="onDismiss"/>
   <method old="setOnAcceptListener(Lcom/xabber/android/ui/dialog/OnAcceptListener;)Lcom/xabber/android/ui/dialog/ListenableDialogBuilder;" new="m_fAa"/>
   <method old="setOnCancelListener(Lcom/xabber/android/ui/dialog/OnCancelListener;)Lcom/xabber/android/ui/dialog/ListenableDialogBuilder;" new="m_lba"/>
   <method old="setOnDeclineListener(Lcom/xabber/android/ui/dialog/OnDeclineListener;)Lcom/xabber/android/ui/dialog/ListenableDialogBuilder;" new="m_Tba"/>
   <field old="activity Landroid/app/Activity;" new="f_m"/>
   <field old="dialogId I" new="f_e"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.engines.AESFastEngine" new="wy.c_fd">
   <method old="FFmulX(I)I" new="m_jZ"/>
   <method old="decryptBlock([[I)V" new="m_GX"/>
   <method old="encryptBlock([[I)V" new="m_daa"/>
   <method old="generateWorkingKey([BZ)[[I" new="m_iX"/>
   <method old="getAlgorithmName()Ljava/lang/String;" new="m_Bc"/>
   <method old="getBlockSize()I" new="m_bA"/>
   <method old="init(ZLnet/java/otr4j/bouncycastle/crypto/CipherParameters;)V" new="m_Hd"/>
   <method old="inv_mcol(I)I" new="m_xY"/>
   <method old="packBlock([BI)V" new="m_Qaa"/>
   <method old="processBlock([BI[BI)I" new="m_UB"/>
   <method old="reset()V" new="m_ld"/>
   <method old="shift(II)I" new="m_gaa"/>
   <method old="subWord(I)I" new="m_RY"/>
   <method old="unpackBlock([BI)V" new="m_wX"/>
   <field old="BLOCK_SIZE I" new="f_f"/>
   <field old="C0 I" new="f_H"/>
   <field old="C1 I" new="f_E"/>
   <field old="C2 I" new="f_k"/>
   <field old="C3 I" new="f_B"/>
   <field old="ROUNDS I" new="f_l"/>
   <field old="S [B" new="f_D"/>
   <field old="Si [B" new="f_M"/>
   <field old="T0 [I" new="f_a"/>
   <field old="T1 [I" new="f_j"/>
   <field old="T2 [I" new="f_C"/>
   <field old="T3 [I" new="f_G"/>
   <field old="Tinv0 [I" new="f_h"/>
   <field old="Tinv1 [I" new="f_e"/>
   <field old="Tinv2 [I" new="f_I"/>
   <field old="Tinv3 [I" new="f_b"/>
   <field old="WorkingKey [[I" new="f_m"/>
   <field old="forEncryption Z" new="f_g"/>
   <field old="m1 I" new="f_J"/>
   <field old="m2 I" new="f_K"/>
   <field old="m3 I" new="f_F"/>
   <field old="rcon [I" new="f_d"/>
  </class>
  <class old="com.xabber.xmpp.archive.ModifiedProvider" new="com.xabber.xmpp.archive.c_b">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/archive/Modified;" new="m_ZZ"/>
   <method old="parseIQ(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/IQ;" new="m_g"/>
   <method old="parseIQ(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/IQ;" new="m_g"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/archive/Modified;)Z" new="m_vba"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/archive/Modified;)Lcom/xabber/xmpp/archive/Modified;" new="m_dCa"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.login.AccountExpiredException" new="wy.c_Jb">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <field old="serialVersionUID J" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.packet.Message$Subject" new="org.jivesoftware.smack.packet.c_c">
   <method old="access$000(Lorg/jivesoftware/smack/packet/Message$Subject;)Ljava/lang/String;" new="m_ws"/>
   <method old="access$100(Lorg/jivesoftware/smack/packet/Message$Subject;)Ljava/lang/String;" new="m_Os"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getLanguage()Ljava/lang/String;" new="m_lJ"/>
   <method old="getSubject()Ljava/lang/String;" new="m_wM"/>
   <method old="hashCode()I" new="hashCode"/>
   <field old="language Ljava/lang/String;" new="f_e"/>
   <field old="subject Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.vcard.PhotoHolderProvider" new="com.xabber.xmpp.vcard.c_D">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createBinaryData()Lcom/xabber/xmpp/Instance;" new="m_iaa"/>
   <method old="createBinaryData()Lcom/xabber/xmpp/vcard/Photo;" new="m_iaa"/>
   <method old="createExternalData()Lcom/xabber/xmpp/Instance;" new="m_bY"/>
   <method old="createExternalData()Lcom/xabber/xmpp/vcard/Photo;" new="m_bY"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/vcard/DataHolder;" new="m_ZZ"/>
   <method old="createPayload(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/DataHolder;)Z" new="m_lz"/>
   <method old="getInstance()Lcom/xabber/xmpp/vcard/PhotoHolderProvider;" new="m_Xr"/>
   <method old="inflateBinaryData(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/AbstractBinaryData;)Z" new="m_GY"/>
   <method old="inflateExternalData(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/AbstractExternalData;)Z" new="m_mz"/>
   <method old="inflatePayload(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/DataHolder;)Z" new="m_qY"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/DataHolder;)Z" new="m_iz"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
   <field old="instance Lcom/xabber/xmpp/vcard/PhotoHolderProvider;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.extension.muc.RoomState" new="com.xabber.android.data.extension.muc.RoomState">
   <method old="inUse()Z" new="m_fHa"/>
   <method old="toStatusMode()Lcom/xabber/android/data/account/StatusMode;" new="m_OIa"/>
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/android/data/extension/muc/RoomState;" new="valueOf"/>
   <method old="values()[Lcom/xabber/android/data/extension/muc/RoomState;" new="values"/>
   <field old="$VALUES [Lcom/xabber/android/data/extension/muc/RoomState;" new="f_m"/>
   <field old="available Lcom/xabber/android/data/extension/muc/RoomState;" new="available"/>
   <field old="creating Lcom/xabber/android/data/extension/muc/RoomState;" new="creating"/>
   <field old="error Lcom/xabber/android/data/extension/muc/RoomState;" new="error"/>
   <field old="joining Lcom/xabber/android/data/extension/muc/RoomState;" new="joining"/>
   <field old="occupation Lcom/xabber/android/data/extension/muc/RoomState;" new="occupation"/>
   <field old="unavailable Lcom/xabber/android/data/extension/muc/RoomState;" new="unavailable"/>
   <field old="waiting Lcom/xabber/android/data/extension/muc/RoomState;" new="waiting"/>
  </class>
  <class old="org.apache.harmony.javax.security.sasl.AuthorizeCallback" new="org.apache.harmony.javax.security.sasl.c_M">
   <method old="getAuthenticationID()Ljava/lang/String;" new="m_pw"/>
   <method old="getAuthorizationID()Ljava/lang/String;" new="m_Yb"/>
   <method old="getAuthorizedID()Ljava/lang/String;" new="m_Aw"/>
   <method old="isAuthorized()Z" new="m_oV"/>
   <method old="setAuthorized(Z)V" new="m_HV"/>
   <method old="setAuthorizedID(Ljava/lang/String;)V" new="m_jV"/>
   <field old="authenticationID Ljava/lang/String;" new="f_d"/>
   <field old="authorizationID Ljava/lang/String;" new="f_e"/>
   <field old="authorized Z" new="f_B"/>
   <field old="authorizedID Ljava/lang/String;" new="f_m"/>
   <field old="serialVersionUID J" new="f_b"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.params.DSAKeyParameters" new="wy.c_xc">
   <method old="getParameters()Lnet/java/otr4j/bouncycastle/crypto/params/DSAParameters;" new="m_Paa"/>
   <method old="isPrivate()Z" new="m_Gaa"/>
   <field old="params Lnet/java/otr4j/bouncycastle/crypto/params/DSAParameters;" new="f_m"/>
   <field old="privateKey Z" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.provider.DataFormProvider" new="org.jivesoftware.smackx.provider.c_I">
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_I"/>
   <method old="parseField(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smackx/FormField;" new="m_PL"/>
   <method old="parseItem(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smackx/packet/DataForm$Item;" new="m_cK"/>
   <method old="parseOption(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smackx/FormField$Option;" new="m_wj"/>
   <method old="parseReported(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smackx/packet/DataForm$ReportedData;" new="m_Lj"/>
  </class>
  <class old="com.xabber.android.data.message.phrase.PhraseManager" new="wy.c_rb">
   <method old="access$000(Lcom/xabber/android/data/message/phrase/PhraseManager;Ljava/util/Collection;)V" new="m_dFa"/>
   <method old="getInstance()Lcom/xabber/android/data/message/phrase/PhraseManager;" new="m_Xr"/>
   <method old="getPhrase(I)Lcom/xabber/android/data/message/phrase/Phrase;" new="m_dfa"/>
   <method old="getPhrases()Ljava/util/Collection;" new="m_CEa"/>
   <method old="getSound(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri;" new="m_nda"/>
   <method old="onLoad()V" new="m_pA"/>
   <method old="onLoaded(Ljava/util/Collection;)V" new="m_lDa"/>
   <method old="removePhrase(I)V" new="m_FDa"/>
   <method old="updateOrCreatePhrase(Lcom/xabber/android/data/message/phrase/Phrase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLandroid/net/Uri;)V" new="m_Oda"/>
   <method old="writePhrase(Lcom/xabber/android/data/message/phrase/Phrase;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLandroid/net/Uri;)V" new="m_cea"/>
   <field old="instance Lcom/xabber/android/data/message/phrase/PhraseManager;" new="f_m"/>
   <field old="phrases Ljava/util/List;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.ibb.provider.OpenIQProvider" new="wy.c_z">
   <method old="parseIQ(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/IQ;" new="m_g"/>
  </class>
  <class old="org.xbill.DNS.utils.base32" new="wy.c_q">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="blockLenToPadding(I)I" new="m_nd"/>
   <method old="fromString(Ljava/lang/String;)[B" new="m_tc"/>
   <method old="paddingToBlockLen(I)I" new="m_oB"/>
   <method old="toString([B)Ljava/lang/String;" new="m_tb"/>
   <field old="alphabet Ljava/lang/String;" new="f_e"/>
   <field old="lowercase Z" new="f_m"/>
   <field old="padding Z" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smackx.muc.RoomInfo" new="org.jivesoftware.smackx.muc.RoomInfo">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getDescription()Ljava/lang/String;" new="m_XK"/>
   <method old="getOccupantsCount()I" new="m_bK"/>
   <method old="getRoom()Ljava/lang/String;" new="m_IJ"/>
   <method old="getSubject()Ljava/lang/String;" new="m_wM"/>
   <method old="isMembersOnly()Z" new="m_Jo"/>
   <method old="isModerated()Z" new="m_bk"/>
   <method old="isNonanonymous()Z" new="m_ml"/>
   <method old="isPasswordProtected()Z" new="m_vn"/>
   <method old="isPersistent()Z" new="m_Ro"/>
   <field old="description Ljava/lang/String;" new="f_e"/>
   <field old="membersOnly Z" new="f_b"/>
   <field old="moderated Z" new="f_l"/>
   <field old="nonanonymous Z" new="f_B"/>
   <field old="occupantsCount I" new="f_d"/>
   <field old="passwordProtected Z" new="f_m"/>
   <field old="persistent Z" new="f_f"/>
   <field old="room Ljava/lang/String;" new="f_k"/>
   <field old="subject Ljava/lang/String;" new="f_j"/>
  </class>
  <class old="com.xabber.android.data.connection.CertificateManager$1" new="com.xabber.android.data.connection.c_T">
   <method old="add(Lcom/xabber/android/data/notification/NotificationItem;Ljava/lang/Boolean;)V" new="m_rga"/>
   <method old="canClearNotifications()Z" new="m_ab"/>
   <method old="clearNotifications()V" new="m_TC"/>
   <method old="getIcon()I" new="m_qb"/>
   <method old="getNotifications()Ljava/util/Collection;" new="m_Tc"/>
   <method old="getSound()Landroid/net/Uri;" new="m_Qc"/>
   <method old="getStreamType()I" new="m_Xc"/>
   <method old="remove(Lcom/xabber/android/data/notification/NotificationItem;)Z" new="m_lha"/>
   <method old="setCanClearNotifications(Z)V" new="m_xha"/>
   <field old="items Ljava/util/Collection;" new="f_e"/>
   <field old="this$0 Lcom/xabber/android/data/connection/CertificateManager;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.connection.CertificateManager$2" new="com.xabber.android.data.connection.c_x">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/connection/CertificateManager;" new="f_e"/>
   <field old="val$defaultStores Ljava/util/Map;" new="f_m"/>
   <field old="val$keyStores Ljava/util/Map;" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.connection.CertificateManager$3" new="com.xabber.android.data.connection.c_V">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/connection/CertificateManager;" new="f_B"/>
   <field old="val$fingerprint Ljava/lang/String;" new="f_m"/>
   <field old="val$reason Lcom/xabber/android/data/connection/CertificateInvalidReason;" new="f_e"/>
   <field old="val$server Ljava/lang/String;" new="f_b"/>
   <field old="val$x509Certificate Ljava/security/cert/X509Certificate;" new="f_d"/>
  </class>
  <class old="com.xabber.android.data.connection.CertificateManager$4" new="com.xabber.android.data.connection.c_U">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/connection/CertificateManager;" new="f_m"/>
   <field old="val$reason Lcom/xabber/android/data/connection/CertificateInvalidReason;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.SettingsManager$ChatsHistory" new="com.xabber.android.data.SettingsManager$ChatsHistory">
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/android/data/SettingsManager$ChatsHistory;" new="valueOf"/>
   <method old="values()[Lcom/xabber/android/data/SettingsManager$ChatsHistory;" new="values"/>
   <field old="$VALUES [Lcom/xabber/android/data/SettingsManager$ChatsHistory;" new="f_m"/>
   <field old="all Lcom/xabber/android/data/SettingsManager$ChatsHistory;" new="f_b"/>
   <field old="none Lcom/xabber/android/data/SettingsManager$ChatsHistory;" new="f_d"/>
   <field old="unread Lcom/xabber/android/data/SettingsManager$ChatsHistory;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.connection.CertificateManager$5" new="com.xabber.android.data.connection.c_aa">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/connection/CertificateManager;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.connection.CertificateManager$6" new="com.xabber.android.data.connection.c_y">
   <method old="onInvalidChain([Ljava/security/cert/X509Certificate;Ljava/security/cert/CertificateException;)Z" new="m_wB"/>
   <method old="onInvalidTarget(Ljava/security/cert/X509Certificate;Ljava/security/cert/CertificateException;)Z" new="m_BA"/>
   <method old="onSelfSigned(Ljava/security/cert/X509Certificate;Ljava/security/cert/CertificateException;)Z" new="m_Zc"/>
   <method old="onValid([Ljava/security/cert/X509Certificate;)Z" new="m_LC"/>
   <field old="this$0 Lcom/xabber/android/data/connection/CertificateManager;" new="f_e"/>
   <field old="val$server Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.MultipleRecipientManager" new="org.jivesoftware.smackx.c_h">
   <method old="getMultipleRecipienServiceAddress(Lorg/jivesoftware/smack/Connection;)Ljava/lang/String;" new="m_Or"/>
   <method old="getMultipleRecipientInfo(Lorg/jivesoftware/smack/packet/Packet;)Lorg/jivesoftware/smackx/MultipleRecipientInfo;" new="m_op"/>
   <method old="reply(Lorg/jivesoftware/smack/Connection;Lorg/jivesoftware/smack/packet/Message;Lorg/jivesoftware/smack/packet/Message;)V" new="m_Tq"/>
   <method old="send(Lorg/jivesoftware/smack/Connection;Lorg/jivesoftware/smack/packet/Packet;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V" new="m_Cr"/>
   <method old="send(Lorg/jivesoftware/smack/Connection;Lorg/jivesoftware/smack/packet/Packet;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Z)V" new="m_rr"/>
   <method old="sendThroughService(Lorg/jivesoftware/smack/Connection;Lorg/jivesoftware/smack/packet/Packet;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V" new="m_GP"/>
   <method old="sendToIndividualRecipients(Lorg/jivesoftware/smack/Connection;Lorg/jivesoftware/smack/packet/Packet;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V" new="m_Ar"/>
   <field old="services Lorg/jivesoftware/smack/util/Cache;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.Roster$PresencePacketListener" new="org.jivesoftware.smack.Roster$PresencePacketListener">
   <method old="processPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_C"/>
   <field old="this$0 Lorg/jivesoftware/smack/Roster;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.intent.SegmentIntentBuilder" new="wy.c_Hd">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="addSegment(Ljava/lang/String;)Lcom/xabber/android/data/intent/SegmentIntentBuilder;" new="m_eia"/>
   <method old="build()Landroid/content/Intent;" new="m_oIa"/>
   <method old="getSegment(Landroid/content/Intent;I)Ljava/lang/String;" new="m_Qia"/>
   <method old="getSegmentCount()I" new="m_EGa"/>
   <method old="getSegments(Landroid/content/Intent;)Ljava/util/List;" new="m_Eha"/>
   <method old="preBuild()V" new="m_KHa"/>
   <field old="segments Ljava/util/List;" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.vcard.LabelProvider" new="com.xabber.xmpp.vcard.c_i">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/vcard/Label;" new="m_ZZ"/>
   <method old="getInstance()Lcom/xabber/xmpp/vcard/LabelProvider;" new="m_Xr"/>
   <method old="getTypes()[Lcom/xabber/xmpp/vcard/AddressType;" new="m_xg"/>
   <method old="getTypes()[Ljava/lang/Enum;" new="m_xg"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/AbstractTypedData;)Z" new="m_caa"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/Label;)Z" new="m_SX"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
   <field old="instance Lcom/xabber/xmpp/vcard/LabelProvider;" new="f_m"/>
  </class>
  <class old="org.apache.qpid.management.common.sasl.CRAMMD5HashedSaslClientFactory" new="wy.c_Za">
   <method old="createSaslClient([Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;)Lorg/apache/harmony/javax/security/sasl/SaslClient;" new="m_Ic"/>
   <method old="getMechanismNames(Ljava/util/Map;)[Ljava/lang/String;" new="m_Dc"/>
   <field old="MECHANISM Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.adapter.SaveStateAdapter" new="com.xabber.android.ui.adapter.c_H">
   <method old="saveState(Landroid/view/View;)V" new="m_dB"/>
  </class>
  <class old="org.xbill.DNS.ReverseMap" new="org.xbill.DNS.ReverseMap">
   <method old="fromAddress(Ljava/lang/String;)Lorg/xbill/DNS/Name;" new="m_eF"/>
   <method old="fromAddress(Ljava/lang/String;I)Lorg/xbill/DNS/Name;" new="m_hD"/>
   <method old="fromAddress(Ljava/net/InetAddress;)Lorg/xbill/DNS/Name;" new="m_sf"/>
   <method old="fromAddress([B)Lorg/xbill/DNS/Name;" new="m_GE"/>
   <method old="fromAddress([I)Lorg/xbill/DNS/Name;" new="m_dE"/>
   <field old="inaddr4 Lorg/xbill/DNS/Name;" new="f_e"/>
   <field old="inaddr6 Lorg/xbill/DNS/Name;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.notification.MessageNotification" new="wy.c_qb">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="addMessage(Ljava/lang/String;)V" new="m_EEa"/>
   <method old="compareTo(Lcom/xabber/android/data/entity/BaseEntity;)I" new="m_bCa"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="equals(Ljava/lang/String;Ljava/lang/String;)Z" new="m_Bba"/>
   <method old="getAccount()Ljava/lang/String;" new="m_FC"/>
   <method old="getCount()I" new="m_zca"/>
   <method old="getText()Ljava/lang/String;" new="m_ZA"/>
   <method old="getTimestamp()Ljava/util/Date;" new="m_jfa"/>
   <method old="getUser()Ljava/lang/String;" new="m_TA"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="account Ljava/lang/String;" new="f_m"/>
   <field old="count I" new="f_B"/>
   <field old="text Ljava/lang/String;" new="f_b"/>
   <field old="timestamp Ljava/util/Date;" new="f_d"/>
   <field old="user Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.DatabaseTable" new="com.xabber.android.data.c_m">
   <method old="clear()V" new="m_EA"/>
   <method old="create(Landroid/database/sqlite/SQLiteDatabase;)V" new="m_AB"/>
   <method old="migrate(Landroid/database/sqlite/SQLiteDatabase;I)V" new="m_Cd"/>
  </class>
  <class old="com.xabber.android.utils.Emoticons" new="wy.c_zB">
   <method old="addPattern(Ljava/util/Map;Ljava/lang/String;I)V" new="m_Bda"/>
   <method old="getSmiledText(Landroid/content/Context;Landroid/text/Spannable;)Z" new="m_MBa"/>
   <method old="getSmiledText(Landroid/content/Context;Ljava/lang/CharSequence;)Landroid/text/Spannable;" new="m_wBa"/>
   <method old="newSpannable(Ljava/lang/CharSequence;)Landroid/text/Spannable;" new="m_PAa"/>
   <field old="ANDROID_EMOTICONS Ljava/util/Map;" new="f_b"/>
   <field old="NONE_EMOTICONS Ljava/util/Map;" new="f_m"/>
   <field old="spannableFactory Landroid/text/Spannable$Factory;" new="f_e"/>
  </class>
  <class old="com.xabber.android.ui.dialog.AccountChooseDialogBuilder$Adapter" new="wy.c_ac">
   <method old="getCount()I" new="getCount"/>
   <method old="getDropDownView(ILandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;" new="getDropDownView"/>
   <method old="getItem(I)Ljava/lang/Object;" new="getItem"/>
   <method old="getItemId(I)J" new="getItemId"/>
   <method old="getView(ILandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;" new="getView"/>
   <field old="accounts Ljava/util/ArrayList;" new="f_e"/>
   <field old="this$0 Lcom/xabber/android/ui/dialog/AccountChooseDialogBuilder;" new="f_m"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.Subject$1" new="org.apache.harmony.javax.security.auth.c_f">
   <method old="run()Ljava/lang/Object;" new="run"/>
   <field old="val$combiner Lorg/apache/harmony/javax/security/auth/SubjectDomainCombiner;" new="f_m"/>
   <field old="val$context Ljava/security/AccessControlContext;" new="f_e"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.Subject$2" new="org.apache.harmony.javax.security.auth.c_j">
   <method old="run()Ljava/lang/Object;" new="run"/>
   <method old="run()Ljava/security/AccessControlContext;" new="m_sA"/>
   <field old="val$combiner Lorg/apache/harmony/javax/security/auth/SubjectDomainCombiner;" new="f_e"/>
   <field old="val$context Ljava/security/AccessControlContext;" new="f_m"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.Subject$3" new="org.apache.harmony.javax.security.auth.c_J">
   <method old="run()Ljava/lang/Object;" new="run"/>
   <method old="run()Ljava/security/DomainCombiner;" new="m_sA"/>
   <field old="val$context Ljava/security/AccessControlContext;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.filter.FromContainsFilter" new="wy.c_Ma">
   <method old="accept(Lorg/jivesoftware/smack/packet/Packet;)Z" new="m_x"/>
   <field old="from Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.digests.SHA256Digest" new="wy.c_Ld">
   <method old="Ch(III)I" new="m_gy"/>
   <method old="Maj(III)I" new="m_yZ"/>
   <method old="Sum0(I)I" new="m_LY"/>
   <method old="Sum1(I)I" new="m_Dy"/>
   <method old="Theta0(I)I" new="m_baa"/>
   <method old="Theta1(I)I" new="m_Py"/>
   <method old="doFinal([BI)I" new="m_sC"/>
   <method old="finish()V" new="m_fy"/>
   <method old="getAlgorithmName()Ljava/lang/String;" new="m_Bc"/>
   <method old="getByteLength()I" new="m_eb"/>
   <method old="getDigestSize()I" new="m_yC"/>
   <method old="processBlock()V" new="m_fY"/>
   <method old="processLength(J)V" new="m_cz"/>
   <method old="processWord([BI)V" new="m_OZ"/>
   <method old="reset()V" new="m_ld"/>
   <method old="update(B)V" new="m_DA"/>
   <method old="update([BII)V" new="m_WC"/>
   <field old="DIGEST_LENGTH I" new="f_b"/>
   <field old="H1 I" new="f_I"/>
   <field old="H2 I" new="f_f"/>
   <field old="H3 I" new="f_m"/>
   <field old="H4 I" new="f_K"/>
   <field old="H5 I" new="f_e"/>
   <field old="H6 I" new="f_J"/>
   <field old="H7 I" new="f_l"/>
   <field old="H8 I" new="f_j"/>
   <field old="K [I" new="f_d"/>
   <field old="X [I" new="f_B"/>
   <field old="xOff I" new="f_k"/>
  </class>
  <class old="net.java.otr4j.session.AuthContextImpl$MessageFactory" new="net.java.otr4j.session.c_k">
   <method old="access$1100(Lnet/java/otr4j/session/AuthContextImpl$MessageFactory;)Lnet/java/otr4j/io/messages/SignatureMessage;" new="m_Dx"/>
   <method old="access$1200(Lnet/java/otr4j/session/AuthContextImpl$MessageFactory;)Lnet/java/otr4j/io/messages/RevealSignatureMessage;" new="m_NW"/>
   <method old="access$1300(Lnet/java/otr4j/session/AuthContextImpl$MessageFactory;)Lnet/java/otr4j/io/messages/DHKeyMessage;" new="m_Ov"/>
   <method old="access$1400(Lnet/java/otr4j/session/AuthContextImpl$MessageFactory;)Lnet/java/otr4j/io/messages/DHCommitMessage;" new="m_yX"/>
   <method old="access$1500(Lnet/java/otr4j/session/AuthContextImpl$MessageFactory;)Lnet/java/otr4j/io/messages/QueryMessage;" new="m_gY"/>
   <method old="getDHCommitMessage()Lnet/java/otr4j/io/messages/DHCommitMessage;" new="m_av"/>
   <method old="getDHKeyMessage()Lnet/java/otr4j/io/messages/DHKeyMessage;" new="m_qV"/>
   <method old="getQueryMessage()Lnet/java/otr4j/io/messages/QueryMessage;" new="m_ZW"/>
   <method old="getRevealSignatureMessage()Lnet/java/otr4j/io/messages/RevealSignatureMessage;" new="m_SW"/>
   <method old="getSignatureMessage()Lnet/java/otr4j/io/messages/SignatureMessage;" new="m_DV"/>
   <field old="this$0 Lnet/java/otr4j/session/AuthContextImpl;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.packet.StreamError" new="org.jivesoftware.smack.packet.c_J">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getBody()Ljava/lang/String;" new="m_St"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/StreamError$Type;" new="m_b"/>
   <method old="setBody(Ljava/lang/String;)V" new="m_lt"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/StreamError$Type;)V" new="m_pR"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_e"/>
   <field old="TYPE_NAMESPACE Ljava/lang/String;" new="f_m"/>
   <field old="body Ljava/lang/String;" new="f_b"/>
   <field old="type Lorg/jivesoftware/smack/packet/StreamError$Type;" new="f_d"/>
  </class>
  <class old="org.jivesoftware.smack.PacketReader" new="org.jivesoftware.smack.c_o">
   <method old="access$000(Lorg/jivesoftware/smack/PacketReader;Ljava/lang/Thread;)V" new="m_YW"/>
   <method old="access$100(Lorg/jivesoftware/smack/PacketReader;)Lorg/jivesoftware/smack/XMPPConnection;" new="m_Rv"/>
   <method old="cleanup()V" new="m_wD"/>
   <method old="init()V" new="m_ZG"/>
   <method old="notifyConnectionError(Ljava/lang/Exception;)V" new="m_gw"/>
   <method old="notifyReconnection()V" new="m_Ev"/>
   <method old="parseFeatures(Lorg/xmlpull/v1/XmlPullParser;)V" new="m_Vw"/>
   <method old="parsePackets(Ljava/lang/Thread;)V" new="m_zV"/>
   <method old="processPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_C"/>
   <method old="releaseConnectionIDLock()V" new="m_uv"/>
   <method old="resetParser()V" new="m_Hx"/>
   <method old="shutdown()V" new="m_Fo"/>
   <method old="startup()V" new="m_Lx"/>
   <field old="connection Lorg/jivesoftware/smack/XMPPConnection;" new="f_j"/>
   <field old="connectionID Ljava/lang/String;" new="f_B"/>
   <field old="done Z" new="f_e"/>
   <field old="listenerExecutor Ljava/util/concurrent/ExecutorService;" new="f_d"/>
   <field old="parser Lorg/xmlpull/v1/XmlPullParser;" new="f_b"/>
   <field old="readerThread Ljava/lang/Thread;" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.rsm.Set" new="wy.c_pC">
   <method old="getAfter()Ljava/lang/String;" new="m_BBa"/>
   <method old="getBefore()Ljava/lang/String;" new="m_QAa"/>
   <method old="getCount()Ljava/lang/Integer;" new="m_zca"/>
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getFirst()Ljava/lang/String;" new="m_aT"/>
   <method old="getFirstIndex()Ljava/lang/Integer;" new="m_kca"/>
   <method old="getIndex()Ljava/lang/Integer;" new="m_Bca"/>
   <method old="getLast()Ljava/lang/String;" new="m_cs"/>
   <method old="getMax()Ljava/lang/Integer;" new="m_ZAa"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="isBackwardFinished(I)Z" new="m_WCa"/>
   <method old="isForwardFinished(I)Z" new="m_BAa"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="serializeContent(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_Fb"/>
   <method old="setAfter(Ljava/lang/String;)V" new="m_Vca"/>
   <method old="setBefore(Ljava/lang/String;)V" new="m_Nca"/>
   <method old="setCount(Ljava/lang/Integer;)V" new="m_kAa"/>
   <method old="setFirst(Ljava/lang/String;)V" new="m_cca"/>
   <method old="setFirstIndex(Ljava/lang/Integer;)V" new="m_vca"/>
   <method old="setIndex(Ljava/lang/Integer;)V" new="m_LAa"/>
   <method old="setLast(Ljava/lang/String;)V" new="m_Vaa"/>
   <method old="setMax(Ljava/lang/Integer;)V" new="m_qca"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="AFTER_NAME Ljava/lang/String;" new="f_J"/>
   <field old="BEFORE_NAME Ljava/lang/String;" new="f_H"/>
   <field old="COUNT_NAME Ljava/lang/String;" new="f_K"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_F"/>
   <field old="FIRST_NAME Ljava/lang/String;" new="f_m"/>
   <field old="INDEX_ATTRIBUTE Ljava/lang/String;" new="f_k"/>
   <field old="INDEX_NAME Ljava/lang/String;" new="f_l"/>
   <field old="LAST_NAME Ljava/lang/String;" new="f_g"/>
   <field old="MAX_NAME Ljava/lang/String;" new="f_D"/>
   <field old="NAMESPACE Ljava/lang/String;" new="f_M"/>
   <field old="after Ljava/lang/String;" new="f_d"/>
   <field old="before Ljava/lang/String;" new="f_B"/>
   <field old="count Ljava/lang/Integer;" new="f_b"/>
   <field old="first Ljava/lang/String;" new="f_j"/>
   <field old="firstIndex Ljava/lang/Integer;" new="f_I"/>
   <field old="index Ljava/lang/Integer;" new="f_e"/>
   <field old="last Ljava/lang/String;" new="f_G"/>
   <field old="max Ljava/lang/Integer;" new="f_f"/>
  </class>
  <class old="org.jivesoftware.smack.sasl.SASLMechanism$Success" new="wy.c_p">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="data Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.vcard.Sound" new="com.xabber.xmpp.vcard.c_E">
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.archive.FromProvider" new="com.xabber.xmpp.archive.c_s">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/archive/From;" new="m_ZZ"/>
   <method old="getInstance()Lcom/xabber/xmpp/archive/FromProvider;" new="m_Xr"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/archive/AbstractMessage;)Z" new="m_OCa"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/archive/AbstractMessage;)Lcom/xabber/xmpp/archive/AbstractMessage;" new="m_sba"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
   <field old="instance Lcom/xabber/xmpp/archive/FromProvider;" new="f_m"/>
  </class>
  <class old="net.java.otr4j.session.Session" new="net.java.otr4j.session.c_H">
   <method old="abortSmp()V" new="m_RB"/>
   <method old="addOtrEngineListener(Lnet/java/otr4j/OtrEngineListener;)V" new="m_mc"/>
   <method old="endSession()V" new="m_XC"/>
   <method old="getLocalKeyPair()Ljava/security/KeyPair;" new="m_RC"/>
   <method old="getRemotePublicKey()Ljava/security/PublicKey;" new="m_jc"/>
   <method old="getS()Ljava/math/BigInteger;" new="m_Qb"/>
   <method old="getSessionID()Lnet/java/otr4j/session/SessionID;" new="m_Ba"/>
   <method old="getSessionPolicy()Lnet/java/otr4j/OtrPolicy;" new="m_HA"/>
   <method old="getSessionStatus()Lnet/java/otr4j/session/SessionStatus;" new="m_iA"/>
   <method old="initSmp(Ljava/lang/String;Ljava/lang/String;)V" new="m_QA"/>
   <method old="injectMessage(Lnet/java/otr4j/io/messages/AbstractMessage;)V" new="m_Dd"/>
   <method old="refreshSession()V" new="m_Db"/>
   <method old="removeOtrEngineListener(Lnet/java/otr4j/OtrEngineListener;)V" new="m_Zb"/>
   <method old="respondSmp(Ljava/lang/String;Ljava/lang/String;)V" new="m_NC"/>
   <method old="startSession()V" new="m_pC"/>
   <method old="transformReceiving(Ljava/lang/String;)Ljava/lang/String;" new="m_bb"/>
   <method old="transformSending(Ljava/lang/String;Ljava/util/List;)Ljava/lang/String;" new="m_gA"/>
  </class>
  <class old="com.xabber.android.data.message.phrase.PhraseTable" new="wy.c_hC">
   <method old="clear()V" new="m_EA"/>
   <method old="create(Landroid/database/sqlite/SQLiteDatabase;)V" new="m_AB"/>
   <method old="getGroup(Landroid/database/Cursor;)Ljava/lang/String;" new="m_Vda"/>
   <method old="getId(Landroid/database/Cursor;)J" new="m_WFa"/>
   <method old="getInstance()Lcom/xabber/android/data/message/phrase/PhraseTable;" new="m_Xr"/>
   <method old="getListOrder()Ljava/lang/String;" new="m_YDa"/>
   <method old="getProjection()[Ljava/lang/String;" new="m_AFa"/>
   <method old="getSound(Landroid/database/Cursor;)Landroid/net/Uri;" new="m_Zfa"/>
   <method old="getTableName()Ljava/lang/String;" new="m_dga"/>
   <method old="getUser(Landroid/database/Cursor;)Ljava/lang/String;" new="m_oDa"/>
   <method old="getValue(Landroid/database/Cursor;)Ljava/lang/String;" new="m_Efa"/>
   <method old="isRegexp(Landroid/database/Cursor;)Z" new="m_yFa"/>
   <method old="list()Landroid/database/Cursor;" new="m_wEa"/>
   <method old="migrate(Landroid/database/sqlite/SQLiteDatabase;I)V" new="m_Cd"/>
   <method old="remove(J)V" new="m_LEa"/>
   <method old="write(Ljava/lang/Long;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLandroid/net/Uri;)J" new="m_aea"/>
   <field old="NAME Ljava/lang/String;" new="f_e"/>
   <field old="PROJECTION [Ljava/lang/String;" new="f_d"/>
   <field old="databaseManager Lcom/xabber/android/data/DatabaseManager;" new="f_m"/>
   <field old="instance Lcom/xabber/android/data/message/phrase/PhraseTable;" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smack.sasl.SASLFacebookConnect$1" new="wy.c_Ba">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="this$0 Lorg/jivesoftware/smack/sasl/SASLFacebookConnect;" new="f_e"/>
   <field old="val$stanza Ljava/lang/StringBuilder;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.sasl.SASLFacebookConnect$2" new="wy.c_ha">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="this$0 Lorg/jivesoftware/smack/sasl/SASLFacebookConnect;" new="f_m"/>
   <field old="val$stanza Ljava/lang/StringBuilder;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.entity.AbstractAccountTable$Fields" new="wy.c_I">
   <field old="ACCOUNT Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.ExtendedResolver" new="org.xbill.DNS.c_Ra">
   <method old="access$000(Lorg/xbill/DNS/ExtendedResolver;)Ljava/util/List;" new="m_bh"/>
   <method old="access$100(Lorg/xbill/DNS/ExtendedResolver;)Z" new="m_eH"/>
   <method old="access$200(Lorg/xbill/DNS/ExtendedResolver;)I" new="m_UI"/>
   <method old="access$202(Lorg/xbill/DNS/ExtendedResolver;I)I" new="m_fH"/>
   <method old="access$208(Lorg/xbill/DNS/ExtendedResolver;)I" new="m_gh"/>
   <method old="access$300(Lorg/xbill/DNS/ExtendedResolver;)I" new="m_fI"/>
   <method old="addResolver(Lorg/xbill/DNS/Resolver;)V" new="m_dh"/>
   <method old="deleteResolver(Lorg/xbill/DNS/Resolver;)V" new="m_UG"/>
   <method old="getResolver(I)Lorg/xbill/DNS/Resolver;" new="m_vg"/>
   <method old="getResolvers()[Lorg/xbill/DNS/Resolver;" new="m_Og"/>
   <method old="init()V" new="m_ZG"/>
   <method old="send(Lorg/xbill/DNS/Message;)Lorg/xbill/DNS/Message;" new="m_d"/>
   <method old="sendAsync(Lorg/xbill/DNS/Message;Lorg/xbill/DNS/ResolverListener;)Ljava/lang/Object;" new="m_L"/>
   <method old="setEDNS(I)V" new="m_j"/>
   <method old="setEDNS(IIILjava/util/List;)V" new="m_K"/>
   <method old="setIgnoreTruncation(Z)V" new="m_e"/>
   <method old="setLoadBalance(Z)V" new="m_Uh"/>
   <method old="setPort(I)V" new="m_m"/>
   <method old="setRetries(I)V" new="m_NI"/>
   <method old="setTCP(Z)V" new="m_E"/>
   <method old="setTSIGKey(Lorg/xbill/DNS/TSIG;)V" new="m_c"/>
   <method old="setTimeout(I)V" new="m_M"/>
   <method old="setTimeout(II)V" new="m_B"/>
   <field old="lbStart I" new="f_e"/>
   <field old="loadBalance Z" new="f_B"/>
   <field old="quantum I" new="f_m"/>
   <field old="resolvers Ljava/util/List;" new="f_b"/>
   <field old="retries I" new="f_d"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.ibb.packet.DataPacketExtension" new="wy.c_V">
   <method old="getData()Ljava/lang/String;" new="m_tD"/>
   <method old="getDecodedData()[B" new="m_Lm"/>
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="getSeq()J" new="m_RN"/>
   <method old="getSessionID()Ljava/lang/String;" new="m_Ba"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_b"/>
   <field old="data Ljava/lang/String;" new="f_d"/>
   <field old="decodedData [B" new="f_e"/>
   <field old="seq J" new="f_B"/>
   <field old="sessionID Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.utils.base64" new="wy.c_h">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="formatString([BILjava/lang/String;Z)Ljava/lang/String;" new="m_uA"/>
   <method old="fromString(Ljava/lang/String;)[B" new="m_tc"/>
   <method old="toString([B)Ljava/lang/String;" new="m_tb"/>
   <field old="Base64 Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.APLRecord" new="org.xbill.DNS.c_tB">
   <method old="access$000(II)Z" new="m_AK"/>
   <method old="addressLength([B)I" new="m_Dl"/>
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getElements()Ljava/util/List;" new="m_gK"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="parseAddress([BI)[B" new="m_ZK"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="validatePrefixLength(II)Z" new="m_El"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="dclass I" new="f_m"/>
   <field old="elements Ljava/util/List;" new="f_e"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="serialVersionUID J" new="f_m"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.ChatStateExtension$Provider" new="org.jivesoftware.smackx.packet.c_la">
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_I"/>
  </class>
  <class old="org.jivesoftware.smackx.provider.XHTMLExtensionProvider" new="org.jivesoftware.smackx.provider.c_H">
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_I"/>
  </class>
  <class old="org.jivesoftware.smackx.PrivateDataManager$1" new="org.jivesoftware.smackx.c_b">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="this$0 Lorg/jivesoftware/smackx/PrivateDataManager;" new="f_e"/>
   <field old="val$elementName Ljava/lang/String;" new="f_b"/>
   <field old="val$namespace Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.PrivateDataManager$2" new="org.jivesoftware.smackx.c_I">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="this$0 Lorg/jivesoftware/smackx/PrivateDataManager;" new="f_e"/>
   <field old="val$privateData Lorg/jivesoftware/smackx/packet/PrivateData;" new="f_m"/>
  </class>
  <class old="net.java.otr4j.crypto.Util" new="wy.c_bd">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="arrayEquals([B[B)Z" new="m_Gy"/>
   <method old="bytesToHexString([B)Ljava/lang/String;" new="m_Baa"/>
   <method old="checkBytes(Ljava/lang/String;[B)V" new="m_hy"/>
   <method old="hexStringToBytes(Ljava/lang/String;)[B" new="m_wz"/>
   <method old="readInt([BI)I" new="m_Saa"/>
   <method old="writeInt([BII)V" new="m_ZX"/>
  </class>
  <class old="com.xabber.android.ui.PhraseList" new="com.xabber.android.ui.PhraseList">
   <method old="createIntent(Landroid/content/Context;)Landroid/content/Intent;" new="m_yBa"/>
   <method old="createListAdapter()Lcom/xabber/android/ui/adapter/BaseListEditorAdapter;" new="m_mca"/>
   <method old="getActionWith()Ljava/lang/Object;" new="m_Aba"/>
   <method old="getAddIntent()Landroid/content/Intent;" new="m_DCa"/>
   <method old="getAddTextResourceId()I" new="m_Yba"/>
   <method old="getEditIntent(Ljava/lang/Integer;)Landroid/content/Intent;" new="m_pCa"/>
   <method old="getEditIntent(Ljava/lang/Object;)Landroid/content/Intent;" new="m_GBa"/>
   <method old="getRemoveConfirmation(Ljava/lang/Integer;)Ljava/lang/String;" new="m_oAa"/>
   <method old="getRemoveConfirmation(Ljava/lang/Object;)Ljava/lang/String;" new="m_cda"/>
   <method old="getRemoveTextResourceId()I" new="m_HCa"/>
   <method old="getSavedValue(Landroid/os/Bundle;Ljava/lang/String;)Ljava/lang/Integer;" new="m_dBa"/>
   <method old="getSavedValue(Landroid/os/Bundle;Ljava/lang/String;)Ljava/lang/Object;" new="m_dBa"/>
   <method old="onAccept(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_Lc"/>
   <method old="onActivityResult(IILandroid/content/Intent;)V" new="onActivityResult"/>
   <method old="onCancel(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_Vb"/>
   <method old="onContextItemSelected(Landroid/view/MenuItem;)Z" new="onContextItemSelected"/>
   <method old="onCreate(Landroid/os/Bundle;)V" new="onCreate"/>
   <method old="onCreateContextMenu(Landroid/view/ContextMenu;Landroid/view/View;Landroid/view/ContextMenu$ContextMenuInfo;)V" new="onCreateContextMenu"/>
   <method old="onCreateContextMenu(Landroid/view/ContextMenu;Ljava/lang/Object;)V" new="m_jAa"/>
   <method old="onCreateDialog(I)Landroid/app/Dialog;" new="onCreateDialog"/>
   <method old="onCreateOptionsMenu(Landroid/view/Menu;)Z" new="onCreateOptionsMenu"/>
   <method old="onDecline(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_ad"/>
   <method old="onDestroy()V" new="onDestroy"/>
   <method old="onInflate(Landroid/os/Bundle;)V" new="m_TBa"/>
   <method old="onItemClick(Landroid/widget/AdapterView;Landroid/view/View;IJ)V" new="onItemClick"/>
   <method old="onNewIntent(Landroid/content/Intent;)V" new="onNewIntent"/>
   <method old="onPause()V" new="onPause"/>
   <method old="onResume()V" new="onResume"/>
   <method old="onSaveInstanceState(Landroid/os/Bundle;)V" new="onSaveInstanceState"/>
   <method old="putSavedValue(Landroid/os/Bundle;Ljava/lang/String;Ljava/lang/Integer;)V" new="m_jCa"/>
   <method old="putSavedValue(Landroid/os/Bundle;Ljava/lang/String;Ljava/lang/Object;)V" new="m_ZCa"/>
   <method old="removeItem(Ljava/lang/Integer;)V" new="m_jBa"/>
   <method old="removeItem(Ljava/lang/Object;)V" new="m_Gda"/>
   <method old="startActivity(Landroid/content/Intent;)V" new="startActivity"/>
   <method old="startActivityForResult(Landroid/content/Intent;I)V" new="startActivityForResult"/>
  </class>
  <class old="com.xabber.android.ui.helper.BaseSettingsActivity$1" new="com.xabber.android.ui.helper.c_k">
   <method old="onClick(Landroid/content/DialogInterface;I)V" new="onClick"/>
   <field old="this$0 Lcom/xabber/android/ui/helper/BaseSettingsActivity;" new="f_m"/>
  </class>
  <class old="com.jcraft.jzlib.ZOutputStream" new="wy.c_Gd">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="close()V" new="close"/>
   <method old="end()V" new="m_kma"/>
   <method old="finish()V" new="m_fy"/>
   <method old="flush()V" new="flush"/>
   <method old="getFlushMode()I" new="m_Fma"/>
   <method old="getTotalIn()J" new="m_RMa"/>
   <method old="getTotalOut()J" new="m_WLa"/>
   <method old="setFlushMode(I)V" new="m_Cma"/>
   <method old="write(I)V" new="write"/>
   <method old="write([BII)V" new="write"/>
   <field old="buf [B" new="f_b"/>
   <field old="buf1 [B" new="f_k"/>
   <field old="bufsize I" new="f_e"/>
   <field old="compress Z" new="f_m"/>
   <field old="flush I" new="f_j"/>
   <field old="out Ljava/io/OutputStream;" new="f_B"/>
   <field old="z Lcom/jcraft/jzlib/ZStream;" new="f_d"/>
  </class>
  <class old="com.xabber.xmpp.vcard.BinaryLogo" new="com.xabber.xmpp.vcard.c_X">
   <method old="getData()[B" new="m_tD"/>
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getType()Ljava/lang/String;" new="m_b"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="setData([B)V" new="m_jz"/>
   <method old="setType(Ljava/lang/String;)V" new="m_Al"/>
   <method old="writeBody(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_zy"/>
   <field old="BINVAL_NAME Ljava/lang/String;" new="f_d"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_m"/>
   <field old="MAX_ENCODED_DATA_SIZE I" new="f_m"/>
   <field old="TYPE_NAME Ljava/lang/String;" new="f_b"/>
  </class>
  <class old="com.xabber.xmpp.archive.Pref" new="com.xabber.xmpp.archive.c_g">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="addItem(Lcom/xabber/xmpp/archive/Item;)V" new="m_gBa"/>
   <method old="addSession(Lcom/xabber/xmpp/archive/Session;)V" new="m_rAa"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getAutoSave()Ljava/lang/Boolean;" new="m_VBa"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefault()Lcom/xabber/xmpp/archive/Default;" new="m_lAa"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getItems()Ljava/util/Collection;" new="m_Vj"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getSessions()Ljava/util/Collection;" new="m_fQ"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="serializeContent(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_Fb"/>
   <method old="setAuto(Ljava/lang/Boolean;Lcom/xabber/xmpp/archive/ScopeMode;)V" new="m_Dca"/>
   <method old="setDefault(Lcom/xabber/xmpp/archive/Default;)V" new="m_tAa"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setMethod(Lcom/xabber/xmpp/archive/TypeMode;Lcom/xabber/xmpp/archive/UseMode;)V" new="m_PBa"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="AUTO_NAME Ljava/lang/String;" new="f_e"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_m"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="METHOD_NAME Ljava/lang/String;" new="f_k"/>
   <field old="NAMESPACE Ljava/lang/String;" new="f_I"/>
   <field old="SAVE_ATTRIBUTE Ljava/lang/String;" new="f_B"/>
   <field old="SCOPE_ATTRIBUTE Ljava/lang/String;" new="f_f"/>
   <field old="TYPE_ATTRIBUTE Ljava/lang/String;" new="f_j"/>
   <field old="USE_ATTRIBUTE Ljava/lang/String;" new="f_K"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="autoSave Ljava/lang/Boolean;" new="f_l"/>
   <field old="autoScope Lcom/xabber/xmpp/archive/ScopeMode;" new="f_D"/>
   <field old="defaultItem Lcom/xabber/xmpp/archive/Default;" new="f_b"/>
   <field old="items Ljava/util/Collection;" new="f_d"/>
   <field old="methods Ljava/util/Map;" new="f_M"/>
   <field old="sessions Ljava/util/Collection;" new="f_J"/>
  </class>
  <class old="com.xabber.android.data.AbstractTable" new="com.xabber.android.data.c_D">
   <method old="clear()V" new="m_EA"/>
   <method old="create(Landroid/database/sqlite/SQLiteDatabase;)V" new="m_AB"/>
   <method old="getListOrder()Ljava/lang/String;" new="m_YDa"/>
   <method old="getProjection()[Ljava/lang/String;" new="m_AFa"/>
   <method old="getTableName()Ljava/lang/String;" new="m_dga"/>
   <method old="list()Landroid/database/Cursor;" new="m_wEa"/>
   <method old="migrate(Landroid/database/sqlite/SQLiteDatabase;I)V" new="m_Cd"/>
  </class>
  <class old="com.xabber.android.data.connection.ConnectionItem$1" new="com.xabber.android.data.connection.c_z">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/connection/ConnectionItem;" new="f_e"/>
   <field old="val$connectionThread Lcom/xabber/android/data/connection/ConnectionThread;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.TSIG$StreamVerifier" new="org.xbill.DNS.c_Aa">
   <method old="verify(Lorg/xbill/DNS/Message;[B)I" new="m_Rf"/>
   <field old="key Lorg/xbill/DNS/TSIG;" new="f_b"/>
   <field old="lastTSIG Lorg/xbill/DNS/TSIGRecord;" new="f_e"/>
   <field old="lastsigned I" new="f_d"/>
   <field old="nresponses I" new="f_B"/>
   <field old="verifier Lorg/xbill/DNS/utils/HMAC;" new="f_m"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.spi.LoginModule" new="wy.c_M">
   <method old="abort()Z" new="m_Oc"/>
   <method old="commit()Z" new="m_SC"/>
   <method old="initialize(Lorg/apache/harmony/javax/security/auth/Subject;Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;Ljava/util/Map;Ljava/util/Map;)V" new="m_Gb"/>
   <method old="login()Z" new="m_lB"/>
   <method old="logout()Z" new="m_FA"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.login.LoginContext$Module" new="wy.c_AA">
   <method old="create(Lorg/apache/harmony/javax/security/auth/Subject;Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;Ljava/util/Map;)V" new="m_PW"/>
   <method old="getFlag()I" new="m_hU"/>
   <field old="entry Lorg/apache/harmony/javax/security/auth/login/AppConfigurationEntry;" new="f_e"/>
   <field old="flag I" new="f_d"/>
   <field old="klass Ljava/lang/Class;" new="f_m"/>
   <field old="module Lorg/apache/harmony/javax/security/auth/spi/LoginModule;" new="f_b"/>
   <field old="this$0 Lorg/apache/harmony/javax/security/auth/login/LoginContext;" new="f_B"/>
  </class>
  <class old="com.xabber.android.data.message.MessageItem" new="com.xabber.android.data.message.c_k">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="compareTo(Lcom/xabber/android/data/message/MessageItem;)I" new="m_Uia"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="getAction()Lcom/xabber/android/data/message/ChatAction;" new="m_dJ"/>
   <method old="getChat()Lcom/xabber/android/data/message/AbstractChat;" new="m_mIa"/>
   <method old="getDelayTimestamp()Ljava/util/Date;" new="m_gIa"/>
   <method old="getId()Ljava/lang/Long;" new="m_Hca"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getResource()Ljava/lang/String;" new="m_Au"/>
   <method old="getSpannable()Landroid/text/Spannable;" new="m_Jia"/>
   <method old="getTag()Ljava/lang/String;" new="m_Rha"/>
   <method old="getText()Ljava/lang/String;" new="m_ZA"/>
   <method old="getTimestamp()Ljava/util/Date;" new="m_jfa"/>
   <method old="isDelivered()Z" new="m_MK"/>
   <method old="isError()Z" new="m_lia"/>
   <method old="isIncoming()Z" new="m_mga"/>
   <method old="isOffline()Z" new="m_rl"/>
   <method old="isRead()Z" new="m_mGa"/>
   <method old="isSent()Z" new="m_wga"/>
   <method old="isUnencypted()Z" new="m_Aia"/>
   <method old="markAsDelivered()V" new="m_Nia"/>
   <method old="markAsError()V" new="m_zHa"/>
   <method old="markAsRead()V" new="m_ZGa"/>
   <method old="markAsSent()V" new="m_Kga"/>
   <method old="setId(Ljava/lang/Long;)V" new="m_Cga"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setSentTimeStamp(Ljava/util/Date;)V" new="m_tHa"/>
   <method old="setTag(Ljava/lang/String;)V" new="m_Vga"/>
   <field old="action Lcom/xabber/android/data/message/ChatAction;" new="f_b"/>
   <field old="chat Lcom/xabber/android/data/message/AbstractChat;" new="f_M"/>
   <field old="delayTimestamp Ljava/util/Date;" new="f_j"/>
   <field old="delivered Z" new="f_G"/>
   <field old="error Z" new="f_m"/>
   <field old="id Ljava/lang/Long;" new="f_d"/>
   <field old="incoming Z" new="f_B"/>
   <field old="offline Z" new="f_I"/>
   <field old="packetID Ljava/lang/String;" new="f_g"/>
   <field old="read Z" new="f_f"/>
   <field old="resource Ljava/lang/String;" new="f_l"/>
   <field old="sent Z" new="f_K"/>
   <field old="spannable Landroid/text/Spannable;" new="f_e"/>
   <field old="tag Ljava/lang/String;" new="f_J"/>
   <field old="text Ljava/lang/String;" new="f_k"/>
   <field old="timestamp Ljava/util/Date;" new="f_H"/>
   <field old="unencypted Z" new="f_D"/>
  </class>
  <class old="com.jcraft.jzlib.InfTree" new="wy.c_yb">
   <method old="huft_build([IIII[I[I[I[I[I[I[I)I" new="m_ima"/>
   <method old="inflate_trees_bits([I[I[I[ILcom/jcraft/jzlib/ZStream;)I" new="m_xLa"/>
   <method old="inflate_trees_dynamic(II[I[I[I[I[I[ILcom/jcraft/jzlib/ZStream;)I" new="m_oma"/>
   <method old="inflate_trees_fixed([I[I[[I[[ILcom/jcraft/jzlib/ZStream;)I" new="m_xoa"/>
   <method old="initWorkArea(I)V" new="m_hNa"/>
   <field old="BMAX I" new="f_e"/>
   <field old="MANY I" new="f_H"/>
   <field old="Z_BUF_ERROR I" new="f_C"/>
   <field old="Z_DATA_ERROR I" new="f_F"/>
   <field old="Z_ERRNO I" new="f_A"/>
   <field old="Z_MEM_ERROR I" new="f_J"/>
   <field old="Z_NEED_DICT I" new="f_k"/>
   <field old="Z_OK I" new="f_c"/>
   <field old="Z_STREAM_END I" new="f_a"/>
   <field old="Z_STREAM_ERROR I" new="f_g"/>
   <field old="Z_VERSION_ERROR I" new="f_j"/>
   <field old="c [I" new="f_G"/>
   <field old="cpdext [I" new="f_D"/>
   <field old="cpdist [I" new="f_b"/>
   <field old="cplens [I" new="f_d"/>
   <field old="cplext [I" new="f_E"/>
   <field old="fixed_bd I" new="f_I"/>
   <field old="fixed_bl I" new="f_B"/>
   <field old="fixed_td [I" new="f_i"/>
   <field old="fixed_tl [I" new="f_m"/>
   <field old="hn [I" new="f_l"/>
   <field old="r [I" new="f_f"/>
   <field old="u [I" new="f_h"/>
   <field old="v [I" new="f_M"/>
   <field old="x [I" new="f_K"/>
  </class>
  <class old="com.xabber.android.ui.adapter.ClientContactInflater$ViewHolder" new="com.xabber.android.ui.adapter.c_h">
   <field old="avatar Landroid/widget/ImageView;" new="f_e"/>
   <field old="clientSoftware Landroid/widget/ImageView;" new="f_b"/>
   <field old="color Landroid/widget/ImageView;" new="f_B"/>
   <field old="name Landroid/widget/TextView;" new="f_m"/>
   <field old="panel Landroid/widget/RelativeLayout;" new="f_b"/>
   <field old="shadow Landroid/widget/ImageView;" new="f_d"/>
   <field old="status Landroid/widget/TextView;" new="f_j"/>
   <field old="statusMode Landroid/widget/ImageView;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.muc.DefaultUserStatusListener" new="org.jivesoftware.smackx.muc.c_i">
   <method old="adminGranted()V" new="m_Q"/>
   <method old="adminRevoked()V" new="m_v"/>
   <method old="banned(Ljava/lang/String;Ljava/lang/String;)V" new="m_T"/>
   <method old="kicked(Ljava/lang/String;Ljava/lang/String;)V" new="m_O"/>
   <method old="membershipGranted()V" new="m_u"/>
   <method old="membershipRevoked()V" new="m_P"/>
   <method old="moderatorGranted()V" new="m_n"/>
   <method old="moderatorRevoked()V" new="m_R"/>
   <method old="ownershipGranted()V" new="m_N"/>
   <method old="ownershipRevoked()V" new="m_X"/>
   <method old="voiceGranted()V" new="m_o"/>
   <method old="voiceRevoked()V" new="m_z"/>
  </class>
  <class old="com.xabber.android.data.extension.vcard.VCardManager$1" new="wy.c_Nd">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/extension/vcard/VCardManager;" new="f_m"/>
   <field old="val$names Ljava/util/Map;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.extension.vcard.VCardManager$2" new="wy.c_GA">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/extension/vcard/VCardManager;" new="f_b"/>
   <field old="val$bareAddress Ljava/lang/String;" new="f_e"/>
   <field old="val$name Lcom/xabber/android/data/roster/StructuredName;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.filter.IQTypeFilter" new="wy.c_na">
   <method old="accept(Lorg/jivesoftware/smack/packet/Packet;)Z" new="m_x"/>
   <field old="type Lorg/jivesoftware/smack/packet/IQ$Type;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.Record" new="org.xbill.DNS.Record">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getEmptyRecord(Lorg/xbill/DNS/Name;IIJZ)Lorg/xbill/DNS/Record;" new="m_uE"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJILorg/xbill/DNS/DNSInput;)Lorg/xbill/DNS/Record;" new="m_be"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="toWireCanonical(Lorg/xbill/DNS/DNSOutput;Z)V" new="m_Ae"/>
   <method old="toWireCanonical(Z)[B" new="m_Oe"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="byteFormat Ljava/text/DecimalFormat;" new="f_e"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="serialVersionUID J" new="f_B"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.DataForm$ReportedData" new="org.jivesoftware.smackx.packet.c_Ga">
   <method old="getFields()Ljava/util/Iterator;" new="m_qJ"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="fields Ljava/util/List;" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.vcard.GeoProvider" new="com.xabber.xmpp.vcard.c_F">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/vcard/Geo;" new="m_ZZ"/>
   <method old="getInstance()Lcom/xabber/xmpp/vcard/GeoProvider;" new="m_Xr"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/Geo;)Z" new="m_XX"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
   <field old="instance Lcom/xabber/xmpp/vcard/GeoProvider;" new="f_m"/>
  </class>
  <class old="org.apache.harmony.javax.security.auth.login.AccountLockedException" new="wy.c_ld">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <field old="serialVersionUID J" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.OnTimerListener" new="com.xabber.android.data.c_k">
   <method old="onTimer()V" new="m_VB"/>
   <field old="DELAY I" new="f_m"/>
  </class>
  <class old="com.xabber.android.classic.R$drawable" new="com.xabber.android.classic.R$drawable">
   <field old="account_background I" new="account_background"/>
   <field old="account_background_1 I" new="account_background_1"/>
   <field old="account_background_2 I" new="account_background_2"/>
   <field old="account_background_3 I" new="account_background_3"/>
   <field old="account_background_4 I" new="account_background_4"/>
   <field old="account_border I" new="account_border"/>
   <field old="account_border_1 I" new="account_border_1"/>
   <field old="account_border_1_normal I" new="account_border_1_normal"/>
   <field old="account_border_1_pressed I" new="account_border_1_pressed"/>
   <field old="account_border_2 I" new="account_border_2"/>
   <field old="account_border_2_normal I" new="account_border_2_normal"/>
   <field old="account_border_2_pressed I" new="account_border_2_pressed"/>
   <field old="account_border_3 I" new="account_border_3"/>
   <field old="account_border_3_normal I" new="account_border_3_normal"/>
   <field old="account_border_3_pressed I" new="account_border_3_pressed"/>
   <field old="account_border_4 I" new="account_border_4"/>
   <field old="account_border_4_normal I" new="account_border_4_normal"/>
   <field old="account_border_4_pressed I" new="account_border_4_pressed"/>
   <field old="account_border_disabled I" new="account_border_disabled"/>
   <field old="account_border_persistent I" new="account_border_persistent"/>
   <field old="account_color I" new="account_color"/>
   <field old="account_color_1 I" new="account_color_1"/>
   <field old="account_color_2 I" new="account_color_2"/>
   <field old="account_color_3 I" new="account_color_3"/>
   <field old="account_color_4 I" new="account_color_4"/>
   <field old="active_chat I" new="active_chat"/>
   <field old="active_chat_focused I" new="active_chat_focused"/>
   <field old="active_chat_normal I" new="active_chat_normal"/>
   <field old="active_chat_pressed I" new="active_chat_pressed"/>
   <field old="avatar_1_1 I" new="avatar_1_1"/>
   <field old="avatar_1_2 I" new="avatar_1_2"/>
   <field old="avatar_1_3 I" new="avatar_1_3"/>
   <field old="avatar_1_4 I" new="avatar_1_4"/>
   <field old="avatar_1_5 I" new="avatar_1_5"/>
   <field old="avatar_1_6 I" new="avatar_1_6"/>
   <field old="avatar_1_7 I" new="avatar_1_7"/>
   <field old="avatar_1_8 I" new="avatar_1_8"/>
   <field old="avatar_2_1 I" new="avatar_2_1"/>
   <field old="avatar_2_2 I" new="avatar_2_2"/>
   <field old="avatar_2_3 I" new="avatar_2_3"/>
   <field old="avatar_2_4 I" new="avatar_2_4"/>
   <field old="avatar_2_5 I" new="avatar_2_5"/>
   <field old="avatar_2_6 I" new="avatar_2_6"/>
   <field old="avatar_2_7 I" new="avatar_2_7"/>
   <field old="avatar_2_8 I" new="avatar_2_8"/>
   <field old="avatar_3_1 I" new="avatar_3_1"/>
   <field old="avatar_3_2 I" new="avatar_3_2"/>
   <field old="avatar_3_3 I" new="avatar_3_3"/>
   <field old="avatar_3_4 I" new="avatar_3_4"/>
   <field old="avatar_3_5 I" new="avatar_3_5"/>
   <field old="avatar_3_6 I" new="avatar_3_6"/>
   <field old="avatar_3_7 I" new="avatar_3_7"/>
   <field old="avatar_3_8 I" new="avatar_3_8"/>
   <field old="avatar_4_1 I" new="avatar_4_1"/>
   <field old="avatar_4_2 I" new="avatar_4_2"/>
   <field old="avatar_4_3 I" new="avatar_4_3"/>
   <field old="avatar_4_4 I" new="avatar_4_4"/>
   <field old="avatar_4_5 I" new="avatar_4_5"/>
   <field old="avatar_4_6 I" new="avatar_4_6"/>
   <field old="avatar_4_7 I" new="avatar_4_7"/>
   <field old="avatar_4_8 I" new="avatar_4_8"/>
   <field old="avatar_5_1 I" new="avatar_5_1"/>
   <field old="avatar_5_2 I" new="avatar_5_2"/>
   <field old="avatar_5_3 I" new="avatar_5_3"/>
   <field old="avatar_5_4 I" new="avatar_5_4"/>
   <field old="avatar_5_5 I" new="avatar_5_5"/>
   <field old="avatar_5_6 I" new="avatar_5_6"/>
   <field old="avatar_5_7 I" new="avatar_5_7"/>
   <field old="avatar_5_8 I" new="avatar_5_8"/>
   <field old="avatar_6_1 I" new="avatar_6_1"/>
   <field old="avatar_6_2 I" new="avatar_6_2"/>
   <field old="avatar_6_3 I" new="avatar_6_3"/>
   <field old="avatar_6_4 I" new="avatar_6_4"/>
   <field old="avatar_6_5 I" new="avatar_6_5"/>
   <field old="avatar_6_6 I" new="avatar_6_6"/>
   <field old="avatar_6_7 I" new="avatar_6_7"/>
   <field old="avatar_6_8 I" new="avatar_6_8"/>
   <field old="avatar_account_1 I" new="avatar_account_1"/>
   <field old="avatar_account_2 I" new="avatar_account_2"/>
   <field old="avatar_account_3 I" new="avatar_account_3"/>
   <field old="avatar_account_4 I" new="avatar_account_4"/>
   <field old="avatar_muc_1 I" new="avatar_muc_1"/>
   <field old="avatar_muc_2 I" new="avatar_muc_2"/>
   <field old="avatar_muc_3 I" new="avatar_muc_3"/>
   <field old="avatar_muc_4 I" new="avatar_muc_4"/>
   <field old="avatar_muc_5 I" new="avatar_muc_5"/>
   <field old="avatar_muc_6 I" new="avatar_muc_6"/>
   <field old="avatar_muc_7 I" new="avatar_muc_7"/>
   <field old="avatar_muc_8 I" new="avatar_muc_8"/>
   <field old="btn_status_mode I" new="btn_status_mode"/>
   <field old="btn_status_mode_focused I" new="btn_status_mode_focused"/>
   <field old="btn_status_mode_normal I" new="btn_status_mode_normal"/>
   <field old="btn_status_mode_pressed I" new="btn_status_mode_pressed"/>
   <field old="btn_title_back I" new="btn_title_back"/>
   <field old="btn_title_back_dark I" new="btn_title_back_dark"/>
   <field old="btn_title_back_normal I" new="btn_title_back_normal"/>
   <field old="btn_title_back_pressed I" new="btn_title_back_pressed"/>
   <field old="chat_bg I" new="chat_bg"/>
   <field old="chat_bg_1 I" new="chat_bg_1"/>
   <field old="chat_bg_2 I" new="chat_bg_2"/>
   <field old="chat_bg_3 I" new="chat_bg_3"/>
   <field old="chat_bg_4 I" new="chat_bg_4"/>
   <field old="chat_border I" new="chat_border"/>
   <field old="emo_im_angel I" new="emo_im_angel"/>
   <field old="emo_im_cool I" new="emo_im_cool"/>
   <field old="emo_im_crying I" new="emo_im_crying"/>
   <field old="emo_im_embarrassed I" new="emo_im_embarrassed"/>
   <field old="emo_im_foot_in_mouth I" new="emo_im_foot_in_mouth"/>
   <field old="emo_im_happy I" new="emo_im_happy"/>
   <field old="emo_im_kissing I" new="emo_im_kissing"/>
   <field old="emo_im_laughing I" new="emo_im_laughing"/>
   <field old="emo_im_lips_are_sealed I" new="emo_im_lips_are_sealed"/>
   <field old="emo_im_money_mouth I" new="emo_im_money_mouth"/>
   <field old="emo_im_sad I" new="emo_im_sad"/>
   <field old="emo_im_surprised I" new="emo_im_surprised"/>
   <field old="emo_im_tongue_sticking_out I" new="emo_im_tongue_sticking_out"/>
   <field old="emo_im_undecided I" new="emo_im_undecided"/>
   <field old="emo_im_winking I" new="emo_im_winking"/>
   <field old="emo_im_wtf I" new="emo_im_wtf"/>
   <field old="emo_im_yelling I" new="emo_im_yelling"/>
   <field old="expander_account_1_dark I" new="expander_account_1_dark"/>
   <field old="expander_account_1_dark_focused I" new="expander_account_1_dark_focused"/>
   <field old="expander_account_1_dark_long I" new="expander_account_1_dark_long"/>
   <field old="expander_account_1_dark_normal I" new="expander_account_1_dark_normal"/>
   <field old="expander_account_1_dark_pressed I" new="expander_account_1_dark_pressed"/>
   <field old="expander_account_1_light I" new="expander_account_1_light"/>
   <field old="expander_account_1_light_focused I" new="expander_account_1_light_focused"/>
   <field old="expander_account_1_light_long I" new="expander_account_1_light_long"/>
   <field old="expander_account_1_light_normal I" new="expander_account_1_light_normal"/>
   <field old="expander_account_1_light_pressed I" new="expander_account_1_light_pressed"/>
   <field old="expander_account_2_dark I" new="expander_account_2_dark"/>
   <field old="expander_account_2_dark_focused I" new="expander_account_2_dark_focused"/>
   <field old="expander_account_2_dark_long I" new="expander_account_2_dark_long"/>
   <field old="expander_account_2_dark_normal I" new="expander_account_2_dark_normal"/>
   <field old="expander_account_2_dark_pressed I" new="expander_account_2_dark_pressed"/>
   <field old="expander_account_2_light I" new="expander_account_2_light"/>
   <field old="expander_account_2_light_focused I" new="expander_account_2_light_focused"/>
   <field old="expander_account_2_light_long I" new="expander_account_2_light_long"/>
   <field old="expander_account_2_light_normal I" new="expander_account_2_light_normal"/>
   <field old="expander_account_2_light_pressed I" new="expander_account_2_light_pressed"/>
   <field old="expander_account_3_dark I" new="expander_account_3_dark"/>
   <field old="expander_account_3_dark_focused I" new="expander_account_3_dark_focused"/>
   <field old="expander_account_3_dark_long I" new="expander_account_3_dark_long"/>
   <field old="expander_account_3_dark_normal I" new="expander_account_3_dark_normal"/>
   <field old="expander_account_3_dark_pressed I" new="expander_account_3_dark_pressed"/>
   <field old="expander_account_3_light I" new="expander_account_3_light"/>
   <field old="expander_account_3_light_focused I" new="expander_account_3_light_focused"/>
   <field old="expander_account_3_light_long I" new="expander_account_3_light_long"/>
   <field old="expander_account_3_light_normal I" new="expander_account_3_light_normal"/>
   <field old="expander_account_3_light_pressed I" new="expander_account_3_light_pressed"/>
   <field old="expander_account_4_dark I" new="expander_account_4_dark"/>
   <field old="expander_account_4_dark_focused I" new="expander_account_4_dark_focused"/>
   <field old="expander_account_4_dark_long I" new="expander_account_4_dark_long"/>
   <field old="expander_account_4_dark_normal I" new="expander_account_4_dark_normal"/>
   <field old="expander_account_4_dark_pressed I" new="expander_account_4_dark_pressed"/>
   <field old="expander_account_4_light I" new="expander_account_4_light"/>
   <field old="expander_account_4_light_focused I" new="expander_account_4_light_focused"/>
   <field old="expander_account_4_light_long I" new="expander_account_4_light_long"/>
   <field old="expander_account_4_light_normal I" new="expander_account_4_light_normal"/>
   <field old="expander_account_4_light_pressed I" new="expander_account_4_light_pressed"/>
   <field old="expander_background_dark I" new="expander_background_dark"/>
   <field old="expander_background_light I" new="expander_background_light"/>
   <field old="expander_group_dark I" new="expander_group_dark"/>
   <field old="expander_group_dark_focused I" new="expander_group_dark_focused"/>
   <field old="expander_group_dark_normal I" new="expander_group_dark_normal"/>
   <field old="expander_group_dark_pressed I" new="expander_group_dark_pressed"/>
   <field old="expander_group_light I" new="expander_group_light"/>
   <field old="expander_group_light_focused I" new="expander_group_light_focused"/>
   <field old="expander_group_light_normal I" new="expander_group_light_normal"/>
   <field old="expander_group_light_pressed I" new="expander_group_light_pressed"/>
   <field old="expander_indicator_dark I" new="expander_indicator_dark"/>
   <field old="expander_indicator_dark_hidden I" new="expander_indicator_dark_hidden"/>
   <field old="expander_indicator_dark_show I" new="expander_indicator_dark_show"/>
   <field old="expander_indicator_light I" new="expander_indicator_light"/>
   <field old="expander_indicator_light_hidden I" new="expander_indicator_light_hidden"/>
   <field old="expander_indicator_light_show I" new="expander_indicator_light_show"/>
   <field old="ic_affilation I" new="ic_affilation"/>
   <field old="ic_affilation_admin I" new="ic_affilation_admin"/>
   <field old="ic_affilation_member I" new="ic_affilation_member"/>
   <field old="ic_affilation_none I" new="ic_affilation_none"/>
   <field old="ic_affilation_outcast I" new="ic_affilation_outcast"/>
   <field old="ic_affilation_owner I" new="ic_affilation_owner"/>
   <field old="ic_client I" new="ic_client"/>
   <field old="ic_client_adium I" new="ic_client_adium"/>
   <field old="ic_client_empathy I" new="ic_client_empathy"/>
   <field old="ic_client_gajim I" new="ic_client_gajim"/>
   <field old="ic_client_gtalk I" new="ic_client_gtalk"/>
   <field old="ic_client_ichat I" new="ic_client_ichat"/>
   <field old="ic_client_miranda I" new="ic_client_miranda"/>
   <field old="ic_client_pidgin I" new="ic_client_pidgin"/>
   <field old="ic_client_psi I" new="ic_client_psi"/>
   <field old="ic_client_qip I" new="ic_client_qip"/>
   <field old="ic_client_vip I" new="ic_client_vip"/>
   <field old="ic_client_xabber I" new="ic_client_xabber"/>
   <field old="ic_connect I" new="ic_connect"/>
   <field old="ic_disconnect I" new="ic_disconnect"/>
   <field old="ic_information I" new="ic_information"/>
   <field old="ic_launcher I" new="ic_launcher"/>
   <field old="ic_menu_allfriends I" new="ic_menu_allfriends"/>
   <field old="ic_menu_archive I" new="ic_menu_archive"/>
   <field old="ic_menu_blocked_user I" new="ic_menu_blocked_user"/>
   <field old="ic_menu_chat_dashboard I" new="ic_menu_chat_dashboard"/>
   <field old="ic_menu_end_conversation I" new="ic_menu_end_conversation"/>
   <field old="ic_menu_friendslist I" new="ic_menu_friendslist"/>
   <field old="ic_menu_invite I" new="ic_menu_invite"/>
   <field old="ic_menu_notifications I" new="ic_menu_notifications"/>
   <field old="ic_menu_stop I" new="ic_menu_stop"/>
   <field old="ic_message_delivered I" new="ic_message_delivered"/>
   <field old="ic_message_has_error I" new="ic_message_has_error"/>
   <field old="ic_message_not_delivered I" new="ic_message_not_delivered"/>
   <field old="ic_message_not_sent I" new="ic_message_not_sent"/>
   <field old="ic_placeholder I" new="ic_placeholder"/>
   <field old="ic_security I" new="ic_security"/>
   <field old="ic_security_encripted I" new="ic_security_encripted"/>
   <field old="ic_security_finished I" new="ic_security_finished"/>
   <field old="ic_security_plain I" new="ic_security_plain"/>
   <field old="ic_security_verified I" new="ic_security_verified"/>
   <field old="ic_show_offline I" new="ic_show_offline"/>
   <field old="ic_show_offline_always I" new="ic_show_offline_always"/>
   <field old="ic_show_offline_never I" new="ic_show_offline_never"/>
   <field old="ic_stat_attention I" new="ic_stat_attention"/>
   <field old="ic_stat_auth_failed I" new="ic_stat_auth_failed"/>
   <field old="ic_stat_message I" new="ic_stat_message"/>
   <field old="ic_stat_message_offline I" new="ic_stat_message_offline"/>
   <field old="ic_stat_normal I" new="ic_stat_normal"/>
   <field old="ic_stat_offline I" new="ic_stat_offline"/>
   <field old="ic_stat_play I" new="ic_stat_play"/>
   <field old="ic_stat_request I" new="ic_stat_request"/>
   <field old="ic_stat_subscribe I" new="ic_stat_subscribe"/>
   <field old="ic_status I" new="ic_status"/>
   <field old="ic_status_account I" new="ic_status_account"/>
   <field old="ic_status_available I" new="ic_status_available"/>
   <field old="ic_status_available_account I" new="ic_status_available_account"/>
   <field old="ic_status_away I" new="ic_status_away"/>
   <field old="ic_status_away_account I" new="ic_status_away_account"/>
   <field old="ic_status_chat I" new="ic_status_chat"/>
   <field old="ic_status_chat_account I" new="ic_status_chat_account"/>
   <field old="ic_status_connection I" new="ic_status_connection"/>
   <field old="ic_status_connection_account I" new="ic_status_connection_account"/>
   <field old="ic_status_dnd I" new="ic_status_dnd"/>
   <field old="ic_status_dnd_account I" new="ic_status_dnd_account"/>
   <field old="ic_status_invisible I" new="ic_status_invisible"/>
   <field old="ic_status_invisible_account I" new="ic_status_invisible_account"/>
   <field old="ic_status_unavailable I" new="ic_status_unavailable"/>
   <field old="ic_status_unavailable_account I" new="ic_status_unavailable_account"/>
   <field old="ic_status_unsubscribed I" new="ic_status_unsubscribed"/>
   <field old="ic_status_xa I" new="ic_status_xa"/>
   <field old="ic_status_xa_account I" new="ic_status_xa_account"/>
   <field old="ic_type_facebook I" new="ic_type_facebook"/>
   <field old="ic_type_gtalk I" new="ic_type_gtalk"/>
   <field old="ic_type_livejournal I" new="ic_type_livejournal"/>
   <field old="ic_type_odnoklassniki I" new="ic_type_odnoklassniki"/>
   <field old="ic_type_qip I" new="ic_type_qip"/>
   <field old="ic_type_vkontakte I" new="ic_type_vkontakte"/>
   <field old="ic_type_wlm I" new="ic_type_wlm"/>
   <field old="ic_type_xmpp I" new="ic_type_xmpp"/>
   <field old="ic_type_yandex I" new="ic_type_yandex"/>
   <field old="notify_panel_notification_icon_bg I" new="notify_panel_notification_icon_bg"/>
   <field old="notify_panel_notification_icon_bg_tile I" new="notify_panel_notification_icon_bg_tile"/>
   <field old="reconnect I" new="reconnect"/>
   <field old="shadow I" new="shadow"/>
   <field old="shadow_repeat I" new="shadow_repeat"/>
   <field old="title_account_background_1_dark I" new="title_account_background_1_dark"/>
   <field old="title_account_background_1_light I" new="title_account_background_1_light"/>
   <field old="title_account_background_2_dark I" new="title_account_background_2_dark"/>
   <field old="title_account_background_2_light I" new="title_account_background_2_light"/>
   <field old="title_account_background_3_dark I" new="title_account_background_3_dark"/>
   <field old="title_account_background_3_light I" new="title_account_background_3_light"/>
   <field old="title_account_background_4_dark I" new="title_account_background_4_dark"/>
   <field old="title_account_background_4_light I" new="title_account_background_4_light"/>
   <field old="title_account_background_dark I" new="title_account_background_dark"/>
   <field old="title_account_background_light I" new="title_account_background_light"/>
   <field old="title_logo I" new="title_logo"/>
   <field old="title_main_background_dark I" new="title_main_background_dark"/>
   <field old="title_main_background_light I" new="title_main_background_light"/>
  </class>
  <class old="com.xabber.android.data.entity.NestedMap$Entry" new="wy.c_LC">
   <method old="getFirst()Ljava/lang/String;" new="m_aT"/>
   <method old="getSecond()Ljava/lang/String;" new="m_Bha"/>
   <method old="getValue()Ljava/lang/Object;" new="m_Ra"/>
   <field old="first Ljava/lang/String;" new="f_e"/>
   <field old="second Ljava/lang/String;" new="f_m"/>
   <field old="value Ljava/lang/Object;" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smackx.muc.RoomListenerMultiplexor" new="org.jivesoftware.smackx.muc.RoomListenerMultiplexor">
   <method old="addRoom(Ljava/lang/String;Lorg/jivesoftware/smackx/muc/PacketMultiplexListener;)V" new="m_CJ"/>
   <method old="cancel()V" new="m_pk"/>
   <method old="connectionClosed()V" new="m_r"/>
   <method old="connectionClosedOnError(Ljava/lang/Exception;)V" new="m_U"/>
   <method old="getRoomMultiplexor(Lorg/jivesoftware/smack/Connection;)Lorg/jivesoftware/smackx/muc/RoomListenerMultiplexor;" new="m_ok"/>
   <method old="init()V" new="m_ZG"/>
   <method old="reconnectingIn(I)V" new="m_Z"/>
   <method old="reconnectionFailed(Ljava/lang/Exception;)V" new="m_S"/>
   <method old="reconnectionSuccessful()V" new="m_W"/>
   <method old="removeRoom(Ljava/lang/String;)V" new="m_zK"/>
   <field old="connection Lorg/jivesoftware/smack/Connection;" new="f_d"/>
   <field old="filter Lorg/jivesoftware/smackx/muc/RoomListenerMultiplexor$RoomMultiplexFilter;" new="f_e"/>
   <field old="listener Lorg/jivesoftware/smackx/muc/RoomListenerMultiplexor$RoomMultiplexListener;" new="f_m"/>
   <field old="monitors Ljava/util/Map;" new="f_b"/>
  </class>
  <class old="net.java.otr4j.io.messages.PlainTextMessage" new="net.java.otr4j.io.messages.c_J">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="hashCode()I" new="hashCode"/>
   <field old="MESSAGE_ERROR I" new="MESSAGE_ERROR"/>
   <field old="MESSAGE_PLAINTEXT I" new="MESSAGE_PLAINTEXT"/>
   <field old="MESSAGE_QUERY I" new="MESSAGE_QUERY"/>
   <field old="cleanText Ljava/lang/String;" new="f_m"/>
   <field old="messageType I" new="f_m"/>
   <field old="versions Ljava/util/List;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.BaseManagerInterface" new="com.xabber.android.data.c_H">
  </class>
  <class old="org.jivesoftware.smack.ChatManager$1" new="org.jivesoftware.smack.c_y">
   <method old="accept(Lorg/jivesoftware/smack/packet/Packet;)Z" new="m_x"/>
   <field old="this$0 Lorg/jivesoftware/smack/ChatManager;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.ChatManager$2" new="org.jivesoftware.smack.c_z">
   <method old="processPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_C"/>
   <field old="this$0 Lorg/jivesoftware/smack/ChatManager;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceKeySetIterator" new="org.jivesoftware.smack.util.collections.c_I">
   <method old="currentEntry()Lorg/jivesoftware/smack/util/collections/AbstractReferenceMap$ReferenceEntry;" new="m_yQ"/>
   <method old="hasNext()Z" new="hasNext"/>
   <method old="next()Ljava/lang/Object;" new="next"/>
   <method old="nextEntry()Lorg/jivesoftware/smack/util/collections/AbstractReferenceMap$ReferenceEntry;" new="m_Kq"/>
   <method old="remove()V" new="remove"/>
   <method old="superNext()Lorg/jivesoftware/smack/util/collections/AbstractReferenceMap$ReferenceEntry;" new="m_cr"/>
   <field old="currentKey Ljava/lang/Object;" new="f_b"/>
   <field old="currentValue Ljava/lang/Object;" new="f_m"/>
   <field old="entry Lorg/jivesoftware/smack/util/collections/AbstractReferenceMap$ReferenceEntry;" new="f_f"/>
   <field old="expectedModCount I" new="f_l"/>
   <field old="index I" new="f_k"/>
   <field old="nextKey Ljava/lang/Object;" new="f_e"/>
   <field old="nextValue Ljava/lang/Object;" new="f_j"/>
   <field old="parent Lorg/jivesoftware/smack/util/collections/AbstractReferenceMap;" new="f_d"/>
   <field old="previous Lorg/jivesoftware/smack/util/collections/AbstractReferenceMap$ReferenceEntry;" new="f_B"/>
  </class>
  <class old="org.xbill.DNS.RRset" new="org.xbill.DNS.RRset">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="addRR(Lorg/xbill/DNS/Record;)V" new="m_HI"/>
   <method old="clear()V" new="m_EA"/>
   <method old="compareCredibility(I)I" new="m_H"/>
   <method old="deleteRR(Lorg/xbill/DNS/Record;)V" new="m_OH"/>
   <method old="expired()Z" new="m_h"/>
   <method old="first()Lorg/xbill/DNS/Record;" new="m_Th"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="iterator(ZZ)Ljava/util/Iterator;" new="m_Xh"/>
   <method old="iteratorToString(Ljava/util/Iterator;)Ljava/lang/String;" new="m_dH"/>
   <method old="rrs()Ljava/util/Iterator;" new="m_vI"/>
   <method old="rrs(Z)Ljava/util/Iterator;" new="m_Oh"/>
   <method old="safeAddRR(Lorg/xbill/DNS/Record;)V" new="m_EH"/>
   <method old="sigs()Ljava/util/Iterator;" new="m_nh"/>
   <method old="size()I" new="m_ui"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="nsigs S" new="f_d"/>
   <field old="position S" new="f_m"/>
   <field old="rrs Ljava/util/List;" new="f_e"/>
   <field old="serialVersionUID J" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smackx.filetransfer.FileTransfer$Status" new="org.jivesoftware.smackx.filetransfer.FileTransfer$Status">
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="valueOf(Ljava/lang/String;)Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Status;" new="valueOf"/>
   <method old="values()[Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Status;" new="values"/>
   <field old="$VALUES [Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Status;" new="f_m"/>
   <field old="cancelled Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Status;" new="f_f"/>
   <field old="complete Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Status;" new="f_I"/>
   <field old="error Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Status;" new="f_B"/>
   <field old="in_progress Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Status;" new="f_e"/>
   <field old="initial Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Status;" new="f_d"/>
   <field old="negotiated Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Status;" new="f_l"/>
   <field old="negotiating_stream Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Status;" new="f_j"/>
   <field old="negotiating_transfer Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Status;" new="f_b"/>
   <field old="refused Lorg/jivesoftware/smackx/filetransfer/FileTransfer$Status;" new="f_K"/>
   <field old="status Ljava/lang/String;" new="f_k"/>
  </class>
  <class old="org.jivesoftware.smackx.OfflineMessageManager$1" new="org.jivesoftware.smackx.c_l">
   <method old="accept(Lorg/jivesoftware/smack/packet/Packet;)Z" new="m_x"/>
   <field old="this$0 Lorg/jivesoftware/smackx/OfflineMessageManager;" new="f_m"/>
   <field old="val$nodes Ljava/util/List;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.notification.AccountNotificationProvider" new="wy.c_l">
   <method old="canClearNotifications()Z" new="m_ab"/>
   <method old="clearAccountNotifications(Ljava/lang/String;)V" new="m_uC"/>
   <method old="clearNotifications()V" new="m_TC"/>
   <method old="getIcon()I" new="m_qb"/>
   <method old="getNotifications()Ljava/util/Collection;" new="m_Tc"/>
   <method old="getSound()Landroid/net/Uri;" new="m_Qc"/>
   <method old="getStreamType()I" new="m_Xc"/>
  </class>
  <class old="com.xabber.android.ui.widget.PageSwitcher$OnSelectListener" new="com.xabber.android.ui.widget.c_E">
   <method old="onSelect()V" new="m_uc"/>
   <method old="onUnselect()V" new="m_rB"/>
  </class>
  <class old="org.jivesoftware.smackx.search.UserSearchManager" new="wy.c_t">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getSearchForm(Ljava/lang/String;)Lorg/jivesoftware/smackx/Form;" new="m_vl"/>
   <method old="getSearchResults(Lorg/jivesoftware/smackx/Form;Ljava/lang/String;)Lorg/jivesoftware/smackx/ReportedData;" new="m_tJ"/>
   <method old="getSearchServices()Ljava/util/Collection;" new="m_vk"/>
   <field old="con Lorg/jivesoftware/smack/Connection;" new="f_e"/>
   <field old="userSearch Lorg/jivesoftware/smackx/search/UserSearch;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.SharedGroupsInfo" new="org.jivesoftware.smackx.packet.c_b">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getGroups()Ljava/util/List;" new="m_pK"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="groups Ljava/util/List;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.Type$TypeMnemonic" new="org.xbill.DNS.c_b">
   <method old="add(ILjava/lang/String;)V" new="m_DF"/>
   <method old="add(ILjava/lang/String;Lorg/xbill/DNS/Record;)V" new="m_SD"/>
   <method old="addAlias(ILjava/lang/String;)V" new="m_vE"/>
   <method old="addAll(Lorg/xbill/DNS/Mnemonic;)V" new="m_DE"/>
   <method old="check(I)V" new="m_vd"/>
   <method old="getProto(I)Lorg/xbill/DNS/Record;" new="m_cE"/>
   <method old="getText(I)Ljava/lang/String;" new="m_fF"/>
   <method old="getValue(Ljava/lang/String;)I" new="m_oF"/>
   <method old="setMaximum(I)V" new="m_Bg"/>
   <method old="setNumericAllowed(Z)V" new="m_hF"/>
   <method old="setPrefix(Ljava/lang/String;)V" new="m_Dg"/>
   <method old="toInteger(I)Ljava/lang/Integer;" new="m_qE"/>
   <field old="CASE_LOWER I" new="f_d"/>
   <field old="CASE_SENSITIVE I" new="f_B"/>
   <field old="CASE_UPPER I" new="f_e"/>
   <field old="objects Ljava/util/HashMap;" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.attention.AttentionProvider" new="wy.c_KB">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/attention/Attention;" new="m_ZZ"/>
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/PacketExtension;" new="m_I"/>
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_I"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
  </class>
  <class old="com.xabber.android.data.account.OnAccountArchiveModeChangedListener" new="com.xabber.android.data.account.c_J">
   <method old="onAccountArchiveModeChanged(Lcom/xabber/android/data/account/AccountItem;)V" new="m_aA"/>
  </class>
  <class old="org.xbill.DNS.utils.HMAC" new="wy.c_o">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="clear()V" new="m_EA"/>
   <method old="digestLength()I" new="m_pd"/>
   <method old="init([B)V" new="m_Hb"/>
   <method old="sign()[B" new="m_hc"/>
   <method old="update([B)V" new="m_IC"/>
   <method old="update([BII)V" new="m_WC"/>
   <method old="verify([B)Z" new="m_xc"/>
   <method old="verify([BZ)Z" new="m_GC"/>
   <field old="IPAD B" new="f_b"/>
   <field old="OPAD B" new="f_d"/>
   <field old="blockLength I" new="f_e"/>
   <field old="digest Ljava/security/MessageDigest;" new="f_j"/>
   <field old="ipad [B" new="f_B"/>
   <field old="opad [B" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.DNSSEC$SignatureExpiredException" new="org.xbill.DNS.c_Sb">
   <method old="getExpiration()Ljava/util/Date;" new="m_LG"/>
   <method old="getVerifyTime()Ljava/util/Date;" new="m_II"/>
   <field old="now Ljava/util/Date;" new="f_e"/>
   <field old="when Ljava/util/Date;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.TCPClient" new="org.xbill.DNS.c_t">
   <method old="_recv(I)[B" new="m_qf"/>
   <method old="bind(Ljava/net/SocketAddress;)V" new="m_HD"/>
   <method old="blockUntil(Ljava/nio/channels/SelectionKey;J)V" new="m_LF"/>
   <method old="cleanup()V" new="m_wD"/>
   <method old="connect(Ljava/net/SocketAddress;)V" new="m_yd"/>
   <method old="recv()[B" new="m_BE"/>
   <method old="send([B)V" new="m_EF"/>
   <method old="sendrecv(Ljava/net/SocketAddress;Ljava/net/SocketAddress;[BJ)[B" new="m_ZD"/>
   <method old="sendrecv(Ljava/net/SocketAddress;[BJ)[B" new="m_mf"/>
   <method old="verboseLog(Ljava/lang/String;[B)V" new="m_WD"/>
   <field old="endTime J" new="f_m"/>
   <field old="key Ljava/nio/channels/SelectionKey;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.muc.MultiUserChat$1" new="org.jivesoftware.smackx.muc.c_g">
   <method old="connectionCreated(Lorg/jivesoftware/smack/Connection;)V" new="m_q"/>
  </class>
  <class old="org.jivesoftware.smackx.muc.InvitationListener" new="org.jivesoftware.smackx.muc.c_A">
   <method old="invitationReceived(Lorg/jivesoftware/smack/Connection;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jivesoftware/smack/packet/Message;)V" new="m_y"/>
  </class>
  <class old="org.jivesoftware.smackx.muc.MultiUserChat$2" new="org.jivesoftware.smackx.muc.c_a">
   <method old="accept(Lorg/jivesoftware/smack/packet/Packet;)Z" new="m_x"/>
   <field old="this$0 Lorg/jivesoftware/smackx/muc/MultiUserChat;" new="f_e"/>
   <field old="val$subject Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.message.ReceiptManager$1" new="com.xabber.android.data.message.ReceiptManager$1">
   <method old="connectionCreated(Lorg/jivesoftware/smack/Connection;)V" new="m_q"/>
  </class>
  <class old="org.jivesoftware.smackx.muc.MultiUserChat$3" new="org.jivesoftware.smackx.muc.c_D">
   <method old="accept(Lorg/jivesoftware/smack/packet/Packet;)Z" new="m_x"/>
   <field old="this$0 Lorg/jivesoftware/smackx/muc/MultiUserChat;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.message.ReceiptManager$2" new="com.xabber.android.data.message.ReceiptManager$2">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/message/ReceiptManager;" new="f_e"/>
   <field old="val$messageItem Lcom/xabber/android/data/message/MessageItem;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.util.collections.AbstractHashedMap$ValuesIterator" new="org.jivesoftware.smack.util.collections.c_q">
   <method old="currentEntry()Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;" new="m_yQ"/>
   <method old="hasNext()Z" new="hasNext"/>
   <method old="next()Ljava/lang/Object;" new="next"/>
   <method old="nextEntry()Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;" new="m_Kq"/>
   <method old="remove()V" new="remove"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="expectedModCount I" new="f_d"/>
   <field old="hashIndex I" new="f_e"/>
   <field old="last Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;" new="f_b"/>
   <field old="next Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;" new="f_B"/>
   <field old="parent Lorg/jivesoftware/smack/util/collections/AbstractHashedMap;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.muc.MultiUserChat$4" new="org.jivesoftware.smackx.muc.c_c">
   <method old="processPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_C"/>
   <field old="this$0 Lorg/jivesoftware/smackx/muc/MultiUserChat;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.muc.MultiUserChat$5" new="org.jivesoftware.smackx.muc.c_K">
   <method old="processPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_C"/>
   <field old="this$0 Lorg/jivesoftware/smackx/muc/MultiUserChat;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.muc.MultiUserChat$6" new="org.jivesoftware.smackx.muc.c_G">
   <method old="processPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_C"/>
   <field old="this$0 Lorg/jivesoftware/smackx/muc/MultiUserChat;" new="f_m"/>
  </class>
  <class old="com.xabber.android.classic.R$id" new="com.xabber.android.classic.R$id">
   <field old="about_license I" new="about_license"/>
   <field old="about_version I" new="about_version"/>
   <field old="account_bar I" new="account_bar"/>
   <field old="account_help I" new="account_help"/>
   <field old="account_list I" new="account_list"/>
   <field old="account_password I" new="account_password"/>
   <field old="account_type I" new="account_type"/>
   <field old="account_user_name I" new="account_user_name"/>
   <field old="affilation I" new="affilation"/>
   <field old="answer I" new="answer"/>
   <field old="auth_panel I" new="auth_panel"/>
   <field old="avatar I" new="avatar"/>
   <field old="back_button I" new="back_button"/>
   <field old="background I" new="background"/>
   <field old="button I" new="button"/>
   <field old="cancel I" new="cancel"/>
   <field old="chat_input I" new="chat_input"/>
   <field old="chat_page I" new="chat_page"/>
   <field old="chat_send I" new="chat_send"/>
   <field old="client_software I" new="client_software"/>
   <field old="color I" new="color"/>
   <field old="common_status_mode I" new="common_status_mode"/>
   <field old="common_status_text I" new="common_status_text"/>
   <field old="connected I" new="connected"/>
   <field old="contact_account I" new="contact_account"/>
   <field old="contact_name I" new="contact_name"/>
   <field old="contact_user I" new="contact_user"/>
   <field old="container I" new="container"/>
   <field old="copy I" new="copy"/>
   <field old="disabled I" new="disabled"/>
   <field old="disconnected I" new="disconnected"/>
   <field old="group_name I" new="group_name"/>
   <field old="icon I" new="icon"/>
   <field old="indicator I" new="indicator"/>
   <field old="info I" new="info"/>
   <field old="line1 I" new="line1"/>
   <field old="line3 I" new="line3"/>
   <field old="muc_join I" new="muc_join"/>
   <field old="muc_nick I" new="muc_nick"/>
   <field old="muc_password I" new="muc_password"/>
   <field old="muc_room I" new="muc_room"/>
   <field old="muc_server I" new="muc_server"/>
   <field old="name I" new="name"/>
   <field old="name_holder I" new="name_holder"/>
   <field old="ok I" new="ok"/>
   <field old="otr_local_fingerprint I" new="otr_local_fingerprint"/>
   <field old="otr_remote_fingerprint I" new="otr_remote_fingerprint"/>
   <field old="panel I" new="panel"/>
   <field old="progress_bar I" new="progress_bar"/>
   <field old="question I" new="question"/>
   <field old="scan I" new="scan"/>
   <field old="security I" new="security"/>
   <field old="send I" new="send"/>
   <field old="shadow I" new="shadow"/>
   <field old="show I" new="show"/>
   <field old="status I" new="status"/>
   <field old="status_bar_latest_event_content I" new="status_bar_latest_event_content"/>
   <field old="status_mode I" new="status_mode"/>
   <field old="status_text I" new="status_text"/>
   <field old="store_password I" new="store_password"/>
   <field old="switcher I" new="switcher"/>
   <field old="syncable I" new="syncable"/>
   <field old="text I" new="text"/>
   <field old="text2 I" new="text2"/>
   <field old="time I" new="time"/>
   <field old="title I" new="title"/>
   <field old="title_color I" new="title_color"/>
   <field old="use_orbot I" new="use_orbot"/>
   <field old="verified I" new="verified"/>
   <field old="webview I" new="webview"/>
  </class>
  <class old="com.xabber.xmpp.archive.Remove" new="com.xabber.xmpp.archive.Remove">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getEnd()Ljava/util/Date;" new="m_JAa"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getStart()Ljava/util/Date;" new="m_vC"/>
   <method old="getStartString()Ljava/lang/String;" new="m_lC"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getWith()Ljava/lang/String;" new="m_ib"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="isExactmatch()Z" new="m_ica"/>
   <method old="isOpen()Z" new="m_gCa"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="serializeContent(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_Fb"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setEnd(Ljava/util/Date;)V" new="m_wCa"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setExactmatch(Z)V" new="m_Cba"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setOpen(Z)V" new="m_uAa"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setStart(Ljava/util/Date;)V" new="m_SBa"/>
   <method old="setStartString(Ljava/lang/String;)V" new="m_tca"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="setWith(Ljava/lang/String;)V" new="m_mda"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_I"/>
   <field old="END_ATTRIBUTE Ljava/lang/String;" new="f_l"/>
   <field old="EXACTMATCH_ATTRIBUTE Ljava/lang/String;" new="f_k"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="NAMESPACE Ljava/lang/String;" new="f_j"/>
   <field old="OPEN_ATTRIBUTE Ljava/lang/String;" new="f_f"/>
   <field old="START_ATTRIBUTE Ljava/lang/String;" new="f_b"/>
   <field old="WITH_ATTRIBUTE Ljava/lang/String;" new="f_B"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="end Ljava/util/Date;" new="f_b"/>
   <field old="exactmatch Z" new="f_m"/>
   <field old="open Z" new="f_e"/>
  </class>
  <class old="com.xabber.xmpp.vcard.AddressType" new="com.xabber.xmpp.vcard.AddressType">
   <method old="isValid(Ljava/util/Set;)Z" new="m_FY"/>
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/xmpp/vcard/AddressType;" new="valueOf"/>
   <method old="values()[Lcom/xabber/xmpp/vcard/AddressType;" new="values"/>
   <field old="$VALUES [Lcom/xabber/xmpp/vcard/AddressType;" new="f_j"/>
   <field old="DOM Lcom/xabber/xmpp/vcard/AddressType;" new="f_l"/>
   <field old="HOME Lcom/xabber/xmpp/vcard/AddressType;" new="f_b"/>
   <field old="INTL Lcom/xabber/xmpp/vcard/AddressType;" new="f_e"/>
   <field old="PARCEL Lcom/xabber/xmpp/vcard/AddressType;" new="f_B"/>
   <field old="POSTAL Lcom/xabber/xmpp/vcard/AddressType;" new="f_k"/>
   <field old="PREF Lcom/xabber/xmpp/vcard/AddressType;" new="f_m"/>
   <field old="WORK Lcom/xabber/xmpp/vcard/AddressType;" new="f_d"/>
  </class>
  <class old="com.xabber.android.data.extension.attention.AttentionManager$1" new="wy.c_Pc">
   <method old="connectionCreated(Lorg/jivesoftware/smack/Connection;)V" new="m_q"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.BufferedBlockCipher" new="net.java.otr4j.bouncycastle.crypto.c_K">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="doFinal([BI)I" new="m_sC"/>
   <method old="getBlockSize()I" new="m_bA"/>
   <method old="getOutputSize(I)I" new="m_PX"/>
   <method old="getUnderlyingCipher()Lnet/java/otr4j/bouncycastle/crypto/BlockCipher;" new="m_xz"/>
   <method old="getUpdateOutputSize(I)I" new="m_EX"/>
   <method old="init(ZLnet/java/otr4j/bouncycastle/crypto/CipherParameters;)V" new="m_Hd"/>
   <method old="processByte(B[BI)I" new="m_hz"/>
   <method old="processBytes([BII[BI)I" new="m_eY"/>
   <method old="reset()V" new="m_ld"/>
   <field old="buf [B" new="f_d"/>
   <field old="bufOff I" new="f_B"/>
   <field old="cipher Lnet/java/otr4j/bouncycastle/crypto/BlockCipher;" new="f_m"/>
   <field old="forEncryption Z" new="f_j"/>
   <field old="partialBlockOkay Z" new="f_b"/>
   <field old="pgpCFB Z" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.extension.attention.AttentionManager$2" new="wy.c_Sc">
   <method old="add(Lcom/xabber/android/data/notification/NotificationItem;Ljava/lang/Boolean;)V" new="m_rga"/>
   <method old="canClearNotifications()Z" new="m_ab"/>
   <method old="clearAccountNotifications(Ljava/lang/String;)V" new="m_uC"/>
   <method old="clearNotifications()V" new="m_TC"/>
   <method old="get(Ljava/lang/String;)Lcom/xabber/android/data/notification/AccountNotificationItem;" new="m_yda"/>
   <method old="get(Ljava/lang/String;)Lcom/xabber/android/data/notification/EntityNotificationItem;" new="m_yda"/>
   <method old="get(Ljava/lang/String;Ljava/lang/String;)Lcom/xabber/android/data/notification/EntityNotificationItem;" new="m_uIa"/>
   <method old="getIcon()I" new="m_qb"/>
   <method old="getNotifications()Ljava/util/Collection;" new="m_Tc"/>
   <method old="getSound()Landroid/net/Uri;" new="m_Qc"/>
   <method old="getStreamType()I" new="m_Xc"/>
   <method old="remove(Lcom/xabber/android/data/notification/NotificationItem;)Z" new="m_lha"/>
   <method old="remove(Ljava/lang/String;)Z" new="m_Tfa"/>
   <method old="remove(Ljava/lang/String;Ljava/lang/String;)Z" new="m_cFa"/>
   <method old="setCanClearNotifications(Z)V" new="m_xha"/>
   <field old="items Ljava/util/Collection;" new="f_e"/>
   <field old="this$0 Lcom/xabber/android/data/extension/attention/AttentionManager;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.extension.attention.AttentionManager$3" new="wy.c_QB">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/extension/attention/AttentionManager;" new="f_m"/>
  </class>
  <class old="net.java.otr4j.OtrEngineHost" new="net.java.otr4j.c_J">
   <method old="askForSecret(Lnet/java/otr4j/session/SessionID;Ljava/lang/String;)V" new="m_YC"/>
   <method old="finishedSessionMessage(Lnet/java/otr4j/session/SessionID;)V" new="m_rb"/>
   <method old="getFallbackMessage()Ljava/lang/String;" new="m_Nd"/>
   <method old="getLocalFingerprintRaw(Lnet/java/otr4j/session/SessionID;)[B" new="m_gB"/>
   <method old="getLocalKeyPair(Lnet/java/otr4j/session/SessionID;)Ljava/security/KeyPair;" new="m_tA"/>
   <method old="getReplyForUnreadableMessage()Ljava/lang/String;" new="m_hB"/>
   <method old="getSessionPolicy(Lnet/java/otr4j/session/SessionID;)Lnet/java/otr4j/OtrPolicy;" new="m_GA"/>
   <method old="injectMessage(Lnet/java/otr4j/session/SessionID;Ljava/lang/String;)V" new="m_dd"/>
   <method old="requireEncryptedMessage(Lnet/java/otr4j/session/SessionID;Ljava/lang/String;)V" new="m_LA"/>
   <method old="showError(Lnet/java/otr4j/session/SessionID;Ljava/lang/String;)V" new="m_CB"/>
   <method old="smpAborted(Lnet/java/otr4j/session/SessionID;)V" new="m_nb"/>
   <method old="smpError(Lnet/java/otr4j/session/SessionID;IZ)V" new="m_lA"/>
   <method old="unencryptedMessageReceived(Lnet/java/otr4j/session/SessionID;Ljava/lang/String;)V" new="m_id"/>
   <method old="unreadableMessageReceived(Lnet/java/otr4j/session/SessionID;)V" new="m_Nb"/>
   <method old="unverify(Lnet/java/otr4j/session/SessionID;)V" new="m_EC"/>
   <method old="verify(Lnet/java/otr4j/session/SessionID;Z)V" new="m_VC"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.MUCInitialPresence$History" new="org.jivesoftware.smackx.packet.c_aa">
   <method old="getMaxChars()I" new="m_RJ"/>
   <method old="getMaxStanzas()I" new="m_Xk"/>
   <method old="getSeconds()I" new="m_QL"/>
   <method old="getSince()Ljava/util/Date;" new="m_Ll"/>
   <method old="setMaxChars(I)V" new="m_BL"/>
   <method old="setMaxStanzas(I)V" new="m_hj"/>
   <method old="setSeconds(I)V" new="m_IL"/>
   <method old="setSince(Ljava/util/Date;)V" new="m_uK"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="maxChars I" new="f_e"/>
   <field old="maxStanzas I" new="f_b"/>
   <field old="seconds I" new="f_d"/>
   <field old="since Ljava/util/Date;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.widget.NoDefaultSpinner" new="com.xabber.android.ui.widget.NoDefaultSpinner">
   <method old="newProxy(Landroid/widget/SpinnerAdapter;)Landroid/widget/SpinnerAdapter;" new="m_CBa"/>
   <method old="setAdapter(Landroid/widget/Adapter;)V" new="setAdapter"/>
   <method old="setAdapter(Landroid/widget/SpinnerAdapter;)V" new="setAdapter"/>
  </class>
  <class old="net.java.otr4j.io.messages.DHCommitMessage" new="net.java.otr4j.io.messages.c_K">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="hashCode()I" new="hashCode"/>
   <field old="MESSAGE_DATA I" new="MESSAGE_DATA"/>
   <field old="MESSAGE_DHKEY I" new="MESSAGE_DHKEY"/>
   <field old="MESSAGE_DH_COMMIT I" new="MESSAGE_DH_COMMIT"/>
   <field old="MESSAGE_ERROR I" new="MESSAGE_ERROR"/>
   <field old="MESSAGE_PLAINTEXT I" new="MESSAGE_PLAINTEXT"/>
   <field old="MESSAGE_QUERY I" new="MESSAGE_QUERY"/>
   <field old="MESSAGE_REVEALSIG I" new="MESSAGE_REVEALSIG"/>
   <field old="MESSAGE_SIGNATURE I" new="MESSAGE_SIGNATURE"/>
   <field old="dhPublicKeyEncrypted [B" new="f_e"/>
   <field old="dhPublicKeyHash [B" new="f_m"/>
   <field old="messageType I" new="f_m"/>
   <field old="protocolVersion I" new="f_e"/>
  </class>
  <class old="com.xabber.xmpp.receipt.ReceivedProvider" new="com.xabber.xmpp.receipt.ReceivedProvider">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/receipt/Received;" new="m_ZZ"/>
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/PacketExtension;" new="m_I"/>
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_I"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
  </class>
  <class old="com.xabber.android.data.extension.capability.CapabilitiesTable$Fields" new="com.xabber.android.data.extension.capability.c_M">
   <field old="FEATURES Ljava/lang/String;" new="f_b"/>
   <field old="HASH Ljava/lang/String;" new="f_e"/>
   <field old="NAME Ljava/lang/String;" new="f_d"/>
   <field old="NODE Ljava/lang/String;" new="f_m"/>
   <field old="TYPE Ljava/lang/String;" new="f_j"/>
   <field old="VERSION Ljava/lang/String;" new="f_B"/>
  </class>
  <class old="org.xbill.DNS.SIGRecord" new="org.xbill.DNS.c_T">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getAlgorithm()I" new="m_Ne"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getExpire()Ljava/util/Date;" new="m_Fg"/>
   <method old="getFootprint()I" new="m_VF"/>
   <method old="getLabels()I" new="m_UE"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getOrigTTL()J" new="m_Wf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getSignature()[B" new="m_IE"/>
   <method old="getSigner()Lorg/xbill/DNS/Name;" new="m_Ve"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getTimeSigned()Ljava/util/Date;" new="m_Je"/>
   <method old="getType()I" new="m_b"/>
   <method old="getTypeCovered()I" new="m_WF"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setSignature([B)V" new="m_GF"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="alg I" new="f_l"/>
   <field old="covered I" new="f_d"/>
   <field old="dclass I" new="f_m"/>
   <field old="expire Ljava/util/Date;" new="f_I"/>
   <field old="footprint I" new="f_e"/>
   <field old="labels I" new="f_B"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="origttl J" new="f_k"/>
   <field old="serialVersionUID J" new="f_m"/>
   <field old="signature [B" new="f_j"/>
   <field old="signer Lorg/xbill/DNS/Name;" new="f_b"/>
   <field old="timeSigned Ljava/util/Date;" new="f_K"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.extension.capability.ServerInfoManager" new="com.xabber.android.data.extension.capability.c_H">
   <method old="getInstance()Lcom/xabber/android/data/extension/capability/ServerInfoManager;" new="m_Xr"/>
   <method old="isProtocolSupported(Ljava/lang/String;Ljava/lang/String;)Z" new="m_wia"/>
   <method old="onAuthorized(Lcom/xabber/android/data/connection/ConnectionItem;)V" new="m_WB"/>
   <method old="onAvailable(Lcom/xabber/android/data/connection/ConnectionItem;)V" new="m_UHa"/>
   <method old="onDisconnect(Ljava/lang/String;Ljava/lang/String;)V" new="m_Uc"/>
   <method old="onError(Ljava/lang/String;Ljava/lang/String;Lorg/jivesoftware/smack/packet/IQ;)V" new="m_Ld"/>
   <method old="onReceived(Ljava/lang/String;Ljava/lang/String;Lorg/jivesoftware/smack/packet/IQ;)V" new="m_VA"/>
   <method old="onTimeout(Ljava/lang/String;Ljava/lang/String;)V" new="m_aC"/>
   <field old="instance Lcom/xabber/android/data/extension/capability/ServerInfoManager;" new="f_m"/>
   <field old="protocols Ljava/util/Map;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$StreamHostUsed" new="org.jivesoftware.smackx.bytestreams.socks5.packet.c_E">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getJID()Ljava/lang/String;" new="m_hn"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="ELEMENTNAME Ljava/lang/String;" new="f_m"/>
   <field old="JID Ljava/lang/String;" new="f_b"/>
   <field old="NAMESPACE Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry" new="org.jivesoftware.smack.util.collections.c_h">
   <method old="access$000(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;)Ljava/lang/Object;" new="m_ip"/>
   <method old="access$002(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;Ljava/lang/Object;)Ljava/lang/Object;" new="m_Mp"/>
   <method old="access$100(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;)Ljava/lang/Object;" new="m_IP"/>
   <method old="access$102(Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;Ljava/lang/Object;)Ljava/lang/Object;" new="m_YP"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getKey()Ljava/lang/Object;" new="getKey"/>
   <method old="getValue()Ljava/lang/Object;" new="getValue"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="next()Lorg/jivesoftware/smack/util/collections/AbstractReferenceMap$ReferenceEntry;" new="m_Eq"/>
   <method old="purge(Ljava/lang/ref/Reference;)Z" new="m_HP"/>
   <method old="setKey(Ljava/lang/Object;)V" new="m_eP"/>
   <method old="setValue(Ljava/lang/Object;)Ljava/lang/Object;" new="setValue"/>
   <method old="toReference(ILjava/lang/Object;I)Ljava/lang/ref/Reference;" new="m_ap"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="hashCode I" new="f_b"/>
   <field old="next Lorg/jivesoftware/smack/util/collections/AbstractHashedMap$HashEntry;" new="f_d"/>
   <field old="parent Lorg/jivesoftware/smack/util/collections/AbstractReferenceMap;" new="f_e"/>
   <field old="refKey Ljava/lang/ref/Reference;" new="f_b"/>
   <field old="refValue Ljava/lang/ref/Reference;" new="f_m"/>
  </class>
  <class old="com.xabber.xmpp.vcard.EmailType" new="com.xabber.xmpp.vcard.EmailType">
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/xmpp/vcard/EmailType;" new="valueOf"/>
   <method old="values()[Lcom/xabber/xmpp/vcard/EmailType;" new="values"/>
   <field old="$VALUES [Lcom/xabber/xmpp/vcard/EmailType;" new="f_j"/>
   <field old="HOME Lcom/xabber/xmpp/vcard/EmailType;" new="f_e"/>
   <field old="INTERNET Lcom/xabber/xmpp/vcard/EmailType;" new="f_B"/>
   <field old="PREF Lcom/xabber/xmpp/vcard/EmailType;" new="f_d"/>
   <field old="WORK Lcom/xabber/xmpp/vcard/EmailType;" new="f_m"/>
   <field old="X400 Lcom/xabber/xmpp/vcard/EmailType;" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.extension.cs.ChatStateManager$1" new="wy.c_kb">
   <method old="connectionCreated(Lorg/jivesoftware/smack/Connection;)V" new="m_q"/>
  </class>
  <class old="org.jivesoftware.smack.util.collections.AbstractHashedMap$KeySet" new="org.jivesoftware.smack.util.collections.c_b">
   <method old="clear()V" new="clear"/>
   <method old="contains(Ljava/lang/Object;)Z" new="contains"/>
   <method old="iterator()Ljava/util/Iterator;" new="iterator"/>
   <method old="remove(Ljava/lang/Object;)Z" new="remove"/>
   <method old="size()I" new="size"/>
   <field old="parent Lorg/jivesoftware/smack/util/collections/AbstractHashedMap;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.extension.cs.ChatStateManager$2" new="wy.c_VB">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/extension/cs/ChatStateManager;" new="f_m"/>
   <field old="val$account Ljava/lang/String;" new="f_e"/>
   <field old="val$bareAddress Ljava/lang/String;" new="f_b"/>
   <field old="val$resource Ljava/lang/String;" new="f_d"/>
  </class>
  <class old="org.xbill.DNS.DNSSEC$DNSSECException" new="org.xbill.DNS.c_Jb">
  </class>
  <class old="com.xabber.android.data.extension.time.OnTimeReceivedListener" new="wy.c_L">
   <method old="onTimeReceived(Lcom/xabber/android/data/connection/ConnectionItem;)V" new="m_IA"/>
  </class>
  <class old="com.xabber.android.ui.ClearNotifications" new="com.xabber.android.ui.ClearNotifications">
   <method old="createIntent(Landroid/content/Context;)Landroid/content/Intent;" new="m_yBa"/>
   <method old="onCreate(Landroid/os/Bundle;)V" new="onCreate"/>
  </class>
  <class old="com.xabber.android.classic.BuildConfig" new="com.xabber.android.classic.c_E">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <field old="APPLICATION_ID Ljava/lang/String;" new="f_e"/>
   <field old="BUILD_TYPE Ljava/lang/String;" new="f_B"/>
   <field old="DEBUG Z" new="f_m"/>
   <field old="FLAVOR Ljava/lang/String;" new="f_b"/>
   <field old="VERSION_CODE I" new="f_j"/>
   <field old="VERSION_NAME Ljava/lang/String;" new="f_d"/>
  </class>
  <class old="com.xabber.android.ui.AboutViewer" new="com.xabber.android.ui.AboutViewer">
   <method old="createIntent(Landroid/content/Context;)Landroid/content/Intent;" new="m_yBa"/>
   <method old="onActivityResult(IILandroid/content/Intent;)V" new="onActivityResult"/>
   <method old="onCreate(Landroid/os/Bundle;)V" new="onCreate"/>
   <method old="onDestroy()V" new="onDestroy"/>
   <method old="onNewIntent(Landroid/content/Intent;)V" new="onNewIntent"/>
   <method old="onPause()V" new="onPause"/>
   <method old="onResume()V" new="onResume"/>
   <method old="startActivity(Landroid/content/Intent;)V" new="startActivity"/>
   <method old="startActivityForResult(Landroid/content/Intent;I)V" new="startActivityForResult"/>
  </class>
  <class old="org.jivesoftware.smackx.MultipleRecipientManager$PacketCopy" new="org.jivesoftware.smackx.c_F">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="text Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.account.AccountAuthenticator" new="com.xabber.android.data.account.c_v">
   <method old="addAccount(Landroid/accounts/AccountAuthenticatorResponse;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Landroid/os/Bundle;)Landroid/os/Bundle;" new="addAccount"/>
   <method old="confirmCredentials(Landroid/accounts/AccountAuthenticatorResponse;Landroid/accounts/Account;Landroid/os/Bundle;)Landroid/os/Bundle;" new="confirmCredentials"/>
   <method old="editProperties(Landroid/accounts/AccountAuthenticatorResponse;Ljava/lang/String;)Landroid/os/Bundle;" new="editProperties"/>
   <method old="getAuthToken(Landroid/accounts/AccountAuthenticatorResponse;Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;)Landroid/os/Bundle;" new="getAuthToken"/>
   <method old="getAuthTokenLabel(Ljava/lang/String;)Ljava/lang/String;" new="getAuthTokenLabel"/>
   <method old="getInstance()Lcom/xabber/android/data/account/AccountAuthenticator;" new="m_Xr"/>
   <method old="hasFeatures(Landroid/accounts/AccountAuthenticatorResponse;Landroid/accounts/Account;[Ljava/lang/String;)Landroid/os/Bundle;" new="hasFeatures"/>
   <method old="updateCredentials(Landroid/accounts/AccountAuthenticatorResponse;Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;)Landroid/os/Bundle;" new="updateCredentials"/>
   <field old="instance Lcom/xabber/android/data/account/AccountAuthenticator;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.ChatList" new="com.xabber.android.ui.ChatList">
   <method old="createIntent(Landroid/content/Context;)Landroid/content/Intent;" new="m_yBa"/>
   <method old="onAccountsChanged(Ljava/util/Collection;)V" new="m_vB"/>
   <method old="onActivityResult(IILandroid/content/Intent;)V" new="onActivityResult"/>
   <method old="onChatChanged(Ljava/lang/String;Ljava/lang/String;Z)V" new="m_Id"/>
   <method old="onContactsChanged(Ljava/util/Collection;)V" new="m_bd"/>
   <method old="onCreate(Landroid/os/Bundle;)V" new="onCreate"/>
   <method old="onDestroy()V" new="onDestroy"/>
   <method old="onItemClick(Landroid/widget/AdapterView;Landroid/view/View;IJ)V" new="onItemClick"/>
   <method old="onNewIntent(Landroid/content/Intent;)V" new="onNewIntent"/>
   <method old="onPause()V" new="onPause"/>
   <method old="onResume()V" new="onResume"/>
   <method old="startActivity(Landroid/content/Intent;)V" new="startActivity"/>
   <method old="startActivityForResult(Landroid/content/Intent;I)V" new="startActivityForResult"/>
   <field old="listAdapter Lcom/xabber/android/ui/adapter/ChatListAdapter;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.notification.EntityNotificationProvider" new="wy.c_vA">
   <method old="add(Lcom/xabber/android/data/notification/NotificationItem;Ljava/lang/Boolean;)V" new="m_rga"/>
   <method old="canClearNotifications()Z" new="m_ab"/>
   <method old="clearAccountNotifications(Ljava/lang/String;)V" new="m_uC"/>
   <method old="clearNotifications()V" new="m_TC"/>
   <method old="get(Ljava/lang/String;)Lcom/xabber/android/data/notification/AccountNotificationItem;" new="m_yda"/>
   <method old="get(Ljava/lang/String;)Lcom/xabber/android/data/notification/EntityNotificationItem;" new="m_yda"/>
   <method old="get(Ljava/lang/String;Ljava/lang/String;)Lcom/xabber/android/data/notification/EntityNotificationItem;" new="m_uIa"/>
   <method old="getIcon()I" new="m_qb"/>
   <method old="getNotifications()Ljava/util/Collection;" new="m_Tc"/>
   <method old="getSound()Landroid/net/Uri;" new="m_Qc"/>
   <method old="getStreamType()I" new="m_Xc"/>
   <method old="remove(Lcom/xabber/android/data/notification/NotificationItem;)Z" new="m_lha"/>
   <method old="remove(Ljava/lang/String;)Z" new="m_Tfa"/>
   <method old="remove(Ljava/lang/String;Ljava/lang/String;)Z" new="m_cFa"/>
   <method old="setCanClearNotifications(Z)V" new="m_xha"/>
   <field old="items Ljava/util/Collection;" new="f_e"/>
  </class>
  <class old="com.xabber.xmpp.vcard.AddressProvider" new="com.xabber.xmpp.vcard.c_z">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/vcard/Address;" new="m_ZZ"/>
   <method old="getInstance()Lcom/xabber/xmpp/vcard/AddressProvider;" new="m_Xr"/>
   <method old="getTypes()[Lcom/xabber/xmpp/vcard/AddressType;" new="m_xg"/>
   <method old="getTypes()[Ljava/lang/Enum;" new="m_xg"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/AbstractTypedData;)Z" new="m_caa"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/vcard/Address;)Z" new="m_LX"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
   <field old="instance Lcom/xabber/xmpp/vcard/AddressProvider;" new="f_m"/>
  </class>
  <class old="net.java.otr4j.io.messages.SignatureM" new="net.java.otr4j.io.messages.c_H">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="hashCode()I" new="hashCode"/>
   <field old="keyPairID I" new="f_e"/>
   <field old="localLongTermPubKey Ljava/security/PublicKey;" new="f_d"/>
   <field old="localPubKey Ljavax/crypto/interfaces/DHPublicKey;" new="f_m"/>
   <field old="remotePubKey Ljavax/crypto/interfaces/DHPublicKey;" new="f_b"/>
  </class>
  <class old="com.jcraft.jzlib.InfBlocks" new="wy.c_Md">
   <method old="free(Lcom/jcraft/jzlib/ZStream;)V" new="m_UNa"/>
   <method old="inflate_flush(Lcom/jcraft/jzlib/ZStream;I)I" new="m_loa"/>
   <method old="proc(Lcom/jcraft/jzlib/ZStream;I)I" new="m_Vna"/>
   <method old="reset(Lcom/jcraft/jzlib/ZStream;[J)V" new="m_aMa"/>
   <method old="set_dictionary([BII)V" new="m_PNa"/>
   <method old="sync_point()I" new="m_dNa"/>
   <field old="BAD I" new="f_r"/>
   <field old="BTREE I" new="f_D"/>
   <field old="CODES I" new="f_C"/>
   <field old="DONE I" new="f_K"/>
   <field old="DRY I" new="f_z"/>
   <field old="DTREE I" new="f_a"/>
   <field old="LENS I" new="f_F"/>
   <field old="MANY I" new="f_l"/>
   <field old="STORED I" new="f_c"/>
   <field old="TABLE I" new="f_b"/>
   <field old="TYPE I" new="f_o"/>
   <field old="Z_BUF_ERROR I" new="f_L"/>
   <field old="Z_DATA_ERROR I" new="f_A"/>
   <field old="Z_ERRNO I" new="f_g"/>
   <field old="Z_MEM_ERROR I" new="f_B"/>
   <field old="Z_NEED_DICT I" new="f_U"/>
   <field old="Z_OK I" new="f_Z"/>
   <field old="Z_STREAM_END I" new="f_E"/>
   <field old="Z_STREAM_ERROR I" new="f_y"/>
   <field old="Z_VERSION_ERROR I" new="f_H"/>
   <field old="bb [I" new="f_w"/>
   <field old="bitb I" new="f_R"/>
   <field old="bitk I" new="f_d"/>
   <field old="blens [I" new="f_Y"/>
   <field old="border [I" new="f_h"/>
   <field old="check J" new="f_i"/>
   <field old="checkfn Ljava/lang/Object;" new="f_I"/>
   <field old="codes Lcom/jcraft/jzlib/InfCodes;" new="f_W"/>
   <field old="end I" new="f_n"/>
   <field old="hufts [I" new="f_J"/>
   <field old="index I" new="f_S"/>
   <field old="inflate_mask [I" new="f_u"/>
   <field old="inftree Lcom/jcraft/jzlib/InfTree;" new="f_f"/>
   <field old="last I" new="f_G"/>
   <field old="left I" new="f_p"/>
   <field old="mode I" new="f_m"/>
   <field old="read I" new="f_P"/>
   <field old="table I" new="f_j"/>
   <field old="tb [I" new="f_e"/>
   <field old="window [B" new="f_M"/>
   <field old="write I" new="f_k"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$1$1" new="org.jivesoftware.smackx.bytestreams.ibb.c_a">
   <method old="connectionClosed()V" new="m_r"/>
   <method old="connectionClosedOnError(Ljava/lang/Exception;)V" new="m_U"/>
   <method old="reconnectingIn(I)V" new="m_Z"/>
   <method old="reconnectionFailed(Ljava/lang/Exception;)V" new="m_S"/>
   <method old="reconnectionSuccessful()V" new="m_W"/>
   <field old="this$0 Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamManager$1;" new="f_b"/>
   <field old="val$connection Lorg/jivesoftware/smack/Connection;" new="f_e"/>
   <field old="val$manager Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamManager;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.extension.vcard.VCardTable$Fields" new="wy.c_XC">
   <field old="FIRST_NAME Ljava/lang/String;" new="f_m"/>
   <field old="FORMATTED_NAME Ljava/lang/String;" new="f_d"/>
   <field old="LAST_NAME Ljava/lang/String;" new="f_B"/>
   <field old="MIDDLE_NAME Ljava/lang/String;" new="f_e"/>
   <field old="NICK_NAME Ljava/lang/String;" new="f_j"/>
   <field old="USER Ljava/lang/String;" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.MUCInitialPresence" new="org.jivesoftware.smackx.packet.c_U">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getHistory()Lorg/jivesoftware/smackx/packet/MUCInitialPresence$History;" new="m_sk"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="getPassword()Ljava/lang/String;" new="m_rj"/>
   <method old="setHistory(Lorg/jivesoftware/smackx/packet/MUCInitialPresence$History;)V" new="m_bl"/>
   <method old="setPassword(Ljava/lang/String;)V" new="m_RK"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="history Lorg/jivesoftware/smackx/packet/MUCInitialPresence$History;" new="f_m"/>
   <field old="password Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="org.jivesoftware.smackx.provider.DelayInfoProvider" new="org.jivesoftware.smackx.provider.c_e">
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_I"/>
  </class>
  <class old="net.java.otr4j.io.messages.SignatureX" new="net.java.otr4j.io.messages.c_E">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="hashCode()I" new="hashCode"/>
   <field old="dhKeyID I" new="f_e"/>
   <field old="longTermPublicKey Ljava/security/PublicKey;" new="f_b"/>
   <field old="signature [B" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession" new="org.jivesoftware.smackx.bytestreams.ibb.c_D">
   <method old="access$1000(Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamSession;)Ljava/lang/String;" new="m_bR"/>
   <method old="access$1100(Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamSession;)Lorg/jivesoftware/smackx/bytestreams/ibb/packet/Open;" new="m_Bm"/>
   <method old="access$800(Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamSession;)Lorg/jivesoftware/smack/Connection;" new="m_kn"/>
   <method old="close()V" new="m_la"/>
   <method old="closeByLocal(Z)V" new="m_Jp"/>
   <method old="closeByPeer(Lorg/jivesoftware/smackx/bytestreams/ibb/packet/Close;)V" new="m_FO"/>
   <method old="getInputStream()Ljava/io/InputStream;" new="m_ma"/>
   <method old="getOutputStream()Ljava/io/OutputStream;" new="m_Da"/>
   <method old="getReadTimeout()I" new="m_ga"/>
   <method old="isCloseBothStreamsEnabled()Z" new="m_am"/>
   <method old="setCloseBothStreamsEnabled(Z)V" new="m_Po"/>
   <method old="setReadTimeout(I)V" new="m_za"/>
   <field old="byteStreamRequest Lorg/jivesoftware/smackx/bytestreams/ibb/packet/Open;" new="f_k"/>
   <field old="closeBothStreamsEnabled Z" new="f_d"/>
   <field old="connection Lorg/jivesoftware/smack/Connection;" new="f_m"/>
   <field old="inputStream Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamSession$IBBInputStream;" new="f_B"/>
   <field old="isClosed Z" new="f_j"/>
   <field old="outputStream Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamSession$IBBOutputStream;" new="f_e"/>
   <field old="remoteJID Ljava/lang/String;" new="f_b"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.params.ParametersWithRandom" new="wy.c_aB">
   <method old="getParameters()Lnet/java/otr4j/bouncycastle/crypto/CipherParameters;" new="m_Paa"/>
   <method old="getRandom()Ljava/security/SecureRandom;" new="m_Qy"/>
   <field old="parameters Lnet/java/otr4j/bouncycastle/crypto/CipherParameters;" new="f_e"/>
   <field old="random Ljava/security/SecureRandom;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.DatabaseManager" new="com.xabber.android.data.c_i">
   <method old="addTable(Lcom/xabber/android/data/DatabaseTable;)V" new="m_Vma"/>
   <method old="collectionFromCommaSeparated(Ljava/lang/String;)Ljava/util/Collection;" new="m_uma"/>
   <method old="commaSeparatedFromCollection(Ljava/util/Collection;)Ljava/lang/String;" new="m_MNa"/>
   <method old="dropTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)V" new="m_ooa"/>
   <method old="execSQL(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)V" new="m_Pma"/>
   <method old="getInstance()Lcom/xabber/android/data/DatabaseManager;" new="m_Xr"/>
   <method old="in(Ljava/lang/String;Ljava/util/Collection;)Ljava/lang/String;" new="m_Ema"/>
   <method old="migrate(Landroid/database/sqlite/SQLiteDatabase;I)V" new="m_Cd"/>
   <method old="onClear()V" new="m_nC"/>
   <method old="onCreate(Landroid/database/sqlite/SQLiteDatabase;)V" new="onCreate"/>
   <method old="onLoad()V" new="m_pA"/>
   <method old="onUpgrade(Landroid/database/sqlite/SQLiteDatabase;II)V" new="onUpgrade"/>
   <method old="removeAccount(Ljava/lang/String;)V" new="m_YEa"/>
   <method old="renameTable(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;)V" new="m_nna"/>
   <field old="DATABASE_NAME Ljava/lang/String;" new="f_e"/>
   <field old="DATABASE_VERSION I" new="f_d"/>
   <field old="DOWNGRAD_EXCEPTION Landroid/database/sqlite/SQLiteException;" new="f_m"/>
   <field old="instance Lcom/xabber/android/data/DatabaseManager;" new="f_b"/>
   <field old="registeredTables Ljava/util/ArrayList;" new="f_B"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.DataForm" new="org.jivesoftware.smackx.packet.c_Na">
   <method old="addField(Lorg/jivesoftware/smackx/FormField;)V" new="m_jj"/>
   <method old="addInstruction(Ljava/lang/String;)V" new="m_VJ"/>
   <method old="addItem(Lorg/jivesoftware/smackx/packet/DataForm$Item;)V" new="m_aL"/>
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getFields()Ljava/util/Iterator;" new="m_qJ"/>
   <method old="getInstructions()Ljava/util/Iterator;" new="m_pj"/>
   <method old="getItems()Ljava/util/Iterator;" new="m_Vj"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="getReportedData()Lorg/jivesoftware/smackx/packet/DataForm$ReportedData;" new="m_ZL"/>
   <method old="getTitle()Ljava/lang/String;" new="m_zb"/>
   <method old="getType()Ljava/lang/String;" new="m_b"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="setInstructions(Ljava/util/List;)V" new="m_cL"/>
   <method old="setReportedData(Lorg/jivesoftware/smackx/packet/DataForm$ReportedData;)V" new="m_Tl"/>
   <method old="setTitle(Ljava/lang/String;)V" new="m_Ok"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_e"/>
   <field old="NAMESPACE Ljava/lang/String;" new="f_m"/>
   <field old="fields Ljava/util/List;" new="f_j"/>
   <field old="instructions Ljava/util/List;" new="f_B"/>
   <field old="items Ljava/util/List;" new="f_k"/>
   <field old="reportedData Lorg/jivesoftware/smackx/packet/DataForm$ReportedData;" new="f_d"/>
   <field old="title Ljava/lang/String;" new="f_l"/>
   <field old="type Ljava/lang/String;" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smackx.ChatStateManager$OutgoingMessageInterceptor" new="org.jivesoftware.smackx.c_S">
   <method old="interceptPacket(Lorg/jivesoftware/smack/packet/Packet;)V" new="m_ca"/>
   <field old="this$0 Lorg/jivesoftware/smackx/ChatStateManager;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.muc.SubjectUpdatedListener" new="org.jivesoftware.smackx.muc.c_E">
   <method old="subjectUpdated(Ljava/lang/String;Ljava/lang/String;)V" new="m_f"/>
  </class>
  <class old="com.xabber.xmpp.archive.Removed" new="com.xabber.xmpp.archive.Removed">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getStart()Ljava/util/Date;" new="m_vC"/>
   <method old="getStartString()Ljava/lang/String;" new="m_lC"/>
   <method old="getVersion()Ljava/lang/Integer;" new="m_Sd"/>
   <method old="getWith()Ljava/lang/String;" new="m_ib"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="setStart(Ljava/util/Date;)V" new="m_SBa"/>
   <method old="setStartString(Ljava/lang/String;)V" new="m_tca"/>
   <method old="setVersion(Ljava/lang/Integer;)V" new="m_JCa"/>
   <method old="setWith(Ljava/lang/String;)V" new="m_mda"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="ELEMENT_NAME"/>
   <field old="START_ATTRIBUTE Ljava/lang/String;" new="f_d"/>
   <field old="VERSION_ATTRIBUTE Ljava/lang/String;" new="f_m"/>
   <field old="WITH_ATTRIBUTE Ljava/lang/String;" new="f_j"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.DefaultPrivateData" new="org.jivesoftware.smackx.packet.c_Ja">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getNames()Ljava/util/Iterator;" new="m_tK"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="getValue(Ljava/lang/String;)Ljava/lang/String;" new="m_oF"/>
   <method old="setValue(Ljava/lang/String;Ljava/lang/String;)V" new="m_dk"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="elementName Ljava/lang/String;" new="f_e"/>
   <field old="map Ljava/util/Map;" new="f_b"/>
   <field old="namespace Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.Application" new="com.xabber.android.data.Application">
   <method old="access$000(Lcom/xabber/android/data/Application;)Z" new="m_Joa"/>
   <method old="access$100(Lcom/xabber/android/data/Application;)V" new="m_aoa"/>
   <method old="access$200(Lcom/xabber/android/data/Application;)V" new="m_uoa"/>
   <method old="access$300(Lcom/xabber/android/data/Application;)Ljava/util/concurrent/Future;" new="m_jMa"/>
   <method old="access$400(Lcom/xabber/android/data/Application;)V" new="m_zLa"/>
   <method old="access$500(Lcom/xabber/android/data/Application;)V" new="m_yoa"/>
   <method old="access$600(Lcom/xabber/android/data/Application;)V" new="m_hma"/>
   <method old="access$700(Lcom/xabber/android/data/Application;)Ljava/util/ArrayList;" new="m_Sma"/>
   <method old="addManager(Ljava/lang/Object;)V" new="m_zma"/>
   <method old="addUIListener(Ljava/lang/Class;Lcom/xabber/android/data/BaseUIListener;)V" new="m_aOa"/>
   <method old="clear()V" new="m_EA"/>
   <method old="doNotify()Z" new="m_Tna"/>
   <method old="getInstance()Lcom/xabber/android/data/Application;" new="m_Xr"/>
   <method old="getManagers(Ljava/lang/Class;)Ljava/util/Collection;" new="m_CNa"/>
   <method old="getOrCreateUIListeners(Ljava/lang/Class;)Ljava/util/Collection;" new="m_jOa"/>
   <method old="getUIListeners(Ljava/lang/Class;)Ljava/util/Collection;" new="m_pMa"/>
   <method old="isClosing()Z" new="m_cOa"/>
   <method old="isContactsSupported()Z" new="m_Roa"/>
   <method old="isInitialized()Z" new="m_TLa"/>
   <method old="onClose()V" new="m_cc"/>
   <method old="onCreate()V" new="onCreate"/>
   <method old="onError(I)V" new="m_MA"/>
   <method old="onError(Lcom/xabber/android/data/NetworkException;)V" new="m_ioa"/>
   <method old="onInitialized()V" new="m_ub"/>
   <method old="onLoad()V" new="m_pA"/>
   <method old="onLowMemory()V" new="onLowMemory"/>
   <method old="onServiceDestroy()V" new="m_DOa"/>
   <method old="onServiceStarted()V" new="m_Yna"/>
   <method old="onTerminate()V" new="onTerminate"/>
   <method old="onUnload()V" new="m_FB"/>
   <method old="removeUIListener(Ljava/lang/Class;Lcom/xabber/android/data/BaseUIListener;)V" new="m_JMa"/>
   <method old="requestToClear()V" new="m_gNa"/>
   <method old="requestToClose()V" new="m_Kna"/>
   <method old="requestToWipe()V" new="m_ENa"/>
   <method old="runInBackground(Ljava/lang/Runnable;)V" new="m_Fna"/>
   <method old="runOnUiThread(Ljava/lang/Runnable;)V" new="m_bja"/>
   <method old="runOnUiThreadDelay(Ljava/lang/Runnable;J)V" new="m_qna"/>
   <method old="startTimer()V" new="m_Goa"/>
   <field old="SDK_INT I" new="f_d"/>
   <field old="backgroundExecutor Ljava/util/concurrent/ExecutorService;" new="f_f"/>
   <field old="closed Z" new="f_j"/>
   <field old="closing Z" new="f_k"/>
   <field old="handler Landroid/os/Handler;" new="f_D"/>
   <field old="initialized Z" new="f_I"/>
   <field old="instance Lcom/xabber/android/data/Application;" new="f_l"/>
   <field old="loadFuture Ljava/util/concurrent/Future;" new="f_M"/>
   <field old="managerInterfaces Ljava/util/Map;" new="f_J"/>
   <field old="notified Z" new="f_K"/>
   <field old="registeredManagers Ljava/util/ArrayList;" new="f_b"/>
   <field old="serviceStarted Z" new="f_B"/>
   <field old="timerRunnable Ljava/lang/Runnable;" new="f_e"/>
   <field old="uiListeners Ljava/util/Map;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.proxy.Socks4ProxySocketFactory" new="org.jivesoftware.smack.proxy.c_H">
   <method old="createSocket(Ljava/lang/String;I)Ljava/net/Socket;" new="createSocket"/>
   <method old="createSocket(Ljava/lang/String;ILjava/net/InetAddress;I)Ljava/net/Socket;" new="createSocket"/>
   <method old="createSocket(Ljava/net/InetAddress;I)Ljava/net/Socket;" new="createSocket"/>
   <method old="createSocket(Ljava/net/InetAddress;ILjava/net/InetAddress;I)Ljava/net/Socket;" new="createSocket"/>
   <method old="socks4ProxifiedSocket(Ljava/lang/String;I)Ljava/net/Socket;" new="m_PS"/>
   <field old="proxy Lorg/jivesoftware/smack/proxy/ProxyInfo;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.packet.RosterPacket" new="org.jivesoftware.smack.packet.RosterPacket">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="addRosterItem(Lorg/jivesoftware/smack/packet/RosterPacket$Item;)V" new="m_kT"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getRosterItemCount()I" new="m_Nt"/>
   <method old="getRosterItems()Ljava/util/Collection;" new="m_sT"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getVersion()Ljava/lang/String;" new="m_Sd"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="setVersion(Ljava/lang/String;)V" new="m_TL"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="rosterItems Ljava/util/List;" new="f_e"/>
   <field old="version Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.DNSSEC" new="org.xbill.DNS.c_nC">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="BigIntegerLength(Ljava/math/BigInteger;)I" new="m_wH"/>
   <method old="DSASignaturefromDNS([B)[B" new="m_QG"/>
   <method old="DSASignaturetoDNS([BI)[B" new="m_Ai"/>
   <method old="algString(I)Ljava/lang/String;" new="m_aj"/>
   <method old="checkAlgorithm(Ljava/security/PrivateKey;I)V" new="m_li"/>
   <method old="digestMessage(Lorg/xbill/DNS/SIGRecord;Lorg/xbill/DNS/Message;[B)[B" new="m_BI"/>
   <method old="digestRRset(Lorg/xbill/DNS/RRSIGRecord;Lorg/xbill/DNS/RRset;)[B" new="m_Qg"/>
   <method old="digestSIG(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/SIGBase;)V" new="m_dI"/>
   <method old="fromDSAPublicKey(Ljava/security/interfaces/DSAPublicKey;)[B" new="m_RI"/>
   <method old="fromPublicKey(Ljava/security/PublicKey;I)[B" new="m_iH"/>
   <method old="fromRSAPublicKey(Ljava/security/interfaces/RSAPublicKey;)[B" new="m_ki"/>
   <method old="generateDS(Lorg/xbill/DNS/DNSKEYRecord;I)[B" new="m_cI"/>
   <method old="matches(Lorg/xbill/DNS/SIGBase;Lorg/xbill/DNS/KEYBase;)Z" new="m_bi"/>
   <method old="readBigInteger(Lorg/xbill/DNS/DNSInput;)Ljava/math/BigInteger;" new="m_yg"/>
   <method old="readBigInteger(Lorg/xbill/DNS/DNSInput;I)Ljava/math/BigInteger;" new="m_Gi"/>
   <method old="sign(Ljava/security/PrivateKey;Ljava/security/PublicKey;I[BLjava/lang/String;)[B" new="m_gH"/>
   <method old="sign(Lorg/xbill/DNS/RRset;Lorg/xbill/DNS/DNSKEYRecord;Ljava/security/PrivateKey;Ljava/util/Date;Ljava/util/Date;)Lorg/xbill/DNS/RRSIGRecord;" new="m_lh"/>
   <method old="sign(Lorg/xbill/DNS/RRset;Lorg/xbill/DNS/DNSKEYRecord;Ljava/security/PrivateKey;Ljava/util/Date;Ljava/util/Date;Ljava/lang/String;)Lorg/xbill/DNS/RRSIGRecord;" new="m_XG"/>
   <method old="signMessage(Lorg/xbill/DNS/Message;Lorg/xbill/DNS/SIGRecord;Lorg/xbill/DNS/KEYRecord;Ljava/security/PrivateKey;Ljava/util/Date;Ljava/util/Date;)Lorg/xbill/DNS/SIGRecord;" new="m_eh"/>
   <method old="toDSAPublicKey(Lorg/xbill/DNS/KEYBase;)Ljava/security/PublicKey;" new="m_fi"/>
   <method old="toPublicKey(Lorg/xbill/DNS/KEYBase;)Ljava/security/PublicKey;" new="m_dG"/>
   <method old="toRSAPublicKey(Lorg/xbill/DNS/KEYBase;)Ljava/security/PublicKey;" new="m_fh"/>
   <method old="verify(Ljava/security/PublicKey;I[B[B)V" new="m_di"/>
   <method old="verify(Lorg/xbill/DNS/RRset;Lorg/xbill/DNS/RRSIGRecord;Lorg/xbill/DNS/DNSKEYRecord;)V" new="m_PH"/>
   <method old="verifyMessage(Lorg/xbill/DNS/Message;[BLorg/xbill/DNS/SIGRecord;Lorg/xbill/DNS/SIGRecord;Lorg/xbill/DNS/KEYRecord;)V" new="m_tG"/>
   <method old="writeBigInteger(Lorg/xbill/DNS/DNSOutput;Ljava/math/BigInteger;)V" new="m_pI"/>
   <field old="ASN1_INT I" new="f_e"/>
   <field old="ASN1_SEQ I" new="f_b"/>
   <field old="DSA_LEN I" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.Name" new="org.xbill.DNS.c_Ga">
   <method old="append([BII)V" new="m_SG"/>
   <method old="appendFromString(Ljava/lang/String;[BII)V" new="m_hI"/>
   <method old="appendSafe([BII)V" new="m_Pg"/>
   <method old="byteString([BI)Ljava/lang/String;" new="m_Dh"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="concatenate(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_rG"/>
   <method old="copy(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)V" new="m_RG"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="equals([BI)Z" new="m_Ri"/>
   <method old="fromConstantString(Ljava/lang/String;)Lorg/xbill/DNS/Name;" new="m_LH"/>
   <method old="fromDNAME(Lorg/xbill/DNS/DNAMERecord;)Lorg/xbill/DNS/Name;" new="m_HG"/>
   <method old="fromString(Ljava/lang/String;)Lorg/xbill/DNS/Name;" new="m_tc"/>
   <method old="fromString(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_qI"/>
   <method old="getLabel(I)[B" new="m_AH"/>
   <method old="getLabelString(I)Ljava/lang/String;" new="m_Tg"/>
   <method old="getlabels()I" new="m_qh"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="isAbsolute()Z" new="m_sG"/>
   <method old="isWild()Z" new="m_zI"/>
   <method old="labels()I" new="m_lH"/>
   <method old="length()S" new="m_yH"/>
   <method old="offset(I)I" new="m_BH"/>
   <method old="parseException(Ljava/lang/String;Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;" new="m_yi"/>
   <method old="relativize(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_wi"/>
   <method old="setlabels(I)V" new="m_Zi"/>
   <method old="setoffset(II)V" new="m_Vh"/>
   <method old="subdomain(Lorg/xbill/DNS/Name;)Z" new="m_Sh"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire()[B" new="m_tF"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;)V" new="m_zi"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_MH"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="toWireCanonical(Lorg/xbill/DNS/DNSOutput;)V" new="m_th"/>
   <method old="wild(I)Lorg/xbill/DNS/Name;" new="m_eI"/>
   <field old="LABEL_COMPRESSION I" new="f_k"/>
   <field old="LABEL_MASK I" new="f_l"/>
   <field old="LABEL_NORMAL I" new="f_g"/>
   <field old="MAXLABEL I" new="f_K"/>
   <field old="MAXLABELS I" new="f_G"/>
   <field old="MAXNAME I" new="f_B"/>
   <field old="MAXOFFSETS I" new="f_I"/>
   <field old="byteFormat Ljava/text/DecimalFormat;" new="f_j"/>
   <field old="empty Lorg/xbill/DNS/Name;" new="f_M"/>
   <field old="emptyLabel [B" new="f_H"/>
   <field old="hashcode I" new="f_D"/>
   <field old="lowercase [B" new="f_d"/>
   <field old="name [B" new="f_m"/>
   <field old="offsets J" new="f_b"/>
   <field old="root Lorg/xbill/DNS/Name;" new="f_F"/>
   <field old="serialVersionUID J" new="f_J"/>
   <field old="wild Lorg/xbill/DNS/Name;" new="f_e"/>
   <field old="wildLabel [B" new="f_f"/>
  </class>
  <class old="com.jcraft.jzlib.ZInputStream" new="wy.c_hd">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="close()V" new="close"/>
   <method old="getFlushMode()I" new="m_Fma"/>
   <method old="getTotalIn()J" new="m_RMa"/>
   <method old="getTotalOut()J" new="m_WLa"/>
   <method old="read()I" new="read"/>
   <method old="read([BII)I" new="read"/>
   <method old="setFlushMode(I)V" new="m_Cma"/>
   <method old="skip(J)J" new="skip"/>
   <field old="buf [B" new="f_k"/>
   <field old="buf1 [B" new="f_d"/>
   <field old="bufsize I" new="f_m"/>
   <field old="compress Z" new="f_l"/>
   <field old="flush I" new="f_b"/>
   <field old="in Ljava/io/InputStream;" new="f_B"/>
   <field old="nomoreinput Z" new="f_j"/>
   <field old="z Lcom/jcraft/jzlib/ZStream;" new="f_e"/>
  </class>
  <class old="org.xbill.DNS.SIGBase" new="org.xbill.DNS.c_x">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getAlgorithm()I" new="m_Ne"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getExpire()Ljava/util/Date;" new="m_Fg"/>
   <method old="getFootprint()I" new="m_VF"/>
   <method old="getLabels()I" new="m_UE"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getOrigTTL()J" new="m_Wf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getSignature()[B" new="m_IE"/>
   <method old="getSigner()Lorg/xbill/DNS/Name;" new="m_Ve"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getTimeSigned()Ljava/util/Date;" new="m_Je"/>
   <method old="getType()I" new="m_b"/>
   <method old="getTypeCovered()I" new="m_WF"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setSignature([B)V" new="m_GF"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="alg I" new="f_l"/>
   <field old="covered I" new="f_d"/>
   <field old="dclass I" new="f_m"/>
   <field old="expire Ljava/util/Date;" new="f_I"/>
   <field old="footprint I" new="f_e"/>
   <field old="labels I" new="f_B"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="origttl J" new="f_k"/>
   <field old="serialVersionUID J" new="f_f"/>
   <field old="signature [B" new="f_j"/>
   <field old="signer Lorg/xbill/DNS/Name;" new="f_b"/>
   <field old="timeSigned Ljava/util/Date;" new="f_K"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="org.jivesoftware.smackx.provider.MessageEventProvider" new="org.jivesoftware.smackx.provider.c_J">
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_I"/>
  </class>
  <class old="com.xabber.android.data.message.chat.PrivateChatTable" new="wy.c_kd">
   <method old="clear()V" new="m_EA"/>
   <method old="create(Landroid/database/sqlite/SQLiteDatabase;)V" new="m_AB"/>
   <method old="getAccount(Landroid/database/Cursor;)Ljava/lang/String;" new="m_Jea"/>
   <method old="getInstance()Lcom/xabber/android/data/message/chat/PrivateChatTable;" new="m_Xr"/>
   <method old="getListOrder()Ljava/lang/String;" new="m_YDa"/>
   <method old="getProjection()[Ljava/lang/String;" new="m_AFa"/>
   <method old="getTableName()Ljava/lang/String;" new="m_dga"/>
   <method old="getUser(Landroid/database/Cursor;)Ljava/lang/String;" new="m_oDa"/>
   <method old="list()Landroid/database/Cursor;" new="m_wEa"/>
   <method old="migrate(Landroid/database/sqlite/SQLiteDatabase;I)V" new="m_Cd"/>
   <method old="remove(Ljava/lang/String;Ljava/lang/String;)V" new="m_cFa"/>
   <method old="removeAccount(Ljava/lang/String;)V" new="m_YEa"/>
   <method old="write(Ljava/lang/String;Ljava/lang/String;)V" new="m_Dga"/>
   <field old="NAME Ljava/lang/String;" new="f_B"/>
   <field old="PROJECTION [Ljava/lang/String;" new="f_d"/>
   <field old="databaseManager Lcom/xabber/android/data/DatabaseManager;" new="f_b"/>
   <field old="instance Lcom/xabber/android/data/message/chat/PrivateChatTable;" new="f_e"/>
   <field old="writeLock Ljava/lang/Object;" new="f_m"/>
   <field old="writeStatement Landroid/database/sqlite/SQLiteStatement;" new="f_j"/>
  </class>
  <class old="com.xabber.android.data.OnUnloadListener" new="com.xabber.android.data.c_B">
   <method old="onUnload()V" new="m_FB"/>
  </class>
  <class old="org.jivesoftware.smack.ConnectionConfiguration$SecurityMode" new="org.jivesoftware.smack.ConnectionConfiguration$SecurityMode">
   <method old="valueOf(Ljava/lang/String;)Lorg/jivesoftware/smack/ConnectionConfiguration$SecurityMode;" new="valueOf"/>
   <method old="values()[Lorg/jivesoftware/smack/ConnectionConfiguration$SecurityMode;" new="values"/>
   <field old="$VALUES [Lorg/jivesoftware/smack/ConnectionConfiguration$SecurityMode;" new="f_m"/>
   <field old="disabled Lorg/jivesoftware/smack/ConnectionConfiguration$SecurityMode;" new="f_b"/>
   <field old="enabled Lorg/jivesoftware/smack/ConnectionConfiguration$SecurityMode;" new="f_d"/>
   <field old="legacy Lorg/jivesoftware/smack/ConnectionConfiguration$SecurityMode;" new="f_B"/>
   <field old="required Lorg/jivesoftware/smack/ConnectionConfiguration$SecurityMode;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.NetworkException" new="com.xabber.android.data.c_d">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getResourceId()I" new="m_zJa"/>
   <method old="printStackTrace(Ljava/io/PrintStream;)V" new="printStackTrace"/>
   <method old="printStackTrace(Ljava/io/PrintWriter;)V" new="printStackTrace"/>
   <field old="resourceId I" new="f_e"/>
   <field old="serialVersionUID J" new="f_b"/>
   <field old="wrappedThrowable Ljava/lang/Throwable;" new="f_m"/>
  </class>
  <class old="com.xabber.android.ui.helper.AvatarInflaterHelper" new="com.xabber.android.ui.helper.c_G">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createAbstractContactInflaterHelper()Lcom/xabber/android/ui/helper/AbstractAvatarInflaterHelper;" new="m_kCa"/>
   <method old="updateAvatar(Landroid/widget/ImageView;Lcom/xabber/android/data/roster/AbstractContact;)V" new="m_jba"/>
  </class>
  <class old="org.jivesoftware.smack.PacketWriter$KeepAliveTask" new="org.jivesoftware.smack.c_C">
   <method old="ping()V" new="m_tW"/>
   <method old="run()V" new="run"/>
   <method old="setThread(Ljava/lang/Thread;)V" new="m_mU"/>
   <field old="this$0 Lorg/jivesoftware/smack/PacketWriter;" new="f_e"/>
   <field old="thread Ljava/lang/Thread;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.entity.AbstractEntityTable" new="wy.c_EC">
   <method old="clear()V" new="m_EA"/>
   <method old="create(Landroid/database/sqlite/SQLiteDatabase;)V" new="m_AB"/>
   <method old="getAccount(Landroid/database/Cursor;)Ljava/lang/String;" new="m_Jea"/>
   <method old="getListOrder()Ljava/lang/String;" new="m_YDa"/>
   <method old="getProjection()[Ljava/lang/String;" new="m_AFa"/>
   <method old="getTableName()Ljava/lang/String;" new="m_dga"/>
   <method old="getUser(Landroid/database/Cursor;)Ljava/lang/String;" new="m_oDa"/>
   <method old="list()Landroid/database/Cursor;" new="m_wEa"/>
   <method old="migrate(Landroid/database/sqlite/SQLiteDatabase;I)V" new="m_Cd"/>
   <method old="removeAccount(Ljava/lang/String;)V" new="m_YEa"/>
  </class>
  <class old="org.jivesoftware.smackx.GatewayManager" new="org.jivesoftware.smackx.c_W">
   <method old="discoverGateway(Ljava/lang/String;)V" new="m_qr"/>
   <method old="getGateway(Ljava/lang/String;)Lorg/jivesoftware/smackx/Gateway;" new="m_xO"/>
   <method old="getInstanceFor(Lorg/jivesoftware/smack/Connection;)Lorg/jivesoftware/smackx/GatewayManager;" new="m_Rm"/>
   <method old="getLocalGateways()Ljava/util/List;" new="m_cP"/>
   <method old="getNonLocalGateways()Ljava/util/List;" new="m_wp"/>
   <method old="loadLocalGateways()V" new="m_Rr"/>
   <method old="loadNonLocalGateways()V" new="m_iR"/>
   <method old="refreshNonLocalGateways()V" new="m_XQ"/>
   <field old="connection Lorg/jivesoftware/smack/Connection;" new="f_d"/>
   <field old="gateways Ljava/util/Map;" new="f_m"/>
   <field old="instances Ljava/util/Map;" new="f_j"/>
   <field old="localGateways Ljava/util/Map;" new="f_k"/>
   <field old="nonLocalGateways Ljava/util/Map;" new="f_e"/>
   <field old="roster Lorg/jivesoftware/smack/Roster;" new="f_b"/>
   <field old="sdManager Lorg/jivesoftware/smackx/ServiceDiscoveryManager;" new="f_B"/>
  </class>
  <class old="org.jivesoftware.smack.util.DNSUtil" new="org.jivesoftware.smack.util.c_k">
   <method old="resolveSRV(Ljava/lang/String;)Lorg/jivesoftware/smack/util/DNSUtil$HostAddress;" new="m_Jt"/>
   <method old="resolveXMPPDomain(Ljava/lang/String;)Lorg/jivesoftware/smack/util/DNSUtil$HostAddress;" new="m_vs"/>
   <method old="resolveXMPPServerDomain(Ljava/lang/String;)Lorg/jivesoftware/smack/util/DNSUtil$HostAddress;" new="m_fS"/>
   <field old="ccache Ljava/util/Map;" new="f_e"/>
   <field old="scache Ljava/util/Map;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.extension.otr.OTRManager$3$1" new="com.xabber.android.data.extension.otr.c_j">
   <method old="run()V" new="run"/>
   <field old="this$1 Lcom/xabber/android/data/extension/otr/OTRManager$3;" new="f_e"/>
   <field old="val$e Ljava/security/NoSuchAlgorithmException;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.extension.otr.OTRManager$3$2" new="com.xabber.android.data.extension.otr.c_J">
   <method old="run()V" new="run"/>
   <field old="this$1 Lcom/xabber/android/data/extension/otr/OTRManager$3;" new="f_e"/>
   <field old="val$keyPair Ljava/security/KeyPair;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.roster.OnRosterChangedListener" new="com.xabber.android.data.roster.c_A">
   <method old="onContactStructuredInfoChanged(Lcom/xabber/android/data/roster/RosterContact;Lcom/xabber/android/data/roster/StructuredName;)V" new="m_bC"/>
   <method old="onPresenceChanged(Ljava/util/Collection;)V" new="m_mB"/>
   <method old="onRosterUpdate(Ljava/util/Collection;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Collection;Ljava/util/Collection;)V" new="m_AA"/>
  </class>
  <class old="com.xabber.android.data.extension.vcard.VCardRequest" new="wy.c_YC">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="addHash(Ljava/lang/String;)V" new="m_lIa"/>
   <method old="compareTo(Lcom/xabber/android/data/entity/BaseEntity;)I" new="m_bCa"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="equals(Ljava/lang/String;Ljava/lang/String;)Z" new="m_Bba"/>
   <method old="getAccount()Ljava/lang/String;" new="m_FC"/>
   <method old="getHashes()Ljava/util/Collection;" new="m_DGa"/>
   <method old="getPacketId()Ljava/lang/String;" new="m_KIa"/>
   <method old="getUser()Ljava/lang/String;" new="m_TA"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="account Ljava/lang/String;" new="f_m"/>
   <field old="hashes Ljava/util/HashSet;" new="f_m"/>
   <field old="packetId Ljava/lang/String;" new="f_b"/>
   <field old="user Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="org.xbill.DNS.HINFORecord" new="org.xbill.DNS.c_va">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getCPU()Ljava/lang/String;" new="m_Xg"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getOS()Ljava/lang/String;" new="m_ZH"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="cpu [B" new="f_m"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="os [B" new="f_b"/>
   <field old="serialVersionUID J" new="f_e"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="net.java.otr4j.OtrEngineImpl" new="net.java.otr4j.c_c">
   <method old="access$000(Lnet/java/otr4j/OtrEngineImpl;)Ljava/util/List;" new="m_gz"/>
   <method old="addOtrEngineListener(Lnet/java/otr4j/OtrEngineListener;)V" new="m_mc"/>
   <method old="endSession(Lnet/java/otr4j/session/SessionID;)V" new="m_rd"/>
   <method old="getHost()Lnet/java/otr4j/OtrEngineHost;" new="m_vD"/>
   <method old="getRemotePublicKey(Lnet/java/otr4j/session/SessionID;)Ljava/security/PublicKey;" new="m_od"/>
   <method old="getSession(Lnet/java/otr4j/session/SessionID;)Lnet/java/otr4j/session/Session;" new="m_pb"/>
   <method old="getSessionStatus(Lnet/java/otr4j/session/SessionID;)Lnet/java/otr4j/session/SessionStatus;" new="m_yB"/>
   <method old="refreshSession(Lnet/java/otr4j/session/SessionID;)V" new="m_ec"/>
   <method old="removeOtrEngineListener(Lnet/java/otr4j/OtrEngineListener;)V" new="m_Zb"/>
   <method old="setHost(Lnet/java/otr4j/OtrEngineHost;)V" new="m_OW"/>
   <method old="startSession(Lnet/java/otr4j/session/SessionID;)V" new="m_QB"/>
   <method old="transformReceiving(Lnet/java/otr4j/session/SessionID;Ljava/lang/String;)Ljava/lang/String;" new="m_qc"/>
   <method old="transformSending(Lnet/java/otr4j/session/SessionID;Ljava/lang/String;)Ljava/lang/String;" new="m_Ed"/>
   <method old="transformSending(Lnet/java/otr4j/session/SessionID;Ljava/lang/String;Ljava/util/List;)Ljava/lang/String;" new="m_fb"/>
   <field old="host Lnet/java/otr4j/OtrEngineHost;" new="f_m"/>
   <field old="listeners Ljava/util/List;" new="f_e"/>
   <field old="sessions Ljava/util/Map;" new="f_b"/>
  </class>
  <class old="com.xabber.android.ui.ContactEditor" new="com.xabber.android.ui.ContactEditor">
   <method old="createIntent(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;" new="m_CAa"/>
   <method old="getAccount(Landroid/content/Intent;)Ljava/lang/String;" new="m_lCa"/>
   <method old="getInitialGroups()Ljava/util/Collection;" new="m_Uca"/>
   <method old="getInitialSelected()Ljava/util/Collection;" new="m_Uba"/>
   <method old="getSelected()Ljava/util/ArrayList;" new="m_nba"/>
   <method old="getUser(Landroid/content/Intent;)Ljava/lang/String;" new="m_NCa"/>
   <method old="onAccept(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_Lc"/>
   <method old="onAccountsChanged(Ljava/util/Collection;)V" new="m_vB"/>
   <method old="onActivityResult(IILandroid/content/Intent;)V" new="onActivityResult"/>
   <method old="onCancel(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_Vb"/>
   <method old="onContactsChanged(Ljava/util/Collection;)V" new="m_bd"/>
   <method old="onCreate(Landroid/os/Bundle;)V" new="onCreate"/>
   <method old="onCreateDialog(I)Landroid/app/Dialog;" new="onCreateDialog"/>
   <method old="onCreateOptionsMenu(Landroid/view/Menu;)Z" new="onCreateOptionsMenu"/>
   <method old="onDecline(Lcom/xabber/android/ui/dialog/DialogBuilder;)V" new="m_ad"/>
   <method old="onDestroy()V" new="onDestroy"/>
   <method old="onInflate(Landroid/os/Bundle;)V" new="m_TBa"/>
   <method old="onItemClick(Landroid/widget/AdapterView;Landroid/view/View;IJ)V" new="onItemClick"/>
   <method old="onNewIntent(Landroid/content/Intent;)V" new="onNewIntent"/>
   <method old="onOptionsItemSelected(Landroid/view/MenuItem;)Z" new="onOptionsItemSelected"/>
   <method old="onPause()V" new="onPause"/>
   <method old="onResume()V" new="onResume"/>
   <method old="onSaveInstanceState(Landroid/os/Bundle;)V" new="onSaveInstanceState"/>
   <method old="setGroups(Ljava/util/Collection;Ljava/util/Collection;)V" new="m_ZBa"/>
   <method old="startActivity(Landroid/content/Intent;)V" new="startActivity"/>
   <method old="startActivityForResult(Landroid/content/Intent;I)V" new="startActivityForResult"/>
   <method old="update()V" new="m_fca"/>
   <field old="DIALOG_ADD_GROUP_ID I" new="f_j"/>
   <field old="OPTION_MENU_ADD_GROUP_ID I" new="f_m"/>
   <field old="account Ljava/lang/String;" new="f_e"/>
   <field old="user Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.DNSKEYRecord" new="org.xbill.DNS.c_SB">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getAlgorithm()I" new="m_Ne"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getFlags()I" new="m_JG"/>
   <method old="getFootprint()I" new="m_VF"/>
   <method old="getKey()[B" new="m_xa"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getProtocol()I" new="m_jF"/>
   <method old="getPublicKey()Ljava/security/PublicKey;" new="m_TG"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="alg I" new="f_k"/>
   <field old="dclass I" new="f_m"/>
   <field old="flags I" new="f_j"/>
   <field old="footprint I" new="f_d"/>
   <field old="key [B" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="proto I" new="f_B"/>
   <field old="publicKey Ljava/security/PublicKey;" new="f_e"/>
   <field old="serialVersionUID J" new="f_m"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="com.xabber.android.data.roster.SubscriptionRequest" new="com.xabber.android.data.roster.c_e">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="compareTo(Lcom/xabber/android/data/entity/BaseEntity;)I" new="m_bCa"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="equals(Ljava/lang/String;Ljava/lang/String;)Z" new="m_Bba"/>
   <method old="getAccount()Ljava/lang/String;" new="m_FC"/>
   <method old="getConfirmation()Ljava/lang/String;" new="m_sEa"/>
   <method old="getIntent()Landroid/content/Intent;" new="m_db"/>
   <method old="getText()Ljava/lang/String;" new="m_ZA"/>
   <method old="getTitle()Ljava/lang/String;" new="m_zb"/>
   <method old="getUser()Ljava/lang/String;" new="m_TA"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="account Ljava/lang/String;" new="f_m"/>
   <field old="user Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="net.java.otr4j.crypto.OtrCryptoException" new="wy.c_mB">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
  </class>
  <class old="com.xabber.android.data.connection.TLSMode" new="com.xabber.android.data.connection.TLSMode">
   <method old="getSecurityMode()Lorg/jivesoftware/smack/ConnectionConfiguration$SecurityMode;" new="m_Ix"/>
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/android/data/connection/TLSMode;" new="valueOf"/>
   <method old="values()[Lcom/xabber/android/data/connection/TLSMode;" new="values"/>
   <field old="$VALUES [Lcom/xabber/android/data/connection/TLSMode;" new="f_d"/>
   <field old="enabled Lcom/xabber/android/data/connection/TLSMode;" new="f_m"/>
   <field old="legacy Lcom/xabber/android/data/connection/TLSMode;" new="f_e"/>
   <field old="required Lcom/xabber/android/data/connection/TLSMode;" new="f_b"/>
  </class>
  <class old="com.xabber.xmpp.muc.MUC" new="com.xabber.xmpp.muc.c_E">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getMUCUserExtension(Lorg/jivesoftware/smack/packet/Packet;)Lorg/jivesoftware/smackx/packet/MUCUser;" new="m_AN"/>
  </class>
  <class old="com.xabber.android.data.entity.NestedMap$1" new="wy.c_Lc">
  </class>
  <class old="org.jivesoftware.smackx.PrivateDataManager$PrivateDataResult" new="org.jivesoftware.smackx.c_g">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getPrivateData()Lorg/jivesoftware/smackx/packet/PrivateData;" new="m_Rq"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="privateData Lorg/jivesoftware/smackx/packet/PrivateData;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.util.Cache$1$1" new="org.jivesoftware.smack.util.c_g">
   <method old="hasNext()Z" new="hasNext"/>
   <method old="next()Ljava/lang/Object;" new="next"/>
   <method old="remove()V" new="remove"/>
   <field old="it Ljava/util/Iterator;" new="f_m"/>
   <field old="this$1 Lorg/jivesoftware/smack/util/Cache$1;" new="f_e"/>
  </class>
  <class old="com.xabber.xmpp.AbstractExtensionProvider" new="com.xabber.xmpp.c_J">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="createInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_ZZ"/>
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/PacketExtension;" new="m_I"/>
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_I"/>
   <method old="parseInner(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Z" new="m_Yz"/>
   <method old="parseTag(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_cy"/>
   <method old="postProcess(Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_ly"/>
   <method old="preProcess(Lorg/xmlpull/v1/XmlPullParser;Lcom/xabber/xmpp/Instance;)Lcom/xabber/xmpp/Instance;" new="m_Xy"/>
   <method old="provideInstance(Lorg/xmlpull/v1/XmlPullParser;)Lcom/xabber/xmpp/Instance;" new="m_raa"/>
  </class>
  <class old="com.xabber.android.data.extension.avatar.AvatarStorage" new="wy.c_nB">
   <method old="getFile(Ljava/lang/String;)Ljava/io/File;" new="m_JGa"/>
   <method old="getInstance()Lcom/xabber/android/data/extension/avatar/AvatarStorage;" new="m_Xr"/>
   <method old="onClear()V" new="m_nC"/>
   <method old="onLoad()V" new="m_pA"/>
   <method old="read(Ljava/lang/String;)[B" new="m_qB"/>
   <method old="write(Ljava/lang/String;[B)V" new="m_mha"/>
   <field old="folder Ljava/io/File;" new="f_e"/>
   <field old="instance Lcom/xabber/android/data/extension/avatar/AvatarStorage;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smack.filter.PacketIDFilter" new="wy.c_Ia">
   <method old="accept(Lorg/jivesoftware/smack/packet/Packet;)Z" new="m_x"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="packetID Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.OPTRecord" new="org.xbill.DNS.c_ha">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getExtendedRcode()I" new="m_cH"/>
   <method old="getFlags()I" new="m_JG"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getOptions()Ljava/util/List;" new="m_PG"/>
   <method old="getOptions(I)Ljava/util/List;" new="m_sH"/>
   <method old="getPayloadSize()I" new="m_hi"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="getVersion()I" new="m_Sd"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="options Ljava/util/List;" new="f_e"/>
   <field old="serialVersionUID J" new="f_m"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="com.jcraft.jzlib.InfCodes" new="wy.c_xC">
   <method old="free(Lcom/jcraft/jzlib/ZStream;)V" new="m_UNa"/>
   <method old="inflate_fast(II[II[IILcom/jcraft/jzlib/InfBlocks;Lcom/jcraft/jzlib/ZStream;)I" new="m_Ena"/>
   <method old="init(II[II[IILcom/jcraft/jzlib/ZStream;)V" new="m_ONa"/>
   <method old="proc(Lcom/jcraft/jzlib/InfBlocks;Lcom/jcraft/jzlib/ZStream;I)I" new="m_doa"/>
   <field old="BADCODE I" new="f_E"/>
   <field old="COPY I" new="f_J"/>
   <field old="DIST I" new="f_Z"/>
   <field old="DISTEXT I" new="f_u"/>
   <field old="END I" new="f_C"/>
   <field old="LEN I" new="f_y"/>
   <field old="LENEXT I" new="f_Y"/>
   <field old="LIT I" new="f_b"/>
   <field old="START I" new="f_m"/>
   <field old="WASH I" new="f_L"/>
   <field old="Z_BUF_ERROR I" new="f_p"/>
   <field old="Z_DATA_ERROR I" new="f_D"/>
   <field old="Z_ERRNO I" new="f_e"/>
   <field old="Z_MEM_ERROR I" new="f_c"/>
   <field old="Z_NEED_DICT I" new="f_h"/>
   <field old="Z_OK I" new="f_d"/>
   <field old="Z_STREAM_END I" new="f_B"/>
   <field old="Z_STREAM_ERROR I" new="f_o"/>
   <field old="Z_VERSION_ERROR I" new="f_a"/>
   <field old="dbits B" new="f_i"/>
   <field old="dist I" new="f_P"/>
   <field old="dtree [I" new="f_j"/>
   <field old="dtree_index I" new="f_k"/>
   <field old="get I" new="f_f"/>
   <field old="inflate_mask [I" new="f_F"/>
   <field old="lbits B" new="f_l"/>
   <field old="len I" new="f_I"/>
   <field old="lit I" new="f_G"/>
   <field old="ltree [I" new="f_S"/>
   <field old="ltree_index I" new="f_H"/>
   <field old="mode I" new="f_A"/>
   <field old="need I" new="f_g"/>
   <field old="tree [I" new="f_K"/>
   <field old="tree_index I" new="f_M"/>
  </class>
  <class old="org.jivesoftware.smackx.ServiceDiscoveryManager$CapsPresenceRenewer" new="org.jivesoftware.smackx.c_k">
   <method old="capsVerUpdated(Ljava/lang/String;)V" new="m_Ya"/>
   <field old="this$0 Lorg/jivesoftware/smackx/ServiceDiscoveryManager;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.packet.Time" new="org.jivesoftware.smackx.packet.c_D">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getDisplay()Ljava/lang/String;" new="m_Bk"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getTime()Ljava/util/Date;" new="m_Gk"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getTz()Ljava/lang/String;" new="m_xK"/>
   <method old="getUtc()Ljava/lang/String;" new="m_mj"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setDisplay(Ljava/lang/String;)V" new="m_SK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTime(Ljava/util/Date;)V" new="m_EL"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="setTz(Ljava/lang/String;)V" new="m_Sk"/>
   <method old="setUtc(Ljava/lang/String;)V" new="m_tj"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="display Ljava/lang/String;" new="f_e"/>
   <field old="displayFormat Ljava/text/DateFormat;" new="f_m"/>
   <field old="tz Ljava/lang/String;" new="f_b"/>
   <field old="utc Ljava/lang/String;" new="f_B"/>
   <field old="utcFormat Ljava/text/SimpleDateFormat;" new="f_d"/>
  </class>
  <class old="org.xbill.DNS.NSAPRecord" new="org.xbill.DNS.c_na">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkAndConvertAddress(Ljava/lang/String;)[B" new="m_JD"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getAddress()Ljava/lang/String;" new="m_kf"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="address [B" new="f_m"/>
   <field old="dclass I" new="f_m"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="serialVersionUID J" new="f_e"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="com.xabber.xmpp.vcard.Label" new="com.xabber.xmpp.vcard.c_l">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getLines()Ljava/util/List;" new="m_AX"/>
   <method old="getTypes()Ljava/util/Set;" new="m_xg"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="writeBody(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_zy"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_e"/>
   <field old="LINE_NAME Ljava/lang/String;" new="f_b"/>
   <field old="lines Ljava/util/List;" new="f_m"/>
   <field old="types Ljava/util/Set;" new="f_m"/>
  </class>
  <class old="com.novell.sasl.client.DigestMD5SaslClient" new="com.novell.sasl.client.c_B">
   <method old="DigestCalcHA1(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)[C" new="m_AOa"/>
   <method old="DigestCalcResponse([CLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)[C" new="m_uMa"/>
   <method old="checkServerResponseAuth([B)Z" new="m_tNa"/>
   <method old="convertToHex([B)[C" new="m_cT"/>
   <method old="createDigestResponse([B)Ljava/lang/String;" new="m_mna"/>
   <method old="dispose()V" new="m_xA"/>
   <method old="evaluateChallenge([B)[B" new="m_YB"/>
   <method old="getClient(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;)Lorg/apache/harmony/javax/security/sasl/SaslClient;" new="m_OMa"/>
   <method old="getClientNonce()Ljava/lang/String;" new="m_goa"/>
   <method old="getHexChar(B)C" new="m_BMa"/>
   <method old="getMechanismName()Ljava/lang/String;" new="m_qC"/>
   <method old="getNegotiatedProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_IB"/>
   <method old="hasInitialResponse()Z" new="m_kd"/>
   <method old="isComplete()Z" new="m_kc"/>
   <method old="unwrap([BII)[B" new="m_Eb"/>
   <method old="wrap([BII)[B" new="m_hC"/>
   <field old="DIGEST_METHOD Ljava/lang/String;" new="f_m"/>
   <field old="NONCE_BYTE_COUNT I" new="f_b"/>
   <field old="NONCE_HEX_COUNT I" new="f_l"/>
   <field old="STATE_DIGEST_RESPONSE_SENT I" new="f_g"/>
   <field old="STATE_DISPOSED I" new="f_k"/>
   <field old="STATE_INITIAL I" new="f_J"/>
   <field old="STATE_INVALID_SERVER_RESPONSE I" new="f_B"/>
   <field old="STATE_VALID_SERVER_RESPONSE I" new="f_f"/>
   <field old="m_HA1 [C" new="f_K"/>
   <field old="m_authorizationId Ljava/lang/String;" new="f_D"/>
   <field old="m_cbh Lorg/apache/harmony/javax/security/auth/callback/CallbackHandler;" new="f_I"/>
   <field old="m_clientNonce Ljava/lang/String;" new="f_E"/>
   <field old="m_dc Lcom/novell/sasl/client/DigestChallenge;" new="f_G"/>
   <field old="m_digestURI Ljava/lang/String;" new="f_M"/>
   <field old="m_name Ljava/lang/String;" new="f_C"/>
   <field old="m_props Ljava/util/Map;" new="f_e"/>
   <field old="m_protocol Ljava/lang/String;" new="f_H"/>
   <field old="m_qopValue Ljava/lang/String;" new="f_j"/>
   <field old="m_realm Ljava/lang/String;" new="f_h"/>
   <field old="m_serverName Ljava/lang/String;" new="f_d"/>
   <field old="m_state I" new="f_F"/>
  </class>
  <class old="com.xabber.android.data.roster.RosterManager$1" new="com.xabber.android.data.roster.RosterManager$1">
   <method old="run()V" new="run"/>
   <field old="this$0 Lcom/xabber/android/data/roster/RosterManager;" new="f_e"/>
   <field old="val$entities Ljava/util/Collection;" new="f_m"/>
  </class>
  <class old="com.xabber.android.data.entity.AbstractEntityTable$Fields" new="wy.c_b">
   <field old="ACCOUNT Ljava/lang/String;" new="f_m"/>
   <field old="USER Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.crypto.ExtendedDigest" new="net.java.otr4j.bouncycastle.crypto.c_J">
   <method old="doFinal([BI)I" new="m_sC"/>
   <method old="getAlgorithmName()Ljava/lang/String;" new="m_Bc"/>
   <method old="getByteLength()I" new="m_eb"/>
   <method old="getDigestSize()I" new="m_yC"/>
   <method old="reset()V" new="m_ld"/>
   <method old="update(B)V" new="m_DA"/>
   <method old="update([BII)V" new="m_WC"/>
  </class>
  <class old="org.jivesoftware.smackx.provider.CapsExtensionProvider" new="org.jivesoftware.smackx.provider.c_b">
   <method old="parseExtension(Lorg/xmlpull/v1/XmlPullParser;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_I"/>
  </class>
  <class old="net.java.otr4j.crypto.OtrCryptoEngine" new="wy.c_J">
   <method old="aesDecrypt([B[B[B)[B" new="m_JB"/>
   <method old="aesEncrypt([B[B[B)[B" new="m_XB"/>
   <method old="generateDHKeyPair()Ljava/security/KeyPair;" new="m_Bd"/>
   <method old="generateSecret(Ljava/security/PrivateKey;Ljava/security/PublicKey;)Ljava/math/BigInteger;" new="m_KB"/>
   <method old="getDHPublicKey(Ljava/math/BigInteger;)Ljavax/crypto/interfaces/DHPublicKey;" new="m_td"/>
   <method old="getDHPublicKey([B)Ljavax/crypto/interfaces/DHPublicKey;" new="m_pc"/>
   <method old="getFingerprint(Ljava/security/PublicKey;)Ljava/lang/String;" new="m_jb"/>
   <method old="getFingerprintRaw(Ljava/security/PublicKey;)[B" new="m_bB"/>
   <method old="sha1Hash([B)[B" new="m_sb"/>
   <method old="sha1Hmac([B[BI)[B" new="m_ic"/>
   <method old="sha256Hash([B)[B" new="m_HB"/>
   <method old="sha256Hmac([B[B)[B" new="m_vb"/>
   <method old="sha256Hmac([B[BI)[B" new="m_DC"/>
   <method old="sha256Hmac160([B[B)[B" new="m_Gc"/>
   <method old="sign([BLjava/security/PrivateKey;)[B" new="m_eA"/>
   <method old="verify([BLjava/security/PublicKey;[B)Z" new="m_bc"/>
   <field old="AES_KEY_BYTE_LENGTH I" new="f_b"/>
   <field old="BIGINTEGER_TWO Ljava/math/BigInteger;" new="f_k"/>
   <field old="DH_PRIVATE_KEY_MINIMUM_BIT_LENGTH I" new="f_f"/>
   <field old="DSA_PUB_TYPE I" new="f_m"/>
   <field old="GENERATOR Ljava/math/BigInteger;" new="f_e"/>
   <field old="GENERATOR_TEXT Ljava/lang/String;" new="f_d"/>
   <field old="MODULUS Ljava/math/BigInteger;" new="f_I"/>
   <field old="MODULUS_MINUS_TWO Ljava/math/BigInteger;" new="f_j"/>
   <field old="MODULUS_TEXT Ljava/lang/String;" new="f_l"/>
   <field old="SHA256_HMAC_KEY_BYTE_LENGTH I" new="f_B"/>
   <field old="ZERO_CTR [B" new="f_K"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamRequest" new="org.jivesoftware.smackx.bytestreams.ibb.c_E">
   <method old="accept()Lorg/jivesoftware/smackx/bytestreams/BytestreamSession;" new="m_Ja"/>
   <method old="accept()Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamSession;" new="m_Ja"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getSessionID()Ljava/lang/String;" new="m_Ba"/>
   <method old="reject()V" new="m_ba"/>
   <field old="byteStreamRequest Lorg/jivesoftware/smackx/bytestreams/ibb/packet/Open;" new="f_e"/>
   <field old="manager Lorg/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamManager;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.bytestreams.socks5.Socks5Client$1" new="org.jivesoftware.smackx.bytestreams.socks5.c_j">
   <method old="call()Ljava/lang/Object;" new="call"/>
   <method old="call()Ljava/net/Socket;" new="m_Xn"/>
   <field old="this$0 Lorg/jivesoftware/smackx/bytestreams/socks5/Socks5Client;" new="f_m"/>
  </class>
  <class old="org.xbill.DNS.DSRecord" new="org.xbill.DNS.c_ld">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getAlgorithm()I" new="m_Ne"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getDigest()[B" new="m_te"/>
   <method old="getDigestID()I" new="m_Ei"/>
   <method old="getFootprint()I" new="m_VF"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="SHA1_DIGEST_ID I" new="f_l"/>
   <field old="SHA256_DIGEST_ID I" new="f_B"/>
   <field old="alg I" new="f_d"/>
   <field old="dclass I" new="f_m"/>
   <field old="digest [B" new="f_m"/>
   <field old="digestid I" new="f_e"/>
   <field old="footprint I" new="f_k"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="serialVersionUID J" new="f_j"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="com.google.zxing.integration.android.IntentResult" new="wy.c_Yb">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="getContents()Ljava/lang/String;" new="m_IMa"/>
   <method old="getErrorCorrectionLevel()Ljava/lang/String;" new="m_Yma"/>
   <method old="getFormatName()Ljava/lang/String;" new="m_Bna"/>
   <method old="getOrientation()Ljava/lang/Integer;" new="m_KNa"/>
   <method old="getRawBytes()[B" new="m_yNa"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <field old="contents Ljava/lang/String;" new="f_b"/>
   <field old="errorCorrectionLevel Ljava/lang/String;" new="f_e"/>
   <field old="formatName Ljava/lang/String;" new="f_m"/>
   <field old="orientation Ljava/lang/Integer;" new="f_d"/>
   <field old="rawBytes [B" new="f_B"/>
  </class>
  <class old="com.xabber.android.data.extension.muc.RoomChat" new="com.xabber.android.data.extension.muc.RoomChat">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="canSendMessage()Z" new="m_nea"/>
   <method old="compareTo(Lcom/xabber/android/data/entity/BaseEntity;)I" new="m_bCa"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="createMessagePacket(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/Message;" new="m_kfa"/>
   <method old="createOccupant(Ljava/lang/String;Lorg/jivesoftware/smack/packet/Presence;)Lcom/xabber/android/data/extension/muc/Occupant;" new="m_eIa"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="equals(Ljava/lang/String;Ljava/lang/String;)Z" new="m_Bba"/>
   <method old="getAccount()Ljava/lang/String;" new="m_FC"/>
   <method old="getFirstNotification()Z" new="m_dDa"/>
   <method old="getLastText()Ljava/lang/String;" new="m_mfa"/>
   <method old="getLastTime()Ljava/util/Date;" new="m_Ega"/>
   <method old="getMultiUserChat()Lorg/jivesoftware/smackx/muc/MultiUserChat;" new="m_hGa"/>
   <method old="getNickname()Ljava/lang/String;" new="m_HM"/>
   <method old="getOccupants()Ljava/util/Collection;" new="m_Zn"/>
   <method old="getPassword()Ljava/lang/String;" new="m_rj"/>
   <method old="getRequiredMessageCount()I" new="m_XFa"/>
   <method old="getRoom()Ljava/lang/String;" new="m_IJ"/>
   <method old="getState()Lcom/xabber/android/data/extension/muc/RoomState;" new="m_FK"/>
   <method old="getSubject()Ljava/lang/String;" new="m_wM"/>
   <method old="getThreadId()Ljava/lang/String;" new="m_Aea"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/Message$Type;" new="m_b"/>
   <method old="getUser()Ljava/lang/String;" new="m_TA"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="isActive()Z" new="m_iFa"/>
   <method old="isRequested()Z" new="m_Eia"/>
   <method old="isSelf(Ljava/lang/String;)Z" new="m_iga"/>
   <method old="newAction(Ljava/lang/String;Ljava/lang/String;Lcom/xabber/android/data/message/ChatAction;)V" new="m_BEa"/>
   <method old="newMessage(Ljava/lang/String;)Lcom/xabber/android/data/message/MessageItem;" new="m_Xda"/>
   <method old="newMessage(Ljava/lang/String;Ljava/lang/String;Lcom/xabber/android/data/message/ChatAction;Ljava/util/Date;ZZZZZ)Lcom/xabber/android/data/message/MessageItem;" new="m_Afa"/>
   <method old="notifyAboutMessage()Z" new="m_Nda"/>
   <method old="onAffiliationChanged(Ljava/lang/String;Lcom/xabber/xmpp/muc/Affiliation;)V" new="m_VIa"/>
   <method old="onAvailable(Ljava/lang/String;)V" new="m_yGa"/>
   <method old="onBan(Ljava/lang/String;Ljava/lang/String;)V" new="m_fIa"/>
   <method old="onComplete()V" new="m_GDa"/>
   <method old="onDisconnect()V" new="m_zDa"/>
   <method old="onInvitationDeclined(Ljava/lang/String;Ljava/lang/String;)V" new="m_PHa"/>
   <method old="onKick(Ljava/lang/String;Ljava/lang/String;)V" new="m_nGa"/>
   <method old="onLeave(Ljava/lang/String;)V" new="m_VHa"/>
   <method old="onMessageDownloaded(Ljava/lang/String;Ljava/util/Collection;Z)I" new="m_wfa"/>
   <method old="onPacket(Ljava/lang/String;Lorg/jivesoftware/smack/packet/Packet;)Z" new="m_cDa"/>
   <method old="onRename(Ljava/lang/String;Ljava/lang/String;)V" new="m_FGa"/>
   <method old="onRevoke(Ljava/lang/String;Ljava/lang/String;)V" new="m_nIa"/>
   <method old="onRoleChanged(Ljava/lang/String;Lcom/xabber/xmpp/muc/Role;)V" new="m_vga"/>
   <method old="onStatusChanged(Ljava/lang/String;Lcom/xabber/android/data/account/StatusMode;Ljava/lang/String;)V" new="m_Pga"/>
   <method old="prepareText(Ljava/lang/String;)Ljava/lang/String;" new="m_mEa"/>
   <method old="putInvite(Ljava/lang/String;Ljava/lang/String;)V" new="m_tga"/>
   <method old="sendMessages()V" new="m_aEa"/>
   <method old="sendQueue(Lcom/xabber/android/data/message/MessageItem;)V" new="m_lea"/>
   <method old="setMultiUserChat(Lorg/jivesoftware/smackx/muc/MultiUserChat;)V" new="m_SGa"/>
   <method old="setNickname(Ljava/lang/String;)V" new="m_XGa"/>
   <method old="setPassword(Ljava/lang/String;)V" new="m_RK"/>
   <method old="setRequested(Z)V" new="m_cIa"/>
   <method old="setState(Lcom/xabber/android/data/extension/muc/RoomState;)V" new="m_mHa"/>
   <method old="showStatusChange()Z" new="m_SHa"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="updateThreadId(Ljava/lang/String;)V" new="m_vEa"/>
   <field old="account Ljava/lang/String;" new="f_m"/>
   <field old="active Z" new="f_K"/>
   <field old="firstNotification Z" new="f_m"/>
   <field old="historyIds Ljava/util/Collection;" new="f_k"/>
   <field old="invites Ljava/util/Map;" new="f_k"/>
   <field old="lastText Ljava/lang/String;" new="f_B"/>
   <field old="lastTime Ljava/util/Date;" new="f_f"/>
   <field old="messages Ljava/util/List;" new="f_I"/>
   <field old="multiUserChat Lorg/jivesoftware/smackx/muc/MultiUserChat;" new="f_K"/>
   <field old="nickname Ljava/lang/String;" new="f_b"/>
   <field old="occupants Ljava/util/Map;" new="f_I"/>
   <field old="password Ljava/lang/String;" new="f_l"/>
   <field old="requested Z" new="f_f"/>
   <field old="sendQuery Ljava/util/Collection;" new="f_e"/>
   <field old="state Lcom/xabber/android/data/extension/muc/RoomState;" new="f_d"/>
   <field old="subject Ljava/lang/String;" new="f_j"/>
   <field old="trackStatus Z" new="f_b"/>
   <field old="user Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="org.xbill.DNS.NAPTRRecord" new="org.xbill.DNS.c_Fa">
   <method old="byteArrayFromString(Ljava/lang/String;)[B" new="m_ME"/>
   <method old="byteArrayToString([BZ)Ljava/lang/String;" new="m_JE"/>
   <method old="checkByteArrayLength(Ljava/lang/String;[BI)[B" new="m_XE"/>
   <method old="checkName(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;" new="m_Mf"/>
   <method old="checkU16(Ljava/lang/String;I)I" new="m_Te"/>
   <method old="checkU32(Ljava/lang/String;J)J" new="m_YD"/>
   <method old="checkU8(Ljava/lang/String;I)I" new="m_cg"/>
   <method old="cloneRecord()Lorg/xbill/DNS/Record;" new="m_qF"/>
   <method old="compareTo(Ljava/lang/Object;)I" new="compareTo"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLjava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_Cg"/>
   <method old="fromString(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_AD"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;I)Lorg/xbill/DNS/Record;" new="m_kg"/>
   <method old="fromWire(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;" new="m_NE"/>
   <method old="fromWire([BI)Lorg/xbill/DNS/Record;" new="m_if"/>
   <method old="getAdditionalName()Lorg/xbill/DNS/Name;" new="m_ye"/>
   <method old="getDClass()I" new="m_Uf"/>
   <method old="getFlags()Ljava/lang/String;" new="m_JG"/>
   <method old="getName()Lorg/xbill/DNS/Name;" new="m_ac"/>
   <method old="getObject()Lorg/xbill/DNS/Record;" new="m_Bf"/>
   <method old="getOrder()I" new="m_Kh"/>
   <method old="getPreference()I" new="m_nG"/>
   <method old="getRRsetType()I" new="m_hg"/>
   <method old="getRegexp()Ljava/lang/String;" new="m_VH"/>
   <method old="getReplacement()Lorg/xbill/DNS/Name;" new="m_Rg"/>
   <method old="getService()Ljava/lang/String;" new="m_QH"/>
   <method old="getTTL()J" new="m_Xd"/>
   <method old="getType()I" new="m_b"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;" new="m_oe"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;" new="m_he"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;" new="m_lD"/>
   <method old="newRecord(Lorg/xbill/DNS/Name;IIJ[B)Lorg/xbill/DNS/Record;" new="m_Eg"/>
   <method old="rdataFromString(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V" new="m_jg"/>
   <method old="rdataToString()Ljava/lang/String;" new="m_gf"/>
   <method old="rdataToWireCanonical()[B" new="m_sE"/>
   <method old="rrFromWire(Lorg/xbill/DNS/DNSInput;)V" new="m_iE"/>
   <method old="rrToString()Ljava/lang/String;" new="m_hE"/>
   <method old="rrToWire(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V" new="m_Ye"/>
   <method old="sameRRset(Lorg/xbill/DNS/Record;)Z" new="m_ce"/>
   <method old="setTTL(J)V" new="m_Lf"/>
   <method old="toString()Ljava/lang/String;" new="toString"/>
   <method old="toWire(I)[B" new="m_Ud"/>
   <method old="toWire(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V" new="m_HF"/>
   <method old="toWireCanonical()[B" new="m_re"/>
   <method old="unknownToString([B)Ljava/lang/String;" new="m_Ee"/>
   <method old="withDClass(IJ)Lorg/xbill/DNS/Record;" new="m_fe"/>
   <method old="withName(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;" new="m_RE"/>
   <field old="dclass I" new="f_m"/>
   <field old="flags [B" new="f_B"/>
   <field old="name Lorg/xbill/DNS/Name;" new="f_j"/>
   <field old="order I" new="f_j"/>
   <field old="preference I" new="f_d"/>
   <field old="regexp [B" new="f_m"/>
   <field old="replacement Lorg/xbill/DNS/Name;" new="f_k"/>
   <field old="serialVersionUID J" new="f_e"/>
   <field old="service [B" new="f_b"/>
   <field old="ttl J" new="f_d"/>
   <field old="type I" new="f_b"/>
  </class>
  <class old="net.java.otr4j.io.messages.SignatureMessage" new="net.java.otr4j.io.messages.c_m">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="decrypt([B)[B" new="m_Cz"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="verify([B)Z" new="m_xc"/>
   <field old="MESSAGE_DATA I" new="MESSAGE_DATA"/>
   <field old="MESSAGE_DHKEY I" new="MESSAGE_DHKEY"/>
   <field old="MESSAGE_DH_COMMIT I" new="MESSAGE_DH_COMMIT"/>
   <field old="MESSAGE_ERROR I" new="MESSAGE_ERROR"/>
   <field old="MESSAGE_PLAINTEXT I" new="MESSAGE_PLAINTEXT"/>
   <field old="MESSAGE_QUERY I" new="MESSAGE_QUERY"/>
   <field old="MESSAGE_REVEALSIG I" new="MESSAGE_REVEALSIG"/>
   <field old="MESSAGE_SIGNATURE I" new="MESSAGE_SIGNATURE"/>
   <field old="messageType I" new="f_m"/>
   <field old="protocolVersion I" new="f_e"/>
   <field old="xEncrypted [B" new="f_m"/>
   <field old="xEncryptedMAC [B" new="f_e"/>
  </class>
  <class old="com.xabber.xmpp.vcard.AbstractExternalData" new="com.xabber.xmpp.vcard.c_w">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getValue()Ljava/lang/String;" new="m_Ra"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="setValue(Ljava/lang/String;)V" new="m_TT"/>
   <method old="writeBody(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_zy"/>
   <field old="EXTVAL_NAME Ljava/lang/String;" new="f_e"/>
   <field old="value Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.filetransfer.OutgoingFileTransfer$1" new="org.jivesoftware.smackx.filetransfer.c_k">
   <method old="run()V" new="run"/>
   <field old="this$0 Lorg/jivesoftware/smackx/filetransfer/OutgoingFileTransfer;" new="f_m"/>
   <field old="val$description Ljava/lang/String;" new="f_B"/>
   <field old="val$fileName Ljava/lang/String;" new="f_b"/>
   <field old="val$fileSize J" new="f_e"/>
   <field old="val$progress Lorg/jivesoftware/smackx/filetransfer/OutgoingFileTransfer$NegotiationProgress;" new="f_d"/>
  </class>
  <class old="org.jivesoftware.smackx.filetransfer.OutgoingFileTransfer$2" new="org.jivesoftware.smackx.filetransfer.c_f">
   <method old="run()V" new="run"/>
   <field old="this$0 Lorg/jivesoftware/smackx/filetransfer/OutgoingFileTransfer;" new="f_b"/>
   <field old="val$description Ljava/lang/String;" new="f_e"/>
   <field old="val$file Ljava/io/File;" new="f_m"/>
  </class>
  <class old="org.jivesoftware.smackx.filetransfer.OutgoingFileTransfer$3" new="org.jivesoftware.smackx.filetransfer.c_j">
   <method old="run()V" new="run"/>
   <field old="this$0 Lorg/jivesoftware/smackx/filetransfer/OutgoingFileTransfer;" new="f_e"/>
   <field old="val$description Ljava/lang/String;" new="f_d"/>
   <field old="val$fileName Ljava/lang/String;" new="f_m"/>
   <field old="val$fileSize J" new="f_b"/>
   <field old="val$in Ljava/io/InputStream;" new="f_B"/>
  </class>
  <class old="com.xabber.android.ui.helper.ContactTitleInflater" new="com.xabber.android.ui.helper.c_f">
   <method old="AllatoriDecryptString(Ljava/lang/String;)Ljava/lang/String;" new="m_jC"/>
   <method old="updateTitle(Landroid/view/View;Landroid/app/Activity;Lcom/xabber/android/data/roster/AbstractContact;)V" new="m_Mca"/>
  </class>
  <class old="com.xabber.xmpp.time.Time" new="wy.c_NB">
   <method old="addExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_NL"/>
   <method old="createErrorResponse(Lorg/jivesoftware/smack/packet/IQ;Lorg/jivesoftware/smack/packet/XMPPError;)Lorg/jivesoftware/smack/packet/IQ;" new="m_Bl"/>
   <method old="createResultIQ(Lorg/jivesoftware/smack/packet/IQ;)Lorg/jivesoftware/smack/packet/IQ;" new="m_WJ"/>
   <method old="deleteProperty(Ljava/lang/String;)V" new="m_wK"/>
   <method old="equals(Ljava/lang/Object;)Z" new="equals"/>
   <method old="getChildElementXML()Ljava/lang/String;" new="m_zk"/>
   <method old="getCreated()Ljava/util/Date;" new="m_Ry"/>
   <method old="getDefaultLanguage()Ljava/lang/String;" new="m_Ul"/>
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getError()Lorg/jivesoftware/smack/packet/XMPPError;" new="m_Hg"/>
   <method old="getExtension(Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_hK"/>
   <method old="getExtension(Ljava/lang/String;Ljava/lang/String;)Lorg/jivesoftware/smack/packet/PacketExtension;" new="m_JJ"/>
   <method old="getExtensions()Ljava/util/Collection;" new="m_IK"/>
   <method old="getExtensionsXML()Ljava/lang/String;" new="m_AL"/>
   <method old="getFrom()Ljava/lang/String;" new="m_ja"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="getPacketID()Ljava/lang/String;" new="m_Pl"/>
   <method old="getProperty(Ljava/lang/String;)Ljava/lang/Object;" new="m_rK"/>
   <method old="getPropertyNames()Ljava/util/Collection;" new="m_ql"/>
   <method old="getTo()Ljava/lang/String;" new="m_Fk"/>
   <method old="getType()Lorg/jivesoftware/smack/packet/IQ$Type;" new="m_b"/>
   <method old="getTzo()Ljava/lang/Integer;" new="m_bX"/>
   <method old="getUtc()Ljava/util/Date;" new="m_mj"/>
   <method old="getXmlns()Ljava/lang/String;" new="m_VK"/>
   <method old="hashCode()I" new="hashCode"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="nextID()Ljava/lang/String;" new="m_il"/>
   <method old="removeExtension(Lorg/jivesoftware/smack/packet/PacketExtension;)V" new="m_tl"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="serializeContent(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_Fb"/>
   <method old="setDefaultXmlns(Ljava/lang/String;)V" new="m_yK"/>
   <method old="setError(Lorg/jivesoftware/smack/packet/XMPPError;)V" new="m_PK"/>
   <method old="setFrom(Ljava/lang/String;)V" new="m_UJ"/>
   <method old="setPacketID(Ljava/lang/String;)V" new="m_oj"/>
   <method old="setProperty(Ljava/lang/String;Ljava/lang/Object;)V" new="m_jl"/>
   <method old="setTo(Ljava/lang/String;)V" new="m_QK"/>
   <method old="setType(Lorg/jivesoftware/smack/packet/IQ$Type;)V" new="m_vJ"/>
   <method old="setTzo(Ljava/lang/Integer;)V" new="m_zz"/>
   <method old="setUtc(Ljava/util/Date;)V" new="m_oz"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="DEFAULT_LANGUAGE Ljava/lang/String;" new="f_d"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_j"/>
   <field old="ID_NOT_AVAILABLE Ljava/lang/String;" new="ID_NOT_AVAILABLE"/>
   <field old="NAMESPACE Ljava/lang/String;" new="f_e"/>
   <field old="TZO_NAME Ljava/lang/String;" new="f_k"/>
   <field old="UTC_NAME Ljava/lang/String;" new="f_B"/>
   <field old="XEP_0082_UTC_FORMAT Ljava/text/DateFormat;" new="XEP_0082_UTC_FORMAT"/>
   <field old="created Ljava/util/Date;" new="f_b"/>
   <field old="tzo Ljava/lang/Integer;" new="f_m"/>
   <field old="utc Ljava/util/Date;" new="f_l"/>
  </class>
  <class old="com.xabber.xmpp.avatar.VCardUpdate" new="wy.c_KC">
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getNamespace()Ljava/lang/String;" new="m_A"/>
   <method old="getPhotoHash()Ljava/lang/String;" new="m_XCa"/>
   <method old="isEmpty()Z" new="m_Oaa"/>
   <method old="isPhotoReady()Z" new="m_iCa"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="serializeContent(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_Fb"/>
   <method old="setPhotoHash(Ljava/lang/String;)V" new="m_Uaa"/>
   <method old="toXML()Ljava/lang/String;" new="m_k"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_m"/>
   <field old="NAMESPACE Ljava/lang/String;" new="f_b"/>
   <field old="PHOTO_NAME Ljava/lang/String;" new="f_d"/>
   <field old="photoHash Ljava/lang/String;" new="f_e"/>
  </class>
  <class old="com.xabber.android.data.account.WLMManager$GrantType" new="com.xabber.android.data.account.WLMManager$GrantType">
   <method old="valueOf(Ljava/lang/String;)Lcom/xabber/android/data/account/WLMManager$GrantType;" new="valueOf"/>
   <method old="values()[Lcom/xabber/android/data/account/WLMManager$GrantType;" new="values"/>
   <field old="$VALUES [Lcom/xabber/android/data/account/WLMManager$GrantType;" new="f_e"/>
   <field old="authorizationCode Lcom/xabber/android/data/account/WLMManager$GrantType;" new="f_B"/>
   <field old="name Ljava/lang/String;" new="f_b"/>
   <field old="refreshToken Lcom/xabber/android/data/account/WLMManager$GrantType;" new="f_d"/>
   <field old="value Ljava/lang/String;" new="f_m"/>
  </class>
  <class old="net.java.otr4j.bouncycastle.util.encoders.HexTranslator" new="wy.c_SB">
   <method old="decode([BII[BI)I" new="m_zc"/>
   <method old="encode([BII[BI)I" new="m_Ib"/>
   <method old="getDecodedBlockSize()I" new="m_ob"/>
   <method old="getEncodedBlockSize()I" new="m_Bb"/>
   <field old="hexTable [B" new="f_m"/>
  </class>
  <class old="com.xabber.android.receiver.GoAwayReceiver" new="com.xabber.android.receiver.GoAwayReceiver">
   <method old="createIntent(Landroid/content/Context;)Landroid/content/Intent;" new="m_yBa"/>
   <method old="onReceive(Landroid/content/Context;Landroid/content/Intent;)V" new="onReceive"/>
  </class>
  <class old="com.xabber.android.data.account.OnAccountEnabledListener" new="com.xabber.android.data.account.c_m">
   <method old="onAccountEnabled(Lcom/xabber/android/data/account/AccountItem;)V" new="m_BC"/>
  </class>
  <class old="com.xabber.xmpp.archive.From" new="com.xabber.xmpp.archive.c_o">
   <method old="getBody()Ljava/lang/String;" new="m_St"/>
   <method old="getElementName()Ljava/lang/String;" new="m_J"/>
   <method old="getJid()Ljava/lang/String;" new="m_tL"/>
   <method old="getName()Ljava/lang/String;" new="m_ac"/>
   <method old="getSecs()Ljava/lang/Integer;" new="m_RBa"/>
   <method old="getUtc()Ljava/util/Date;" new="m_mj"/>
   <method old="isValid()Z" new="m_G"/>
   <method old="serialize(Lorg/xmlpull/v1/XmlSerializer;)V" new="m_F"/>
   <method old="setBody(Ljava/lang/String;)V" new="m_lt"/>
   <method old="setJid(Ljava/lang/String;)V" new="m_AJ"/>
   <method old="setName(Ljava/lang/String;)V" new="m_Xl"/>
   <method old="setSecs(Ljava/lang/Integer;)V" new="m_wAa"/>
   <method old="setUtc(Ljava/util/Date;)V" new="m_oz"/>
   <field old="BODY_NAME Ljava/lang/String;" new="f_l"/>
   <field old="ELEMENT_NAME Ljava/lang/String;" new="f_e"/>
   <field old="JID_ATTRIBUTE Ljava/lang/String;" new="f_I"/>
   <field old="NAME_ATTRIBUTE Ljava/lang/String;" new="f_d"/>
   <field old="SECS_ATTRIBUTE Ljava/lang/String;" new="f_j"/>
   <field old="UTC_ATTRIBUTE Ljava/lang/String;" new="f_m"/>
  </class>
  <sources>
   <source old="IntentIntegrator.java" new="iea"/>
   <source old="IntentResult.java" new="sga"/>
   <source old="Adler32.java" new="fia"/>
   <source old="Deflate.java" new="oka"/>
   <source old="InfBlocks.java" new="aga"/>
   <source old="InfCodes.java" new="zea"/>
   <source old="InfTree.java" new="uja"/>
   <source old="Inflate.java" new="rga"/>
   <source old="JZlib.java" new="tha"/>
   <source old="StaticTree.java" new="ada"/>
   <source old="Tree.java" new="ega"/>
   <source old="ZInputStream.java" new="gja"/>
   <source old="ZOutputStream.java" new="qba"/>
   <source old="ZStream.java" new="oja"/>
   <source old="ZStreamException.java" new="jka"/>
   <source old="DigestChallenge.java" new="kba"/>
   <source old="DigestMD5SaslClient.java" new="lda"/>
   <source old="DirectiveList.java" new="qka"/>
   <source old="ParsedDirective.java" new="uda"/>
   <source old="ResponseAuth.java" new="aaa"/>
   <source old="TokenParser.java" new="mga"/>
   <source old="BuildConfig.java" new="iia"/>
   <source old="R.java" new="nia"/>
   <source old="ActivityManager.java" new="xha"/>
   <source old="Application.java" new="pja"/>
   <source old="DatabaseManager.java" new="cia"/>
   <source old="FileLogDebugger.java" new="lla"/>
   <source old="LogManager.java" new="saa"/>
   <source old="NetworkException.java" new="pda"/>
   <source old="SettingsManager.java" new="xja"/>
   <source old="AccountAuthenticator.java" new="fca"/>
   <source old="AccountAuthorizationError.java" new="mja"/>
   <source old="AccountItem.java" new="pea"/>
   <source old="AccountProtocol.java" new="lha"/>
   <source old="AccountTable.java" new="oia"/>
   <source old="AccountType.java" new="rfa"/>
   <source old="ArchiveMode.java" new="vja"/>
   <source old="CommonState.java" new="pha"/>
   <source old="OAuthManager.java" new="afa"/>
   <source old="OAuthResult.java" new="wba"/>
   <source old="SavedStatus.java" new="hfa"/>
   <source old="ScreenManager.java" new="hha"/>
   <source old="StatusMode.java" new="dka"/>
   <source old="StatusTable.java" new="qfa"/>
   <source old="WLMManager.java" new="iga"/>
   <source old="CertificateInvalidReason.java" new="yfa"/>
   <source old="CertificateManager.java" new="yaa"/>
   <source old="ConnectionItem.java" new="jia"/>
   <source old="ConnectionManager.java" new="bba"/>
   <source old="ConnectionSettings.java" new="wha"/>
   <source old="ConnectionState.java" new="gda"/>
   <source old="ConnectionThread.java" new="ica"/>
   <source old="DNSManager.java" new="caa"/>
   <source old="Host.java" new="lia"/>
   <source old="NetworkManager.java" new="bia"/>
   <source old="NetworkState.java" new="cba"/>
   <source old="PendingCertificate.java" new="yea"/>
   <source old="ProxyType.java" new="pga"/>
   <source old="RequestHolder.java" new="zka"/>
   <source old="SRVContainer.java" new="fha"/>
   <source old="AbstractPool.java" new="tia"/>
   <source old="TLSMode.java" new="mca"/>
   <source old="Target.java" new="hca"/>
   <source old="NestedNestedMaps.java" new="qaa"/>
   <source old="NestedMap.java" new="lba"/>
   <source old="ArchivePreference.java" new="rea"/>
   <source old="AvailableArchiveRequest.java" new="aha"/>
   <source old="ChatStorage.java" new="uca"/>
   <source old="HistoryStorage.java" new="oga"/>
   <source old="MatchMode.java" new="jha"/>
   <source old="MessageArchiveManager.java" new="dba"/>
   <source old="ModificationStorage.java" new="kia"/>
   <source old="HeaderSequence.java" new="sja"/>
   <source old="EntityNotificationProvider.java" new="mfa"/>
   <source old="BaseAccountNotificationProvider.java" new="cla"/>
   <source old="BaseNotificationProvider.java" new="aja"/>
   <source old="AttentionManager.java" new="uaa"/>
   <source old="AttentionRequest.java" new="gla"/>
   <source old="AccountAvatarSet.java" new="sba"/>
   <source old="BaseAvatarSet.java" new="oaa"/>
   <source old="AvatarManager.java" new="daa"/>
   <source old="AvatarStorage.java" new="pka"/>
   <source old="AvatarTable.java" new="uia"/>
   <source old="BaseShortcutHelper.java" new="yja"/>
   <source old="GingerbreadShortcutHelper.java" new="uka"/>
   <source old="HoneycombShortcutHelper.java" new="uga"/>
   <source old="CapabilitiesManager.java" new="rha"/>
   <source old="CapabilitiesTable.java" new="zfa"/>
   <source old="Capability.java" new="iha"/>
   <source old="ClientInfo.java" new="eka"/>
   <source old="ClientSoftware.java" new="iaa"/>
   <source old="DiscoverInfoRequest.java" new="ria"/>
   <source old="ServerInfoManager.java" new="taa"/>
   <source old="MUCManager.java" new="laa"/>
   <source old="RoomAuthorizationError.java" new="yka"/>
   <source old="RoomChat.java" new="gia"/>
   <source old="RoomContact.java" new="dla"/>
   <source old="RoomInvite.java" new="wja"/>
   <source old="RoomState.java" new="rca"/>
   <source old="RoomTable.java" new="oea"/>
   <source old="OTRManager.java" new="tda"/>
   <source old="OTRTable.java" new="raa"/>
   <source old="OTRUnencryptedException.java" new="vaa"/>
   <source old="SMProgress.java" new="gaa"/>
   <source old="SMRequest.java" new="yga"/>
   <source old="SecurityLevel.java" new="mea"/>
   <source old="PingManager.java" new="sca"/>
   <source old="SSNManager.java" new="baa"/>
   <source old="SessionState.java" new="vca"/>
   <source old="TimeManager.java" new="nea"/>
   <source old="VCardManager.java" new="mha"/>
   <source old="VCardRequest.java" new="maa"/>
   <source old="VCardTable.java" new="kja"/>
   <source old="AccountIntentBuilder.java" new="ida"/>
   <source old="EntityIntentBuilder.java" new="jaa"/>
   <source old="BaseAccountIntentBuilder.java" new="uba"/>
   <source old="SegmentIntentBuilder.java" new="jga"/>
   <source old="BaseIntentBuilder.java" new="mla"/>
   <source old="ChatAction.java" new="jda"/>
   <source old="ChatContact.java" new="fba"/>
   <source old="MessageItem.java" new="qja"/>
   <source old="MessageManager.java" new="uea"/>
   <source old="MessageTable.java" new="aca"/>
   <source old="ReceiptManager.java" new="jca"/>
   <source old="RegularChat.java" new="yba"/>
   <source old="ChatInput.java" new="sea"/>
   <source old="NotifyVisibleTable.java" new="dja"/>
   <source old="PrivateChatTable.java" new="iba"/>
   <source old="ShowTextTable.java" new="bca"/>
   <source old="SoundTable.java" new="kaa"/>
   <source old="VibroTable.java" new="dfa"/>
   <source old="AbstractChatPropertyTable.java" new="sia"/>
   <source old="Phrase.java" new="cda"/>
   <source old="PhraseManager.java" new="pba"/>
   <source old="PhraseTable.java" new="xda"/>
   <source old="MessageNotification.java" new="bha"/>
   <source old="NotificationManager.java" new="ala"/>
   <source old="NotificationTable.java" new="ila"/>
   <source old="GroupManager.java" new="gga"/>
   <source old="AbstractTable.java" new="eha"/>
   <source old="GroupTable.java" new="jfa"/>
   <source old="PresenceManager.java" new="jja"/>
   <source old="ResourceContainer.java" new="cka"/>
   <source old="ResourceItem.java" new="fja"/>
   <source old="RosterContact.java" new="xca"/>
   <source old="AbstractContact.java" new="cfa"/>
   <source old="RosterGroupReference.java" new="vda"/>
   <source old="RosterManager.java" new="cga"/>
   <source old="ShowOfflineMode.java" new="bfa"/>
   <source old="StructuredName.java" new="nga"/>
   <source old="SubscriptionRequest.java" new="nha"/>
   <source old="SyncManager.java" new="sda"/>
   <source old="SystemContactStatus.java" new="kga"/>
   <source old="BootReceiver.java" new="tka"/>
   <source old="ComposingPausedReceiver.java" new="faa"/>
   <source old="ConnectivityReceiver.java" new="tga"/>
   <source old="GoAwayReceiver.java" new="paa"/>
   <source old="GoXaReceiver.java" new="zga"/>
   <source old="ScreenReceiver.java" new="haa"/>
   <source old="AccountAuthenticatorService.java" new="uha"/>
   <source old="SyncAdapterService.java" new="eda"/>
   <source old="XabberService.java" new="oca"/>
   <source old="AboutViewer.java" new="ika"/>
   <source old="AccountAdd.java" new="vea"/>
   <source old="AccountEditor.java" new="lea"/>
   <source old="AccountList.java" new="oda"/>
   <source old="ArchiveRequest.java" new="zca"/>
   <source old="CertificateConfirmation.java" new="lca"/>
   <source old="ChatEditor.java" new="ska"/>
   <source old="ChatList.java" new="vha"/>
   <source old="ChatViewer.java" new="eja"/>
   <source old="ClearNotifications.java" new="vga"/>
   <source old="ContactAdd.java" new="rda"/>
   <source old="ContactEditor.java" new="gha"/>
   <source old="GroupListActivity.java" new="lfa"/>
   <source old="ContactList.java" new="qga"/>
   <source old="ContactViewer.java" new="nca"/>
   <source old="FingerprintViewer.java" new="eba"/>
   <source old="LoadActivity.java" new="bga"/>
   <source old="MUCEditor.java" new="xba"/>
   <source old="OAuthActivity.java" new="eca"/>
   <source old="OccupantList.java" new="hja"/>
   <source old="PasswordRequest.java" new="gka"/>
   <source old="SingleActivity.java" new="gba"/>
   <source old="PhraseEditor.java" new="rka"/>
   <source old="PhraseList.java" new="yha"/>
   <source old="BaseListEditor.java" new="dia"/>
   <source old="PreferenceEditor.java" new="dga"/>
   <source old="ManagedPreferenceActivity.java" new="bea"/>
   <source old="QuestionViewer.java" new="nba"/>
   <source old="ManagedActivity.java" new="wka"/>
   <source old="ReconnectionActivity.java" new="hea"/>
   <source old="StatusEditor.java" new="ifa"/>
   <source old="ManagedListActivity.java" new="hla"/>
   <source old="AccountConfiguration.java" new="jla"/>
   <source old="GroupConfiguration.java" new="kka"/>
   <source old="BaseEntity.java" new="lka"/>
   <source old="AccountRelated.java" new="fea"/>
   <source old="AccountListAdapter.java" new="sfa"/>
   <source old="AccountToggleAdapter.java" new="aka"/>
   <source old="AccountTypeAdapter.java" new="mka"/>
   <source old="ChatComparator.java" new="dea"/>
   <source old="ChatContactInflater.java" new="fla"/>
   <source old="ClientContactInflater.java" new="gfa"/>
   <source old="StatusContactInflater.java" new="zha"/>
   <source old="BaseContactInflater.java" new="xfa"/>
   <source old="ChatListAdapter.java" new="wia"/>
   <source old="ChatMessageAdapter.java" new="hda"/>
   <source old="ChatViewerAdapter.java" new="ffa"/>
   <source old="ComparatorByChat.java" new="ofa"/>
   <source old="ComparatorByStatus.java" new="aea"/>
   <source old="ComparatorByName.java" new="zda"/>
   <source old="ContactListAdapter.java" new="ufa"/>
   <source old="SmoothContactAdapter.java" new="bda"/>
   <source old="BaseContactAdapter.java" new="aia"/>
   <source old="ContactListState.java" new="lja"/>
   <source old="GroupedContactAdapter.java" new="wea"/>
   <source old="OccupantListAdapter.java" new="fka"/>
   <source old="PhraseListAdapter.java" new="ela"/>
   <source old="BaseListEditorAdapter.java" new="eia"/>
   <source old="StatusEditorAdapter.java" new="wfa"/>
   <source old="StatusModeAdapter.java" new="jea"/>
   <source old="AccountChooseDialogBuilder.java" new="kha"/>
   <source old="AccountChooseAdapter.java" new="vfa"/>
   <source old="ExportChatDialogBuilder.java" new="qo"/>
   <source old="GroupAddDialogBuilder.java" new="sp"/>
   <source old="GroupRenameDialogBuilder.java" new="hr"/>
   <source old="ConfirmDialogBuilder.java" new="dt"/>
   <source old="NotificationDialogBuilder.java" new="dx"/>
   <source old="ListenableDialogBuilder.java" new="lq"/>
   <source old="DialogBuilder.java" new="tu"/>
   <source old="OrbotInstallerDialogBuilder.java" new="lr"/>
   <source old="AvatarInflaterHelper.java" new="ur"/>
   <source old="BaseSettingsActivity.java" new="mt"/>
   <source old="ContactTitleInflater.java" new="np"/>
   <source old="DummyAvatarInflaterHelper.java" new="fx"/>
   <source old="AbstractAvatarInflaterHelper.java" new="fy"/>
   <source old="ManagedDialog.java" new="rt"/>
   <source old="OrbotHelper.java" new="cs"/>
   <source old="PreferenceSummaryHelper.java" new="xz"/>
   <source old="NoDefaultSpinner.java" new="xy"/>
   <source old="PriorityPreference.java" new="nv"/>
   <source old="RingtonePreference.java" new="xq"/>
   <source old="StatusPreference.java" new="ny"/>
   <source old="DummyCursor.java" new="ms"/>
   <source old="Emoticons.java" new="cz"/>
   <source old="OverflowReceiverBufferException.java" new="kw"/>
   <source old="ProviderUtils.java" new="vv"/>
   <source old="SerializerUtils.java" new="tt"/>
   <source old="Jid.java" new="ky"/>
   <source old="Auto.java" new="av"/>
   <source old="Changed.java" new="oz"/>
   <source old="ChangedProvider.java" new="iv"/>
   <source old="ChatProvider.java" new="my"/>
   <source old="Default.java" new="qz"/>
   <source old="DefaultProvider.java" new="bq"/>
   <source old="From.java" new="iy"/>
   <source old="FromProvider.java" new="ts"/>
   <source old="Item.java" new="dw"/>
   <source old="AbstractSettings.java" new="pw"/>
   <source old="ItemProvider.java" new="nz"/>
   <source old="AbstractSettingsProvider.java" new="aw"/>
   <source old="ItemRemove.java" new="xt"/>
   <source old="List.java" new="mx"/>
   <source old="ListProvider.java" new="tq"/>
   <source old="Modified.java" new="yo"/>
   <source old="ModifiedProvider.java" new="rs"/>
   <source old="Next.java" new="jt"/>
   <source old="NextProvider.java" new="ks"/>
   <source old="OtrMode.java" new="hw"/>
   <source old="Pref.java" new="ly"/>
   <source old="PrefProvider.java" new="gx"/>
   <source old="Previous.java" new="wy"/>
   <source old="AbstractLink.java" new="as"/>
   <source old="PreviousProvider.java" new="hy"/>
   <source old="AbstractLinkProvider.java" new="kt"/>
   <source old="Remove.java" new="sz"/>
   <source old="Removed.java" new="xw"/>
   <source old="AbstractModified.java" new="ar"/>
   <source old="RemovedProvider.java" new="wt"/>
   <source old="AbstractModifiedProvider.java" new="ox"/>
   <source old="Retrieve.java" new="fv"/>
   <source old="AbstractChat.java" new="lp"/>
   <source old="SaveMode.java" new="px"/>
   <source old="ScopeMode.java" new="ls"/>
   <source old="SessionProvider.java" new="ut"/>
   <source old="SessionRemove.java" new="au"/>
   <source old="To.java" new="vy"/>
   <source old="ToProvider.java" new="zq"/>
   <source old="AbstractMessageProvider.java" new="gu"/>
   <source old="TypeMode.java" new="mp"/>
   <source old="UseMode.java" new="fz"/>
   <source old="Attention.java" new="zt"/>
   <source old="AttentionProvider.java" new="gt"/>
   <source old="VCardUpdate.java" new="bu"/>
   <source old="VCardUpdateProvider.java" new="pt"/>
   <source old="Delay.java" new="sw"/>
   <source old="DataFormType.java" new="nu"/>
   <source old="Affiliation.java" new="jp"/>
   <source old="MUC.java" new="vu"/>
   <source old="Role.java" new="mu"/>
   <source old="Received.java" new="oq"/>
   <source old="ReceivedProvider.java" new="tw"/>
   <source old="Request.java" new="po"/>
   <source old="RequestProvider.java" new="mr"/>
   <source old="Set.java" new="bz"/>
   <source old="SetProvider.java" new="ro"/>
   <source old="DisclosureValue.java" new="vt"/>
   <source old="Feature.java" new="xv"/>
   <source old="FeatureProvider.java" new="er"/>
   <source old="AbstractExtensionProvider.java" new="uy"/>
   <source old="LoggingValue.java" new="yr"/>
   <source old="SecurityValue.java" new="dr"/>
   <source old="TimeProvider.java" new="pp"/>
   <source old="XMPPUri.java" new="kp"/>
   <source old="AddressProperty.java" new="lz"/>
   <source old="AddressProvider.java" new="xr"/>
   <source old="AddressType.java" new="uq"/>
   <source old="BinaryLogo.java" new="sq"/>
   <source old="BinaryPhoto.java" new="hx"/>
   <source old="BinarySound.java" new="ct"/>
   <source old="AbstractBinaryData.java" new="lt"/>
   <source old="CategoriesInflater.java" new="wu"/>
   <source old="Classification.java" new="uv"/>
   <source old="ClassificationInflater.java" new="fq"/>
   <source old="DataHolder.java" new="cv"/>
   <source old="Email.java" new="ru"/>
   <source old="EmailProvider.java" new="ss"/>
   <source old="EmailType.java" new="hu"/>
   <source old="ExternalLogo.java" new="ux"/>
   <source old="ExternalPhoto.java" new="du"/>
   <source old="ExternalSound.java" new="wr"/>
   <source old="AbstractExternalData.java" new="pv"/>
   <source old="Geo.java" new="os"/>
   <source old="GeoProvider.java" new="xo"/>
   <source old="Key.java" new="wz"/>
   <source old="KeyProvider.java" new="ez"/>
   <source old="Label.java" new="fu"/>
   <source old="LabelProvider.java" new="ht"/>
   <source old="LogoHolderProvider.java" new="jw"/>
   <source old="NameInflater.java" new="ex"/>
   <source old="NameProperty.java" new="zr"/>
   <source old="Organization.java" new="pz"/>
   <source old="OrganizationProvider.java" new="wv"/>
   <source old="PhoneticSound.java" new="at"/>
   <source old="AbstractData.java" new="zz"/>
   <source old="PhotoHolderProvider.java" new="gp"/>
   <source old="SoundHolderProvider.java" new="iq"/>
   <source old="AbstractDataProvider.java" new="ns"/>
   <source old="Telephone.java" new="iz"/>
   <source old="AbstractTypedDataWithValue.java" new="wx"/>
   <source old="AbstractTypedData.java" new="st"/>
   <source old="TelephoneProvider.java" new="rr"/>
   <source old="AbstractTypedDataWithValueProvider.java" new="zw"/>
   <source old="AbstractTypedDataProvider.java" new="ix"/>
   <source old="TelephoneType.java" new="rq"/>
   <source old="VCardProperty.java" new="gy"/>
   <source old="AbstractIQProvider.java" new="wo"/>
   <source old="AbstractProvider.java" new="jy"/>
   <source old="AbstractInflater.java" new="ev"/>
   <source old="XMessengerOAuth2.java" new="vw"/>
   <source old="OtrEngineImpl.java" new="gs"/>
   <source old="OtrKeyManagerImpl.java" new="sv"/>
   <source old="OtrPolicyImpl.java" new="ys"/>
   <source old="LICENSE.java" new="lw"/>
   <source old="AsymmetricCipherKeyPair.java" new="nx"/>
   <source old="BufferedBlockCipher.java" new="ew"/>
   <source old="DataLengthException.java" new="fw"/>
   <source old="RuntimeCryptoException.java" new="mw"/>
   <source old="InvalidCipherTextException.java" new="xs"/>
   <source old="CryptoException.java" new="it"/>
   <source old="SHA1Digest.java" new="cr"/>
   <source old="SHA256Digest.java" new="qq"/>
   <source old="GeneralDigest.java" new="az"/>
   <source old="AESFastEngine.java" new="yy"/>
   <source old="DHKeyGeneratorHelper.java" new="su"/>
   <source old="DHKeyPairGenerator.java" new="dy"/>
   <source old="HMac.java" new="sy"/>
   <source old="CFBBlockCipher.java" new="pu"/>
   <source old="SICBlockCipher.java" new="uz"/>
   <source old="DHKeyGenerationParameters.java" new="zx"/>
   <source old="KeyGenerationParameters.java" new="bp"/>
   <source old="DHParameters.java" new="ov"/>
   <source old="DHPrivateKeyParameters.java" new="qx"/>
   <source old="DHPublicKeyParameters.java" new="yu"/>
   <source old="DHKeyParameters.java" new="ft"/>
   <source old="DHValidationParameters.java" new="gq"/>
   <source old="DSAParameters.java" new="nq"/>
   <source old="DSAPrivateKeyParameters.java" new="yx"/>
   <source old="DSAPublicKeyParameters.java" new="oy"/>
   <source old="DSAKeyParameters.java" new="ws"/>
   <source old="AsymmetricKeyParameter.java" new="ps"/>
   <source old="DSAValidationParameters.java" new="xu"/>
   <source old="KeyParameter.java" new="rz"/>
   <source old="ParametersWithIV.java" new="zp"/>
   <source old="ParametersWithRandom.java" new="oo"/>
   <source old="DSASigner.java" new="dp"/>
   <source old="Pack.java" new="mv"/>
   <source old="Arrays.java" new="cx"/>
   <source old="BigIntegers.java" new="eu"/>
   <source old="Base64Encoder.java" new="qt"/>
   <source old="Hex.java" new="ep"/>
   <source old="HexEncoder.java" new="qw"/>
   <source old="HexTranslator.java" new="wq"/>
   <source old="OtrCryptoEngineImpl.java" new="ku"/>
   <source old="OtrCryptoException.java" new="iw"/>
   <source old="OtrException.java" new="rv"/>
   <source old="SM.java" new="is"/>
   <source old="Util.java" new="cq"/>
   <source old="OtrInputStream.java" new="up"/>
   <source old="OtrOutputStream.java" new="qu"/>
   <source old="SerializationUtils.java" new="mq"/>
   <source old="DHCommitMessage.java" new="gz"/>
   <source old="DHKeyMessage.java" new="tr"/>
   <source old="DataMessage.java" new="zv"/>
   <source old="ErrorMessage.java" new="fr"/>
   <source old="MysteriousT.java" new="kx"/>
   <source old="PlainTextMessage.java" new="lu"/>
   <source old="QueryMessage.java" new="ds"/>
   <source old="RevealSignatureMessage.java" new="tv"/>
   <source old="SignatureMessage.java" new="ou"/>
   <source old="AbstractEncodedMessage.java" new="et"/>
   <source old="AbstractMessage.java" new="yw"/>
   <source old="SignatureM.java" new="aq"/>
   <source old="SignatureX.java" new="yq"/>
   <source old="AuthContextImpl.java" new="hp"/>
   <source old="OfferStatus.java" new="tz"/>
   <source old="OtrSm.java" new="qv"/>
   <source old="SessionID.java" new="yt"/>
   <source old="SessionImpl.java" new="no"/>
   <source old="SessionKeysImpl.java" new="eq"/>
   <source old="SessionStatus.java" new="lx"/>
   <source old="TLV.java" new="xp"/>
   <source old="AuthPermission.java" new="vo"/>
   <source old="DestroyFailedException.java" new="bx"/>
   <source old="PrivateCredentialPermission.java" new="jr"/>
   <source old="RefreshFailedException.java" new="yv"/>
   <source old="Subject.java" new="nt"/>
   <source old="SubjectDomainCombiner.java" new="js"/>
   <source old="ConfirmationCallback.java" new="or"/>
   <source old="LanguageCallback.java" new="iu"/>
   <source old="NameCallback.java" new="mz"/>
   <source old="PasswordCallback.java" new="br"/>
   <source old="TextOutputCallback.java" new="hz"/>
   <source old="UnsupportedCallbackException.java" new="rx"/>
   <source old="AccountExpiredException.java" new="bs"/>
   <source old="AccountLockedException.java" new="fs"/>
   <source old="AccountNotFoundException.java" new="us"/>
   <source old="AccountException.java" new="ir"/>
   <source old="AppConfigurationEntry.java" new="vq"/>
   <source old="Configuration.java" new="ax"/>
   <source old="CredentialExpiredException.java" new="dv"/>
   <source old="CredentialNotFoundException.java" new="hs"/>
   <source old="CredentialException.java" new="vr"/>
   <source old="FailedLoginException.java" new="yz"/>
   <source old="LoginException.java" new="ww"/>
   <source old="LoginContext.java" new="jz"/>
   <source old="AuthenticationException.java" new="vz"/>
   <source old="SaslException.java" new="kr"/>
   <source old="AuthorizeCallback.java" new="wp"/>
   <source old="RealmCallback.java" new="hv"/>
   <source old="TextInputCallback.java" new="ot"/>
   <source old="RealmChoiceCallback.java" new="gw"/>
   <source old="ChoiceCallback.java" new="kz"/>
   <source old="Sasl.java" new="pq"/>
   <source old="CRAMMD5HashedSaslClientFactory.java" new="hq"/>
   <source old="ClientSaslFactory.java" new="rw"/>
   <source old="Constants.java" new="zo"/>
   <source old="JCAProvider.java" new="rp"/>
   <source old="PlainSaslClient.java" new="ey"/>
   <source old="SaslProvider.java" new="zs"/>
   <source old="UserPasswordCallbackHandler.java" new="uw"/>
   <source old="UsernameHashedPasswordCallbackHandler.java" new="cy"/>
   <source old="AccountManager.java" new="sx"/>
   <source old="Chat.java" new="kq"/>
   <source old="ChatManager.java" new="bv"/>
   <source old="ConnectionConfiguration.java" new="bw"/>
   <source old="KeyStoreManager.java" new="qs"/>
   <source old="NonSASLAuthentication.java" new="pr"/>
   <source old="OpenTrustManager.java" new="es"/>
   <source old="PacketCollector.java" new="tp"/>
   <source old="PacketReader.java" new="ap"/>
   <source old="PacketWriter.java" new="by"/>
   <source old="PrivacyList.java" new="ty"/>
   <source old="PrivacyListManager.java" new="nw"/>
   <source old="ReconnectionManager.java" new="cp"/>
   <source old="Roster.java" new="ow"/>
   <source old="RosterEntry.java" new="uu"/>
   <source old="RosterGroup.java" new="cu"/>
   <source old="SASLAuthentication.java" new="bt"/>
   <source old="SmackConfiguration.java" new="vx"/>
   <source old="Connection.java" new="py"/>
   <source old="XMPPConnection.java" new="zy"/>
   <source old="XMPPException.java" new="so"/>
   <source old="XMPPTrustManager.java" new="dq"/>
   <source old="ConsoleDebugger.java" new="qr"/>
   <source old="AndFilter.java" new="nr"/>
   <source old="FromContainsFilter.java" new="jx"/>
   <source old="FromMatchesFilter.java" new="gv"/>
   <source old="IQTypeFilter.java" new="ry"/>
   <source old="MessageTypeFilter.java" new="sr"/>
   <source old="NotFilter.java" new="jv"/>
   <source old="OrFilter.java" new="cw"/>
   <source old="PacketExtensionFilter.java" new="zu"/>
   <source old="PacketIDFilter.java" new="vp"/>
   <source old="ThreadFilter.java" new="xx"/>
   <source old="ToContainsFilter.java" new="ay"/>
   <source old="Authentication.java" new="vs"/>
   <source old="Bind.java" new="ju"/>
   <source old="DefaultPacketExtension.java" new="tx"/>
   <source old="Presence.java" new="yp"/>
   <source old="Privacy.java" new="dz"/>
   <source old="PrivacyItem.java" new="kv"/>
   <source old="Registration.java" new="uo"/>
   <source old="RosterPacket.java" new="jq"/>
   <source old="StreamError.java" new="ip"/>
   <source old="XMPPError.java" new="op"/>
   <source old="PrivacyProvider.java" new="gr"/>
   <source old="ProviderManager.java" new="qp"/>
   <source old="DirectSocketFactory.java" new="lv"/>
   <source old="HTTPProxySocketFactory.java" new="qy"/>
   <source old="ProxyException.java" new="to"/>
   <source old="ProxyInfo.java" new="fp"/>
   <source old="Socks4ProxySocketFactory.java" new="we"/>
   <source old="Socks5ProxySocketFactory.java" new="fl"/>
   <source old="SASLAnonymous.java" new="rk"/>
   <source old="SASLCramMD5Mechanism.java" new="mo"/>
   <source old="SASLDigestMD5Mechanism.java" new="ij"/>
   <source old="SASLExternalMechanism.java" new="tk"/>
   <source old="SASLFacebookConnect.java" new="vm"/>
   <source old="SASLGSSAPIMechanism.java" new="tm"/>
   <source old="SASLPlainMechanism.java" new="co"/>
   <source old="SASLMechanism.java" new="de"/>
   <source old="Base64.java" new="wn"/>
   <source old="DNSUtil.java" new="ol"/>
   <source old="ObservableReader.java" new="gh"/>
   <source old="ObservableWriter.java" new="io"/>
   <source old="PacketParserUtils.java" new="kl"/>
   <source old="StringUtils.java" new="mj"/>
   <source old="DefaultMapEntry.java" new="ko"/>
   <source old="AbstractMapEntry.java" new="di"/>
   <source old="AbstractKeyValue.java" new="hf"/>
   <source old="EmptyIterator.java" new="dj"/>
   <source old="EmptyMapIterator.java" new="jo"/>
   <source old="AbstractEmptyIterator.java" new="sn"/>
   <source old="ReferenceMap.java" new="bo"/>
   <source old="AbstractReferenceMap.java" new="uf"/>
   <source old="AbstractHashedMap.java" new="ag"/>
   <source old="ChatState.java" new="qj"/>
   <source old="ChatStateManager.java" new="yj"/>
   <source old="DefaultMessageEventRequestListener.java" new="gl"/>
   <source old="EntityCapsManager.java" new="fe"/>
   <source old="Form.java" new="kf"/>
   <source old="FormField.java" new="hn"/>
   <source old="Gateway.java" new="go"/>
   <source old="GatewayManager.java" new="uk"/>
   <source old="GroupChatInvitation.java" new="yh"/>
   <source old="LastActivityManager.java" new="he"/>
   <source old="MessageEventManager.java" new="dl"/>
   <source old="MultipleRecipientInfo.java" new="td"/>
   <source old="MultipleRecipientManager.java" new="pk"/>
   <source old="OfflineMessageHeader.java" new="ri"/>
   <source old="OfflineMessageManager.java" new="sd"/>
   <source old="PrivateDataManager.java" new="on"/>
   <source old="RemoteRosterEntry.java" new="ti"/>
   <source old="ReportedData.java" new="vi"/>
   <source old="RosterExchangeManager.java" new="lj"/>
   <source old="ServiceDiscoveryManager.java" new="gg"/>
   <source old="SharedGroupManager.java" new="wl"/>
   <source old="XHTMLManager.java" new="ue"/>
   <source old="XHTMLText.java" new="kd"/>
   <source old="CloseListener.java" new="al"/>
   <source old="DataListener.java" new="zl"/>
   <source old="InBandBytestreamListener.java" new="fh"/>
   <source old="InBandBytestreamManager.java" new="lm"/>
   <source old="InBandBytestreamSession.java" new="lh"/>
   <source old="Close.java" new="si"/>
   <source old="Data.java" new="oj"/>
   <source old="DataPacketExtension.java" new="vl"/>
   <source old="Open.java" new="gd"/>
   <source old="CloseIQProvider.java" new="em"/>
   <source old="DataPacketProvider.java" new="yg"/>
   <source old="OpenIQProvider.java" new="hd"/>
   <source old="InitiationListener.java" new="hj"/>
   <source old="Socks5BytestreamListener.java" new="zm"/>
   <source old="Socks5BytestreamManager.java" new="xl"/>
   <source old="AbstractConnectionListener.java" new="fd"/>
   <source old="Socks5BytestreamSession.java" new="gn"/>
   <source old="Socks5ClientForInitiator.java" new="ph"/>
   <source old="Socks5Client.java" new="ne"/>
   <source old="Socks5Proxy.java" new="ye"/>
   <source old="Socks5Utils.java" new="qn"/>
   <source old="Bytestream.java" new="bh"/>
   <source old="BytestreamsProvider.java" new="xf"/>
   <source old="FaultTolerantNegotiator.java" new="km"/>
   <source old="FileTransferManager.java" new="zg"/>
   <source old="FileTransferNegotiator.java" new="ql"/>
   <source old="FileTransferRequest.java" new="do"/>
   <source old="InBandBytestreamRequest.java" new="kn"/>
   <source old="IBBTransferNegotiator.java" new="rm"/>
   <source old="IncomingFileTransfer.java" new="pl"/>
   <source old="FileTransfer.java" new="rl"/>
   <source old="StreamNegotiator.java" new="qm"/>
   <source old="Socks5BytestreamRequest.java" new="ok"/>
   <source old="Socks5TransferNegotiator.java" new="sk"/>
   <source old="PacketTypeFilter.java" new="fn"/>
   <source old="Affiliate.java" new="gf"/>
   <source old="ConnectionDetachedPacketCollector.java" new="cl"/>
   <source old="DeafOccupantInterceptor.java" new="sh"/>
   <source old="DefaultParticipantStatusListener.java" new="sl"/>
   <source old="DefaultUserStatusListener.java" new="fk"/>
   <source old="DiscussionHistory.java" new="mn"/>
   <source old="HostedRoom.java" new="dd"/>
   <source old="MultiUserChat.java" new="xg"/>
   <source old="Occupant.java" new="jl"/>
   <source old="PacketMultiplexListener.java" new="gk"/>
   <source old="RoomInfo.java" new="kh"/>
   <source old="RoomListenerMultiplexor.java" new="tf"/>
   <source old="CapsExtension.java" new="se"/>
   <source old="ChatStateExtension.java" new="ed"/>
   <source old="DataForm.java" new="rn"/>
   <source old="DefaultPrivateData.java" new="qh"/>
   <source old="DelayInfo.java" new="wk"/>
   <source old="DelayInformation.java" new="cm"/>
   <source old="DiscoverInfo.java" new="eo"/>
   <source old="DiscoverItems.java" new="kg"/>
   <source old="HeadersExtension.java" new="re"/>
   <source old="LastActivity.java" new="xe"/>
   <source old="MUCAdmin.java" new="xd"/>
   <source old="MUCInitialPresence.java" new="ee"/>
   <source old="MUCOwner.java" new="pf"/>
   <source old="MUCUser.java" new="ih"/>
   <source old="MessageEvent.java" new="mi"/>
   <source old="MultipleAddresses.java" new="ff"/>
   <source old="Nick.java" new="ln"/>
   <source old="OfflineMessageInfo.java" new="cg"/>
   <source old="OfflineMessageRequest.java" new="id"/>
   <source old="Ping.java" new="sm"/>
   <source old="RosterExchange.java" new="hk"/>
   <source old="SharedGroupsInfo.java" new="kj"/>
   <source old="StreamInitiation.java" new="ve"/>
   <source old="SyncPacketSend.java" new="wd"/>
   <source old="Time.java" new="af"/>
   <source old="Version.java" new="pi"/>
   <source old="XHTMLExtension.java" new="yk"/>
   <source old="CapsExtensionProvider.java" new="nj"/>
   <source old="DataFormProvider.java" new="nn"/>
   <source old="DelayInfoProvider.java" new="od"/>
   <source old="DelayInformationProvider.java" new="tn"/>
   <source old="DiscoverInfoProvider.java" new="qi"/>
   <source old="DiscoverItemsProvider.java" new="zj"/>
   <source old="HeaderProvider.java" new="ji"/>
   <source old="HeadersProvider.java" new="pj"/>
   <source old="EmbeddedExtensionProvider.java" new="oe"/>
   <source old="MUCAdminProvider.java" new="zn"/>
   <source old="MUCOwnerProvider.java" new="hl"/>
   <source old="MUCUserProvider.java" new="kk"/>
   <source old="MessageEventProvider.java" new="je"/>
   <source old="MultipleAddressesProvider.java" new="mf"/>
   <source old="RosterExchangeProvider.java" new="rg"/>
   <source old="StreamInitiationProvider.java" new="me"/>
   <source old="VCardProvider.java" new="qd"/>
   <source old="XHTMLExtensionProvider.java" new="hg"/>
   <source old="SimpleUserSearch.java" new="hi"/>
   <source old="IQ.java" new="pm"/>
   <source old="Packet.java" new="ug"/>
   <source old="UserSearch.java" new="vh"/>
   <source old="UserSearchManager.java" new="pn"/>
   <source old="A6Record.java" new="ke"/>
   <source old="AAAARecord.java" new="ce"/>
   <source old="AFSDBRecord.java" new="ni"/>
   <source old="APLRecord.java" new="hm"/>
   <source old="ARecord.java" new="en"/>
   <source old="Address.java" new="rf"/>
   <source old="CERTRecord.java" new="vd"/>
   <source old="CNAMERecord.java" new="wg"/>
   <source old="RRset.java" new="el"/>
   <source old="ClientSubnetOption.java" new="jg"/>
   <source old="Compression.java" new="uh"/>
   <source old="Credibility.java" new="ai"/>
   <source old="DClass.java" new="zh"/>
   <source old="DHCIDRecord.java" new="bk"/>
   <source old="DLVRecord.java" new="qk"/>
   <source old="DNAMERecord.java" new="if"/>
   <source old="DNSInput.java" new="zd"/>
   <source old="DNSKEYRecord.java" new="jh"/>
   <source old="DNSOutput.java" new="vn"/>
   <source old="DNSSEC.java" new="tj"/>
   <source old="DSRecord.java" new="yf"/>
   <source old="EmptyRecord.java" new="og"/>
   <source old="ExtendedFlags.java" new="bi"/>
   <source old="ExtendedResolver.java" new="mg"/>
   <source old="Flags.java" new="ig"/>
   <source old="FormattedTime.java" new="il"/>
   <source old="GPOSRecord.java" new="pg"/>
   <source old="Generator.java" new="tg"/>
   <source old="HINFORecord.java" new="ei"/>
   <source old="Header.java" new="vj"/>
   <source old="IPSECKEYRecord.java" new="am"/>
   <source old="ISDNRecord.java" new="pd"/>
   <source old="InvalidDClassException.java" new="ch"/>
   <source old="InvalidTTLException.java" new="nm"/>
   <source old="InvalidTypeException.java" new="ki"/>
   <source old="KEYBase.java" new="ej"/>
   <source old="KEYRecord.java" new="sg"/>
   <source old="KXRecord.java" new="fm"/>
   <source old="LOCRecord.java" new="lk"/>
   <source old="Lookup.java" new="qe"/>
   <source old="MBRecord.java" new="ml"/>
   <source old="MDRecord.java" new="nh"/>
   <source old="MFRecord.java" new="aj"/>
   <source old="MGRecord.java" new="jf"/>
   <source old="MINFORecord.java" new="zi"/>
   <source old="MRRecord.java" new="bd"/>
   <source old="MXRecord.java" new="ae"/>
   <source old="Master.java" new="lo"/>
   <source old="NAPTRRecord.java" new="ie"/>
   <source old="NSAPRecord.java" new="dh"/>
   <source old="NSAP_PTRRecord.java" new="nk"/>
   <source old="NSEC3PARAMRecord.java" new="mk"/>
   <source old="NSEC3Record.java" new="mh"/>
   <source old="NSECRecord.java" new="dg"/>
   <source old="NSIDOption.java" new="mm"/>
   <source old="GenericEDNSOption.java" new="rh"/>
   <source old="EDNSOption.java" new="xh"/>
   <source old="NSRecord.java" new="gi"/>
   <source old="NULLRecord.java" new="wj"/>
   <source old="NXTRecord.java" new="in"/>
   <source old="Name.java" new="bl"/>
   <source old="NameTooLongException.java" new="wm"/>
   <source old="WireParseException.java" new="lg"/>
   <source old="OPTRecord.java" new="ck"/>
   <source old="Opcode.java" new="nl"/>
   <source old="Options.java" new="un"/>
   <source old="PTRRecord.java" new="cf"/>
   <source old="SingleCompressedNameBase.java" new="xi"/>
   <source old="SingleNameBase.java" new="oi"/>
   <source old="PXRecord.java" new="nf"/>
   <source old="RPRecord.java" new="sf"/>
   <source old="RRSIGRecord.java" new="ah"/>
   <source old="RTRecord.java" new="fo"/>
   <source old="U16NameBase.java" new="oh"/>
   <source old="Rcode.java" new="ef"/>
   <source old="RelativeNameException.java" new="md"/>
   <source old="ResolveThread.java" new="wh"/>
   <source old="ResolverConfig.java" new="ul"/>
   <source old="ReverseMap.java" new="cn"/>
   <source old="SIG0.java" new="jk"/>
   <source old="SIGRecord.java" new="ad"/>
   <source old="SIGBase.java" new="rj"/>
   <source old="SOARecord.java" new="rd"/>
   <source old="SPFRecord.java" new="dm"/>
   <source old="SRVRecord.java" new="cd"/>
   <source old="SSHFPRecord.java" new="tl"/>
   <source old="Section.java" new="ge"/>
   <source old="Serial.java" new="bj"/>
   <source old="SetResponse.java" new="be"/>
   <source old="SimpleResolver.java" new="uj"/>
   <source old="TCPClient.java" new="vk"/>
   <source old="TKEYRecord.java" new="um"/>
   <source old="TSIG.java" new="fg"/>
   <source old="TSIGRecord.java" new="ii"/>
   <source old="TTL.java" new="gj"/>
   <source old="TXTRecord.java" new="vf"/>
   <source old="TXTBase.java" new="jm"/>
   <source old="Tokenizer.java" new="bg"/>
   <source old="TextParseException.java" new="zf"/>
   <source old="Type.java" new="bn"/>
   <source old="Mnemonic.java" new="cj"/>
   <source old="TypeBitmap.java" new="eg"/>
   <source old="Client.java" new="df"/>
   <source old="UDPClient.java" new="ll"/>
   <source old="UNKRecord.java" new="wf"/>
   <source old="Update.java" new="hh"/>
   <source old="Message.java" new="wi"/>
   <source old="WKSRecord.java" new="fj"/>
   <source old="X25Record.java" new="xn"/>
   <source old="Record.java" new="fi"/>
   <source old="Zone.java" new="xk"/>
   <source old="ZoneTransferException.java" new="yd"/>
   <source old="ZoneTransferIn.java" new="lf"/>
   <source old="DNSJavaNameService.java" new="vg"/>
   <source old="primary.java" new="le"/>
   <source old="xfrin.java" new="eh"/>
   <source old="HMAC.java" new="jd"/>
   <source old="base16.java" new="ui"/>
   <source old="base32.java" new="dn"/>
   <source old="base64.java" new="qg"/>
   <source old="hexdump.java" new="pe"/>
   <source old="OnErrorListener.java" new="yl"/>
   <source old="SmackDebugger.java" new="yn"/>
   <source old="OnMigrationListener.java" new="jj"/>
   <source old="OnWipeListener.java" new="ci"/>
   <source old="OnAccountOfflineListener.java" new="om"/>
   <source old="OnAccountOnlineListener.java" new="ik"/>
   <source old="OAuthProvider.java" new="zk"/>
   <source old="OnTimerListener.java" new="dk"/>
   <source old="OnConnectedListener.java" new="ng"/>
   <source old="OnConnectionListener.java" new="yi"/>
   <source old="OnTimeReceivedListener.java" new="im"/>
   <source old="AccountNotificationProvider.java" new="xm"/>
   <source old="NotificationProvider.java" new="ao"/>
   <source old="OnLowMemoryListener.java" new="li"/>
   <source old="OnClearListener.java" new="an"/>
   <source old="OnAuthorizedListener.java" new="xj"/>
   <source old="OtrEngineHost.java" new="ek"/>
   <source old="OnResponseListener.java" new="bm"/>
   <source old="OnServerInfoReceivedListener.java" new="bf"/>
   <source old="OnStatusChangeListener.java" new="jn"/>
   <source old="OnRosterReceivedListener.java" new="te"/>
   <source old="OnAccountArchiveModeChangedListener.java" new="ym"/>
   <source old="OnCloseListener.java" new="ze"/>
   <source old="OnInitializedListener.java" new="of"/>
   <source old="AbstractEntityTable.java" new="qf"/>
   <source old="GroupStateProvider.java" new="gm"/>
   <source old="DatabaseTable.java" new="ld"/>
   <source old="AbstractAccountTable.java" new="th"/>
   <source old="OnArchiveModificationsReceivedListener.java" new="ud"/>
   <source old="OnAccountDisabledListener.java" new="sj"/>
   <source old="OnAccountEnabledListener.java" new="ak"/>
   <source old="OnPacketListener.java" new="ho"/>
   <source old="OnDisconnectListener.java" new="nd"/>
   <source old="EntityNotificationItem.java" new="zc"/>
   <source old="AccountNotificationItem.java" new="hc"/>
   <source old="NotificationItem.java" new="gc"/>
   <source old="OnRosterChangedListener.java" new="sc"/>
   <source old="OnAccountSyncableChangedListener.java" new="yc"/>
   <source old="OnAccountRemovedListener.java" new="nc"/>
   <source old="OnAccountAddedListener.java" new="pc"/>
   <source old="OnUnloadListener.java" new="vc"/>
   <source old="OnLoadListener.java" new="uc"/>
   <source old="BaseManagerInterface.java" new="bc"/>
   <source old="OnTextChangedListener.java" new="xc"/>
   <source old="PageSwitcher.java" new="cc"/>
   <source old="OnChatChangedListener.java" new="rc"/>
   <source old="OnVCardListener.java" new="wc"/>
   <source old="NotificationDialogListener.java" new="oc"/>
   <source old="ConfirmDialogListener.java" new="lc"/>
   <source old="OnAcceptListener.java" new="jc"/>
   <source old="OnDeclineListener.java" new="tc"/>
   <source old="OnCancelListener.java" new="fc"/>
   <source old="OnContactChangedListener.java" new="qc"/>
   <source old="OnAccountChangedListener.java" new="ic"/>
   <source old="BaseUIListener.java" new="ac"/>
   <source old="SaveStateAdapter.java" new="dc"/>
   <source old="Group.java" new="ec"/>
   <source old="UpdatableAdapter.java" new="mc"/>
   <source old="CollectionHeader.java" new="kc"/>
   <source old="Logo.java" new="rb"/>
   <source old="Photo.java" new="ub"/>
   <source old="Sound.java" new="ob"/>
   <source old="Container.java" new="jb"/>
   <source old="OtrEngine.java" new="fb"/>
   <source old="OtrEngineListener.java" new="nb"/>
   <source old="OtrKeyManager.java" new="sb"/>
   <source old="OtrKeyManagerStore.java" new="kb"/>
   <source old="OtrKeyManagerListener.java" new="zb"/>
   <source old="OtrPolicy.java" new="ab"/>
   <source old="ExtendedDigest.java" new="wb"/>
   <source old="Digest.java" new="yb"/>
   <source old="AsymmetricCipherKeyPairGenerator.java" new="bb"/>
   <source old="Mac.java" new="vb"/>
   <source old="BlockCipher.java" new="ib"/>
   <source old="CipherParameters.java" new="cb"/>
   <source old="DSA.java" new="mb"/>
   <source old="Encoder.java" new="lb"/>
   <source old="Translator.java" new="hb"/>
   <source old="OtrCryptoEngine.java" new="pb"/>
   <source old="SerializationConstants.java" new="qb"/>
   <source old="AuthContext.java" new="gb"/>
   <source old="Session.java" new="xb"/>
   <source old="SessionKeys.java" new="db"/>
   <source old="Destroyable.java" new="eb"/>
   <source old="Refreshable.java" new="tb"/>
   <source old="LoginModule.java" new="ga"/>
   <source old="Callback.java" new="ha"/>
   <source old="SaslServer.java" new="oa"/>
   <source old="SaslServerFactory.java" new="za"/>
   <source old="SaslClientFactory.java" new="sa"/>
   <source old="SaslClient.java" new="ua"/>
   <source old="CertificateListener.java" new="va"/>
   <source old="PrivacyListListener.java" new="ia"/>
   <source old="RosterListener.java" new="ta"/>
   <source old="RosterStorage.java" new="ea"/>
   <source old="UserAuthentication.java" new="aa"/>
   <source old="ReaderListener.java" new="na"/>
   <source old="WriterListener.java" new="ja"/>
   <source old="CallbackHandler.java" new="ka"/>
   <source old="KeyValue.java" new="ba"/>
   <source old="ResettableIterator.java" new="ra"/>
   <source old="MapIterator.java" new="ca"/>
   <source old="IterableMap.java" new="qa"/>
   <source old="ChatStateListener.java" new="la"/>
   <source old="MessageListener.java" new="ya"/>
   <source old="ChatManagerListener.java" new="fa"/>
   <source old="MessageEventRequestListener.java" new="wa"/>
   <source old="MessageEventNotificationListener.java" new="ma"/>
   <source old="RosterExchangeListener.java" new="pa"/>
   <source old="CapsVerListener.java" new="xa"/>
   <source old="BytestreamListener.java" new="da"/>
   <source old="BytestreamManager.java" new="f"/>
   <source old="BytestreamSession.java" new="p"/>
   <source old="FileTransferListener.java" new="w"/>
   <source old="OutgoingFileTransfer.java" new="j"/>
   <source old="BytestreamRequest.java" new="l"/>
   <source old="PacketInterceptor.java" new="t"/>
   <source old="ParticipantStatusListener.java" new="d"/>
   <source old="UserStatusListener.java" new="b"/>
   <source old="InvitationListener.java" new="s"/>
   <source old="InvitationRejectionListener.java" new="y"/>
   <source old="ConnectionCreationListener.java" new="u"/>
   <source old="NodeInformationProvider.java" new="x"/>
   <source old="ConnectionListener.java" new="i"/>
   <source old="PacketFilter.java" new="m"/>
   <source old="PacketListener.java" new="k"/>
   <source old="SubjectUpdatedListener.java" new="g"/>
   <source old="Instance.java" new="v"/>
   <source old="PrivateData.java" new="e"/>
   <source old="VCard.java" new="q"/>
   <source old="PacketExtension.java" new="h"/>
   <source old="PrivateDataProvider.java" new="a"/>
   <source old="PacketExtensionProvider.java" new="o"/>
   <source old="IQProvider.java" new="r"/>
   <source old="Cache.java" new="z"/>
   <source old="ResolverListener.java" new="c"/>
   <source old="Resolver.java" new="n"/>
  </sources>
  <lines>
   <line l="208"/>
   <line l="167"/>
   <line l="96"/>
   <line l="211"/>
   <line l="206"/>
   <line l="58"/>
   <line l="8"/>
   <line l="77"/>
   <line l="166"/>
   <line l="221"/>
   <line l="174"/>
   <line l="61"/>
   <line l="173"/>
   <line l="207"/>
   <line l="62"/>
   <line l="70"/>
   <line l="142"/>
   <line l="79"/>
   <line l="40"/>
   <line l="182"/>
   <line l="169"/>
   <line l="66"/>
   <line l="25"/>
   <line l="28"/>
   <line l="105"/>
   <line l="112"/>
   <line l="17"/>
   <line l="177"/>
   <line l="3"/>
   <line l="35"/>
   <line l="126"/>
   <line l="224"/>
   <line l="185"/>
   <line l="100"/>
   <line l="102"/>
   <line l="170"/>
   <line l="158"/>
   <line l="219"/>
   <line l="209"/>
   <line l="203"/>
   <line l="220"/>
   <line l="198"/>
   <line l="202"/>
   <line l="192"/>
   <line l="216"/>
   <line l="98"/>
   <line l="140"/>
   <line l="145"/>
   <line l="137"/>
   <line l="143"/>
   <line l="89"/>
   <line l="129"/>
   <line l="15"/>
   <line l="230"/>
   <line l="229"/>
   <line l="34"/>
   <line l="235"/>
   <line l="164"/>
   <line l="183"/>
   <line l="171"/>
   <line l="154"/>
   <line l="68"/>
   <line l="106"/>
   <line l="95"/>
   <line l="2"/>
   <line l="141"/>
   <line l="75"/>
   <line l="135"/>
   <line l="69"/>
   <line l="38"/>
   <line l="194"/>
   <line l="115"/>
   <line l="104"/>
   <line l="117"/>
   <line l="88"/>
   <line l="151"/>
   <line l="19"/>
   <line l="103"/>
   <line l="10"/>
   <line l="118"/>
   <line l="53"/>
   <line l="27"/>
   <line l="225"/>
   <line l="67"/>
   <line l="108"/>
   <line l="42"/>
   <line l="16"/>
   <line l="172"/>
   <line l="148"/>
   <line l="20"/>
   <line l="33"/>
   <line l="186"/>
   <line l="85"/>
   <line l="179"/>
   <line l="18"/>
   <line l="60"/>
   <line l="188"/>
   <line l="130"/>
   <line l="193"/>
   <line l="231"/>
   <line l="14"/>
   <line l="210"/>
   <line l="180"/>
   <line l="81"/>
   <line l="110"/>
   <line l="56"/>
   <line l="226"/>
   <line l="30"/>
   <line l="47"/>
   <line l="223"/>
   <line l="32"/>
   <line l="199"/>
   <line l="212"/>
   <line l="7"/>
   <line l="204"/>
   <line l="144"/>
   <line l="214"/>
   <line l="41"/>
   <line l="26"/>
   <line l="213"/>
   <line l="233"/>
   <line l="6"/>
   <line l="121"/>
   <line l="31"/>
   <line l="80"/>
   <line l="73"/>
   <line l="71"/>
   <line l="160"/>
   <line l="123"/>
   <line l="162"/>
   <line l="176"/>
   <line l="0"/>
   <line l="195"/>
   <line l="234"/>
   <line l="13"/>
   <line l="49"/>
   <line l="113"/>
   <line l="1"/>
   <line l="175"/>
   <line l="82"/>
   <line l="134"/>
   <line l="163"/>
   <line l="23"/>
   <line l="178"/>
   <line l="184"/>
   <line l="217"/>
   <line l="136"/>
   <line l="12"/>
   <line l="87"/>
   <line l="84"/>
   <line l="76"/>
   <line l="156"/>
   <line l="116"/>
   <line l="119"/>
   <line l="159"/>
   <line l="72"/>
   <line l="92"/>
   <line l="120"/>
   <line l="111"/>
   <line l="43"/>
   <line l="187"/>
   <line l="90"/>
   <line l="36"/>
   <line l="65"/>
   <line l="222"/>
   <line l="215"/>
   <line l="99"/>
   <line l="161"/>
   <line l="29"/>
   <line l="149"/>
   <line l="138"/>
   <line l="125"/>
   <line l="205"/>
   <line l="200"/>
   <line l="146"/>
   <line l="107"/>
   <line l="24"/>
   <line l="52"/>
   <line l="97"/>
   <line l="132"/>
   <line l="196"/>
   <line l="54"/>
   <line l="189"/>
   <line l="122"/>
   <line l="201"/>
   <line l="232"/>
   <line l="165"/>
   <line l="139"/>
   <line l="11"/>
   <line l="197"/>
   <line l="127"/>
   <line l="150"/>
   <line l="190"/>
   <line l="50"/>
   <line l="147"/>
   <line l="57"/>
   <line l="51"/>
   <line l="101"/>
   <line l="109"/>
   <line l="93"/>
   <line l="133"/>
   <line l="168"/>
   <line l="55"/>
   <line l="181"/>
   <line l="22"/>
   <line l="46"/>
   <line l="152"/>
   <line l="44"/>
   <line l="155"/>
   <line l="39"/>
   <line l="128"/>
   <line l="74"/>
   <line l="228"/>
   <line l="21"/>
   <line l="64"/>
   <line l="157"/>
   <line l="63"/>
   <line l="48"/>
   <line l="131"/>
   <line l="37"/>
   <line l="5"/>
   <line l="9"/>
   <line l="83"/>
   <line l="86"/>
   <line l="114"/>
   <line l="227"/>
   <line l="94"/>
   <line l="218"/>
   <line l="78"/>
   <line l="153"/>
   <line l="4"/>
   <line l="59"/>
   <line l="45"/>
   <line l="191"/>
   <line l="91"/>
   <line l="124"/>
   <line l="293"/>
   <line l="366"/>
   <line l="335"/>
   <line l="401"/>
   <line l="426"/>
   <line l="452"/>
   <line l="280"/>
   <line l="300"/>
   <line l="251"/>
   <line l="403"/>
   <line l="464"/>
   <line l="305"/>
   <line l="265"/>
   <line l="238"/>
   <line l="371"/>
   <line l="369"/>
   <line l="326"/>
   <line l="430"/>
   <line l="373"/>
   <line l="400"/>
   <line l="423"/>
   <line l="333"/>
   <line l="318"/>
   <line l="257"/>
   <line l="307"/>
   <line l="336"/>
   <line l="410"/>
   <line l="306"/>
   <line l="285"/>
   <line l="438"/>
   <line l="375"/>
   <line l="296"/>
   <line l="376"/>
   <line l="273"/>
   <line l="261"/>
   <line l="413"/>
   <line l="422"/>
   <line l="414"/>
   <line l="370"/>
   <line l="397"/>
   <line l="433"/>
   <line l="329"/>
   <line l="412"/>
   <line l="297"/>
   <line l="303"/>
   <line l="406"/>
   <line l="284"/>
   <line l="457"/>
   <line l="381"/>
   <line l="357"/>
   <line l="239"/>
   <line l="461"/>
   <line l="407"/>
   <line l="299"/>
   <line l="377"/>
   <line l="343"/>
   <line l="323"/>
   <line l="409"/>
   <line l="259"/>
   <line l="242"/>
   <line l="330"/>
   <line l="243"/>
   <line l="431"/>
   <line l="456"/>
   <line l="337"/>
   <line l="312"/>
   <line l="458"/>
   <line l="416"/>
   <line l="399"/>
   <line l="240"/>
   <line l="275"/>
   <line l="392"/>
   <line l="353"/>
   <line l="443"/>
   <line l="263"/>
   <line l="320"/>
   <line l="272"/>
   <line l="324"/>
   <line l="379"/>
   <line l="361"/>
   <line l="274"/>
   <line l="302"/>
   <line l="384"/>
   <line l="360"/>
   <line l="382"/>
   <line l="363"/>
   <line l="248"/>
   <line l="278"/>
   <line l="316"/>
   <line l="270"/>
   <line l="249"/>
   <line l="269"/>
   <line l="351"/>
   <line l="247"/>
   <line l="264"/>
   <line l="441"/>
   <line l="340"/>
   <line l="298"/>
   <line l="356"/>
   <line l="244"/>
   <line l="393"/>
   <line l="241"/>
   <line l="405"/>
   <line l="440"/>
   <line l="395"/>
   <line l="338"/>
   <line l="394"/>
   <line l="367"/>
   <line l="286"/>
   <line l="290"/>
   <line l="358"/>
   <line l="260"/>
   <line l="315"/>
   <line l="444"/>
   <line l="331"/>
   <line l="446"/>
   <line l="301"/>
   <line l="255"/>
   <line l="428"/>
   <line l="310"/>
   <line l="258"/>
   <line l="354"/>
   <line l="342"/>
   <line l="388"/>
   <line l="442"/>
   <line l="311"/>
   <line l="283"/>
   <line l="387"/>
   <line l="254"/>
   <line l="374"/>
   <line l="380"/>
   <line l="385"/>
   <line l="378"/>
   <line l="417"/>
   <line l="252"/>
   <line l="304"/>
   <line l="289"/>
   <line l="281"/>
   <line l="288"/>
   <line l="463"/>
   <line l="279"/>
   <line l="327"/>
   <line l="362"/>
   <line l="349"/>
   <line l="420"/>
   <line l="398"/>
   <line l="435"/>
   <line l="276"/>
   <line l="267"/>
   <line l="383"/>
   <line l="459"/>
   <line l="352"/>
   <line l="350"/>
   <line l="346"/>
   <line l="339"/>
   <line l="277"/>
   <line l="404"/>
   <line l="236"/>
   <line l="432"/>
   <line l="253"/>
   <line l="317"/>
   <line l="391"/>
   <line l="313"/>
   <line l="396"/>
   <line l="341"/>
   <line l="250"/>
   <line l="436"/>
   <line l="450"/>
   <line l="418"/>
   <line l="256"/>
   <line l="334"/>
   <line l="328"/>
   <line l="445"/>
   <line l="462"/>
   <line l="345"/>
   <line l="355"/>
   <line l="415"/>
   <line l="372"/>
   <line l="348"/>
   <line l="448"/>
   <line l="453"/>
   <line l="271"/>
   <line l="287"/>
   <line l="245"/>
   <line l="451"/>
   <line l="246"/>
   <line l="425"/>
   <line l="424"/>
   <line l="447"/>
   <line l="402"/>
   <line l="455"/>
   <line l="262"/>
   <line l="454"/>
   <line l="319"/>
   <line l="332"/>
   <line l="291"/>
   <line l="282"/>
   <line l="421"/>
   <line l="294"/>
   <line l="292"/>
   <line l="368"/>
   <line l="434"/>
   <line l="295"/>
   <line l="308"/>
   <line l="347"/>
   <line l="322"/>
   <line l="266"/>
   <line l="437"/>
   <line l="321"/>
   <line l="314"/>
   <line l="390"/>
   <line l="268"/>
   <line l="365"/>
   <line l="344"/>
   <line l="364"/>
   <line l="309"/>
   <line l="389"/>
   <line l="386"/>
   <line l="429"/>
   <line l="419"/>
   <line l="460"/>
   <line l="427"/>
   <line l="449"/>
   <line l="237"/>
   <line l="325"/>
   <line l="359"/>
   <line l="411"/>
   <line l="439"/>
   <line l="408"/>
   <line l="552"/>
   <line l="670"/>
   <line l="661"/>
   <line l="719"/>
   <line l="608"/>
   <line l="724"/>
   <line l="486"/>
   <line l="632"/>
   <line l="652"/>
   <line l="576"/>
   <line l="703"/>
   <line l="586"/>
   <line l="473"/>
   <line l="556"/>
   <line l="532"/>
   <line l="587"/>
   <line l="721"/>
   <line l="469"/>
   <line l="565"/>
   <line l="711"/>
   <line l="631"/>
   <line l="575"/>
   <line l="668"/>
   <line l="673"/>
   <line l="502"/>
   <line l="746"/>
   <line l="707"/>
   <line l="496"/>
   <line l="580"/>
   <line l="527"/>
   <line l="478"/>
   <line l="700"/>
   <line l="475"/>
   <line l="669"/>
   <line l="538"/>
   <line l="655"/>
   <line l="583"/>
   <line l="735"/>
   <line l="639"/>
   <line l="695"/>
   <line l="671"/>
   <line l="604"/>
   <line l="601"/>
   <line l="738"/>
   <line l="500"/>
   <line l="618"/>
   <line l="548"/>
   <line l="526"/>
   <line l="708"/>
   <line l="540"/>
   <line l="731"/>
   <line l="709"/>
   <line l="466"/>
   <line l="488"/>
   <line l="715"/>
   <line l="477"/>
   <line l="704"/>
   <line l="663"/>
   <line l="472"/>
   <line l="600"/>
   <line l="507"/>
   <line l="690"/>
   <line l="651"/>
   <line l="571"/>
   <line l="742"/>
   <line l="705"/>
   <line l="514"/>
   <line l="474"/>
   <line l="494"/>
   <line l="698"/>
   <line l="723"/>
   <line l="653"/>
   <line l="539"/>
   <line l="479"/>
   <line l="577"/>
   <line l="612"/>
   <line l="616"/>
   <line l="582"/>
   <line l="624"/>
   <line l="528"/>
   <line l="680"/>
   <line l="513"/>
   <line l="490"/>
   <line l="546"/>
   <line l="578"/>
   <line l="561"/>
   <line l="511"/>
   <line l="549"/>
   <line l="579"/>
   <line l="558"/>
   <line l="634"/>
   <line l="744"/>
   <line l="657"/>
   <line l="659"/>
   <line l="740"/>
   <line l="682"/>
   <line l="481"/>
   <line l="720"/>
   <line l="564"/>
   <line l="498"/>
   <line l="674"/>
   <line l="597"/>
   <line l="645"/>
   <line l="667"/>
   <line l="510"/>
   <line l="542"/>
   <line l="656"/>
   <line l="630"/>
   <line l="599"/>
   <line l="648"/>
   <line l="589"/>
   <line l="643"/>
   <line l="676"/>
   <line l="588"/>
   <line l="525"/>
   <line l="688"/>
   <line l="641"/>
   <line l="635"/>
   <line l="675"/>
   <line l="702"/>
   <line l="515"/>
   <line l="647"/>
   <line l="602"/>
   <line l="569"/>
   <line l="736"/>
   <line l="613"/>
   <line l="607"/>
   <line l="717"/>
   <line l="693"/>
   <line l="662"/>
   <line l="476"/>
   <line l="614"/>
   <line l="591"/>
   <line l="508"/>
   <line l="544"/>
   <line l="501"/>
   <line l="649"/>
   <line l="664"/>
   <line l="594"/>
   <line l="610"/>
   <line l="739"/>
   <line l="491"/>
   <line l="531"/>
   <line l="681"/>
   <line l="557"/>
   <line l="550"/>
   <line l="701"/>
   <line l="636"/>
   <line l="482"/>
   <line l="584"/>
   <line l="626"/>
   <line l="553"/>
   <line l="677"/>
   <line l="492"/>
   <line l="730"/>
   <line l="535"/>
   <line l="692"/>
   <line l="729"/>
   <line l="534"/>
   <line l="685"/>
   <line l="687"/>
   <line l="615"/>
   <line l="725"/>
   <line l="468"/>
   <line l="506"/>
   <line l="620"/>
   <line l="642"/>
   <line l="666"/>
   <line l="517"/>
   <line l="537"/>
   <line l="503"/>
   <line l="509"/>
   <line l="743"/>
   <line l="660"/>
   <line l="710"/>
   <line l="733"/>
   <line l="718"/>
   <line l="650"/>
   <line l="629"/>
   <line l="596"/>
   <line l="541"/>
   <line l="470"/>
   <line l="518"/>
   <line l="530"/>
   <line l="633"/>
   <line l="484"/>
   <line l="627"/>
   <line l="566"/>
   <line l="679"/>
   <line l="646"/>
   <line l="568"/>
   <line l="559"/>
   <line l="465"/>
   <line l="726"/>
   <line l="734"/>
   <line l="621"/>
   <line l="522"/>
   <line l="562"/>
   <line l="714"/>
   <line l="543"/>
   <line l="697"/>
   <line l="691"/>
   <line l="547"/>
   <line l="606"/>
   <line l="480"/>
   <line l="471"/>
   <line l="694"/>
   <line l="499"/>
   <line l="567"/>
   <line l="536"/>
   <line l="611"/>
   <line l="609"/>
   <line l="592"/>
   <line l="529"/>
   <line l="581"/>
   <line l="623"/>
   <line l="617"/>
   <line l="505"/>
   <line l="605"/>
   <line l="595"/>
   <line l="504"/>
   <line l="706"/>
   <line l="563"/>
   <line l="485"/>
   <line l="512"/>
   <line l="593"/>
   <line l="524"/>
   <line l="523"/>
   <line l="640"/>
   <line l="684"/>
   <line l="686"/>
   <line l="678"/>
   <line l="467"/>
   <line l="628"/>
   <line l="497"/>
   <line l="699"/>
   <line l="521"/>
   <line l="554"/>
   <line l="483"/>
   <line l="555"/>
   <line l="745"/>
   <line l="533"/>
   <line l="585"/>
   <line l="603"/>
   <line l="712"/>
   <line l="737"/>
   <line l="689"/>
   <line l="619"/>
   <line l="519"/>
   <line l="495"/>
   <line l="638"/>
   <line l="665"/>
   <line l="622"/>
   <line l="732"/>
   <line l="637"/>
   <line l="683"/>
   <line l="625"/>
   <line l="722"/>
   <line l="727"/>
   <line l="560"/>
   <line l="598"/>
   <line l="572"/>
   <line l="520"/>
   <line l="487"/>
   <line l="570"/>
   <line l="489"/>
   <line l="672"/>
   <line l="551"/>
   <line l="516"/>
   <line l="658"/>
   <line l="545"/>
   <line l="493"/>
   <line l="590"/>
   <line l="728"/>
   <line l="573"/>
   <line l="644"/>
   <line l="696"/>
   <line l="654"/>
   <line l="741"/>
   <line l="716"/>
   <line l="574"/>
   <line l="713"/>
   <line l="870"/>
   <line l="799"/>
   <line l="853"/>
   <line l="800"/>
   <line l="766"/>
   <line l="760"/>
   <line l="947"/>
   <line l="969"/>
   <line l="889"/>
   <line l="752"/>
   <line l="958"/>
   <line l="971"/>
   <line l="839"/>
   <line l="747"/>
   <line l="963"/>
   <line l="863"/>
   <line l="954"/>
   <line l="932"/>
   <line l="815"/>
   <line l="756"/>
   <line l="775"/>
   <line l="877"/>
   <line l="751"/>
   <line l="859"/>
   <line l="960"/>
   <line l="777"/>
   <line l="935"/>
   <line l="879"/>
   <line l="968"/>
   <line l="791"/>
   <line l="803"/>
   <line l="757"/>
   <line l="767"/>
   <line l="784"/>
   <line l="901"/>
   <line l="884"/>
   <line l="804"/>
   <line l="933"/>
   <line l="908"/>
   <line l="925"/>
   <line l="758"/>
   <line l="896"/>
   <line l="797"/>
   <line l="786"/>
   <line l="813"/>
   <line l="830"/>
   <line l="833"/>
   <line l="769"/>
   <line l="837"/>
   <line l="885"/>
   <line l="849"/>
   <line l="914"/>
   <line l="834"/>
   <line l="951"/>
   <line l="848"/>
   <line l="924"/>
   <line l="948"/>
   <line l="917"/>
   <line l="976"/>
   <line l="977"/>
   <line l="835"/>
   <line l="765"/>
   <line l="956"/>
   <line l="959"/>
   <line l="779"/>
   <line l="832"/>
   <line l="868"/>
   <line l="825"/>
   <line l="827"/>
   <line l="931"/>
   <line l="773"/>
   <line l="842"/>
   <line l="981"/>
   <line l="844"/>
   <line l="823"/>
   <line l="916"/>
   <line l="836"/>
   <line l="912"/>
   <line l="941"/>
   <line l="950"/>
   <line l="772"/>
   <line l="780"/>
   <line l="945"/>
   <line l="910"/>
   <line l="873"/>
   <line l="939"/>
   <line l="806"/>
   <line l="852"/>
   <line l="955"/>
   <line l="858"/>
   <line l="822"/>
   <line l="876"/>
   <line l="781"/>
   <line l="861"/>
   <line l="903"/>
   <line l="926"/>
   <line l="875"/>
   <line l="880"/>
   <line l="817"/>
   <line l="938"/>
   <line l="944"/>
   <line l="796"/>
   <line l="783"/>
   <line l="966"/>
   <line l="851"/>
   <line l="787"/>
   <line l="811"/>
   <line l="949"/>
   <line l="864"/>
   <line l="899"/>
   <line l="749"/>
   <line l="805"/>
   <line l="978"/>
   <line l="975"/>
   <line l="829"/>
   <line l="770"/>
   <line l="946"/>
   <line l="881"/>
   <line l="828"/>
   <line l="887"/>
   <line l="953"/>
   <line l="929"/>
   <line l="865"/>
   <line l="961"/>
   <line l="802"/>
   <line l="795"/>
   <line l="774"/>
   <line l="763"/>
   <line l="753"/>
   <line l="826"/>
   <line l="810"/>
   <line l="748"/>
   <line l="812"/>
   <line l="909"/>
   <line l="845"/>
   <line l="840"/>
   <line l="789"/>
   <line l="979"/>
   <line l="850"/>
   <line l="894"/>
   <line l="798"/>
   <line l="841"/>
   <line l="913"/>
   <line l="973"/>
   <line l="790"/>
   <line l="905"/>
   <line l="838"/>
   <line l="764"/>
   <line l="974"/>
   <line l="871"/>
   <line l="965"/>
   <line l="759"/>
   <line l="820"/>
   <line l="856"/>
   <line l="902"/>
   <line l="962"/>
   <line l="768"/>
   <line l="843"/>
   <line l="814"/>
   <line l="793"/>
   <line l="967"/>
   <line l="792"/>
   <line l="872"/>
   <line l="867"/>
   <line l="923"/>
   <line l="906"/>
   <line l="794"/>
   <line l="761"/>
   <line l="883"/>
   <line l="750"/>
   <line l="857"/>
   <line l="921"/>
   <line l="788"/>
   <line l="778"/>
   <line l="891"/>
   <line l="919"/>
   <line l="937"/>
   <line l="754"/>
   <line l="776"/>
   <line l="964"/>
   <line l="957"/>
   <line l="942"/>
   <line l="892"/>
   <line l="824"/>
   <line l="855"/>
   <line l="934"/>
   <line l="801"/>
   <line l="927"/>
   <line l="918"/>
   <line l="900"/>
   <line l="862"/>
   <line l="808"/>
   <line l="888"/>
   <line l="980"/>
   <line l="809"/>
   <line l="847"/>
   <line l="816"/>
   <line l="898"/>
   <line l="821"/>
   <line l="878"/>
   <line l="970"/>
   <line l="907"/>
   <line l="771"/>
   <line l="782"/>
   <line l="846"/>
   <line l="936"/>
   <line l="915"/>
   <line l="911"/>
   <line l="860"/>
   <line l="897"/>
   <line l="831"/>
   <line l="943"/>
   <line l="893"/>
   <line l="928"/>
   <line l="869"/>
   <line l="895"/>
   <line l="807"/>
   <line l="940"/>
   <line l="922"/>
   <line l="890"/>
   <line l="818"/>
   <line l="904"/>
   <line l="952"/>
   <line l="762"/>
   <line l="882"/>
   <line l="930"/>
   <line l="819"/>
   <line l="886"/>
   <line l="874"/>
   <line l="920"/>
   <line l="972"/>
   <line l="755"/>
   <line l="785"/>
   <line l="854"/>
   <line l="866"/>
   <line l="2627"/>
   <line l="1423"/>
   <line l="1273"/>
   <line l="1213"/>
   <line l="1847"/>
   <line l="1522"/>
   <line l="1641"/>
   <line l="1059"/>
   <line l="2663"/>
   <line l="1436"/>
   <line l="1506"/>
   <line l="2654"/>
   <line l="984"/>
   <line l="2347"/>
   <line l="1872"/>
   <line l="1894"/>
   <line l="2076"/>
   <line l="2362"/>
   <line l="992"/>
   <line l="1804"/>
   <line l="2395"/>
   <line l="1317"/>
   <line l="1448"/>
   <line l="1659"/>
   <line l="2179"/>
   <line l="1051"/>
   <line l="1918"/>
   <line l="2784"/>
   <line l="2063"/>
   <line l="1108"/>
   <line l="2684"/>
   <line l="2839"/>
   <line l="1783"/>
   <line l="1831"/>
   <line l="1371"/>
   <line l="2425"/>
   <line l="2646"/>
   <line l="1010"/>
   <line l="2687"/>
   <line l="1908"/>
   <line l="1435"/>
   <line l="1008"/>
   <line l="2247"/>
   <line l="2195"/>
   <line l="2764"/>
   <line l="1784"/>
   <line l="2044"/>
   <line l="1199"/>
   <line l="1703"/>
   <line l="2318"/>
   <line l="2317"/>
   <line l="2115"/>
   <line l="1670"/>
   <line l="1576"/>
   <line l="1815"/>
   <line l="2466"/>
   <line l="1296"/>
   <line l="1200"/>
   <line l="2727"/>
   <line l="2459"/>
   <line l="2636"/>
   <line l="2324"/>
   <line l="2438"/>
   <line l="1207"/>
   <line l="2302"/>
   <line l="1624"/>
   <line l="1381"/>
   <line l="2050"/>
   <line l="2335"/>
   <line l="1520"/>
   <line l="1733"/>
   <line l="2371"/>
   <line l="2469"/>
   <line l="1552"/>
   <line l="2188"/>
   <line l="2191"/>
   <line l="1977"/>
   <line l="2678"/>
   <line l="2365"/>
   <line l="2882"/>
   <line l="1020"/>
   <line l="2391"/>
   <line l="2859"/>
   <line l="2567"/>
   <line l="1902"/>
   <line l="2445"/>
   <line l="2632"/>
   <line l="2272"/>
   <line l="1266"/>
   <line l="1415"/>
   <line l="2639"/>
   <line l="1988"/>
   <line l="2066"/>
   <line l="1702"/>
   <line l="2264"/>
   <line l="1346"/>
   <line l="2051"/>
   <line l="2505"/>
   <line l="2575"/>
   <line l="1397"/>
   <line l="1628"/>
   <line l="1912"/>
   <line l="2401"/>
   <line l="2058"/>
   <line l="2275"/>
   <line l="1265"/>
   <line l="2571"/>
   <line l="2427"/>
   <line l="2484"/>
   <line l="2855"/>
   <line l="2549"/>
   <line l="1780"/>
   <line l="990"/>
   <line l="1915"/>
   <line l="1180"/>
   <line l="1414"/>
   <line l="2787"/>
   <line l="2029"/>
   <line l="1287"/>
   <line l="1906"/>
   <line l="1710"/>
   <line l="1014"/>
   <line l="1684"/>
   <line l="2652"/>
   <line l="2472"/>
   <line l="1769"/>
   <line l="1637"/>
   <line l="2897"/>
   <line l="1881"/>
   <line l="1992"/>
   <line l="1932"/>
   <line l="2672"/>
   <line l="2737"/>
   <line l="2378"/>
   <line l="1820"/>
   <line l="2072"/>
   <line l="2422"/>
   <line l="1823"/>
   <line l="2243"/>
   <line l="1050"/>
   <line l="2796"/>
   <line l="1239"/>
   <line l="1232"/>
   <line l="1524"/>
   <line l="2537"/>
   <line l="2752"/>
   <line l="1011"/>
   <line l="2266"/>
   <line l="1088"/>
   <line l="1335"/>
   <line l="1065"/>
   <line l="2670"/>
   <line l="1408"/>
   <line l="1360"/>
   <line l="1096"/>
   <line l="1865"/>
   <line l="1698"/>
   <line l="1280"/>
   <line l="1320"/>
   <line l="2773"/>
   <line l="1304"/>
   <line l="2211"/>
   <line l="1093"/>
   <line l="2848"/>
   <line l="1084"/>
   <line l="2330"/>
   <line l="1987"/>
   <line l="1690"/>
   <line l="2561"/>
   <line l="2679"/>
   <line l="1615"/>
   <line l="1598"/>
   <line l="1179"/>
   <line l="2412"/>
   <line l="2791"/>
   <line l="2042"/>
   <line l="1277"/>
   <line l="2280"/>
   <line l="2797"/>
   <line l="2193"/>
   <line l="1249"/>
   <line l="2816"/>
   <line l="1725"/>
   <line l="2457"/>
   <line l="1830"/>
   <line l="2311"/>
   <line l="1998"/>
   <line l="2823"/>
   <line l="1184"/>
   <line l="2012"/>
   <line l="1470"/>
   <line l="2261"/>
   <line l="2360"/>
   <line l="2030"/>
   <line l="2419"/>
   <line l="1115"/>
   <line l="2880"/>
   <line l="1541"/>
   <line l="1197"/>
   <line l="1310"/>
   <line l="1034"/>
   <line l="2732"/>
   <line l="1191"/>
   <line l="2420"/>
   <line l="1968"/>
   <line l="1294"/>
   <line l="2170"/>
   <line l="1510"/>
   <line l="1306"/>
   <line l="2763"/>
   <line l="1347"/>
   <line l="2130"/>
   <line l="1003"/>
   <line l="1744"/>
   <line l="1581"/>
   <line l="1545"/>
   <line l="2199"/>
   <line l="2270"/>
   <line l="1013"/>
   <line l="1571"/>
   <line l="2415"/>
   <line l="2513"/>
   <line l="2323"/>
   <line l="1224"/>
   <line l="1701"/>
   <line l="2424"/>
   <line l="1240"/>
   <line l="1609"/>
   <line l="1882"/>
   <line l="2782"/>
   <line l="2825"/>
   <line l="2874"/>
   <line l="1709"/>
   <line l="2150"/>
   <line l="1374"/>
   <line l="1110"/>
   <line l="2074"/>
   <line l="2184"/>
   <line l="2444"/>
   <line l="2723"/>
   <line l="1694"/>
   <line l="2547"/>
   <line l="2069"/>
   <line l="1899"/>
   <line l="1969"/>
   <line l="1149"/>
   <line l="1760"/>
   <line l="1914"/>
   <line l="1781"/>
   <line l="1228"/>
   <line l="2624"/>
   <line l="1963"/>
   <line l="1092"/>
   <line l="1127"/>
   <line l="2558"/>
   <line l="2738"/>
   <line l="2163"/>
   <line l="1183"/>
   <line l="2364"/>
   <line l="1368"/>
   <line l="2390"/>
   <line l="1860"/>
   <line l="2613"/>
   <line l="1012"/>
   <line l="2056"/>
   <line l="1298"/>
   <line l="1603"/>
   <line l="2236"/>
   <line l="2509"/>
   <line l="2582"/>
   <line l="2696"/>
   <line l="1375"/>
   <line l="2535"/>
   <line l="1626"/>
   <line l="2400"/>
   <line l="1802"/>
   <line l="2078"/>
   <line l="1669"/>
   <line l="1885"/>
   <line l="2452"/>
   <line l="1248"/>
   <line l="1640"/>
   <line l="1606"/>
   <line l="2404"/>
   <line l="1182"/>
   <line l="2776"/>
   <line l="2208"/>
   <line l="2322"/>
   <line l="2325"/>
   <line l="1403"/>
   <line l="1024"/>
   <line l="1174"/>
   <line l="1614"/>
   <line l="1081"/>
   <line l="2616"/>
   <line l="2342"/>
   <line l="2878"/>
   <line l="2296"/>
   <line l="2751"/>
   <line l="1160"/>
   <line l="2359"/>
   <line l="2182"/>
   <line l="2883"/>
   <line l="1395"/>
   <line l="1558"/>
   <line l="2200"/>
   <line l="1819"/>
   <line l="1303"/>
   <line l="2813"/>
   <line l="1119"/>
   <line l="2507"/>
   <line l="1835"/>
   <line l="1102"/>
   <line l="1937"/>
   <line l="2117"/>
   <line l="1647"/>
   <line l="1720"/>
   <line l="2583"/>
   <line l="1387"/>
   <line l="2501"/>
   <line l="2304"/>
   <line l="2657"/>
   <line l="2516"/>
   <line l="1338"/>
   <line l="1227"/>
   <line l="2103"/>
   <line l="1432"/>
   <line l="2351"/>
   <line l="2734"/>
   <line l="1086"/>
   <line l="1002"/>
   <line l="2609"/>
   <line l="2500"/>
   <line l="2034"/>
   <line l="1771"/>
   <line l="2334"/>
   <line l="1364"/>
   <line l="2018"/>
   <line l="2155"/>
   <line l="1458"/>
   <line l="1699"/>
   <line l="2471"/>
   <line l="2038"/>
   <line l="2691"/>
   <line l="1394"/>
   <line l="1196"/>
   <line l="2369"/>
   <line l="2328"/>
   <line l="1301"/>
   <line l="1171"/>
   <line l="2508"/>
   <line l="1955"/>
   <line l="2065"/>
   <line l="1491"/>
   <line l="1023"/>
   <line l="1730"/>
   <line l="1465"/>
   <line l="1530"/>
   <line l="2159"/>
   <line l="2168"/>
   <line l="2361"/>
   <line l="1833"/>
   <line l="2234"/>
   <line l="1745"/>
   <line l="2006"/>
   <line l="1461"/>
   <line l="2136"/>
   <line l="1393"/>
   <line l="1787"/>
   <line l="1176"/>
   <line l="2633"/>
   <line l="2818"/>
   <line l="1143"/>
   <line l="2664"/>
   <line l="1281"/>
   <line l="2856"/>
   <line l="1686"/>
   <line l="1966"/>
   <line l="1216"/>
   <line l="2857"/>
   <line l="993"/>
   <line l="2454"/>
   <line l="2714"/>
   <line l="1717"/>
   <line l="2068"/>
   <line l="1839"/>
   <line l="1792"/>
   <line l="1809"/>
   <line l="1027"/>
   <line l="1999"/>
   <line l="1768"/>
   <line l="1887"/>
   <line l="1456"/>
   <line l="1793"/>
   <line l="2394"/>
   <line l="2340"/>
   <line l="2197"/>
   <line l="1492"/>
   <line l="1474"/>
   <line l="2281"/>
   <line l="1098"/>
   <line l="1431"/>
   <line l="1061"/>
   <line l="2370"/>
   <line l="1331"/>
   <line l="1259"/>
   <line l="2579"/>
   <line l="2402"/>
   <line l="1035"/>
   <line l="2286"/>
   <line l="1693"/>
   <line l="1575"/>
   <line l="1594"/>
   <line l="2485"/>
   <line l="2363"/>
   <line l="1373"/>
   <line l="1560"/>
   <line l="1754"/>
   <line l="2408"/>
   <line l="2695"/>
   <line l="1223"/>
   <line l="1952"/>
   <line l="1426"/>
   <line l="1689"/>
   <line l="2623"/>
   <line l="2414"/>
   <line l="1849"/>
   <line l="2829"/>
   <line l="1356"/>
   <line l="1231"/>
   <line l="1538"/>
   <line l="2742"/>
   <line l="2868"/>
   <line l="1326"/>
   <line l="2099"/>
   <line l="1954"/>
   <line l="1775"/>
   <line l="1736"/>
   <line l="1825"/>
   <line l="2226"/>
   <line l="2720"/>
   <line l="2041"/>
   <line l="1237"/>
   <line l="2841"/>
   <line l="2541"/>
   <line l="2850"/>
   <line l="1311"/>
   <line l="1675"/>
   <line l="2810"/>
   <line l="1404"/>
   <line l="1467"/>
   <line l="1262"/>
   <line l="2702"/>
   <line l="2268"/>
   <line l="1916"/>
   <line l="2158"/>
   <line l="1292"/>
   <line l="2498"/>
   <line l="1616"/>
   <line l="2488"/>
   <line l="1868"/>
   <line l="2475"/>
   <line l="2277"/>
   <line l="2762"/>
   <line l="1001"/>
   <line l="2540"/>
   <line l="2043"/>
   <line l="1953"/>
   <line l="2759"/>
   <line l="1870"/>
   <line l="2758"/>
   <line l="1900"/>
   <line l="2175"/>
   <line l="2376"/>
   <line l="1359"/>
   <line l="1658"/>
   <line l="1978"/>
   <line l="2450"/>
   <line l="2852"/>
   <line l="1939"/>
   <line l="1645"/>
   <line l="2708"/>
   <line l="2108"/>
   <line l="1343"/>
   <line l="2565"/>
   <line l="2608"/>
   <line l="1827"/>
   <line l="1137"/>
   <line l="1203"/>
   <line l="1756"/>
   <line l="1198"/>
   <line l="2586"/>
   <line l="991"/>
   <line l="1621"/>
   <line l="2085"/>
   <line l="1070"/>
   <line l="1425"/>
   <line l="1238"/>
   <line l="1746"/>
   <line l="1466"/>
   <line l="1836"/>
   <line l="1778"/>
   <line l="1739"/>
   <line l="2294"/>
   <line l="1871"/>
   <line l="2303"/>
   <line l="1495"/>
   <line l="1241"/>
   <line l="1525"/>
   <line l="1043"/>
   <line l="1586"/>
   <line l="2526"/>
   <line l="1923"/>
   <line l="2544"/>
   <line l="1845"/>
   <line l="2139"/>
   <line l="2804"/>
   <line l="1399"/>
   <line l="2525"/>
   <line l="2688"/>
   <line l="1337"/>
   <line l="2628"/>
   <line l="2241"/>
   <line l="2228"/>
   <line l="1363"/>
   <line l="2587"/>
   <line l="1498"/>
   <line l="2711"/>
   <line l="2543"/>
   <line l="2476"/>
   <line l="2071"/>
   <line l="2707"/>
   <line l="1038"/>
   <line l="2431"/>
   <line l="1766"/>
   <line l="1302"/>
   <line l="1041"/>
   <line l="2574"/>
   <line l="1559"/>
   <line l="2143"/>
   <line l="1063"/>
   <line l="2749"/>
   <line l="1529"/>
   <line l="1170"/>
   <line l="1321"/>
   <line l="2704"/>
   <line l="1353"/>
   <line l="2249"/>
   <line l="1230"/>
   <line l="1048"/>
   <line l="1561"/>
   <line l="2836"/>
   <line l="1251"/>
   <line l="2790"/>
   <line l="1053"/>
   <line l="1696"/>
   <line l="2386"/>
   <line l="2393"/>
   <line l="2563"/>
   <line l="2671"/>
   <line l="1779"/>
   <line l="2101"/>
   <line l="2783"/>
   <line l="1550"/>
   <line l="1233"/>
   <line l="1731"/>
   <line l="2088"/>
   <line l="1790"/>
   <line l="2892"/>
   <line l="1489"/>
   <line l="2291"/>
   <line l="2802"/>
   <line l="1192"/>
   <line l="1133"/>
   <line l="1673"/>
   <line l="1288"/>
   <line l="2603"/>
   <line l="1486"/>
   <line l="1996"/>
   <line l="2356"/>
   <line l="1209"/>
   <line l="2104"/>
   <line l="2033"/>
   <line l="985"/>
   <line l="2692"/>
   <line l="1742"/>
   <line l="1944"/>
   <line l="1005"/>
   <line l="1327"/>
   <line l="2591"/>
   <line l="2230"/>
   <line l="1339"/>
   <line l="2321"/>
   <line l="1917"/>
   <line l="2048"/>
   <line l="1111"/>
   <line l="1623"/>
   <line l="2888"/>
   <line l="1129"/>
   <line l="2653"/>
   <line l="1482"/>
   <line l="2827"/>
   <line l="1274"/>
   <line l="1411"/>
   <line l="1532"/>
   <line l="2693"/>
   <line l="2447"/>
   <line l="1587"/>
   <line l="2225"/>
   <line l="2871"/>
   <line l="1776"/>
   <line l="1964"/>
   <line l="2809"/>
   <line l="1755"/>
   <line l="2845"/>
   <line l="1366"/>
   <line l="1958"/>
   <line l="1424"/>
   <line l="2842"/>
   <line l="2288"/>
   <line l="1168"/>
   <line l="2681"/>
   <line l="2866"/>
   <line l="2421"/>
   <line l="1101"/>
   <line l="2300"/>
   <line l="2449"/>
   <line l="1671"/>
   <line l="2105"/>
   <line l="1362"/>
   <line l="1625"/>
   <line l="1777"/>
   <line l="1068"/>
   <line l="2725"/>
   <line l="2834"/>
   <line l="1747"/>
   <line l="1447"/>
   <line l="1935"/>
   <line l="2607"/>
   <line l="1876"/>
   <line l="1578"/>
   <line l="1383"/>
   <line l="2252"/>
   <line l="2455"/>
   <line l="1099"/>
   <line l="2209"/>
   <line l="1058"/>
   <line l="2112"/>
   <line l="1834"/>
   <line l="2355"/>
   <line l="2067"/>
   <line l="2320"/>
   <line l="1913"/>
   <line l="2792"/>
   <line l="2372"/>
   <line l="1105"/>
   <line l="2232"/>
   <line l="1884"/>
   <line l="2337"/>
   <line l="1236"/>
   <line l="2113"/>
   <line l="2474"/>
   <line l="2235"/>
   <line l="1796"/>
   <line l="1962"/>
   <line l="1579"/>
   <line l="1588"/>
   <line l="1838"/>
   <line l="2008"/>
   <line l="1455"/>
   <line l="1114"/>
   <line l="2559"/>
   <line l="2870"/>
   <line l="1064"/>
   <line l="1060"/>
   <line l="2589"/>
   <line l="2492"/>
   <line l="2772"/>
   <line l="1219"/>
   <line l="2786"/>
   <line l="1480"/>
   <line l="2853"/>
   <line l="1985"/>
   <line l="1113"/>
   <line l="1040"/>
   <line l="1187"/>
   <line l="1716"/>
   <line l="2295"/>
   <line l="1234"/>
   <line l="1328"/>
   <line l="2677"/>
   <line l="2722"/>
   <line l="2465"/>
   <line l="1981"/>
   <line l="2134"/>
   <line l="2801"/>
   <line l="1109"/>
   <line l="2406"/>
   <line l="2517"/>
   <line l="2849"/>
   <line l="2293"/>
   <line l="1072"/>
   <line l="1252"/>
   <line l="1004"/>
   <line l="2748"/>
   <line l="2166"/>
   <line l="2173"/>
   <line l="1015"/>
   <line l="2592"/>
   <line l="2659"/>
   <line l="2126"/>
   <line l="1419"/>
   <line l="2799"/>
   <line l="1946"/>
   <line l="2265"/>
   <line l="1106"/>
   <line l="1172"/>
   <line l="2054"/>
   <line l="1344"/>
   <line l="1994"/>
   <line l="2453"/>
   <line l="1665"/>
   <line l="1644"/>
   <line l="2495"/>
   <line l="2220"/>
   <line l="1382"/>
   <line l="2407"/>
   <line l="1925"/>
   <line l="2349"/>
   <line l="1208"/>
   <line l="2635"/>
   <line l="1590"/>
   <line l="1221"/>
   <line l="2409"/>
   <line l="1805"/>
   <line l="1483"/>
   <line l="1379"/>
   <line l="1705"/>
   <line l="2666"/>
   <line l="2229"/>
   <line l="2637"/>
   <line l="2588"/>
   <line l="1471"/>
   <line l="2621"/>
   <line l="1544"/>
   <line l="1357"/>
   <line l="1864"/>
   <line l="2615"/>
   <line l="2405"/>
   <line l="1460"/>
   <line l="1719"/>
   <line l="2019"/>
   <line l="1903"/>
   <line l="2703"/>
   <line l="1549"/>
   <line l="1500"/>
   <line l="2186"/>
   <line l="2536"/>
   <line l="1677"/>
   <line l="1700"/>
   <line l="1388"/>
   <line l="1883"/>
   <line l="2092"/>
   <line l="2872"/>
   <line l="1049"/>
   <line l="1507"/>
   <line l="2005"/>
   <line l="2114"/>
   <line l="1402"/>
   <line l="1540"/>
   <line l="2392"/>
   <line l="1446"/>
   <line l="1749"/>
   <line l="2847"/>
   <line l="1077"/>
   <line l="1159"/>
   <line l="1782"/>
   <line l="1488"/>
   <line l="988"/>
   <line l="1150"/>
   <line l="2157"/>
   <line l="1613"/>
   <line l="1186"/>
   <line l="2084"/>
   <line l="1314"/>
   <line l="2441"/>
   <line l="1533"/>
   <line l="2573"/>
   <line l="2819"/>
   <line l="1297"/>
   <line l="2373"/>
   <line l="1390"/>
   <line l="1797"/>
   <line l="2031"/>
   <line l="2256"/>
   <line l="2015"/>
   <line l="2605"/>
   <line l="2519"/>
   <line l="1816"/>
   <line l="2026"/>
   <line l="1175"/>
   <line l="2298"/>
   <line l="1687"/>
   <line l="1826"/>
   <line l="2464"/>
   <line l="2743"/>
   <line l="1712"/>
   <line l="2152"/>
   <line l="1539"/>
   <line l="2141"/>
   <line l="2873"/>
   <line l="1416"/>
   <line l="1152"/>
   <line l="2754"/>
   <line l="1600"/>
   <line l="1479"/>
   <line l="2770"/>
   <line l="1372"/>
   <line l="1457"/>
   <line l="1751"/>
   <line l="1080"/>
   <line l="2083"/>
   <line l="1983"/>
   <line l="1329"/>
   <line l="1158"/>
   <line l="1646"/>
   <line l="2430"/>
   <line l="1569"/>
   <line l="1283"/>
   <line l="2119"/>
   <line l="2435"/>
   <line l="1089"/>
   <line l="1841"/>
   <line l="1807"/>
   <line l="2432"/>
   <line l="2596"/>
   <line l="2284"/>
   <line l="1851"/>
   <line l="2375"/>
   <line l="1275"/>
   <line l="1508"/>
   <line l="1639"/>
   <line l="2456"/>
   <line l="1967"/>
   <line l="2467"/>
   <line l="1975"/>
   <line l="1451"/>
   <line l="1738"/>
   <line l="2167"/>
   <line l="2381"/>
   <line l="2377"/>
   <line l="1421"/>
   <line l="2683"/>
   <line l="1345"/>
   <line l="2548"/>
   <line l="1148"/>
   <line l="2077"/>
   <line l="1134"/>
   <line l="1392"/>
   <line l="1396"/>
   <line l="1597"/>
   <line l="1772"/>
   <line l="982"/>
   <line l="1795"/>
   <line l="1806"/>
   <line l="2014"/>
   <line l="2212"/>
   <line l="2491"/>
   <line l="1497"/>
   <line l="1156"/>
   <line l="1341"/>
   <line l="2306"/>
   <line l="1361"/>
   <line l="1293"/>
   <line l="983"/>
   <line l="2490"/>
   <line l="2689"/>
   <line l="1250"/>
   <line l="2107"/>
   <line l="1493"/>
   <line l="1543"/>
   <line l="2515"/>
   <line l="2510"/>
   <line l="1138"/>
   <line l="2494"/>
   <line l="2198"/>
   <line l="1405"/>
   <line l="2133"/>
   <line l="2080"/>
   <line l="1610"/>
   <line l="1422"/>
   <line l="1821"/>
   <line l="2682"/>
   <line l="1056"/>
   <line l="2560"/>
   <line l="1429"/>
   <line l="2497"/>
   <line l="2057"/>
   <line l="2555"/>
   <line l="1989"/>
   <line l="2595"/>
   <line l="2087"/>
   <line l="1066"/>
   <line l="2171"/>
   <line l="2121"/>
   <line l="1021"/>
   <line l="1439"/>
   <line l="1759"/>
   <line l="2096"/>
   <line l="1442"/>
   <line l="2151"/>
   <line l="1859"/>
   <line l="1858"/>
   <line l="1334"/>
   <line l="1786"/>
   <line l="1194"/>
   <line l="1282"/>
   <line l="1527"/>
   <line l="2331"/>
   <line l="1284"/>
   <line l="2675"/>
   <line l="2146"/>
   <line l="1546"/>
   <line l="2307"/>
   <line l="2473"/>
   <line l="1888"/>
   <line l="1044"/>
   <line l="2545"/>
   <line l="1121"/>
   <line l="2062"/>
   <line l="1313"/>
   <line l="1593"/>
   <line l="1774"/>
   <line l="2775"/>
   <line l="1380"/>
   <line l="1120"/>
   <line l="1452"/>
   <line l="2357"/>
   <line l="1369"/>
   <line l="1789"/>
   <line l="1697"/>
   <line l="2013"/>
   <line l="1146"/>
   <line l="2263"/>
   <line l="2564"/>
   <line l="2788"/>
   <line l="2622"/>
   <line l="2746"/>
   <line l="2680"/>
   <line l="1526"/>
   <line l="989"/>
   <line l="1862"/>
   <line l="2007"/>
   <line l="1907"/>
   <line l="2221"/>
   <line l="1750"/>
   <line l="1243"/>
   <line l="2009"/>
   <line l="1655"/>
   <line l="1663"/>
   <line l="1801"/>
   <line l="2064"/>
   <line l="1928"/>
   <line l="2219"/>
   <line l="1512"/>
   <line l="1752"/>
   <line l="2223"/>
   <line l="1997"/>
   <line l="1938"/>
   <line l="1226"/>
   <line l="1069"/>
   <line l="1509"/>
   <line l="1454"/>
   <line l="1832"/>
   <line l="2618"/>
   <line l="1984"/>
   <line l="1478"/>
   <line l="2267"/>
   <line l="1258"/>
   <line l="1342"/>
   <line l="2828"/>
   <line l="2095"/>
   <line l="1305"/>
   <line l="2578"/>
   <line l="1555"/>
   <line l="2676"/>
   <line l="2667"/>
   <line l="2533"/>
   <line l="2224"/>
   <line l="2204"/>
   <line l="2274"/>
   <line l="1517"/>
   <line l="1891"/>
   <line l="2576"/>
   <line l="2180"/>
   <line l="2865"/>
   <line l="1000"/>
   <line l="2089"/>
   <line l="1667"/>
   <line l="1683"/>
   <line l="2553"/>
   <line l="2164"/>
   <line l="2686"/>
   <line l="1632"/>
   <line l="2529"/>
   <line l="1837"/>
   <line l="2644"/>
   <line l="2885"/>
   <line l="2210"/>
   <line l="2481"/>
   <line l="1420"/>
   <line l="2120"/>
   <line l="1254"/>
   <line l="1740"/>
   <line l="2312"/>
   <line l="1165"/>
   <line l="1290"/>
   <line l="1260"/>
   <line l="1995"/>
   <line l="2001"/>
   <line l="2336"/>
   <line l="2524"/>
   <line l="1631"/>
   <line l="1173"/>
   <line l="2206"/>
   <line l="2837"/>
   <line l="2032"/>
   <line l="2861"/>
   <line l="2140"/>
   <line l="1799"/>
   <line l="1271"/>
   <line l="1678"/>
   <line l="1653"/>
   <line l="2022"/>
   <line l="2053"/>
   <line l="1852"/>
   <line l="1692"/>
   <line l="2824"/>
   <line l="1257"/>
   <line l="2461"/>
   <line l="1732"/>
   <line l="1986"/>
   <line l="2864"/>
   <line l="2125"/>
   <line l="1943"/>
   <line l="2750"/>
   <line l="2443"/>
   <line l="1332"/>
   <line l="1319"/>
   <line l="2399"/>
   <line l="1554"/>
   <line l="1324"/>
   <line l="2496"/>
   <line l="2640"/>
   <line l="1142"/>
   <line l="1247"/>
   <line l="2260"/>
   <line l="1551"/>
   <line l="1300"/>
   <line l="1762"/>
   <line l="2655"/>
   <line l="986"/>
   <line l="2593"/>
   <line l="2052"/>
   <line l="1662"/>
   <line l="2844"/>
   <line l="2185"/>
   <line l="1218"/>
   <line l="2780"/>
   <line l="2701"/>
   <line l="2807"/>
   <line l="2697"/>
   <line l="2566"/>
   <line l="1672"/>
   <line l="2730"/>
   <line l="2470"/>
   <line l="2634"/>
   <line l="1078"/>
   <line l="1185"/>
   <line l="1487"/>
   <line l="2830"/>
   <line l="2590"/>
   <line l="2144"/>
   <line l="2201"/>
   <line l="2137"/>
   <line l="987"/>
   <line l="2690"/>
   <line l="2383"/>
   <line l="1006"/>
   <line l="2437"/>
   <line l="2514"/>
   <line l="1215"/>
   <line l="1753"/>
   <line l="1154"/>
   <line l="1848"/>
   <line l="1660"/>
   <line l="2602"/>
   <line l="2771"/>
   <line l="2348"/>
   <line l="2851"/>
   <line l="1942"/>
   <line l="1843"/>
   <line l="1607"/>
   <line l="1445"/>
   <line l="1153"/>
   <line l="1212"/>
   <line l="2213"/>
   <line l="1688"/>
   <line l="1599"/>
   <line l="1857"/>
   <line l="1708"/>
   <line l="1869"/>
   <line l="1557"/>
   <line l="1748"/>
   <line l="1812"/>
   <line l="2203"/>
   <line l="1352"/>
   <line l="1950"/>
   <line l="2132"/>
   <line l="1087"/>
   <line l="2037"/>
   <line l="1067"/>
   <line l="1635"/>
   <line l="2205"/>
   <line l="2178"/>
   <line l="2854"/>
   <line l="1974"/>
   <line l="2641"/>
   <line l="2118"/>
   <line l="1118"/>
   <line l="1566"/>
   <line l="1636"/>
   <line l="1909"/>
   <line l="2626"/>
   <line l="2768"/>
   <line l="1462"/>
   <line l="1691"/>
   <line l="2489"/>
   <line l="2131"/>
   <line l="2717"/>
   <line l="1536"/>
   <line l="1272"/>
   <line l="1855"/>
   <line l="2367"/>
   <line l="1706"/>
   <line l="2165"/>
   <line l="2660"/>
   <line l="1161"/>
   <line l="2244"/>
   <line l="2358"/>
   <line l="2436"/>
   <line l="1279"/>
   <line l="1601"/>
   <line l="2081"/>
   <line l="997"/>
   <line l="2755"/>
   <line l="1595"/>
   <line l="1574"/>
   <line l="1904"/>
   <line l="1866"/>
   <line l="1028"/>
   <line l="2531"/>
   <line l="2109"/>
   <line l="1046"/>
   <line l="1951"/>
   <line l="1933"/>
   <line l="2597"/>
   <line l="1666"/>
   <line l="1412"/>
   <line l="1813"/>
   <line l="2160"/>
   <line l="1130"/>
   <line l="1930"/>
   <line l="1990"/>
   <line l="2518"/>
   <line l="1856"/>
   <line l="1214"/>
   <line l="2254"/>
   <line l="1685"/>
   <line l="1562"/>
   <line l="2162"/>
   <line l="1592"/>
   <line l="2259"/>
   <line l="1117"/>
   <line l="2237"/>
   <line l="2388"/>
   <line l="2231"/>
   <line l="2840"/>
   <line l="2719"/>
   <line l="2862"/>
   <line l="2458"/>
   <line l="1036"/>
   <line l="1889"/>
   <line l="2705"/>
   <line l="1189"/>
   <line l="2061"/>
   <line l="1418"/>
   <line l="2821"/>
   <line l="1668"/>
   <line l="1818"/>
   <line l="1229"/>
   <line l="2706"/>
   <line l="2326"/>
   <line l="1584"/>
   <line l="2766"/>
   <line l="1289"/>
   <line l="1528"/>
   <line l="2890"/>
   <line l="2740"/>
   <line l="2313"/>
   <line l="2216"/>
   <line l="1082"/>
   <line l="2522"/>
   <line l="1976"/>
   <line l="1682"/>
   <line l="1503"/>
   <line l="1095"/>
   <line l="1972"/>
   <line l="2789"/>
   <line l="2214"/>
   <line l="1157"/>
   <line l="1767"/>
   <line l="2011"/>
   <line l="2468"/>
   <line l="1410"/>
   <line l="1518"/>
   <line l="1123"/>
   <line l="2713"/>
   <line l="1409"/>
   <line l="1016"/>
   <line l="2760"/>
   <line l="1515"/>
   <line l="2215"/>
   <line l="2308"/>
   <line l="1055"/>
   <line l="1791"/>
   <line l="2073"/>
   <line l="2769"/>
   <line l="1971"/>
   <line l="2315"/>
   <line l="1031"/>
   <line l="1657"/>
   <line l="2568"/>
   <line l="2127"/>
   <line l="1472"/>
   <line l="1145"/>
   <line l="1808"/>
   <line l="2079"/>
   <line l="1511"/>
   <line l="2398"/>
   <line l="1514"/>
   <line l="1358"/>
   <line l="1385"/>
   <line l="1695"/>
   <line l="2174"/>
   <line l="1104"/>
   <line l="2610"/>
   <line l="1440"/>
   <line l="1029"/>
   <line l="2181"/>
   <line l="2581"/>
   <line l="2893"/>
   <line l="2040"/>
   <line l="2385"/>
   <line l="1177"/>
   <line l="1924"/>
   <line l="2387"/>
   <line l="2036"/>
   <line l="1521"/>
   <line l="2669"/>
   <line l="2442"/>
   <line l="2833"/>
   <line l="2253"/>
   <line l="1707"/>
   <line l="1017"/>
   <line l="1057"/>
   <line l="1735"/>
   <line l="1124"/>
   <line l="2612"/>
   <line l="1948"/>
   <line l="2094"/>
   <line l="1026"/>
   <line l="1567"/>
   <line l="2712"/>
   <line l="1608"/>
   <line l="2106"/>
   <line l="2187"/>
   <line l="2003"/>
   <line l="1893"/>
   <line l="2227"/>
   <line l="1622"/>
   <line l="2668"/>
   <line l="2817"/>
   <line l="2530"/>
   <line l="1680"/>
   <line l="1643"/>
   <line l="2604"/>
   <line l="1210"/>
   <line l="1619"/>
   <line l="1846"/>
   <line l="2396"/>
   <line l="1949"/>
   <line l="2881"/>
   <line l="1074"/>
   <line l="2439"/>
   <line l="2097"/>
   <line l="1591"/>
   <line l="2891"/>
   <line l="2176"/>
   <line l="1355"/>
   <line l="2070"/>
   <line l="1323"/>
   <line l="1132"/>
   <line l="2630"/>
   <line l="1523"/>
   <line l="2551"/>
   <line l="2620"/>
   <line l="1318"/>
   <line l="2661"/>
   <line l="1501"/>
   <line l="1568"/>
   <line l="2879"/>
   <line l="1376"/>
   <line l="2462"/>
   <line l="1970"/>
   <line l="1039"/>
   <line l="2503"/>
   <line l="1605"/>
   <line l="1178"/>
   <line l="1400"/>
   <line l="1901"/>
   <line l="2075"/>
   <line l="1602"/>
   <line l="2428"/>
   <line l="1112"/>
   <line l="2846"/>
   <line l="1880"/>
   <line l="1351"/>
   <line l="1911"/>
   <line l="2410"/>
   <line l="2538"/>
   <line l="2319"/>
   <line l="2218"/>
   <line l="2086"/>
   <line l="1800"/>
   <line l="2025"/>
   <line l="2774"/>
   <line l="2700"/>
   <line l="2757"/>
   <line l="1438"/>
   <line l="2606"/>
   <line l="2814"/>
   <line l="1407"/>
   <line l="1206"/>
   <line l="1365"/>
   <line l="2098"/>
   <line l="1896"/>
   <line l="1979"/>
   <line l="2546"/>
   <line l="2478"/>
   <line l="2580"/>
   <line l="2271"/>
   <line l="1401"/>
   <line l="2153"/>
   <line l="2327"/>
   <line l="2354"/>
   <line l="2731"/>
   <line l="2694"/>
   <line l="2269"/>
   <line l="1144"/>
   <line l="2021"/>
   <line l="2794"/>
   <line l="1814"/>
   <line l="2309"/>
   <line l="2724"/>
   <line l="1128"/>
   <line l="1434"/>
   <line l="1075"/>
   <line l="2110"/>
   <line l="1919"/>
   <line l="1450"/>
   <line l="1650"/>
   <line l="1898"/>
   <line l="2429"/>
   <line l="2744"/>
   <line l="2739"/>
   <line l="1377"/>
   <line l="2625"/>
   <line l="2426"/>
   <line l="2122"/>
   <line l="1464"/>
   <line l="1417"/>
   <line l="1563"/>
   <line l="2016"/>
   <line l="2822"/>
   <line l="2585"/>
   <line l="2745"/>
   <line l="1878"/>
   <line l="1453"/>
   <line l="1398"/>
   <line l="2798"/>
   <line l="1307"/>
   <line l="2202"/>
   <line l="2815"/>
   <line l="2023"/>
   <line l="1824"/>
   <line l="1477"/>
   <line l="1340"/>
   <line l="2290"/>
   <line l="1553"/>
   <line l="2332"/>
   <line l="2550"/>
   <line l="2045"/>
   <line l="1895"/>
   <line l="2785"/>
   <line l="1890"/>
   <line l="2781"/>
   <line l="2082"/>
   <line l="2382"/>
   <line l="2600"/>
   <line l="2800"/>
   <line l="1651"/>
   <line l="2093"/>
   <line l="1649"/>
   <line l="2055"/>
   <line l="2279"/>
   <line l="2523"/>
   <line l="2838"/>
   <line l="2397"/>
   <line l="2004"/>
   <line l="2246"/>
   <line l="1676"/>
   <line l="1758"/>
   <line l="1349"/>
   <line l="2353"/>
   <line l="1325"/>
   <line l="1151"/>
   <line l="2135"/>
   <line l="1315"/>
   <line l="1312"/>
   <line l="2148"/>
   <line l="2733"/>
   <line l="1220"/>
   <line l="1572"/>
   <line l="1798"/>
   <line l="2278"/>
   <line l="2820"/>
   <line l="2344"/>
   <line l="1638"/>
   <line l="2793"/>
   <line l="2875"/>
   <line l="1391"/>
   <line l="1773"/>
   <line l="2877"/>
   <line l="1166"/>
   <line l="1136"/>
   <line l="1604"/>
   <line l="1100"/>
   <line l="2806"/>
   <line l="1091"/>
   <line l="1504"/>
   <line l="2248"/>
   <line l="1921"/>
   <line l="2161"/>
   <line l="1854"/>
   <line l="1330"/>
   <line l="2753"/>
   <line l="1947"/>
   <line l="1484"/>
   <line l="1122"/>
   <line l="1959"/>
   <line l="1785"/>
   <line l="1413"/>
   <line l="1642"/>
   <line l="1270"/>
   <line l="1022"/>
   <line l="1743"/>
   <line l="1757"/>
   <line l="1920"/>
   <line l="2100"/>
   <line l="1441"/>
   <line l="2811"/>
   <line l="1222"/>
   <line l="2111"/>
   <line l="1886"/>
   <line l="1350"/>
   <line l="2826"/>
   <line l="2346"/>
   <line l="1910"/>
   <line l="1490"/>
   <line l="2832"/>
   <line l="2715"/>
   <line l="2196"/>
   <line l="1384"/>
   <line l="2207"/>
   <line l="1840"/>
   <line l="1052"/>
   <line l="2482"/>
   <line l="1443"/>
   <line l="2010"/>
   <line l="1090"/>
   <line l="2598"/>
   <line l="2149"/>
   <line l="2863"/>
   <line l="2843"/>
   <line l="2803"/>
   <line l="2504"/>
   <line l="2747"/>
   <line l="2233"/>
   <line l="2552"/>
   <line l="1945"/>
   <line l="1205"/>
   <line l="2614"/>
   <line l="2217"/>
   <line l="2795"/>
   <line l="1201"/>
   <line l="1097"/>
   <line l="1630"/>
   <line l="2262"/>
   <line l="2735"/>
   <line l="1062"/>
   <line l="1664"/>
   <line l="1494"/>
   <line l="2534"/>
   <line l="1922"/>
   <line l="2718"/>
   <line l="1367"/>
   <line l="1042"/>
   <line l="2339"/>
   <line l="2647"/>
   <line l="1724"/>
   <line l="2190"/>
   <line l="1308"/>
   <line l="1444"/>
   <line l="998"/>
   <line l="2177"/>
   <line l="2556"/>
   <line l="1244"/>
   <line l="2716"/>
   <line l="1009"/>
   <line l="2617"/>
   <line l="2258"/>
   <line l="2102"/>
   <line l="2222"/>
   <line l="1534"/>
   <line l="1761"/>
   <line l="1934"/>
   <line l="2389"/>
   <line l="2257"/>
   <line l="1261"/>
   <line l="1253"/>
   <line l="1516"/>
   <line l="1737"/>
   <line l="2506"/>
   <line l="2316"/>
   <line l="1333"/>
   <line l="1714"/>
   <line l="2017"/>
   <line l="1263"/>
   <line l="1242"/>
   <line l="1386"/>
   <line l="1811"/>
   <line l="2728"/>
   <line l="2499"/>
   <line l="2486"/>
   <line l="1079"/>
   <line l="1007"/>
   <line l="1370"/>
   <line l="1803"/>
   <line l="2301"/>
   <line l="2812"/>
   <line l="1316"/>
   <line l="2142"/>
   <line l="1991"/>
   <line l="2487"/>
   <line l="1033"/>
   <line l="1083"/>
   <line l="2835"/>
   <line l="2521"/>
   <line l="1585"/>
   <line l="1564"/>
   <line l="1019"/>
   <line l="1828"/>
   <line l="2145"/>
   <line l="1499"/>
   <line l="2384"/>
   <line l="2483"/>
   <line l="1502"/>
   <line l="1842"/>
   <line l="2169"/>
   <line l="1960"/>
   <line l="1633"/>
   <line l="1727"/>
   <line l="1861"/>
   <line l="1741"/>
   <line l="1734"/>
   <line l="2721"/>
   <line l="2039"/>
   <line l="2240"/>
   <line l="2779"/>
   <line l="1973"/>
   <line l="1309"/>
   <line l="2520"/>
   <line l="1596"/>
   <line l="1430"/>
   <line l="1936"/>
   <line l="2440"/>
   <line l="1449"/>
   <line l="2287"/>
   <line l="2379"/>
   <line l="2028"/>
   <line l="2894"/>
   <line l="1141"/>
   <line l="2343"/>
   <line l="2024"/>
   <line l="2091"/>
   <line l="1030"/>
   <line l="1704"/>
   <line l="2645"/>
   <line l="2699"/>
   <line l="2192"/>
   <line l="1822"/>
   <line l="1256"/>
   <line l="1905"/>
   <line l="2451"/>
   <line l="2651"/>
   <line l="1674"/>
   <line l="1681"/>
   <line l="1276"/>
   <line l="2808"/>
   <line l="2059"/>
   <line l="1076"/>
   <line l="1892"/>
   <line l="1850"/>
   <line l="1139"/>
   <line l="1299"/>
   <line l="2350"/>
   <line l="2869"/>
   <line l="2255"/>
   <line l="1322"/>
   <line l="2250"/>
   <line l="994"/>
   <line l="1469"/>
   <line l="1428"/>
   <line l="995"/>
   <line l="1037"/>
   <line l="1570"/>
   <line l="996"/>
   <line l="1354"/>
   <line l="1612"/>
   <line l="1634"/>
   <line l="1162"/>
   <line l="2831"/>
   <line l="1071"/>
   <line l="1929"/>
   <line l="1542"/>
   <line l="2889"/>
   <line l="1764"/>
   <line l="1188"/>
   <line l="2493"/>
   <line l="2194"/>
   <line l="1163"/>
   <line l="2299"/>
   <line l="1264"/>
   <line l="2183"/>
   <line l="1047"/>
   <line l="1927"/>
   <line l="1589"/>
   <line l="1269"/>
   <line l="1763"/>
   <line l="1217"/>
   <line l="1476"/>
   <line l="1565"/>
   <line l="2477"/>
   <line l="1577"/>
   <line l="1485"/>
   <line l="2341"/>
   <line l="2656"/>
   <line l="2512"/>
   <line l="2527"/>
   <line l="2528"/>
   <line l="1627"/>
   <line l="1193"/>
   <line l="1582"/>
   <line l="1073"/>
   <line l="2867"/>
   <line l="2345"/>
   <line l="1879"/>
   <line l="1181"/>
   <line l="1336"/>
   <line l="2156"/>
   <line l="1116"/>
   <line l="1459"/>
   <line l="2638"/>
   <line l="2741"/>
   <line l="2411"/>
   <line l="2860"/>
   <line l="1085"/>
   <line l="2116"/>
   <line l="2642"/>
   <line l="1829"/>
   <line l="1661"/>
   <line l="1940"/>
   <line l="2282"/>
   <line l="1268"/>
   <line l="1629"/>
   <line l="2777"/>
   <line l="1656"/>
   <line l="1648"/>
   <line l="1867"/>
   <line l="1054"/>
   <line l="2611"/>
   <line l="2124"/>
   <line l="2049"/>
   <line l="1853"/>
   <line l="1679"/>
   <line l="2035"/>
   <line l="2418"/>
   <line l="1982"/>
   <line l="1765"/>
   <line l="2380"/>
   <line l="1389"/>
   <line l="2570"/>
   <line l="1169"/>
   <line l="1652"/>
   <line l="2665"/>
   <line l="1147"/>
   <line l="2767"/>
   <line l="2423"/>
   <line l="1167"/>
   <line l="1094"/>
   <line l="2511"/>
   <line l="1406"/>
   <line l="2090"/>
   <line l="1531"/>
   <line l="1537"/>
   <line l="1433"/>
   <line l="2417"/>
   <line l="2685"/>
   <line l="2147"/>
   <line l="2046"/>
   <line l="2709"/>
   <line l="1654"/>
   <line l="1286"/>
   <line l="1473"/>
   <line l="1715"/>
   <line l="2895"/>
   <line l="2887"/>
   <line l="1580"/>
   <line l="1468"/>
   <line l="2650"/>
   <line l="2123"/>
   <line l="1788"/>
   <line l="1875"/>
   <line l="2756"/>
   <line l="2898"/>
   <line l="1018"/>
   <line l="2726"/>
   <line l="2238"/>
   <line l="2896"/>
   <line l="2020"/>
   <line l="2554"/>
   <line l="1463"/>
   <line l="1980"/>
   <line l="2884"/>
   <line l="1874"/>
   <line l="1726"/>
   <line l="2310"/>
   <line l="2338"/>
   <line l="1844"/>
   <line l="1496"/>
   <line l="1729"/>
   <line l="2433"/>
   <line l="2601"/>
   <line l="1126"/>
   <line l="1620"/>
   <line l="1941"/>
   <line l="2674"/>
   <line l="2329"/>
   <line l="2502"/>
   <line l="2314"/>
   <line l="1204"/>
   <line l="2352"/>
   <line l="1713"/>
   <line l="2673"/>
   <line l="1721"/>
   <line l="2138"/>
   <line l="2366"/>
   <line l="2584"/>
   <line l="1235"/>
   <line l="1723"/>
   <line l="1140"/>
   <line l="2648"/>
   <line l="2858"/>
   <line l="1505"/>
   <line l="1291"/>
   <line l="1519"/>
   <line l="2189"/>
   <line l="2251"/>
   <line l="2805"/>
   <line l="2649"/>
   <line l="1618"/>
   <line l="1295"/>
   <line l="1202"/>
   <line l="2305"/>
   <line l="2002"/>
   <line l="1965"/>
   <line l="1548"/>
   <line l="2403"/>
   <line l="1155"/>
   <line l="2542"/>
   <line l="2619"/>
   <line l="1211"/>
   <line l="2297"/>
   <line l="1125"/>
   <line l="2761"/>
   <line l="1195"/>
   <line l="2765"/>
   <line l="1770"/>
   <line l="1107"/>
   <line l="1267"/>
   <line l="2557"/>
   <line l="2129"/>
   <line l="1573"/>
   <line l="2569"/>
   <line l="1045"/>
   <line l="1246"/>
   <line l="2539"/>
   <line l="2629"/>
   <line l="2599"/>
   <line l="2172"/>
   <line l="2876"/>
   <line l="2060"/>
   <line l="2276"/>
   <line l="1956"/>
   <line l="1481"/>
   <line l="2480"/>
   <line l="1547"/>
   <line l="1556"/>
   <line l="1794"/>
   <line l="2577"/>
   <line l="2532"/>
   <line l="1427"/>
   <line l="1255"/>
   <line l="1348"/>
   <line l="2643"/>
   <line l="2710"/>
   <line l="2292"/>
   <line l="1722"/>
   <line l="1225"/>
   <line l="2594"/>
   <line l="1032"/>
   <line l="1164"/>
   <line l="1437"/>
   <line l="2736"/>
   <line l="2463"/>
   <line l="1378"/>
   <line l="1131"/>
   <line l="2000"/>
   <line l="1475"/>
   <line l="1245"/>
   <line l="2368"/>
   <line l="1728"/>
   <line l="1718"/>
   <line l="2434"/>
   <line l="2245"/>
   <line l="2242"/>
   <line l="2631"/>
   <line l="1135"/>
   <line l="2416"/>
   <line l="1535"/>
   <line l="2273"/>
   <line l="2662"/>
   <line l="2562"/>
   <line l="1877"/>
   <line l="2448"/>
   <line l="2027"/>
   <line l="1931"/>
   <line l="2283"/>
   <line l="2285"/>
   <line l="2729"/>
   <line l="2460"/>
   <line l="1285"/>
   <line l="1897"/>
   <line l="1278"/>
   <line l="1817"/>
   <line l="2698"/>
   <line l="1611"/>
   <line l="999"/>
   <line l="1873"/>
   <line l="2289"/>
   <line l="2047"/>
   <line l="2778"/>
   <line l="1957"/>
   <line l="1190"/>
   <line l="1103"/>
   <line l="2154"/>
   <line l="2479"/>
   <line l="1926"/>
   <line l="1961"/>
   <line l="1863"/>
   <line l="1025"/>
   <line l="1583"/>
   <line l="2658"/>
   <line l="1993"/>
   <line l="1810"/>
   <line l="2128"/>
   <line l="2374"/>
   <line l="1513"/>
   <line l="2239"/>
   <line l="2413"/>
   <line l="1617"/>
   <line l="1711"/>
   <line l="2333"/>
   <line l="2446"/>
   <line l="2572"/>
   <line l="2886"/>
  </lines>
 </mapping>
</allatori>
